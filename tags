!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1	./runtime/cgo/gcc_386.S	/^1:$/;"	l
1	./runtime/cgo/gcc_arm.S	/^1:$/;"	l
1	./runtime/cgo/gcc_arm64.S	/^1:$/;"	l
1	./runtime/cgo/gcc_ppc64x.S	/^1:$/;"	l
A6	./math/big/arith_amd64.s	/^A6:$/;"	l
ADDR	./cmd/internal/obj/x86/asm6.go	/^					ctxt.Diag("asmins: Zaut sb type ADDR")$/;"	t
ADR	./cmd/internal/obj/arm64/asm7.go	/^func ADR(p uint32, o uint32, rt uint32) uint32 {$/;"	f
AEAD	./crypto/cipher/gcm.go	/^type AEAD interface {$/;"	t
ANDL	./crypto/sha1/sha1block_386.s	/^	ANDL	d, SI; \\$/;"	d
ANDL	./crypto/sha1/sha1block_amd64.s	/^	ANDL	d, R8; \\$/;"	d
ANDL	./crypto/sha1/sha1block_amd64p32.s	/^	ANDL	d, R8; \\$/;"	d
AOP_IRR	./cmd/internal/obj/ppc64/asm9.go	/^func AOP_IRR(op uint32, d uint32, a uint32, simm uint32) uint32 {$/;"	f
AOP_RRR	./cmd/internal/obj/ppc64/asm9.go	/^func AOP_RRR(op uint32, d uint32, a uint32, b uint32) uint32 {$/;"	f
ARM64Suffix	./cmd/asm/internal/arch/arm64.go	/^func ARM64Suffix(prog *obj.Prog, cond string) bool {$/;"	f
ARMConditionCodes	./cmd/asm/internal/arch/arm.go	/^func ARMConditionCodes(prog *obj.Prog, cond string) bool {$/;"	f
ARMMRCOffset	./cmd/asm/internal/arch/arm.go	/^func ARMMRCOffset(op int, cond string, x0, x1, x2, x3, x4, x5 int64) (offset int64, op0 int16, ok bool) {$/;"	f
ARM_BASE	./runtime/sys_linux_arm.s	/^#define ARM_BASE (SYS_BASE + 0x0f0000)$/;"	d
ASSOC	./cmd/yacc/yacc.go	/^func ASSOC(i int) int { return i & 3 }$/;"	f
AT_FDCWD	./runtime/sys_linux_arm64.s	/^#define AT_FDCWD -100$/;"	d
Abs	./cmd/compile/internal/big/float.go	/^func (z *Float) Abs(x *Float) *Float {$/;"	f
Abs	./cmd/compile/internal/big/int.go	/^func (z *Int) Abs(x *Int) *Int {$/;"	f
Abs	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Abs(x *Rat) *Rat {$/;"	f
Abs	./math/abs.go	/^func Abs(x float64) float64$/;"	f
Abs	./math/big/float.go	/^func (z *Float) Abs(x *Float) *Float {$/;"	f
Abs	./math/big/int.go	/^func (z *Int) Abs(x *Int) *Int {$/;"	f
Abs	./math/big/rat.go	/^func (z *Rat) Abs(x *Rat) *Rat {$/;"	f
Abs	./math/cmplx/abs.go	/^func Abs(x complex128) float64 { return math.Hypot(real(x), imag(x)) }$/;"	f
Abs	./path/filepath/path.go	/^func Abs(path string) (string, error) {$/;"	f
AbsFileLine	./cmd/internal/obj/obj.go	/^func (h *LineHist) AbsFileLine(lineno int) (file string, line int) {$/;"	f
Acc	./cmd/compile/internal/big/float.go	/^func (x *Float) Acc() Accuracy {$/;"	f
Acc	./math/big/float.go	/^func (x *Float) Acc() Accuracy {$/;"	f
Accept	./crypto/tls/tls.go	/^func (l *listener) Accept() (c net.Conn, err error) {$/;"	f
Accept	./net/http/httptest/server.go	/^func (hs *historyListener) Accept() (c net.Conn, err error) {$/;"	f
Accept	./net/http/serve_test.go	/^func (l *errorListener) Accept() (c net.Conn, err error) {$/;"	f
Accept	./net/http/serve_test.go	/^func (l *oneConnListener) Accept() (c net.Conn, err error) {$/;"	f
Accept	./net/http/serve_test.go	/^func (l trackLastConnListener) Accept() (c net.Conn, err error) {$/;"	f
Accept	./net/http/server.go	/^func (ln tcpKeepAliveListener) Accept() (c net.Conn, err error) {$/;"	f
Accept	./net/internal/socktest/sys_unix.go	/^func (sw *Switch) Accept(s int) (ns int, sa syscall.Sockaddr, err error) {$/;"	f
Accept	./net/rpc/server.go	/^func (server *Server) Accept(lis net.Listener) {$/;"	f
Accept	./net/rpc/server.go	/^func Accept(lis net.Listener) { DefaultServer.Accept(lis) }$/;"	f
Accept	./net/tcpsock_plan9.go	/^func (l *TCPListener) Accept() (Conn, error) {$/;"	f
Accept	./net/tcpsock_posix.go	/^func (l *TCPListener) Accept() (Conn, error) {$/;"	f
Accept	./net/unixsock_plan9.go	/^func (l *UnixListener) Accept() (Conn, error) {$/;"	f
Accept	./net/unixsock_posix.go	/^func (l *UnixListener) Accept() (c Conn, err error) {$/;"	f
Accept	./syscall/net_nacl.go	/^func Accept(fd int) (newfd int, sa Sockaddr, err error) {$/;"	f
Accept	./syscall/syscall_bsd.go	/^func Accept(fd int) (nfd int, sa Sockaddr, err error) {$/;"	f
Accept	./syscall/syscall_linux.go	/^func Accept(fd int) (nfd int, sa Sockaddr, err error) {$/;"	f
Accept	./syscall/syscall_solaris.go	/^func Accept(fd int) (nfd int, sa Sockaddr, err error) {$/;"	f
Accept	./syscall/syscall_windows.go	/^func Accept(fd Handle) (nfd Handle, sa Sockaddr, err error) { return 0, nil, EWINDOWS }$/;"	f
Accept4	./net/internal/socktest/sys_cloexec.go	/^func (sw *Switch) Accept4(s, flags int) (ns int, sa syscall.Sockaddr, err error) {$/;"	f
Accept4	./syscall/syscall_freebsd.go	/^func Accept4(fd, flags int) (nfd int, sa Sockaddr, err error) {$/;"	f
Accept4	./syscall/syscall_linux.go	/^func Accept4(fd int, flags int) (nfd int, sa Sockaddr, err error) {$/;"	f
AcceptEx	./syscall/zsyscall_windows.go	/^func AcceptEx(ls Handle, as Handle, buf *byte, rxdatalen uint32, laddrlen uint32, raddrlen uint32, recvd *uint32, overlapped *Overlapped) (err error) {$/;"	f
AcceptTCP	./net/tcpsock_plan9.go	/^func (l *TCPListener) AcceptTCP() (*TCPConn, error) {$/;"	f
AcceptTCP	./net/tcpsock_posix.go	/^func (l *TCPListener) AcceptTCP() (*TCPConn, error) {$/;"	f
AcceptUnix	./net/unixsock_plan9.go	/^func (l *UnixListener) AcceptUnix() (*UnixConn, error) {$/;"	f
AcceptUnix	./net/unixsock_posix.go	/^func (l *UnixListener) AcceptUnix() (*UnixConn, error) {$/;"	f
Access	./cmd/internal/obj/util.go	/^func Access(name string, mode int) int {$/;"	f
Access	./cmd/link/internal/ld/util.go	/^func Access(name string, mode int) int {$/;"	f
Access	./syscall/syscall_linux.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_darwin_386.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_darwin_amd64.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_darwin_arm.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_darwin_arm64.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_dragonfly_amd64.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_freebsd_386.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_freebsd_amd64.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_freebsd_arm.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_netbsd_386.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_netbsd_amd64.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_netbsd_arm.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_openbsd_386.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_openbsd_amd64.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_openbsd_arm.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Access	./syscall/zsyscall_solaris_amd64.go	/^func Access(path string, mode uint32) (err error) {$/;"	f
Acct	./syscall/zsyscall_linux_386.go	/^func Acct(path string) (err error) {$/;"	f
Acct	./syscall/zsyscall_linux_amd64.go	/^func Acct(path string) (err error) {$/;"	f
Acct	./syscall/zsyscall_linux_arm.go	/^func Acct(path string) (err error) {$/;"	f
Acct	./syscall/zsyscall_linux_arm64.go	/^func Acct(path string) (err error) {$/;"	f
Acct	./syscall/zsyscall_linux_ppc64.go	/^func Acct(path string) (err error) {$/;"	f
Acct	./syscall/zsyscall_linux_ppc64le.go	/^func Acct(path string) (err error) {$/;"	f
Accuracy	./cmd/compile/internal/big/float.go	/^type Accuracy int8$/;"	t
Accuracy	./math/big/float.go	/^type Accuracy int8$/;"	t
Aconv	./cmd/internal/obj/util.go	/^func Aconv(a int) string {$/;"	f
Acos	./math/asin.go	/^func Acos(x float64) float64$/;"	f
Acos	./math/cmplx/asin.go	/^func Acos(x complex128) complex128 {$/;"	f
Acosh	./math/acosh.go	/^func Acosh(x float64) float64 {$/;"	f
Acosh	./math/cmplx/asin.go	/^func Acosh(x complex128) complex128 {$/;"	f
ActionNode	./text/template/parse/node.go	/^type ActionNode struct {$/;"	t
Add	./cmd/compile/internal/big/float.go	/^func (z *Float) Add(x, y *Float) *Float {$/;"	f
Add	./cmd/compile/internal/big/int.go	/^func (z *Int) Add(x, y *Int) *Int {$/;"	f
Add	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Add(x, y *Rat) *Rat {$/;"	f
Add	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) Add(x1, y1, x2, y2 *big.Int) (*big.Int, *big.Int) {$/;"	f
Add	./crypto/elliptic/p224.go	/^func (p224Curve) Add(bigX1, bigY1, bigX2, bigY2 *big.Int) (x, y *big.Int) {$/;"	f
Add	./expvar/expvar.go	/^func (v *Float) Add(delta float64) {$/;"	f
Add	./expvar/expvar.go	/^func (v *Int) Add(delta int64) {$/;"	f
Add	./expvar/expvar.go	/^func (v *Map) Add(key string, delta int64) {$/;"	f
Add	./go/scanner/errors.go	/^func (p *ErrorList) Add(pos token.Position, msg string) {$/;"	f
Add	./image/geom.go	/^func (p Point) Add(q Point) Point {$/;"	f
Add	./image/geom.go	/^func (r Rectangle) Add(p Point) Rectangle {$/;"	f
Add	./math/big/float.go	/^func (z *Float) Add(x, y *Float) *Float {$/;"	f
Add	./math/big/int.go	/^func (z *Int) Add(x, y *Int) *Int {$/;"	f
Add	./math/big/rat.go	/^func (z *Rat) Add(x, y *Rat) *Rat {$/;"	f
Add	./net/http/header.go	/^func (h Header) Add(key, value string) {$/;"	f
Add	./net/rpc/jsonrpc/all_test.go	/^func (t *Arith) Add(args *Args, reply *Reply) error {$/;"	f
Add	./net/rpc/server_test.go	/^func (t *Arith) Add(args Args, reply *Reply) error {$/;"	f
Add	./net/textproto/header.go	/^func (h MIMEHeader) Add(key, value string) {$/;"	f
Add	./net/url/url.go	/^func (v Values) Add(key, value string) {$/;"	f
Add	./runtime/pprof/pprof.go	/^func (p *Profile) Add(value interface{}, skip int) {$/;"	f
Add	./sync/waitgroup.go	/^func (wg *WaitGroup) Add(delta int) {$/;"	f
Add	./text/template/parse/node.go	/^func (c *ChainNode) Add(field string) {$/;"	f
Add	./time/time.go	/^func (t Time) Add(d Duration) Time {$/;"	f
AddCert	./crypto/x509/cert_pool.go	/^func (s *CertPool) AddCert(cert *Certificate) {$/;"	f
AddCookie	./net/http/request.go	/^func (r *Request) AddCookie(c *Cookie) {$/;"	f
AddDate	./time/time.go	/^func (t Time) AddDate(years int, months int, days int) Time {$/;"	f
AddExtensionType	./mime/type.go	/^func AddExtensionType(ext, typ string) error {$/;"	f
AddFile	./go/token/position.go	/^func (s *FileSet) AddFile(filename string, base, size int) *File {$/;"	f
AddFloat	./expvar/expvar.go	/^func (v *Map) AddFloat(key string, delta float64) {$/;"	f
AddImport	./cmd/internal/obj/obj.go	/^func (ctxt *Link) AddImport(pkg string) {$/;"	f
AddInt32	./sync/atomic/doc.go	/^func AddInt32(addr *int32, delta int32) (new int32)$/;"	f
AddInt64	./sync/atomic/doc.go	/^func AddInt64(addr *int64, delta int64) (new int64)$/;"	f
AddLine	./go/token/position.go	/^func (f *File) AddLine(offset int) {$/;"	f
AddLineInfo	./go/token/position.go	/^func (f *File) AddLineInfo(offset int, filename string, line int) {$/;"	f
AddMethod	./go/types/type.go	/^func (t *Named) AddMethod(m *Func) {$/;"	f
AddParseTree	./html/template/template.go	/^func (t *Template) AddParseTree(name string, tree *parse.Tree) (*Template, error) {$/;"	f
AddParseTree	./text/template/template.go	/^func (t *Template) AddParseTree(name string, tree *parse.Tree) (*Template, error) {$/;"	f
AddSym	./cmd/link/internal/ld/data.go	/^func (p *GCProg) AddSym(s *LSym) {$/;"	f
AddTypes	./debug/dwarf/open.go	/^func (d *Data) AddTypes(name string, types []byte) error {$/;"	f
AddUint32	./sync/atomic/doc.go	/^func AddUint32(addr *uint32, delta uint32) (new uint32)$/;"	f
AddUint64	./sync/atomic/doc.go	/^func AddUint64(addr *uint64, delta uint64) (new uint64)$/;"	f
AddUintptr	./sync/atomic/doc.go	/^func AddUintptr(addr *uintptr, delta uintptr) (new uintptr)$/;"	f
Addaddr	./cmd/link/internal/ld/data.go	/^func Addaddr(ctxt *Link, s *LSym, t *LSym) int64 {$/;"	f
Addaddrplus	./cmd/link/internal/ld/data.go	/^func Addaddrplus(ctxt *Link, s *LSym, t *LSym, add int64) int64 {$/;"	f
Addcall	./cmd/link/internal/amd64/asm.go	/^func Addcall(ctxt *ld.Link, s *ld.LSym, t *ld.LSym) int64 {$/;"	f
Adddynsym	./cmd/link/internal/ld/go.go	/^func Adddynsym(ctxt *Link, s *LSym) {$/;"	f
Addpcrelplus	./cmd/link/internal/ld/data.go	/^func Addpcrelplus(ctxt *Link, s *LSym, t *LSym, add int64) int64 {$/;"	f
Addr	./cmd/internal/obj/link.go	/^type Addr struct {$/;"	t
Addr	./net/http/serve_test.go	/^func (l *errorListener) Addr() net.Addr {$/;"	f
Addr	./net/http/serve_test.go	/^func (l *oneConnListener) Addr() net.Addr {$/;"	f
Addr	./net/net.go	/^type Addr interface {$/;"	t
Addr	./net/tcpsock_plan9.go	/^func (l *TCPListener) Addr() Addr { return l.fd.laddr }$/;"	f
Addr	./net/tcpsock_posix.go	/^func (l *TCPListener) Addr() Addr { return l.fd.laddr }$/;"	f
Addr	./net/unixsock_plan9.go	/^func (l *UnixListener) Addr() Addr { return nil }$/;"	f
Addr	./net/unixsock_posix.go	/^func (l *UnixListener) Addr() Addr { return l.fd.laddr }$/;"	f
Addr	./reflect/value.go	/^func (v Value) Addr() Value {$/;"	f
Addr	./syscall/dll_windows.go	/^func (p *LazyProc) Addr() uintptr {$/;"	f
Addr	./syscall/dll_windows.go	/^func (p *Proc) Addr() uintptr {$/;"	f
AddrError	./net/net.go	/^type AddrError struct {$/;"	t
AddrMode	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type AddrMode uint8$/;"	t
AddrOfTemp	./runtime/race/testdata/regression_test.go	/^func AddrOfTemp() {$/;"	f
AddrT	./runtime/race/testdata/mop_test.go	/^type AddrT struct {$/;"	t
AddrT2	./runtime/race/testdata/mop_test.go	/^type AddrT2 struct {$/;"	t
AddrType	./debug/dwarf/type.go	/^type AddrType struct {$/;"	t
Addrel	./cmd/internal/obj/data.go	/^func Addrel(s *LSym) *Reloc {$/;"	f
Addrel	./cmd/link/internal/ld/data.go	/^func Addrel(s *LSym) *Reloc {$/;"	f
Address	./encoding/xml/example_test.go	/^	type Address struct {$/;"	t
Address	./net/mail/message.go	/^type Address struct {$/;"	t
AddressList	./net/mail/message.go	/^func (h Header) AddressList(key string) ([]*Address, error) {$/;"	f
AddressParser	./net/mail/message.go	/^type AddressParser struct {$/;"	t
AddressSize	./debug/dwarf/entry.go	/^func (r *Reader) AddressSize() int {$/;"	f
AddressSize	./debug/dwarf/typeunit.go	/^func (tur *typeUnitReader) AddressSize() int {$/;"	f
Addressable	./go/types/api.go	/^func (tv TypeAndValue) Addressable() bool {$/;"	f
AddrinfoW	./syscall/ztypes_windows.go	/^type AddrinfoW struct {$/;"	t
Addrs	./net/interface.go	/^func (ifi *Interface) Addrs() ([]Addr, error) {$/;"	f
Addstring	./cmd/link/internal/ld/data.go	/^func Addstring(s *LSym, str string) int64 {$/;"	f
Adduint16	./cmd/link/internal/ld/data.go	/^func Adduint16(ctxt *Link, s *LSym, v uint16) int64 {$/;"	f
Adduint32	./cmd/internal/obj/data.go	/^func Adduint32(ctxt *Link, s *LSym, v uint32) int64 {$/;"	f
Adduint32	./cmd/link/internal/ld/data.go	/^func Adduint32(ctxt *Link, s *LSym, v uint32) int64 {$/;"	f
Adduint64	./cmd/internal/obj/data.go	/^func Adduint64(ctxt *Link, s *LSym, v uint64) int64 {$/;"	f
Adduint64	./cmd/link/internal/ld/data.go	/^func Adduint64(ctxt *Link, s *LSym, v uint64) int64 {$/;"	f
Adduint8	./cmd/link/internal/ld/data.go	/^func Adduint8(ctxt *Link, s *LSym, v uint8) int64 {$/;"	f
Adjtime	./syscall/zsyscall_darwin_386.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_darwin_amd64.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_darwin_arm.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_darwin_arm64.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_dragonfly_amd64.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_freebsd_386.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_freebsd_amd64.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_freebsd_arm.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_netbsd_386.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_netbsd_amd64.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_netbsd_arm.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_openbsd_386.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_openbsd_amd64.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_openbsd_arm.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtime	./syscall/zsyscall_solaris_amd64.go	/^func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {$/;"	f
Adjtimex	./syscall/zsyscall_linux_386.go	/^func Adjtimex(buf *Timex) (state int, err error) {$/;"	f
Adjtimex	./syscall/zsyscall_linux_amd64.go	/^func Adjtimex(buf *Timex) (state int, err error) {$/;"	f
Adjtimex	./syscall/zsyscall_linux_arm.go	/^func Adjtimex(buf *Timex) (state int, err error) {$/;"	f
Adjtimex	./syscall/zsyscall_linux_arm64.go	/^func Adjtimex(buf *Timex) (state int, err error) {$/;"	f
Adjtimex	./syscall/zsyscall_linux_ppc64.go	/^func Adjtimex(buf *Timex) (state int, err error) {$/;"	f
Adjtimex	./syscall/zsyscall_linux_ppc64le.go	/^func Adjtimex(buf *Timex) (state int, err error) {$/;"	f
After	./time/sleep.go	/^func After(d Duration) <-chan Time {$/;"	f
After	./time/time.go	/^func (t Time) After(u Time) bool {$/;"	f
AfterFilter	./net/internal/socktest/switch.go	/^type AfterFilter func(*Status) error$/;"	t
AfterFunc	./time/sleep.go	/^func AfterFunc(d Duration, f func()) *Timer {$/;"	f
Afunclit	./cmd/compile/internal/gc/gsubr.go	/^func Afunclit(a *obj.Addr, n *Node) {$/;"	f
Agen	./cmd/compile/internal/gc/cgen.go	/^func Agen(n *Node, res *Node) {$/;"	f
Agenr	./cmd/compile/internal/gc/cgen.go	/^func Agenr(n *Node, a *Node, res *Node) {$/;"	f
Aggregate	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) Aggregate(inlineFrame, function, filename, linenumber, address bool) error {$/;"	f
Alert	./log/syslog/syslog.go	/^func (w *Writer) Alert(m string) (err error) {$/;"	f
AlgorithmIdentifier	./crypto/x509/pkix/pkix.go	/^type AlgorithmIdentifier struct {$/;"	t
AlgorithmIdentifier	./encoding/asn1/asn1_test.go	/^type AlgorithmIdentifier struct {$/;"	t
Align	./reflect/type.go	/^func (t *rtype) Align() int { return int(t.align) }$/;"	f
Alignof	./cmd/compile/internal/gc/builtin/unsafe.go	/^func Alignof(any) uintptr$/;"	f
Alignof	./go/types/sizes.go	/^func (s *StdSizes) Alignof(T Type) int64 {$/;"	f
Alignof	./unsafe/unsafe.go	/^func Alignof(x ArbitraryType) uintptr$/;"	f
All	./encoding/json/decode_test.go	/^type All struct {$/;"	t
AllocedBytesPerOp	./testing/benchmark.go	/^func (r BenchmarkResult) AllocedBytesPerOp() int64 {$/;"	f
AllocsPerOp	./testing/benchmark.go	/^func (r BenchmarkResult) AllocsPerOp() int64 {$/;"	f
AllocsPerRun	./testing/allocs.go	/^func AllocsPerRun(runs int, f func()) (avg float64) {$/;"	f
Alpha	./image/color/color.go	/^type Alpha struct {$/;"	t
Alpha	./image/image.go	/^type Alpha struct {$/;"	t
Alpha16	./image/color/color.go	/^type Alpha16 struct {$/;"	t
Alpha16	./image/image.go	/^type Alpha16 struct {$/;"	t
Alpha16At	./image/image.go	/^func (p *Alpha16) Alpha16At(x, y int) color.Alpha16 {$/;"	f
AlphaAt	./image/image.go	/^func (p *Alpha) AlphaAt(x, y int) color.Alpha {$/;"	f
AlsoOk	./cmd/vet/testdata/copylock_func.go	/^func (EmbeddedLocker) AlsoOk() {}$/;"	f
AlsoOk	./cmd/vet/testdata/copylock_func.go	/^func (EmbeddedMutexPointer) AlsoOk()   {}$/;"	f
Ambig	./encoding/json/decode_test.go	/^type Ambig struct {$/;"	t
Anames	./cmd/internal/obj/arm/anames.go	/^var Anames = []string{$/;"	v
Anames	./cmd/internal/obj/arm64/anames.go	/^var Anames = []string{$/;"	v
Anames	./cmd/internal/obj/ppc64/anames.go	/^var Anames = []string{$/;"	v
Anames	./cmd/internal/obj/stringer.go	/^var Anames = []string{$/;"	v
Anames	./cmd/internal/obj/util.go	/^var Anames = []string{$/;"	v
Anames	./cmd/internal/obj/x86/anames.go	/^var Anames = []string{$/;"	v
And	./cmd/compile/internal/big/int.go	/^func (z *Int) And(x, y *Int) *Int {$/;"	f
And	./math/big/int.go	/^func (z *Int) And(x, y *Int) *Int {$/;"	f
AndNot	./cmd/compile/internal/big/int.go	/^func (z *Int) AndNot(x, y *Int) *Int {$/;"	f
AndNot	./math/big/int.go	/^func (z *Int) AndNot(x, y *Int) *Int {$/;"	f
Animal	./encoding/json/example_test.go	/^	type Animal struct {$/;"	t
Anonymous	./go/types/object.go	/^func (obj *Var) Anonymous() bool { return obj.anonymous }$/;"	f
AnotherMethod	./reflect/all_test.go	/^func (p Point) AnotherMethod(scale int) int {$/;"	f
AnyHolder	./encoding/xml/marshal_test.go	/^type AnyHolder struct {$/;"	t
AnyOmitTest	./encoding/xml/marshal_test.go	/^type AnyOmitTest struct {$/;"	t
AnySliceTest	./encoding/xml/marshal_test.go	/^type AnySliceTest struct {$/;"	t
AnyTest	./encoding/xml/marshal_test.go	/^type AnyTest struct {$/;"	t
Anyregalloc	./cmd/compile/internal/gc/gsubr.go	/^func Anyregalloc() bool {$/;"	f
Append	./cmd/compile/internal/big/ftoa.go	/^func (x *Float) Append(buf []byte, fmt byte, prec int) []byte {$/;"	f
Append	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) Append(prog []byte, n int64) {$/;"	f
Append	./math/big/ftoa.go	/^func (x *Float) Append(buf []byte, fmt byte, prec int) []byte {$/;"	f
Append	./reflect/value.go	/^func Append(s Value, x ...Value) Value {$/;"	f
AppendBool	./strconv/atob.go	/^func AppendBool(dst []byte, b bool) []byte {$/;"	f
AppendCertsFromPEM	./crypto/x509/cert_pool.go	/^func (s *CertPool) AppendCertsFromPEM(pemCerts []byte) (ok bool) {$/;"	f
AppendFloat	./strconv/ftoa.go	/^func AppendFloat(dst []byte, f float64, fmt byte, prec, bitSize int) []byte {$/;"	f
AppendFormat	./time/format.go	/^func (t Time) AppendFormat(b []byte, layout string) []byte {$/;"	f
AppendInt	./strconv/itoa.go	/^func AppendInt(dst []byte, i int64, base int) []byte {$/;"	f
AppendQuote	./strconv/quote.go	/^func AppendQuote(dst []byte, s string) []byte {$/;"	f
AppendQuoteRune	./strconv/quote.go	/^func AppendQuoteRune(dst []byte, r rune) []byte {$/;"	f
AppendQuoteRuneToASCII	./strconv/quote.go	/^func AppendQuoteRuneToASCII(dst []byte, r rune) []byte {$/;"	f
AppendQuoteToASCII	./strconv/quote.go	/^func AppendQuoteToASCII(dst []byte, s string) []byte {$/;"	f
AppendSlice	./reflect/value.go	/^func AppendSlice(s, t Value) Value {$/;"	f
AppendUint	./strconv/itoa.go	/^func AppendUint(dst []byte, i uint64, base int) []byte {$/;"	f
Appendp	./cmd/internal/obj/ld.go	/^func Appendp(ctxt *Link, q *Prog) *Prog {$/;"	f
ArHdr	./cmd/link/internal/ld/ar.go	/^type ArHdr struct {$/;"	t
ArbitraryType	./unsafe/unsafe.go	/^type ArbitraryType int$/;"	t
Arch	./cmd/asm/internal/arch/arch.go	/^type Arch struct {$/;"	t
Arch	./cmd/compile/internal/gc/go.go	/^type Arch struct {$/;"	t
Arch	./cmd/link/internal/ld/lib.go	/^type Arch struct {$/;"	t
Archive	./cmd/pack/pack.go	/^type Archive struct {$/;"	t
Are	./cmd/internal/obj/stringer.go	/^var Are = regexp.MustCompile(`^\\tA([A-Z0-9]+)`)$/;"	v
Arg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Arg interface {$/;"	t
Arg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Arg interface {$/;"	t
Arg	./cmd/trace/trace.go	/^		type Arg struct {$/;"	t
Arg	./cmd/trace/trace.go	/^	type Arg struct {$/;"	t
Arg	./flag/flag.go	/^func (f *FlagSet) Arg(i int) string {$/;"	f
Arg	./flag/flag.go	/^func Arg(i int) string {$/;"	f
ArgNotPublic	./net/rpc/server_test.go	/^func (t *ArgNotPublic) ArgNotPublic(args *local, reply *Reply) error {$/;"	f
ArgNotPublic	./net/rpc/server_test.go	/^type ArgNotPublic int$/;"	t
ArgServer	./net/http/triv.go	/^func ArgServer(w http.ResponseWriter, req *http.Request) {$/;"	f
Args	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Args [4]Arg$/;"	t
Args	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Args [4]Arg$/;"	t
Args	./flag/flag.go	/^func (f *FlagSet) Args() []string { return f.args }$/;"	f
Args	./flag/flag.go	/^func Args() []string { return CommandLine.args }$/;"	f
Args	./net/rpc/jsonrpc/all_test.go	/^type Args struct {$/;"	t
Args	./net/rpc/server.go	/^		type Args struct {$/;"	t
Args	./net/rpc/server_test.go	/^type Args struct {$/;"	t
Args	./os/proc.go	/^var Args []string$/;"	v
ArgsSizeUnknown	./runtime/funcdata.h	/^#define ArgsSizeUnknown /;"	d
Argsize	./cmd/compile/internal/gc/align.go	/^func Argsize(t *Type) int {$/;"	f
Arith	./net/rpc/jsonrpc/all_test.go	/^type Arith int$/;"	t
Arith	./net/rpc/server.go	/^		type Arith int$/;"	t
Arith	./net/rpc/server.go	/^	Here is a simple example.  A server wishes to export an object of type Arith:$/;"	t
Arith	./net/rpc/server_test.go	/^type Arith int$/;"	t
ArithAddResp	./net/rpc/jsonrpc/all_test.go	/^type ArithAddResp struct {$/;"	t
Array	./go/types/type.go	/^type Array struct {$/;"	t
ArrayOf	./reflect/type.go	/^func ArrayOf(count int, elem Type) Type {$/;"	f
ArrayStruct	./encoding/gob/gobencdec_test.go	/^type ArrayStruct struct {$/;"	t
ArrayType	./debug/dwarf/type.go	/^type ArrayType struct {$/;"	t
Array_array	./cmd/compile/internal/gc/go.go	/^var Array_array int \/\/ runtime offsetof(Array,array) - same for String$/;"	v
Array_cap	./cmd/compile/internal/gc/go.go	/^var Array_cap int \/\/ runtime offsetof(Array,cap)$/;"	v
Array_nel	./cmd/compile/internal/gc/go.go	/^var Array_nel int \/\/ runtime offsetof(Array,nel) - same for String$/;"	v
Asin	./math/asin.go	/^func Asin(x float64) float64$/;"	f
Asin	./math/cmplx/asin.go	/^func Asin(x complex128) complex128 {$/;"	f
Asinh	./math/asinh.go	/^func Asinh(x float64) float64 {$/;"	f
Asinh	./math/cmplx/asin.go	/^func Asinh(x complex128) complex128 {$/;"	f
Asmbelf	./cmd/link/internal/ld/elf.go	/^func Asmbelf(symo int64) {$/;"	f
Asmbelfsetup	./cmd/link/internal/ld/elf.go	/^func Asmbelfsetup() {$/;"	f
Asmbmacho	./cmd/link/internal/ld/macho.go	/^func Asmbmacho() {$/;"	f
Asmbpe	./cmd/link/internal/ld/pe.go	/^func Asmbpe() {$/;"	f
Asmelfsym	./cmd/link/internal/ld/symtab.go	/^func Asmelfsym() {$/;"	f
Asmplan9sym	./cmd/link/internal/ld/symtab.go	/^func Asmplan9sym() {$/;"	f
AssertableTo	./go/types/api.go	/^func AssertableTo(V *Interface, T Type) bool {$/;"	f
Assign	./strconv/decimal.go	/^func (a *decimal) Assign(v uint64) {$/;"	f
AssignComputeBounds	./strconv/extfloat.go	/^func (f *extFloat) AssignComputeBounds(mant uint64, exp int, neg bool, flt *floatInfo) (lower, upper extFloat) {$/;"	f
AssignDecimal	./strconv/extfloat.go	/^func (f *extFloat) AssignDecimal(mantissa uint64, exp10 int, neg bool, trunc bool, flt *floatInfo) (ok bool) {$/;"	f
Assignable	./go/types/api.go	/^func (tv TypeAndValue) Assignable() bool {$/;"	f
AssignableTo	./go/types/api.go	/^func AssignableTo(V, T Type) bool {$/;"	f
AssignableTo	./reflect/type.go	/^func (t *rtype) AssignableTo(u Type) bool {$/;"	f
At	./cmd/internal/obj/obj.go	/^func (h *LineHist) At(lineno int) *LineStack {$/;"	f
At	./encoding/asn1/asn1.go	/^func (b BitString) At(i int) int {$/;"	f
At	./go/types/methodset.go	/^func (s *MethodSet) At(i int) *Selection { return s.list[i] }$/;"	f
At	./go/types/type.go	/^func (t *Tuple) At(i int) *Var { return t.vars[i] }$/;"	f
At	./image/geom.go	/^func (r Rectangle) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *Alpha) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *Alpha16) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *CMYK) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *Gray) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *Gray16) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *NRGBA) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *NRGBA64) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *Paletted) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *RGBA) At(x, y int) color.Color {$/;"	f
At	./image/image.go	/^func (p *RGBA64) At(x, y int) color.Color {$/;"	f
At	./image/names.go	/^func (c *Uniform) At(x, y int) color.Color { return c.C }$/;"	f
At	./image/ycbcr.go	/^func (p *YCbCr) At(x, y int) color.Color {$/;"	f
AtExit	./cmd/compile/internal/gc/util.go	/^func AtExit(f func()) {$/;"	f
AtExit	./cmd/link/internal/ld/util.go	/^func AtExit(f func()) {$/;"	f
Atan	./math/atan.go	/^func Atan(x float64) float64$/;"	f
Atan	./math/cmplx/asin.go	/^func Atan(x complex128) complex128 {$/;"	f
Atan2	./math/atan2.go	/^func Atan2(y, x float64) float64$/;"	f
Atanh	./math/atanh.go	/^func Atanh(x float64) float64 {$/;"	f
Atanh	./math/cmplx/asin.go	/^func Atanh(x complex128) complex128 {$/;"	f
Atime	./os/export_test.go	/^var Atime = atime$/;"	v
Atoi	./cmd/internal/obj/util.go	/^func Atoi(s string) int {$/;"	f
Atoi	./strconv/atoi.go	/^func Atoi(s string) (i int, err error) {$/;"	f
AtomicTests	./cmd/vet/testdata/atomic.go	/^func AtomicTests() {$/;"	f
AttachLsf	./syscall/lsf_linux.go	/^func AttachLsf(fd int, i []SockFilter) error {$/;"	f
Attr	./debug/dwarf/const.go	/^type Attr uint32$/;"	t
Attr	./encoding/xml/xml.go	/^type Attr struct {$/;"	t
AttrField	./debug/dwarf/entry.go	/^func (e *Entry) AttrField(a Attr) *Field {$/;"	f
AttrParent	./encoding/xml/marshal_test.go	/^type AttrParent struct {$/;"	t
AttrTest	./encoding/xml/marshal_test.go	/^type AttrTest struct {$/;"	t
AttributeTypeAndValue	./crypto/x509/pkix/pkix.go	/^type AttributeTypeAndValue struct {$/;"	t
AttributeTypeAndValue	./encoding/asn1/asn1_test.go	/^type AttributeTypeAndValue struct {$/;"	t
AttributeTypeAndValueSET	./crypto/x509/pkix/pkix.go	/^type AttributeTypeAndValueSET struct {$/;"	t
Auth	./net/smtp/auth.go	/^type Auth interface {$/;"	t
Auth	./net/smtp/smtp.go	/^func (c *Client) Auth(a Auth) error {$/;"	f
Auto	./cmd/internal/obj/link.go	/^type Auto struct {$/;"	t
Auto	./cmd/link/internal/ld/link.go	/^type Auto struct {$/;"	t
Available	./bufio/bufio.go	/^func (b *Writer) Available() int { return len(b.buf) - b.n }$/;"	f
Available	./crypto/crypto.go	/^func (h Hash) Available() bool {$/;"	f
Await	./syscall/syscall_plan9.go	/^func Await(w *Waitmsg) (err error) {$/;"	f
AzeriCase	./unicode/casetables.go	/^var AzeriCase SpecialCase = _TurkishCase$/;"	v
B1	./reflect/all_test.go	/^type B1 struct {$/;"	t
BGE	./runtime/vlop_arm.s	/^	BGE 	d0$/;"	d
BGE	./runtime/vlop_arm.s	/^	BGE 	d1$/;"	d
BGE	./runtime/vlop_arm.s	/^	BGE 	d2$/;"	d
BP	./crypto/sha1/sha1block_amd64p32.s	/^#define BP R13 \/* keep diff from sha1block_amd64.s small *\/$/;"	d
BR0	./runtime/memmove_arm.s	/^#define BR0	R0					\/* shared with TS *\/$/;"	d
BR1	./runtime/memmove_arm.s	/^#define BR1	R1$/;"	d
BR2	./runtime/memmove_arm.s	/^#define BR2	R2$/;"	d
BR3	./runtime/memmove_arm.s	/^#define BR3	R3$/;"	d
BSWAPL	./runtime/asm_386.s	/^	BSWAPL	DI$/;"	d
BSWAPL	./runtime/sys_nacl_amd64p32.s	/^	BSWAPL DX$/;"	d
BSWAPQ	./runtime/asm_amd64.s	/^	BSWAPQ	DI$/;"	d
BSWAPQ	./runtime/asm_amd64p32.s	/^	BSWAPQ	DI$/;"	d
BW0	./runtime/memmove_arm.s	/^#define BW0	R1$/;"	d
BW1	./runtime/memmove_arm.s	/^#define BW1	R2$/;"	d
BW2	./runtime/memmove_arm.s	/^#define BW2	R3$/;"	d
BW3	./runtime/memmove_arm.s	/^#define BW3	R4$/;"	d
BYTE	./debug/gosym/pclinetest.asm		l
BYTE	./debug/gosym/pclinetest.asm		l
BYTE	./debug/gosym/pclinetest.asm		l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm		l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1; BYTE $1; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $1;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $255;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $2; BYTE $4; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $2;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $32; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $3; BYTE $3; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $4; BYTE $0;$/;"	l
BYTE	./debug/gosym/pclinetest.asm	/^BYTE $4; BYTE $3; BYTE $0; BYTE $0; BYTE $0;$/;"	l
Back	./container/list/list.go	/^func (l *List) Back() *Element {$/;"	f
Bad	./cmd/vet/main.go	/^func (f *File) Bad(pos token.Pos, args ...interface{}) {$/;"	f
Bad	./cmd/vet/testdata/copylock_func.go	/^func (L0) Bad() {} \/\/ ERROR "Bad passes Lock by value: testdata.L0 contains testdata.L1 contains testdata.L2"$/;"	f
Bad	./cmd/vet/testdata/copylock_func.go	/^func (LocalMutex) Bad() {} \/\/ WANTED: An error here :($/;"	f
Bad	./cmd/vet/testdata/copylock_func.go	/^func (LocalOnce) Bad() {} \/\/ ERROR "Bad passes Lock by value: testdata.LocalOnce contains sync.Mutex"$/;"	f
Bad	./cmd/vet/testdata/copylock_func.go	/^func Bad(CustomLock) {} \/\/ ERROR "Bad passes Lock by value: testdata.CustomLock"$/;"	f
BadAttr	./encoding/xml/marshal_test.go	/^type BadAttr struct {$/;"	t
BadFunc	./cmd/vet/testdata/copylock_func.go	/^func BadFunc(EmbeddedRWMutex)    {} \/\/ ERROR "BadFunc passes Lock by value: testdata.EmbeddedRWMutex"$/;"	f
BadFunc	./cmd/vet/testdata/copylock_func.go	/^func BadFunc(FieldMutex, int) {} \/\/ ERROR "BadFunc passes Lock by value: testdata.FieldMutex contains sync.Mutex"$/;"	f
BadFunc	./cmd/vet/testdata/copylock_func.go	/^func BadFunc(sync.Mutex) {} \/\/ ERROR "BadFunc passes Lock by value: sync.Mutex"$/;"	f
BadHop	./cmd/api/testdata/src/pkg/p3/p3.go	/^func BadHop(i, j, k int) (l, m bool, n, o *ThirdBase, err error)$/;"	f
BadMeth	./cmd/vet/testdata/copylock_func.go	/^func (EmbeddedRWMutex) BadMeth() {} \/\/ ERROR "BadMeth passes Lock by value: testdata.EmbeddedRWMutex"$/;"	f
BadMeth	./cmd/vet/testdata/copylock_func.go	/^func (FieldMutex) BadMeth()   {} \/\/ ERROR "BadMeth passes Lock by value: testdata.FieldMutex contains sync.Mutex"$/;"	f
BadPathEmbeddedA	./encoding/xml/read_test.go	/^type BadPathEmbeddedA struct {$/;"	t
BadPathEmbeddedB	./encoding/xml/read_test.go	/^type BadPathEmbeddedB struct {$/;"	t
BadPathTestA	./encoding/xml/read_test.go	/^type BadPathTestA struct {$/;"	t
BadPathTestB	./encoding/xml/read_test.go	/^type BadPathTestB struct {$/;"	t
BadPathTestC	./encoding/xml/read_test.go	/^type BadPathTestC struct {$/;"	t
BadPathTestD	./encoding/xml/read_test.go	/^type BadPathTestD struct {$/;"	t
BadRead	./cmd/vet/shadow.go	/^	func BadRead(f *os.File, buf []byte) error {$/;"	f
BadRet	./cmd/vet/testdata/copylock_func.go	/^func BadRet() EmbeddedRWMutex    {} \/\/ ERROR "BadRet returns Lock by value: testdata.EmbeddedRWMutex"$/;"	f
BadRet	./cmd/vet/testdata/copylock_func.go	/^func BadRet() sync.Mutex {} \/\/ ERROR "BadRet returns Lock by value: sync.Mutex"$/;"	f
BadStructLiteralUsedInTests	./cmd/vet/testdata/composite.go	/^var BadStructLiteralUsedInTests = flag.Flag{ \/\/ ERROR "unkeyed fields"$/;"	v
Badf	./cmd/vet/main.go	/^func (f *File) Badf(pos token.Pos, format string, args ...interface{}) {$/;"	f
Bar	./cmd/api/testdata/src/pkg/p1/p1.go	/^func Bar(x int8, y int16, z int64)                  {}$/;"	f
Bar	./cmd/compile/internal/gc/fmt.go	/^\/\/			'l' (only in Error mode) print "foo (type Bar)"$/;"	t
Bar	./cmd/compile/internal/gc/fmt.go	/^\/\/	%lN		"foo (type Bar)" for error messages$/;"	t
Bar	./encoding/gob/type_test.go	/^type Bar struct {$/;"	t
Bar	./runtime/race/testdata/mop_test.go	/^func (b Base) Bar() int {$/;"	f
Bar1	./cmd/api/testdata/src/pkg/p1/p1.go	/^func Bar1(x int8, y int16, z int64) uint64          {}$/;"	f
Bar2	./cmd/api/testdata/src/pkg/p1/p1.go	/^func Bar2(x int8, y int16, z int64) (uint8, uint64) {}$/;"	f
BarE	./cmd/api/testdata/src/pkg/p1/p1.go	/^func BarE() Error                                   {}$/;"	f
Base	./cmd/pprof/pprof.go	/^func (f *file) Base() uint64 {$/;"	f
Base	./go/token/position.go	/^func (f *File) Base() int {$/;"	f
Base	./go/token/position.go	/^func (s *FileSet) Base() int {$/;"	f
Base	./path/filepath/path.go	/^func Base(path string) string {$/;"	f
Base	./path/path.go	/^func Base(path string) string {$/;"	f
Base	./runtime/race/testdata/mop_test.go	/^type Base int$/;"	t
BaseName	./debug/gosym/symtab.go	/^func (s *Sym) BaseName() string {$/;"	f
Basic	./debug/dwarf/type.go	/^func (b *BasicType) Basic() *BasicType { return b }$/;"	f
Basic	./go/types/type.go	/^type Basic struct {$/;"	t
Basic	./reflect/all_test.go	/^type Basic struct {$/;"	t
BasicAuth	./net/http/request.go	/^func (r *Request) BasicAuth() (username, password string, ok bool) {$/;"	f
BasicBlock	./cmd/compile/internal/gc/plive.go	/^type BasicBlock struct {$/;"	t
BasicInfo	./go/types/type.go	/^type BasicInfo int$/;"	t
BasicInterfaceItem	./encoding/gob/codec_test.go	/^type BasicInterfaceItem struct {$/;"	t
BasicKind	./go/types/type.go	/^type BasicKind int$/;"	t
BasicType	./debug/dwarf/type.go	/^type BasicType struct {$/;"	t
Bconv	./cmd/compile/internal/gc/mparith2.go	/^func Bconv(xval *Mpint, flag int) string {$/;"	f
Be16	./cmd/link/internal/ld/lib.go	/^func Be16(b []byte) uint16 {$/;"	f
Be32	./cmd/link/internal/ld/lib.go	/^func Be32(b []byte) uint32 {$/;"	f
Be64	./cmd/link/internal/ld/lib.go	/^func Be64(b []byte) uint64 {$/;"	f
Before	./time/time.go	/^func (t Time) Before(u Time) bool {$/;"	f
Begin	./database/sql/fakedb_test.go	/^func (c *fakeConn) Begin() (driver.Tx, error) {$/;"	f
Begin	./database/sql/sql.go	/^func (db *DB) Begin() (*Tx, error) {$/;"	f
Bench	./encoding/gob/timing_test.go	/^		t.Fatalf("mallocs per decode of type Bench: %v; wanted 4\\n", allocs)$/;"	t
Bench	./encoding/gob/timing_test.go	/^		t.Fatalf("mallocs per encode of type Bench: %v; wanted 0\\n", allocs)$/;"	t
Bench	./encoding/gob/timing_test.go	/^type Bench struct {$/;"	t
BenchSetType	./runtime/export_test.go	/^func BenchSetType(n int, x interface{}) {$/;"	f
Benchmark	./go/doc/testdata/benchmark.go	/^func Benchmark(f func(b *B)) BenchmarkResult {$/;"	f
Benchmark	./testing/benchmark.go	/^func Benchmark(f func(b *B)) BenchmarkResult {$/;"	f
Benchmark3PrimeRSA2048Decrypt	./crypto/rsa/rsa_test.go	/^func Benchmark3PrimeRSA2048Decrypt(b *testing.B) {$/;"	f
BenchmarkAESCBCDecrypt1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESCBCDecrypt1K(b *testing.B) {$/;"	f
BenchmarkAESCBCEncrypt1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESCBCEncrypt1K(b *testing.B) {$/;"	f
BenchmarkAESCFBDecrypt1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESCFBDecrypt1K(b *testing.B) {$/;"	f
BenchmarkAESCFBEncrypt1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESCFBEncrypt1K(b *testing.B) {$/;"	f
BenchmarkAESCTR1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESCTR1K(b *testing.B) {$/;"	f
BenchmarkAESGCMOpen1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESGCMOpen1K(b *testing.B) {$/;"	f
BenchmarkAESGCMSeal1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESGCMSeal1K(b *testing.B) {$/;"	f
BenchmarkAESOFB1K	./crypto/cipher/benchmark_test.go	/^func BenchmarkAESOFB1K(b *testing.B) {$/;"	f
BenchmarkAbs	./math/all_test.go	/^func BenchmarkAbs(b *testing.B) {$/;"	f
BenchmarkAbs	./math/cmplx/cmath_test.go	/^func BenchmarkAbs(b *testing.B) {$/;"	f
BenchmarkAcos	./math/all_test.go	/^func BenchmarkAcos(b *testing.B) {$/;"	f
BenchmarkAcos	./math/cmplx/cmath_test.go	/^func BenchmarkAcos(b *testing.B) {$/;"	f
BenchmarkAcosh	./math/all_test.go	/^func BenchmarkAcosh(b *testing.B) {$/;"	f
BenchmarkAcosh	./math/cmplx/cmath_test.go	/^func BenchmarkAcosh(b *testing.B) {$/;"	f
BenchmarkAddMulVVW_1	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_1(b *testing.B)   { benchmarkAddMulVVW(b, 1) }$/;"	f
BenchmarkAddMulVVW_1	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_1(b *testing.B)   { benchmarkAddMulVVW(b, 1) }$/;"	f
BenchmarkAddMulVVW_1e1	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_1e1(b *testing.B) { benchmarkAddMulVVW(b, 1e1) }$/;"	f
BenchmarkAddMulVVW_1e1	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_1e1(b *testing.B) { benchmarkAddMulVVW(b, 1e1) }$/;"	f
BenchmarkAddMulVVW_1e2	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_1e2(b *testing.B) { benchmarkAddMulVVW(b, 1e2) }$/;"	f
BenchmarkAddMulVVW_1e2	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_1e2(b *testing.B) { benchmarkAddMulVVW(b, 1e2) }$/;"	f
BenchmarkAddMulVVW_1e3	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_1e3(b *testing.B) { benchmarkAddMulVVW(b, 1e3) }$/;"	f
BenchmarkAddMulVVW_1e3	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_1e3(b *testing.B) { benchmarkAddMulVVW(b, 1e3) }$/;"	f
BenchmarkAddMulVVW_1e4	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_1e4(b *testing.B) { benchmarkAddMulVVW(b, 1e4) }$/;"	f
BenchmarkAddMulVVW_1e4	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_1e4(b *testing.B) { benchmarkAddMulVVW(b, 1e4) }$/;"	f
BenchmarkAddMulVVW_1e5	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_1e5(b *testing.B) { benchmarkAddMulVVW(b, 1e5) }$/;"	f
BenchmarkAddMulVVW_1e5	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_1e5(b *testing.B) { benchmarkAddMulVVW(b, 1e5) }$/;"	f
BenchmarkAddMulVVW_2	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_2(b *testing.B)   { benchmarkAddMulVVW(b, 2) }$/;"	f
BenchmarkAddMulVVW_2	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_2(b *testing.B)   { benchmarkAddMulVVW(b, 2) }$/;"	f
BenchmarkAddMulVVW_3	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_3(b *testing.B)   { benchmarkAddMulVVW(b, 3) }$/;"	f
BenchmarkAddMulVVW_3	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_3(b *testing.B)   { benchmarkAddMulVVW(b, 3) }$/;"	f
BenchmarkAddMulVVW_4	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_4(b *testing.B)   { benchmarkAddMulVVW(b, 4) }$/;"	f
BenchmarkAddMulVVW_4	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_4(b *testing.B)   { benchmarkAddMulVVW(b, 4) }$/;"	f
BenchmarkAddMulVVW_5	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddMulVVW_5(b *testing.B)   { benchmarkAddMulVVW(b, 5) }$/;"	f
BenchmarkAddMulVVW_5	./math/big/arith_test.go	/^func BenchmarkAddMulVVW_5(b *testing.B)   { benchmarkAddMulVVW(b, 5) }$/;"	f
BenchmarkAddVV_1	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_1(b *testing.B)   { benchmarkFunVV(b, addVV, 1) }$/;"	f
BenchmarkAddVV_1	./math/big/arith_test.go	/^func BenchmarkAddVV_1(b *testing.B)   { benchmarkFunVV(b, addVV, 1) }$/;"	f
BenchmarkAddVV_1e1	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_1e1(b *testing.B) { benchmarkFunVV(b, addVV, 1e1) }$/;"	f
BenchmarkAddVV_1e1	./math/big/arith_test.go	/^func BenchmarkAddVV_1e1(b *testing.B) { benchmarkFunVV(b, addVV, 1e1) }$/;"	f
BenchmarkAddVV_1e2	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_1e2(b *testing.B) { benchmarkFunVV(b, addVV, 1e2) }$/;"	f
BenchmarkAddVV_1e2	./math/big/arith_test.go	/^func BenchmarkAddVV_1e2(b *testing.B) { benchmarkFunVV(b, addVV, 1e2) }$/;"	f
BenchmarkAddVV_1e3	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_1e3(b *testing.B) { benchmarkFunVV(b, addVV, 1e3) }$/;"	f
BenchmarkAddVV_1e3	./math/big/arith_test.go	/^func BenchmarkAddVV_1e3(b *testing.B) { benchmarkFunVV(b, addVV, 1e3) }$/;"	f
BenchmarkAddVV_1e4	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_1e4(b *testing.B) { benchmarkFunVV(b, addVV, 1e4) }$/;"	f
BenchmarkAddVV_1e4	./math/big/arith_test.go	/^func BenchmarkAddVV_1e4(b *testing.B) { benchmarkFunVV(b, addVV, 1e4) }$/;"	f
BenchmarkAddVV_1e5	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_1e5(b *testing.B) { benchmarkFunVV(b, addVV, 1e5) }$/;"	f
BenchmarkAddVV_1e5	./math/big/arith_test.go	/^func BenchmarkAddVV_1e5(b *testing.B) { benchmarkFunVV(b, addVV, 1e5) }$/;"	f
BenchmarkAddVV_2	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_2(b *testing.B)   { benchmarkFunVV(b, addVV, 2) }$/;"	f
BenchmarkAddVV_2	./math/big/arith_test.go	/^func BenchmarkAddVV_2(b *testing.B)   { benchmarkFunVV(b, addVV, 2) }$/;"	f
BenchmarkAddVV_3	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_3(b *testing.B)   { benchmarkFunVV(b, addVV, 3) }$/;"	f
BenchmarkAddVV_3	./math/big/arith_test.go	/^func BenchmarkAddVV_3(b *testing.B)   { benchmarkFunVV(b, addVV, 3) }$/;"	f
BenchmarkAddVV_4	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_4(b *testing.B)   { benchmarkFunVV(b, addVV, 4) }$/;"	f
BenchmarkAddVV_4	./math/big/arith_test.go	/^func BenchmarkAddVV_4(b *testing.B)   { benchmarkFunVV(b, addVV, 4) }$/;"	f
BenchmarkAddVV_5	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVV_5(b *testing.B)   { benchmarkFunVV(b, addVV, 5) }$/;"	f
BenchmarkAddVV_5	./math/big/arith_test.go	/^func BenchmarkAddVV_5(b *testing.B)   { benchmarkFunVV(b, addVV, 5) }$/;"	f
BenchmarkAddVW_1	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_1(b *testing.B)   { benchmarkFunVW(b, addVW, 1) }$/;"	f
BenchmarkAddVW_1	./math/big/arith_test.go	/^func BenchmarkAddVW_1(b *testing.B)   { benchmarkFunVW(b, addVW, 1) }$/;"	f
BenchmarkAddVW_1e1	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_1e1(b *testing.B) { benchmarkFunVW(b, addVW, 1e1) }$/;"	f
BenchmarkAddVW_1e1	./math/big/arith_test.go	/^func BenchmarkAddVW_1e1(b *testing.B) { benchmarkFunVW(b, addVW, 1e1) }$/;"	f
BenchmarkAddVW_1e2	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_1e2(b *testing.B) { benchmarkFunVW(b, addVW, 1e2) }$/;"	f
BenchmarkAddVW_1e2	./math/big/arith_test.go	/^func BenchmarkAddVW_1e2(b *testing.B) { benchmarkFunVW(b, addVW, 1e2) }$/;"	f
BenchmarkAddVW_1e3	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_1e3(b *testing.B) { benchmarkFunVW(b, addVW, 1e3) }$/;"	f
BenchmarkAddVW_1e3	./math/big/arith_test.go	/^func BenchmarkAddVW_1e3(b *testing.B) { benchmarkFunVW(b, addVW, 1e3) }$/;"	f
BenchmarkAddVW_1e4	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_1e4(b *testing.B) { benchmarkFunVW(b, addVW, 1e4) }$/;"	f
BenchmarkAddVW_1e4	./math/big/arith_test.go	/^func BenchmarkAddVW_1e4(b *testing.B) { benchmarkFunVW(b, addVW, 1e4) }$/;"	f
BenchmarkAddVW_1e5	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_1e5(b *testing.B) { benchmarkFunVW(b, addVW, 1e5) }$/;"	f
BenchmarkAddVW_1e5	./math/big/arith_test.go	/^func BenchmarkAddVW_1e5(b *testing.B) { benchmarkFunVW(b, addVW, 1e5) }$/;"	f
BenchmarkAddVW_2	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_2(b *testing.B)   { benchmarkFunVW(b, addVW, 2) }$/;"	f
BenchmarkAddVW_2	./math/big/arith_test.go	/^func BenchmarkAddVW_2(b *testing.B)   { benchmarkFunVW(b, addVW, 2) }$/;"	f
BenchmarkAddVW_3	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_3(b *testing.B)   { benchmarkFunVW(b, addVW, 3) }$/;"	f
BenchmarkAddVW_3	./math/big/arith_test.go	/^func BenchmarkAddVW_3(b *testing.B)   { benchmarkFunVW(b, addVW, 3) }$/;"	f
BenchmarkAddVW_4	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_4(b *testing.B)   { benchmarkFunVW(b, addVW, 4) }$/;"	f
BenchmarkAddVW_4	./math/big/arith_test.go	/^func BenchmarkAddVW_4(b *testing.B)   { benchmarkFunVW(b, addVW, 4) }$/;"	f
BenchmarkAddVW_5	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkAddVW_5(b *testing.B)   { benchmarkFunVW(b, addVW, 5) }$/;"	f
BenchmarkAddVW_5	./math/big/arith_test.go	/^func BenchmarkAddVW_5(b *testing.B)   { benchmarkFunVW(b, addVW, 5) }$/;"	f
BenchmarkAdler32KB	./hash/adler32/adler32_test.go	/^func BenchmarkAdler32KB(b *testing.B) {$/;"	f
BenchmarkAfter	./time/sleep_test.go	/^func BenchmarkAfter(b *testing.B) {$/;"	f
BenchmarkAfterFunc	./time/sleep_test.go	/^func BenchmarkAfterFunc(b *testing.B) {$/;"	f
BenchmarkAll	./cmd/api/goapi_test.go	/^func BenchmarkAll(b *testing.B) {$/;"	f
BenchmarkAllocation	./runtime/gc_test.go	/^func BenchmarkAllocation(b *testing.B) {$/;"	f
BenchmarkAnchoredLiteralLongNonMatch	./regexp/all_test.go	/^func BenchmarkAnchoredLiteralLongNonMatch(b *testing.B) {$/;"	f
BenchmarkAnchoredLiteralShortNonMatch	./regexp/all_test.go	/^func BenchmarkAnchoredLiteralShortNonMatch(b *testing.B) {$/;"	f
BenchmarkAnchoredLongMatch	./regexp/all_test.go	/^func BenchmarkAnchoredLongMatch(b *testing.B) {$/;"	f
BenchmarkAnchoredShortMatch	./regexp/all_test.go	/^func BenchmarkAnchoredShortMatch(b *testing.B) {$/;"	f
BenchmarkAppend	./runtime/append_test.go	/^func BenchmarkAppend(b *testing.B) {$/;"	f
BenchmarkAppend15Bytes	./runtime/append_test.go	/^func BenchmarkAppend15Bytes(b *testing.B) {$/;"	f
BenchmarkAppend16Bytes	./runtime/append_test.go	/^func BenchmarkAppend16Bytes(b *testing.B) {$/;"	f
BenchmarkAppend1Byte	./runtime/append_test.go	/^func BenchmarkAppend1Byte(b *testing.B) {$/;"	f
BenchmarkAppend32Bytes	./runtime/append_test.go	/^func BenchmarkAppend32Bytes(b *testing.B) {$/;"	f
BenchmarkAppend4Bytes	./runtime/append_test.go	/^func BenchmarkAppend4Bytes(b *testing.B) {$/;"	f
BenchmarkAppend7Bytes	./runtime/append_test.go	/^func BenchmarkAppend7Bytes(b *testing.B) {$/;"	f
BenchmarkAppend8Bytes	./runtime/append_test.go	/^func BenchmarkAppend8Bytes(b *testing.B) {$/;"	f
BenchmarkAppendFloat	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat(b *testing.B)        { benchmarkAppendFloat(b, 339.7784, 'g', -1, 64) }$/;"	f
BenchmarkAppendFloat32ExactFraction	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat32ExactFraction(b *testing.B) { benchmarkAppendFloat(b, 3.375, 'g', -1, 32) }$/;"	f
BenchmarkAppendFloat32Exp	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat32Exp(b *testing.B)           { benchmarkAppendFloat(b, -5.09e25, 'g', -1, 32) }$/;"	f
BenchmarkAppendFloat32Integer	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat32Integer(b *testing.B)       { benchmarkAppendFloat(b, 33909, 'g', -1, 32) }$/;"	f
BenchmarkAppendFloat32NegExp	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat32NegExp(b *testing.B)        { benchmarkAppendFloat(b, -5.11e-25, 'g', -1, 32) }$/;"	f
BenchmarkAppendFloat32Point	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat32Point(b *testing.B)         { benchmarkAppendFloat(b, 339.7784, 'g', -1, 32) }$/;"	f
BenchmarkAppendFloat64Fixed1	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat64Fixed1(b *testing.B) { benchmarkAppendFloat(b, 123456, 'e', 3, 64) }$/;"	f
BenchmarkAppendFloat64Fixed2	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat64Fixed2(b *testing.B) { benchmarkAppendFloat(b, 123.456, 'e', 3, 64) }$/;"	f
BenchmarkAppendFloat64Fixed3	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat64Fixed3(b *testing.B) { benchmarkAppendFloat(b, 1.23456e+78, 'e', 3, 64) }$/;"	f
BenchmarkAppendFloat64Fixed4	./strconv/ftoa_test.go	/^func BenchmarkAppendFloat64Fixed4(b *testing.B) { benchmarkAppendFloat(b, 1.23456e-78, 'e', 3, 64) }$/;"	f
BenchmarkAppendFloatBig	./strconv/ftoa_test.go	/^func BenchmarkAppendFloatBig(b *testing.B) {$/;"	f
BenchmarkAppendFloatBinaryExp	./strconv/ftoa_test.go	/^func BenchmarkAppendFloatBinaryExp(b *testing.B) { benchmarkAppendFloat(b, -1, 'b', -1, 64) }$/;"	f
BenchmarkAppendFloatDecimal	./strconv/ftoa_test.go	/^func BenchmarkAppendFloatDecimal(b *testing.B) { benchmarkAppendFloat(b, 33909, 'g', -1, 64) }$/;"	f
BenchmarkAppendFloatExp	./strconv/ftoa_test.go	/^func BenchmarkAppendFloatExp(b *testing.B)     { benchmarkAppendFloat(b, -5.09e75, 'g', -1, 64) }$/;"	f
BenchmarkAppendFloatNegExp	./strconv/ftoa_test.go	/^func BenchmarkAppendFloatNegExp(b *testing.B)  { benchmarkAppendFloat(b, -5.11e-95, 'g', -1, 64) }$/;"	f
BenchmarkAppendGrowByte	./runtime/append_test.go	/^func BenchmarkAppendGrowByte(b *testing.B) {$/;"	f
BenchmarkAppendGrowString	./runtime/append_test.go	/^func BenchmarkAppendGrowString(b *testing.B) {$/;"	f
BenchmarkAppendInt	./strconv/itoa_test.go	/^func BenchmarkAppendInt(b *testing.B) {$/;"	f
BenchmarkAppendSpecialCase	./runtime/append_test.go	/^func BenchmarkAppendSpecialCase(b *testing.B) {$/;"	f
BenchmarkAppendStr16Bytes	./runtime/append_test.go	/^func BenchmarkAppendStr16Bytes(b *testing.B) {$/;"	f
BenchmarkAppendStr1Byte	./runtime/append_test.go	/^func BenchmarkAppendStr1Byte(b *testing.B) {$/;"	f
BenchmarkAppendStr32Bytes	./runtime/append_test.go	/^func BenchmarkAppendStr32Bytes(b *testing.B) {$/;"	f
BenchmarkAppendStr4Bytes	./runtime/append_test.go	/^func BenchmarkAppendStr4Bytes(b *testing.B) {$/;"	f
BenchmarkAppendStr8Bytes	./runtime/append_test.go	/^func BenchmarkAppendStr8Bytes(b *testing.B) {$/;"	f
BenchmarkAppendUint	./strconv/itoa_test.go	/^func BenchmarkAppendUint(b *testing.B) {$/;"	f
BenchmarkAsin	./math/all_test.go	/^func BenchmarkAsin(b *testing.B) {$/;"	f
BenchmarkAsin	./math/cmplx/cmath_test.go	/^func BenchmarkAsin(b *testing.B) {$/;"	f
BenchmarkAsinh	./math/all_test.go	/^func BenchmarkAsinh(b *testing.B) {$/;"	f
BenchmarkAsinh	./math/cmplx/cmath_test.go	/^func BenchmarkAsinh(b *testing.B) {$/;"	f
BenchmarkAssertE2E	./runtime/iface_test.go	/^func BenchmarkAssertE2E(b *testing.B) {$/;"	f
BenchmarkAssertE2E2	./runtime/iface_test.go	/^func BenchmarkAssertE2E2(b *testing.B) {$/;"	f
BenchmarkAssertE2E2Blank	./runtime/iface_test.go	/^func BenchmarkAssertE2E2Blank(b *testing.B) {$/;"	f
BenchmarkAssertE2I	./runtime/iface_test.go	/^func BenchmarkAssertE2I(b *testing.B) {$/;"	f
BenchmarkAssertE2T	./runtime/iface_test.go	/^func BenchmarkAssertE2T(b *testing.B) {$/;"	f
BenchmarkAssertE2T2	./runtime/iface_test.go	/^func BenchmarkAssertE2T2(b *testing.B) {$/;"	f
BenchmarkAssertE2T2Blank	./runtime/iface_test.go	/^func BenchmarkAssertE2T2Blank(b *testing.B) {$/;"	f
BenchmarkAssertE2TLarge	./runtime/iface_test.go	/^func BenchmarkAssertE2TLarge(b *testing.B) {$/;"	f
BenchmarkAssertI2E	./runtime/iface_test.go	/^func BenchmarkAssertI2E(b *testing.B) {$/;"	f
BenchmarkAssertI2E2	./runtime/iface_test.go	/^func BenchmarkAssertI2E2(b *testing.B) {$/;"	f
BenchmarkAssertI2E2Blank	./runtime/iface_test.go	/^func BenchmarkAssertI2E2Blank(b *testing.B) {$/;"	f
BenchmarkAssertI2I	./runtime/iface_test.go	/^func BenchmarkAssertI2I(b *testing.B) {$/;"	f
BenchmarkAssertI2T	./runtime/iface_test.go	/^func BenchmarkAssertI2T(b *testing.B) {$/;"	f
BenchmarkAtan	./math/all_test.go	/^func BenchmarkAtan(b *testing.B) {$/;"	f
BenchmarkAtan	./math/cmplx/cmath_test.go	/^func BenchmarkAtan(b *testing.B) {$/;"	f
BenchmarkAtan2	./math/all_test.go	/^func BenchmarkAtan2(b *testing.B) {$/;"	f
BenchmarkAtanh	./math/all_test.go	/^func BenchmarkAtanh(b *testing.B) {$/;"	f
BenchmarkAtanh	./math/cmplx/cmath_test.go	/^func BenchmarkAtanh(b *testing.B) {$/;"	f
BenchmarkAtof32Decimal	./strconv/atof_test.go	/^func BenchmarkAtof32Decimal(b *testing.B) {$/;"	f
BenchmarkAtof32Float	./strconv/atof_test.go	/^func BenchmarkAtof32Float(b *testing.B) {$/;"	f
BenchmarkAtof32FloatExp	./strconv/atof_test.go	/^func BenchmarkAtof32FloatExp(b *testing.B) {$/;"	f
BenchmarkAtof32Random	./strconv/atof_test.go	/^func BenchmarkAtof32Random(b *testing.B) {$/;"	f
BenchmarkAtof64Big	./strconv/atof_test.go	/^func BenchmarkAtof64Big(b *testing.B) {$/;"	f
BenchmarkAtof64Decimal	./strconv/atof_test.go	/^func BenchmarkAtof64Decimal(b *testing.B) {$/;"	f
BenchmarkAtof64Float	./strconv/atof_test.go	/^func BenchmarkAtof64Float(b *testing.B) {$/;"	f
BenchmarkAtof64FloatExp	./strconv/atof_test.go	/^func BenchmarkAtof64FloatExp(b *testing.B) {$/;"	f
BenchmarkAtof64RandomBits	./strconv/atof_test.go	/^func BenchmarkAtof64RandomBits(b *testing.B) {$/;"	f
BenchmarkAtof64RandomFloats	./strconv/atof_test.go	/^func BenchmarkAtof64RandomFloats(b *testing.B) {$/;"	f
BenchmarkAtoi	./strconv/atoi_test.go	/^func BenchmarkAtoi(b *testing.B) {$/;"	f
BenchmarkAtoi64	./strconv/atoi_test.go	/^func BenchmarkAtoi64(b *testing.B) {$/;"	f
BenchmarkAtoi64Neg	./strconv/atoi_test.go	/^func BenchmarkAtoi64Neg(b *testing.B) {$/;"	f
BenchmarkAtoiNeg	./strconv/atoi_test.go	/^func BenchmarkAtoiNeg(b *testing.B) {$/;"	f
BenchmarkBaseMult	./crypto/elliptic/elliptic_test.go	/^func BenchmarkBaseMult(b *testing.B) {$/;"	f
BenchmarkBaseMultP256	./crypto/elliptic/elliptic_test.go	/^func BenchmarkBaseMultP256(b *testing.B) {$/;"	f
BenchmarkBigKeyMap	./runtime/mapspeed_test.go	/^func BenchmarkBigKeyMap(b *testing.B) {$/;"	f
BenchmarkBigLen	./go/doc/testdata/testing.go	/^\/\/     func BenchmarkBigLen(b *testing.B) {$/;"	f
BenchmarkBigLen	./testing/testing.go	/^\/\/     func BenchmarkBigLen(b *testing.B) {$/;"	f
BenchmarkBigValMap	./runtime/mapspeed_test.go	/^func BenchmarkBigValMap(b *testing.B) {$/;"	f
BenchmarkBinomial	./cmd/compile/internal/big/int_test.go	/^func BenchmarkBinomial(b *testing.B) {$/;"	f
BenchmarkBinomial	./math/big/int_test.go	/^func BenchmarkBinomial(b *testing.B) {$/;"	f
BenchmarkBitLen0	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen0(b *testing.B)  { benchmarkBitLenN(b, 0) }$/;"	f
BenchmarkBitLen0	./math/big/arith_test.go	/^func BenchmarkBitLen0(b *testing.B)  { benchmarkBitLenN(b, 0) }$/;"	f
BenchmarkBitLen1	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen1(b *testing.B)  { benchmarkBitLenN(b, 1) }$/;"	f
BenchmarkBitLen1	./math/big/arith_test.go	/^func BenchmarkBitLen1(b *testing.B)  { benchmarkBitLenN(b, 1) }$/;"	f
BenchmarkBitLen16	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen16(b *testing.B) { benchmarkBitLenN(b, 16) }$/;"	f
BenchmarkBitLen16	./math/big/arith_test.go	/^func BenchmarkBitLen16(b *testing.B) { benchmarkBitLenN(b, 16) }$/;"	f
BenchmarkBitLen17	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen17(b *testing.B) { benchmarkBitLenN(b, 17) }$/;"	f
BenchmarkBitLen17	./math/big/arith_test.go	/^func BenchmarkBitLen17(b *testing.B) { benchmarkBitLenN(b, 17) }$/;"	f
BenchmarkBitLen2	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen2(b *testing.B)  { benchmarkBitLenN(b, 2) }$/;"	f
BenchmarkBitLen2	./math/big/arith_test.go	/^func BenchmarkBitLen2(b *testing.B)  { benchmarkBitLenN(b, 2) }$/;"	f
BenchmarkBitLen3	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen3(b *testing.B)  { benchmarkBitLenN(b, 3) }$/;"	f
BenchmarkBitLen3	./math/big/arith_test.go	/^func BenchmarkBitLen3(b *testing.B)  { benchmarkBitLenN(b, 3) }$/;"	f
BenchmarkBitLen31	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen31(b *testing.B) { benchmarkBitLenN(b, 31) }$/;"	f
BenchmarkBitLen31	./math/big/arith_test.go	/^func BenchmarkBitLen31(b *testing.B) { benchmarkBitLenN(b, 31) }$/;"	f
BenchmarkBitLen4	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen4(b *testing.B)  { benchmarkBitLenN(b, 4) }$/;"	f
BenchmarkBitLen4	./math/big/arith_test.go	/^func BenchmarkBitLen4(b *testing.B)  { benchmarkBitLenN(b, 4) }$/;"	f
BenchmarkBitLen5	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen5(b *testing.B)  { benchmarkBitLenN(b, 5) }$/;"	f
BenchmarkBitLen5	./math/big/arith_test.go	/^func BenchmarkBitLen5(b *testing.B)  { benchmarkBitLenN(b, 5) }$/;"	f
BenchmarkBitLen8	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen8(b *testing.B)  { benchmarkBitLenN(b, 8) }$/;"	f
BenchmarkBitLen8	./math/big/arith_test.go	/^func BenchmarkBitLen8(b *testing.B)  { benchmarkBitLenN(b, 8) }$/;"	f
BenchmarkBitLen9	./cmd/compile/internal/big/arith_test.go	/^func BenchmarkBitLen9(b *testing.B)  { benchmarkBitLenN(b, 9) }$/;"	f
BenchmarkBitLen9	./math/big/arith_test.go	/^func BenchmarkBitLen9(b *testing.B)  { benchmarkBitLenN(b, 9) }$/;"	f
BenchmarkBitset	./cmd/compile/internal/big/int_test.go	/^func BenchmarkBitset(b *testing.B) {$/;"	f
BenchmarkBitset	./math/big/int_test.go	/^func BenchmarkBitset(b *testing.B) {$/;"	f
BenchmarkBitsetNeg	./cmd/compile/internal/big/int_test.go	/^func BenchmarkBitsetNeg(b *testing.B) {$/;"	f
BenchmarkBitsetNeg	./math/big/int_test.go	/^func BenchmarkBitsetNeg(b *testing.B) {$/;"	f
BenchmarkBitsetNegOrig	./cmd/compile/internal/big/int_test.go	/^func BenchmarkBitsetNegOrig(b *testing.B) {$/;"	f
BenchmarkBitsetNegOrig	./math/big/int_test.go	/^func BenchmarkBitsetNegOrig(b *testing.B) {$/;"	f
BenchmarkBitsetOrig	./cmd/compile/internal/big/int_test.go	/^func BenchmarkBitsetOrig(b *testing.B) {$/;"	f
BenchmarkBitsetOrig	./math/big/int_test.go	/^func BenchmarkBitsetOrig(b *testing.B) {$/;"	f
BenchmarkBufferFullSmallReads	./bytes/buffer_test.go	/^func BenchmarkBufferFullSmallReads(b *testing.B) {$/;"	f
BenchmarkBufferNotEmptyWriteRead	./bytes/buffer_test.go	/^func BenchmarkBufferNotEmptyWriteRead(b *testing.B) {$/;"	f
BenchmarkByteByteMap	./strings/replace_test.go	/^func BenchmarkByteByteMap(b *testing.B) {$/;"	f
BenchmarkByteByteMatch	./strings/replace_test.go	/^func BenchmarkByteByteMatch(b *testing.B) {$/;"	f
BenchmarkByteByteNoMatch	./strings/replace_test.go	/^func BenchmarkByteByteNoMatch(b *testing.B) {$/;"	f
BenchmarkByteByteReplaces	./strings/replace_test.go	/^func BenchmarkByteByteReplaces(b *testing.B) {$/;"	f
BenchmarkByteReplacerWriteString	./strings/replace_test.go	/^func BenchmarkByteReplacerWriteString(b *testing.B) {$/;"	f
BenchmarkByteStringMatch	./strings/replace_test.go	/^func BenchmarkByteStringMatch(b *testing.B) {$/;"	f
BenchmarkByteStringReplacerWriteString	./strings/replace_test.go	/^func BenchmarkByteStringReplacerWriteString(b *testing.B) {$/;"	f
BenchmarkCMYK	./image/draw/bench_test.go	/^func BenchmarkCMYK(b *testing.B) {$/;"	f
BenchmarkCSSEscaper	./html/template/css_test.go	/^func BenchmarkCSSEscaper(b *testing.B) {$/;"	f
BenchmarkCSSEscaperNoSpecials	./html/template/css_test.go	/^func BenchmarkCSSEscaperNoSpecials(b *testing.B) {$/;"	f
BenchmarkCSSValueFilter	./html/template/css_test.go	/^func BenchmarkCSSValueFilter(b *testing.B) {$/;"	f
BenchmarkCSSValueFilterOk	./html/template/css_test.go	/^func BenchmarkCSSValueFilterOk(b *testing.B) {$/;"	f
BenchmarkCall	./reflect/all_test.go	/^func BenchmarkCall(b *testing.B) {$/;"	f
BenchmarkCallClosure	./runtime/closure_test.go	/^func BenchmarkCallClosure(b *testing.B) {$/;"	f
BenchmarkCallClosure1	./runtime/closure_test.go	/^func BenchmarkCallClosure1(b *testing.B) {$/;"	f
BenchmarkCallClosure2	./runtime/closure_test.go	/^func BenchmarkCallClosure2(b *testing.B) {$/;"	f
BenchmarkCallClosure3	./runtime/closure_test.go	/^func BenchmarkCallClosure3(b *testing.B) {$/;"	f
BenchmarkCallClosure4	./runtime/closure_test.go	/^func BenchmarkCallClosure4(b *testing.B) {$/;"	f
BenchmarkCastagnoliCrc1KB	./hash/crc32/crc32_test.go	/^func BenchmarkCastagnoliCrc1KB(b *testing.B) {$/;"	f
BenchmarkCbrt	./math/all_test.go	/^func BenchmarkCbrt(b *testing.B) {$/;"	f
BenchmarkCeil	./math/all_test.go	/^func BenchmarkCeil(b *testing.B) {$/;"	f
BenchmarkChanContended	./runtime/chan_test.go	/^func BenchmarkChanContended(b *testing.B) {$/;"	f
BenchmarkChanCreation	./runtime/chan_test.go	/^func BenchmarkChanCreation(b *testing.B) {$/;"	f
BenchmarkChanNonblocking	./runtime/chan_test.go	/^func BenchmarkChanNonblocking(b *testing.B) {$/;"	f
BenchmarkChanPopular	./runtime/chan_test.go	/^func BenchmarkChanPopular(b *testing.B) {$/;"	f
BenchmarkChanProdCons0	./runtime/chan_test.go	/^func BenchmarkChanProdCons0(b *testing.B) {$/;"	f
BenchmarkChanProdCons10	./runtime/chan_test.go	/^func BenchmarkChanProdCons10(b *testing.B) {$/;"	f
BenchmarkChanProdCons100	./runtime/chan_test.go	/^func BenchmarkChanProdCons100(b *testing.B) {$/;"	f
BenchmarkChanProdConsWork0	./runtime/chan_test.go	/^func BenchmarkChanProdConsWork0(b *testing.B) {$/;"	f
BenchmarkChanProdConsWork10	./runtime/chan_test.go	/^func BenchmarkChanProdConsWork10(b *testing.B) {$/;"	f
BenchmarkChanProdConsWork100	./runtime/chan_test.go	/^func BenchmarkChanProdConsWork100(b *testing.B) {$/;"	f
BenchmarkChanSem	./runtime/chan_test.go	/^func BenchmarkChanSem(b *testing.B) {$/;"	f
BenchmarkChanSync	./runtime/chan_test.go	/^func BenchmarkChanSync(b *testing.B) {$/;"	f
BenchmarkChanUncontended	./runtime/chan_test.go	/^func BenchmarkChanUncontended(b *testing.B) {$/;"	f
BenchmarkClearFat1024	./runtime/memmove_test.go	/^func BenchmarkClearFat1024(b *testing.B) {$/;"	f
BenchmarkClearFat12	./runtime/memmove_test.go	/^func BenchmarkClearFat12(b *testing.B) {$/;"	f
BenchmarkClearFat128	./runtime/memmove_test.go	/^func BenchmarkClearFat128(b *testing.B) {$/;"	f
BenchmarkClearFat16	./runtime/memmove_test.go	/^func BenchmarkClearFat16(b *testing.B) {$/;"	f
BenchmarkClearFat24	./runtime/memmove_test.go	/^func BenchmarkClearFat24(b *testing.B) {$/;"	f
BenchmarkClearFat256	./runtime/memmove_test.go	/^func BenchmarkClearFat256(b *testing.B) {$/;"	f
BenchmarkClearFat32	./runtime/memmove_test.go	/^func BenchmarkClearFat32(b *testing.B) {$/;"	f
BenchmarkClearFat40	./runtime/memmove_test.go	/^func BenchmarkClearFat40(b *testing.B) {$/;"	f
BenchmarkClearFat48	./runtime/memmove_test.go	/^func BenchmarkClearFat48(b *testing.B) {$/;"	f
BenchmarkClearFat512	./runtime/memmove_test.go	/^func BenchmarkClearFat512(b *testing.B) {$/;"	f
BenchmarkClearFat56	./runtime/memmove_test.go	/^func BenchmarkClearFat56(b *testing.B) {$/;"	f
BenchmarkClearFat64	./runtime/memmove_test.go	/^func BenchmarkClearFat64(b *testing.B) {$/;"	f
BenchmarkClearFat8	./runtime/memmove_test.go	/^func BenchmarkClearFat8(b *testing.B) {$/;"	f
BenchmarkClient	./net/http/serve_test.go	/^func BenchmarkClient(b *testing.B) {$/;"	f
BenchmarkClientServer	./net/http/serve_test.go	/^func BenchmarkClientServer(b *testing.B) {$/;"	f
BenchmarkClientServerParallel4	./net/http/serve_test.go	/^func BenchmarkClientServerParallel4(b *testing.B) {$/;"	f
BenchmarkClientServerParallel64	./net/http/serve_test.go	/^func BenchmarkClientServerParallel64(b *testing.B) {$/;"	f
BenchmarkClientServerParallelTLS4	./net/http/serve_test.go	/^func BenchmarkClientServerParallelTLS4(b *testing.B) {$/;"	f
BenchmarkClientServerParallelTLS64	./net/http/serve_test.go	/^func BenchmarkClientServerParallelTLS64(b *testing.B) {$/;"	f
BenchmarkClosureCall	./runtime/proc_test.go	/^func BenchmarkClosureCall(b *testing.B) {$/;"	f
BenchmarkCodeDecoder	./encoding/json/bench_test.go	/^func BenchmarkCodeDecoder(b *testing.B) {$/;"	f
BenchmarkCodeEncoder	./encoding/json/bench_test.go	/^func BenchmarkCodeEncoder(b *testing.B) {$/;"	f
BenchmarkCodeMarshal	./encoding/json/bench_test.go	/^func BenchmarkCodeMarshal(b *testing.B) {$/;"	f
BenchmarkCodeUnmarshal	./encoding/json/bench_test.go	/^func BenchmarkCodeUnmarshal(b *testing.B) {$/;"	f
BenchmarkCodeUnmarshalReuse	./encoding/json/bench_test.go	/^func BenchmarkCodeUnmarshalReuse(b *testing.B) {$/;"	f
BenchmarkCompareBytesBig	./bytes/compare_test.go	/^func BenchmarkCompareBytesBig(b *testing.B) {$/;"	f
BenchmarkCompareBytesBigIdentical	./bytes/compare_test.go	/^func BenchmarkCompareBytesBigIdentical(b *testing.B) {$/;"	f
BenchmarkCompareBytesBigUnaligned	./bytes/compare_test.go	/^func BenchmarkCompareBytesBigUnaligned(b *testing.B) {$/;"	f
BenchmarkCompareBytesDifferentLength	./bytes/compare_test.go	/^func BenchmarkCompareBytesDifferentLength(b *testing.B) {$/;"	f
BenchmarkCompareBytesEmpty	./bytes/compare_test.go	/^func BenchmarkCompareBytesEmpty(b *testing.B) {$/;"	f
BenchmarkCompareBytesEqual	./bytes/compare_test.go	/^func BenchmarkCompareBytesEqual(b *testing.B) {$/;"	f
BenchmarkCompareBytesIdentical	./bytes/compare_test.go	/^func BenchmarkCompareBytesIdentical(b *testing.B) {$/;"	f
BenchmarkCompareBytesSameLength	./bytes/compare_test.go	/^func BenchmarkCompareBytesSameLength(b *testing.B) {$/;"	f
BenchmarkCompareBytesToNil	./bytes/compare_test.go	/^func BenchmarkCompareBytesToNil(b *testing.B) {$/;"	f
BenchmarkCompareStringBig	./runtime/string_test.go	/^func BenchmarkCompareStringBig(b *testing.B) {$/;"	f
BenchmarkCompareStringBigUnaligned	./runtime/string_test.go	/^func BenchmarkCompareStringBigUnaligned(b *testing.B) {$/;"	f
BenchmarkCompareStringDifferentLength	./runtime/string_test.go	/^func BenchmarkCompareStringDifferentLength(b *testing.B) {$/;"	f
BenchmarkCompareStringEqual	./runtime/string_test.go	/^func BenchmarkCompareStringEqual(b *testing.B) {$/;"	f
BenchmarkCompareStringIdentical	./runtime/string_test.go	/^func BenchmarkCompareStringIdentical(b *testing.B) {$/;"	f
BenchmarkCompareStringSameLength	./runtime/string_test.go	/^func BenchmarkCompareStringSameLength(b *testing.B) {$/;"	f
BenchmarkComplex128DivDisInf	./runtime/complex_test.go	/^func BenchmarkComplex128DivDisInf(b *testing.B) {$/;"	f
BenchmarkComplex128DivDisNaN	./runtime/complex_test.go	/^func BenchmarkComplex128DivDisNaN(b *testing.B) {$/;"	f
BenchmarkComplex128DivNisInf	./runtime/complex_test.go	/^func BenchmarkComplex128DivNisInf(b *testing.B) {$/;"	f
BenchmarkComplex128DivNisNaN	./runtime/complex_test.go	/^func BenchmarkComplex128DivNisNaN(b *testing.B) {$/;"	f
BenchmarkComplex128DivNormal	./runtime/complex_test.go	/^func BenchmarkComplex128DivNormal(b *testing.B) {$/;"	f
BenchmarkComplexAlgMap	./runtime/mapspeed_test.go	/^func BenchmarkComplexAlgMap(b *testing.B) {$/;"	f
BenchmarkCompressedZipGarbage	./archive/zip/writer_test.go	/^func BenchmarkCompressedZipGarbage(b *testing.B) {$/;"	f
BenchmarkConcurrentDBExec	./database/sql/sql_test.go	/^func BenchmarkConcurrentDBExec(b *testing.B) {$/;"	f
BenchmarkConcurrentRandom	./database/sql/sql_test.go	/^func BenchmarkConcurrentRandom(b *testing.B) {$/;"	f
BenchmarkConcurrentStmtExec	./database/sql/sql_test.go	/^func BenchmarkConcurrentStmtExec(b *testing.B) {$/;"	f
BenchmarkConcurrentStmtQuery	./database/sql/sql_test.go	/^func BenchmarkConcurrentStmtQuery(b *testing.B) {$/;"	f
BenchmarkConcurrentTxExec	./database/sql/sql_test.go	/^func BenchmarkConcurrentTxExec(b *testing.B) {$/;"	f
BenchmarkConcurrentTxQuery	./database/sql/sql_test.go	/^func BenchmarkConcurrentTxQuery(b *testing.B) {$/;"	f
BenchmarkConcurrentTxStmtExec	./database/sql/sql_test.go	/^func BenchmarkConcurrentTxStmtExec(b *testing.B) {$/;"	f
BenchmarkConcurrentTxStmtQuery	./database/sql/sql_test.go	/^func BenchmarkConcurrentTxStmtQuery(b *testing.B) {$/;"	f
BenchmarkCond1	./sync/cond_test.go	/^func BenchmarkCond1(b *testing.B) {$/;"	f
BenchmarkCond16	./sync/cond_test.go	/^func BenchmarkCond16(b *testing.B) {$/;"	f
BenchmarkCond2	./sync/cond_test.go	/^func BenchmarkCond2(b *testing.B) {$/;"	f
BenchmarkCond32	./sync/cond_test.go	/^func BenchmarkCond32(b *testing.B) {$/;"	f
BenchmarkCond4	./sync/cond_test.go	/^func BenchmarkCond4(b *testing.B) {$/;"	f
BenchmarkCond8	./sync/cond_test.go	/^func BenchmarkCond8(b *testing.B) {$/;"	f
BenchmarkConj	./math/cmplx/cmath_test.go	/^func BenchmarkConj(b *testing.B) {$/;"	f
BenchmarkContendedSemaphore	./sync/mutex_test.go	/^func BenchmarkContendedSemaphore(b *testing.B) {$/;"	f
BenchmarkConvI2E	./runtime/iface_test.go	/^func BenchmarkConvI2E(b *testing.B) {$/;"	f
BenchmarkConvI2I	./runtime/iface_test.go	/^func BenchmarkConvI2I(b *testing.B) {$/;"	f
BenchmarkConvT2ELarge	./runtime/iface_test.go	/^func BenchmarkConvT2ELarge(b *testing.B) {$/;"	f
BenchmarkConvT2ESmall	./runtime/iface_test.go	/^func BenchmarkConvT2ESmall(b *testing.B) {$/;"	f
BenchmarkConvT2EUintptr	./runtime/iface_test.go	/^func BenchmarkConvT2EUintptr(b *testing.B) {$/;"	f
BenchmarkConvT2ILarge	./runtime/iface_test.go	/^func BenchmarkConvT2ILarge(b *testing.B) {$/;"	f
BenchmarkConvT2ISmall	./runtime/iface_test.go	/^func BenchmarkConvT2ISmall(b *testing.B) {$/;"	f
BenchmarkConvT2IUintptr	./runtime/iface_test.go	/^func BenchmarkConvT2IUintptr(b *testing.B) {$/;"	f
BenchmarkCopy1024Byte	./runtime/append_test.go	/^func BenchmarkCopy1024Byte(b *testing.B) { benchmarkCopySlice(b, 1024) }$/;"	f
BenchmarkCopy1024String	./runtime/append_test.go	/^func BenchmarkCopy1024String(b *testing.B) { benchmarkCopyStr(b, 1024) }$/;"	f
BenchmarkCopy128Byte	./runtime/append_test.go	/^func BenchmarkCopy128Byte(b *testing.B)  { benchmarkCopySlice(b, 128) }$/;"	f
BenchmarkCopy128String	./runtime/append_test.go	/^func BenchmarkCopy128String(b *testing.B)  { benchmarkCopyStr(b, 128) }$/;"	f
BenchmarkCopy12Byte	./runtime/append_test.go	/^func BenchmarkCopy12Byte(b *testing.B)   { benchmarkCopySlice(b, 12) }$/;"	f
BenchmarkCopy12String	./runtime/append_test.go	/^func BenchmarkCopy12String(b *testing.B)   { benchmarkCopyStr(b, 12) }$/;"	f
BenchmarkCopy16Byte	./runtime/append_test.go	/^func BenchmarkCopy16Byte(b *testing.B)   { benchmarkCopySlice(b, 16) }$/;"	f
BenchmarkCopy16String	./runtime/append_test.go	/^func BenchmarkCopy16String(b *testing.B)   { benchmarkCopyStr(b, 16) }$/;"	f
BenchmarkCopy1Byte	./runtime/append_test.go	/^func BenchmarkCopy1Byte(b *testing.B)    { benchmarkCopySlice(b, 1) }$/;"	f
BenchmarkCopy1String	./runtime/append_test.go	/^func BenchmarkCopy1String(b *testing.B)    { benchmarkCopyStr(b, 1) }$/;"	f
BenchmarkCopy2Byte	./runtime/append_test.go	/^func BenchmarkCopy2Byte(b *testing.B)    { benchmarkCopySlice(b, 2) }$/;"	f
BenchmarkCopy2String	./runtime/append_test.go	/^func BenchmarkCopy2String(b *testing.B)    { benchmarkCopyStr(b, 2) }$/;"	f
BenchmarkCopy32Byte	./runtime/append_test.go	/^func BenchmarkCopy32Byte(b *testing.B)   { benchmarkCopySlice(b, 32) }$/;"	f
BenchmarkCopy32String	./runtime/append_test.go	/^func BenchmarkCopy32String(b *testing.B)   { benchmarkCopyStr(b, 32) }$/;"	f
BenchmarkCopy4Byte	./runtime/append_test.go	/^func BenchmarkCopy4Byte(b *testing.B)    { benchmarkCopySlice(b, 4) }$/;"	f
BenchmarkCopy4String	./runtime/append_test.go	/^func BenchmarkCopy4String(b *testing.B)    { benchmarkCopyStr(b, 4) }$/;"	f
BenchmarkCopy8Byte	./runtime/append_test.go	/^func BenchmarkCopy8Byte(b *testing.B)    { benchmarkCopySlice(b, 8) }$/;"	f
BenchmarkCopy8String	./runtime/append_test.go	/^func BenchmarkCopy8String(b *testing.B)    { benchmarkCopyStr(b, 8) }$/;"	f
BenchmarkCopyFat1024	./runtime/memmove_test.go	/^func BenchmarkCopyFat1024(b *testing.B) {$/;"	f
BenchmarkCopyFat12	./runtime/memmove_test.go	/^func BenchmarkCopyFat12(b *testing.B) {$/;"	f
BenchmarkCopyFat128	./runtime/memmove_test.go	/^func BenchmarkCopyFat128(b *testing.B) {$/;"	f
BenchmarkCopyFat16	./runtime/memmove_test.go	/^func BenchmarkCopyFat16(b *testing.B) {$/;"	f
BenchmarkCopyFat24	./runtime/memmove_test.go	/^func BenchmarkCopyFat24(b *testing.B) {$/;"	f
BenchmarkCopyFat256	./runtime/memmove_test.go	/^func BenchmarkCopyFat256(b *testing.B) {$/;"	f
BenchmarkCopyFat32	./runtime/memmove_test.go	/^func BenchmarkCopyFat32(b *testing.B) {$/;"	f
BenchmarkCopyFat512	./runtime/memmove_test.go	/^func BenchmarkCopyFat512(b *testing.B) {$/;"	f
BenchmarkCopyFat64	./runtime/memmove_test.go	/^func BenchmarkCopyFat64(b *testing.B) {$/;"	f
BenchmarkCopyFat8	./runtime/memmove_test.go	/^func BenchmarkCopyFat8(b *testing.B) {$/;"	f
BenchmarkCopyOver	./image/draw/bench_test.go	/^func BenchmarkCopyOver(b *testing.B) {$/;"	f
BenchmarkCopySrc	./image/draw/bench_test.go	/^func BenchmarkCopySrc(b *testing.B) {$/;"	f
BenchmarkCopysign	./math/all_test.go	/^func BenchmarkCopysign(b *testing.B) {$/;"	f
BenchmarkCos	./math/all_test.go	/^func BenchmarkCos(b *testing.B) {$/;"	f
BenchmarkCos	./math/cmplx/cmath_test.go	/^func BenchmarkCos(b *testing.B) {$/;"	f
BenchmarkCosh	./math/all_test.go	/^func BenchmarkCosh(b *testing.B) {$/;"	f
BenchmarkCosh	./math/cmplx/cmath_test.go	/^func BenchmarkCosh(b *testing.B) {$/;"	f
BenchmarkCount32	./bytes/bytes_test.go	/^func BenchmarkCount32(b *testing.B)  { bmCount(b, Count, 32) }$/;"	f
BenchmarkCount4K	./bytes/bytes_test.go	/^func BenchmarkCount4K(b *testing.B)  { bmCount(b, Count, 4<<10) }$/;"	f
BenchmarkCount4M	./bytes/bytes_test.go	/^func BenchmarkCount4M(b *testing.B)  { bmCount(b, Count, 4<<20) }$/;"	f
BenchmarkCount64M	./bytes/bytes_test.go	/^func BenchmarkCount64M(b *testing.B) { bmCount(b, Count, 64<<20) }$/;"	f
BenchmarkCountEasy32	./bytes/bytes_test.go	/^func BenchmarkCountEasy32(b *testing.B)  { bmCountEasy(b, Count, 32) }$/;"	f
BenchmarkCountEasy4K	./bytes/bytes_test.go	/^func BenchmarkCountEasy4K(b *testing.B)  { bmCountEasy(b, Count, 4<<10) }$/;"	f
BenchmarkCountEasy4M	./bytes/bytes_test.go	/^func BenchmarkCountEasy4M(b *testing.B)  { bmCountEasy(b, Count, 4<<20) }$/;"	f
BenchmarkCountEasy64M	./bytes/bytes_test.go	/^func BenchmarkCountEasy64M(b *testing.B) { bmCountEasy(b, Count, 64<<20) }$/;"	f
BenchmarkCountHard1	./strings/strings_test.go	/^func BenchmarkCountHard1(b *testing.B) { benchmarkCountHard(b, "<>") }$/;"	f
BenchmarkCountHard2	./strings/strings_test.go	/^func BenchmarkCountHard2(b *testing.B) { benchmarkCountHard(b, "<\/pre>") }$/;"	f
BenchmarkCountHard3	./strings/strings_test.go	/^func BenchmarkCountHard3(b *testing.B) { benchmarkCountHard(b, "<b>hello world<\/b>") }$/;"	f
BenchmarkCountTorture	./strings/strings_test.go	/^func BenchmarkCountTorture(b *testing.B) {$/;"	f
BenchmarkCountTortureOverlapping	./strings/strings_test.go	/^func BenchmarkCountTortureOverlapping(b *testing.B) {$/;"	f
BenchmarkCrc64KB	./hash/crc64/crc64_test.go	/^func BenchmarkCrc64KB(b *testing.B) {$/;"	f
BenchmarkCreateGoroutines	./runtime/proc_test.go	/^func BenchmarkCreateGoroutines(b *testing.B) {$/;"	f
BenchmarkCreateGoroutinesCapture	./runtime/proc_test.go	/^func BenchmarkCreateGoroutinesCapture(b *testing.B) {$/;"	f
BenchmarkCreateGoroutinesParallel	./runtime/proc_test.go	/^func BenchmarkCreateGoroutinesParallel(b *testing.B) {$/;"	f
BenchmarkDNSName	./net/dnsname_test.go	/^func BenchmarkDNSName(b *testing.B) {$/;"	f
BenchmarkDay	./time/time_test.go	/^func BenchmarkDay(b *testing.B) {$/;"	f
BenchmarkDecode	./encoding/pem/pem_test.go	/^func BenchmarkDecode(b *testing.B) {$/;"	f
BenchmarkDecodeASCIIRune	./unicode/utf8/utf8_test.go	/^func BenchmarkDecodeASCIIRune(b *testing.B) {$/;"	f
BenchmarkDecodeBaseline	./image/jpeg/reader_test.go	/^func BenchmarkDecodeBaseline(b *testing.B) {$/;"	f
BenchmarkDecodeCSS	./html/template/css_test.go	/^func BenchmarkDecodeCSS(b *testing.B) {$/;"	f
BenchmarkDecodeCSSNoSpecials	./html/template/css_test.go	/^func BenchmarkDecodeCSSNoSpecials(b *testing.B) {$/;"	f
BenchmarkDecodeComplex128Slice	./encoding/gob/timing_test.go	/^func BenchmarkDecodeComplex128Slice(b *testing.B) {$/;"	f
BenchmarkDecodeDigits	./compress/bzip2/bzip2_test.go	/^func BenchmarkDecodeDigits(b *testing.B) { benchmarkDecode(b, digits) }$/;"	f
BenchmarkDecodeDigitsCompress1e4	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsCompress1e4(b *testing.B) { benchmarkDecode(b, digits, compress, 1e4) }$/;"	f
BenchmarkDecodeDigitsCompress1e5	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsCompress1e5(b *testing.B) { benchmarkDecode(b, digits, compress, 1e5) }$/;"	f
BenchmarkDecodeDigitsCompress1e6	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsCompress1e6(b *testing.B) { benchmarkDecode(b, digits, compress, 1e6) }$/;"	f
BenchmarkDecodeDigitsDefault1e4	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsDefault1e4(b *testing.B)  { benchmarkDecode(b, digits, default_, 1e4) }$/;"	f
BenchmarkDecodeDigitsDefault1e5	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsDefault1e5(b *testing.B)  { benchmarkDecode(b, digits, default_, 1e5) }$/;"	f
BenchmarkDecodeDigitsDefault1e6	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsDefault1e6(b *testing.B)  { benchmarkDecode(b, digits, default_, 1e6) }$/;"	f
BenchmarkDecodeDigitsSpeed1e4	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsSpeed1e4(b *testing.B)    { benchmarkDecode(b, digits, speed, 1e4) }$/;"	f
BenchmarkDecodeDigitsSpeed1e5	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsSpeed1e5(b *testing.B)    { benchmarkDecode(b, digits, speed, 1e5) }$/;"	f
BenchmarkDecodeDigitsSpeed1e6	./compress/flate/reader_test.go	/^func BenchmarkDecodeDigitsSpeed1e6(b *testing.B)    { benchmarkDecode(b, digits, speed, 1e6) }$/;"	f
BenchmarkDecodeFloat64Slice	./encoding/gob/timing_test.go	/^func BenchmarkDecodeFloat64Slice(b *testing.B) {$/;"	f
BenchmarkDecodeGray	./image/png/reader_test.go	/^func BenchmarkDecodeGray(b *testing.B) {$/;"	f
BenchmarkDecodeInt32Slice	./encoding/gob/timing_test.go	/^func BenchmarkDecodeInt32Slice(b *testing.B) {$/;"	f
BenchmarkDecodeInterlacing	./image/png/reader_test.go	/^func BenchmarkDecodeInterlacing(b *testing.B) {$/;"	f
BenchmarkDecodeJapaneseRune	./unicode/utf8/utf8_test.go	/^func BenchmarkDecodeJapaneseRune(b *testing.B) {$/;"	f
BenchmarkDecodeNRGBAGradient	./image/png/reader_test.go	/^func BenchmarkDecodeNRGBAGradient(b *testing.B) {$/;"	f
BenchmarkDecodeNRGBAOpaque	./image/png/reader_test.go	/^func BenchmarkDecodeNRGBAOpaque(b *testing.B) {$/;"	f
BenchmarkDecodePaletted	./image/png/reader_test.go	/^func BenchmarkDecodePaletted(b *testing.B) {$/;"	f
BenchmarkDecodeProgressive	./image/jpeg/reader_test.go	/^func BenchmarkDecodeProgressive(b *testing.B) {$/;"	f
BenchmarkDecodeRGB	./image/png/reader_test.go	/^func BenchmarkDecodeRGB(b *testing.B) {$/;"	f
BenchmarkDecodeString	./encoding/base32/base32_test.go	/^func BenchmarkDecodeString(b *testing.B) {$/;"	f
BenchmarkDecodeString	./encoding/base64/base64_test.go	/^func BenchmarkDecodeString(b *testing.B) {$/;"	f
BenchmarkDecodeStringSlice	./encoding/gob/timing_test.go	/^func BenchmarkDecodeStringSlice(b *testing.B) {$/;"	f
BenchmarkDecodeTwain	./compress/bzip2/bzip2_test.go	/^func BenchmarkDecodeTwain(b *testing.B)  { benchmarkDecode(b, twain) }$/;"	f
BenchmarkDecodeTwainCompress1e4	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainCompress1e4(b *testing.B)  { benchmarkDecode(b, twain, compress, 1e4) }$/;"	f
BenchmarkDecodeTwainCompress1e5	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainCompress1e5(b *testing.B)  { benchmarkDecode(b, twain, compress, 1e5) }$/;"	f
BenchmarkDecodeTwainCompress1e6	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainCompress1e6(b *testing.B)  { benchmarkDecode(b, twain, compress, 1e6) }$/;"	f
BenchmarkDecodeTwainDefault1e4	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainDefault1e4(b *testing.B)   { benchmarkDecode(b, twain, default_, 1e4) }$/;"	f
BenchmarkDecodeTwainDefault1e5	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainDefault1e5(b *testing.B)   { benchmarkDecode(b, twain, default_, 1e5) }$/;"	f
BenchmarkDecodeTwainDefault1e6	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainDefault1e6(b *testing.B)   { benchmarkDecode(b, twain, default_, 1e6) }$/;"	f
BenchmarkDecodeTwainSpeed1e4	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainSpeed1e4(b *testing.B)     { benchmarkDecode(b, twain, speed, 1e4) }$/;"	f
BenchmarkDecodeTwainSpeed1e5	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainSpeed1e5(b *testing.B)     { benchmarkDecode(b, twain, speed, 1e5) }$/;"	f
BenchmarkDecodeTwainSpeed1e6	./compress/flate/reader_test.go	/^func BenchmarkDecodeTwainSpeed1e6(b *testing.B)     { benchmarkDecode(b, twain, speed, 1e6) }$/;"	f
BenchmarkDecoder1e4	./compress/lzw/reader_test.go	/^func BenchmarkDecoder1e4(b *testing.B) {$/;"	f
BenchmarkDecoder1e5	./compress/lzw/reader_test.go	/^func BenchmarkDecoder1e5(b *testing.B) {$/;"	f
BenchmarkDecoder1e6	./compress/lzw/reader_test.go	/^func BenchmarkDecoder1e6(b *testing.B) {$/;"	f
BenchmarkDecoderStream	./encoding/json/bench_test.go	/^func BenchmarkDecoderStream(b *testing.B) {$/;"	f
BenchmarkDecrypt	./crypto/aes/aes_test.go	/^func BenchmarkDecrypt(b *testing.B) {$/;"	f
BenchmarkDecrypt	./crypto/des/des_test.go	/^func BenchmarkDecrypt(b *testing.B) {$/;"	f
BenchmarkDefer	./runtime/runtime_test.go	/^func BenchmarkDefer(b *testing.B) {$/;"	f
BenchmarkDefer10	./runtime/runtime_test.go	/^func BenchmarkDefer10(b *testing.B) {$/;"	f
BenchmarkDeferMany	./runtime/runtime_test.go	/^func BenchmarkDeferMany(b *testing.B) {$/;"	f
BenchmarkDim	./math/all_test.go	/^func BenchmarkDim(b *testing.B) {$/;"	f
BenchmarkDup	./container/heap/heap_test.go	/^func BenchmarkDup(b *testing.B) {$/;"	f
BenchmarkEmptyOpContext	./regexp/syntax/prog_test.go	/^func BenchmarkEmptyOpContext(b *testing.B) {$/;"	f
BenchmarkEncode	./encoding/pem/pem_test.go	/^func BenchmarkEncode(b *testing.B) {$/;"	f
BenchmarkEncode	./image/gif/writer_test.go	/^func BenchmarkEncode(b *testing.B) {$/;"	f
BenchmarkEncode	./image/jpeg/writer_test.go	/^func BenchmarkEncode(b *testing.B) {$/;"	f
BenchmarkEncodeASCIIRune	./unicode/utf8/utf8_test.go	/^func BenchmarkEncodeASCIIRune(b *testing.B) {$/;"	f
BenchmarkEncodeComplex128Slice	./encoding/gob/timing_test.go	/^func BenchmarkEncodeComplex128Slice(b *testing.B) {$/;"	f
BenchmarkEncodeDigitsCompress1e4	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsCompress1e4(b *testing.B) { benchmarkEncoder(b, digits, compress, 1e4) }$/;"	f
BenchmarkEncodeDigitsCompress1e5	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsCompress1e5(b *testing.B) { benchmarkEncoder(b, digits, compress, 1e5) }$/;"	f
BenchmarkEncodeDigitsCompress1e6	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsCompress1e6(b *testing.B) { benchmarkEncoder(b, digits, compress, 1e6) }$/;"	f
BenchmarkEncodeDigitsDefault1e4	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsDefault1e4(b *testing.B)  { benchmarkEncoder(b, digits, default_, 1e4) }$/;"	f
BenchmarkEncodeDigitsDefault1e5	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsDefault1e5(b *testing.B)  { benchmarkEncoder(b, digits, default_, 1e5) }$/;"	f
BenchmarkEncodeDigitsDefault1e6	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsDefault1e6(b *testing.B)  { benchmarkEncoder(b, digits, default_, 1e6) }$/;"	f
BenchmarkEncodeDigitsSpeed1e4	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsSpeed1e4(b *testing.B)    { benchmarkEncoder(b, digits, speed, 1e4) }$/;"	f
BenchmarkEncodeDigitsSpeed1e5	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsSpeed1e5(b *testing.B)    { benchmarkEncoder(b, digits, speed, 1e5) }$/;"	f
BenchmarkEncodeDigitsSpeed1e6	./compress/flate/writer_test.go	/^func BenchmarkEncodeDigitsSpeed1e6(b *testing.B)    { benchmarkEncoder(b, digits, speed, 1e6) }$/;"	f
BenchmarkEncodeFloat64Slice	./encoding/gob/timing_test.go	/^func BenchmarkEncodeFloat64Slice(b *testing.B) {$/;"	f
BenchmarkEncodeGray	./image/png/writer_test.go	/^func BenchmarkEncodeGray(b *testing.B) {$/;"	f
BenchmarkEncodeInt32Slice	./encoding/gob/timing_test.go	/^func BenchmarkEncodeInt32Slice(b *testing.B) {$/;"	f
BenchmarkEncodeJapaneseRune	./unicode/utf8/utf8_test.go	/^func BenchmarkEncodeJapaneseRune(b *testing.B) {$/;"	f
BenchmarkEncodeNRGBA	./image/png/writer_test.go	/^func BenchmarkEncodeNRGBA(b *testing.B) {$/;"	f
BenchmarkEncodeNRGBOpaque	./image/png/writer_test.go	/^func BenchmarkEncodeNRGBOpaque(b *testing.B) {$/;"	f
BenchmarkEncodePaletted	./image/png/writer_test.go	/^func BenchmarkEncodePaletted(b *testing.B) {$/;"	f
BenchmarkEncodeRGBA	./image/png/writer_test.go	/^func BenchmarkEncodeRGBA(b *testing.B) {$/;"	f
BenchmarkEncodeRGBOpaque	./image/png/writer_test.go	/^func BenchmarkEncodeRGBOpaque(b *testing.B) {$/;"	f
BenchmarkEncodeStringSlice	./encoding/gob/timing_test.go	/^func BenchmarkEncodeStringSlice(b *testing.B) {$/;"	f
BenchmarkEncodeToString	./encoding/base32/base32_test.go	/^func BenchmarkEncodeToString(b *testing.B) {$/;"	f
BenchmarkEncodeToString	./encoding/base64/base64_test.go	/^func BenchmarkEncodeToString(b *testing.B) {$/;"	f
BenchmarkEncodeTwainCompress1e4	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainCompress1e4(b *testing.B)  { benchmarkEncoder(b, twain, compress, 1e4) }$/;"	f
BenchmarkEncodeTwainCompress1e5	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainCompress1e5(b *testing.B)  { benchmarkEncoder(b, twain, compress, 1e5) }$/;"	f
BenchmarkEncodeTwainCompress1e6	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainCompress1e6(b *testing.B)  { benchmarkEncoder(b, twain, compress, 1e6) }$/;"	f
BenchmarkEncodeTwainDefault1e4	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainDefault1e4(b *testing.B)   { benchmarkEncoder(b, twain, default_, 1e4) }$/;"	f
BenchmarkEncodeTwainDefault1e5	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainDefault1e5(b *testing.B)   { benchmarkEncoder(b, twain, default_, 1e5) }$/;"	f
BenchmarkEncodeTwainDefault1e6	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainDefault1e6(b *testing.B)   { benchmarkEncoder(b, twain, default_, 1e6) }$/;"	f
BenchmarkEncodeTwainSpeed1e4	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainSpeed1e4(b *testing.B)     { benchmarkEncoder(b, twain, speed, 1e4) }$/;"	f
BenchmarkEncodeTwainSpeed1e5	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainSpeed1e5(b *testing.B)     { benchmarkEncoder(b, twain, speed, 1e5) }$/;"	f
BenchmarkEncodeTwainSpeed1e6	./compress/flate/writer_test.go	/^func BenchmarkEncodeTwainSpeed1e6(b *testing.B)     { benchmarkEncoder(b, twain, speed, 1e6) }$/;"	f
BenchmarkEncoder1e4	./compress/lzw/writer_test.go	/^func BenchmarkEncoder1e4(b *testing.B) {$/;"	f
BenchmarkEncoder1e5	./compress/lzw/writer_test.go	/^func BenchmarkEncoder1e5(b *testing.B) {$/;"	f
BenchmarkEncoder1e6	./compress/lzw/writer_test.go	/^func BenchmarkEncoder1e6(b *testing.B) {$/;"	f
BenchmarkEncoderEncode	./encoding/json/stream_test.go	/^func BenchmarkEncoderEncode(b *testing.B) {$/;"	f
BenchmarkEncrypt	./crypto/aes/aes_test.go	/^func BenchmarkEncrypt(b *testing.B) {$/;"	f
BenchmarkEncrypt	./crypto/des/des_test.go	/^func BenchmarkEncrypt(b *testing.B) {$/;"	f
BenchmarkEndToEnd	./net/rpc/server_test.go	/^func BenchmarkEndToEnd(b *testing.B) {$/;"	f
BenchmarkEndToEndAsync	./net/rpc/server_test.go	/^func BenchmarkEndToEndAsync(b *testing.B) {$/;"	f
BenchmarkEndToEndAsyncHTTP	./net/rpc/server_test.go	/^func BenchmarkEndToEndAsyncHTTP(b *testing.B) {$/;"	f
BenchmarkEndToEndByteBuffer	./encoding/gob/timing_test.go	/^func BenchmarkEndToEndByteBuffer(b *testing.B) {$/;"	f
BenchmarkEndToEndHTTP	./net/rpc/server_test.go	/^func BenchmarkEndToEndHTTP(b *testing.B) {$/;"	f
BenchmarkEndToEndPipe	./encoding/gob/timing_test.go	/^func BenchmarkEndToEndPipe(b *testing.B) {$/;"	f
BenchmarkEndToEndSliceByteBuffer	./encoding/gob/timing_test.go	/^func BenchmarkEndToEndSliceByteBuffer(b *testing.B) {$/;"	f
BenchmarkEqEfaceConcrete	./runtime/iface_test.go	/^func BenchmarkEqEfaceConcrete(b *testing.B) {$/;"	f
BenchmarkEqIfaceConcrete	./runtime/iface_test.go	/^func BenchmarkEqIfaceConcrete(b *testing.B) {$/;"	f
BenchmarkEqual0	./bytes/bytes_test.go	/^func BenchmarkEqual0(b *testing.B) {$/;"	f
BenchmarkEqual1	./bytes/bytes_test.go	/^func BenchmarkEqual1(b *testing.B)           { bmEqual(b, Equal, 1) }$/;"	f
BenchmarkEqual15	./bytes/bytes_test.go	/^func BenchmarkEqual15(b *testing.B)          { bmEqual(b, Equal, 15) }$/;"	f
BenchmarkEqual16	./bytes/bytes_test.go	/^func BenchmarkEqual16(b *testing.B)          { bmEqual(b, Equal, 16) }$/;"	f
BenchmarkEqual20	./bytes/bytes_test.go	/^func BenchmarkEqual20(b *testing.B)          { bmEqual(b, Equal, 20) }$/;"	f
BenchmarkEqual32	./bytes/bytes_test.go	/^func BenchmarkEqual32(b *testing.B)          { bmEqual(b, Equal, 32) }$/;"	f
BenchmarkEqual4K	./bytes/bytes_test.go	/^func BenchmarkEqual4K(b *testing.B)          { bmEqual(b, Equal, 4<<10) }$/;"	f
BenchmarkEqual4M	./bytes/bytes_test.go	/^func BenchmarkEqual4M(b *testing.B)          { bmEqual(b, Equal, 4<<20) }$/;"	f
BenchmarkEqual6	./bytes/bytes_test.go	/^func BenchmarkEqual6(b *testing.B)           { bmEqual(b, Equal, 6) }$/;"	f
BenchmarkEqual64M	./bytes/bytes_test.go	/^func BenchmarkEqual64M(b *testing.B)         { bmEqual(b, Equal, 64<<20) }$/;"	f
BenchmarkEqual9	./bytes/bytes_test.go	/^func BenchmarkEqual9(b *testing.B)           { bmEqual(b, Equal, 9) }$/;"	f
BenchmarkEqualPort1	./bytes/bytes_test.go	/^func BenchmarkEqualPort1(b *testing.B)       { bmEqual(b, EqualPortable, 1) }$/;"	f
BenchmarkEqualPort32	./bytes/bytes_test.go	/^func BenchmarkEqualPort32(b *testing.B)      { bmEqual(b, EqualPortable, 32) }$/;"	f
BenchmarkEqualPort4K	./bytes/bytes_test.go	/^func BenchmarkEqualPort4K(b *testing.B)      { bmEqual(b, EqualPortable, 4<<10) }$/;"	f
BenchmarkEqualPort6	./bytes/bytes_test.go	/^func BenchmarkEqualPort6(b *testing.B)       { bmEqual(b, EqualPortable, 6) }$/;"	f
BenchmarkEqualPortable4M	./bytes/bytes_test.go	/^func BenchmarkEqualPortable4M(b *testing.B)  { bmEqual(b, EqualPortable, 4<<20) }$/;"	f
BenchmarkEqualPortable64M	./bytes/bytes_test.go	/^func BenchmarkEqualPortable64M(b *testing.B) { bmEqual(b, EqualPortable, 64<<20) }$/;"	f
BenchmarkErf	./math/all_test.go	/^func BenchmarkErf(b *testing.B) {$/;"	f
BenchmarkErfc	./math/all_test.go	/^func BenchmarkErfc(b *testing.B) {$/;"	f
BenchmarkEscape	./html/escape_test.go	/^func BenchmarkEscape(b *testing.B) {$/;"	f
BenchmarkEscapeNone	./html/escape_test.go	/^func BenchmarkEscapeNone(b *testing.B) {$/;"	f
BenchmarkEscapedExecute	./html/template/escape_test.go	/^func BenchmarkEscapedExecute(b *testing.B) {$/;"	f
BenchmarkExp	./math/all_test.go	/^func BenchmarkExp(b *testing.B) {$/;"	f
BenchmarkExp	./math/cmplx/cmath_test.go	/^func BenchmarkExp(b *testing.B) {$/;"	f
BenchmarkExp2	./math/all_test.go	/^func BenchmarkExp2(b *testing.B) {$/;"	f
BenchmarkExp2Go	./math/all_test.go	/^func BenchmarkExp2Go(b *testing.B) {$/;"	f
BenchmarkExp3Power0x10	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x10(b *testing.B)     { ExpHelper(b, 3, 0x10) }$/;"	f
BenchmarkExp3Power0x10	./math/big/nat_test.go	/^func BenchmarkExp3Power0x10(b *testing.B)     { ExpHelper(b, 3, 0x10) }$/;"	f
BenchmarkExp3Power0x100	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x100(b *testing.B)    { ExpHelper(b, 3, 0x100) }$/;"	f
BenchmarkExp3Power0x100	./math/big/nat_test.go	/^func BenchmarkExp3Power0x100(b *testing.B)    { ExpHelper(b, 3, 0x100) }$/;"	f
BenchmarkExp3Power0x1000	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x1000(b *testing.B)   { ExpHelper(b, 3, 0x1000) }$/;"	f
BenchmarkExp3Power0x1000	./math/big/nat_test.go	/^func BenchmarkExp3Power0x1000(b *testing.B)   { ExpHelper(b, 3, 0x1000) }$/;"	f
BenchmarkExp3Power0x10000	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x10000(b *testing.B)  { ExpHelper(b, 3, 0x10000) }$/;"	f
BenchmarkExp3Power0x10000	./math/big/nat_test.go	/^func BenchmarkExp3Power0x10000(b *testing.B)  { ExpHelper(b, 3, 0x10000) }$/;"	f
BenchmarkExp3Power0x100000	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x100000(b *testing.B) { ExpHelper(b, 3, 0x100000) }$/;"	f
BenchmarkExp3Power0x100000	./math/big/nat_test.go	/^func BenchmarkExp3Power0x100000(b *testing.B) { ExpHelper(b, 3, 0x100000) }$/;"	f
BenchmarkExp3Power0x40	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x40(b *testing.B)     { ExpHelper(b, 3, 0x40) }$/;"	f
BenchmarkExp3Power0x40	./math/big/nat_test.go	/^func BenchmarkExp3Power0x40(b *testing.B)     { ExpHelper(b, 3, 0x40) }$/;"	f
BenchmarkExp3Power0x400	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x400(b *testing.B)    { ExpHelper(b, 3, 0x400) }$/;"	f
BenchmarkExp3Power0x400	./math/big/nat_test.go	/^func BenchmarkExp3Power0x400(b *testing.B)    { ExpHelper(b, 3, 0x400) }$/;"	f
BenchmarkExp3Power0x4000	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x4000(b *testing.B)   { ExpHelper(b, 3, 0x4000) }$/;"	f
BenchmarkExp3Power0x4000	./math/big/nat_test.go	/^func BenchmarkExp3Power0x4000(b *testing.B)   { ExpHelper(b, 3, 0x4000) }$/;"	f
BenchmarkExp3Power0x40000	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x40000(b *testing.B)  { ExpHelper(b, 3, 0x40000) }$/;"	f
BenchmarkExp3Power0x40000	./math/big/nat_test.go	/^func BenchmarkExp3Power0x40000(b *testing.B)  { ExpHelper(b, 3, 0x40000) }$/;"	f
BenchmarkExp3Power0x400000	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkExp3Power0x400000(b *testing.B) { ExpHelper(b, 3, 0x400000) }$/;"	f
BenchmarkExp3Power0x400000	./math/big/nat_test.go	/^func BenchmarkExp3Power0x400000(b *testing.B) { ExpHelper(b, 3, 0x400000) }$/;"	f
BenchmarkExpGo	./math/all_test.go	/^func BenchmarkExpGo(b *testing.B) {$/;"	f
BenchmarkExpand	./crypto/aes/aes_test.go	/^func BenchmarkExpand(b *testing.B) {$/;"	f
BenchmarkExpm1	./math/all_test.go	/^func BenchmarkExpm1(b *testing.B) {$/;"	f
BenchmarkFDCT	./image/jpeg/dct_test.go	/^func BenchmarkFDCT(b *testing.B) {$/;"	f
BenchmarkFibo	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkFibo(b *testing.B) {$/;"	f
BenchmarkFibo	./math/big/nat_test.go	/^func BenchmarkFibo(b *testing.B) {$/;"	f
BenchmarkFieldByName1	./reflect/all_test.go	/^func BenchmarkFieldByName1(b *testing.B) {$/;"	f
BenchmarkFieldByName2	./reflect/all_test.go	/^func BenchmarkFieldByName2(b *testing.B) {$/;"	f
BenchmarkFieldByName3	./reflect/all_test.go	/^func BenchmarkFieldByName3(b *testing.B) {$/;"	f
BenchmarkFields	./bytes/bytes_test.go	/^func BenchmarkFields(b *testing.B) {$/;"	f
BenchmarkFields	./strings/strings_test.go	/^func BenchmarkFields(b *testing.B) {$/;"	f
BenchmarkFieldsFunc	./bytes/bytes_test.go	/^func BenchmarkFieldsFunc(b *testing.B) {$/;"	f
BenchmarkFieldsFunc	./strings/strings_test.go	/^func BenchmarkFieldsFunc(b *testing.B) {$/;"	f
BenchmarkFillOver	./image/draw/bench_test.go	/^func BenchmarkFillOver(b *testing.B) {$/;"	f
BenchmarkFillSrc	./image/draw/bench_test.go	/^func BenchmarkFillSrc(b *testing.B) {$/;"	f
BenchmarkFinalizer	./runtime/mfinal_test.go	/^func BenchmarkFinalizer(b *testing.B) {$/;"	f
BenchmarkFinalizerRun	./runtime/mfinal_test.go	/^func BenchmarkFinalizerRun(b *testing.B) {$/;"	f
BenchmarkFloat32	./math/rand/rand_test.go	/^func BenchmarkFloat32(b *testing.B) {$/;"	f
BenchmarkFloat64	./math/rand/rand_test.go	/^func BenchmarkFloat64(b *testing.B) {$/;"	f
BenchmarkFloatAdd	./expvar/expvar_test.go	/^func BenchmarkFloatAdd(b *testing.B) {$/;"	f
BenchmarkFloatSet	./expvar/expvar_test.go	/^func BenchmarkFloatSet(b *testing.B) {$/;"	f
BenchmarkFloor	./math/all_test.go	/^func BenchmarkFloor(b *testing.B) {$/;"	f
BenchmarkFnv32KB	./hash/fnv/fnv_test.go	/^func BenchmarkFnv32KB(b *testing.B) {$/;"	f
BenchmarkFnv32aKB	./hash/fnv/fnv_test.go	/^func BenchmarkFnv32aKB(b *testing.B) {$/;"	f
BenchmarkFnv64KB	./hash/fnv/fnv_test.go	/^func BenchmarkFnv64KB(b *testing.B) {$/;"	f
BenchmarkFnv64aKB	./hash/fnv/fnv_test.go	/^func BenchmarkFnv64aKB(b *testing.B) {$/;"	f
BenchmarkFormat	./time/time_test.go	/^func BenchmarkFormat(b *testing.B) {$/;"	f
BenchmarkFormatFloat	./strconv/ftoa_test.go	/^func BenchmarkFormatFloat(b *testing.B) {$/;"	f
BenchmarkFormatFloatBig	./strconv/ftoa_test.go	/^func BenchmarkFormatFloatBig(b *testing.B) {$/;"	f
BenchmarkFormatFloatDecimal	./strconv/ftoa_test.go	/^func BenchmarkFormatFloatDecimal(b *testing.B) {$/;"	f
BenchmarkFormatFloatExp	./strconv/ftoa_test.go	/^func BenchmarkFormatFloatExp(b *testing.B) {$/;"	f
BenchmarkFormatFloatNegExp	./strconv/ftoa_test.go	/^func BenchmarkFormatFloatNegExp(b *testing.B) {$/;"	f
BenchmarkFormatInt	./strconv/itoa_test.go	/^func BenchmarkFormatInt(b *testing.B) {$/;"	f
BenchmarkFormatNow	./time/time_test.go	/^func BenchmarkFormatNow(b *testing.B) {$/;"	f
BenchmarkFormatUint	./strconv/itoa_test.go	/^func BenchmarkFormatUint(b *testing.B) {$/;"	f
BenchmarkFprintInt	./fmt/fmt_test.go	/^func BenchmarkFprintInt(b *testing.B) {$/;"	f
BenchmarkFprintIntNoAlloc	./fmt/fmt_test.go	/^func BenchmarkFprintIntNoAlloc(b *testing.B) {$/;"	f
BenchmarkFprintfBytes	./fmt/fmt_test.go	/^func BenchmarkFprintfBytes(b *testing.B) {$/;"	f
BenchmarkFrexp	./math/all_test.go	/^func BenchmarkFrexp(b *testing.B) {$/;"	f
BenchmarkGCD100000x100000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD100000x100000(b *testing.B) { runGCD(b, 100000, 100000) }$/;"	f
BenchmarkGCD100000x100000	./math/big/gcd_test.go	/^func BenchmarkGCD100000x100000(b *testing.B) { runGCD(b, 100000, 100000) }$/;"	f
BenchmarkGCD10000x10000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD10000x10000(b *testing.B)   { runGCD(b, 10000, 10000) }$/;"	f
BenchmarkGCD10000x10000	./math/big/gcd_test.go	/^func BenchmarkGCD10000x10000(b *testing.B)   { runGCD(b, 10000, 10000) }$/;"	f
BenchmarkGCD10000x100000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD10000x100000(b *testing.B)  { runGCD(b, 10000, 100000) }$/;"	f
BenchmarkGCD10000x100000	./math/big/gcd_test.go	/^func BenchmarkGCD10000x100000(b *testing.B)  { runGCD(b, 10000, 100000) }$/;"	f
BenchmarkGCD1000x1000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD1000x1000(b *testing.B)     { runGCD(b, 1000, 1000) }$/;"	f
BenchmarkGCD1000x1000	./math/big/gcd_test.go	/^func BenchmarkGCD1000x1000(b *testing.B)     { runGCD(b, 1000, 1000) }$/;"	f
BenchmarkGCD1000x10000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD1000x10000(b *testing.B)    { runGCD(b, 1000, 10000) }$/;"	f
BenchmarkGCD1000x10000	./math/big/gcd_test.go	/^func BenchmarkGCD1000x10000(b *testing.B)    { runGCD(b, 1000, 10000) }$/;"	f
BenchmarkGCD1000x100000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD1000x100000(b *testing.B)   { runGCD(b, 1000, 100000) }$/;"	f
BenchmarkGCD1000x100000	./math/big/gcd_test.go	/^func BenchmarkGCD1000x100000(b *testing.B)   { runGCD(b, 1000, 100000) }$/;"	f
BenchmarkGCD100x100	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD100x100(b *testing.B)       { runGCD(b, 100, 100) }$/;"	f
BenchmarkGCD100x100	./math/big/gcd_test.go	/^func BenchmarkGCD100x100(b *testing.B)       { runGCD(b, 100, 100) }$/;"	f
BenchmarkGCD100x1000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD100x1000(b *testing.B)      { runGCD(b, 100, 1000) }$/;"	f
BenchmarkGCD100x1000	./math/big/gcd_test.go	/^func BenchmarkGCD100x1000(b *testing.B)      { runGCD(b, 100, 1000) }$/;"	f
BenchmarkGCD100x10000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD100x10000(b *testing.B)     { runGCD(b, 100, 10000) }$/;"	f
BenchmarkGCD100x10000	./math/big/gcd_test.go	/^func BenchmarkGCD100x10000(b *testing.B)     { runGCD(b, 100, 10000) }$/;"	f
BenchmarkGCD100x100000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD100x100000(b *testing.B)    { runGCD(b, 100, 100000) }$/;"	f
BenchmarkGCD100x100000	./math/big/gcd_test.go	/^func BenchmarkGCD100x100000(b *testing.B)    { runGCD(b, 100, 100000) }$/;"	f
BenchmarkGCD10x10	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD10x10(b *testing.B)         { runGCD(b, 10, 10) }$/;"	f
BenchmarkGCD10x10	./math/big/gcd_test.go	/^func BenchmarkGCD10x10(b *testing.B)         { runGCD(b, 10, 10) }$/;"	f
BenchmarkGCD10x100	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD10x100(b *testing.B)        { runGCD(b, 10, 100) }$/;"	f
BenchmarkGCD10x100	./math/big/gcd_test.go	/^func BenchmarkGCD10x100(b *testing.B)        { runGCD(b, 10, 100) }$/;"	f
BenchmarkGCD10x1000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD10x1000(b *testing.B)       { runGCD(b, 10, 1000) }$/;"	f
BenchmarkGCD10x1000	./math/big/gcd_test.go	/^func BenchmarkGCD10x1000(b *testing.B)       { runGCD(b, 10, 1000) }$/;"	f
BenchmarkGCD10x10000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD10x10000(b *testing.B)      { runGCD(b, 10, 10000) }$/;"	f
BenchmarkGCD10x10000	./math/big/gcd_test.go	/^func BenchmarkGCD10x10000(b *testing.B)      { runGCD(b, 10, 10000) }$/;"	f
BenchmarkGCD10x100000	./cmd/compile/internal/big/gcd_test.go	/^func BenchmarkGCD10x100000(b *testing.B)     { runGCD(b, 10, 100000) }$/;"	f
BenchmarkGCD10x100000	./math/big/gcd_test.go	/^func BenchmarkGCD10x100000(b *testing.B)     { runGCD(b, 10, 100000) }$/;"	f
BenchmarkGamma	./math/all_test.go	/^func BenchmarkGamma(b *testing.B) {$/;"	f
BenchmarkGenericMaskOver	./image/draw/bench_test.go	/^func BenchmarkGenericMaskOver(b *testing.B) {$/;"	f
BenchmarkGenericMaskSrc	./image/draw/bench_test.go	/^func BenchmarkGenericMaskSrc(b *testing.B) {$/;"	f
BenchmarkGenericMatch1	./strings/replace_test.go	/^func BenchmarkGenericMatch1(b *testing.B) {$/;"	f
BenchmarkGenericMatch2	./strings/replace_test.go	/^func BenchmarkGenericMatch2(b *testing.B) {$/;"	f
BenchmarkGenericNoMatch	./strings/replace_test.go	/^func BenchmarkGenericNoMatch(b *testing.B) {$/;"	f
BenchmarkGenericOver	./image/draw/bench_test.go	/^func BenchmarkGenericOver(b *testing.B) {$/;"	f
BenchmarkGenericSrc	./image/draw/bench_test.go	/^func BenchmarkGenericSrc(b *testing.B) {$/;"	f
BenchmarkGlyphOver	./image/draw/bench_test.go	/^func BenchmarkGlyphOver(b *testing.B) {$/;"	f
BenchmarkGoLookupIP	./net/dnsclient_unix_test.go	/^func BenchmarkGoLookupIP(b *testing.B) {$/;"	f
BenchmarkGoLookupIPNoSuchHost	./net/dnsclient_unix_test.go	/^func BenchmarkGoLookupIPNoSuchHost(b *testing.B) {$/;"	f
BenchmarkGoLookupIPWithBrokenNameServer	./net/dnsclient_unix_test.go	/^func BenchmarkGoLookupIPWithBrokenNameServer(b *testing.B) {$/;"	f
BenchmarkGoMemclr16	./runtime/memmove_test.go	/^func BenchmarkGoMemclr16(b *testing.B)  { bmGoMemclr(b, 16) }$/;"	f
BenchmarkGoMemclr256	./runtime/memmove_test.go	/^func BenchmarkGoMemclr256(b *testing.B) { bmGoMemclr(b, 256) }$/;"	f
BenchmarkGoMemclr5	./runtime/memmove_test.go	/^func BenchmarkGoMemclr5(b *testing.B)   { bmGoMemclr(b, 5) }$/;"	f
BenchmarkGoMemclr64	./runtime/memmove_test.go	/^func BenchmarkGoMemclr64(b *testing.B)  { bmGoMemclr(b, 64) }$/;"	f
BenchmarkGoroutineBlocking	./runtime/malloc_test.go	/^func BenchmarkGoroutineBlocking(b *testing.B) {$/;"	f
BenchmarkGoroutineForRange	./runtime/malloc_test.go	/^func BenchmarkGoroutineForRange(b *testing.B) {$/;"	f
BenchmarkGoroutineIdle	./runtime/malloc_test.go	/^func BenchmarkGoroutineIdle(b *testing.B) {$/;"	f
BenchmarkGoroutineSelect	./runtime/malloc_test.go	/^func BenchmarkGoroutineSelect(b *testing.B) {$/;"	f
BenchmarkGray	./image/draw/bench_test.go	/^func BenchmarkGray(b *testing.B) {$/;"	f
BenchmarkHTMLEscapeNew	./strings/replace_test.go	/^func BenchmarkHTMLEscapeNew(b *testing.B) {$/;"	f
BenchmarkHTMLEscapeOld	./strings/replace_test.go	/^func BenchmarkHTMLEscapeOld(b *testing.B) {$/;"	f
BenchmarkHTMLNospaceEscaper	./html/template/html_test.go	/^func BenchmarkHTMLNospaceEscaper(b *testing.B) {$/;"	f
BenchmarkHTMLNospaceEscaperNoSpecials	./html/template/html_test.go	/^func BenchmarkHTMLNospaceEscaperNoSpecials(b *testing.B) {$/;"	f
BenchmarkHash1024	./runtime/hash_test.go	/^func BenchmarkHash1024(b *testing.B)  { benchmarkHash(b, 1024) }$/;"	f
BenchmarkHash16	./runtime/hash_test.go	/^func BenchmarkHash16(b *testing.B)    { benchmarkHash(b, 16) }$/;"	f
BenchmarkHash1K	./crypto/md5/md5_test.go	/^func BenchmarkHash1K(b *testing.B) {$/;"	f
BenchmarkHash1K	./crypto/sha1/sha1_test.go	/^func BenchmarkHash1K(b *testing.B) {$/;"	f
BenchmarkHash1K	./crypto/sha256/sha256_test.go	/^func BenchmarkHash1K(b *testing.B) {$/;"	f
BenchmarkHash1K	./crypto/sha512/sha512_test.go	/^func BenchmarkHash1K(b *testing.B) {$/;"	f
BenchmarkHash1KUnaligned	./crypto/md5/md5_test.go	/^func BenchmarkHash1KUnaligned(b *testing.B) {$/;"	f
BenchmarkHash5	./runtime/hash_test.go	/^func BenchmarkHash5(b *testing.B)     { benchmarkHash(b, 5) }$/;"	f
BenchmarkHash64	./runtime/hash_test.go	/^func BenchmarkHash64(b *testing.B)    { benchmarkHash(b, 64) }$/;"	f
BenchmarkHash65536	./runtime/hash_test.go	/^func BenchmarkHash65536(b *testing.B) { benchmarkHash(b, 65536) }$/;"	f
BenchmarkHash8Bytes	./crypto/md5/md5_test.go	/^func BenchmarkHash8Bytes(b *testing.B) {$/;"	f
BenchmarkHash8Bytes	./crypto/sha1/sha1_test.go	/^func BenchmarkHash8Bytes(b *testing.B) {$/;"	f
BenchmarkHash8Bytes	./crypto/sha256/sha256_test.go	/^func BenchmarkHash8Bytes(b *testing.B) {$/;"	f
BenchmarkHash8Bytes	./crypto/sha512/sha512_test.go	/^func BenchmarkHash8Bytes(b *testing.B) {$/;"	f
BenchmarkHash8BytesUnaligned	./crypto/md5/md5_test.go	/^func BenchmarkHash8BytesUnaligned(b *testing.B) {$/;"	f
BenchmarkHash8K	./crypto/md5/md5_test.go	/^func BenchmarkHash8K(b *testing.B) {$/;"	f
BenchmarkHash8K	./crypto/sha1/sha1_test.go	/^func BenchmarkHash8K(b *testing.B) {$/;"	f
BenchmarkHash8K	./crypto/sha256/sha256_test.go	/^func BenchmarkHash8K(b *testing.B) {$/;"	f
BenchmarkHash8K	./crypto/sha512/sha512_test.go	/^func BenchmarkHash8K(b *testing.B) {$/;"	f
BenchmarkHash8KUnaligned	./crypto/md5/md5_test.go	/^func BenchmarkHash8KUnaligned(b *testing.B) {$/;"	f
BenchmarkHashBytesSpeed	./runtime/mapspeed_test.go	/^func BenchmarkHashBytesSpeed(b *testing.B) {$/;"	f
BenchmarkHashInt32Speed	./runtime/mapspeed_test.go	/^func BenchmarkHashInt32Speed(b *testing.B) {$/;"	f
BenchmarkHashInt64Speed	./runtime/mapspeed_test.go	/^func BenchmarkHashInt64Speed(b *testing.B) {$/;"	f
BenchmarkHashStringArraySpeed	./runtime/mapspeed_test.go	/^func BenchmarkHashStringArraySpeed(b *testing.B) {$/;"	f
BenchmarkHashStringSpeed	./runtime/mapspeed_test.go	/^func BenchmarkHashStringSpeed(b *testing.B) {$/;"	f
BenchmarkHeaderWriteSubset	./net/http/header_test.go	/^func BenchmarkHeaderWriteSubset(b *testing.B) {$/;"	f
BenchmarkHello	./go/doc/testdata/testing.go	/^\/\/     func BenchmarkHello(b *testing.B) {$/;"	f
BenchmarkHello	./testing/testing.go	/^\/\/     func BenchmarkHello(b *testing.B) {$/;"	f
BenchmarkHilbert	./cmd/compile/internal/big/hilbert_test.go	/^func BenchmarkHilbert(b *testing.B) {$/;"	f
BenchmarkHilbert	./math/big/hilbert_test.go	/^func BenchmarkHilbert(b *testing.B) {$/;"	f
BenchmarkHour	./time/time_test.go	/^func BenchmarkHour(b *testing.B) {$/;"	f
BenchmarkHypot	./math/all_test.go	/^func BenchmarkHypot(b *testing.B) {$/;"	f
BenchmarkHypotGo	./math/all_test.go	/^func BenchmarkHypotGo(b *testing.B) {$/;"	f
BenchmarkIDCT	./image/jpeg/dct_test.go	/^func BenchmarkIDCT(b *testing.B) {$/;"	f
BenchmarkIEEECrc1KB	./hash/crc32/crc32_test.go	/^func BenchmarkIEEECrc1KB(b *testing.B) {$/;"	f
BenchmarkIEEECrc4KB	./hash/crc32/crc32_test.go	/^func BenchmarkIEEECrc4KB(b *testing.B) {$/;"	f
BenchmarkIPMaskString	./net/ip_test.go	/^func BenchmarkIPMaskString(b *testing.B) {$/;"	f
BenchmarkIPString	./net/ip_test.go	/^func BenchmarkIPString(b *testing.B) {$/;"	f
BenchmarkIfaceCmp100	./runtime/runtime_test.go	/^func BenchmarkIfaceCmp100(b *testing.B) {$/;"	f
BenchmarkIfaceCmpNil100	./runtime/runtime_test.go	/^func BenchmarkIfaceCmpNil100(b *testing.B) {$/;"	f
BenchmarkIlogb	./math/all_test.go	/^func BenchmarkIlogb(b *testing.B) {$/;"	f
BenchmarkIndex	./strings/strings_test.go	/^func BenchmarkIndex(b *testing.B) {$/;"	f
BenchmarkIndex32	./bytes/bytes_test.go	/^func BenchmarkIndex32(b *testing.B)  { bmIndex(b, Index, 32) }$/;"	f
BenchmarkIndex4K	./bytes/bytes_test.go	/^func BenchmarkIndex4K(b *testing.B)  { bmIndex(b, Index, 4<<10) }$/;"	f
BenchmarkIndex4M	./bytes/bytes_test.go	/^func BenchmarkIndex4M(b *testing.B)  { bmIndex(b, Index, 4<<20) }$/;"	f
BenchmarkIndex64M	./bytes/bytes_test.go	/^func BenchmarkIndex64M(b *testing.B) { bmIndex(b, Index, 64<<20) }$/;"	f
BenchmarkIndexByte	./strings/strings_test.go	/^func BenchmarkIndexByte(b *testing.B) {$/;"	f
BenchmarkIndexByte32	./bytes/bytes_test.go	/^func BenchmarkIndexByte32(b *testing.B)          { bmIndexByte(b, IndexByte, 32) }$/;"	f
BenchmarkIndexByte4K	./bytes/bytes_test.go	/^func BenchmarkIndexByte4K(b *testing.B)          { bmIndexByte(b, IndexByte, 4<<10) }$/;"	f
BenchmarkIndexByte4M	./bytes/bytes_test.go	/^func BenchmarkIndexByte4M(b *testing.B)          { bmIndexByte(b, IndexByte, 4<<20) }$/;"	f
BenchmarkIndexByte64M	./bytes/bytes_test.go	/^func BenchmarkIndexByte64M(b *testing.B)         { bmIndexByte(b, IndexByte, 64<<20) }$/;"	f
BenchmarkIndexBytePortable32	./bytes/bytes_test.go	/^func BenchmarkIndexBytePortable32(b *testing.B)  { bmIndexByte(b, IndexBytePortable, 32) }$/;"	f
BenchmarkIndexBytePortable4K	./bytes/bytes_test.go	/^func BenchmarkIndexBytePortable4K(b *testing.B)  { bmIndexByte(b, IndexBytePortable, 4<<10) }$/;"	f
BenchmarkIndexBytePortable4M	./bytes/bytes_test.go	/^func BenchmarkIndexBytePortable4M(b *testing.B)  { bmIndexByte(b, IndexBytePortable, 4<<20) }$/;"	f
BenchmarkIndexBytePortable64M	./bytes/bytes_test.go	/^func BenchmarkIndexBytePortable64M(b *testing.B) { bmIndexByte(b, IndexBytePortable, 64<<20) }$/;"	f
BenchmarkIndexEasy32	./bytes/bytes_test.go	/^func BenchmarkIndexEasy32(b *testing.B)  { bmIndexEasy(b, Index, 32) }$/;"	f
BenchmarkIndexEasy4K	./bytes/bytes_test.go	/^func BenchmarkIndexEasy4K(b *testing.B)  { bmIndexEasy(b, Index, 4<<10) }$/;"	f
BenchmarkIndexEasy4M	./bytes/bytes_test.go	/^func BenchmarkIndexEasy4M(b *testing.B)  { bmIndexEasy(b, Index, 4<<20) }$/;"	f
BenchmarkIndexEasy64M	./bytes/bytes_test.go	/^func BenchmarkIndexEasy64M(b *testing.B) { bmIndexEasy(b, Index, 64<<20) }$/;"	f
BenchmarkIndexHard1	./strings/strings_test.go	/^func BenchmarkIndexHard1(b *testing.B) { benchmarkIndexHard(b, "<>") }$/;"	f
BenchmarkIndexHard2	./strings/strings_test.go	/^func BenchmarkIndexHard2(b *testing.B) { benchmarkIndexHard(b, "<\/pre>") }$/;"	f
BenchmarkIndexHard3	./strings/strings_test.go	/^func BenchmarkIndexHard3(b *testing.B) { benchmarkIndexHard(b, "<b>hello world<\/b>") }$/;"	f
BenchmarkIndexRune	./strings/strings_test.go	/^func BenchmarkIndexRune(b *testing.B) {$/;"	f
BenchmarkIndexRuneFastPath	./strings/strings_test.go	/^func BenchmarkIndexRuneFastPath(b *testing.B) {$/;"	f
BenchmarkIndexTorture	./strings/strings_test.go	/^func BenchmarkIndexTorture(b *testing.B) {$/;"	f
BenchmarkInt31n1000	./math/rand/rand_test.go	/^func BenchmarkInt31n1000(b *testing.B) {$/;"	f
BenchmarkInt63Threadsafe	./math/rand/rand_test.go	/^func BenchmarkInt63Threadsafe(b *testing.B) {$/;"	f
BenchmarkInt63Unthreadsafe	./math/rand/rand_test.go	/^func BenchmarkInt63Unthreadsafe(b *testing.B) {$/;"	f
BenchmarkInt63n1000	./math/rand/rand_test.go	/^func BenchmarkInt63n1000(b *testing.B) {$/;"	f
BenchmarkIntAdd	./expvar/expvar_test.go	/^func BenchmarkIntAdd(b *testing.B) {$/;"	f
BenchmarkIntMap	./runtime/mapspeed_test.go	/^func BenchmarkIntMap(b *testing.B) {$/;"	f
BenchmarkIntSet	./expvar/expvar_test.go	/^func BenchmarkIntSet(b *testing.B) {$/;"	f
BenchmarkInterfaceAddrs	./net/interface_test.go	/^func BenchmarkInterfaceAddrs(b *testing.B) {$/;"	f
BenchmarkInterfaceBig	./reflect/all_test.go	/^func BenchmarkInterfaceBig(b *testing.B) {$/;"	f
BenchmarkInterfaceByIndex	./net/interface_test.go	/^func BenchmarkInterfaceByIndex(b *testing.B) {$/;"	f
BenchmarkInterfaceByName	./net/interface_test.go	/^func BenchmarkInterfaceByName(b *testing.B) {$/;"	f
BenchmarkInterfaceSmall	./reflect/all_test.go	/^func BenchmarkInterfaceSmall(b *testing.B) {$/;"	f
BenchmarkInterfaces	./net/interface_test.go	/^func BenchmarkInterfaces(b *testing.B) {$/;"	f
BenchmarkInterfacesAndAddrs	./net/interface_test.go	/^func BenchmarkInterfacesAndAddrs(b *testing.B) {$/;"	f
BenchmarkInterfacesAndMulticastAddrs	./net/interface_test.go	/^func BenchmarkInterfacesAndMulticastAddrs(b *testing.B) {$/;"	f
BenchmarkIntn1000	./math/rand/rand_test.go	/^func BenchmarkIntn1000(b *testing.B) {$/;"	f
BenchmarkIssue10335	./encoding/json/bench_test.go	/^func BenchmarkIssue10335(b *testing.B) {$/;"	f
BenchmarkItoa	./log/log_test.go	/^func BenchmarkItoa(b *testing.B) {$/;"	f
BenchmarkJ0	./math/all_test.go	/^func BenchmarkJ0(b *testing.B) {$/;"	f
BenchmarkJ1	./math/all_test.go	/^func BenchmarkJ1(b *testing.B) {$/;"	f
BenchmarkJSRegexpEscaper	./html/template/js_test.go	/^func BenchmarkJSRegexpEscaper(b *testing.B) {$/;"	f
BenchmarkJSRegexpEscaperNoSpecials	./html/template/js_test.go	/^func BenchmarkJSRegexpEscaperNoSpecials(b *testing.B) {$/;"	f
BenchmarkJSStrEscaper	./html/template/js_test.go	/^func BenchmarkJSStrEscaper(b *testing.B) {$/;"	f
BenchmarkJSStrEscaperNoSpecials	./html/template/js_test.go	/^func BenchmarkJSStrEscaperNoSpecials(b *testing.B) {$/;"	f
BenchmarkJSValEscaperWithNum	./html/template/js_test.go	/^func BenchmarkJSValEscaperWithNum(b *testing.B) {$/;"	f
BenchmarkJSValEscaperWithObj	./html/template/js_test.go	/^func BenchmarkJSValEscaperWithObj(b *testing.B) {$/;"	f
BenchmarkJSValEscaperWithObjNoSpecials	./html/template/js_test.go	/^func BenchmarkJSValEscaperWithObjNoSpecials(b *testing.B) {$/;"	f
BenchmarkJSValEscaperWithStr	./html/template/js_test.go	/^func BenchmarkJSValEscaperWithStr(b *testing.B) {$/;"	f
BenchmarkJSValEscaperWithStrNoSpecials	./html/template/js_test.go	/^func BenchmarkJSValEscaperWithStrNoSpecials(b *testing.B) {$/;"	f
BenchmarkJn	./math/all_test.go	/^func BenchmarkJn(b *testing.B) {$/;"	f
BenchmarkLastIndex	./strings/strings_test.go	/^func BenchmarkLastIndex(b *testing.B) {$/;"	f
BenchmarkLastIndexHard1	./strings/strings_test.go	/^func BenchmarkLastIndexHard1(b *testing.B) { benchmarkLastIndexHard(b, "<>") }$/;"	f
BenchmarkLastIndexHard2	./strings/strings_test.go	/^func BenchmarkLastIndexHard2(b *testing.B) { benchmarkLastIndexHard(b, "<\/pre>") }$/;"	f
BenchmarkLastIndexHard3	./strings/strings_test.go	/^func BenchmarkLastIndexHard3(b *testing.B) { benchmarkLastIndexHard(b, "<b>hello world<\/b>") }$/;"	f
BenchmarkLdexp	./math/all_test.go	/^func BenchmarkLdexp(b *testing.B) {$/;"	f
BenchmarkLeafSize0	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize0(b *testing.B)  { LeafSizeHelper(b, 10, 0) } \/\/ test without splitting$/;"	f
BenchmarkLeafSize0	./math/big/natconv_test.go	/^func BenchmarkLeafSize0(b *testing.B)  { LeafSizeHelper(b, 10, 0) } \/\/ test without splitting$/;"	f
BenchmarkLeafSize1	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize1(b *testing.B)  { LeafSizeHelper(b, 10, 1) }$/;"	f
BenchmarkLeafSize1	./math/big/natconv_test.go	/^func BenchmarkLeafSize1(b *testing.B)  { LeafSizeHelper(b, 10, 1) }$/;"	f
BenchmarkLeafSize10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize10(b *testing.B) { LeafSizeHelper(b, 10, 10) }$/;"	f
BenchmarkLeafSize10	./math/big/natconv_test.go	/^func BenchmarkLeafSize10(b *testing.B) { LeafSizeHelper(b, 10, 10) }$/;"	f
BenchmarkLeafSize11	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize11(b *testing.B) { LeafSizeHelper(b, 10, 11) }$/;"	f
BenchmarkLeafSize11	./math/big/natconv_test.go	/^func BenchmarkLeafSize11(b *testing.B) { LeafSizeHelper(b, 10, 11) }$/;"	f
BenchmarkLeafSize12	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize12(b *testing.B) { LeafSizeHelper(b, 10, 12) }$/;"	f
BenchmarkLeafSize12	./math/big/natconv_test.go	/^func BenchmarkLeafSize12(b *testing.B) { LeafSizeHelper(b, 10, 12) }$/;"	f
BenchmarkLeafSize13	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize13(b *testing.B) { LeafSizeHelper(b, 10, 13) }$/;"	f
BenchmarkLeafSize13	./math/big/natconv_test.go	/^func BenchmarkLeafSize13(b *testing.B) { LeafSizeHelper(b, 10, 13) }$/;"	f
BenchmarkLeafSize14	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize14(b *testing.B) { LeafSizeHelper(b, 10, 14) }$/;"	f
BenchmarkLeafSize14	./math/big/natconv_test.go	/^func BenchmarkLeafSize14(b *testing.B) { LeafSizeHelper(b, 10, 14) }$/;"	f
BenchmarkLeafSize15	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize15(b *testing.B) { LeafSizeHelper(b, 10, 15) }$/;"	f
BenchmarkLeafSize15	./math/big/natconv_test.go	/^func BenchmarkLeafSize15(b *testing.B) { LeafSizeHelper(b, 10, 15) }$/;"	f
BenchmarkLeafSize16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize16(b *testing.B) { LeafSizeHelper(b, 10, 16) }$/;"	f
BenchmarkLeafSize16	./math/big/natconv_test.go	/^func BenchmarkLeafSize16(b *testing.B) { LeafSizeHelper(b, 10, 16) }$/;"	f
BenchmarkLeafSize2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize2(b *testing.B)  { LeafSizeHelper(b, 10, 2) }$/;"	f
BenchmarkLeafSize2	./math/big/natconv_test.go	/^func BenchmarkLeafSize2(b *testing.B)  { LeafSizeHelper(b, 10, 2) }$/;"	f
BenchmarkLeafSize3	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize3(b *testing.B)  { LeafSizeHelper(b, 10, 3) }$/;"	f
BenchmarkLeafSize3	./math/big/natconv_test.go	/^func BenchmarkLeafSize3(b *testing.B)  { LeafSizeHelper(b, 10, 3) }$/;"	f
BenchmarkLeafSize32	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize32(b *testing.B) { LeafSizeHelper(b, 10, 32) } \/\/ try some large lengths$/;"	f
BenchmarkLeafSize32	./math/big/natconv_test.go	/^func BenchmarkLeafSize32(b *testing.B) { LeafSizeHelper(b, 10, 32) } \/\/ try some large lengths$/;"	f
BenchmarkLeafSize4	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize4(b *testing.B)  { LeafSizeHelper(b, 10, 4) }$/;"	f
BenchmarkLeafSize4	./math/big/natconv_test.go	/^func BenchmarkLeafSize4(b *testing.B)  { LeafSizeHelper(b, 10, 4) }$/;"	f
BenchmarkLeafSize5	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize5(b *testing.B)  { LeafSizeHelper(b, 10, 5) }$/;"	f
BenchmarkLeafSize5	./math/big/natconv_test.go	/^func BenchmarkLeafSize5(b *testing.B)  { LeafSizeHelper(b, 10, 5) }$/;"	f
BenchmarkLeafSize6	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize6(b *testing.B)  { LeafSizeHelper(b, 10, 6) }$/;"	f
BenchmarkLeafSize6	./math/big/natconv_test.go	/^func BenchmarkLeafSize6(b *testing.B)  { LeafSizeHelper(b, 10, 6) }$/;"	f
BenchmarkLeafSize64	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize64(b *testing.B) { LeafSizeHelper(b, 10, 64) }$/;"	f
BenchmarkLeafSize64	./math/big/natconv_test.go	/^func BenchmarkLeafSize64(b *testing.B) { LeafSizeHelper(b, 10, 64) }$/;"	f
BenchmarkLeafSize7	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize7(b *testing.B)  { LeafSizeHelper(b, 10, 7) }$/;"	f
BenchmarkLeafSize7	./math/big/natconv_test.go	/^func BenchmarkLeafSize7(b *testing.B)  { LeafSizeHelper(b, 10, 7) }$/;"	f
BenchmarkLeafSize8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize8(b *testing.B)  { LeafSizeHelper(b, 10, 8) }$/;"	f
BenchmarkLeafSize8	./math/big/natconv_test.go	/^func BenchmarkLeafSize8(b *testing.B)  { LeafSizeHelper(b, 10, 8) }$/;"	f
BenchmarkLeafSize9	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkLeafSize9(b *testing.B)  { LeafSizeHelper(b, 10, 9) }$/;"	f
BenchmarkLeafSize9	./math/big/natconv_test.go	/^func BenchmarkLeafSize9(b *testing.B)  { LeafSizeHelper(b, 10, 9) }$/;"	f
BenchmarkLgamma	./math/all_test.go	/^func BenchmarkLgamma(b *testing.B) {$/;"	f
BenchmarkLiteral	./regexp/all_test.go	/^func BenchmarkLiteral(b *testing.B) {$/;"	f
BenchmarkLog	./math/all_test.go	/^func BenchmarkLog(b *testing.B) {$/;"	f
BenchmarkLog	./math/cmplx/cmath_test.go	/^func BenchmarkLog(b *testing.B) {$/;"	f
BenchmarkLog10	./math/all_test.go	/^func BenchmarkLog10(b *testing.B) {$/;"	f
BenchmarkLog10	./math/cmplx/cmath_test.go	/^func BenchmarkLog10(b *testing.B) {$/;"	f
BenchmarkLog1p	./math/all_test.go	/^func BenchmarkLog1p(b *testing.B) {$/;"	f
BenchmarkLog2	./math/all_test.go	/^func BenchmarkLog2(b *testing.B) {$/;"	f
BenchmarkLogb	./math/all_test.go	/^func BenchmarkLogb(b *testing.B) {$/;"	f
BenchmarkMalloc16	./runtime/malloc_test.go	/^func BenchmarkMalloc16(b *testing.B) {$/;"	f
BenchmarkMalloc8	./runtime/malloc_test.go	/^func BenchmarkMalloc8(b *testing.B) {$/;"	f
BenchmarkMallocLargeStruct	./runtime/malloc_test.go	/^func BenchmarkMallocLargeStruct(b *testing.B) {$/;"	f
BenchmarkMallocTypeInfo16	./runtime/malloc_test.go	/^func BenchmarkMallocTypeInfo16(b *testing.B) {$/;"	f
BenchmarkMallocTypeInfo8	./runtime/malloc_test.go	/^func BenchmarkMallocTypeInfo8(b *testing.B) {$/;"	f
BenchmarkManyArgs	./fmt/fmt_test.go	/^func BenchmarkManyArgs(b *testing.B) {$/;"	f
BenchmarkManyConcurrentQueries	./database/sql/sql_test.go	/^func BenchmarkManyConcurrentQueries(b *testing.B) {$/;"	f
BenchmarkMapAddDifferent	./expvar/expvar_test.go	/^func BenchmarkMapAddDifferent(b *testing.B) {$/;"	f
BenchmarkMapAddSame	./expvar/expvar_test.go	/^func BenchmarkMapAddSame(b *testing.B) {$/;"	f
BenchmarkMapIter	./runtime/mapspeed_test.go	/^func BenchmarkMapIter(b *testing.B) {$/;"	f
BenchmarkMapIterEmpty	./runtime/mapspeed_test.go	/^func BenchmarkMapIterEmpty(b *testing.B) {$/;"	f
BenchmarkMapNoChanges	./strings/strings_test.go	/^func BenchmarkMapNoChanges(b *testing.B) {$/;"	f
BenchmarkMapPop100	./runtime/map_test.go	/^func BenchmarkMapPop100(b *testing.B)   { benchmarkMapPop(b, 100) }$/;"	f
BenchmarkMapPop1000	./runtime/map_test.go	/^func BenchmarkMapPop1000(b *testing.B)  { benchmarkMapPop(b, 1000) }$/;"	f
BenchmarkMapPop10000	./runtime/map_test.go	/^func BenchmarkMapPop10000(b *testing.B) { benchmarkMapPop(b, 10000) }$/;"	f
BenchmarkMapSet	./expvar/expvar_test.go	/^func BenchmarkMapSet(b *testing.B) {$/;"	f
BenchmarkMapStringKeysEight_16	./runtime/mapspeed_test.go	/^func BenchmarkMapStringKeysEight_16(b *testing.B) { benchmarkMapStringKeysEight(b, 16) }$/;"	f
BenchmarkMapStringKeysEight_1M	./runtime/mapspeed_test.go	/^func BenchmarkMapStringKeysEight_1M(b *testing.B) { benchmarkMapStringKeysEight(b, 1<<20) }$/;"	f
BenchmarkMapStringKeysEight_32	./runtime/mapspeed_test.go	/^func BenchmarkMapStringKeysEight_32(b *testing.B) { benchmarkMapStringKeysEight(b, 32) }$/;"	f
BenchmarkMapStringKeysEight_64	./runtime/mapspeed_test.go	/^func BenchmarkMapStringKeysEight_64(b *testing.B) { benchmarkMapStringKeysEight(b, 64) }$/;"	f
BenchmarkMarshal	./encoding/xml/marshal_test.go	/^func BenchmarkMarshal(b *testing.B) {$/;"	f
BenchmarkMatchClass	./regexp/all_test.go	/^func BenchmarkMatchClass(b *testing.B) {$/;"	f
BenchmarkMatchClass_InRange	./regexp/all_test.go	/^func BenchmarkMatchClass_InRange(b *testing.B) {$/;"	f
BenchmarkMatchEasy0_1K	./regexp/exec_test.go	/^func BenchmarkMatchEasy0_1K(b *testing.B)   { benchmark(b, easy0, 1<<10) }$/;"	f
BenchmarkMatchEasy0_1M	./regexp/exec_test.go	/^func BenchmarkMatchEasy0_1M(b *testing.B)   { benchmark(b, easy0, 1<<20) }$/;"	f
BenchmarkMatchEasy0_32	./regexp/exec_test.go	/^func BenchmarkMatchEasy0_32(b *testing.B)   { benchmark(b, easy0, 32<<0) }$/;"	f
BenchmarkMatchEasy0_32K	./regexp/exec_test.go	/^func BenchmarkMatchEasy0_32K(b *testing.B)  { benchmark(b, easy0, 32<<10) }$/;"	f
BenchmarkMatchEasy0_32M	./regexp/exec_test.go	/^func BenchmarkMatchEasy0_32M(b *testing.B)  { benchmark(b, easy0, 32<<20) }$/;"	f
BenchmarkMatchEasy1_1K	./regexp/exec_test.go	/^func BenchmarkMatchEasy1_1K(b *testing.B)   { benchmark(b, easy1, 1<<10) }$/;"	f
BenchmarkMatchEasy1_1M	./regexp/exec_test.go	/^func BenchmarkMatchEasy1_1M(b *testing.B)   { benchmark(b, easy1, 1<<20) }$/;"	f
BenchmarkMatchEasy1_32	./regexp/exec_test.go	/^func BenchmarkMatchEasy1_32(b *testing.B)   { benchmark(b, easy1, 32<<0) }$/;"	f
BenchmarkMatchEasy1_32K	./regexp/exec_test.go	/^func BenchmarkMatchEasy1_32K(b *testing.B)  { benchmark(b, easy1, 32<<10) }$/;"	f
BenchmarkMatchEasy1_32M	./regexp/exec_test.go	/^func BenchmarkMatchEasy1_32M(b *testing.B)  { benchmark(b, easy1, 32<<20) }$/;"	f
BenchmarkMatchHard_1K	./regexp/exec_test.go	/^func BenchmarkMatchHard_1K(b *testing.B)    { benchmark(b, hard, 1<<10) }$/;"	f
BenchmarkMatchHard_1M	./regexp/exec_test.go	/^func BenchmarkMatchHard_1M(b *testing.B)    { benchmark(b, hard, 1<<20) }$/;"	f
BenchmarkMatchHard_32	./regexp/exec_test.go	/^func BenchmarkMatchHard_32(b *testing.B)    { benchmark(b, hard, 32<<0) }$/;"	f
BenchmarkMatchHard_32K	./regexp/exec_test.go	/^func BenchmarkMatchHard_32K(b *testing.B)   { benchmark(b, hard, 32<<10) }$/;"	f
BenchmarkMatchHard_32M	./regexp/exec_test.go	/^func BenchmarkMatchHard_32M(b *testing.B)   { benchmark(b, hard, 32<<20) }$/;"	f
BenchmarkMatchMedium_1K	./regexp/exec_test.go	/^func BenchmarkMatchMedium_1K(b *testing.B)  { benchmark(b, medium, 1<<10) }$/;"	f
BenchmarkMatchMedium_1M	./regexp/exec_test.go	/^func BenchmarkMatchMedium_1M(b *testing.B)  { benchmark(b, medium, 1<<20) }$/;"	f
BenchmarkMatchMedium_32	./regexp/exec_test.go	/^func BenchmarkMatchMedium_32(b *testing.B)  { benchmark(b, medium, 32<<0) }$/;"	f
BenchmarkMatchMedium_32K	./regexp/exec_test.go	/^func BenchmarkMatchMedium_32K(b *testing.B) { benchmark(b, medium, 32<<10) }$/;"	f
BenchmarkMatchMedium_32M	./regexp/exec_test.go	/^func BenchmarkMatchMedium_32M(b *testing.B) { benchmark(b, medium, 32<<20) }$/;"	f
BenchmarkMatmult	./runtime/proc_test.go	/^func BenchmarkMatmult(b *testing.B) {$/;"	f
BenchmarkMax	./math/all_test.go	/^func BenchmarkMax(b *testing.B) {$/;"	f
BenchmarkMegEmptyMap	./runtime/mapspeed_test.go	/^func BenchmarkMegEmptyMap(b *testing.B) {$/;"	f
BenchmarkMegEqMap	./runtime/mapspeed_test.go	/^func BenchmarkMegEqMap(b *testing.B) {$/;"	f
BenchmarkMegMap	./runtime/mapspeed_test.go	/^func BenchmarkMegMap(b *testing.B) {$/;"	f
BenchmarkMegOneMap	./runtime/mapspeed_test.go	/^func BenchmarkMegOneMap(b *testing.B) {$/;"	f
BenchmarkMemclr16	./runtime/memmove_test.go	/^func BenchmarkMemclr16(b *testing.B)    { bmMemclr(b, 16) }$/;"	f
BenchmarkMemclr256	./runtime/memmove_test.go	/^func BenchmarkMemclr256(b *testing.B)   { bmMemclr(b, 256) }$/;"	f
BenchmarkMemclr4096	./runtime/memmove_test.go	/^func BenchmarkMemclr4096(b *testing.B)  { bmMemclr(b, 4096) }$/;"	f
BenchmarkMemclr5	./runtime/memmove_test.go	/^func BenchmarkMemclr5(b *testing.B)     { bmMemclr(b, 5) }$/;"	f
BenchmarkMemclr64	./runtime/memmove_test.go	/^func BenchmarkMemclr64(b *testing.B)    { bmMemclr(b, 64) }$/;"	f
BenchmarkMemclr65536	./runtime/memmove_test.go	/^func BenchmarkMemclr65536(b *testing.B) { bmMemclr(b, 65536) }$/;"	f
BenchmarkMemmove0	./runtime/memmove_test.go	/^func BenchmarkMemmove0(b *testing.B)    { bmMemmove(b, 0) }$/;"	f
BenchmarkMemmove1	./runtime/memmove_test.go	/^func BenchmarkMemmove1(b *testing.B)    { bmMemmove(b, 1) }$/;"	f
BenchmarkMemmove10	./runtime/memmove_test.go	/^func BenchmarkMemmove10(b *testing.B)   { bmMemmove(b, 10) }$/;"	f
BenchmarkMemmove1024	./runtime/memmove_test.go	/^func BenchmarkMemmove1024(b *testing.B) { bmMemmove(b, 1024) }$/;"	f
BenchmarkMemmove11	./runtime/memmove_test.go	/^func BenchmarkMemmove11(b *testing.B)   { bmMemmove(b, 11) }$/;"	f
BenchmarkMemmove12	./runtime/memmove_test.go	/^func BenchmarkMemmove12(b *testing.B)   { bmMemmove(b, 12) }$/;"	f
BenchmarkMemmove128	./runtime/memmove_test.go	/^func BenchmarkMemmove128(b *testing.B)  { bmMemmove(b, 128) }$/;"	f
BenchmarkMemmove13	./runtime/memmove_test.go	/^func BenchmarkMemmove13(b *testing.B)   { bmMemmove(b, 13) }$/;"	f
BenchmarkMemmove14	./runtime/memmove_test.go	/^func BenchmarkMemmove14(b *testing.B)   { bmMemmove(b, 14) }$/;"	f
BenchmarkMemmove15	./runtime/memmove_test.go	/^func BenchmarkMemmove15(b *testing.B)   { bmMemmove(b, 15) }$/;"	f
BenchmarkMemmove16	./runtime/memmove_test.go	/^func BenchmarkMemmove16(b *testing.B)   { bmMemmove(b, 16) }$/;"	f
BenchmarkMemmove2	./runtime/memmove_test.go	/^func BenchmarkMemmove2(b *testing.B)    { bmMemmove(b, 2) }$/;"	f
BenchmarkMemmove2048	./runtime/memmove_test.go	/^func BenchmarkMemmove2048(b *testing.B) { bmMemmove(b, 2048) }$/;"	f
BenchmarkMemmove256	./runtime/memmove_test.go	/^func BenchmarkMemmove256(b *testing.B)  { bmMemmove(b, 256) }$/;"	f
BenchmarkMemmove3	./runtime/memmove_test.go	/^func BenchmarkMemmove3(b *testing.B)    { bmMemmove(b, 3) }$/;"	f
BenchmarkMemmove32	./runtime/memmove_test.go	/^func BenchmarkMemmove32(b *testing.B)   { bmMemmove(b, 32) }$/;"	f
BenchmarkMemmove4	./runtime/memmove_test.go	/^func BenchmarkMemmove4(b *testing.B)    { bmMemmove(b, 4) }$/;"	f
BenchmarkMemmove4096	./runtime/memmove_test.go	/^func BenchmarkMemmove4096(b *testing.B) { bmMemmove(b, 4096) }$/;"	f
BenchmarkMemmove5	./runtime/memmove_test.go	/^func BenchmarkMemmove5(b *testing.B)    { bmMemmove(b, 5) }$/;"	f
BenchmarkMemmove512	./runtime/memmove_test.go	/^func BenchmarkMemmove512(b *testing.B)  { bmMemmove(b, 512) }$/;"	f
BenchmarkMemmove6	./runtime/memmove_test.go	/^func BenchmarkMemmove6(b *testing.B)    { bmMemmove(b, 6) }$/;"	f
BenchmarkMemmove64	./runtime/memmove_test.go	/^func BenchmarkMemmove64(b *testing.B)   { bmMemmove(b, 64) }$/;"	f
BenchmarkMemmove7	./runtime/memmove_test.go	/^func BenchmarkMemmove7(b *testing.B)    { bmMemmove(b, 7) }$/;"	f
BenchmarkMemmove8	./runtime/memmove_test.go	/^func BenchmarkMemmove8(b *testing.B)    { bmMemmove(b, 8) }$/;"	f
BenchmarkMemmove9	./runtime/memmove_test.go	/^func BenchmarkMemmove9(b *testing.B)    { bmMemmove(b, 9) }$/;"	f
BenchmarkMin	./math/all_test.go	/^func BenchmarkMin(b *testing.B) {$/;"	f
BenchmarkMod	./math/all_test.go	/^func BenchmarkMod(b *testing.B) {$/;"	f
BenchmarkModf	./math/all_test.go	/^func BenchmarkModf(b *testing.B) {$/;"	f
BenchmarkMul	./cmd/compile/internal/big/nat_test.go	/^func BenchmarkMul(b *testing.B) {$/;"	f
BenchmarkMul	./math/big/nat_test.go	/^func BenchmarkMul(b *testing.B) {$/;"	f
BenchmarkMutex	./sync/mutex_test.go	/^func BenchmarkMutex(b *testing.B) {$/;"	f
BenchmarkMutexNoSpin	./sync/mutex_test.go	/^func BenchmarkMutexNoSpin(b *testing.B) {$/;"	f
BenchmarkMutexSlack	./sync/mutex_test.go	/^func BenchmarkMutexSlack(b *testing.B) {$/;"	f
BenchmarkMutexSpin	./sync/mutex_test.go	/^func BenchmarkMutexSpin(b *testing.B) {$/;"	f
BenchmarkMutexUncontended	./sync/mutex_test.go	/^func BenchmarkMutexUncontended(b *testing.B) {$/;"	f
BenchmarkMutexWork	./sync/mutex_test.go	/^func BenchmarkMutexWork(b *testing.B) {$/;"	f
BenchmarkMutexWorkSlack	./sync/mutex_test.go	/^func BenchmarkMutexWorkSlack(b *testing.B) {$/;"	f
BenchmarkNRGBAOver	./image/draw/bench_test.go	/^func BenchmarkNRGBAOver(b *testing.B) {$/;"	f
BenchmarkNRGBASrc	./image/draw/bench_test.go	/^func BenchmarkNRGBASrc(b *testing.B) {$/;"	f
BenchmarkNeEfaceConcrete	./runtime/iface_test.go	/^func BenchmarkNeEfaceConcrete(b *testing.B) {$/;"	f
BenchmarkNeIfaceConcrete	./runtime/iface_test.go	/^func BenchmarkNeIfaceConcrete(b *testing.B) {$/;"	f
BenchmarkNewEmptyMap	./runtime/mapspeed_test.go	/^func BenchmarkNewEmptyMap(b *testing.B) {$/;"	f
BenchmarkNewIndexRandom	./index/suffixarray/suffixarray_test.go	/^func BenchmarkNewIndexRandom(b *testing.B) {$/;"	f
BenchmarkNewIndexRepeat	./index/suffixarray/suffixarray_test.go	/^func BenchmarkNewIndexRepeat(b *testing.B) {$/;"	f
BenchmarkNewSmallMap	./runtime/mapspeed_test.go	/^func BenchmarkNewSmallMap(b *testing.B) {$/;"	f
BenchmarkNextafter32	./math/all_test.go	/^func BenchmarkNextafter32(b *testing.B) {$/;"	f
BenchmarkNextafter64	./math/all_test.go	/^func BenchmarkNextafter64(b *testing.B) {$/;"	f
BenchmarkNotLiteral	./regexp/all_test.go	/^func BenchmarkNotLiteral(b *testing.B) {$/;"	f
BenchmarkNotOnePassShortA	./regexp/all_test.go	/^func BenchmarkNotOnePassShortA(b *testing.B) {$/;"	f
BenchmarkNotOnePassShortB	./regexp/all_test.go	/^func BenchmarkNotOnePassShortB(b *testing.B) {$/;"	f
BenchmarkNow	./time/time_test.go	/^func BenchmarkNow(b *testing.B) {$/;"	f
BenchmarkNowUnixNano	./time/time_test.go	/^func BenchmarkNowUnixNano(b *testing.B) {$/;"	f
BenchmarkOnce	./sync/once_test.go	/^func BenchmarkOnce(b *testing.B) {$/;"	f
BenchmarkOnePassLongNotPrefix	./regexp/all_test.go	/^func BenchmarkOnePassLongNotPrefix(b *testing.B) {$/;"	f
BenchmarkOnePassLongPrefix	./regexp/all_test.go	/^func BenchmarkOnePassLongPrefix(b *testing.B) {$/;"	f
BenchmarkOnePassShortA	./regexp/all_test.go	/^func BenchmarkOnePassShortA(b *testing.B) {$/;"	f
BenchmarkOnePassShortB	./regexp/all_test.go	/^func BenchmarkOnePassShortB(b *testing.B) {$/;"	f
BenchmarkPaeth	./image/png/paeth_test.go	/^func BenchmarkPaeth(b *testing.B) {$/;"	f
BenchmarkPaletted	./image/draw/bench_test.go	/^func BenchmarkPaletted(b *testing.B) {$/;"	f
BenchmarkParse	./go/parser/performance_test.go	/^func BenchmarkParse(b *testing.B) {$/;"	f
BenchmarkParse	./time/time_test.go	/^func BenchmarkParse(b *testing.B) {$/;"	f
BenchmarkParseDuration	./time/time_test.go	/^func BenchmarkParseDuration(b *testing.B) {$/;"	f
BenchmarkParseIP	./net/ip_test.go	/^func BenchmarkParseIP(b *testing.B) {$/;"	f
BenchmarkPerm3	./math/rand/rand_test.go	/^func BenchmarkPerm3(b *testing.B) {$/;"	f
BenchmarkPerm30	./math/rand/rand_test.go	/^func BenchmarkPerm30(b *testing.B) {$/;"	f
BenchmarkPhase	./math/cmplx/cmath_test.go	/^func BenchmarkPhase(b *testing.B) {$/;"	f
BenchmarkPingPongHog	./runtime/proc_test.go	/^func BenchmarkPingPongHog(b *testing.B) {$/;"	f
BenchmarkPolar	./math/cmplx/cmath_test.go	/^func BenchmarkPolar(b *testing.B) {$/;"	f
BenchmarkPool	./sync/pool_test.go	/^func BenchmarkPool(b *testing.B) {$/;"	f
BenchmarkPoolOverflow	./sync/pool_test.go	/^func BenchmarkPoolOverflow(b *testing.B) {$/;"	f
BenchmarkPow	./math/cmplx/cmath_test.go	/^func BenchmarkPow(b *testing.B) {$/;"	f
BenchmarkPow10Neg	./math/all_test.go	/^func BenchmarkPow10Neg(b *testing.B) {$/;"	f
BenchmarkPow10Pos	./math/all_test.go	/^func BenchmarkPow10Pos(b *testing.B) {$/;"	f
BenchmarkPowFrac	./math/all_test.go	/^func BenchmarkPowFrac(b *testing.B) {$/;"	f
BenchmarkPowInt	./math/all_test.go	/^func BenchmarkPowInt(b *testing.B) {$/;"	f
BenchmarkPrint	./go/printer/performance_test.go	/^func BenchmarkPrint(b *testing.B) {$/;"	f
BenchmarkPrintln	./log/log_test.go	/^func BenchmarkPrintln(b *testing.B) {$/;"	f
BenchmarkPutUvarint32	./encoding/binary/varint_test.go	/^func BenchmarkPutUvarint32(b *testing.B) {$/;"	f
BenchmarkPutUvarint64	./encoding/binary/varint_test.go	/^func BenchmarkPutUvarint64(b *testing.B) {$/;"	f
BenchmarkQDecodeHeader	./mime/encodedword_test.go	/^func BenchmarkQDecodeHeader(b *testing.B) {$/;"	f
BenchmarkQDecodeWord	./mime/encodedword_test.go	/^func BenchmarkQDecodeWord(b *testing.B) {$/;"	f
BenchmarkQEncodeWord	./mime/encodedword_test.go	/^func BenchmarkQEncodeWord(b *testing.B) {$/;"	f
BenchmarkQuantizedEncode	./image/gif/writer_test.go	/^func BenchmarkQuantizedEncode(b *testing.B) {$/;"	f
BenchmarkRC4_128	./crypto/rc4/rc4_test.go	/^func BenchmarkRC4_128(b *testing.B) {$/;"	f
BenchmarkRC4_1K	./crypto/rc4/rc4_test.go	/^func BenchmarkRC4_1K(b *testing.B) {$/;"	f
BenchmarkRC4_8K	./crypto/rc4/rc4_test.go	/^func BenchmarkRC4_8K(b *testing.B) {$/;"	f
BenchmarkRGBA	./image/draw/bench_test.go	/^func BenchmarkRGBA(b *testing.B) {$/;"	f
BenchmarkRSA2048Decrypt	./crypto/rsa/rsa_test.go	/^func BenchmarkRSA2048Decrypt(b *testing.B) {$/;"	f
BenchmarkRWMutexUncontended	./sync/rwmutex_test.go	/^func BenchmarkRWMutexUncontended(b *testing.B) {$/;"	f
BenchmarkRWMutexWorkWrite10	./sync/rwmutex_test.go	/^func BenchmarkRWMutexWorkWrite10(b *testing.B) {$/;"	f
BenchmarkRWMutexWorkWrite100	./sync/rwmutex_test.go	/^func BenchmarkRWMutexWorkWrite100(b *testing.B) {$/;"	f
BenchmarkRWMutexWrite10	./sync/rwmutex_test.go	/^func BenchmarkRWMutexWrite10(b *testing.B) {$/;"	f
BenchmarkRWMutexWrite100	./sync/rwmutex_test.go	/^func BenchmarkRWMutexWrite100(b *testing.B) {$/;"	f
BenchmarkRead	./encoding/csv/reader_test.go	/^func BenchmarkRead(b *testing.B) {$/;"	f
BenchmarkReadInts	./encoding/binary/binary_test.go	/^func BenchmarkReadInts(b *testing.B) {$/;"	f
BenchmarkReadMIMEHeader	./net/textproto/reader_test.go	/^func BenchmarkReadMIMEHeader(b *testing.B) {$/;"	f
BenchmarkReadRequestApachebench	./net/http/request_test.go	/^func BenchmarkReadRequestApachebench(b *testing.B) {$/;"	f
BenchmarkReadRequestChrome	./net/http/request_test.go	/^func BenchmarkReadRequestChrome(b *testing.B) {$/;"	f
BenchmarkReadRequestCurl	./net/http/request_test.go	/^func BenchmarkReadRequestCurl(b *testing.B) {$/;"	f
BenchmarkReadRequestSiege	./net/http/request_test.go	/^func BenchmarkReadRequestSiege(b *testing.B) {$/;"	f
BenchmarkReadRequestWrk	./net/http/request_test.go	/^func BenchmarkReadRequestWrk(b *testing.B) {$/;"	f
BenchmarkReadSlice1000Int32s	./encoding/binary/binary_test.go	/^func BenchmarkReadSlice1000Int32s(b *testing.B) {$/;"	f
BenchmarkReadString	./bytes/buffer_test.go	/^func BenchmarkReadString(b *testing.B) {$/;"	f
BenchmarkReadStruct	./encoding/binary/binary_test.go	/^func BenchmarkReadStruct(b *testing.B) {$/;"	f
BenchmarkReaderCopyNoWriteTo	./bufio/bufio_test.go	/^func BenchmarkReaderCopyNoWriteTo(b *testing.B) {$/;"	f
BenchmarkReaderCopyOptimal	./bufio/bufio_test.go	/^func BenchmarkReaderCopyOptimal(b *testing.B) {$/;"	f
BenchmarkReaderCopyUnoptimal	./bufio/bufio_test.go	/^func BenchmarkReaderCopyUnoptimal(b *testing.B) {$/;"	f
BenchmarkReaderEmpty	./bufio/bufio_test.go	/^func BenchmarkReaderEmpty(b *testing.B) {$/;"	f
BenchmarkReaderWriteToOptimal	./bufio/bufio_test.go	/^func BenchmarkReaderWriteToOptimal(b *testing.B) {$/;"	f
BenchmarkRealworldExpvarUsage	./expvar/expvar_test.go	/^func BenchmarkRealworldExpvarUsage(b *testing.B) {$/;"	f
BenchmarkRect	./math/cmplx/cmath_test.go	/^func BenchmarkRect(b *testing.B) {$/;"	f
BenchmarkRemainder	./math/all_test.go	/^func BenchmarkRemainder(b *testing.B) {$/;"	f
BenchmarkRepeat	./bytes/bytes_test.go	/^func BenchmarkRepeat(b *testing.B) {$/;"	f
BenchmarkRepeat	./strings/strings_test.go	/^func BenchmarkRepeat(b *testing.B) {$/;"	f
BenchmarkRepeatedLookupStrMapKey1M	./runtime/mapspeed_test.go	/^func BenchmarkRepeatedLookupStrMapKey1M(b *testing.B) { benchmarkRepeatedLookup(b, 1<<20) }$/;"	f
BenchmarkRepeatedLookupStrMapKey32	./runtime/mapspeed_test.go	/^func BenchmarkRepeatedLookupStrMapKey32(b *testing.B) { benchmarkRepeatedLookup(b, 32) }$/;"	f
BenchmarkReplaceAll	./regexp/all_test.go	/^func BenchmarkReplaceAll(b *testing.B) {$/;"	f
BenchmarkResult	./go/doc/testdata/benchmark.go	/^type BenchmarkResult struct {$/;"	t
BenchmarkResult	./testing/benchmark.go	/^type BenchmarkResult struct {$/;"	t
BenchmarkRuneCountTenASCIIChars	./unicode/utf8/utf8_test.go	/^func BenchmarkRuneCountTenASCIIChars(b *testing.B) {$/;"	f
BenchmarkRuneCountTenJapaneseChars	./unicode/utf8/utf8_test.go	/^func BenchmarkRuneCountTenJapaneseChars(b *testing.B) {$/;"	f
BenchmarkRuneIterate	./runtime/string_test.go	/^func BenchmarkRuneIterate(b *testing.B) {$/;"	f
BenchmarkRuneIterate2	./runtime/string_test.go	/^func BenchmarkRuneIterate2(b *testing.B) {$/;"	f
BenchmarkSameLengthMap	./runtime/mapspeed_test.go	/^func BenchmarkSameLengthMap(b *testing.B) {$/;"	f
BenchmarkSaveRestore	./index/suffixarray/suffixarray_test.go	/^func BenchmarkSaveRestore(b *testing.B) {$/;"	f
BenchmarkScan	./go/scanner/scanner_test.go	/^func BenchmarkScan(b *testing.B) {$/;"	f
BenchmarkScan100000Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100000Base10(b *testing.B) { ScanHelper(b, 10, 10, 100000) }$/;"	f
BenchmarkScan100000Base10	./math/big/natconv_test.go	/^func BenchmarkScan100000Base10(b *testing.B) { ScanHelper(b, 10, 10, 100000) }$/;"	f
BenchmarkScan100000Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100000Base16(b *testing.B) { ScanHelper(b, 16, 10, 100000) }$/;"	f
BenchmarkScan100000Base16	./math/big/natconv_test.go	/^func BenchmarkScan100000Base16(b *testing.B) { ScanHelper(b, 16, 10, 100000) }$/;"	f
BenchmarkScan100000Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100000Base2(b *testing.B) { ScanHelper(b, 2, 10, 100000) }$/;"	f
BenchmarkScan100000Base2	./math/big/natconv_test.go	/^func BenchmarkScan100000Base2(b *testing.B) { ScanHelper(b, 2, 10, 100000) }$/;"	f
BenchmarkScan100000Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100000Base8(b *testing.B) { ScanHelper(b, 8, 10, 100000) }$/;"	f
BenchmarkScan100000Base8	./math/big/natconv_test.go	/^func BenchmarkScan100000Base8(b *testing.B) { ScanHelper(b, 8, 10, 100000) }$/;"	f
BenchmarkScan10000Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10000Base10(b *testing.B)  { ScanHelper(b, 10, 10, 10000) }$/;"	f
BenchmarkScan10000Base10	./math/big/natconv_test.go	/^func BenchmarkScan10000Base10(b *testing.B)  { ScanHelper(b, 10, 10, 10000) }$/;"	f
BenchmarkScan10000Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10000Base16(b *testing.B)  { ScanHelper(b, 16, 10, 10000) }$/;"	f
BenchmarkScan10000Base16	./math/big/natconv_test.go	/^func BenchmarkScan10000Base16(b *testing.B)  { ScanHelper(b, 16, 10, 10000) }$/;"	f
BenchmarkScan10000Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10000Base2(b *testing.B)  { ScanHelper(b, 2, 10, 10000) }$/;"	f
BenchmarkScan10000Base2	./math/big/natconv_test.go	/^func BenchmarkScan10000Base2(b *testing.B)  { ScanHelper(b, 2, 10, 10000) }$/;"	f
BenchmarkScan10000Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10000Base8(b *testing.B)  { ScanHelper(b, 8, 10, 10000) }$/;"	f
BenchmarkScan10000Base8	./math/big/natconv_test.go	/^func BenchmarkScan10000Base8(b *testing.B)  { ScanHelper(b, 8, 10, 10000) }$/;"	f
BenchmarkScan1000Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan1000Base10(b *testing.B)   { ScanHelper(b, 10, 10, 1000) }$/;"	f
BenchmarkScan1000Base10	./math/big/natconv_test.go	/^func BenchmarkScan1000Base10(b *testing.B)   { ScanHelper(b, 10, 10, 1000) }$/;"	f
BenchmarkScan1000Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan1000Base16(b *testing.B)   { ScanHelper(b, 16, 10, 1000) }$/;"	f
BenchmarkScan1000Base16	./math/big/natconv_test.go	/^func BenchmarkScan1000Base16(b *testing.B)   { ScanHelper(b, 16, 10, 1000) }$/;"	f
BenchmarkScan1000Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan1000Base2(b *testing.B)   { ScanHelper(b, 2, 10, 1000) }$/;"	f
BenchmarkScan1000Base2	./math/big/natconv_test.go	/^func BenchmarkScan1000Base2(b *testing.B)   { ScanHelper(b, 2, 10, 1000) }$/;"	f
BenchmarkScan1000Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan1000Base8(b *testing.B)   { ScanHelper(b, 8, 10, 1000) }$/;"	f
BenchmarkScan1000Base8	./math/big/natconv_test.go	/^func BenchmarkScan1000Base8(b *testing.B)   { ScanHelper(b, 8, 10, 1000) }$/;"	f
BenchmarkScan100Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100Base10(b *testing.B)    { ScanHelper(b, 10, 10, 100) }$/;"	f
BenchmarkScan100Base10	./math/big/natconv_test.go	/^func BenchmarkScan100Base10(b *testing.B)    { ScanHelper(b, 10, 10, 100) }$/;"	f
BenchmarkScan100Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100Base16(b *testing.B)    { ScanHelper(b, 16, 10, 100) }$/;"	f
BenchmarkScan100Base16	./math/big/natconv_test.go	/^func BenchmarkScan100Base16(b *testing.B)    { ScanHelper(b, 16, 10, 100) }$/;"	f
BenchmarkScan100Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100Base2(b *testing.B)    { ScanHelper(b, 2, 10, 100) }$/;"	f
BenchmarkScan100Base2	./math/big/natconv_test.go	/^func BenchmarkScan100Base2(b *testing.B)    { ScanHelper(b, 2, 10, 100) }$/;"	f
BenchmarkScan100Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan100Base8(b *testing.B)    { ScanHelper(b, 8, 10, 100) }$/;"	f
BenchmarkScan100Base8	./math/big/natconv_test.go	/^func BenchmarkScan100Base8(b *testing.B)    { ScanHelper(b, 8, 10, 100) }$/;"	f
BenchmarkScan10Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10Base10(b *testing.B)     { ScanHelper(b, 10, 10, 10) }$/;"	f
BenchmarkScan10Base10	./math/big/natconv_test.go	/^func BenchmarkScan10Base10(b *testing.B)     { ScanHelper(b, 10, 10, 10) }$/;"	f
BenchmarkScan10Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10Base16(b *testing.B)     { ScanHelper(b, 16, 10, 10) }$/;"	f
BenchmarkScan10Base16	./math/big/natconv_test.go	/^func BenchmarkScan10Base16(b *testing.B)     { ScanHelper(b, 16, 10, 10) }$/;"	f
BenchmarkScan10Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10Base2(b *testing.B)     { ScanHelper(b, 2, 10, 10) }$/;"	f
BenchmarkScan10Base2	./math/big/natconv_test.go	/^func BenchmarkScan10Base2(b *testing.B)     { ScanHelper(b, 2, 10, 10) }$/;"	f
BenchmarkScan10Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScan10Base8(b *testing.B)     { ScanHelper(b, 8, 10, 10) }$/;"	f
BenchmarkScan10Base8	./math/big/natconv_test.go	/^func BenchmarkScan10Base8(b *testing.B)     { ScanHelper(b, 8, 10, 10) }$/;"	f
BenchmarkScanFile	./go/scanner/scanner_test.go	/^func BenchmarkScanFile(b *testing.B) {$/;"	f
BenchmarkScanInts	./fmt/scan_test.go	/^func BenchmarkScanInts(b *testing.B) {$/;"	f
BenchmarkScanPi	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkScanPi(b *testing.B) {$/;"	f
BenchmarkScanPi	./math/big/natconv_test.go	/^func BenchmarkScanPi(b *testing.B) {$/;"	f
BenchmarkScanRecursiveInt	./fmt/scan_test.go	/^func BenchmarkScanRecursiveInt(b *testing.B) {$/;"	f
BenchmarkSearchWrappers	./sort/search_test.go	/^func BenchmarkSearchWrappers(b *testing.B) {$/;"	f
BenchmarkSecond	./time/time_test.go	/^func BenchmarkSecond(b *testing.B) {$/;"	f
BenchmarkSelectAsyncContended	./runtime/chan_test.go	/^func BenchmarkSelectAsyncContended(b *testing.B) {$/;"	f
BenchmarkSelectNonblock	./runtime/chan_test.go	/^func BenchmarkSelectNonblock(b *testing.B) {$/;"	f
BenchmarkSelectProdCons	./runtime/chan_test.go	/^func BenchmarkSelectProdCons(b *testing.B) {$/;"	f
BenchmarkSelectSyncContended	./runtime/chan_test.go	/^func BenchmarkSelectSyncContended(b *testing.B) {$/;"	f
BenchmarkSelectUncontended	./runtime/chan_test.go	/^func BenchmarkSelectUncontended(b *testing.B) {$/;"	f
BenchmarkSemaSyntBlock	./sync/runtime_sema_test.go	/^func BenchmarkSemaSyntBlock(b *testing.B) {$/;"	f
BenchmarkSemaSyntNonblock	./sync/runtime_sema_test.go	/^func BenchmarkSemaSyntNonblock(b *testing.B) {$/;"	f
BenchmarkSemaUncontended	./sync/runtime_sema_test.go	/^func BenchmarkSemaUncontended(b *testing.B) {$/;"	f
BenchmarkSemaWorkBlock	./sync/runtime_sema_test.go	/^func BenchmarkSemaWorkBlock(b *testing.B) {$/;"	f
BenchmarkSemaWorkNonblock	./sync/runtime_sema_test.go	/^func BenchmarkSemaWorkNonblock(b *testing.B) {$/;"	f
BenchmarkServer	./net/http/serve_test.go	/^func BenchmarkServer(b *testing.B) {$/;"	f
BenchmarkServerFakeConnNoKeepAlive	./net/http/serve_test.go	/^func BenchmarkServerFakeConnNoKeepAlive(b *testing.B) {$/;"	f
BenchmarkServerFakeConnWithKeepAlive	./net/http/serve_test.go	/^func BenchmarkServerFakeConnWithKeepAlive(b *testing.B) {$/;"	f
BenchmarkServerFakeConnWithKeepAliveLite	./net/http/serve_test.go	/^func BenchmarkServerFakeConnWithKeepAliveLite(b *testing.B) {$/;"	f
BenchmarkServerHandlerNoHeader	./net/http/serve_test.go	/^func BenchmarkServerHandlerNoHeader(b *testing.B) {$/;"	f
BenchmarkServerHandlerNoLen	./net/http/serve_test.go	/^func BenchmarkServerHandlerNoLen(b *testing.B) {$/;"	f
BenchmarkServerHandlerNoType	./net/http/serve_test.go	/^func BenchmarkServerHandlerNoType(b *testing.B) {$/;"	f
BenchmarkServerHandlerTypeLen	./net/http/serve_test.go	/^func BenchmarkServerHandlerTypeLen(b *testing.B) {$/;"	f
BenchmarkServerHijack	./net/http/serve_test.go	/^func BenchmarkServerHijack(b *testing.B) {$/;"	f
BenchmarkSetTypeNode1	./runtime/gc_test.go	/^func BenchmarkSetTypeNode1(b *testing.B) {$/;"	f
BenchmarkSetTypeNode1024	./runtime/gc_test.go	/^func BenchmarkSetTypeNode1024(b *testing.B) {$/;"	f
BenchmarkSetTypeNode1024Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode1024Slice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode124	./runtime/gc_test.go	/^func BenchmarkSetTypeNode124(b *testing.B) {$/;"	f
BenchmarkSetTypeNode124Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode124Slice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode126	./runtime/gc_test.go	/^func BenchmarkSetTypeNode126(b *testing.B) {$/;"	f
BenchmarkSetTypeNode126Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode126Slice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode128	./runtime/gc_test.go	/^func BenchmarkSetTypeNode128(b *testing.B) {$/;"	f
BenchmarkSetTypeNode128Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode128Slice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode130	./runtime/gc_test.go	/^func BenchmarkSetTypeNode130(b *testing.B) {$/;"	f
BenchmarkSetTypeNode130Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode130Slice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode1Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode1Slice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode64	./runtime/gc_test.go	/^func BenchmarkSetTypeNode64(b *testing.B) {$/;"	f
BenchmarkSetTypeNode64Dead	./runtime/gc_test.go	/^func BenchmarkSetTypeNode64Dead(b *testing.B) {$/;"	f
BenchmarkSetTypeNode64DeadSlice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode64DeadSlice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode64Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode64Slice(b *testing.B) {$/;"	f
BenchmarkSetTypeNode8	./runtime/gc_test.go	/^func BenchmarkSetTypeNode8(b *testing.B) {$/;"	f
BenchmarkSetTypeNode8Slice	./runtime/gc_test.go	/^func BenchmarkSetTypeNode8Slice(b *testing.B) {$/;"	f
BenchmarkSetTypePtr	./runtime/gc_test.go	/^func BenchmarkSetTypePtr(b *testing.B) {$/;"	f
BenchmarkSetTypePtr126	./runtime/gc_test.go	/^func BenchmarkSetTypePtr126(b *testing.B) {$/;"	f
BenchmarkSetTypePtr128	./runtime/gc_test.go	/^func BenchmarkSetTypePtr128(b *testing.B) {$/;"	f
BenchmarkSetTypePtr16	./runtime/gc_test.go	/^func BenchmarkSetTypePtr16(b *testing.B) {$/;"	f
BenchmarkSetTypePtr32	./runtime/gc_test.go	/^func BenchmarkSetTypePtr32(b *testing.B) {$/;"	f
BenchmarkSetTypePtr64	./runtime/gc_test.go	/^func BenchmarkSetTypePtr64(b *testing.B) {$/;"	f
BenchmarkSetTypePtr8	./runtime/gc_test.go	/^func BenchmarkSetTypePtr8(b *testing.B) {$/;"	f
BenchmarkSetTypePtrSlice	./runtime/gc_test.go	/^func BenchmarkSetTypePtrSlice(b *testing.B) {$/;"	f
BenchmarkSignbit	./math/all_test.go	/^func BenchmarkSignbit(b *testing.B) {$/;"	f
BenchmarkSimultaneousAfterFunc	./time/sleep_test.go	/^func BenchmarkSimultaneousAfterFunc(b *testing.B) {$/;"	f
BenchmarkSin	./math/all_test.go	/^func BenchmarkSin(b *testing.B) {$/;"	f
BenchmarkSin	./math/cmplx/cmath_test.go	/^func BenchmarkSin(b *testing.B) {$/;"	f
BenchmarkSincos	./math/all_test.go	/^func BenchmarkSincos(b *testing.B) {$/;"	f
BenchmarkSingleLongSuffixFail	./strings/replace_test.go	/^func BenchmarkSingleLongSuffixFail(b *testing.B) {$/;"	f
BenchmarkSingleMatch	./strings/replace_test.go	/^func BenchmarkSingleMatch(b *testing.B) {$/;"	f
BenchmarkSingleMaxSkipping	./strings/replace_test.go	/^func BenchmarkSingleMaxSkipping(b *testing.B) {$/;"	f
BenchmarkSinh	./math/all_test.go	/^func BenchmarkSinh(b *testing.B) {$/;"	f
BenchmarkSinh	./math/cmplx/cmath_test.go	/^func BenchmarkSinh(b *testing.B) {$/;"	f
BenchmarkSkipValue	./encoding/json/scanner_test.go	/^func BenchmarkSkipValue(b *testing.B) {$/;"	f
BenchmarkSmallKeyMap	./runtime/mapspeed_test.go	/^func BenchmarkSmallKeyMap(b *testing.B) {$/;"	f
BenchmarkSmallStrMap	./runtime/mapspeed_test.go	/^func BenchmarkSmallStrMap(b *testing.B) {$/;"	f
BenchmarkSort1e2	./sort/sort_test.go	/^func BenchmarkSort1e2(b *testing.B)   { bench(b, 1e2, Sort, "Sort") }$/;"	f
BenchmarkSort1e4	./sort/sort_test.go	/^func BenchmarkSort1e4(b *testing.B)   { bench(b, 1e4, Sort, "Sort") }$/;"	f
BenchmarkSort1e6	./sort/sort_test.go	/^func BenchmarkSort1e6(b *testing.B)   { bench(b, 1e6, Sort, "Sort") }$/;"	f
BenchmarkSortInt1K	./sort/sort_test.go	/^func BenchmarkSortInt1K(b *testing.B) {$/;"	f
BenchmarkSortInt64K	./sort/sort_test.go	/^func BenchmarkSortInt64K(b *testing.B) {$/;"	f
BenchmarkSortString1K	./sort/sort_test.go	/^func BenchmarkSortString1K(b *testing.B) {$/;"	f
BenchmarkSplit1	./strings/strings_test.go	/^func BenchmarkSplit1(b *testing.B) {$/;"	f
BenchmarkSplit2	./strings/strings_test.go	/^func BenchmarkSplit2(b *testing.B) {$/;"	f
BenchmarkSplit3	./strings/strings_test.go	/^func BenchmarkSplit3(b *testing.B) {$/;"	f
BenchmarkSprintfEmpty	./fmt/fmt_test.go	/^func BenchmarkSprintfEmpty(b *testing.B) {$/;"	f
BenchmarkSprintfFloat	./fmt/fmt_test.go	/^func BenchmarkSprintfFloat(b *testing.B) {$/;"	f
BenchmarkSprintfInt	./fmt/fmt_test.go	/^func BenchmarkSprintfInt(b *testing.B) {$/;"	f
BenchmarkSprintfIntInt	./fmt/fmt_test.go	/^func BenchmarkSprintfIntInt(b *testing.B) {$/;"	f
BenchmarkSprintfPrefixedInt	./fmt/fmt_test.go	/^func BenchmarkSprintfPrefixedInt(b *testing.B) {$/;"	f
BenchmarkSprintfString	./fmt/fmt_test.go	/^func BenchmarkSprintfString(b *testing.B) {$/;"	f
BenchmarkSqrt	./math/all_test.go	/^func BenchmarkSqrt(b *testing.B) {$/;"	f
BenchmarkSqrt	./math/cmplx/cmath_test.go	/^func BenchmarkSqrt(b *testing.B) {$/;"	f
BenchmarkSqrtGo	./math/all_test.go	/^func BenchmarkSqrtGo(b *testing.B) {$/;"	f
BenchmarkSqrtIndirect	./math/all_test.go	/^func BenchmarkSqrtIndirect(b *testing.B) {$/;"	f
BenchmarkSqrtPrime	./math/all_test.go	/^func BenchmarkSqrtPrime(b *testing.B) {$/;"	f
BenchmarkStable1e2	./sort/sort_test.go	/^func BenchmarkStable1e2(b *testing.B) { bench(b, 1e2, Stable, "Stable") }$/;"	f
BenchmarkStable1e4	./sort/sort_test.go	/^func BenchmarkStable1e4(b *testing.B) { bench(b, 1e4, Stable, "Stable") }$/;"	f
BenchmarkStable1e6	./sort/sort_test.go	/^func BenchmarkStable1e6(b *testing.B) { bench(b, 1e6, Stable, "Stable") }$/;"	f
BenchmarkStableInt1K	./sort/sort_test.go	/^func BenchmarkStableInt1K(b *testing.B) {$/;"	f
BenchmarkStableInt64K	./sort/sort_test.go	/^func BenchmarkStableInt64K(b *testing.B) {$/;"	f
BenchmarkStableString1K	./sort/sort_test.go	/^func BenchmarkStableString1K(b *testing.B) {$/;"	f
BenchmarkStackCopy	./runtime/stack_test.go	/^func BenchmarkStackCopy(b *testing.B) {$/;"	f
BenchmarkStackGrowth	./runtime/proc_test.go	/^func BenchmarkStackGrowth(b *testing.B) {$/;"	f
BenchmarkStackGrowthDeep	./runtime/proc_test.go	/^func BenchmarkStackGrowthDeep(b *testing.B) {$/;"	f
BenchmarkStartStop	./time/sleep_test.go	/^func BenchmarkStartStop(b *testing.B) {$/;"	f
BenchmarkStop	./time/sleep_test.go	/^func BenchmarkStop(b *testing.B) {$/;"	f
BenchmarkString	./net/url/url_test.go	/^func BenchmarkString(b *testing.B) {$/;"	f
BenchmarkString100000Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100000Base10(b *testing.B) { StringHelper(b, 10, 10, 100000) }$/;"	f
BenchmarkString100000Base10	./math/big/natconv_test.go	/^func BenchmarkString100000Base10(b *testing.B) { StringHelper(b, 10, 10, 100000) }$/;"	f
BenchmarkString100000Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100000Base16(b *testing.B) { StringHelper(b, 16, 10, 100000) }$/;"	f
BenchmarkString100000Base16	./math/big/natconv_test.go	/^func BenchmarkString100000Base16(b *testing.B) { StringHelper(b, 16, 10, 100000) }$/;"	f
BenchmarkString100000Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100000Base2(b *testing.B) { StringHelper(b, 2, 10, 100000) }$/;"	f
BenchmarkString100000Base2	./math/big/natconv_test.go	/^func BenchmarkString100000Base2(b *testing.B) { StringHelper(b, 2, 10, 100000) }$/;"	f
BenchmarkString100000Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100000Base8(b *testing.B) { StringHelper(b, 8, 10, 100000) }$/;"	f
BenchmarkString100000Base8	./math/big/natconv_test.go	/^func BenchmarkString100000Base8(b *testing.B) { StringHelper(b, 8, 10, 100000) }$/;"	f
BenchmarkString10000Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10000Base10(b *testing.B)  { StringHelper(b, 10, 10, 10000) }$/;"	f
BenchmarkString10000Base10	./math/big/natconv_test.go	/^func BenchmarkString10000Base10(b *testing.B)  { StringHelper(b, 10, 10, 10000) }$/;"	f
BenchmarkString10000Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10000Base16(b *testing.B)  { StringHelper(b, 16, 10, 10000) }$/;"	f
BenchmarkString10000Base16	./math/big/natconv_test.go	/^func BenchmarkString10000Base16(b *testing.B)  { StringHelper(b, 16, 10, 10000) }$/;"	f
BenchmarkString10000Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10000Base2(b *testing.B)  { StringHelper(b, 2, 10, 10000) }$/;"	f
BenchmarkString10000Base2	./math/big/natconv_test.go	/^func BenchmarkString10000Base2(b *testing.B)  { StringHelper(b, 2, 10, 10000) }$/;"	f
BenchmarkString10000Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10000Base8(b *testing.B)  { StringHelper(b, 8, 10, 10000) }$/;"	f
BenchmarkString10000Base8	./math/big/natconv_test.go	/^func BenchmarkString10000Base8(b *testing.B)  { StringHelper(b, 8, 10, 10000) }$/;"	f
BenchmarkString1000Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString1000Base10(b *testing.B)   { StringHelper(b, 10, 10, 1000) }$/;"	f
BenchmarkString1000Base10	./math/big/natconv_test.go	/^func BenchmarkString1000Base10(b *testing.B)   { StringHelper(b, 10, 10, 1000) }$/;"	f
BenchmarkString1000Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString1000Base16(b *testing.B)   { StringHelper(b, 16, 10, 1000) }$/;"	f
BenchmarkString1000Base16	./math/big/natconv_test.go	/^func BenchmarkString1000Base16(b *testing.B)   { StringHelper(b, 16, 10, 1000) }$/;"	f
BenchmarkString1000Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString1000Base2(b *testing.B)   { StringHelper(b, 2, 10, 1000) }$/;"	f
BenchmarkString1000Base2	./math/big/natconv_test.go	/^func BenchmarkString1000Base2(b *testing.B)   { StringHelper(b, 2, 10, 1000) }$/;"	f
BenchmarkString1000Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString1000Base8(b *testing.B)   { StringHelper(b, 8, 10, 1000) }$/;"	f
BenchmarkString1000Base8	./math/big/natconv_test.go	/^func BenchmarkString1000Base8(b *testing.B)   { StringHelper(b, 8, 10, 1000) }$/;"	f
BenchmarkString100Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100Base10(b *testing.B)    { StringHelper(b, 10, 10, 100) }$/;"	f
BenchmarkString100Base10	./math/big/natconv_test.go	/^func BenchmarkString100Base10(b *testing.B)    { StringHelper(b, 10, 10, 100) }$/;"	f
BenchmarkString100Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100Base16(b *testing.B)    { StringHelper(b, 16, 10, 100) }$/;"	f
BenchmarkString100Base16	./math/big/natconv_test.go	/^func BenchmarkString100Base16(b *testing.B)    { StringHelper(b, 16, 10, 100) }$/;"	f
BenchmarkString100Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100Base2(b *testing.B)    { StringHelper(b, 2, 10, 100) }$/;"	f
BenchmarkString100Base2	./math/big/natconv_test.go	/^func BenchmarkString100Base2(b *testing.B)    { StringHelper(b, 2, 10, 100) }$/;"	f
BenchmarkString100Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString100Base8(b *testing.B)    { StringHelper(b, 8, 10, 100) }$/;"	f
BenchmarkString100Base8	./math/big/natconv_test.go	/^func BenchmarkString100Base8(b *testing.B)    { StringHelper(b, 8, 10, 100) }$/;"	f
BenchmarkString10Base10	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10Base10(b *testing.B)     { StringHelper(b, 10, 10, 10) }$/;"	f
BenchmarkString10Base10	./math/big/natconv_test.go	/^func BenchmarkString10Base10(b *testing.B)     { StringHelper(b, 10, 10, 10) }$/;"	f
BenchmarkString10Base16	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10Base16(b *testing.B)     { StringHelper(b, 16, 10, 10) }$/;"	f
BenchmarkString10Base16	./math/big/natconv_test.go	/^func BenchmarkString10Base16(b *testing.B)     { StringHelper(b, 16, 10, 10) }$/;"	f
BenchmarkString10Base2	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10Base2(b *testing.B)     { StringHelper(b, 2, 10, 10) }$/;"	f
BenchmarkString10Base2	./math/big/natconv_test.go	/^func BenchmarkString10Base2(b *testing.B)     { StringHelper(b, 2, 10, 10) }$/;"	f
BenchmarkString10Base8	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkString10Base8(b *testing.B)     { StringHelper(b, 8, 10, 10) }$/;"	f
BenchmarkString10Base8	./math/big/natconv_test.go	/^func BenchmarkString10Base8(b *testing.B)     { StringHelper(b, 8, 10, 10) }$/;"	f
BenchmarkStringPiParallel	./cmd/compile/internal/big/natconv_test.go	/^func BenchmarkStringPiParallel(b *testing.B) {$/;"	f
BenchmarkStringPiParallel	./math/big/natconv_test.go	/^func BenchmarkStringPiParallel(b *testing.B) {$/;"	f
BenchmarkStringSet	./expvar/expvar_test.go	/^func BenchmarkStringSet(b *testing.B) {$/;"	f
BenchmarkStripTags	./html/template/html_test.go	/^func BenchmarkStripTags(b *testing.B) {$/;"	f
BenchmarkStripTagsNoSpecials	./html/template/html_test.go	/^func BenchmarkStripTagsNoSpecials(b *testing.B) {$/;"	f
BenchmarkSyscall	./runtime/norace_test.go	/^func BenchmarkSyscall(b *testing.B) {$/;"	f
BenchmarkSyscallExcess	./runtime/norace_test.go	/^func BenchmarkSyscallExcess(b *testing.B) {$/;"	f
BenchmarkSyscallExcessWork	./runtime/norace_test.go	/^func BenchmarkSyscallExcessWork(b *testing.B) {$/;"	f
BenchmarkSyscallWork	./runtime/norace_test.go	/^func BenchmarkSyscallWork(b *testing.B) {$/;"	f
BenchmarkTCP4ConcurrentReadWrite	./net/tcp_test.go	/^func BenchmarkTCP4ConcurrentReadWrite(b *testing.B) {$/;"	f
BenchmarkTCP4OneShot	./net/tcp_test.go	/^func BenchmarkTCP4OneShot(b *testing.B) {$/;"	f
BenchmarkTCP4OneShotTimeout	./net/tcp_test.go	/^func BenchmarkTCP4OneShotTimeout(b *testing.B) {$/;"	f
BenchmarkTCP4Persistent	./net/tcp_test.go	/^func BenchmarkTCP4Persistent(b *testing.B) {$/;"	f
BenchmarkTCP4PersistentTimeout	./net/tcp_test.go	/^func BenchmarkTCP4PersistentTimeout(b *testing.B) {$/;"	f
BenchmarkTCP6ConcurrentReadWrite	./net/tcp_test.go	/^func BenchmarkTCP6ConcurrentReadWrite(b *testing.B) {$/;"	f
BenchmarkTCP6OneShot	./net/tcp_test.go	/^func BenchmarkTCP6OneShot(b *testing.B) {$/;"	f
BenchmarkTCP6OneShotTimeout	./net/tcp_test.go	/^func BenchmarkTCP6OneShotTimeout(b *testing.B) {$/;"	f
BenchmarkTCP6Persistent	./net/tcp_test.go	/^func BenchmarkTCP6Persistent(b *testing.B) {$/;"	f
BenchmarkTCP6PersistentTimeout	./net/tcp_test.go	/^func BenchmarkTCP6PersistentTimeout(b *testing.B) {$/;"	f
BenchmarkTan	./math/all_test.go	/^func BenchmarkTan(b *testing.B) {$/;"	f
BenchmarkTan	./math/cmplx/cmath_test.go	/^func BenchmarkTan(b *testing.B) {$/;"	f
BenchmarkTanh	./math/all_test.go	/^func BenchmarkTanh(b *testing.B) {$/;"	f
BenchmarkTanh	./math/cmplx/cmath_test.go	/^func BenchmarkTanh(b *testing.B) {$/;"	f
BenchmarkTemplateParallel	./testing/testing.go	/^\/\/     func BenchmarkTemplateParallel(b *testing.B) {$/;"	f
BenchmarkTemplateSpecialTags	./html/template/transition_test.go	/^func BenchmarkTemplateSpecialTags(b *testing.B) {$/;"	f
BenchmarkTicker	./time/tick_test.go	/^func BenchmarkTicker(b *testing.B) {$/;"	f
BenchmarkTrim	./strings/strings_test.go	/^func BenchmarkTrim(b *testing.B) {$/;"	f
BenchmarkTrimSpace	./bytes/bytes_test.go	/^func BenchmarkTrimSpace(b *testing.B) {$/;"	f
BenchmarkTrunc	./math/all_test.go	/^func BenchmarkTrunc(b *testing.B) {$/;"	f
BenchmarkURLEscaper	./html/template/url_test.go	/^func BenchmarkURLEscaper(b *testing.B) {$/;"	f
BenchmarkURLEscaperNoSpecials	./html/template/url_test.go	/^func BenchmarkURLEscaperNoSpecials(b *testing.B) {$/;"	f
BenchmarkURLNormalizer	./html/template/url_test.go	/^func BenchmarkURLNormalizer(b *testing.B) {$/;"	f
BenchmarkURLNormalizerNoSpecials	./html/template/url_test.go	/^func BenchmarkURLNormalizerNoSpecials(b *testing.B) {$/;"	f
BenchmarkUint32Div106956295	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div106956295(b *testing.B) { bmUint32Div(106956295, b) }$/;"	f
BenchmarkUint32Div123	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div123(b *testing.B)       { bmUint32Div(123, b) }$/;"	f
BenchmarkUint32Div1247	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div1247(b *testing.B)      { bmUint32Div(1247, b) }$/;"	f
BenchmarkUint32Div13307	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div13307(b *testing.B)     { bmUint32Div(13307, b) }$/;"	f
BenchmarkUint32Div37	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div37(b *testing.B)        { bmUint32Div(37, b) }$/;"	f
BenchmarkUint32Div52513	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div52513(b *testing.B)     { bmUint32Div(52513, b) }$/;"	f
BenchmarkUint32Div60978747	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div60978747(b *testing.B)  { bmUint32Div(60978747, b) }$/;"	f
BenchmarkUint32Div7	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div7(b *testing.B)         { bmUint32Div(7, b) }$/;"	f
BenchmarkUint32Div763	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div763(b *testing.B)       { bmUint32Div(763, b) }$/;"	f
BenchmarkUint32Div9305	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Div9305(b *testing.B)      { bmUint32Div(9305, b) }$/;"	f
BenchmarkUint32Mod106956295	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod106956295(b *testing.B) { bmUint32Mod(106956295, b) }$/;"	f
BenchmarkUint32Mod123	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod123(b *testing.B)       { bmUint32Mod(123, b) }$/;"	f
BenchmarkUint32Mod1247	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod1247(b *testing.B)      { bmUint32Mod(1247, b) }$/;"	f
BenchmarkUint32Mod13307	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod13307(b *testing.B)     { bmUint32Mod(13307, b) }$/;"	f
BenchmarkUint32Mod37	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod37(b *testing.B)        { bmUint32Mod(37, b) }$/;"	f
BenchmarkUint32Mod52513	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod52513(b *testing.B)     { bmUint32Mod(52513, b) }$/;"	f
BenchmarkUint32Mod60978747	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod60978747(b *testing.B)  { bmUint32Mod(60978747, b) }$/;"	f
BenchmarkUint32Mod7	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod7(b *testing.B)         { bmUint32Mod(7, b) }$/;"	f
BenchmarkUint32Mod763	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod763(b *testing.B)       { bmUint32Mod(763, b) }$/;"	f
BenchmarkUint32Mod9305	./runtime/vlop_arm_test.go	/^func BenchmarkUint32Mod9305(b *testing.B)      { bmUint32Mod(9305, b) }$/;"	f
BenchmarkUncommon	./net/textproto/reader_test.go	/^func BenchmarkUncommon(b *testing.B) {$/;"	f
BenchmarkUncontendedSemaphore	./sync/mutex_test.go	/^func BenchmarkUncontendedSemaphore(b *testing.B) {$/;"	f
BenchmarkUnescape	./html/escape_test.go	/^func BenchmarkUnescape(b *testing.B) {$/;"	f
BenchmarkUnescapeNone	./html/escape_test.go	/^func BenchmarkUnescapeNone(b *testing.B) {$/;"	f
BenchmarkUnmarshal	./encoding/xml/marshal_test.go	/^func BenchmarkUnmarshal(b *testing.B) {$/;"	f
BenchmarkUnmarshalFloat64	./encoding/json/bench_test.go	/^func BenchmarkUnmarshalFloat64(b *testing.B) {$/;"	f
BenchmarkUnmarshalInt64	./encoding/json/bench_test.go	/^func BenchmarkUnmarshalInt64(b *testing.B) {$/;"	f
BenchmarkUnmarshalString	./encoding/json/bench_test.go	/^func BenchmarkUnmarshalString(b *testing.B) {$/;"	f
BenchmarkUnquoteEasy	./strconv/quote_test.go	/^func BenchmarkUnquoteEasy(b *testing.B) {$/;"	f
BenchmarkUnquoteHard	./strconv/quote_test.go	/^func BenchmarkUnquoteHard(b *testing.B) {$/;"	f
BenchmarkValueRead	./sync/atomic/value_test.go	/^func BenchmarkValueRead(b *testing.B) {$/;"	f
BenchmarkWaitGroupActuallyWait	./sync/waitgroup_test.go	/^func BenchmarkWaitGroupActuallyWait(b *testing.B) {$/;"	f
BenchmarkWaitGroupAddDone	./sync/waitgroup_test.go	/^func BenchmarkWaitGroupAddDone(b *testing.B) {$/;"	f
BenchmarkWaitGroupAddDoneWork	./sync/waitgroup_test.go	/^func BenchmarkWaitGroupAddDoneWork(b *testing.B) {$/;"	f
BenchmarkWaitGroupUncontended	./sync/waitgroup_test.go	/^func BenchmarkWaitGroupUncontended(b *testing.B) {$/;"	f
BenchmarkWaitGroupWait	./sync/waitgroup_test.go	/^func BenchmarkWaitGroupWait(b *testing.B) {$/;"	f
BenchmarkWaitGroupWaitWork	./sync/waitgroup_test.go	/^func BenchmarkWaitGroupWaitWork(b *testing.B) {$/;"	f
BenchmarkWriteInts	./encoding/binary/binary_test.go	/^func BenchmarkWriteInts(b *testing.B) {$/;"	f
BenchmarkWriteSlice1000Int32s	./encoding/binary/binary_test.go	/^func BenchmarkWriteSlice1000Int32s(b *testing.B) {$/;"	f
BenchmarkWriter	./mime/quotedprintable/writer_test.go	/^func BenchmarkWriter(b *testing.B) {$/;"	f
BenchmarkWriterCopyNoReadFrom	./bufio/bufio_test.go	/^func BenchmarkWriterCopyNoReadFrom(b *testing.B) {$/;"	f
BenchmarkWriterCopyOptimal	./bufio/bufio_test.go	/^func BenchmarkWriterCopyOptimal(b *testing.B) {$/;"	f
BenchmarkWriterCopyUnoptimal	./bufio/bufio_test.go	/^func BenchmarkWriterCopyUnoptimal(b *testing.B) {$/;"	f
BenchmarkWriterEmpty	./bufio/bufio_test.go	/^func BenchmarkWriterEmpty(b *testing.B) {$/;"	f
BenchmarkWriterFlush	./bufio/bufio_test.go	/^func BenchmarkWriterFlush(b *testing.B) {$/;"	f
BenchmarkXXX	./cmd/go/alldocs.go	/^	func BenchmarkXXX(b *testing.B) { ... }$/;"	f
BenchmarkXXX	./cmd/go/test.go	/^	func BenchmarkXXX(b *testing.B) { ... }$/;"	f
BenchmarkXxx	./go/doc/testdata/testing.go	/^\/\/     func BenchmarkXxx(*testing.B)$/;"	f
BenchmarkXxx	./testing/testing.go	/^\/\/     func BenchmarkXxx(*testing.B)$/;"	f
BenchmarkY0	./math/all_test.go	/^func BenchmarkY0(b *testing.B) {$/;"	f
BenchmarkY1	./math/all_test.go	/^func BenchmarkY1(b *testing.B) {$/;"	f
BenchmarkYCbCr	./image/draw/bench_test.go	/^func BenchmarkYCbCr(b *testing.B) {$/;"	f
BenchmarkYear	./time/time_test.go	/^func BenchmarkYear(b *testing.B) {$/;"	f
BenchmarkYn	./math/all_test.go	/^func BenchmarkYn(b *testing.B) {$/;"	f
BenchmarkZip64Test	./archive/zip/zip_test.go	/^func BenchmarkZip64Test(b *testing.B) {$/;"	f
Bgen	./cmd/compile/internal/gc/cgen.go	/^func Bgen(n *Node, wantTrue bool, likely int, to *obj.Prog) {$/;"	f
Bgetc	./cmd/internal/obj/util.go	/^func Bgetc(b *Biobuf) int {$/;"	f
Bgetrune	./cmd/internal/obj/util.go	/^func Bgetrune(b *Biobuf) int {$/;"	f
Big	./math/floor_amd64.s	/^#define Big		0x4330000000000000 \/\/ 2**52$/;"	d
Big	./runtime/race/testdata/map_test.go	/^type Big struct {$/;"	t
BigEndian	./encoding/binary/binary.go	/^var BigEndian bigEndian$/;"	v
BigEndian	./runtime/export_test.go	/^var BigEndian = _BigEndian$/;"	v
BigKey	./runtime/mapspeed_test.go	/^type BigKey [3]int64$/;"	t
BigKey	./runtime/race/testdata/map_test.go	/^type BigKey [1000]*int$/;"	t
BigStruct	./runtime/gcinfo_test.go	/^type BigStruct struct {$/;"	t
BigVal	./runtime/mapspeed_test.go	/^type BigVal [3]int64$/;"	t
BigVal	./runtime/race/testdata/map_test.go	/^type BigVal struct {$/;"	t
Bigptrscalar	./reflect/all_test.go	/^		type Bigptrscalar struct {$/;"	t
BinOpTest	./bytes/bytes_test.go	/^type BinOpTest struct {$/;"	t
Binary	./cmd/compile/internal/big/nat.go	/^\/\/   func (z *T) Binary(x, y *T) *T    \/\/ z = x op y$/;"	f
Binary	./math/big/nat.go	/^\/\/   func (z *T) Binary(x, y *T) *T    \/\/ z = x op y$/;"	f
BinaryGobber	./encoding/gob/gobencdec_test.go	/^type BinaryGobber int$/;"	t
BinaryMarshaler	./encoding/encoding.go	/^type BinaryMarshaler interface {$/;"	t
BinaryOp	./go/constant/value.go	/^func BinaryOp(x Value, op token.Token, y Value) Value {$/;"	f
BinaryUnmarshaler	./encoding/encoding.go	/^type BinaryUnmarshaler interface {$/;"	t
BinaryValueGobber	./encoding/gob/gobencdec_test.go	/^type BinaryValueGobber string$/;"	t
Bind	./syscall/net_nacl.go	/^func Bind(fd int, sa Sockaddr) error {$/;"	f
Bind	./syscall/syscall_plan9.go	/^func Bind(name string, old string, flag int) (err error) {$/;"	f
Bind	./syscall/syscall_unix.go	/^func Bind(fd int, sa Sockaddr) (err error) {$/;"	f
Bind	./syscall/syscall_windows.go	/^func Bind(fd Handle, sa Sockaddr) (err error) {$/;"	f
BindToDevice	./syscall/syscall_linux.go	/^func BindToDevice(fd int, device string) (err error) {$/;"	f
Binitw	./cmd/internal/obj/util.go	/^func Binitw(w io.Writer) *Biobuf {$/;"	f
Binomial	./cmd/compile/internal/big/int.go	/^func (z *Int) Binomial(n, k int64) *Int {$/;"	f
Binomial	./math/big/int.go	/^func (z *Int) Binomial(n, k int64) *Int {$/;"	f
Biobuf	./cmd/internal/obj/util.go	/^type Biobuf struct {$/;"	t
Bit	./cmd/compile/internal/big/int.go	/^func (x *Int) Bit(i int) uint {$/;"	f
Bit	./math/big/int.go	/^func (x *Int) Bit(i int) uint {$/;"	f
BitIndex	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) BitIndex() int64 {$/;"	f
BitLen	./cmd/compile/internal/big/int.go	/^func (x *Int) BitLen() int {$/;"	f
BitLen	./go/constant/value.go	/^func BitLen(x Value) int {$/;"	f
BitLen	./math/big/int.go	/^func (x *Int) BitLen() int {$/;"	f
BitString	./encoding/asn1/asn1.go	/^type BitString struct {$/;"	t
Bitno	./cmd/compile/internal/gc/reg.go	/^func Bitno(b uint64) int {$/;"	f
Bits	./cmd/compile/internal/big/bits_test.go	/^type Bits []int$/;"	t
Bits	./cmd/compile/internal/big/int.go	/^func (x *Int) Bits() []Word {$/;"	f
Bits	./cmd/compile/internal/gc/reg.go	/^	ivar    Bits \/\/ function parameters (inputs)$/;"	v
Bits	./cmd/compile/internal/gc/reg.go	/^	ovar    Bits \/\/ function results (outputs)$/;"	v
Bits	./cmd/compile/internal/gc/reg.go	/^type Bits struct {$/;"	t
Bits	./math/big/bits_test.go	/^type Bits []int$/;"	t
Bits	./math/big/int.go	/^func (x *Int) Bits() []Word {$/;"	f
Bits	./reflect/type.go	/^func (t *rtype) Bits() int {$/;"	f
BlankFields	./encoding/binary/binary_test.go	/^type BlankFields struct {$/;"	t
BlankFieldsProbe	./encoding/binary/binary_test.go	/^type BlankFieldsProbe struct {$/;"	t
Blinelen	./cmd/internal/obj/util.go	/^func Blinelen(b *Biobuf) int {$/;"	f
Block	./cmd/cover/cover.go	/^type Block struct {$/;"	t
Block	./crypto/cipher/cipher.go	/^type Block interface {$/;"	t
Block	./encoding/pem/pem.go	/^type Block struct {$/;"	t
BlockMode	./crypto/cipher/cipher.go	/^type BlockMode interface {$/;"	t
BlockProfile	./runtime/mprof.go	/^func BlockProfile(p []BlockProfileRecord) (n int, ok bool) {$/;"	f
BlockProfileRecord	./runtime/mprof.go	/^type BlockProfileRecord struct {$/;"	t
BlockSize	./crypto/aes/cipher.go	/^func (c *aesCipher) BlockSize() int { return BlockSize }$/;"	f
BlockSize	./crypto/cipher/cbc.go	/^func (x *cbcDecrypter) BlockSize() int { return x.blockSize }$/;"	f
BlockSize	./crypto/cipher/cbc.go	/^func (x *cbcEncrypter) BlockSize() int { return x.blockSize }$/;"	f
BlockSize	./crypto/des/cipher.go	/^func (c *desCipher) BlockSize() int { return BlockSize }$/;"	f
BlockSize	./crypto/des/cipher.go	/^func (c *tripleDESCipher) BlockSize() int { return BlockSize }$/;"	f
BlockSize	./crypto/hmac/hmac.go	/^func (h *hmac) BlockSize() int { return h.blocksize }$/;"	f
BlockSize	./crypto/md5/md5.go	/^func (d *digest) BlockSize() int { return BlockSize }$/;"	f
BlockSize	./crypto/sha1/sha1.go	/^func (d *digest) BlockSize() int { return BlockSize }$/;"	f
BlockSize	./crypto/sha256/sha256.go	/^func (d *digest) BlockSize() int { return BlockSize }$/;"	f
BlockSize	./crypto/sha512/sha512.go	/^func (d *digest) BlockSize() int { return BlockSize }$/;"	f
BlockSize	./hash/adler32/adler32.go	/^func (d *digest) BlockSize() int { return 1 }$/;"	f
BlockSize	./hash/crc32/crc32.go	/^func (d *digest) BlockSize() int { return 1 }$/;"	f
BlockSize	./hash/crc64/crc64.go	/^func (d *digest) BlockSize() int { return 1 }$/;"	f
BlockSize	./hash/fnv/fnv.go	/^func (s *sum32) BlockSize() int  { return 1 }$/;"	f
BlockSize	./hash/fnv/fnv.go	/^func (s *sum32a) BlockSize() int { return 1 }$/;"	f
BlockSize	./hash/fnv/fnv.go	/^func (s *sum64) BlockSize() int  { return 1 }$/;"	f
BlockSize	./hash/fnv/fnv.go	/^func (s *sum64a) BlockSize() int { return 1 }$/;"	f
Boffset	./cmd/internal/obj/util.go	/^func Boffset(b *Biobuf) int64 {$/;"	f
Book	./encoding/xml/marshal_test.go	/^type Book struct {$/;"	t
Bool	./cmd/compile/internal/gc/const.go	/^func (n *Node) Bool() bool {$/;"	f
Bool	./cmd/pprof/pprof.go	/^func (flags) Bool(o string, d bool, c string) *bool {$/;"	f
Bool	./database/sql/driver/types.go	/^var Bool boolType$/;"	v
Bool	./flag/flag.go	/^func (f *FlagSet) Bool(name string, value bool, usage string) *bool {$/;"	f
Bool	./flag/flag.go	/^func Bool(name string, value bool, usage string) *bool {$/;"	f
Bool	./reflect/value.go	/^func (v Value) Bool() bool {$/;"	f
Bool2int	./cmd/internal/obj/util.go	/^func Bool2int(b bool) int {$/;"	f
BoolNode	./text/template/parse/node.go	/^type BoolNode struct {$/;"	t
BoolTmpVarCode	./syscall/mksyscall_windows.go	/^func (p *Param) BoolTmpVarCode() string {$/;"	f
BoolType	./debug/dwarf/type.go	/^type BoolType struct {$/;"	t
BoolVal	./go/constant/value.go	/^func BoolVal(x Value) bool {$/;"	f
BoolVar	./flag/flag.go	/^func (f *FlagSet) BoolVar(p *bool, name string, value bool, usage string) {$/;"	f
BoolVar	./flag/flag.go	/^func BoolVar(p *bool, name string, value bool, usage string) {$/;"	f
Bopenr	./cmd/internal/obj/util.go	/^func Bopenr(name string) (*Biobuf, error) {$/;"	f
Bopenw	./cmd/internal/obj/util.go	/^func Bopenw(name string) (*Biobuf, error) {$/;"	f
Boundaries	./cmd/cover/profile.go	/^func (p *Profile) Boundaries(src []byte) (boundaries []Boundary) {$/;"	f
Boundary	./cmd/cover/profile.go	/^type Boundary struct {$/;"	t
Boundary	./mime/multipart/writer.go	/^func (w *Writer) Boundary() string {$/;"	f
Bounds	./image/geom.go	/^func (r Rectangle) Bounds() Rectangle {$/;"	f
Bounds	./image/image.go	/^func (p *Alpha) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *Alpha16) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *CMYK) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *Gray) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *Gray16) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *NRGBA) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *NRGBA64) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *Paletted) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *RGBA) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/image.go	/^func (p *RGBA64) Bounds() Rectangle { return p.Rect }$/;"	f
Bounds	./image/names.go	/^func (c *Uniform) Bounds() Rectangle { return Rectangle{Point{-1e9, -1e9}, Point{1e9, 1e9}} }$/;"	f
Bounds	./image/ycbcr.go	/^func (p *YCbCr) Bounds() Rectangle {$/;"	f
BpfBuflen	./syscall/bpf_bsd.go	/^func BpfBuflen(fd int) (int, error) {$/;"	f
BpfDatalink	./syscall/bpf_bsd.go	/^func BpfDatalink(fd int) (int, error) {$/;"	f
BpfHdr	./syscall/types_darwin.go	/^type BpfHdr C.struct_bpf_hdr$/;"	t
BpfHdr	./syscall/types_dragonfly.go	/^type BpfHdr C.struct_bpf_hdr$/;"	t
BpfHdr	./syscall/types_freebsd.go	/^type BpfHdr C.struct_bpf_hdr$/;"	t
BpfHdr	./syscall/types_netbsd.go	/^type BpfHdr C.struct_bpf_hdr$/;"	t
BpfHdr	./syscall/types_openbsd.go	/^type BpfHdr C.struct_bpf_hdr$/;"	t
BpfHdr	./syscall/types_solaris.go	/^type BpfHdr C.struct_bpf_hdr$/;"	t
BpfHdr	./syscall/ztypes_darwin_386.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_darwin_amd64.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_darwin_arm.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_darwin_arm64.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_dragonfly_amd64.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_freebsd_386.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_freebsd_amd64.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_freebsd_arm.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_netbsd_386.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_netbsd_amd64.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_netbsd_arm.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_openbsd_386.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_openbsd_amd64.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_openbsd_arm.go	/^type BpfHdr struct {$/;"	t
BpfHdr	./syscall/ztypes_solaris_amd64.go	/^type BpfHdr struct {$/;"	t
BpfHeadercmpl	./syscall/bpf_bsd.go	/^func BpfHeadercmpl(fd int) (int, error) {$/;"	f
BpfInsn	./syscall/types_darwin.go	/^type BpfInsn C.struct_bpf_insn$/;"	t
BpfInsn	./syscall/types_dragonfly.go	/^type BpfInsn C.struct_bpf_insn$/;"	t
BpfInsn	./syscall/types_freebsd.go	/^type BpfInsn C.struct_bpf_insn$/;"	t
BpfInsn	./syscall/types_netbsd.go	/^type BpfInsn C.struct_bpf_insn$/;"	t
BpfInsn	./syscall/types_openbsd.go	/^type BpfInsn C.struct_bpf_insn$/;"	t
BpfInsn	./syscall/types_solaris.go	/^type BpfInsn C.struct_bpf_insn$/;"	t
BpfInsn	./syscall/ztypes_darwin_386.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_darwin_amd64.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_darwin_arm.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_darwin_arm64.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_dragonfly_amd64.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_freebsd_386.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_freebsd_amd64.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_freebsd_arm.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_netbsd_386.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_netbsd_amd64.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_netbsd_arm.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_openbsd_386.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_openbsd_amd64.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_openbsd_arm.go	/^type BpfInsn struct {$/;"	t
BpfInsn	./syscall/ztypes_solaris_amd64.go	/^type BpfInsn struct {$/;"	t
BpfInterface	./syscall/bpf_bsd.go	/^func BpfInterface(fd int, name string) (string, error) {$/;"	f
BpfJump	./syscall/bpf_bsd.go	/^func BpfJump(code, k, jt, jf int) *BpfInsn {$/;"	f
BpfProgram	./syscall/types_darwin.go	/^type BpfProgram C.struct_bpf_program$/;"	t
BpfProgram	./syscall/types_dragonfly.go	/^type BpfProgram C.struct_bpf_program$/;"	t
BpfProgram	./syscall/types_freebsd.go	/^type BpfProgram C.struct_bpf_program$/;"	t
BpfProgram	./syscall/types_netbsd.go	/^type BpfProgram C.struct_bpf_program$/;"	t
BpfProgram	./syscall/types_openbsd.go	/^type BpfProgram C.struct_bpf_program$/;"	t
BpfProgram	./syscall/types_solaris.go	/^type BpfProgram C.struct_bpf_program$/;"	t
BpfProgram	./syscall/ztypes_darwin_386.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_darwin_amd64.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_darwin_arm.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_darwin_arm64.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_dragonfly_amd64.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_freebsd_386.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_freebsd_amd64.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_freebsd_arm.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_netbsd_386.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_netbsd_amd64.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_netbsd_arm.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_openbsd_386.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_openbsd_amd64.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_openbsd_arm.go	/^type BpfProgram struct {$/;"	t
BpfProgram	./syscall/ztypes_solaris_amd64.go	/^type BpfProgram struct {$/;"	t
BpfStat	./syscall/types_darwin.go	/^type BpfStat C.struct_bpf_stat$/;"	t
BpfStat	./syscall/types_dragonfly.go	/^type BpfStat C.struct_bpf_stat$/;"	t
BpfStat	./syscall/types_freebsd.go	/^type BpfStat C.struct_bpf_stat$/;"	t
BpfStat	./syscall/types_netbsd.go	/^type BpfStat C.struct_bpf_stat$/;"	t
BpfStat	./syscall/types_openbsd.go	/^type BpfStat C.struct_bpf_stat$/;"	t
BpfStat	./syscall/types_solaris.go	/^type BpfStat C.struct_bpf_stat$/;"	t
BpfStat	./syscall/ztypes_darwin_386.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_darwin_amd64.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_darwin_arm.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_darwin_arm64.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_dragonfly_amd64.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_freebsd_386.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_freebsd_amd64.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_freebsd_arm.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_netbsd_386.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_netbsd_amd64.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_netbsd_arm.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_openbsd_386.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_openbsd_amd64.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_openbsd_arm.go	/^type BpfStat struct {$/;"	t
BpfStat	./syscall/ztypes_solaris_amd64.go	/^type BpfStat struct {$/;"	t
BpfStats	./syscall/bpf_bsd.go	/^func BpfStats(fd int) (*BpfStat, error) {$/;"	f
BpfStmt	./syscall/bpf_bsd.go	/^func BpfStmt(code, k int) *BpfInsn {$/;"	f
BpfTimeout	./syscall/bpf_bsd.go	/^func BpfTimeout(fd int) (*Timeval, error) {$/;"	f
BpfTimeval	./syscall/types_netbsd.go	/^type BpfTimeval C.struct_bpf_timeval$/;"	t
BpfTimeval	./syscall/types_openbsd.go	/^type BpfTimeval C.struct_bpf_timeval$/;"	t
BpfTimeval	./syscall/types_solaris.go	/^type BpfTimeval C.struct_bpf_timeval$/;"	t
BpfTimeval	./syscall/ztypes_netbsd_386.go	/^type BpfTimeval struct {$/;"	t
BpfTimeval	./syscall/ztypes_netbsd_amd64.go	/^type BpfTimeval struct {$/;"	t
BpfTimeval	./syscall/ztypes_netbsd_arm.go	/^type BpfTimeval struct {$/;"	t
BpfTimeval	./syscall/ztypes_openbsd_386.go	/^type BpfTimeval struct {$/;"	t
BpfTimeval	./syscall/ztypes_openbsd_amd64.go	/^type BpfTimeval struct {$/;"	t
BpfTimeval	./syscall/ztypes_openbsd_arm.go	/^type BpfTimeval struct {$/;"	t
BpfTimeval	./syscall/ztypes_solaris_amd64.go	/^type BpfTimeval struct {$/;"	t
BpfVersion	./syscall/types_darwin.go	/^type BpfVersion C.struct_bpf_version$/;"	t
BpfVersion	./syscall/types_dragonfly.go	/^type BpfVersion C.struct_bpf_version$/;"	t
BpfVersion	./syscall/types_freebsd.go	/^type BpfVersion C.struct_bpf_version$/;"	t
BpfVersion	./syscall/types_netbsd.go	/^type BpfVersion C.struct_bpf_version$/;"	t
BpfVersion	./syscall/types_openbsd.go	/^type BpfVersion C.struct_bpf_version$/;"	t
BpfVersion	./syscall/types_solaris.go	/^type BpfVersion C.struct_bpf_version$/;"	t
BpfVersion	./syscall/ztypes_darwin_386.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_darwin_amd64.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_darwin_arm.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_darwin_arm64.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_dragonfly_amd64.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_freebsd_386.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_freebsd_amd64.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_freebsd_arm.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_netbsd_386.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_netbsd_amd64.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_netbsd_arm.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_openbsd_386.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_openbsd_amd64.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_openbsd_arm.go	/^type BpfVersion struct {$/;"	t
BpfVersion	./syscall/ztypes_solaris_amd64.go	/^type BpfVersion struct {$/;"	t
BpfZbuf	./syscall/types_freebsd.go	/^type BpfZbuf C.struct_bpf_zbuf$/;"	t
BpfZbuf	./syscall/ztypes_freebsd_386.go	/^type BpfZbuf struct {$/;"	t
BpfZbuf	./syscall/ztypes_freebsd_amd64.go	/^type BpfZbuf struct {$/;"	t
BpfZbuf	./syscall/ztypes_freebsd_arm.go	/^type BpfZbuf struct {$/;"	t
BpfZbufHeader	./syscall/types_freebsd.go	/^type BpfZbufHeader C.struct_bpf_zbuf_header$/;"	t
BpfZbufHeader	./syscall/ztypes_freebsd_386.go	/^type BpfZbufHeader struct {$/;"	t
BpfZbufHeader	./syscall/ztypes_freebsd_amd64.go	/^type BpfZbufHeader struct {$/;"	t
BpfZbufHeader	./syscall/ztypes_freebsd_arm.go	/^type BpfZbufHeader struct {$/;"	t
Bputc	./cmd/internal/obj/util.go	/^func Bputc(b *Biobuf, c byte) {$/;"	f
Bputname	./cmd/compile/internal/gc/obj.go	/^func Bputname(b *obj.Biobuf, s *obj.LSym) {$/;"	f
BranchNode	./text/template/parse/node.go	/^type BranchNode struct {$/;"	t
Brchain	./cmd/internal/obj/pass.go	/^func Brchain(ctxt *Link, p *Prog) *Prog {$/;"	f
Brcom	./cmd/compile/internal/gc/subr.go	/^func Brcom(a int) int {$/;"	f
Brdline	./cmd/internal/obj/util.go	/^func Brdline(b *Biobuf, delim int) string {$/;"	f
Brdstr	./cmd/internal/obj/util.go	/^func Brdstr(b *Biobuf, delim int, cut int) string {$/;"	f
Bread	./cmd/internal/obj/util.go	/^func Bread(b *Biobuf, p []byte) int {$/;"	f
Breakpoint	./runtime/proc1.go	/^func Breakpoint() {$/;"	f
Broadcast	./sync/cond.go	/^func (c *Cond) Broadcast() {$/;"	f
Brrev	./cmd/compile/internal/gc/subr.go	/^func Brrev(a int) int {$/;"	f
Bseek	./cmd/internal/obj/util.go	/^func Bseek(b *Biobuf, offset int64, whence int) int64 {$/;"	f
Bterm	./cmd/internal/obj/util.go	/^func Bterm(b *Biobuf) error {$/;"	f
BtoF	./cmd/compile/internal/amd64/reg.go	/^func BtoF(b uint64) int {$/;"	f
BtoF	./cmd/compile/internal/arm/reg.go	/^func BtoF(b uint64) int {$/;"	f
BtoF	./cmd/compile/internal/arm64/reg.go	/^func BtoF(b uint64) int {$/;"	f
BtoF	./cmd/compile/internal/ppc64/reg.go	/^func BtoF(b uint64) int {$/;"	f
BtoF	./cmd/compile/internal/x86/reg.go	/^func BtoF(b uint64) int {$/;"	f
BtoR	./cmd/compile/internal/amd64/reg.go	/^func BtoR(b uint64) int {$/;"	f
BtoR	./cmd/compile/internal/arm/reg.go	/^func BtoR(b uint64) int {$/;"	f
BtoR	./cmd/compile/internal/arm64/reg.go	/^func BtoR(b uint64) int {$/;"	f
BtoR	./cmd/compile/internal/ppc64/reg.go	/^func BtoR(b uint64) int {$/;"	f
BtoR	./cmd/compile/internal/x86/reg.go	/^func BtoR(b uint64) int {$/;"	f
Buffer	./bytes/buffer.go	/^type Buffer struct {$/;"	t
Buffer	./io/io_test.go	/^type Buffer struct {$/;"	t
Buffered	./bufio/bufio.go	/^func (b *Reader) Buffered() int { return b.w - b.r }$/;"	f
Buffered	./bufio/bufio.go	/^func (b *Writer) Buffered() int { return b.n }$/;"	f
Buffered	./encoding/json/stream.go	/^func (dec *Decoder) Buffered() io.Reader {$/;"	f
Bug0Inner	./encoding/gob/encoder_test.go	/^type Bug0Inner struct {$/;"	t
Bug0Outer	./encoding/gob/encoder_test.go	/^type Bug0Outer struct {$/;"	t
Bug1Elem	./encoding/gob/encoder_test.go	/^type Bug1Elem struct {$/;"	t
Bug1StructMap	./encoding/gob/encoder_test.go	/^type Bug1StructMap map[string]Bug1Elem$/;"	t
Bug2	./encoding/gob/encoder_test.go	/^type Bug2 struct {$/;"	t
Bug3	./encoding/gob/encoder_test.go	/^type Bug3 struct {$/;"	t
Bug4Public	./encoding/gob/encoder_test.go	/^type Bug4Public struct {$/;"	t
Bug4Secret	./encoding/gob/encoder_test.go	/^type Bug4Secret struct {$/;"	t
BugA	./encoding/json/encode_test.go	/^type BugA struct {$/;"	t
BugB	./encoding/json/encode_test.go	/^type BugB struct {$/;"	t
BugC	./encoding/json/encode_test.go	/^type BugC struct {$/;"	t
BugD	./encoding/json/encode_test.go	/^type BugD struct { \/\/ Same as BugA after tagging.$/;"	t
BugX	./encoding/json/encode_test.go	/^type BugX struct {$/;"	t
BugY	./encoding/json/encode_test.go	/^type BugY struct {$/;"	t
BugZ	./encoding/json/encode_test.go	/^type BugZ struct {$/;"	t
BuildID	./cmd/pprof/pprof.go	/^func (f *file) BuildID() string {$/;"	f
BuildMode	./cmd/link/internal/ld/lib.go	/^type BuildMode uint8$/;"	t
BuildNameToCertificate	./crypto/tls/common.go	/^func (c *Config) BuildNameToCertificate() {$/;"	f
Builder	./internal/testenv/testenv.go	/^func Builder() string {$/;"	f
Builtin	./go/types/object.go	/^type Builtin struct {$/;"	t
Bungetrune	./cmd/internal/obj/util.go	/^func Bungetrune(b *Biobuf) {$/;"	f
Bvec	./cmd/compile/internal/gc/bv.go	/^type Bvec struct {$/;"	t
Bvec	./cmd/compile/internal/gc/plive.go	/^	uevar    Bvec$/;"	v
Bvec	./cmd/compile/internal/gc/plive.go	/^func printeffects(p *obj.Prog, uevar Bvec, varkill Bvec, avarinit Bvec) {$/;"	v
Bvec	./cmd/compile/internal/gc/plive.go	/^func progeffects(prog *obj.Prog, vars []*Node, uevar Bvec, varkill Bvec, avarinit Bvec) {$/;"	v
Bvgen	./cmd/compile/internal/gc/cgen.go	/^func Bvgen(n, res *Node, wantTrue bool) {$/;"	f
Bwritestring	./cmd/internal/obj/util.go	/^func Bwritestring(b *Biobuf, p string) (int, error) {$/;"	f
By	./sort/example_keys_test.go	/^type By func(p1, p2 *Planet) bool$/;"	t
ByAge	./sort/example_interface_test.go	/^type ByAge []Person$/;"	t
ByHandleFileInformation	./syscall/ztypes_windows.go	/^type ByHandleFileInformation struct {$/;"	t
ByName	./sort/example_wrapper_test.go	/^type ByName struct{ Organs }$/;"	t
ByWeight	./sort/example_wrapper_test.go	/^type ByWeight struct{ Organs }$/;"	t
Byte	./cmd/api/testdata/src/pkg/p1/p1.go	/^var Byte byte$/;"	v
ByteFunc	./cmd/api/testdata/src/pkg/p1/p1.go	/^var ByteFunc func(byte) rune$/;"	v
ByteOrder	./encoding/binary/binary.go	/^type ByteOrder interface {$/;"	t
BytePtrFromString	./syscall/syscall.go	/^func BytePtrFromString(s string) (*byte, error) {$/;"	f
ByteReader	./io/io.go	/^type ByteReader interface {$/;"	t
ByteScanner	./io/io.go	/^type ByteScanner interface {$/;"	t
ByteSliceFromString	./syscall/syscall.go	/^func ByteSliceFromString(s string) ([]byte, error) {$/;"	f
ByteStruct	./cmd/api/testdata/src/pkg/p1/p1.go	/^type ByteStruct struct {$/;"	t
ByteStruct	./encoding/gob/gobencdec_test.go	/^type ByteStruct struct {$/;"	t
ByteWriter	./io/io.go	/^type ByteWriter interface {$/;"	t
Bytes	./bufio/scan.go	/^func (s *Scanner) Bytes() []byte {$/;"	f
Bytes	./bytes/buffer.go	/^func (b *Buffer) Bytes() []byte { return b.buf[b.off:] }$/;"	f
Bytes	./cmd/compile/internal/big/int.go	/^func (x *Int) Bytes() []byte {$/;"	f
Bytes	./encoding/gob/decode.go	/^func (d *decBuffer) Bytes() []byte {$/;"	f
Bytes	./encoding/gob/encode.go	/^func (e *encBuffer) Bytes() []byte {$/;"	f
Bytes	./go/constant/value.go	/^func Bytes(x Value) []byte {$/;"	f
Bytes	./index/suffixarray/suffixarray.go	/^func (x *Index) Bytes() []byte {$/;"	f
Bytes	./math/big/int.go	/^func (x *Int) Bytes() []byte {$/;"	f
Bytes	./net/udpsock_plan9.go	/^func (h *udpHeader) Bytes() []byte {$/;"	f
Bytes	./reflect/value.go	/^func (v Value) Bytes() []byte {$/;"	f
BytesHash	./runtime/export_test.go	/^var BytesHash = bytesHash$/;"	v
BytesKey	./runtime/hash_test.go	/^type BytesKey struct {$/;"	t
C	./cmd/cgo/doc.go	/^	func C.CString(string) *C.char$/;"	f
C	./cmd/cgo/doc.go	/^	func C.GoBytes(unsafe.Pointer, C.int) []byte$/;"	f
C	./cmd/cgo/doc.go	/^	func C.GoString(*C.char) string$/;"	f
C	./cmd/cgo/doc.go	/^	func C.GoStringN(*C.char, C.int) string$/;"	f
C128	./go/types/builtins_test.go	/^	{"imag", `type C128 complex128; var c C128; _ = imag(c)`, `func(p.C128) float64`},$/;"	t
C128	./go/types/builtins_test.go	/^	{"real", `type C128 complex128; var c C128; _ = real(c)`, `func(p.C128) float64`},$/;"	t
C64	./go/types/builtins_test.go	/^	{"imag", `type C64 complex64; var c C64; _ = imag(c)`, `func(p.C64) float32`},$/;"	t
C64	./go/types/builtins_test.go	/^	{"real", `type C64 complex64; var c C64; _ = real(c)`, `func(p.C64) float32`},$/;"	t
CALL	./runtime/asm_386.s	/^	CALL	DI$/;"	d
CALL	./runtime/asm_amd64.s	/^	CALL	DI$/;"	d
CALL	./runtime/asm_amd64p32.s	/^	CALL	DI$/;"	d
CALL	./runtime/cgo/asm_amd64.s	/^	CALL	DI	\/* fn *\/$/;"	d
CALL	./runtime/sys_darwin_amd64.s	/^	CALL	DX	\/\/ fn$/;"	d
CALL	./runtime/sys_solaris_amd64.s	/^	CALL	DI	\/\/ SysV ABI so returns in AX$/;"	d
CALLFN	./runtime/asm_386.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
CALLFN	./runtime/asm_amd64.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
CALLFN	./runtime/asm_amd64p32.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
CALLFN	./runtime/asm_arm.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
CALLFN	./runtime/asm_arm64.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
CALLFN	./runtime/asm_ppc64x.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
CC	./make.bat	/^set CC=%CC_FOR_TARGET%$/;"	v
CConv	./cmd/internal/obj/util.go	/^func CConv(s uint8) string {$/;"	f
CIDRMask	./net/ip.go	/^func CIDRMask(ones, bits int) IPMask {$/;"	f
CLOCK_MONOTONIC	./runtime/sys_openbsd_386.s	/^#define	CLOCK_MONOTONIC	$3$/;"	d
CLOCK_MONOTONIC	./runtime/sys_openbsd_amd64.s	/^#define CLOCK_MONOTONIC	$3$/;"	d
CLOCK_MONOTONIC	./runtime/sys_openbsd_arm.s	/^#define	CLOCK_MONOTONIC	$3$/;"	d
CLOCK_REALTIME	./runtime/sys_openbsd_arm.s	/^#define CLOCK_REALTIME	$0$/;"	d
CMYK	./image/color/ycbcr.go	/^type CMYK struct {$/;"	t
CMYK	./image/image.go	/^type CMYK struct {$/;"	t
CMYKAt	./image/image.go	/^func (p *CMYK) CMYKAt(x, y int) color.CMYK {$/;"	f
CMYKModel	./image/color/ycbcr.go	/^var CMYKModel Model = ModelFunc(cmykModel)$/;"	v
CMYKToRGB	./image/color/ycbcr.go	/^func CMYKToRGB(c, m, y, k uint8) (uint8, uint8, uint8) {$/;"	f
COFFSym	./cmd/link/internal/ld/pe.go	/^type COFFSym struct {$/;"	t
COFFSymbol	./debug/pe/pe.go	/^type COFFSymbol struct {$/;"	t
CONTENTS_CODE	./runtime/sys_linux_386.s	/^#define CONTENTS_CODE 0x04$/;"	d
CONTENTS_DATA	./runtime/sys_linux_386.s	/^#define CONTENTS_DATA 0x00$/;"	d
CONTENTS_STACK	./runtime/sys_linux_386.s	/^#define CONTENTS_STACK 0x02$/;"	d
COffset	./image/ycbcr.go	/^func (p *YCbCr) COffset(x, y int) int {$/;"	f
CPUProfile	./runtime/cpuprof.go	/^func CPUProfile() []byte {$/;"	f
CRAMMD5Auth	./net/smtp/auth.go	/^func CRAMMD5Auth(username, secret string) Auth {$/;"	f
CRTValue	./crypto/rsa/rsa.go	/^type CRTValue struct {$/;"	t
CText	./encoding/json/encode_test.go	/^type CText int$/;"	t
CachedBucketOf	./reflect/export_test.go	/^func CachedBucketOf(m Type) Type {$/;"	f
Call	./net/rpc/client.go	/^func (client *Client) Call(serviceMethod string, args interface{}, reply interface{}) error {$/;"	f
Call	./net/rpc/client.go	/^type Call struct {$/;"	t
Call	./net/rpc/server_test.go	/^func (codec *CodecEmulator) Call(serviceMethod string, args *Args, reply *Reply) error {$/;"	f
Call	./reflect/value.go	/^func (v Value) Call(in []Value) []Value {$/;"	f
Call	./syscall/dll_windows.go	/^func (p *LazyProc) Call(a ...uintptr) (r1, r2 uintptr, lastErr error) {$/;"	f
Call	./syscall/dll_windows.go	/^func (p *Proc) Call(a ...uintptr) (r1, r2 uintptr, lastErr error) {$/;"	f
Call	./syscall/srpc_nacl.go	/^func (c *srpcClient) Call(name string, arg ...interface{}) (ret []interface{}, err error) {$/;"	f
CallGC	./reflect/export_test.go	/^var CallGC = &callGC$/;"	v
CallSlice	./reflect/value.go	/^func (v Value) CallSlice(in []Value) []Value {$/;"	f
Caller	./runtime/extern.go	/^func Caller(skip int) (pc uintptr, file string, line int, ok bool) {$/;"	f
Callers	./runtime/extern.go	/^func Callers(skip int, pc []uintptr) int {$/;"	f
CanAddr	./reflect/value.go	/^func (v Value) CanAddr() bool {$/;"	f
CanBackquote	./strconv/quote.go	/^func CanBackquote(s string) bool {$/;"	f
CanInterface	./reflect/value.go	/^func (v Value) CanInterface() bool {$/;"	f
CanSet	./reflect/value.go	/^func (v Value) CanSet() bool {$/;"	f
CancelIo	./syscall/zsyscall_windows.go	/^func CancelIo(s Handle) (err error) {$/;"	f
CancelIoEx	./syscall/zsyscall_windows.go	/^func CancelIoEx(s Handle, o *Overlapped) (err error) {$/;"	f
CancelRequest	./net/http/transport.go	/^func (t *Transport) CancelRequest(req *Request) {$/;"	f
Canon	./image/geom.go	/^func (r Rectangle) Canon() Rectangle {$/;"	f
CanonicalHeaderKey	./net/http/header.go	/^func CanonicalHeaderKey(s string) string { return textproto.CanonicalMIMEHeaderKey(s) }$/;"	f
CanonicalMIMEHeaderKey	./net/textproto/reader.go	/^func CanonicalMIMEHeaderKey(s string) string {$/;"	f
Cap	./bytes/buffer.go	/^func (b *Buffer) Cap() int { return cap(b.buf) }$/;"	f
Cap	./reflect/value.go	/^func (v Value) Cap() int {$/;"	f
CapNames	./regexp/syntax/regexp.go	/^func (re *Regexp) CapNames() []string {$/;"	f
CapitalMethodUnexportedType	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (myInt) CapitalMethodUnexportedType() {}$/;"	f
CaseRange	./unicode/letter.go	/^type CaseRange struct {$/;"	t
CaseRanges	./unicode/maketables.go	/^			"var CaseRanges = _CaseRanges\\n"+$/;"	v
CaseRanges	./unicode/tables.go	/^var CaseRanges = _CaseRanges$/;"	v
Categories	./unicode/maketables.go	/^		println("var Categories = map[string] *RangeTable {")$/;"	v
Categories	./unicode/tables.go	/^var Categories = map[string]*RangeTable{$/;"	v
Cbrt	./math/cbrt.go	/^func Cbrt(x float64) float64 {$/;"	f
Ceil	./math/floor.go	/^func Ceil(x float64) float64$/;"	f
Celsius	./go/types/example_test.go	/^type Celsius float64$/;"	t
Celsius	./text/template/doc.go	/^types, such as "type Celsius float32"). They implement the Go rules$/;"	t
CertAddCertificateContextToStore	./syscall/zsyscall_windows.go	/^func CertAddCertificateContextToStore(store Handle, certContext *CertContext, addDisposition uint32, storeContext **CertContext) (err error) {$/;"	f
CertChainContext	./syscall/ztypes_windows.go	/^type CertChainContext struct {$/;"	t
CertChainElement	./syscall/ztypes_windows.go	/^type CertChainElement struct {$/;"	t
CertChainPara	./syscall/ztypes_windows.go	/^type CertChainPara struct {$/;"	t
CertChainPolicyPara	./syscall/ztypes_windows.go	/^type CertChainPolicyPara struct {$/;"	t
CertChainPolicyStatus	./syscall/ztypes_windows.go	/^type CertChainPolicyStatus struct {$/;"	t
CertCloseStore	./syscall/zsyscall_windows.go	/^func CertCloseStore(store Handle, flags uint32) (err error) {$/;"	f
CertContext	./syscall/ztypes_windows.go	/^type CertContext struct {$/;"	t
CertCreateCertificateContext	./syscall/zsyscall_windows.go	/^func CertCreateCertificateContext(certEncodingType uint32, certEncoded *byte, encodedLen uint32) (context *CertContext, err error) {$/;"	f
CertEnhKeyUsage	./syscall/ztypes_windows.go	/^type CertEnhKeyUsage struct {$/;"	t
CertEnumCertificatesInStore	./syscall/zsyscall_windows.go	/^func CertEnumCertificatesInStore(store Handle, prevContext *CertContext) (context *CertContext, err error) {$/;"	f
CertFreeCertificateChain	./syscall/zsyscall_windows.go	/^func CertFreeCertificateChain(ctx *CertChainContext) {$/;"	f
CertFreeCertificateContext	./syscall/zsyscall_windows.go	/^func CertFreeCertificateContext(ctx *CertContext) (err error) {$/;"	f
CertGetCertificateChain	./syscall/zsyscall_windows.go	/^func CertGetCertificateChain(engine Handle, leaf *CertContext, time *Filetime, additionalStore Handle, para *CertChainPara, flags uint32, reserved uintptr, chainCtx **CertChainContext) (err error) {$/;"	f
CertOpenStore	./syscall/zsyscall_windows.go	/^func CertOpenStore(storeProvider uintptr, msgAndCertEncodingType uint32, cryptProv uintptr, flags uint32, para uintptr) (handle Handle, err error) {$/;"	f
CertOpenSystemStore	./syscall/zsyscall_windows.go	/^func CertOpenSystemStore(hprov Handle, name *uint16) (store Handle, err error) {$/;"	f
CertPool	./crypto/x509/cert_pool.go	/^type CertPool struct {$/;"	t
CertRevocationInfo	./syscall/ztypes_windows.go	/^type CertRevocationInfo struct {$/;"	t
CertSimpleChain	./syscall/ztypes_windows.go	/^type CertSimpleChain struct {$/;"	t
CertTrustStatus	./syscall/ztypes_windows.go	/^type CertTrustStatus struct {$/;"	t
CertUsageMatch	./syscall/ztypes_windows.go	/^type CertUsageMatch struct {$/;"	t
CertVerifyCertificateChainPolicy	./syscall/zsyscall_windows.go	/^func CertVerifyCertificateChainPolicy(policyOID uintptr, chain *CertChainContext, para *CertChainPolicyPara, status *CertChainPolicyStatus) (err error) {$/;"	f
Certificate	./crypto/tls/common.go	/^type Certificate struct {$/;"	t
Certificate	./crypto/x509/x509.go	/^type Certificate struct {$/;"	t
Certificate	./encoding/asn1/asn1_test.go	/^type Certificate struct {$/;"	t
CertificateInvalidError	./crypto/x509/verify.go	/^type CertificateInvalidError struct {$/;"	t
CertificateList	./crypto/x509/pkix/pkix.go	/^type CertificateList struct {$/;"	t
CertificateRequest	./crypto/x509/x509.go	/^type CertificateRequest struct {$/;"	t
Cflush	./cmd/link/internal/ld/lib.go	/^func Cflush() {$/;"	f
Cgen	./cmd/compile/internal/gc/cgen.go	/^func Cgen(n, res *Node) {$/;"	f
CgenTemp	./cmd/compile/internal/gc/gen.go	/^func CgenTemp(n *Node) *Node {$/;"	f
Cgen_As2dottype	./cmd/compile/internal/gc/gen.go	/^func Cgen_As2dottype(n, res, resok *Node) {$/;"	f
Cgen_as	./cmd/compile/internal/gc/gen.go	/^func Cgen_as(nl, nr *Node) {$/;"	f
Cgen_as_wb	./cmd/compile/internal/gc/gen.go	/^func Cgen_as_wb(nl, nr *Node, wb bool) {$/;"	f
Cgen_checknil	./cmd/compile/internal/gc/pgen.go	/^func Cgen_checknil(n *Node) {$/;"	f
Cgen_eface	./cmd/compile/internal/gc/gen.go	/^func Cgen_eface(n *Node, res *Node) {$/;"	f
Cgenr	./cmd/compile/internal/gc/cgen.go	/^func Cgenr(n *Node, a *Node, res *Node) {$/;"	f
Chain	./cmd/link/internal/ld/lib.go	/^type Chain struct {$/;"	t
ChainNode	./text/template/parse/node.go	/^type ChainNode struct {$/;"	t
Chan	./go/types/type.go	/^type Chan struct {$/;"	t
Chan	./net/http/triv.go	/^type Chan chan int$/;"	t
ChanCreate	./net/http/triv.go	/^func ChanCreate() Chan {$/;"	f
ChanDir	./go/ast/ast.go	/^type ChanDir int$/;"	t
ChanDir	./go/types/type.go	/^type ChanDir int$/;"	t
ChanDir	./reflect/type.go	/^func (t *rtype) ChanDir() ChanDir {$/;"	f
ChanDir	./reflect/type.go	/^type ChanDir int$/;"	t
ChanOf	./reflect/type.go	/^func ChanOf(dir ChanDir, t Type) Type {$/;"	f
ChanTypePrinter	./runtime/runtime-gdb.py	/^class ChanTypePrinter:$/;"	c
Change	./sort/example_multi_test.go	/^type Change struct {$/;"	t
Char	./unicode/maketables.go	/^type Char struct {$/;"	t
CharData	./encoding/xml/xml.go	/^type CharData []byte$/;"	t
CharType	./debug/dwarf/type.go	/^type CharType struct {$/;"	t
ChardataEmptyTest	./encoding/xml/marshal_test.go	/^type ChardataEmptyTest struct {$/;"	t
Chdir	./os/file.go	/^func (f *File) Chdir() error {$/;"	f
Chdir	./os/file.go	/^func Chdir(dir string) error {$/;"	f
Chdir	./syscall/fs_nacl.go	/^func Chdir(path string) error {$/;"	f
Chdir	./syscall/pwd_plan9.go	/^func Chdir(path string) error {$/;"	f
Chdir	./syscall/syscall_windows.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_darwin_386.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_darwin_amd64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_darwin_arm.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_darwin_arm64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_dragonfly_amd64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_freebsd_386.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_freebsd_amd64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_freebsd_arm.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_linux_386.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_linux_amd64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_linux_arm.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_linux_arm64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_linux_ppc64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_linux_ppc64le.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_netbsd_386.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_netbsd_amd64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_netbsd_arm.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_openbsd_386.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_openbsd_amd64.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_openbsd_arm.go	/^func Chdir(path string) (err error) {$/;"	f
Chdir	./syscall/zsyscall_solaris_amd64.go	/^func Chdir(path string) (err error) {$/;"	f
Check	./go/types/api.go	/^func (conf *Config) Check(path string, fset *token.FileSet, files []*ast.File, info *Info) (*Package, error) {$/;"	f
Check	./testing/quick/quick.go	/^func Check(f interface{}, config *Config) (err error) {$/;"	f
CheckBpfVersion	./syscall/bpf_bsd.go	/^func CheckBpfVersion(fd int) error {$/;"	f
CheckCRLSignature	./crypto/x509/x509.go	/^func (c *Certificate) CheckCRLSignature(crl *pkix.CertificateList) (err error) {$/;"	f
CheckEqual	./testing/quick/quick.go	/^func CheckEqual(f, g interface{}, config *Config) (err error) {$/;"	f
CheckEqualError	./testing/quick/quick.go	/^type CheckEqualError struct {$/;"	t
CheckError	./testing/quick/quick.go	/^type CheckError struct {$/;"	t
CheckMAC	./crypto/hmac/hmac.go	/^	func CheckMAC(message, messageMAC, key []byte) bool {$/;"	f
CheckRuntimeTimerOverflow	./time/internal_test.go	/^func CheckRuntimeTimerOverflow() {$/;"	f
CheckSignature	./crypto/x509/x509.go	/^func (c *Certificate) CheckSignature(algo SignatureAlgorithm, signed, signature []byte) (err error) {$/;"	f
CheckSignature	./crypto/x509/x509.go	/^func (c *CertificateRequest) CheckSignature() (err error) {$/;"	f
CheckSignatureFrom	./crypto/x509/x509.go	/^func (c *Certificate) CheckSignatureFrom(parent *Certificate) (err error) {$/;"	f
CheckValid	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) CheckValid() error {$/;"	f
Checker	./go/types/check.go	/^type Checker struct {$/;"	t
Checksum	./hash/adler32/adler32.go	/^func Checksum(data []byte) uint32 { return uint32(update(1, data)) }$/;"	f
Checksum	./hash/crc32/crc32.go	/^func Checksum(data []byte, tab *Table) uint32 { return Update(0, tab, data) }$/;"	f
Checksum	./hash/crc64/crc64.go	/^func Checksum(data []byte, tab *Table) uint64 { return update(0, tab, data) }$/;"	f
ChecksumError	./cmd/api/testdata/src/pkg/p1/p1.go	/^var ChecksumError = ptwo.NewError("gzip checksum error")$/;"	v
ChecksumIEEE	./hash/crc32/crc32.go	/^func ChecksumIEEE(data []byte) uint32 { return Update(0, IEEETable, data) }$/;"	f
Chflags	./syscall/zsyscall_darwin_386.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_darwin_amd64.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_darwin_arm.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_darwin_arm64.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_dragonfly_amd64.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_freebsd_386.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_freebsd_amd64.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_freebsd_arm.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_netbsd_386.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_netbsd_amd64.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_netbsd_arm.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_openbsd_386.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_openbsd_amd64.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Chflags	./syscall/zsyscall_openbsd_arm.go	/^func Chflags(path string, flags int) (err error) {$/;"	f
Child	./go/types/scope.go	/^func (s *Scope) Child(i int) *Scope { return s.children[i] }$/;"	f
Chmod	./os/file_plan9.go	/^func (f *File) Chmod(mode FileMode) error {$/;"	f
Chmod	./os/file_plan9.go	/^func Chmod(name string, mode FileMode) error {$/;"	f
Chmod	./os/file_posix.go	/^func (f *File) Chmod(mode FileMode) error {$/;"	f
Chmod	./os/file_posix.go	/^func Chmod(name string, mode FileMode) error {$/;"	f
Chmod	./syscall/fs_nacl.go	/^func Chmod(path string, mode uint32) error {$/;"	f
Chmod	./syscall/syscall_linux.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/syscall_windows.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_darwin_386.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_darwin_amd64.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_darwin_arm.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_darwin_arm64.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_dragonfly_amd64.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_freebsd_386.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_freebsd_amd64.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_freebsd_arm.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_netbsd_386.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_netbsd_amd64.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_netbsd_arm.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_openbsd_386.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_openbsd_amd64.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_openbsd_arm.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Chmod	./syscall/zsyscall_solaris_amd64.go	/^func Chmod(path string, mode uint32) (err error) {$/;"	f
Choose	./reflect/all_test.go	/^func (x *exhaustive) Choose(max int) int {$/;"	f
Chown	./os/file_plan9.go	/^func (f *File) Chown(uid, gid int) error {$/;"	f
Chown	./os/file_plan9.go	/^func Chown(name string, uid, gid int) error {$/;"	f
Chown	./os/file_posix.go	/^func (f *File) Chown(uid, gid int) error {$/;"	f
Chown	./os/file_posix.go	/^func Chown(name string, uid, gid int) error {$/;"	f
Chown	./syscall/fs_nacl.go	/^func Chown(path string, uid, gid int) error {$/;"	f
Chown	./syscall/syscall_linux.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/syscall_windows.go	/^func Chown(path string, uid int, gid int) (err error)  { return EWINDOWS }$/;"	f
Chown	./syscall/zsyscall_darwin_386.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_darwin_amd64.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_darwin_arm.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_darwin_arm64.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_dragonfly_amd64.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_freebsd_386.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_freebsd_amd64.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_freebsd_arm.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_netbsd_386.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_netbsd_amd64.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_netbsd_arm.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_openbsd_386.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_openbsd_amd64.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_openbsd_arm.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chown	./syscall/zsyscall_solaris_amd64.go	/^func Chown(path string, uid int, gid int) (err error) {$/;"	f
Chroot	./syscall/zsyscall_darwin_386.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_darwin_amd64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_darwin_arm.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_darwin_arm64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_dragonfly_amd64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_freebsd_386.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_freebsd_amd64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_freebsd_arm.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_linux_386.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_linux_amd64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_linux_arm.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_linux_arm64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_linux_ppc64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_linux_ppc64le.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_netbsd_386.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_netbsd_amd64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_netbsd_arm.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_openbsd_386.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_openbsd_amd64.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_openbsd_arm.go	/^func Chroot(path string) (err error) {$/;"	f
Chroot	./syscall/zsyscall_solaris_amd64.go	/^func Chroot(path string) (err error) {$/;"	f
Chtimes	./os/file_plan9.go	/^func Chtimes(name string, atime time.Time, mtime time.Time) error {$/;"	f
Chtimes	./os/file_posix.go	/^func Chtimes(name string, atime time.Time, mtime time.Time) error {$/;"	f
Cipher	./crypto/rc4/rc4.go	/^type Cipher struct {$/;"	t
Class	./debug/dwarf/entry.go	/^\/\/    DWARF class       Go type        Class$/;"	t
Class	./debug/dwarf/entry.go	/^type Class int$/;"	t
Class	./debug/elf/elf.go	/^type Class byte$/;"	t
Classify	./net/addrselect.go	/^func (t policyTable) Classify(ip IP) policyTableEntry {$/;"	f
Clean	./path/filepath/path.go	/^func Clean(path string) string {$/;"	f
Clean	./path/path.go	/^func Clean(path string) string {$/;"	f
Cleanup	./cmd/pprof/internal/tempfile/tempfile.go	/^func Cleanup() {$/;"	f
Clearenv	./os/env.go	/^func Clearenv() {$/;"	f
Clearenv	./syscall/env_plan9.go	/^func Clearenv() {$/;"	f
Clearenv	./syscall/env_unix.go	/^func Clearenv() {$/;"	f
Clearenv	./syscall/env_windows.go	/^func Clearenv() {$/;"	f
Clearp	./cmd/compile/internal/gc/gsubr.go	/^func Clearp(p *obj.Prog) {$/;"	f
Clearslim	./cmd/compile/internal/gc/gen.go	/^func Clearslim(n *Node) {$/;"	f
Client	./crypto/tls/tls.go	/^func Client(conn net.Conn, config *Config) *Conn {$/;"	f
Client	./net/http/client.go	/^type Client struct {$/;"	t
Client	./net/rpc/client.go	/^type Client struct {$/;"	t
Client	./net/smtp/smtp.go	/^type Client struct {$/;"	t
ClientAuthType	./crypto/tls/common.go	/^type ClientAuthType int$/;"	t
ClientCodec	./net/rpc/client.go	/^type ClientCodec interface {$/;"	t
ClientConn	./net/http/httputil/persist.go	/^type ClientConn struct {$/;"	t
ClientHelloInfo	./crypto/tls/common.go	/^type ClientHelloInfo struct {$/;"	t
ClientSessionCache	./crypto/tls/common.go	/^type ClientSessionCache interface {$/;"	t
ClientSessionState	./crypto/tls/common.go	/^type ClientSessionState struct {$/;"	t
Clock	./time/time.go	/^func (t Time) Clock() (hour, min, sec int) {$/;"	f
Clone	./html/template/template.go	/^func (t *Template) Clone() (*Template, error) {$/;"	f
Clone	./text/template/template.go	/^func (t *Template) Clone() (*Template, error) {$/;"	f
Close	./archive/tar/writer.go	/^func (tw *Writer) Close() error {$/;"	f
Close	./archive/zip/reader.go	/^func (r *checksumReader) Close() error { return r.rc.Close() }$/;"	f
Close	./archive/zip/reader.go	/^func (rc *ReadCloser) Close() error {$/;"	f
Close	./archive/zip/register.go	/^func (w *pooledFlateWriter) Close() error {$/;"	f
Close	./archive/zip/writer.go	/^func (w *Writer) Close() error {$/;"	f
Close	./archive/zip/writer.go	/^func (w nopCloser) Close() error {$/;"	f
Close	./cmd/asm/internal/lex/input.go	/^func (in *Input) Close() {$/;"	f
Close	./cmd/asm/internal/lex/slice.go	/^func (s *Slice) Close() {$/;"	f
Close	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) Close() { \/\/ Unused.$/;"	f
Close	./cmd/asm/internal/lex/tokenizer.go	/^func (t *Tokenizer) Close() {$/;"	f
Close	./cmd/internal/objfile/objfile.go	/^func (f *File) Close() error {$/;"	f
Close	./cmd/pack/pack_test.go	/^func (f *FakeFile) Close() error {$/;"	f
Close	./cmd/pprof/pprof.go	/^func (f *file) Close() error {$/;"	f
Close	./compress/flate/deflate.go	/^func (w *Writer) Close() error {$/;"	f
Close	./compress/flate/deflate_test.go	/^func (b *syncBuffer) Close() error {$/;"	f
Close	./compress/flate/inflate.go	/^func (f *decompressor) Close() error {$/;"	f
Close	./compress/gzip/gunzip.go	/^func (z *Reader) Close() error { return z.decompressor.Close() }$/;"	f
Close	./compress/gzip/gzip.go	/^func (z *Writer) Close() error {$/;"	f
Close	./compress/lzw/reader.go	/^func (d *decoder) Close() error {$/;"	f
Close	./compress/lzw/writer.go	/^func (e *encoder) Close() error {$/;"	f
Close	./compress/lzw/writer.go	/^func (e *errWriteCloser) Close() error {$/;"	f
Close	./compress/zlib/reader.go	/^func (z *reader) Close() error {$/;"	f
Close	./compress/zlib/writer.go	/^func (z *Writer) Close() error {$/;"	f
Close	./crypto/cipher/io.go	/^func (w StreamWriter) Close() error {$/;"	f
Close	./crypto/tls/conn.go	/^func (c *Conn) Close() error {$/;"	f
Close	./database/sql/fakedb_test.go	/^func (c *fakeConn) Close() (err error) {$/;"	f
Close	./database/sql/fakedb_test.go	/^func (rc *rowsCursor) Close() error {$/;"	f
Close	./database/sql/fakedb_test.go	/^func (s *fakeStmt) Close() error {$/;"	f
Close	./database/sql/sql.go	/^func (db *DB) Close() error {$/;"	f
Close	./database/sql/sql.go	/^func (dc *driverConn) Close() error {$/;"	f
Close	./database/sql/sql.go	/^func (ds *driverStmt) Close() error {$/;"	f
Close	./database/sql/sql.go	/^func (rs *Rows) Close() error {$/;"	f
Close	./database/sql/sql.go	/^func (s *Stmt) Close() error {$/;"	f
Close	./debug/elf/file.go	/^func (f *File) Close() error {$/;"	f
Close	./debug/macho/fat.go	/^func (ff *FatFile) Close() error {$/;"	f
Close	./debug/macho/file.go	/^func (f *File) Close() error {$/;"	f
Close	./debug/pe/file.go	/^func (f *File) Close() error {$/;"	f
Close	./debug/plan9obj/file.go	/^func (f *File) Close() error {$/;"	f
Close	./encoding/ascii85/ascii85.go	/^func (e *encoder) Close() error {$/;"	f
Close	./encoding/base32/base32.go	/^func (e *encoder) Close() error {$/;"	f
Close	./encoding/base64/base64.go	/^func (e *encoder) Close() error {$/;"	f
Close	./encoding/hex/hex.go	/^func (h *dumper) Close() (err error) {$/;"	f
Close	./encoding/pem/pem.go	/^func (l *lineBreaker) Close() (err error) {$/;"	f
Close	./internal/syscall/windows/registry/key.go	/^func (k Key) Close() error {$/;"	f
Close	./io/ioutil/ioutil.go	/^func (nopCloser) Close() error { return nil }$/;"	f
Close	./io/pipe.go	/^func (r *PipeReader) Close() error {$/;"	f
Close	./io/pipe.go	/^func (w *PipeWriter) Close() error {$/;"	f
Close	./log/syslog/syslog.go	/^func (w *Writer) Close() error {$/;"	f
Close	./mime/multipart/formdata.go	/^func (rc sectionReadCloser) Close() error {$/;"	f
Close	./mime/multipart/multipart.go	/^func (p *Part) Close() error {$/;"	f
Close	./mime/multipart/writer.go	/^func (w *Writer) Close() error {$/;"	f
Close	./mime/quotedprintable/writer.go	/^func (w *Writer) Close() error {$/;"	f
Close	./net/fd_plan9.go	/^func (fd *netFD) Close() error {$/;"	f
Close	./net/fd_poll_nacl.go	/^func (pd *pollDesc) Close() {}$/;"	f
Close	./net/fd_poll_runtime.go	/^func (pd *pollDesc) Close() {$/;"	f
Close	./net/fd_unix.go	/^func (fd *netFD) Close() error {$/;"	f
Close	./net/fd_windows.go	/^func (fd *netFD) Close() error {$/;"	f
Close	./net/http/client.go	/^func (b *cancelTimerBody) Close() error {$/;"	f
Close	./net/http/fcgi/child.go	/^func (r *response) Close() error {$/;"	f
Close	./net/http/fcgi/fcgi.go	/^func (c *conn) Close() error {$/;"	f
Close	./net/http/fcgi/fcgi.go	/^func (w *bufWriter) Close() error {$/;"	f
Close	./net/http/fcgi/fcgi.go	/^func (w *streamWriter) Close() error {$/;"	f
Close	./net/http/fcgi/fcgi_test.go	/^func (c *nilCloser) Close() error { return nil }$/;"	f
Close	./net/http/fcgi/fcgi_test.go	/^func (c *writeOnlyConn) Close() error {$/;"	f
Close	./net/http/fcgi/fcgi_test.go	/^func (nopWriteCloser) Close() error {$/;"	f
Close	./net/http/fs_test.go	/^func (f *fakeFile) Close() error               { return nil }$/;"	f
Close	./net/http/httptest/server.go	/^func (s *Server) Close() {$/;"	f
Close	./net/http/httputil/dump.go	/^func (c *dumpConn) Close() error                       { return nil }$/;"	f
Close	./net/http/httputil/dump.go	/^func (failureToReadBody) Close() error             { return nil }$/;"	f
Close	./net/http/httputil/persist.go	/^func (cc *ClientConn) Close() error {$/;"	f
Close	./net/http/httputil/persist.go	/^func (sc *ServerConn) Close() error {$/;"	f
Close	./net/http/internal/chunked.go	/^func (cw *chunkedWriter) Close() error {$/;"	f
Close	./net/http/request.go	/^func (l *maxBytesReader) Close() error {$/;"	f
Close	./net/http/requestwrite_test.go	/^func (rc *closeChecker) Close() error {$/;"	f
Close	./net/http/serve_test.go	/^func (c *rwTestConn) Close() error {$/;"	f
Close	./net/http/serve_test.go	/^func (c *slowTestConn) Close() error {$/;"	f
Close	./net/http/serve_test.go	/^func (c *testConn) Close() error {$/;"	f
Close	./net/http/serve_test.go	/^func (l *errorListener) Close() error {$/;"	f
Close	./net/http/serve_test.go	/^func (l *oneConnListener) Close() error {$/;"	f
Close	./net/http/server.go	/^func (c *loggingConn) Close() (err error) {$/;"	f
Close	./net/http/server.go	/^func (ecr *expectContinueReader) Close() error {$/;"	f
Close	./net/http/transfer.go	/^func (b *body) Close() error {$/;"	f
Close	./net/http/transport.go	/^func (es *bodyEOFSignal) Close() error {$/;"	f
Close	./net/http/transport.go	/^func (gz *gzipReader) Close() error {$/;"	f
Close	./net/http/transport_test.go	/^func (c *logWritesConn) Close() error { return nil }$/;"	f
Close	./net/http/transport_test.go	/^func (c *testCloseConn) Close() error {$/;"	f
Close	./net/http/transport_test.go	/^func (cr countCloseReader) Close() error {$/;"	f
Close	./net/http/transport_test.go	/^func (f closerFunc) Close() error { return f() }$/;"	f
Close	./net/internal/socktest/sys_unix.go	/^func (sw *Switch) Close(s int) (err error) {$/;"	f
Close	./net/net.go	/^func (c *conn) Close() error {$/;"	f
Close	./net/pipe.go	/^func (p *pipe) Close() error {$/;"	f
Close	./net/rpc/client.go	/^func (c *gobClientCodec) Close() error {$/;"	f
Close	./net/rpc/client.go	/^func (client *Client) Close() error {$/;"	f
Close	./net/rpc/client_test.go	/^func (c *shutdownCodec) Close() error {$/;"	f
Close	./net/rpc/jsonrpc/all_test.go	/^func (p *pipe) Close() error {$/;"	f
Close	./net/rpc/jsonrpc/client.go	/^func (c *clientCodec) Close() error {$/;"	f
Close	./net/rpc/jsonrpc/server.go	/^func (c *serverCodec) Close() error {$/;"	f
Close	./net/rpc/server.go	/^func (c *gobServerCodec) Close() error {$/;"	f
Close	./net/rpc/server_test.go	/^func (WriteFailCodec) Close() error {$/;"	f
Close	./net/rpc/server_test.go	/^func (codec *CodecEmulator) Close() error {$/;"	f
Close	./net/rpc/server_test.go	/^func (writeCrasher) Close() error {$/;"	f
Close	./net/smtp/smtp.go	/^func (c *Client) Close() error {$/;"	f
Close	./net/smtp/smtp.go	/^func (d *dataCloser) Close() error {$/;"	f
Close	./net/smtp/smtp_test.go	/^func (f faker) Close() error                     { return nil }$/;"	f
Close	./net/tcpsock_plan9.go	/^func (l *TCPListener) Close() error {$/;"	f
Close	./net/tcpsock_posix.go	/^func (l *TCPListener) Close() error {$/;"	f
Close	./net/textproto/textproto.go	/^func (c *Conn) Close() error {$/;"	f
Close	./net/textproto/writer.go	/^func (d *dotWriter) Close() error {$/;"	f
Close	./net/unixsock_plan9.go	/^func (l *UnixListener) Close() error {$/;"	f
Close	./net/unixsock_posix.go	/^func (l *UnixListener) Close() error {$/;"	f
Close	./os/exec/exec.go	/^func (c *closeOnce) Close() error {$/;"	f
Close	./os/file_plan9.go	/^func (f *File) Close() error {$/;"	f
Close	./os/file_unix.go	/^func (f *File) Close() error {$/;"	f
Close	./os/file_windows.go	/^func (file *File) Close() error {$/;"	f
Close	./reflect/value.go	/^func (v Value) Close() {$/;"	f
Close	./runtime/export_test.go	/^var Close = closefd$/;"	v
Close	./syscall/fd_nacl.go	/^func Close(fd int) error {$/;"	f
Close	./syscall/security_windows.go	/^func (t Token) Close() error {$/;"	f
Close	./syscall/syscall_windows.go	/^func Close(fd Handle) (err error) {$/;"	f
Close	./syscall/zsyscall_darwin_386.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_darwin_amd64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_darwin_arm.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_darwin_arm64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_dragonfly_amd64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_freebsd_386.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_freebsd_amd64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_freebsd_arm.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_linux_386.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_linux_amd64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_linux_arm.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_linux_arm64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_linux_ppc64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_linux_ppc64le.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_netbsd_386.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_netbsd_amd64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_netbsd_arm.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_openbsd_386.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_openbsd_amd64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_openbsd_arm.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_plan9_386.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_plan9_amd64.go	/^func Close(fd int) (err error) {$/;"	f
Close	./syscall/zsyscall_solaris_amd64.go	/^func Close(fd int) (err error) {$/;"	f
CloseClientConnections	./net/http/httptest/server.go	/^func (s *Server) CloseClientConnections() {$/;"	f
CloseHandle	./syscall/zsyscall_windows.go	/^func CloseHandle(handle Handle) (err error) {$/;"	f
CloseIdleConnections	./net/http/transport.go	/^func (t *Transport) CloseIdleConnections() {$/;"	f
CloseNotifier	./net/http/server.go	/^type CloseNotifier interface {$/;"	t
CloseNotify	./net/http/server.go	/^func (w *response) CloseNotify() <-chan bool {$/;"	f
CloseOnExec	./syscall/exec_unix.go	/^func CloseOnExec(fd int) { fcntl(fd, F_SETFD, FD_CLOEXEC) }$/;"	f
CloseOnExec	./syscall/exec_windows.go	/^func CloseOnExec(fd Handle) {$/;"	f
CloseOnExec	./syscall/fd_nacl.go	/^func CloseOnExec(fd int) {$/;"	f
CloseRead	./net/tcpsock_plan9.go	/^func (c *TCPConn) CloseRead() error {$/;"	f
CloseRead	./net/tcpsock_posix.go	/^func (c *TCPConn) CloseRead() error {$/;"	f
CloseRead	./net/unixsock_plan9.go	/^func (c *UnixConn) CloseRead() error {$/;"	f
CloseRead	./net/unixsock_posix.go	/^func (c *UnixConn) CloseRead() error {$/;"	f
CloseWithError	./io/pipe.go	/^func (r *PipeReader) CloseWithError(err error) error {$/;"	f
CloseWithError	./io/pipe.go	/^func (w *PipeWriter) CloseWithError(err error) error {$/;"	f
CloseWrite	./net/http/serve_test.go	/^func (c *closeWriteTestConn) CloseWrite() error {$/;"	f
CloseWrite	./net/tcpsock_plan9.go	/^func (c *TCPConn) CloseWrite() error {$/;"	f
CloseWrite	./net/tcpsock_posix.go	/^func (c *TCPConn) CloseWrite() error {$/;"	f
CloseWrite	./net/unixsock_plan9.go	/^func (c *UnixConn) CloseWrite() error {$/;"	f
CloseWrite	./net/unixsock_posix.go	/^func (c *UnixConn) CloseWrite() error {$/;"	f
Closer	./io/io.go	/^type Closer interface {$/;"	t
Closesocket	./net/internal/socktest/sys_windows.go	/^func (sw *Switch) Closesocket(s syscall.Handle) (err error) {$/;"	f
Closesocket	./syscall/zsyscall_windows.go	/^func Closesocket(s Handle) (err error) {$/;"	f
Cmd	./net/textproto/textproto.go	/^func (c *Conn) Cmd(format string, args ...interface{}) (id uint, err error) {$/;"	f
Cmd	./os/exec/exec.go	/^type Cmd struct {$/;"	t
Cmdline	./net/http/pprof/pprof.go	/^func Cmdline(w http.ResponseWriter, r *http.Request) {$/;"	f
Cmp	./cmd/compile/internal/big/float.go	/^func (x *Float) Cmp(y *Float) int {$/;"	f
Cmp	./cmd/compile/internal/big/int.go	/^func (x *Int) Cmp(y *Int) (r int) {$/;"	f
Cmp	./cmd/compile/internal/big/rat.go	/^func (x *Rat) Cmp(y *Rat) int {$/;"	f
Cmp	./math/big/float.go	/^func (x *Float) Cmp(y *Float) int {$/;"	f
Cmp	./math/big/int.go	/^func (x *Int) Cmp(y *Int) (r int) {$/;"	f
Cmp	./math/big/rat.go	/^func (x *Rat) Cmp(y *Rat) int {$/;"	f
CmsgLen	./syscall/sockcmsg_unix.go	/^func CmsgLen(datalen int) int {$/;"	f
CmsgSpace	./syscall/sockcmsg_unix.go	/^func CmsgSpace(datalen int) int {$/;"	f
Cmsghdr	./syscall/types_darwin.go	/^type Cmsghdr C.struct_cmsghdr$/;"	t
Cmsghdr	./syscall/types_dragonfly.go	/^type Cmsghdr C.struct_cmsghdr$/;"	t
Cmsghdr	./syscall/types_freebsd.go	/^type Cmsghdr C.struct_cmsghdr$/;"	t
Cmsghdr	./syscall/types_linux.go	/^type Cmsghdr C.struct_cmsghdr$/;"	t
Cmsghdr	./syscall/types_netbsd.go	/^type Cmsghdr C.struct_cmsghdr$/;"	t
Cmsghdr	./syscall/types_openbsd.go	/^type Cmsghdr C.struct_cmsghdr$/;"	t
Cmsghdr	./syscall/types_solaris.go	/^type Cmsghdr C.struct_cmsghdr$/;"	t
Cmsghdr	./syscall/ztypes_darwin_386.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_darwin_amd64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_darwin_arm.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_darwin_arm64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_dragonfly_amd64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_freebsd_386.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_freebsd_amd64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_freebsd_arm.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_linux_386.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_linux_amd64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_linux_arm.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_linux_arm64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_linux_ppc64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_linux_ppc64le.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_netbsd_386.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_netbsd_amd64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_netbsd_arm.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_openbsd_386.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_openbsd_amd64.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_openbsd_arm.go	/^type Cmsghdr struct {$/;"	t
Cmsghdr	./syscall/ztypes_solaris_amd64.go	/^type Cmsghdr struct {$/;"	t
Codeblk	./cmd/link/internal/ld/data.go	/^func Codeblk(addr int64, size int64) {$/;"	f
Codec	./cmd/api/testdata/src/pkg/p1/p1.go	/^type Codec struct {$/;"	t
CodecEmulator	./net/rpc/server_test.go	/^type CodecEmulator struct {$/;"	t
Col	./cmd/asm/internal/lex/slice.go	/^func (s *Slice) Col() int {$/;"	f
Col	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) Col() int {$/;"	f
Col	./cmd/asm/internal/lex/tokenizer.go	/^func (t *Tokenizer) Col() int {$/;"	f
Color	./encoding/json/example_test.go	/^	type Color struct {$/;"	t
Color	./image/color/color.go	/^type Color interface {$/;"	t
ColorGroup	./encoding/json/example_test.go	/^	type ColorGroup struct {$/;"	t
ColorIndexAt	./image/image.go	/^func (p *Paletted) ColorIndexAt(x, y int) uint8 {$/;"	f
ColorModel	./image/geom.go	/^func (r Rectangle) ColorModel() color.Model {$/;"	f
ColorModel	./image/image.go	/^func (p *Alpha) ColorModel() color.Model { return color.AlphaModel }$/;"	f
ColorModel	./image/image.go	/^func (p *Alpha16) ColorModel() color.Model { return color.Alpha16Model }$/;"	f
ColorModel	./image/image.go	/^func (p *CMYK) ColorModel() color.Model { return color.CMYKModel }$/;"	f
ColorModel	./image/image.go	/^func (p *Gray) ColorModel() color.Model { return color.GrayModel }$/;"	f
ColorModel	./image/image.go	/^func (p *Gray16) ColorModel() color.Model { return color.Gray16Model }$/;"	f
ColorModel	./image/image.go	/^func (p *NRGBA) ColorModel() color.Model { return color.NRGBAModel }$/;"	f
ColorModel	./image/image.go	/^func (p *NRGBA64) ColorModel() color.Model { return color.NRGBA64Model }$/;"	f
ColorModel	./image/image.go	/^func (p *Paletted) ColorModel() color.Model { return p.Palette }$/;"	f
ColorModel	./image/image.go	/^func (p *RGBA) ColorModel() color.Model { return color.RGBAModel }$/;"	f
ColorModel	./image/image.go	/^func (p *RGBA64) ColorModel() color.Model { return color.RGBA64Model }$/;"	f
ColorModel	./image/names.go	/^func (c *Uniform) ColorModel() color.Model {$/;"	f
ColorModel	./image/ycbcr.go	/^func (p *YCbCr) ColorModel() color.Model {$/;"	f
ColumnConverter	./database/sql/driver/driver.go	/^type ColumnConverter interface {$/;"	t
ColumnConverter	./database/sql/fakedb_test.go	/^func (s *fakeStmt) ColumnConverter(idx int) driver.ValueConverter {$/;"	f
Columns	./database/sql/fakedb_test.go	/^func (rc *rowsCursor) Columns() []string {$/;"	f
Columns	./database/sql/sql.go	/^func (rs *Rows) Columns() ([]string, error) {$/;"	f
CombinedOutput	./os/exec/exec.go	/^func (c *Cmd) CombinedOutput() ([]byte, error) {$/;"	f
Command	./cmd/go/main.go	/^type Command struct {$/;"	t
Command	./cmd/pprof/internal/commands/commands.go	/^type Command struct {$/;"	t
Command	./os/exec/exec.go	/^func Command(name string, arg ...string) *Cmd {$/;"	f
CommandLine	./flag/flag.go	/^var CommandLine = NewFlagSet(os.Args[0], ExitOnError)$/;"	v
CommandLineToArgv	./syscall/zsyscall_windows.go	/^func CommandLineToArgv(cmd *uint16, argc *int32) (argv *[8192]*[8192]uint16, err error) {$/;"	f
CommandNode	./text/template/parse/node.go	/^type CommandNode struct {$/;"	t
Commands	./cmd/pprof/internal/commands/commands.go	/^type Commands map[string]*Command$/;"	t
Comment	./encoding/xml/xml.go	/^type Comment []byte$/;"	t
Comment	./go/ast/ast.go	/^type Comment struct {$/;"	t
CommentGroup	./go/ast/ast.go	/^type CommentGroup struct {$/;"	t
CommentMap	./go/ast/commentmap.go	/^type CommentMap map[Node][]*CommentGroup$/;"	t
CommentedNode	./go/printer/printer.go	/^type CommentedNode struct {$/;"	t
Comments	./go/ast/commentmap.go	/^func (cmap CommentMap) Comments() []*CommentGroup {$/;"	f
Commit	./database/sql/fakedb_test.go	/^func (tx *fakeTx) Commit() error {$/;"	f
Commit	./database/sql/sql.go	/^func (tx *Tx) Commit() error {$/;"	f
Common	./debug/dwarf/type.go	/^func (c *CommonType) Common() *CommonType { return c }$/;"	f
CommonType	./debug/dwarf/type.go	/^type CommonType struct {$/;"	t
CommonType	./encoding/gob/doc.go	/^	type CommonType struct {$/;"	t
CommonType	./encoding/gob/type.go	/^type CommonType struct {$/;"	t
Compact	./encoding/json/indent.go	/^func Compact(dst *bytes.Buffer, src []byte) error {$/;"	f
Comparable	./go/types/predicates.go	/^func Comparable(T Type) bool {$/;"	f
Comparable	./reflect/type.go	/^func (t *rtype) Comparable() bool {$/;"	f
ComparableStruct	./reflect/all_test.go	/^type ComparableStruct struct {$/;"	t
Compare	./bytes/bytes_decl.go	/^func Compare(a, b []byte) int \/\/ ..\/runtime\/noasm.go or ..\/runtime\/asm_{386,amd64}.s$/;"	f
Compare	./go/constant/value.go	/^func Compare(x Value, op token.Token, y Value) bool {$/;"	f
Compare	./strings/compare.go	/^func Compare(a, b string) int {$/;"	f
CompareAndSwapInt32	./sync/atomic/doc.go	/^func CompareAndSwapInt32(addr *int32, old, new int32) (swapped bool)$/;"	f
CompareAndSwapInt64	./sync/atomic/doc.go	/^func CompareAndSwapInt64(addr *int64, old, new int64) (swapped bool)$/;"	f
CompareAndSwapPointer	./sync/atomic/doc.go	/^func CompareAndSwapPointer(addr *unsafe.Pointer, old, new unsafe.Pointer) (swapped bool)$/;"	f
CompareAndSwapUint32	./sync/atomic/doc.go	/^func CompareAndSwapUint32(addr *uint32, old, new uint32) (swapped bool)$/;"	f
CompareAndSwapUint64	./sync/atomic/doc.go	/^func CompareAndSwapUint64(addr *uint64, old, new uint64) (swapped bool)$/;"	f
CompareAndSwapUintptr	./sync/atomic/doc.go	/^func CompareAndSwapUintptr(addr *uintptr, old, new uintptr) (swapped bool)$/;"	f
Comparison	./cmd/vet/testdata/nilfunc.go	/^func Comparison() {$/;"	f
Compatible	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) Compatible(pb *Profile) error {$/;"	f
Compile	./regexp/regexp.go	/^func Compile(expr string) (*Regexp, error) {$/;"	f
Compile	./regexp/syntax/compile.go	/^func Compile(re *Regexp) (*Prog, error) {$/;"	f
CompilePOSIX	./regexp/regexp.go	/^func CompilePOSIX(expr string) (*Regexp, error) {$/;"	f
Complete	./go/types/package.go	/^func (pkg *Package) Complete() bool { return pkg.complete }$/;"	f
Complete	./go/types/type.go	/^func (t *Interface) Complete() *Interface {$/;"	f
Completer	./cmd/pprof/internal/commands/commands.go	/^type Completer func(prefix string) string$/;"	t
Complex	./reflect/value.go	/^func (v Value) Complex() complex128 {$/;"	f
ComplexAlgKey	./runtime/mapspeed_test.go	/^type ComplexAlgKey struct {$/;"	t
ComplexType	./builtin/builtin.go	/^type ComplexType complex64$/;"	t
ComplexType	./debug/dwarf/type.go	/^type ComplexType struct {$/;"	t
Complexgen	./cmd/compile/internal/gc/cplx.go	/^func Complexgen(n *Node, res *Node) {$/;"	f
Complexmove	./cmd/compile/internal/gc/cplx.go	/^func Complexmove(f *Node, t *Node) {$/;"	f
Complexop	./cmd/compile/internal/gc/cplx.go	/^func Complexop(n *Node, res *Node) bool {$/;"	f
Componentgen	./cmd/compile/internal/gc/gen.go	/^func Componentgen(nr, nl *Node) bool {$/;"	f
CompressionLevel	./image/png/writer.go	/^type CompressionLevel int$/;"	t
Compressor	./archive/zip/register.go	/^type Compressor func(io.Writer) (io.WriteCloser, error)$/;"	t
ComputeClass	./regexp/syntax/make_perl_groups.pl	/^sub ComputeClass($) {$/;"	s
ComputerName	./syscall/syscall_windows.go	/^func ComputerName() (name string, err error) {$/;"	f
Cond	./sync/cond.go	/^type Cond struct {$/;"	t
Config	./crypto/tls/common.go	/^type Config struct {$/;"	t
Config	./go/printer/printer.go	/^type Config struct {$/;"	t
Config	./go/types/api.go	/^type Config struct {$/;"	t
Config	./image/image.go	/^type Config struct {$/;"	t
Config	./testing/quick/quick.go	/^type Config struct {$/;"	t
Conj	./math/cmplx/conj.go	/^func Conj(x complex128) complex128 { return complex(real(x), -imag(x)) }$/;"	f
Conn	./crypto/tls/conn.go	/^type Conn struct {$/;"	t
Conn	./database/sql/driver/driver.go	/^type Conn interface {$/;"	t
Conn	./net/net.go	/^type Conn interface {$/;"	t
Conn	./net/textproto/textproto.go	/^type Conn struct {$/;"	t
ConnState	./net/http/server.go	/^type ConnState int$/;"	t
Connect	./net/internal/socktest/sys_unix.go	/^func (sw *Switch) Connect(s int, sa syscall.Sockaddr) (err error) {$/;"	f
Connect	./net/internal/socktest/sys_windows.go	/^func (sw *Switch) Connect(s syscall.Handle, sa syscall.Sockaddr) (err error) {$/;"	f
Connect	./syscall/net_nacl.go	/^func Connect(fd int, sa Sockaddr) error {$/;"	f
Connect	./syscall/syscall_unix.go	/^func Connect(fd int, sa Sockaddr) (err error) {$/;"	f
Connect	./syscall/syscall_windows.go	/^func Connect(fd Handle, sa Sockaddr) (err error) {$/;"	f
ConnectEx	./net/internal/socktest/sys_windows.go	/^func (sw *Switch) ConnectEx(s syscall.Handle, sa syscall.Sockaddr, b *byte, n uint32, nwr *uint32, o *syscall.Overlapped) (err error) {$/;"	f
ConnectEx	./syscall/syscall_windows.go	/^func ConnectEx(fd Handle, sa Sockaddr, sendBuf *byte, sendDataLen uint32, bytesSent *uint32, overlapped *Overlapped) error {$/;"	f
ConnectionState	./crypto/tls/common.go	/^type ConnectionState struct {$/;"	t
ConnectionState	./crypto/tls/conn.go	/^func (c *Conn) ConnectionState() ConnectionState {$/;"	f
Const	./go/types/object.go	/^type Const struct {$/;"	t
ConstantTimeByteEq	./crypto/subtle/constant_time.go	/^func ConstantTimeByteEq(x, y uint8) int {$/;"	f
ConstantTimeCompare	./crypto/subtle/constant_time.go	/^func ConstantTimeCompare(x, y []byte) int {$/;"	f
ConstantTimeCopy	./crypto/subtle/constant_time.go	/^func ConstantTimeCopy(v int, x, y []byte) {$/;"	f
ConstantTimeEq	./crypto/subtle/constant_time.go	/^func ConstantTimeEq(x, y int32) int {$/;"	f
ConstantTimeLessOrEq	./crypto/subtle/constant_time.go	/^func ConstantTimeLessOrEq(x, y int) int {$/;"	f
ConstantTimeSelect	./crypto/subtle/constant_time.go	/^func ConstantTimeSelect(v, x, y int) int { return ^(v-1)&x | (v-1)&y }$/;"	f
ConstraintViolationError	./crypto/x509/x509.go	/^type ConstraintViolationError struct{}$/;"	t
Contains	./bytes/bytes.go	/^func Contains(b, subslice []byte) bool {$/;"	f
Contains	./encoding/json/tags.go	/^func (o tagOptions) Contains(optionName string) bool {$/;"	f
Contains	./go/types/scope.go	/^func (s *Scope) Contains(pos token.Pos) bool {$/;"	f
Contains	./net/ip.go	/^func (n *IPNet) Contains(ip IP) bool {$/;"	f
Contains	./strings/strings.go	/^func Contains(s, substr string) bool {$/;"	f
ContainsAny	./strings/strings.go	/^func ContainsAny(s, chars string) bool {$/;"	f
ContainsAnyTests	./strings/strings_test.go	/^var ContainsAnyTests = []struct {$/;"	v
ContainsRune	./strings/strings.go	/^func ContainsRune(s string, r rune) bool {$/;"	f
ContainsRuneTests	./strings/strings_test.go	/^var ContainsRuneTests = []struct {$/;"	v
ContainsTests	./strings/strings_test.go	/^var ContainsTests = []struct {$/;"	v
Context	./cmd/go/alldocs.go	/^	type Context struct {$/;"	t
Context	./cmd/go/context.go	/^type Context struct {$/;"	t
Context	./cmd/go/list.go	/^	type Context struct {$/;"	t
Context	./runtime/defs_windows.go	/^type Context C.CONTEXT$/;"	t
Continued	./syscall/syscall_bsd.go	/^func (w WaitStatus) Continued() bool { return w&mask == stopped && Signal(w>>shift) == SIGSTOP }$/;"	f
Continued	./syscall/syscall_linux.go	/^func (w WaitStatus) Continued() bool { return w == 0xFFFF }$/;"	f
Continued	./syscall/syscall_nacl.go	/^func (w WaitStatus) Continued() bool    { return false }$/;"	f
Continued	./syscall/syscall_solaris.go	/^func (w WaitStatus) Continued() bool { return w&mask == stopped && Signal(w>>shift) == SIGSTOP }$/;"	f
Continued	./syscall/syscall_windows.go	/^func (w WaitStatus) Continued() bool { return false }$/;"	f
Convconst	./cmd/compile/internal/gc/const.go	/^func (n *Node) Convconst(con *Node, t *Type) {$/;"	f
Convert	./image/color/color.go	/^func (m *modelFunc) Convert(c Color) Color {$/;"	f
Convert	./image/color/color.go	/^func (p Palette) Convert(c Color) Color {$/;"	f
Convert	./image/names.go	/^func (c *Uniform) Convert(color.Color) color.Color {$/;"	f
Convert	./reflect/value.go	/^func (v Value) Convert(t Type) Value {$/;"	f
ConvertSidToStringSid	./syscall/zsyscall_windows.go	/^func ConvertSidToStringSid(sid *SID, stringSid **uint16) (err error) {$/;"	f
ConvertStringSidToSid	./syscall/zsyscall_windows.go	/^func ConvertStringSidToSid(stringSid *uint16, sid **SID) (err error) {$/;"	f
ConvertValue	./database/sql/driver/types.go	/^func (boolType) ConvertValue(src interface{}) (Value, error) {$/;"	f
ConvertValue	./database/sql/driver/types.go	/^func (defaultConverter) ConvertValue(v interface{}) (Value, error) {$/;"	f
ConvertValue	./database/sql/driver/types.go	/^func (int32Type) ConvertValue(v interface{}) (Value, error) {$/;"	f
ConvertValue	./database/sql/driver/types.go	/^func (n NotNull) ConvertValue(v interface{}) (Value, error) {$/;"	f
ConvertValue	./database/sql/driver/types.go	/^func (n Null) ConvertValue(v interface{}) (Value, error) {$/;"	f
ConvertValue	./database/sql/driver/types.go	/^func (stringType) ConvertValue(v interface{}) (Value, error) {$/;"	f
ConvertValue	./database/sql/fakedb_test.go	/^func (fakeDriverString) ConvertValue(v interface{}) (driver.Value, error) {$/;"	f
ConvertibleTo	./go/types/api.go	/^func ConvertibleTo(V, T Type) bool {$/;"	f
ConvertibleTo	./reflect/type.go	/^func (t *rtype) ConvertibleTo(u Type) bool {$/;"	f
Convlit	./cmd/compile/internal/gc/const.go	/^func Convlit(np **Node, t *Type) {$/;"	f
Cookie	./net/http/cookie.go	/^type Cookie struct {$/;"	t
Cookie	./net/http/request.go	/^func (r *Request) Cookie(name string) (*Cookie, error) {$/;"	f
Cookie	./net/internal/socktest/switch.go	/^type Cookie uint64$/;"	t
CookieJar	./net/http/jar.go	/^type CookieJar interface {$/;"	t
Cookies	./net/http/client_test.go	/^func (j *RecordingJar) Cookies(u *url.URL) []*Cookie {$/;"	f
Cookies	./net/http/client_test.go	/^func (j *TestJar) Cookies(u *url.URL) []*Cookie {$/;"	f
Cookies	./net/http/cookiejar/jar.go	/^func (j *Jar) Cookies(u *url.URL) (cookies []*http.Cookie) {$/;"	f
Cookies	./net/http/request.go	/^func (r *Request) Cookies() []*Cookie {$/;"	f
Cookies	./net/http/response.go	/^func (r *Response) Cookies() []*Cookie {$/;"	f
Copy	./cmd/compile/internal/big/float.go	/^func (z *Float) Copy(x *Float) *Float {$/;"	f
Copy	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) Copy() *Profile {$/;"	f
Copy	./encoding/xml/xml.go	/^func (c CharData) Copy() CharData { return CharData(makeCopy(c)) }$/;"	f
Copy	./encoding/xml/xml.go	/^func (c Comment) Copy() Comment { return Comment(makeCopy(c)) }$/;"	f
Copy	./encoding/xml/xml.go	/^func (d Directive) Copy() Directive { return Directive(makeCopy(d)) }$/;"	f
Copy	./encoding/xml/xml.go	/^func (e StartElement) Copy() StartElement {$/;"	f
Copy	./encoding/xml/xml.go	/^func (p ProcInst) Copy() ProcInst {$/;"	f
Copy	./io/io.go	/^func Copy(dst Writer, src Reader) (written int64, err error) {$/;"	f
Copy	./math/big/float.go	/^func (z *Float) Copy(x *Float) *Float {$/;"	f
Copy	./reflect/value.go	/^func Copy(dst, src Value) int {$/;"	f
Copy	./syscall/security_windows.go	/^func (sid *SID) Copy() (*SID, error) {$/;"	f
Copy	./text/template/exec_test.go	/^func (t *T) Copy() *T {$/;"	f
Copy	./text/template/parse/node.go	/^func (a *ActionNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (b *BoolNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (b *BranchNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (c *ChainNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (c *CommandNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (d *DotNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (e *elseNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (e *endNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (f *FieldNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (i *IdentifierNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (i *IfNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (l *ListNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (n *NilNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (n *NumberNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (p *PipeNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (r *RangeNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (s *StringNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (t *TemplateNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (t *TextNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (v *VariableNode) Copy() Node {$/;"	f
Copy	./text/template/parse/node.go	/^func (w *WithNode) Copy() Node {$/;"	f
Copy	./text/template/parse/parse.go	/^func (t *Tree) Copy() *Tree {$/;"	f
CopyBuffer	./io/io.go	/^func CopyBuffer(dst Writer, src Reader, buf []byte) (written int64, err error) {$/;"	f
CopyList	./text/template/parse/node.go	/^func (l *ListNode) CopyList() *ListNode {$/;"	f
CopyN	./io/io.go	/^func CopyN(dst Writer, src Reader, n int64) (written int64, err error) {$/;"	f
CopyPipe	./text/template/parse/node.go	/^func (p *PipeNode) CopyPipe() *PipeNode {$/;"	f
CopySid	./syscall/zsyscall_windows.go	/^func CopySid(destSidLen uint32, destSid *SID, srcSid *SID) (err error) {$/;"	f
CopyToRGBA	./image/internal/imageutil/gen.go	/^	\/\/ func (src *YCbCr) CopyToRGBA(dst *RGBA, dr, sr Rectangle) (effectiveDr, effectiveSr Rectangle)$/;"	f
CopyToRGBA	./image/internal/imageutil/impl.go	/^	\/\/ func (src *YCbCr) CopyToRGBA(dst *RGBA, dr, sr Rectangle) (effectiveDr, effectiveSr Rectangle)$/;"	f
CopyToken	./encoding/xml/xml.go	/^func CopyToken(t Token) Token {$/;"	f
Copyp	./cmd/internal/obj/ld.go	/^func Copyp(ctxt *Link, q *Prog) *Prog {$/;"	f
Copysign	./math/copysign.go	/^func Copysign(x, y float64) float64 {$/;"	f
CoreDump	./syscall/syscall_bsd.go	/^func (w WaitStatus) CoreDump() bool { return w.Signaled() && w&core != 0 }$/;"	f
CoreDump	./syscall/syscall_linux.go	/^func (w WaitStatus) CoreDump() bool { return w.Signaled() && w&core != 0 }$/;"	f
CoreDump	./syscall/syscall_nacl.go	/^func (w WaitStatus) CoreDump() bool     { return false }$/;"	f
CoreDump	./syscall/syscall_solaris.go	/^func (w WaitStatus) CoreDump() bool { return w.Signaled() && w&core != 0 }$/;"	f
CoreDump	./syscall/syscall_windows.go	/^func (w WaitStatus) CoreDump() bool { return false }$/;"	f
CorruptInputError	./compress/flate/inflate.go	/^type CorruptInputError int64$/;"	t
CorruptInputError	./encoding/ascii85/ascii85.go	/^type CorruptInputError int64$/;"	t
CorruptInputError	./encoding/base32/base32.go	/^type CorruptInputError int64$/;"	t
CorruptInputError	./encoding/base64/base64.go	/^type CorruptInputError int64$/;"	t
Cos	./math/cmplx/sin.go	/^func Cos(x complex128) complex128 {$/;"	f
Cos	./math/sin.go	/^func Cos(x float64) float64$/;"	f
Cosh	./math/cmplx/sin.go	/^func Cosh(x complex128) complex128 {$/;"	f
Cosh	./math/sinh.go	/^func Cosh(x float64) float64 {$/;"	f
Cot	./math/cmplx/tan.go	/^func Cot(x complex128) complex128 {$/;"	f
Count	./bytes/bytes.go	/^func Count(s, sep []byte) int {$/;"	f
Count	./runtime/pprof/pprof.go	/^func (p *Profile) Count() int {$/;"	f
Count	./strings/strings.go	/^func Count(s, sep string) int {$/;"	f
CountTests	./strings/strings_test.go	/^var CountTests = []struct {$/;"	v
Counter	./cmd/vet/testdata/atomic.go	/^type Counter uint64$/;"	t
Counter	./net/http/triv.go	/^type Counter struct {$/;"	t
Cover	./testing/cover.go	/^type Cover struct {$/;"	t
CoverBlock	./testing/cover.go	/^type CoverBlock struct {$/;"	t
CoverEnabled	./cmd/go/test.go	/^func (t *testFuncs) CoverEnabled() bool {$/;"	f
CoverMode	./cmd/go/test.go	/^func (t *testFuncs) CoverMode() string {$/;"	f
CoverVar	./cmd/go/pkg.go	/^type CoverVar struct {$/;"	t
Coverage	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^		func Coverage() float64 {$/;"	f
Coverage	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^		func Coverage() float64 {$/;"	f
Coverage	./testing/cover.go	/^func Coverage() float64 {$/;"	f
Covered	./cmd/go/test.go	/^func (t *testFuncs) Covered() string {$/;"	f
Cpos	./cmd/link/internal/ld/lib.go	/^func Cpos() int64 {$/;"	f
Cpu	./debug/macho/macho.go	/^type Cpu uint32$/;"	t
Cput	./cmd/link/internal/ld/lib.go	/^func Cput(c uint8) {$/;"	f
Cputime	./cmd/internal/obj/util.go	/^func Cputime() float64 {$/;"	f
Creat	./syscall/syscall_linux.go	/^func Creat(path string, mode uint32) (fd int, err error) {$/;"	f
Create	./archive/zip/writer.go	/^func (w *Writer) Create(name string) (io.Writer, error) {$/;"	f
Create	./os/file.go	/^func Create(name string) (*File, error) {$/;"	f
Create	./syscall/syscall_plan9.go	/^func Create(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
CreateCRL	./crypto/x509/x509.go	/^func (c *Certificate) CreateCRL(rand io.Reader, priv interface{}, revokedCerts []pkix.RevokedCertificate, now, expiry time.Time) (crlBytes []byte, err error) {$/;"	f
CreateCertificate	./crypto/x509/x509.go	/^func CreateCertificate(rand io.Reader, template, parent *Certificate, pub, priv interface{}) (cert []byte, err error) {$/;"	f
CreateCertificateRequest	./crypto/x509/x509.go	/^func CreateCertificateRequest(rand io.Reader, template *CertificateRequest, priv interface{}) (csr []byte, err error) {$/;"	f
CreateDirectory	./syscall/zsyscall_windows.go	/^func CreateDirectory(path *uint16, sa *SecurityAttributes) (err error) {$/;"	f
CreateFile	./syscall/zsyscall_windows.go	/^func CreateFile(name *uint16, access uint32, mode uint32, sa *SecurityAttributes, createmode uint32, attrs uint32, templatefile int32) (handle Handle, err error) {$/;"	f
CreateFileMapping	./syscall/zsyscall_windows.go	/^func CreateFileMapping(fhandle Handle, sa *SecurityAttributes, prot uint32, maxSizeHigh uint32, maxSizeLow uint32, name *uint16) (handle Handle, err error) {$/;"	f
CreateFormField	./mime/multipart/writer.go	/^func (w *Writer) CreateFormField(fieldname string) (io.Writer, error) {$/;"	f
CreateFormFile	./mime/multipart/writer.go	/^func (w *Writer) CreateFormFile(fieldname, filename string) (io.Writer, error) {$/;"	f
CreateHardLink	./syscall/zsyscall_windows.go	/^func CreateHardLink(filename *uint16, existingfilename *uint16, reserved uintptr) (err error) {$/;"	f
CreateHeader	./archive/zip/writer.go	/^func (w *Writer) CreateHeader(fh *FileHeader) (io.Writer, error) {$/;"	f
CreateIoCompletionPort	./syscall/zsyscall_windows.go	/^func CreateIoCompletionPort(filehandle Handle, cphandle Handle, key uint32, threadcnt uint32) (handle Handle, err error) {$/;"	f
CreateKey	./internal/syscall/windows/registry/key.go	/^func CreateKey(k Key, path string, access uint32) (newk Key, openedExisting bool, err error) {$/;"	f
CreatePart	./mime/multipart/writer.go	/^func (w *Writer) CreatePart(header textproto.MIMEHeader) (io.Writer, error) {$/;"	f
CreatePipe	./syscall/zsyscall_windows.go	/^func CreatePipe(readhandle *Handle, writehandle *Handle, sa *SecurityAttributes, size uint32) (err error) {$/;"	f
CreateProcess	./syscall/zsyscall_windows.go	/^func CreateProcess(appName *uint16, commandLine *uint16, procSecurity *SecurityAttributes, threadSecurity *SecurityAttributes, inheritHandles bool, creationFlags uint32, env *uint16, currentDir *uint16, startupInfo *StartupInfo, outProcInfo *ProcessInformation) (err error) {$/;"	f
CreateSymbolicLink	./syscall/zsyscall_windows.go	/^func CreateSymbolicLink(symlinkfilename *uint16, targetfilename *uint16, flags uint32) (err error) {$/;"	f
CreateToolhelp32Snapshot	./syscall/zsyscall_windows.go	/^func CreateToolhelp32Snapshot(flags uint32, processId uint32) (handle Handle, err error) {$/;"	f
Credential	./syscall/exec_unix.go	/^type Credential struct {$/;"	t
Crit	./log/syslog/syslog.go	/^func (w *Writer) Crit(m string) (err error) {$/;"	f
CryptAcquireContext	./syscall/zsyscall_windows.go	/^func CryptAcquireContext(provhandle *Handle, container *uint16, provider *uint16, provtype uint32, flags uint32) (err error) {$/;"	f
CryptBlocks	./crypto/cipher/cbc.go	/^func (x *cbcDecrypter) CryptBlocks(dst, src []byte) {$/;"	f
CryptBlocks	./crypto/cipher/cbc.go	/^func (x *cbcEncrypter) CryptBlocks(dst, src []byte) {$/;"	f
CryptGenRandom	./syscall/zsyscall_windows.go	/^func CryptGenRandom(provhandle Handle, buflen uint32, buf *byte) (err error) {$/;"	f
CryptReleaseContext	./syscall/zsyscall_windows.go	/^func CryptReleaseContext(provhandle Handle, flags uint32) (err error) {$/;"	f
CryptTest	./crypto/aes/aes_test.go	/^type CryptTest struct {$/;"	t
CryptTest	./crypto/des/des_test.go	/^type CryptTest struct {$/;"	t
Cseek	./cmd/link/internal/ld/lib.go	/^func Cseek(p int64) {$/;"	f
Ctxt	./cmd/compile/internal/gc/go.go	/^var Ctxt *obj.Link$/;"	v
Ctype	./cmd/compile/internal/gc/go.go	/^func (v Val) Ctype() int {$/;"	f
Curfn	./cmd/compile/internal/gc/go.go	/^var Curfn *Node$/;"	v
Current	./os/user/lookup.go	/^func Current() (*User, error) {$/;"	f
Curve	./crypto/elliptic/elliptic.go	/^type Curve interface {$/;"	t
CurveID	./crypto/tls/common.go	/^type CurveID uint16$/;"	t
CurveParams	./crypto/elliptic/elliptic.go	/^type CurveParams struct {$/;"	t
CustomLock	./cmd/vet/testdata/copylock_func.go	/^type CustomLock struct{}$/;"	t
Cwrite	./cmd/link/internal/ld/lib.go	/^func Cwrite(p []byte) {$/;"	f
D1	./reflect/all_test.go	/^type D1 struct {$/;"	t
D2	./reflect/all_test.go	/^type D2 struct {$/;"	t
DATA	./runtime/asm.s	/^DATA runtime·no_pointers_stackmap+0x00(SB)\/4, $2$/;"	l
DATA	./runtime/asm.s	/^DATA runtime·no_pointers_stackmap+0x04(SB)\/4, $0$/;"	l
DATA	./runtime/asm_386.s	/^DATA	runtime·mainPC+0(SB)\/4,$runtime·main(SB)$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x00(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x04(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x08(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x0c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x10(SB)\/4, $0x000000ff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x14(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x18(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x1c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x20(SB)\/4, $0x0000ffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x24(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x28(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x2c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x30(SB)\/4, $0x00ffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x34(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x38(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x3c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x40(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x44(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x48(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x4c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x50(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x54(SB)\/4, $0x000000ff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x58(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x5c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x60(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x64(SB)\/4, $0x0000ffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x68(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x6c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x70(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x74(SB)\/4, $0x00ffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x78(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x7c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x80(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x84(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x88(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x8c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x90(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x94(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x98(SB)\/4, $0x000000ff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0x9c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xa0(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xa4(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xa8(SB)\/4, $0x0000ffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xac(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xb0(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xb4(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xb8(SB)\/4, $0x00ffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xbc(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xc0(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xc4(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xc8(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xcc(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xd0(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xd4(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xd8(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xdc(SB)\/4, $0x000000ff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xe0(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xe4(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xe8(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xec(SB)\/4, $0x0000ffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xf0(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xf4(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xf8(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA masks<>+0xfc(SB)\/4, $0x00ffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x00(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x04(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x08(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x0c(SB)\/4, $0x00000000$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x10(SB)\/4, $0xffffff0f$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x14(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x18(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x1c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x20(SB)\/4, $0xffff0f0e$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x24(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x28(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x2c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x30(SB)\/4, $0xff0f0e0d$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x34(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x38(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x3c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x40(SB)\/4, $0x0f0e0d0c$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x44(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x48(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x4c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x50(SB)\/4, $0x0e0d0c0b$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x54(SB)\/4, $0xffffff0f$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x58(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x5c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x60(SB)\/4, $0x0d0c0b0a$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x64(SB)\/4, $0xffff0f0e$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x68(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x6c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x70(SB)\/4, $0x0c0b0a09$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x74(SB)\/4, $0xff0f0e0d$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x78(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x7c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x80(SB)\/4, $0x0b0a0908$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x84(SB)\/4, $0x0f0e0d0c$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x88(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x8c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x90(SB)\/4, $0x0a090807$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x94(SB)\/4, $0x0e0d0c0b$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x98(SB)\/4, $0xffffff0f$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0x9c(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xa0(SB)\/4, $0x09080706$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xa4(SB)\/4, $0x0d0c0b0a$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xa8(SB)\/4, $0xffff0f0e$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xac(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xb0(SB)\/4, $0x08070605$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xb4(SB)\/4, $0x0c0b0a09$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xb8(SB)\/4, $0xff0f0e0d$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xbc(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xc0(SB)\/4, $0x07060504$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xc4(SB)\/4, $0x0b0a0908$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xc8(SB)\/4, $0x0f0e0d0c$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xcc(SB)\/4, $0xffffffff$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xd0(SB)\/4, $0x06050403$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xd4(SB)\/4, $0x0a090807$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xd8(SB)\/4, $0x0e0d0c0b$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xdc(SB)\/4, $0xffffff0f$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xe0(SB)\/4, $0x05040302$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xe4(SB)\/4, $0x09080706$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xe8(SB)\/4, $0x0d0c0b0a$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xec(SB)\/4, $0xffff0f0e$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xf0(SB)\/4, $0x04030201$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xf4(SB)\/4, $0x08070605$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xf8(SB)\/4, $0x0c0b0a09$/;"	l
DATA	./runtime/asm_386.s	/^DATA shifts<>+0xfc(SB)\/4, $0xff0f0e0d$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA	runtime·mainPC+0(SB)\/8,$runtime·main(SB)$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x00(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x08(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x10(SB)\/8, $0x00000000000000ff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x18(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x20(SB)\/8, $0x000000000000ffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x28(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x30(SB)\/8, $0x0000000000ffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x38(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x40(SB)\/8, $0x00000000ffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x48(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x50(SB)\/8, $0x000000ffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x58(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x60(SB)\/8, $0x0000ffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x68(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x70(SB)\/8, $0x00ffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x78(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x80(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x88(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x90(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0x98(SB)\/8, $0x00000000000000ff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xa0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xa8(SB)\/8, $0x000000000000ffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xb0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xb8(SB)\/8, $0x0000000000ffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xc0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xc8(SB)\/8, $0x00000000ffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xd0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xd8(SB)\/8, $0x000000ffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xe0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xe8(SB)\/8, $0x0000ffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xf0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA masks<>+0xf8(SB)\/8, $0x00ffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x00(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x08(SB)\/8, $0x0000000000000000$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x10(SB)\/8, $0xffffffffffffff0f$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x18(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x20(SB)\/8, $0xffffffffffff0f0e$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x28(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x30(SB)\/8, $0xffffffffff0f0e0d$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x38(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x40(SB)\/8, $0xffffffff0f0e0d0c$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x48(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x50(SB)\/8, $0xffffff0f0e0d0c0b$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x58(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x60(SB)\/8, $0xffff0f0e0d0c0b0a$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x68(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x70(SB)\/8, $0xff0f0e0d0c0b0a09$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x78(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x80(SB)\/8, $0x0f0e0d0c0b0a0908$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x88(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x90(SB)\/8, $0x0e0d0c0b0a090807$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0x98(SB)\/8, $0xffffffffffffff0f$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xa0(SB)\/8, $0x0d0c0b0a09080706$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xa8(SB)\/8, $0xffffffffffff0f0e$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xb0(SB)\/8, $0x0c0b0a0908070605$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xb8(SB)\/8, $0xffffffffff0f0e0d$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xc0(SB)\/8, $0x0b0a090807060504$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xc8(SB)\/8, $0xffffffff0f0e0d0c$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xd0(SB)\/8, $0x0a09080706050403$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xd8(SB)\/8, $0xffffff0f0e0d0c0b$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xe0(SB)\/8, $0x0908070605040302$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xe8(SB)\/8, $0xffff0f0e0d0c0b0a$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xf0(SB)\/8, $0x0807060504030201$/;"	l
DATA	./runtime/asm_amd64.s	/^DATA shifts<>+0xf8(SB)\/8, $0xff0f0e0d0c0b0a09$/;"	l
DATA	./runtime/asm_amd64p32.s	/^DATA	runtime·mainPC+0(SB)\/4,$runtime·main(SB)$/;"	l
DATA	./runtime/asm_arm.s	/^DATA	runtime·mainPC+0(SB)\/4,$runtime·main(SB)$/;"	l
DATA	./runtime/asm_arm64.s	/^DATA	runtime·mainPC+0(SB)\/8,$runtime·main(SB)$/;"	l
DATA	./runtime/asm_ppc64x.s	/^DATA	runtime·mainPC+0(SB)\/8,$runtime·main(SB)$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x00(SB)\/4,$_rt0_arm_android_argv0(SB)$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x04(SB)\/4,$0$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x08(SB)\/4,$0$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x0C(SB)\/4,$15      \/\/ AT_PLATFORM$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x10(SB)\/4,$_rt0_arm_android_auxv0(SB)$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x14(SB)\/4,$16      \/\/ AT_HWCAP$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x18(SB)\/4,$0x2040  \/\/ HWCAP_VFP | HWCAP_VFPv3$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv+0x1C(SB)\/4,$0$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_argv0(SB)\/8, $"gojni"$/;"	l
DATA	./runtime/rt0_android_arm.s	/^DATA _rt0_arm_android_auxv0(SB)\/4, $"v7l"$/;"	l
DATA	./runtime/rt0_darwin_amd64.s	/^DATA _rt0_amd64_darwin_lib_argc<>(SB)\/8, $0$/;"	l
DATA	./runtime/rt0_darwin_amd64.s	/^DATA _rt0_amd64_darwin_lib_argv<>(SB)\/8, $0$/;"	l
DATA	./runtime/rt0_darwin_arm.s	/^DATA  _rt0_arm_darwin_lib_argc<>(SB)\/4, $0$/;"	l
DATA	./runtime/rt0_darwin_arm.s	/^DATA  _rt0_arm_darwin_lib_argv<>(SB)\/4, $0$/;"	l
DATA	./runtime/rt0_darwin_arm64.s	/^DATA  _rt0_arm64_darwin_lib_argc<>(SB)\/8, $0$/;"	l
DATA	./runtime/rt0_darwin_arm64.s	/^DATA  _rt0_arm64_darwin_lib_argv<>(SB)\/8, $0$/;"	l
DATA	./runtime/rt0_linux_386.s	/^DATA	runtime·_vdso(SB)\/4, $_fallback_vdso(SB)$/;"	l
DATA	./runtime/rt0_linux_386.s	/^DATA _rt0_386_linux_lib_argc<>(SB)\/4, $0$/;"	l
DATA	./runtime/rt0_linux_386.s	/^DATA _rt0_386_linux_lib_argv<>(SB)\/4, $0$/;"	l
DATA	./runtime/rt0_linux_amd64.s	/^DATA _rt0_amd64_linux_lib_argc<>(SB)\/8, $0$/;"	l
DATA	./runtime/rt0_linux_amd64.s	/^DATA _rt0_amd64_linux_lib_argv<>(SB)\/8, $0$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA _rt0_arm_linux_lib_argc<>(SB)\/4,$0$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA _rt0_arm_linux_lib_argv<>(SB)\/4,$0$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA bad_abi_msg+0x00(SB)\/8, $"This pro"$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA bad_abi_msg+0x08(SB)\/8, $"gram can"$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA bad_abi_msg+0x10(SB)\/8, $" only be"$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA bad_abi_msg+0x18(SB)\/8, $" run on "$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA bad_abi_msg+0x20(SB)\/8, $"EABI ker"$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA bad_abi_msg+0x28(SB)\/4, $"nels"$/;"	l
DATA	./runtime/rt0_linux_arm.s	/^DATA bad_abi_msg+0x2c(SB)\/1, $0xa$/;"	l
DATA	./runtime/rt0_plan9_386.s	/^DATA  runtime·isplan9(SB)\/4, $1$/;"	l
DATA	./runtime/rt0_plan9_amd64.s	/^DATA runtime·isplan9(SB)\/4, $1$/;"	l
DATA	./runtime/rt0_solaris_amd64.s	/^DATA runtime·issolaris(SB)\/4, $1$/;"	l
DATA	./runtime/rt0_windows_386.s	/^DATA  runtime·iswindows(SB)\/4, $1$/;"	l
DATA	./runtime/rt0_windows_amd64.s	/^DATA  runtime·iswindows(SB)\/4, $1$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x00(SB)\/4, $0xf4f8fcff$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x04(SB)\/4, $0xe6eaedf0$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x08(SB)\/4, $0xdadde0e3$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x0c(SB)\/4, $0xcfd2d4d7$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x10(SB)\/4, $0xc5c7cacc$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x14(SB)\/4, $0xbcbec0c3$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x18(SB)\/4, $0xb4b6b8ba$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x1c(SB)\/4, $0xacaeb0b2$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x20(SB)\/4, $0xa5a7a8aa$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x24(SB)\/4, $0x9fa0a2a3$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x28(SB)\/4, $0x999a9c9d$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x2c(SB)\/4, $0x93949697$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x30(SB)\/4, $0x8e8f9092$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x34(SB)\/4, $0x898a8c8d$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x38(SB)\/4, $0x85868788$/;"	l
DATA	./runtime/vlop_arm.s	/^DATA fast_udiv_tab<>+0x3c(SB)\/4, $0x81828384$/;"	l
DB	./database/sql/sql.go	/^type DB struct {$/;"	t
DBStats	./database/sql/sql.go	/^type DBStats struct {$/;"	t
DISPATCH	./runtime/asm_386.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
DISPATCH	./runtime/asm_amd64.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
DISPATCH	./runtime/asm_amd64p32.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
DISPATCH	./runtime/asm_arm.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
DISPATCH	./runtime/asm_arm64.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
DISPATCH	./runtime/asm_ppc64x.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
DLL	./runtime/syscall_windows_test.go	/^type DLL struct {$/;"	t
DLL	./syscall/dll_windows.go	/^type DLL struct {$/;"	t
DLLError	./syscall/dll_windows.go	/^type DLLError struct {$/;"	t
DLLFuncName	./syscall/mksyscall_windows.go	/^func (f *Fn) DLLFuncName() string {$/;"	f
DLLName	./syscall/mksyscall_windows.go	/^func (f *Fn) DLLName() string {$/;"	f
DLLs	./syscall/mksyscall_windows.go	/^func (src *Source) DLLs() []string {$/;"	f
DMB_ISHST_7	./sync/atomic/asm_arm.s	/^#define DMB_ISHST_7 \\$/;"	d
DMB_ISH_7	./sync/atomic/asm_arm.s	/^#define DMB_ISH_7 \\$/;"	d
DNSConfigError	./net/net.go	/^type DNSConfigError struct {$/;"	t
DNSError	./net/net.go	/^type DNSError struct {$/;"	t
DNSMXData	./syscall/ztypes_windows.go	/^type DNSMXData struct {$/;"	t
DNSPTRData	./syscall/ztypes_windows.go	/^type DNSPTRData struct {$/;"	t
DNSRecord	./syscall/ztypes_windows.go	/^type DNSRecord struct {$/;"	t
DNSSRVData	./syscall/ztypes_windows.go	/^type DNSSRVData struct {$/;"	t
DNSTXTData	./syscall/ztypes_windows.go	/^type DNSTXTData struct {$/;"	t
DRconv	./cmd/internal/obj/arm/list5.go	/^func DRconv(a int) string {$/;"	f
DRconv	./cmd/internal/obj/arm64/list7.go	/^func DRconv(a int) string {$/;"	f
DRconv	./cmd/internal/obj/ppc64/list9.go	/^func DRconv(a int) string {$/;"	f
DT	./encoding/gob/codec_test.go	/^type DT struct {$/;"	t
DTypeFunc	./runtime/runtime-gdb.py	/^class DTypeFunc(gdb.Function):$/;"	c
DUPOK	./runtime/textflag.h	/^#define DUPOK	/;"	d
DWARF	./debug/elf/file.go	/^func (f *File) DWARF() (*dwarf.Data, error) {$/;"	f
DWARF	./debug/macho/file.go	/^func (f *File) DWARF() (*dwarf.Data, error) {$/;"	f
DWARF	./debug/pe/file.go	/^func (f *File) DWARF() (*dwarf.Data, error) {$/;"	f
DWAbbrev	./cmd/link/internal/ld/dwarf.go	/^type DWAbbrev struct {$/;"	t
DWAttr	./cmd/link/internal/ld/dwarf.go	/^type DWAttr struct {$/;"	t
DWAttrForm	./cmd/link/internal/ld/dwarf.go	/^type DWAttrForm struct {$/;"	t
DWDie	./cmd/link/internal/ld/dwarf.go	/^type DWDie struct {$/;"	t
D_OREG	./cmd/compile/internal/gc/go.go	/^	\/\/ Instruction updates whichever of from\/to is type D_OREG. (ppc64)$/;"	t
Data	./cmd/internal/goobj/read.go	/^type Data struct {$/;"	t
Data	./crypto/md5/gen.go	/^type Data struct {$/;"	t
Data	./debug/dwarf/open.go	/^type Data struct {$/;"	t
Data	./debug/elf/elf.go	/^type Data byte$/;"	t
Data	./debug/elf/file.go	/^func (s *Section) Data() ([]byte, error) {$/;"	f
Data	./debug/macho/file.go	/^func (s *Section) Data() ([]byte, error) {$/;"	f
Data	./debug/macho/file.go	/^func (s *Segment) Data() ([]byte, error) {$/;"	f
Data	./debug/pe/file.go	/^func (s *Section) Data() ([]byte, error) {$/;"	f
Data	./debug/plan9obj/file.go	/^func (s *Section) Data() ([]byte, error) {$/;"	f
Data	./encoding/xml/marshal_test.go	/^type Data struct {$/;"	t
Data	./go/ast/scope.go	/^\/\/	Kind    Data type         Data value$/;"	t
Data	./net/smtp/smtp.go	/^func (c *Client) Data() (io.WriteCloser, error) {$/;"	f
Data	./sync/atomic/atomic_test.go	/^	type Data struct {$/;"	t
DataDirectory	./debug/pe/pe.go	/^type DataDirectory struct {$/;"	t
DataErrReader	./testing/iotest/reader.go	/^func DataErrReader(r io.Reader) io.Reader { return &dataErrReader{r, nil, make([]byte, 1024)} }$/;"	f
DataOffset	./archive/zip/reader.go	/^func (f *File) DataOffset() (offset int64, err error) {$/;"	f
Datastring	./cmd/compile/internal/gc/obj.go	/^func Datastring(s string, a *obj.Addr) {$/;"	f
Datblk	./cmd/link/internal/ld/data.go	/^func Datblk(addr int64, size int64) {$/;"	f
Date	./net/mail/message.go	/^func (h Header) Date() (time.Time, error) {$/;"	f
Date	./time/time.go	/^func (t Time) Date() (year int, month Month, day int) {$/;"	f
Date	./time/time.go	/^func Date(year int, month Month, day, hour, min, sec, nsec int, loc *Location) Time {$/;"	f
DateServer	./net/http/triv.go	/^func DateServer(rw http.ResponseWriter, req *http.Request) {$/;"	f
Day	./time/time.go	/^func (t Time) Day() int {$/;"	f
DaysIn	./time/internal_test.go	/^var DaysIn = daysIn$/;"	v
DaysIn	./time/time_test.go	/^	\/\/ Test the daysIn function via the `var DaysIn = daysIn`$/;"	v
Dconv	./cmd/internal/obj/util.go	/^func (ctxt *Link) Dconv(a *Addr) string {$/;"	f
Dconv	./cmd/internal/obj/util.go	/^func Dconv(p *Prog, a *Addr) string {$/;"	f
Debug	./cmd/compile/internal/gc/go.go	/^var Debug [256]int$/;"	v
Debug	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) Debug(out io.Writer) {$/;"	f
Debug	./encoding/gob/debug.go	/^func Debug(r io.Reader) {$/;"	f
Debug	./log/syslog/syslog.go	/^func (w *Writer) Debug(m string) (err error) {$/;"	f
Debug_checknil	./cmd/compile/internal/gc/go.go	/^var Debug_checknil int$/;"	v
Debug_gcprog	./cmd/compile/internal/gc/reflect.go	/^var Debug_gcprog int \/\/ set by -d gcprog$/;"	v
Debug_typeassert	./cmd/compile/internal/gc/go.go	/^var Debug_typeassert int$/;"	v
Decl	./go/ast/ast.go	/^type Decl interface {$/;"	t
Decode	./cmd/internal/objfile/disasm.go	/^func (d *Disasm) Decode(start, end uint64, f func(pc, size uint64, file string, line int, text string)) {$/;"	f
Decode	./cmd/internal/rsc.io/arm/armasm/decode.go	/^func Decode(src []byte, mode Mode) (inst Inst, err error) {$/;"	f
Decode	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^func Decode(src []byte, mode int) (inst Inst, err error) {$/;"	f
Decode	./compress/bzip2/huffman.go	/^func (t *huffmanTree) Decode(br *bitReader) (v uint16) {$/;"	f
Decode	./compress/bzip2/move_to_front.go	/^func (m moveToFrontDecoder) Decode(n int) (b byte) {$/;"	f
Decode	./encoding/ascii85/ascii85.go	/^func Decode(dst, src []byte, flush bool) (ndst, nsrc int, err error) {$/;"	f
Decode	./encoding/base32/base32.go	/^func (enc *Encoding) Decode(dst, src []byte) (n int, err error) {$/;"	f
Decode	./encoding/base64/base64.go	/^func (enc *Encoding) Decode(dst, src []byte) (n int, err error) {$/;"	f
Decode	./encoding/gob/decoder.go	/^func (dec *Decoder) Decode(e interface{}) error {$/;"	f
Decode	./encoding/hex/hex.go	/^func Decode(dst, src []byte) (int, error) {$/;"	f
Decode	./encoding/json/stream.go	/^func (dec *Decoder) Decode(v interface{}) error {$/;"	f
Decode	./encoding/pem/pem.go	/^func Decode(data []byte) (p *Block, rest []byte) {$/;"	f
Decode	./encoding/xml/read.go	/^func (d *Decoder) Decode(v interface{}) error {$/;"	f
Decode	./image/format.go	/^func Decode(r io.Reader) (Image, string, error) {$/;"	f
Decode	./image/gif/reader.go	/^func Decode(r io.Reader) (image.Image, error) {$/;"	f
Decode	./image/jpeg/reader.go	/^func Decode(r io.Reader) (image.Image, error) {$/;"	f
Decode	./image/png/reader.go	/^func Decode(r io.Reader) (image.Image, error) {$/;"	f
Decode	./mime/encodedword.go	/^func (d *WordDecoder) Decode(word string) (string, error) {$/;"	f
Decode	./unicode/utf16/utf16.go	/^func Decode(s []uint16) []rune {$/;"	f
DecodeAll	./image/gif/reader.go	/^func DecodeAll(r io.Reader) (*GIF, error) {$/;"	f
DecodeConfig	./image/format.go	/^func DecodeConfig(r io.Reader) (Config, string, error) {$/;"	f
DecodeConfig	./image/gif/reader.go	/^func DecodeConfig(r io.Reader) (image.Config, error) {$/;"	f
DecodeConfig	./image/jpeg/reader.go	/^func DecodeConfig(r io.Reader) (image.Config, error) {$/;"	f
DecodeConfig	./image/png/reader.go	/^func DecodeConfig(r io.Reader) (image.Config, error) {$/;"	f
DecodeElement	./encoding/xml/read.go	/^func (d *Decoder) DecodeElement(v interface{}, start *StartElement) error {$/;"	f
DecodeError	./debug/dwarf/buf.go	/^type DecodeError struct {$/;"	t
DecodeHeader	./mime/encodedword.go	/^func (d *WordDecoder) DecodeHeader(header string) (string, error) {$/;"	f
DecodeLastRune	./unicode/utf8/utf8.go	/^func DecodeLastRune(p []byte) (r rune, size int) {$/;"	f
DecodeLastRuneInString	./unicode/utf8/utf8.go	/^func DecodeLastRuneInString(s string) (r rune, size int) {$/;"	f
DecodeRune	./unicode/utf16/utf16.go	/^func DecodeRune(r1, r2 rune) rune {$/;"	f
DecodeRune	./unicode/utf8/utf8.go	/^func DecodeRune(p []byte) (r rune, size int) {$/;"	f
DecodeRuneInString	./unicode/utf8/utf8.go	/^func DecodeRuneInString(s string) (r rune, size int) {$/;"	f
DecodeString	./encoding/base32/base32.go	/^func (enc *Encoding) DecodeString(s string) ([]byte, error) {$/;"	f
DecodeString	./encoding/base64/base64.go	/^func (enc *Encoding) DecodeString(s string) ([]byte, error) {$/;"	f
DecodeString	./encoding/hex/hex.go	/^func DecodeString(s string) ([]byte, error) {$/;"	f
DecodeValue	./encoding/gob/decoder.go	/^func (dec *Decoder) DecodeValue(v reflect.Value) error {$/;"	f
DecodedLen	./encoding/base32/base32.go	/^func (enc *Encoding) DecodedLen(n int) int { return n \/ 8 * 5 }$/;"	f
DecodedLen	./encoding/base64/base64.go	/^func (enc *Encoding) DecodedLen(n int) int {$/;"	f
DecodedLen	./encoding/hex/hex.go	/^func DecodedLen(x int) int { return x \/ 2 }$/;"	f
Decoder	./encoding/gob/decoder.go	/^type Decoder struct {$/;"	t
Decoder	./encoding/json/stream.go	/^type Decoder struct {$/;"	t
Decoder	./encoding/xml/xml.go	/^type Decoder struct {$/;"	t
DecodingError	./debug/gosym/symtab.go	/^type DecodingError struct {$/;"	t
Decompressor	./archive/zip/register.go	/^type Decompressor func(io.Reader) io.ReadCloser$/;"	t
Decref	./net/fd_mutex.go	/^func (mu *fdMutex) Decref() bool {$/;"	f
Decrypt	./crypto/aes/cipher.go	/^func (c *aesCipher) Decrypt(dst, src []byte) {$/;"	f
Decrypt	./crypto/des/cipher.go	/^func (c *desCipher) Decrypt(dst, src []byte) { decryptBlock(c.subkeys[:], dst, src) }$/;"	f
Decrypt	./crypto/des/cipher.go	/^func (c *tripleDESCipher) Decrypt(dst, src []byte) {$/;"	f
Decrypt	./crypto/rsa/rsa.go	/^func (priv *PrivateKey) Decrypt(rand io.Reader, ciphertext []byte, opts crypto.DecrypterOpts) (plaintext []byte, err error) {$/;"	f
DecryptOAEP	./crypto/rsa/rsa.go	/^func DecryptOAEP(hash hash.Hash, random io.Reader, priv *PrivateKey, ciphertext []byte, label []byte) (msg []byte, err error) {$/;"	f
DecryptPEMBlock	./crypto/x509/pem_decrypt.go	/^func DecryptPEMBlock(b *pem.Block, password []byte) ([]byte, error) {$/;"	f
DecryptPKCS1v15	./crypto/rsa/pkcs1v15.go	/^func DecryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []byte) (out []byte, err error) {$/;"	f
DecryptPKCS1v15SessionKey	./crypto/rsa/pkcs1v15.go	/^func DecryptPKCS1v15SessionKey(rand io.Reader, priv *PrivateKey, ciphertext []byte, key []byte) (err error) {$/;"	f
DecryptPKCS1v15Test	./crypto/rsa/pkcs1v15_test.go	/^type DecryptPKCS1v15Test struct {$/;"	t
Decrypter	./crypto/crypto.go	/^type Decrypter interface {$/;"	t
DecrypterOpts	./crypto/crypto.go	/^type DecrypterOpts interface{}$/;"	t
DeepEqual	./reflect/deepequal.go	/^func DeepEqual(a1, a2 interface{}) bool {$/;"	f
DeepEqualTest	./reflect/all_test.go	/^type DeepEqualTest struct {$/;"	t
DefPredeclaredTestFuncs	./go/types/universe.go	/^func DefPredeclaredTestFuncs() {$/;"	f
Default	./go/importer/importer.go	/^func Default() types.Importer {$/;"	f
DefaultClient	./net/http/client.go	/^var DefaultClient = &Client{}$/;"	v
DefaultMask	./net/ip.go	/^func (ip IP) DefaultMask() IPMask {$/;"	f
DefaultParameterConverter	./database/sql/driver/types.go	/^var DefaultParameterConverter defaultConverter$/;"	v
DefaultServeMux	./net/http/server.go	/^var DefaultServeMux = NewServeMux()$/;"	v
DefaultServer	./net/rpc/server.go	/^var DefaultServer = NewServer()$/;"	v
DefaultTransport	./net/http/transport.go	/^var DefaultTransport RoundTripper = &Transport{$/;"	v
DefaultUserAgent	./net/http/export_test.go	/^var DefaultUserAgent = defaultUserAgent$/;"	v
DeferDelete	./cmd/pprof/internal/tempfile/tempfile.go	/^func DeferDelete(path string) {$/;"	f
DeferT	./runtime/race/testdata/mop_test.go	/^type DeferT int$/;"	t
Deferproc	./cmd/compile/internal/gc/go.go	/^var Deferproc *Node$/;"	v
Deferreturn	./cmd/compile/internal/gc/go.go	/^var Deferreturn *Node$/;"	v
DefinedTemplates	./text/template/exec.go	/^func (t *Template) DefinedTemplates() string {$/;"	f
Defn	./debug/dwarf/type.go	/^func (t *StructType) Defn() string {$/;"	f
Del	./net/http/header.go	/^func (h Header) Del(key string) {$/;"	f
Del	./net/textproto/header.go	/^func (h MIMEHeader) Del(key string) {$/;"	f
Del	./net/url/url.go	/^func (v Values) Del(key string) {$/;"	f
DeleteFile	./syscall/zsyscall_windows.go	/^func DeleteFile(path *uint16) (err error) {$/;"	f
DeleteKey	./internal/syscall/windows/registry/key.go	/^func DeleteKey(k Key, path string) error {$/;"	f
DeleteValue	./internal/syscall/windows/registry/value.go	/^func (k Key) DeleteValue(name string) error {$/;"	f
Delim	./encoding/json/stream.go	/^\/\/ number, and null—along with delimiters [ ] { } of type Delim$/;"	t
Delim	./encoding/json/stream.go	/^type Delim rune$/;"	t
Delims	./html/template/template.go	/^func (t *Template) Delims(left, right string) *Template {$/;"	f
Delims	./text/template/template.go	/^func (t *Template) Delims(left, right string) *Template {$/;"	f
Demangle	./cmd/pprof/internal/plugin/plugin.go	/^func (noObjTool) Demangle(name []string) (map[string]string, error) {$/;"	f
Demangle	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) Demangle(d Demangler) error {$/;"	f
Demangle	./cmd/pprof/pprof.go	/^func (*objTool) Demangle(names []string) (map[string]string, error) {$/;"	f
Demangler	./cmd/pprof/internal/profile/profile.go	/^type Demangler func(name []string) (map[string]string, error)$/;"	t
Denom	./cmd/compile/internal/big/rat.go	/^func (x *Rat) Denom() *Int {$/;"	f
Denom	./go/constant/value.go	/^func Denom(x Value) Value {$/;"	f
Denom	./math/big/rat.go	/^func (x *Rat) Denom() *Int {$/;"	f
Departure	./encoding/xml/marshal_test.go	/^type Departure struct {$/;"	t
Derived	./runtime/race/testdata/mop_test.go	/^	type Derived struct {$/;"	t
DetachLsf	./syscall/lsf_linux.go	/^func DetachLsf(fd int) error {$/;"	f
DetectContentType	./net/http/sniff.go	/^func DetectContentType(data []byte) string {$/;"	f
DeviceIoControl	./syscall/zsyscall_windows.go	/^func DeviceIoControl(handle Handle, ioControlCode uint32, inBuffer *byte, inBufferSize uint32, outBuffer *byte, outBufferSize uint32, bytesReturned *uint32, overlapped *Overlapped) (err error) {$/;"	f
Diag	./cmd/link/internal/ld/lib.go	/^func Diag(format string, args ...interface{}) {$/;"	f
Dial	./crypto/tls/tls.go	/^func Dial(network, addr string, config *Config) (*Conn, error) {$/;"	f
Dial	./log/syslog/syslog.go	/^func Dial(network, raddr string, priority Priority, tag string) (*Writer, error) {$/;"	f
Dial	./net/dial.go	/^\/\/ See func Dial for a description of the network and address$/;"	f
Dial	./net/dial.go	/^func (d *Dialer) Dial(network, address string) (Conn, error) {$/;"	f
Dial	./net/dial.go	/^func Dial(network, address string) (Conn, error) {$/;"	f
Dial	./net/rpc/client.go	/^func Dial(network, address string) (*Client, error) {$/;"	f
Dial	./net/rpc/jsonrpc/client.go	/^func Dial(network, address string) (*rpc.Client, error) {$/;"	f
Dial	./net/smtp/smtp.go	/^func Dial(addr string) (*Client, error) {$/;"	f
Dial	./net/textproto/textproto.go	/^func Dial(network, addr string) (*Conn, error) {$/;"	f
DialHTTP	./net/rpc/client.go	/^func DialHTTP(network, address string) (*Client, error) {$/;"	f
DialHTTPPath	./net/rpc/client.go	/^func DialHTTPPath(network, address, path string) (*Client, error) {$/;"	f
DialIP	./net/iprawsock_plan9.go	/^func DialIP(netProto string, laddr, raddr *IPAddr) (*IPConn, error) {$/;"	f
DialIP	./net/iprawsock_posix.go	/^func DialIP(netProto string, laddr, raddr *IPAddr) (*IPConn, error) {$/;"	f
DialTCP	./net/tcpsock_plan9.go	/^func DialTCP(net string, laddr, raddr *TCPAddr) (*TCPConn, error) {$/;"	f
DialTCP	./net/tcpsock_posix.go	/^func DialTCP(net string, laddr, raddr *TCPAddr) (*TCPConn, error) {$/;"	f
DialTimeout	./net/dial.go	/^func DialTimeout(network, address string, timeout time.Duration) (Conn, error) {$/;"	f
DialUDP	./net/udpsock_plan9.go	/^func DialUDP(net string, laddr, raddr *UDPAddr) (*UDPConn, error) {$/;"	f
DialUDP	./net/udpsock_posix.go	/^func DialUDP(net string, laddr, raddr *UDPAddr) (*UDPConn, error) {$/;"	f
DialUnix	./net/unixsock_plan9.go	/^func DialUnix(net string, laddr, raddr *UnixAddr) (*UnixConn, error) {$/;"	f
DialUnix	./net/unixsock_posix.go	/^func DialUnix(net string, laddr, raddr *UnixAddr) (*UnixConn, error) {$/;"	f
DialWithDialer	./crypto/tls/tls.go	/^func DialWithDialer(dialer *net.Dialer, network, addr string, config *Config) (*Conn, error) {$/;"	f
Dialer	./net/dial.go	/^type Dialer struct {$/;"	t
Dim	./math/dim.go	/^func Dim(x, y float64) float64$/;"	f
Dir	./go/types/type.go	/^func (c *Chan) Dir() ChanDir { return c.dir }$/;"	f
Dir	./net/http/fs.go	/^type Dir string$/;"	t
Dir	./path/filepath/path.go	/^func Dir(path string) string {$/;"	f
Dir	./path/path.go	/^func Dir(path string) string {$/;"	f
Dir	./syscall/dir_plan9.go	/^type Dir struct {$/;"	t
Direct	./encoding/gob/codec_test.go	/^type Direct struct {$/;"	t
Directive	./encoding/xml/xml.go	/^type Directive []byte$/;"	t
Dirent	./syscall/syscall_nacl.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/types_darwin.go	/^type Dirent C.struct_dirent$/;"	t
Dirent	./syscall/types_dragonfly.go	/^type Dirent C.struct_dirent$/;"	t
Dirent	./syscall/types_freebsd.go	/^type Dirent C.struct_dirent$/;"	t
Dirent	./syscall/types_linux.go	/^type Dirent C.struct_dirent$/;"	t
Dirent	./syscall/types_netbsd.go	/^type Dirent C.struct_dirent$/;"	t
Dirent	./syscall/types_openbsd.go	/^type Dirent C.struct_dirent$/;"	t
Dirent	./syscall/types_solaris.go	/^type Dirent C.struct_dirent$/;"	t
Dirent	./syscall/ztypes_darwin_386.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_darwin_amd64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_darwin_arm.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_darwin_arm64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_dragonfly_amd64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_freebsd_386.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_freebsd_amd64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_freebsd_arm.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_linux_386.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_linux_amd64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_linux_arm.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_linux_arm64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_linux_ppc64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_linux_ppc64le.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_netbsd_386.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_netbsd_amd64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_netbsd_arm.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_openbsd_386.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_openbsd_amd64.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_openbsd_arm.go	/^type Dirent struct {$/;"	t
Dirent	./syscall/ztypes_solaris_amd64.go	/^type Dirent struct {$/;"	t
Disable_checknil	./cmd/compile/internal/gc/go.go	/^var Disable_checknil int$/;"	v
Disasm	./cmd/internal/objfile/disasm.go	/^func (f *File) Disasm() (*Disasm, error) {$/;"	f
Disasm	./cmd/internal/objfile/disasm.go	/^type Disasm struct {$/;"	t
Disasm	./cmd/pprof/internal/plugin/plugin.go	/^func (noObjTool) Disasm(file string, start, end uint64) ([]Inst, error) {$/;"	f
Disasm	./cmd/pprof/pprof.go	/^func (t *objTool) Disasm(file string, start, end uint64) ([]plugin.Inst, error) {$/;"	f
Disc_s	./regexp/testdata/testregex.c	/^typedef struct Disc_s$/;"	s	file:
Disc_t	./regexp/testdata/testregex.c	/^} Disc_t;$/;"	t	typeref:struct:Disc_s	file:
Discard	./bufio/bufio.go	/^func (b *Reader) Discard(n int) (discarded int, err error) {$/;"	f
Discard	./io/ioutil/ioutil.go	/^var Discard io.Writer = devNull(0)$/;"	v
DiscardCgoDirectives	./cmd/cgo/gcc.go	/^func (f *File) DiscardCgoDirectives() {$/;"	f
Dist	./reflect/all_test.go	/^func (p Point) Dist(scale int) int {$/;"	f
Div	./cmd/compile/internal/big/int.go	/^func (z *Int) Div(x, y *Int) *Int {$/;"	f
Div	./image/geom.go	/^func (p Point) Div(k int) Point {$/;"	f
Div	./math/big/int.go	/^func (z *Int) Div(x, y *Int) *Int {$/;"	f
Div	./net/rpc/jsonrpc/all_test.go	/^func (t *Arith) Div(args *Args, reply *Reply) error {$/;"	f
Div	./net/rpc/server_test.go	/^func (t *Arith) Div(args Args, reply *Reply) error {$/;"	f
DivMod	./cmd/compile/internal/big/int.go	/^func (z *Int) DivMod(x, y, m *Int) (*Int, *Int) {$/;"	f
DivMod	./math/big/int.go	/^func (z *Int) DivMod(x, y, m *Int) (*Int, *Int) {$/;"	f
Divide	./net/rpc/server.go	/^		func (t *Arith) Divide(args *Args, quo *Quotient) error {$/;"	f
Dlist	./cmd/compile/internal/gc/go.go	/^type Dlist struct {$/;"	t
Dll	./cmd/link/internal/ld/pe.go	/^type Dll struct {$/;"	t
DnsNameCompare	./syscall/zsyscall_windows.go	/^func DnsNameCompare(name1 *uint16, name2 *uint16) (same bool) {$/;"	f
DnsQuery	./syscall/zsyscall_windows.go	/^func DnsQuery(name string, qtype uint16, options uint32, extra *byte, qrs **DNSRecord, pr *byte) (status error) {$/;"	f
DnsRecordListFree	./syscall/zsyscall_windows.go	/^func DnsRecordListFree(rl *DNSRecord, freetype uint32) {$/;"	f
Do	./container/ring/ring.go	/^func (r *Ring) Do(f func(interface{})) {$/;"	f
Do	./expvar/expvar.go	/^func (v *Map) Do(f func(KeyValue)) {$/;"	f
Do	./expvar/expvar.go	/^func Do(f func(KeyValue)) {$/;"	f
Do	./internal/singleflight/singleflight.go	/^func (g *Group) Do(key string, fn func() (interface{}, error)) (v interface{}, err error, shared bool) {$/;"	f
Do	./net/http/client.go	/^func (c *Client) Do(req *Request) (resp *Response, err error) {$/;"	f
Do	./net/http/httputil/persist.go	/^func (cc *ClientConn) Do(req *http.Request) (resp *http.Response, err error) {$/;"	f
Do	./sync/once.go	/^func (o *Once) Do(f func()) {$/;"	f
DoChan	./internal/singleflight/singleflight.go	/^func (g *Group) DoChan(key string, fn func() (interface{}, error)) <-chan Result {$/;"	f
DoTest	./net/url/url_test.go	/^func DoTest(t *testing.T, parse func(string) (*URL, error), name string, tests []URLTest) {$/;"	f
DoTestString	./net/url/url_test.go	/^func DoTestString(t *testing.T, parse func(string) (*URL, error), name string, tests []URLTest) {$/;"	f
Domacholink	./cmd/link/internal/ld/macho.go	/^func Domacholink() int64 {$/;"	f
Domain	./encoding/xml/marshal_test.go	/^type Domain struct {$/;"	t
Done	./sync/waitgroup.go	/^func (wg *WaitGroup) Done() {$/;"	f
DotDotDotType	./debug/dwarf/type.go	/^type DotDotDotType struct {$/;"	t
DotNode	./text/template/parse/node.go	/^type DotNode struct {$/;"	t
DotReader	./net/textproto/reader.go	/^func (r *Reader) DotReader() io.Reader {$/;"	f
DotWriter	./net/textproto/writer.go	/^func (w *Writer) DotWriter() io.WriteCloser {$/;"	f
Dotoffset	./cmd/compile/internal/gc/gen.go	/^func Dotoffset(n *Node, oary []int64, nn **Node) int {$/;"	f
Double	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) Double(x1, y1 *big.Int) (*big.Int, *big.Int) {$/;"	f
Double	./crypto/elliptic/p224.go	/^func (p224Curve) Double(bigX1, bigY1 *big.Int) (x, y *big.Int) {$/;"	f
Draw	./image/draw/draw.go	/^func (floydSteinberg) Draw(dst Image, r image.Rectangle, src image.Image, sp image.Point) {$/;"	f
Draw	./image/draw/draw.go	/^func (op Op) Draw(dst Image, r image.Rectangle, src image.Image, sp image.Point) {$/;"	f
Draw	./image/draw/draw.go	/^func Draw(dst Image, r image.Rectangle, src image.Image, sp image.Point, op Op) {$/;"	f
DrawMask	./image/draw/draw.go	/^func DrawMask(dst Image, r image.Rectangle, src image.Image, sp image.Point, mask image.Image, mp image.Point, op Op) {$/;"	f
DrawYCbCr	./image/internal/imageutil/gen.go	/^func DrawYCbCr(dst *image.RGBA, r image.Rectangle, src *image.YCbCr, sp image.Point) (ok bool) {$/;"	f
DrawYCbCr	./image/internal/imageutil/impl.go	/^func DrawYCbCr(dst *image.RGBA, r image.Rectangle, src *image.YCbCr, sp image.Point) (ok bool) {$/;"	f
Drawer	./image/draw/draw.go	/^type Drawer interface {$/;"	t
DriveType	./encoding/xml/marshal_test.go	/^type DriveType int$/;"	t
Driver	./database/sql/driver/driver.go	/^type Driver interface {$/;"	t
Driver	./database/sql/sql.go	/^func (db *DB) Driver() driver.Driver {$/;"	f
Drivers	./database/sql/sql.go	/^func Drivers() []string {$/;"	f
Drop	./encoding/gob/decode.go	/^func (d *decBuffer) Drop(n int) {$/;"	f
Dummy	./database/sql/fakedb_test.go	/^type Dummy struct {$/;"	t
DummyWriter	./runtime/race/testdata/mop_test.go	/^type DummyWriter struct {$/;"	t
Dump	./cmd/compile/internal/gc/fmt.go	/^func Dump(s string, n *Node) {$/;"	f
Dump	./encoding/hex/hex.go	/^func Dump(data []byte) string {$/;"	f
DumpRequest	./net/http/httputil/dump.go	/^func DumpRequest(req *http.Request, body bool) (dump []byte, err error) {$/;"	f
DumpRequestOut	./net/http/httputil/dump.go	/^func DumpRequestOut(req *http.Request, body bool) ([]byte, error) {$/;"	f
DumpResponse	./net/http/httputil/dump.go	/^func DumpResponse(resp *http.Response, body bool) (dump []byte, err error) {$/;"	f
DumpTables	./strings/export_test.go	/^func DumpTables(pattern string) ([]int, []int) {$/;"	f
Dumper	./encoding/hex/hex.go	/^func Dumper(w io.Writer) io.WriteCloser {$/;"	f
Dumpit	./cmd/compile/internal/gc/reg.go	/^func Dumpit(str string, r0 *Flow, isreg int) {$/;"	f
Dup	./syscall/fd_nacl.go	/^func Dup(fd int) (int, error) {$/;"	f
Dup	./syscall/zsyscall_darwin_386.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_darwin_amd64.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_darwin_arm.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_darwin_arm64.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_dragonfly_amd64.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_freebsd_386.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_freebsd_amd64.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_freebsd_arm.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_linux_386.go	/^func Dup(oldfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_linux_amd64.go	/^func Dup(oldfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_linux_arm.go	/^func Dup(oldfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_linux_arm64.go	/^func Dup(oldfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_linux_ppc64.go	/^func Dup(oldfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_linux_ppc64le.go	/^func Dup(oldfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_netbsd_386.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_netbsd_amd64.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_netbsd_arm.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_openbsd_386.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_openbsd_amd64.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_openbsd_arm.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup	./syscall/zsyscall_plan9_386.go	/^func Dup(oldfd int, newfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_plan9_amd64.go	/^func Dup(oldfd int, newfd int) (fd int, err error) {$/;"	f
Dup	./syscall/zsyscall_solaris_amd64.go	/^func Dup(fd int) (nfd int, err error) {$/;"	f
Dup2	./syscall/fd_nacl.go	/^func Dup2(fd, newfd int) error {$/;"	f
Dup2	./syscall/zsyscall_darwin_386.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_darwin_amd64.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_darwin_arm.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_darwin_arm64.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_dragonfly_amd64.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_freebsd_386.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_freebsd_amd64.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_freebsd_arm.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_linux_386.go	/^func Dup2(oldfd int, newfd int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_linux_amd64.go	/^func Dup2(oldfd int, newfd int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_linux_arm.go	/^func Dup2(oldfd int, newfd int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_linux_ppc64.go	/^func Dup2(oldfd int, newfd int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_linux_ppc64le.go	/^func Dup2(oldfd int, newfd int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_netbsd_386.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_netbsd_amd64.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_netbsd_arm.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_openbsd_386.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_openbsd_amd64.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup2	./syscall/zsyscall_openbsd_arm.go	/^func Dup2(from int, to int) (err error) {$/;"	f
Dup3	./syscall/zsyscall_linux_386.go	/^func Dup3(oldfd int, newfd int, flags int) (err error) {$/;"	f
Dup3	./syscall/zsyscall_linux_amd64.go	/^func Dup3(oldfd int, newfd int, flags int) (err error) {$/;"	f
Dup3	./syscall/zsyscall_linux_arm.go	/^func Dup3(oldfd int, newfd int, flags int) (err error) {$/;"	f
Dup3	./syscall/zsyscall_linux_arm64.go	/^func Dup3(oldfd int, newfd int, flags int) (err error) {$/;"	f
Dup3	./syscall/zsyscall_linux_ppc64.go	/^func Dup3(oldfd int, newfd int, flags int) (err error) {$/;"	f
Dup3	./syscall/zsyscall_linux_ppc64le.go	/^func Dup3(oldfd int, newfd int, flags int) (err error) {$/;"	f
DuplicateHandle	./syscall/zsyscall_windows.go	/^func DuplicateHandle(hSourceProcessHandle Handle, hSourceHandle Handle, hTargetProcessHandle Handle, lpTargetHandle *Handle, dwDesiredAccess uint32, bInheritHandle bool, dwOptions uint32) (err error) {$/;"	f
Duration	./flag/flag.go	/^func (f *FlagSet) Duration(name string, value time.Duration, usage string) *time.Duration {$/;"	f
Duration	./flag/flag.go	/^func Duration(name string, value time.Duration, usage string) *time.Duration {$/;"	f
Duration	./time/time.go	/^type Duration int64$/;"	t
DurationVar	./flag/flag.go	/^func (f *FlagSet) DurationVar(p *time.Duration, name string, value time.Duration, usage string) {$/;"	f
DurationVar	./flag/flag.go	/^func DurationVar(p *time.Duration, name string, value time.Duration, usage string) {$/;"	f
Dwarfemitdebugsections	./cmd/link/internal/ld/dwarf.go	/^func Dwarfemitdebugsections() {$/;"	f
Dx	./image/geom.go	/^func (r Rectangle) Dx() int {$/;"	f
Dy	./image/geom.go	/^func (r Rectangle) Dy() int {$/;"	f
Dylib	./debug/macho/file.go	/^type Dylib struct {$/;"	t
DylibCmd	./debug/macho/macho.go	/^type DylibCmd struct {$/;"	t
Dyn32	./debug/elf/elf.go	/^type Dyn32 struct {$/;"	t
Dyn64	./debug/elf/elf.go	/^type Dyn64 struct {$/;"	t
DynFlag	./debug/elf/elf.go	/^type DynFlag int$/;"	t
DynString	./debug/elf/file.go	/^func (f *File) DynString(tag DynTag) ([]string, error) {$/;"	f
DynTag	./debug/elf/elf.go	/^type DynTag int$/;"	t
DynamicSymbols	./debug/elf/file.go	/^func (f *File) DynamicSymbols() ([]Symbol, error) {$/;"	f
DynlinkingGo	./cmd/link/internal/ld/lib.go	/^func DynlinkingGo() bool {$/;"	f
Dysymtab	./debug/macho/file.go	/^type Dysymtab struct {$/;"	t
DysymtabCmd	./debug/macho/macho.go	/^type DysymtabCmd struct {$/;"	t
E1	./math/big/arith_386.s	/^E1:	CMPL BX, BP		\/\/ i < n$/;"	l
E1	./math/big/arith_amd64.s	/^E1:	NEGQ CX$/;"	l
E1	./math/big/arith_arm.s	/^E1:$/;"	l
E2	./math/big/arith_386.s	/^E2:	CMPL BX, BP		\/\/ i < n$/;"	l
E2	./math/big/arith_amd64.s	/^E2:	NEGQ CX$/;"	l
E2	./math/big/arith_arm.s	/^E2:$/;"	l
E3	./math/big/arith_386.s	/^E3:	CMPL BX, BP		\/\/ i < n$/;"	l
E3	./math/big/arith_amd64.s	/^E3:	MOVQ CX, c+56(FP)	\/\/ return c$/;"	l
E3	./math/big/arith_arm.s	/^E3:$/;"	l
E4	./math/big/arith_386.s	/^E4:	CMPL BX, BP		\/\/ i < n$/;"	l
E4	./math/big/arith_amd64.s	/^E4:	MOVQ CX, c+56(FP)	\/\/ return c$/;"	l
E4	./math/big/arith_arm.s	/^E4:$/;"	l
E5	./math/big/arith_386.s	/^E5:	CMPL BX, $0		\/\/ i < 0$/;"	l
E5	./math/big/arith_amd64.s	/^E5:	CMPQ BX, R11		\/\/ i < n$/;"	l
E6	./math/big/arith_386.s	/^E6:	CMPL BX, $0		\/\/ i < 0$/;"	l
E6	./math/big/arith_amd64.s	/^E6:	CMPQ BX, R11		\/\/ i < n$/;"	l
E6	./math/big/arith_arm.s	/^E6:$/;"	l
E7	./math/big/arith_386.s	/^E7:	SUBL $1, BX		\/\/ i--$/;"	l
E7	./math/big/arith_amd64.s	/^E7:	SUBQ $1, BX		\/\/ i--$/;"	l
E7	./math/big/arith_arm.s	/^E7:$/;"	l
E8	./math/big/arith_arm.s	/^E8:$/;"	l
E9	./math/big/arith_386.s	/^E9:	CMPL BX, BP$/;"	l
E9	./math/big/arith_amd64.s	/^E9:	CMPQ BX, R11$/;"	l
E9	./math/big/arith_arm.s	/^E9:$/;"	l
ELF32_R_INFO	./cmd/link/internal/ld/elf.go	/^func ELF32_R_INFO(sym uint32, type_ uint32) uint32 {$/;"	f
ELF32_R_SYM	./cmd/link/internal/ld/elf.go	/^func ELF32_R_SYM(info uint32) uint32 {$/;"	f
ELF32_R_TYPE	./cmd/link/internal/ld/elf.go	/^func ELF32_R_TYPE(info uint32) uint32 {$/;"	f
ELF32_ST_BIND	./cmd/link/internal/ld/elf.go	/^func ELF32_ST_BIND(info uint8) uint8 {$/;"	f
ELF32_ST_INFO	./cmd/link/internal/ld/elf.go	/^func ELF32_ST_INFO(bind uint8, type_ uint8) uint8 {$/;"	f
ELF32_ST_TYPE	./cmd/link/internal/ld/elf.go	/^func ELF32_ST_TYPE(info uint8) uint8 {$/;"	f
ELF32_ST_VISIBILITY	./cmd/link/internal/ld/elf.go	/^func ELF32_ST_VISIBILITY(oth uint8) uint8 {$/;"	f
ELF64_R_INFO	./cmd/link/internal/ld/elf.go	/^func ELF64_R_INFO(sym uint32, type_ uint32) uint64 {$/;"	f
ELF64_R_SYM	./cmd/link/internal/ld/elf.go	/^func ELF64_R_SYM(info uint64) uint32 {$/;"	f
ELF64_R_TYPE	./cmd/link/internal/ld/elf.go	/^func ELF64_R_TYPE(info uint64) uint32 {$/;"	f
ELF64_ST_BIND	./cmd/link/internal/ld/elf.go	/^func ELF64_ST_BIND(info uint8) uint8 {$/;"	f
ELF64_ST_INFO	./cmd/link/internal/ld/elf.go	/^func ELF64_ST_INFO(bind uint8, type_ uint8) uint8 {$/;"	f
ELF64_ST_TYPE	./cmd/link/internal/ld/elf.go	/^func ELF64_ST_TYPE(info uint8) uint8 {$/;"	f
ELF64_ST_VISIBILITY	./cmd/link/internal/ld/elf.go	/^func ELF64_ST_VISIBILITY(oth uint8) uint8 {$/;"	f
ELF_NOTE_BUILDINFO_NAME	./cmd/link/internal/ld/elf.go	/^var ELF_NOTE_BUILDINFO_NAME = []byte("GNU\\x00")$/;"	v
ELF_NOTE_GO_NAME	./cmd/link/internal/ld/elf.go	/^var ELF_NOTE_GO_NAME = []byte("Go\\x00\\x00")$/;"	v
ELF_NOTE_NETBSD_NAME	./cmd/link/internal/ld/elf.go	/^var ELF_NOTE_NETBSD_NAME = []byte("NetBSD\\x00")$/;"	v
ELF_NOTE_OPENBSD_NAME	./cmd/link/internal/ld/elf.go	/^var ELF_NOTE_OPENBSD_NAME = []byte("OpenBSD\\x00")$/;"	v
EOF	./cmd/asm/internal/asm/parse.go	/^var EOF = lex.Make(scanner.EOF, "EOF")$/;"	v
EOF	./io/io.go	/^var EOF = errors.New("EOF")$/;"	v
ERRMAX	./runtime/sys_plan9_386.s	/^#define ERRMAX 128	\/* from os_plan9.h *\/$/;"	d
ERRMAX	./runtime/sys_plan9_amd64.s	/^#define ERRMAX 128	\/* from os_plan9.h *\/$/;"	d
ET0	./encoding/gob/encoder_test.go	/^type ET0 struct {$/;"	t
ET1	./encoding/gob/encoder_test.go	/^type ET1 struct {$/;"	t
ET2	./encoding/gob/encoder_test.go	/^type ET2 struct {$/;"	t
ET3	./encoding/gob/encoder_test.go	/^type ET3 struct {$/;"	t
ET4	./encoding/gob/encoder_test.go	/^type ET4 struct {$/;"	t
EXT	./runtime/cgo/gcc_386.S	/^#define EXT(s) _##s$/;"	d
EXT	./runtime/cgo/gcc_386.S	/^#define EXT(s) s$/;"	d
EXT	./runtime/cgo/gcc_amd64.S	/^#define EXT(s) _##s$/;"	d
EXT	./runtime/cgo/gcc_amd64.S	/^#define EXT(s) s$/;"	d
EXT	./runtime/cgo/gcc_arm.S	/^#define EXT(s) _##s$/;"	d
EXT	./runtime/cgo/gcc_arm.S	/^#define EXT(s) s$/;"	d
EXT	./runtime/cgo/gcc_arm64.S	/^#define EXT(s) _##s$/;"	d
EXT	./runtime/cgo/gcc_arm64.S	/^#define EXT(s) s$/;"	d
EXT	./runtime/cgo/gcc_ppc64x.S	/^#define EXT(s) _##s$/;"	d
EXT	./runtime/cgo/gcc_ppc64x.S	/^#define EXT(s) s$/;"	d
EXTEND	./crypto/rc4/rc4_amd64.s	/^#define EXTEND(r) MOVBLZX r, r$/;"	d
EXTEND	./crypto/rc4/rc4_amd64p32.s	/^#define EXTEND(r) MOVBLZX r, r$/;"	d
Econv	./cmd/compile/internal/gc/fmt.go	/^func Econv(et int, flag int) string {$/;"	f
EfaceHash	./runtime/export_test.go	/^var EfaceHash = efaceHash$/;"	v
EfaceKey	./runtime/hash_test.go	/^type EfaceKey struct {$/;"	t
Elem	./go/types/type.go	/^func (a *Array) Elem() Type { return a.elem }$/;"	f
Elem	./go/types/type.go	/^func (c *Chan) Elem() Type { return c.elem }$/;"	f
Elem	./go/types/type.go	/^func (m *Map) Elem() Type { return m.elem }$/;"	f
Elem	./go/types/type.go	/^func (p *Pointer) Elem() Type { return p.base }$/;"	f
Elem	./go/types/type.go	/^func (s *Slice) Elem() Type { return s.elem }$/;"	f
Elem	./reflect/type.go	/^func (t *rtype) Elem() Type {$/;"	f
Elem	./reflect/value.go	/^func (v Value) Elem() Value {$/;"	f
Element	./container/list/list.go	/^type Element struct {$/;"	t
ElfEhdr	./cmd/link/internal/ld/elf.go	/^type ElfEhdr struct {$/;"	t
ElfHdrBytes	./cmd/link/internal/ld/ldelf.go	/^type ElfHdrBytes struct {$/;"	t
ElfHdrBytes64	./cmd/link/internal/ld/ldelf.go	/^type ElfHdrBytes64 struct {$/;"	t
ElfMagic	./cmd/link/internal/ld/ldelf.go	/^var ElfMagic = [4]uint8{0x7F, 'E', 'L', 'F'}$/;"	v
ElfObj	./cmd/link/internal/ld/ldelf.go	/^type ElfObj struct {$/;"	t
ElfPhdr	./cmd/link/internal/ld/elf.go	/^type ElfPhdr struct {$/;"	t
ElfProgBytes	./cmd/link/internal/ld/ldelf.go	/^type ElfProgBytes struct {$/;"	t
ElfProgBytes64	./cmd/link/internal/ld/ldelf.go	/^type ElfProgBytes64 struct {$/;"	t
ElfSect	./cmd/link/internal/ld/ldelf.go	/^type ElfSect struct {$/;"	t
ElfSectBytes	./cmd/link/internal/ld/ldelf.go	/^type ElfSectBytes struct {$/;"	t
ElfSectBytes64	./cmd/link/internal/ld/ldelf.go	/^type ElfSectBytes64 struct {$/;"	t
ElfShdr	./cmd/link/internal/ld/elf.go	/^type ElfShdr struct {$/;"	t
ElfSym	./cmd/link/internal/ld/ldelf.go	/^type ElfSym struct {$/;"	t
ElfSymBytes	./cmd/link/internal/ld/ldelf.go	/^type ElfSymBytes struct {$/;"	t
ElfSymBytes64	./cmd/link/internal/ld/ldelf.go	/^type ElfSymBytes64 struct {$/;"	t
Elf_Note	./cmd/link/internal/ld/elf.go	/^type Elf_Note struct {$/;"	t
Elfadddynsym	./cmd/link/internal/ld/elf.go	/^func Elfadddynsym(ctxt *Link, s *LSym) {$/;"	f
Elfaux	./cmd/link/internal/ld/elf.go	/^type Elfaux struct {$/;"	t
Elfemitreloc	./cmd/link/internal/ld/elf.go	/^func Elfemitreloc() {$/;"	f
Elfinit	./cmd/link/internal/ld/elf.go	/^func Elfinit() {$/;"	f
Elflib	./cmd/link/internal/ld/elf.go	/^type Elflib struct {$/;"	t
Elfstrdat	./cmd/link/internal/ld/elf.go	/^var Elfstrdat []byte$/;"	v
Elfstring	./cmd/link/internal/ld/elf.go	/^type Elfstring struct {$/;"	t
Elfwritedynent	./cmd/link/internal/ld/elf.go	/^func Elfwritedynent(s *LSym, tag int, val uint64) {$/;"	f
Elfwritedynentsymplus	./cmd/link/internal/ld/elf.go	/^func Elfwritedynentsymplus(s *LSym, tag int, t *LSym, add int64) {$/;"	f
Email	./encoding/xml/example_test.go	/^	type Email struct {$/;"	t
Embed0	./encoding/json/decode_test.go	/^type Embed0 struct {$/;"	t
Embed0a	./encoding/json/decode_test.go	/^type Embed0a struct {$/;"	t
Embed0b	./encoding/json/decode_test.go	/^type Embed0b Embed0$/;"	t
Embed0c	./encoding/json/decode_test.go	/^type Embed0c Embed0$/;"	t
Embed0p	./encoding/json/decode_test.go	/^type Embed0p struct {$/;"	t
Embed0q	./encoding/json/decode_test.go	/^type Embed0q struct {$/;"	t
EmbedA	./encoding/xml/marshal_test.go	/^type EmbedA struct {$/;"	t
EmbedB	./encoding/xml/marshal_test.go	/^type EmbedB struct {$/;"	t
EmbedC	./encoding/xml/marshal_test.go	/^type EmbedC struct {$/;"	t
EmbedInt	./encoding/xml/marshal_test.go	/^type EmbedInt struct {$/;"	t
EmbedSelector	./cmd/api/testdata/src/pkg/p1/p1.go	/^type EmbedSelector struct {$/;"	t
EmbedURLPtr	./cmd/api/testdata/src/pkg/p1/p1.go	/^type EmbedURLPtr struct {$/;"	t
Embedded	./cmd/api/testdata/src/pkg/p1/p1.go	/^type Embedded struct{}$/;"	t
Embedded	./go/types/type.go	/^func (t *Interface) Embedded(i int) *Named { return t.embeddeds[i] }$/;"	f
EmbeddedLocker	./cmd/vet/testdata/copylock_func.go	/^type EmbeddedLocker struct {$/;"	t
EmbeddedMutexPointer	./cmd/vet/testdata/copylock_func.go	/^type EmbeddedMutexPointer struct {$/;"	t
EmbeddedRWMutex	./cmd/vet/testdata/copylock_func.go	/^type EmbeddedRWMutex struct {$/;"	t
Emerg	./log/syslog/syslog.go	/^func (w *Writer) Emerg(m string) (err error) {$/;"	f
Empty	./cmd/cgo/gcc.go	/^func (tr *TypeRepr) Empty() bool {$/;"	f
Empty	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) Empty() bool {$/;"	f
Empty	./go/types/type.go	/^func (t *Interface) Empty() bool { return len(t.allMethods) == 0 }$/;"	f
Empty	./image/geom.go	/^func (r Rectangle) Empty() bool {$/;"	f
Empty	./reflect/all_test.go	/^type Empty struct{}$/;"	t
Empty	./runtime/chan_test.go	/^	type Empty struct{}$/;"	t
Empty	./runtime/race/testdata/mop_test.go	/^	type Empty struct{}$/;"	t
EmptyInterfaceV	./reflect/all_test.go	/^func EmptyInterfaceV(x interface{}) Value {$/;"	f
EmptyOp	./regexp/syntax/prog.go	/^type EmptyOp uint8$/;"	t
EmptyOpContext	./regexp/syntax/prog.go	/^func EmptyOpContext(r1, r2 rune) EmptyOp {$/;"	f
Encode	./encoding/ascii85/ascii85.go	/^func Encode(dst, src []byte) int {$/;"	f
Encode	./encoding/base32/base32.go	/^func (enc *Encoding) Encode(dst, src []byte) {$/;"	f
Encode	./encoding/base64/base64.go	/^func (enc *Encoding) Encode(dst, src []byte) {$/;"	f
Encode	./encoding/gob/encoder.go	/^func (enc *Encoder) Encode(e interface{}) error {$/;"	f
Encode	./encoding/hex/hex.go	/^func Encode(dst, src []byte) int {$/;"	f
Encode	./encoding/json/stream.go	/^func (enc *Encoder) Encode(v interface{}) error {$/;"	f
Encode	./encoding/pem/pem.go	/^func Encode(out io.Writer, b *Block) error {$/;"	f
Encode	./encoding/xml/marshal.go	/^func (enc *Encoder) Encode(v interface{}) error {$/;"	f
Encode	./image/gif/writer.go	/^func Encode(w io.Writer, m image.Image, o *Options) error {$/;"	f
Encode	./image/jpeg/writer.go	/^func Encode(w io.Writer, m image.Image, o *Options) error {$/;"	f
Encode	./image/png/writer.go	/^func (enc *Encoder) Encode(w io.Writer, m image.Image) error {$/;"	f
Encode	./image/png/writer.go	/^func Encode(w io.Writer, m image.Image) error {$/;"	f
Encode	./mime/encodedword.go	/^func (e WordEncoder) Encode(charset, s string) string {$/;"	f
Encode	./net/url/url.go	/^func (v Values) Encode() string {$/;"	f
Encode	./unicode/utf16/utf16.go	/^func Encode(s []rune) []uint16 {$/;"	f
EncodeAll	./image/gif/writer.go	/^func EncodeAll(w io.Writer, g *GIF) error {$/;"	f
EncodeElement	./encoding/xml/marshal.go	/^func (enc *Encoder) EncodeElement(v interface{}, start StartElement) error {$/;"	f
EncodeQueryTest	./net/url/url_test.go	/^type EncodeQueryTest struct {$/;"	t
EncodeRune	./unicode/utf16/utf16.go	/^func EncodeRune(r rune) (r1, r2 rune) {$/;"	f
EncodeRune	./unicode/utf8/utf8.go	/^func EncodeRune(p []byte, r rune) int {$/;"	f
EncodeT	./encoding/gob/codec_test.go	/^type EncodeT struct {$/;"	t
EncodeToMemory	./encoding/pem/pem.go	/^func EncodeToMemory(b *Block) []byte {$/;"	f
EncodeToString	./encoding/base32/base32.go	/^func (enc *Encoding) EncodeToString(src []byte) string {$/;"	f
EncodeToString	./encoding/base64/base64.go	/^func (enc *Encoding) EncodeToString(src []byte) string {$/;"	f
EncodeToString	./encoding/hex/hex.go	/^func EncodeToString(src []byte) string {$/;"	f
EncodeToken	./encoding/json/stream.go	/^func (e *Encoder) EncodeToken(t Token) error  {$/;"	f
EncodeToken	./encoding/xml/marshal.go	/^func (enc *Encoder) EncodeToken(t Token) error {$/;"	f
EncodeValue	./encoding/gob/encoder.go	/^func (enc *Encoder) EncodeValue(value reflect.Value) error {$/;"	f
EncodedLen	./encoding/base32/base32.go	/^func (enc *Encoding) EncodedLen(n int) int { return (n + 4) \/ 5 * 8 }$/;"	f
EncodedLen	./encoding/base64/base64.go	/^func (enc *Encoding) EncodedLen(n int) int {$/;"	f
EncodedLen	./encoding/hex/hex.go	/^func EncodedLen(n int) int { return n * 2 }$/;"	f
Encoder	./encoding/gob/encoder.go	/^type Encoder struct {$/;"	t
Encoder	./encoding/json/stream.go	/^type Encoder struct {$/;"	t
Encoder	./encoding/xml/marshal.go	/^type Encoder struct {$/;"	t
Encoder	./image/png/writer.go	/^type Encoder struct {$/;"	t
Encoding	./encoding/base32/base32.go	/^type Encoding struct {$/;"	t
Encoding	./encoding/base64/base64.go	/^type Encoding struct {$/;"	t
Encrypt	./crypto/aes/cipher.go	/^func (c *aesCipher) Encrypt(dst, src []byte) {$/;"	f
Encrypt	./crypto/des/cipher.go	/^func (c *desCipher) Encrypt(dst, src []byte) { encryptBlock(c.subkeys[:], dst, src) }$/;"	f
Encrypt	./crypto/des/cipher.go	/^func (c *tripleDESCipher) Encrypt(dst, src []byte) {$/;"	f
EncryptOAEP	./crypto/rsa/rsa.go	/^func EncryptOAEP(hash hash.Hash, random io.Reader, pub *PublicKey, msg []byte, label []byte) (out []byte, err error) {$/;"	f
EncryptPEMBlock	./crypto/x509/pem_decrypt.go	/^func EncryptPEMBlock(rand io.Reader, blockType string, data, password []byte, alg PEMCipher) (*pem.Block, error) {$/;"	f
EncryptPKCS1v15	./crypto/rsa/pkcs1v15.go	/^func EncryptPKCS1v15(rand io.Reader, pub *PublicKey, msg []byte) (out []byte, err error) {$/;"	f
End	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) End() {$/;"	f
End	./cmd/link/internal/ld/data.go	/^func (p *GCProg) End(size int64) {$/;"	f
End	./encoding/xml/xml.go	/^func (e StartElement) End() EndElement {$/;"	f
End	./go/ast/ast.go	/^func (c *Comment) End() token.Pos { return token.Pos(int(c.Slash) + len(c.Text)) }$/;"	f
End	./go/ast/ast.go	/^func (d *BadDecl) End() token.Pos { return d.To }$/;"	f
End	./go/ast/ast.go	/^func (d *FuncDecl) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (d *GenDecl) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (f *Field) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (f *FieldList) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (f *File) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (g *CommentGroup) End() token.Pos { return g.List[len(g.List)-1].End() }$/;"	f
End	./go/ast/ast.go	/^func (p *Package) End() token.Pos { return token.NoPos }$/;"	f
End	./go/ast/ast.go	/^func (s *AssignStmt) End() token.Pos { return s.Rhs[len(s.Rhs)-1].End() }$/;"	f
End	./go/ast/ast.go	/^func (s *BadStmt) End() token.Pos  { return s.To }$/;"	f
End	./go/ast/ast.go	/^func (s *BlockStmt) End() token.Pos { return s.Rbrace + 1 }$/;"	f
End	./go/ast/ast.go	/^func (s *BranchStmt) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *CaseClause) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *CommClause) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *DeclStmt) End() token.Pos { return s.Decl.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *DeferStmt) End() token.Pos  { return s.Call.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *EmptyStmt) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *ExprStmt) End() token.Pos    { return s.X.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *ForStmt) End() token.Pos    { return s.Body.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *GoStmt) End() token.Pos     { return s.Call.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *IfStmt) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *ImportSpec) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *IncDecStmt) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *LabeledStmt) End() token.Pos { return s.Stmt.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *RangeStmt) End() token.Pos  { return s.Body.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *ReturnStmt) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (s *SelectStmt) End() token.Pos { return s.Body.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *SendStmt) End() token.Pos    { return s.Value.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *SwitchStmt) End() token.Pos     { return s.Body.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *TypeSpec) End() token.Pos { return s.Type.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *TypeSwitchStmt) End() token.Pos { return s.Body.End() }$/;"	f
End	./go/ast/ast.go	/^func (s *ValueSpec) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (x *ArrayType) End() token.Pos      { return x.Elt.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *BadExpr) End() token.Pos { return x.To }$/;"	f
End	./go/ast/ast.go	/^func (x *BasicLit) End() token.Pos       { return token.Pos(int(x.ValuePos) + len(x.Value)) }$/;"	f
End	./go/ast/ast.go	/^func (x *BinaryExpr) End() token.Pos     { return x.Y.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *CallExpr) End() token.Pos       { return x.Rparen + 1 }$/;"	f
End	./go/ast/ast.go	/^func (x *ChanType) End() token.Pos      { return x.Value.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *CompositeLit) End() token.Pos   { return x.Rbrace + 1 }$/;"	f
End	./go/ast/ast.go	/^func (x *Ellipsis) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (x *FuncLit) End() token.Pos        { return x.Body.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *FuncType) End() token.Pos {$/;"	f
End	./go/ast/ast.go	/^func (x *Ident) End() token.Pos   { return token.Pos(int(x.NamePos) + len(x.Name)) }$/;"	f
End	./go/ast/ast.go	/^func (x *IndexExpr) End() token.Pos      { return x.Rbrack + 1 }$/;"	f
End	./go/ast/ast.go	/^func (x *InterfaceType) End() token.Pos { return x.Methods.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *KeyValueExpr) End() token.Pos   { return x.Value.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *MapType) End() token.Pos       { return x.Value.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *ParenExpr) End() token.Pos      { return x.Rparen + 1 }$/;"	f
End	./go/ast/ast.go	/^func (x *SelectorExpr) End() token.Pos   { return x.Sel.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *SliceExpr) End() token.Pos      { return x.Rbrack + 1 }$/;"	f
End	./go/ast/ast.go	/^func (x *StarExpr) End() token.Pos       { return x.X.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *StructType) End() token.Pos     { return x.Fields.End() }$/;"	f
End	./go/ast/ast.go	/^func (x *TypeAssertExpr) End() token.Pos { return x.Rparen + 1 }$/;"	f
End	./go/ast/ast.go	/^func (x *UnaryExpr) End() token.Pos      { return x.X.End() }$/;"	f
End	./go/types/scope.go	/^func (s *Scope) End() token.Pos { return s.end }$/;"	f
End	./net/textproto/pipeline.go	/^func (s *sequencer) End(id uint) {$/;"	f
EndElement	./encoding/xml/xml.go	/^type EndElement struct {$/;"	t
EndRequest	./net/textproto/pipeline.go	/^func (p *Pipeline) EndRequest(id uint) {$/;"	f
EndResponse	./net/textproto/pipeline.go	/^func (p *Pipeline) EndResponse(id uint) {$/;"	f
Endian	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Endian uint8$/;"	t
Entersyscall	./runtime/export_test.go	/^var Entersyscall = entersyscall$/;"	v
Entry	./cmd/pack/pack.go	/^type Entry struct {$/;"	t
Entry	./cmd/pack/pack_test.go	/^func (f *FakeFile) Entry() *Entry {$/;"	f
Entry	./debug/dwarf/entry.go	/^	\/\/ signature referencing a type Entry.$/;"	t
Entry	./debug/dwarf/entry.go	/^type Entry struct {$/;"	t
Entry	./encoding/xml/read_test.go	/^type Entry struct {$/;"	t
Entry	./runtime/symtab.go	/^func (f *Func) Entry() uintptr {$/;"	f
Entryvalue	./cmd/link/internal/ld/lib.go	/^func Entryvalue() int64 {$/;"	f
EnumType	./debug/dwarf/type.go	/^type EnumType struct {$/;"	t
EnumValue	./debug/dwarf/type.go	/^type EnumValue struct {$/;"	t
Enumerated	./encoding/asn1/asn1.go	/^type Enumerated int$/;"	t
Environ	./os/env.go	/^func Environ() []string {$/;"	f
Environ	./syscall/env_plan9.go	/^func Environ() []string {$/;"	f
Environ	./syscall/env_unix.go	/^func Environ() []string {$/;"	f
Environ	./syscall/env_windows.go	/^func Environ() []string {$/;"	f
Envs	./runtime/export_test.go	/^func Envs() []string     { return envs }$/;"	f
EpollCreate	./syscall/zsyscall_linux_386.go	/^func EpollCreate(size int) (fd int, err error) {$/;"	f
EpollCreate	./syscall/zsyscall_linux_amd64.go	/^func EpollCreate(size int) (fd int, err error) {$/;"	f
EpollCreate	./syscall/zsyscall_linux_arm.go	/^func EpollCreate(size int) (fd int, err error) {$/;"	f
EpollCreate	./syscall/zsyscall_linux_arm64.go	/^func EpollCreate(size int) (fd int, err error) {$/;"	f
EpollCreate	./syscall/zsyscall_linux_ppc64.go	/^func EpollCreate(size int) (fd int, err error) {$/;"	f
EpollCreate	./syscall/zsyscall_linux_ppc64le.go	/^func EpollCreate(size int) (fd int, err error) {$/;"	f
EpollCreate1	./syscall/zsyscall_linux_386.go	/^func EpollCreate1(flag int) (fd int, err error) {$/;"	f
EpollCreate1	./syscall/zsyscall_linux_amd64.go	/^func EpollCreate1(flag int) (fd int, err error) {$/;"	f
EpollCreate1	./syscall/zsyscall_linux_arm.go	/^func EpollCreate1(flag int) (fd int, err error) {$/;"	f
EpollCreate1	./syscall/zsyscall_linux_arm64.go	/^func EpollCreate1(flag int) (fd int, err error) {$/;"	f
EpollCreate1	./syscall/zsyscall_linux_ppc64.go	/^func EpollCreate1(flag int) (fd int, err error) {$/;"	f
EpollCreate1	./syscall/zsyscall_linux_ppc64le.go	/^func EpollCreate1(flag int) (fd int, err error) {$/;"	f
EpollCtl	./syscall/zsyscall_linux_386.go	/^func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) {$/;"	f
EpollCtl	./syscall/zsyscall_linux_amd64.go	/^func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) {$/;"	f
EpollCtl	./syscall/zsyscall_linux_arm.go	/^func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) {$/;"	f
EpollCtl	./syscall/zsyscall_linux_arm64.go	/^func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) {$/;"	f
EpollCtl	./syscall/zsyscall_linux_ppc64.go	/^func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) {$/;"	f
EpollCtl	./syscall/zsyscall_linux_ppc64le.go	/^func EpollCtl(epfd int, op int, fd int, event *EpollEvent) (err error) {$/;"	f
EpollEvent	./runtime/defs2_linux.go	/^type EpollEvent C.struct_epoll_event$/;"	t
EpollEvent	./runtime/defs_linux.go	/^type EpollEvent C.struct_epoll_event$/;"	t
EpollEvent	./syscall/types_linux.go	/^type EpollEvent C.struct_my_epoll_event$/;"	t
EpollEvent	./syscall/ztypes_linux_386.go	/^type EpollEvent struct {$/;"	t
EpollEvent	./syscall/ztypes_linux_amd64.go	/^type EpollEvent struct {$/;"	t
EpollEvent	./syscall/ztypes_linux_arm.go	/^type EpollEvent struct {$/;"	t
EpollEvent	./syscall/ztypes_linux_arm64.go	/^type EpollEvent struct {$/;"	t
EpollEvent	./syscall/ztypes_linux_ppc64.go	/^type EpollEvent struct {$/;"	t
EpollEvent	./syscall/ztypes_linux_ppc64le.go	/^type EpollEvent struct {$/;"	t
EpollWait	./syscall/zsyscall_linux_386.go	/^func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {$/;"	f
EpollWait	./syscall/zsyscall_linux_amd64.go	/^func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {$/;"	f
EpollWait	./syscall/zsyscall_linux_arm.go	/^func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {$/;"	f
EpollWait	./syscall/zsyscall_linux_arm64.go	/^func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {$/;"	f
EpollWait	./syscall/zsyscall_linux_ppc64.go	/^func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {$/;"	f
EpollWait	./syscall/zsyscall_linux_ppc64le.go	/^func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {$/;"	f
Eq	./image/geom.go	/^func (p Point) Eq(q Point) bool {$/;"	f
Eq	./image/geom.go	/^func (r Rectangle) Eq(s Rectangle) bool {$/;"	f
Eqtype	./cmd/compile/internal/gc/subr.go	/^func Eqtype(t1 *Type, t2 *Type) bool {$/;"	f
Equal	./bytes/bytes_decl.go	/^func Equal(a, b []byte) bool \/\/ ..\/runtime\/asm_$GOARCH.s$/;"	f
Equal	./crypto/hmac/hmac.go	/^func Equal(mac1, mac2 []byte) bool {$/;"	f
Equal	./crypto/x509/x509.go	/^func (c *Certificate) Equal(other *Certificate) bool {$/;"	f
Equal	./encoding/asn1/asn1.go	/^func (oi ObjectIdentifier) Equal(other ObjectIdentifier) bool {$/;"	f
Equal	./net/ip.go	/^func (ip IP) Equal(x IP) bool {$/;"	f
Equal	./regexp/syntax/regexp.go	/^func (x *Regexp) Equal(y *Regexp) bool {$/;"	f
Equal	./time/time.go	/^func (t Time) Equal(u Time) bool {$/;"	f
EqualFold	./bytes/bytes.go	/^func EqualFold(s, t []byte) bool {$/;"	f
EqualFold	./strings/strings.go	/^func EqualFold(s, t string) bool {$/;"	f
EqualFoldTests	./bytes/bytes_test.go	/^var EqualFoldTests = []struct {$/;"	v
EqualFoldTests	./strings/strings_test.go	/^var EqualFoldTests = []struct {$/;"	v
EqualPortable	./bytes/export_test.go	/^var EqualPortable = equalPortable$/;"	v
Erf	./math/erf.go	/^func Erf(x float64) float64 {$/;"	f
Erfc	./math/erf.go	/^func Erfc(x float64) float64 {$/;"	f
Err	./bufio/scan.go	/^func (s *Scanner) Err() error {$/;"	f
Err	./compress/bzip2/bit_reader.go	/^func (br *bitReader) Err() error {$/;"	f
Err	./database/sql/sql.go	/^func (rs *Rows) Err() error {$/;"	f
Err	./go/scanner/errors.go	/^func (p ErrorList) Err() error {$/;"	f
Err	./log/syslog/syslog.go	/^func (w *Writer) Err(m string) (err error) {$/;"	f
ErrBadConn	./database/sql/driver/driver.go	/^var ErrBadConn = errors.New("driver: bad connection")$/;"	v
ErrBadPattern	./path/filepath/match.go	/^var ErrBadPattern = errors.New("syntax error in pattern")$/;"	v
ErrBadPattern	./path/match.go	/^var ErrBadPattern = errors.New("syntax error in pattern")$/;"	v
ErrBodyReadAfterClose	./net/http/transfer.go	/^var ErrBodyReadAfterClose = errors.New("http: invalid Read on closed Body")$/;"	v
ErrClosedPipe	./io/pipe.go	/^var ErrClosedPipe = errors.New("io: read\/write on closed pipe")$/;"	v
ErrConnClosed	./net/http/fcgi/child.go	/^var ErrConnClosed = errors.New("fcgi: connection to web server closed")$/;"	v
ErrDecryption	./crypto/rsa/rsa.go	/^var ErrDecryption = errors.New("crypto\/rsa: decryption error")$/;"	v
ErrFormat	./image/format.go	/^var ErrFormat = errors.New("image: unknown format")$/;"	v
ErrHandlerTimeout	./net/http/server.go	/^var ErrHandlerTimeout = errors.New("http: Handler timeout")$/;"	v
ErrHeaderNotPresent	./net/mail/message.go	/^var ErrHeaderNotPresent = errors.New("mail: header not in message")$/;"	v
ErrHelp	./flag/flag.go	/^var ErrHelp = errors.New("flag: help requested")$/;"	v
ErrInvalidPublicKey	./crypto/dsa/dsa.go	/^var ErrInvalidPublicKey = errors.New("crypto\/dsa: invalid public key")$/;"	v
ErrLength	./encoding/hex/hex.go	/^var ErrLength = errors.New("encoding\/hex: odd length hex string")$/;"	v
ErrLineTooLong	./net/http/httputil/httputil.go	/^var ErrLineTooLong = internal.ErrLineTooLong$/;"	v
ErrLineTooLong	./net/http/internal/chunked.go	/^var ErrLineTooLong = errors.New("header line too long")$/;"	v
ErrLineTooLong	./net/http/transfer.go	/^var ErrLineTooLong = internal.ErrLineTooLong$/;"	v
ErrMessageTooLong	./crypto/rsa/rsa.go	/^var ErrMessageTooLong = errors.New("crypto\/rsa: message too long for RSA public key size")$/;"	v
ErrMissingFile	./net/http/request.go	/^var ErrMissingFile = errors.New("http: no such file")$/;"	v
ErrNaN	./cmd/compile/internal/big/float.go	/^type ErrNaN struct {$/;"	t
ErrNaN	./math/big/float.go	/^type ErrNaN struct {$/;"	t
ErrNoCookie	./net/http/request.go	/^var ErrNoCookie = errors.New("http: named cookie not present")$/;"	v
ErrNoLocation	./net/http/response.go	/^var ErrNoLocation = errors.New("http: no Location header in response")$/;"	v
ErrNoProgress	./io/io.go	/^var ErrNoProgress = errors.New("multiple Read calls return no data or error")$/;"	v
ErrNoRows	./database/sql/sql.go	/^var ErrNoRows = errors.New("sql: no rows in result set")$/;"	v
ErrNoSymbols	./debug/elf/file.go	/^var ErrNoSymbols = errors.New("no symbol section")$/;"	v
ErrNotFat	./debug/macho/fat.go	/^var ErrNotFat = &FormatError{0, "not a fat Mach-O file", nil}$/;"	v
ErrNotFound	./os/exec/lp_plan9.go	/^var ErrNotFound = errors.New("executable file not found in $path")$/;"	v
ErrNotFound	./os/exec/lp_unix.go	/^var ErrNotFound = errors.New("executable file not found in $PATH")$/;"	v
ErrNotFound	./os/exec/lp_windows.go	/^var ErrNotFound = errors.New("executable file not found in %PATH%")$/;"	v
ErrOrEOF	./bufio/export_test.go	/^func (s *Scanner) ErrOrEOF() error {$/;"	f
ErrRange	./strconv/atoi.go	/^var ErrRange = errors.New("value out of range")$/;"	v
ErrRequestAborted	./net/http/fcgi/child.go	/^var ErrRequestAborted = errors.New("fcgi: request aborted by web server")$/;"	v
ErrShortBuffer	./io/io.go	/^var ErrShortBuffer = errors.New("short buffer")$/;"	v
ErrShortWrite	./io/io.go	/^var ErrShortWrite = errors.New("short write")$/;"	v
ErrShutdown	./net/rpc/client.go	/^var ErrShutdown = errors.New("connection is shut down")$/;"	v
ErrSkip	./database/sql/driver/driver.go	/^var ErrSkip = errors.New("driver: skip fast-path; continue as if unimplemented")$/;"	v
ErrSyntax	./strconv/atoi.go	/^var ErrSyntax = errors.New("invalid syntax")$/;"	v
ErrTimeOrder	./internal/trace/parser.go	/^var ErrTimeOrder = fmt.Errorf("time stamps out of order")$/;"	v
ErrTimeout	./testing/iotest/reader.go	/^var ErrTimeout = errors.New("timeout")$/;"	v
ErrTooLarge	./bytes/buffer.go	/^var ErrTooLarge = errors.New("bytes.Buffer: too large")$/;"	v
ErrTxDone	./database/sql/sql.go	/^var ErrTxDone = errors.New("sql: Transaction has already been committed or rolled back")$/;"	v
ErrUnexpectedEOF	./io/io.go	/^var ErrUnexpectedEOF = errors.New("unexpected EOF")$/;"	v
ErrUnknownPC	./debug/dwarf/line.go	/^var ErrUnknownPC = errors.New("ErrUnknownPC")$/;"	v
ErrUnsupportedAlgorithm	./crypto/x509/x509.go	/^var ErrUnsupportedAlgorithm = errors.New("x509: cannot verify signature: algorithm unimplemented")$/;"	v
ErrVerification	./crypto/rsa/rsa.go	/^var ErrVerification = errors.New("crypto\/rsa: verification error")$/;"	v
Errno	./syscall/syscall_nacl.go	/^type Errno uintptr$/;"	t
Errno	./syscall/syscall_unix.go	/^type Errno uintptr$/;"	t
Errno	./syscall/syscall_windows.go	/^type Errno uintptr$/;"	t
Error	./cmd/api/testdata/src/pkg/p1/p1.go	/^type Error interface {$/;"	t
Error	./cmd/asm/internal/lex/input.go	/^func (in *Input) Error(args ...interface{}) {$/;"	f
Error	./cmd/compile/internal/big/float.go	/^func (err ErrNaN) Error() string {$/;"	f
Error	./cmd/compile/internal/gc/lex.go	/^func (yy) Error(msg string) {$/;"	f
Error	./cmd/compile/internal/gc/subr.go	/^type Error struct {$/;"	t
Error	./cmd/doc/pkg.go	/^func (p PackageError) Error() string {$/;"	f
Error	./cmd/go/bootstrap.go	/^func (e *httpError) Error() string {$/;"	f
Error	./cmd/go/http.go	/^func (e *httpError) Error() string {$/;"	f
Error	./cmd/go/pkg.go	/^func (p *PackageError) Error() string {$/;"	f
Error	./cmd/vet/testdata/print.go	/^func (errorTest1) Error(...interface{}) string {$/;"	f
Error	./cmd/vet/testdata/print.go	/^func (errorTest2) Error(...interface{}) {$/;"	f
Error	./cmd/vet/testdata/print.go	/^func (errorTest3) Error() { \/\/ No return value.$/;"	f
Error	./cmd/vet/testdata/print.go	/^func (errorTest4) Error() int { \/\/ Different return type.$/;"	f
Error	./cmd/vet/types.go	/^\/\/	func Error() string$/;"	f
Error	./cmd/yacc/yacc.go	/^type Error struct {$/;"	t
Error	./compress/bzip2/bzip2.go	/^func (s StructuralError) Error() string {$/;"	f
Error	./compress/flate/inflate.go	/^func (e *ReadError) Error() string {$/;"	f
Error	./compress/flate/inflate.go	/^func (e *WriteError) Error() string {$/;"	f
Error	./compress/flate/inflate.go	/^func (e CorruptInputError) Error() string {$/;"	f
Error	./compress/flate/inflate.go	/^func (e InternalError) Error() string { return "flate: internal error: " + string(e) }$/;"	f
Error	./crypto/aes/cipher.go	/^func (k KeySizeError) Error() string {$/;"	f
Error	./crypto/des/cipher.go	/^func (k KeySizeError) Error() string {$/;"	f
Error	./crypto/rc4/rc4.go	/^func (k KeySizeError) Error() string {$/;"	f
Error	./crypto/tls/alert.go	/^func (e alert) Error() string {$/;"	f
Error	./crypto/tls/tls.go	/^func (timeoutError) Error() string   { return "tls: DialWithDialer timed out" }$/;"	f
Error	./crypto/x509/verify.go	/^func (SystemRootsError) Error() string {$/;"	f
Error	./crypto/x509/verify.go	/^func (e CertificateInvalidError) Error() string {$/;"	f
Error	./crypto/x509/verify.go	/^func (e UnknownAuthorityError) Error() string {$/;"	f
Error	./crypto/x509/verify.go	/^func (h HostnameError) Error() string {$/;"	f
Error	./crypto/x509/x509.go	/^func (ConstraintViolationError) Error() string {$/;"	f
Error	./crypto/x509/x509.go	/^func (h UnhandledCriticalExtension) Error() string {$/;"	f
Error	./debug/dwarf/buf.go	/^func (e DecodeError) Error() string {$/;"	f
Error	./debug/elf/file.go	/^func (e *FormatError) Error() string {$/;"	f
Error	./debug/gosym/symtab.go	/^func (e *DecodingError) Error() string {$/;"	f
Error	./debug/gosym/symtab.go	/^func (e *UnknownLineError) Error() string {$/;"	f
Error	./debug/gosym/symtab.go	/^func (e UnknownFileError) Error() string { return "unknown file: " + string(e) }$/;"	f
Error	./debug/macho/file.go	/^func (e *FormatError) Error() string {$/;"	f
Error	./debug/pe/file.go	/^func (e *FormatError) Error() string {$/;"	f
Error	./debug/plan9obj/file.go	/^func (e *formatError) Error() string {$/;"	f
Error	./encoding/ascii85/ascii85.go	/^func (e CorruptInputError) Error() string {$/;"	f
Error	./encoding/asn1/asn1.go	/^func (e StructuralError) Error() string { return "asn1: structure error: " + e.Msg }$/;"	f
Error	./encoding/asn1/asn1.go	/^func (e SyntaxError) Error() string { return "asn1: syntax error: " + e.Msg }$/;"	f
Error	./encoding/base32/base32.go	/^func (e CorruptInputError) Error() string {$/;"	f
Error	./encoding/base64/base64.go	/^func (e CorruptInputError) Error() string {$/;"	f
Error	./encoding/csv/reader.go	/^func (e *ParseError) Error() string {$/;"	f
Error	./encoding/csv/writer.go	/^func (w *Writer) Error() error {$/;"	f
Error	./encoding/hex/hex.go	/^func (e InvalidByteError) Error() string {$/;"	f
Error	./encoding/json/decode.go	/^func (e *InvalidUnmarshalError) Error() string {$/;"	f
Error	./encoding/json/decode.go	/^func (e *UnmarshalFieldError) Error() string {$/;"	f
Error	./encoding/json/decode.go	/^func (e *UnmarshalTypeError) Error() string {$/;"	f
Error	./encoding/json/encode.go	/^func (e *InvalidUTF8Error) Error() string {$/;"	f
Error	./encoding/json/encode.go	/^func (e *MarshalerError) Error() string {$/;"	f
Error	./encoding/json/encode.go	/^func (e *UnsupportedTypeError) Error() string {$/;"	f
Error	./encoding/json/encode.go	/^func (e *UnsupportedValueError) Error() string {$/;"	f
Error	./encoding/json/scanner.go	/^func (e *SyntaxError) Error() string { return e.msg }$/;"	f
Error	./encoding/xml/marshal.go	/^func (e *UnsupportedTypeError) Error() string {$/;"	f
Error	./encoding/xml/read.go	/^func (e UnmarshalError) Error() string { return string(e) }$/;"	f
Error	./encoding/xml/typeinfo.go	/^func (e *TagPathError) Error() string {$/;"	f
Error	./encoding/xml/xml.go	/^func (e *SyntaxError) Error() string {$/;"	f
Error	./errors/errors.go	/^func (e *errorString) Error() string {$/;"	f
Error	./errors/example_test.go	/^func (e MyError) Error() string {$/;"	f
Error	./go/doc/testdata/testing.go	/^func (c *common) Error(args ...interface{}) {$/;"	f
Error	./go/internal/gccgoimporter/parser.go	/^func (e importError) Error() string {$/;"	f
Error	./go/internal/gcimporter/gcimporter.go	/^func (e importError) Error() string {$/;"	f
Error	./go/scanner/errors.go	/^func (e Error) Error() string {$/;"	f
Error	./go/scanner/errors.go	/^func (p ErrorList) Error() string {$/;"	f
Error	./go/scanner/errors.go	/^type Error struct {$/;"	t
Error	./go/types/api.go	/^func (err Error) Error() string {$/;"	f
Error	./go/types/api.go	/^type Error struct {$/;"	t
Error	./html/template/content_test.go	/^func (s *errorer) Error() string {$/;"	f
Error	./html/template/error.go	/^func (e *Error) Error() string {$/;"	f
Error	./html/template/error.go	/^type Error struct {$/;"	t
Error	./image/jpeg/reader.go	/^func (e FormatError) Error() string { return "invalid JPEG format: " + string(e) }$/;"	f
Error	./image/jpeg/reader.go	/^func (e UnsupportedError) Error() string { return "unsupported JPEG feature: " + string(e) }$/;"	f
Error	./image/png/reader.go	/^func (e FormatError) Error() string { return "png: invalid format: " + string(e) }$/;"	f
Error	./image/png/reader.go	/^func (e UnsupportedError) Error() string { return "png: unsupported feature: " + string(e) }$/;"	f
Error	./math/big/float.go	/^func (err ErrNaN) Error() string {$/;"	f
Error	./net/cgo_stub.go	/^func (eai addrinfoErrno) Error() string   { return "<nil>" }$/;"	f
Error	./net/cgo_unix.go	/^func (eai addrinfoErrno) Error() string   { return C.GoString(C.gai_strerror(C.int(eai))) }$/;"	f
Error	./net/cgo_windows.go	/^func (eai addrinfoErrno) Error() string   { return "<nil>" }$/;"	f
Error	./net/http/request.go	/^func (e *badStringError) Error() string { return fmt.Sprintf("%s %q", e.what, e.str) }$/;"	f
Error	./net/http/request.go	/^func (err *ProtocolError) Error() string { return err.ErrorString }$/;"	f
Error	./net/http/server.go	/^func Error(w ResponseWriter, error string, code int) {$/;"	f
Error	./net/http/transport.go	/^func (e *httpError) Error() string   { return e.err }$/;"	f
Error	./net/http/transport.go	/^func (tlsHandshakeTimeoutError) Error() string   { return "net\/http: TLS handshake timeout" }$/;"	f
Error	./net/mail/message.go	/^func (e charsetError) Error() string {$/;"	f
Error	./net/net.go	/^	\/\/ (see type Error) instead of blocking.$/;"	t
Error	./net/net.go	/^	\/\/ fail with a timeout (see type Error) instead of$/;"	t
Error	./net/net.go	/^func (e *AddrError) Error() string {$/;"	f
Error	./net/net.go	/^func (e *DNSConfigError) Error() string   { return "error reading DNS config: " + e.Err.Error() }$/;"	f
Error	./net/net.go	/^func (e *DNSError) Error() string {$/;"	f
Error	./net/net.go	/^func (e *OpError) Error() string {$/;"	f
Error	./net/net.go	/^func (e *ParseError) Error() string { return "invalid " + e.Type + ": " + e.Text }$/;"	f
Error	./net/net.go	/^func (e *timeoutError) Error() string   { return "i\/o timeout" }$/;"	f
Error	./net/net.go	/^func (e InvalidAddrError) Error() string   { return string(e) }$/;"	f
Error	./net/net.go	/^func (e UnknownNetworkError) Error() string   { return "unknown network " + string(e) }$/;"	f
Error	./net/net.go	/^type Error interface {$/;"	t
Error	./net/rpc/client.go	/^func (e ServerError) Error() string {$/;"	f
Error	./net/rpc/jsonrpc/all_test.go	/^func (t *Arith) Error(args *Args, reply *Reply) error {$/;"	f
Error	./net/rpc/server_test.go	/^func (t *Arith) Error(args *Args, reply *Reply) error {$/;"	f
Error	./net/textproto/textproto.go	/^func (e *Error) Error() string {$/;"	f
Error	./net/textproto/textproto.go	/^func (p ProtocolError) Error() string {$/;"	f
Error	./net/textproto/textproto.go	/^type Error struct {$/;"	t
Error	./net/url/url.go	/^func (e *Error) Error() string { return e.Op + " " + e.URL + ": " + e.Err.Error() }$/;"	f
Error	./net/url/url.go	/^func (e EscapeError) Error() string {$/;"	f
Error	./net/url/url.go	/^type Error struct {$/;"	t
Error	./os/error.go	/^func (e *PathError) Error() string { return e.Op + " " + e.Path + ": " + e.Err.Error() }$/;"	f
Error	./os/error.go	/^func (e *SyscallError) Error() string { return e.Syscall + ": " + e.Err.Error() }$/;"	f
Error	./os/exec/exec.go	/^func (e *Error) Error() string {$/;"	f
Error	./os/exec/exec.go	/^func (e *ExitError) Error() string {$/;"	f
Error	./os/exec/exec.go	/^type Error struct {$/;"	t
Error	./os/file.go	/^func (e *LinkError) Error() string {$/;"	f
Error	./os/user/user.go	/^func (e UnknownUserError) Error() string {$/;"	f
Error	./os/user/user.go	/^func (e UnknownUserIdError) Error() string {$/;"	f
Error	./reflect/value.go	/^func (e *ValueError) Error() string {$/;"	f
Error	./regexp/syntax/parse.go	/^func (e *Error) Error() string {$/;"	f
Error	./regexp/syntax/parse.go	/^type Error struct {$/;"	t
Error	./runtime/chanbarrier_test.go	/^func (myError) Error() string { return "" }$/;"	f
Error	./runtime/error.go	/^func (e *TypeAssertionError) Error() string {$/;"	f
Error	./runtime/error.go	/^func (e errorString) Error() string {$/;"	f
Error	./runtime/error.go	/^type Error interface {$/;"	t
Error	./strconv/atoi.go	/^func (e *NumError) Error() string {$/;"	f
Error	./syscall/dll_windows.go	/^func (e *DLLError) Error() string { return e.Msg }$/;"	f
Error	./syscall/srpc_nacl.go	/^func (e srpcErrno) Error() string {$/;"	f
Error	./syscall/syscall_nacl.go	/^func (e Errno) Error() string {$/;"	f
Error	./syscall/syscall_plan9.go	/^func (e ErrorString) Error() string { return string(e) }$/;"	f
Error	./syscall/syscall_unix.go	/^func (e Errno) Error() string {$/;"	f
Error	./syscall/syscall_windows.go	/^func (e Errno) Error() string {$/;"	f
Error	./testing/quick/quick.go	/^func (s *CheckEqualError) Error() string {$/;"	f
Error	./testing/quick/quick.go	/^func (s *CheckError) Error() string {$/;"	f
Error	./testing/quick/quick.go	/^func (s SetupError) Error() string { return string(s) }$/;"	f
Error	./testing/testing.go	/^func (c *common) Error(args ...interface{}) {$/;"	f
Error	./text/template/exec_test.go	/^func (w *W) Error() string {$/;"	f
Error	./time/format.go	/^func (e *ParseError) Error() string {$/;"	f
ErrorCode	./html/template/error.go	/^type ErrorCode int$/;"	t
ErrorCode	./regexp/syntax/parse.go	/^type ErrorCode string$/;"	t
ErrorContext	./text/template/parse/parse.go	/^func (t *Tree) ErrorContext(n Node) (location, context string) {$/;"	f
ErrorHandler	./go/scanner/scanner.go	/^type ErrorHandler func(pos token.Position, msg string)$/;"	t
ErrorHandling	./flag/flag.go	/^type ErrorHandling int$/;"	t
ErrorList	./go/scanner/errors.go	/^type ErrorList []*Error$/;"	t
ErrorString	./syscall/syscall_plan9.go	/^type ErrorString string$/;"	t
ErrorVarName	./syscall/mksyscall_windows.go	/^func (r *Rets) ErrorVarName() string {$/;"	f
Errorf	./fmt/print.go	/^func Errorf(format string, a ...interface{}) error {$/;"	f
Errorf	./go/doc/testdata/testing.go	/^func (c *common) Errorf(format string, args ...interface{}) {$/;"	f
Errorf	./testing/testing.go	/^func (c *common) Errorf(format string, args ...interface{}) {$/;"	f
EscState	./cmd/compile/internal/gc/esc.go	/^type EscState struct {$/;"	t
Escape	./encoding/xml/xml.go	/^func Escape(w io.Writer, s []byte) {$/;"	f
EscapeArg	./syscall/exec_windows.go	/^func EscapeArg(s string) string {$/;"	f
EscapeError	./net/url/url.go	/^type EscapeError string$/;"	t
EscapeString	./encoding/xml/xml.go	/^func (p *printer) EscapeString(s string) {$/;"	f
EscapeString	./html/escape.go	/^func EscapeString(s string) string {$/;"	f
EscapeTest	./net/url/url_test.go	/^type EscapeTest struct {$/;"	t
EscapeText	./encoding/xml/xml.go	/^func EscapeText(w io.Writer, s []byte) error {$/;"	f
EscapedPath	./net/url/url.go	/^func (u *URL) EscapedPath() string {$/;"	f
Eval	./go/types/eval.go	/^func Eval(fset *token.FileSet, pkg *Package, pos token.Pos, expr string) (tv TypeAndValue, err error) {$/;"	f
EvalSymlinks	./path/filepath/path.go	/^func EvalSymlinks(path string) (string, error) {$/;"	f
EvalSymlinksAbsWindowsTests	./path/filepath/path_test.go	/^var EvalSymlinksAbsWindowsTests = []EvalSymlinksTest{$/;"	v
EvalSymlinksTest	./path/filepath/path_test.go	/^type EvalSymlinksTest struct {$/;"	t
EvalSymlinksTestDirs	./path/filepath/path_test.go	/^var EvalSymlinksTestDirs = []EvalSymlinksTest{$/;"	v
EvalSymlinksTests	./path/filepath/path_test.go	/^var EvalSymlinksTests = []EvalSymlinksTest{$/;"	v
Event	./encoding/xml/marshal_test.go	/^type Event struct {$/;"	t
Event	./internal/trace/parser.go	/^type Event struct {$/;"	t
EventDescriptions	./internal/trace/parser.go	/^var EventDescriptions = [EvCount]struct {$/;"	v
Evict	./net/fd_poll_nacl.go	/^func (pd *pollDesc) Evict() {$/;"	f
Evict	./net/fd_poll_runtime.go	/^func (pd *pollDesc) Evict() {$/;"	f
Example	./archive/tar/example_test.go	/^func Example() {$/;"	f
Example	./container/list/example_test.go	/^func Example() {$/;"	f
Example	./errors/example_test.go	/^func Example() {$/;"	f
Example	./flag/example_test.go	/^func Example() {$/;"	f
Example	./go/doc/example.go	/^type Example struct {$/;"	t
Example	./html/template/example_test.go	/^func Example() {$/;"	f
Example	./image/decode_example_test.go	/^func Example() {$/;"	f
Example	./math/rand/example_test.go	/^func Example() {$/;"	f
Example	./net/smtp/example_test.go	/^func Example() {$/;"	f
Example	./regexp/example_test.go	/^func Example() {$/;"	f
Example	./sort/example_interface_test.go	/^func Example() {$/;"	f
Example	./testing/testing.go	/^\/\/     func Example() { ... }$/;"	f
Example	./text/scanner/example_test.go	/^func Example() {$/;"	f
ExampleAfter	./time/example_test.go	/^func ExampleAfter() {$/;"	f
ExampleAppendBool	./strconv/example_test.go	/^func ExampleAppendBool() {$/;"	f
ExampleAppendFloat	./strconv/example_test.go	/^func ExampleAppendFloat() {$/;"	f
ExampleAppendInt	./strconv/example_test.go	/^func ExampleAppendInt() {$/;"	f
ExampleAppendQuote	./strconv/example_test.go	/^func ExampleAppendQuote() {$/;"	f
ExampleAppendQuoteRune	./strconv/example_test.go	/^func ExampleAppendQuoteRune() {$/;"	f
ExampleAppendQuoteRuneToASCII	./strconv/example_test.go	/^func ExampleAppendQuoteRuneToASCII() {$/;"	f
ExampleAppendQuoteToASCII	./strconv/example_test.go	/^func ExampleAppendQuoteToASCII() {$/;"	f
ExampleAppendUint	./strconv/example_test.go	/^func ExampleAppendUint() {$/;"	f
ExampleAtoi	./strconv/example_test.go	/^func ExampleAtoi() {$/;"	f
ExampleB_RunParallel	./testing/benchmark_test.go	/^func ExampleB_RunParallel() {$/;"	f
ExampleBase	./path/example_test.go	/^func ExampleBase() {$/;"	f
ExampleBuffer	./bytes/example_test.go	/^func ExampleBuffer() {$/;"	f
ExampleBuffer_reader	./bytes/example_test.go	/^func ExampleBuffer_reader() {$/;"	f
ExampleCanBackquote	./strconv/example_test.go	/^func ExampleCanBackquote() {$/;"	f
ExampleCertificate_Verify	./crypto/x509/example_test.go	/^func ExampleCertificate_Verify() {$/;"	f
ExampleClean	./path/example_test.go	/^func ExampleClean() {$/;"	f
ExampleCmd_Output	./os/exec/example_test.go	/^func ExampleCmd_Output() {$/;"	f
ExampleCmd_Start	./os/exec/example_test.go	/^func ExampleCmd_Start() {$/;"	f
ExampleCmd_StdoutPipe	./os/exec/example_test.go	/^func ExampleCmd_StdoutPipe() {$/;"	f
ExampleCommand	./os/exec/example_test.go	/^func ExampleCommand() {$/;"	f
ExampleCommentMap	./go/ast/example_test.go	/^func ExampleCommentMap() {$/;"	f
ExampleCompare	./bytes/example_test.go	/^func ExampleCompare() {$/;"	f
ExampleCompare_search	./bytes/example_test.go	/^func ExampleCompare_search() {$/;"	f
ExampleContains	./strings/example_test.go	/^func ExampleContains() {$/;"	f
ExampleContainsAny	./strings/example_test.go	/^func ExampleContainsAny() {$/;"	f
ExampleCount	./go/parser/parser_test.go	/^func ExampleCount() {$/;"	f
ExampleCount	./strings/example_test.go	/^func ExampleCount() {$/;"	f
ExampleDB_Query	./database/sql/example_test.go	/^func ExampleDB_Query() {$/;"	f
ExampleDB_QueryRow	./database/sql/example_test.go	/^func ExampleDB_QueryRow() {$/;"	f
ExampleDate	./time/example_test.go	/^func ExampleDate() {$/;"	f
ExampleDecodeLastRune	./unicode/utf8/example_test.go	/^func ExampleDecodeLastRune() {$/;"	f
ExampleDecodeLastRuneInString	./unicode/utf8/example_test.go	/^func ExampleDecodeLastRuneInString() {$/;"	f
ExampleDecodeRune	./unicode/utf8/example_test.go	/^func ExampleDecodeRune() {$/;"	f
ExampleDecodeRuneInString	./unicode/utf8/example_test.go	/^func ExampleDecodeRuneInString() {$/;"	f
ExampleDecoder	./encoding/json/example_test.go	/^func ExampleDecoder() {$/;"	f
ExampleDecoder_Decode_stream	./encoding/json/example_test.go	/^func ExampleDecoder_Decode_stream() {$/;"	f
ExampleDecoder_Token	./encoding/json/example_test.go	/^func ExampleDecoder_Token() {$/;"	f
ExampleDial	./crypto/tls/example_test.go	/^func ExampleDial() {$/;"	f
ExampleDir	./path/example_test.go	/^func ExampleDir() {$/;"	f
ExampleDuration	./time/example_test.go	/^func ExampleDuration() {$/;"	f
ExampleEncodeRune	./unicode/utf8/example_test.go	/^func ExampleEncodeRune() {$/;"	f
ExampleEncoder	./encoding/xml/example_test.go	/^func ExampleEncoder() {$/;"	f
ExampleEncoding_DecodeString	./encoding/base32/example_test.go	/^func ExampleEncoding_DecodeString() {$/;"	f
ExampleEncoding_DecodeString	./encoding/base64/example_test.go	/^func ExampleEncoding_DecodeString() {$/;"	f
ExampleEncoding_EncodeToString	./encoding/base32/example_test.go	/^func ExampleEncoding_EncodeToString() {$/;"	f
ExampleEncoding_EncodeToString	./encoding/base64/example_test.go	/^func ExampleEncoding_EncodeToString() {$/;"	f
ExampleEqualFold	./strings/example_test.go	/^func ExampleEqualFold() {$/;"	f
ExampleEscapeString	./html/example_test.go	/^func ExampleEscapeString() {$/;"	f
ExampleExt	./path/example_test.go	/^func ExampleExt() {$/;"	f
ExampleF	./testing/testing.go	/^\/\/     func ExampleF() { ... }$/;"	f
ExampleF_suffix	./testing/testing.go	/^\/\/     func ExampleF_suffix() { ... }$/;"	f
ExampleFields	./strings/example_test.go	/^func ExampleFields() {$/;"	f
ExampleFieldsFunc	./strings/example_test.go	/^func ExampleFieldsFunc() {$/;"	f
ExampleFileServer	./net/http/example_test.go	/^func ExampleFileServer() {$/;"	f
ExampleFileServer_stripPrefix	./net/http/example_test.go	/^func ExampleFileServer_stripPrefix() {$/;"	f
ExampleFloat_Add	./cmd/compile/internal/big/floatexample_test.go	/^func ExampleFloat_Add() {$/;"	f
ExampleFloat_Add	./math/big/floatexample_test.go	/^func ExampleFloat_Add() {$/;"	f
ExampleFloat_Cmp	./cmd/compile/internal/big/floatexample_test.go	/^func ExampleFloat_Cmp() {$/;"	f
ExampleFloat_Cmp	./math/big/floatexample_test.go	/^func ExampleFloat_Cmp() {$/;"	f
ExampleFormatBool	./strconv/example_test.go	/^func ExampleFormatBool() {$/;"	f
ExampleFormatFloat	./strconv/example_test.go	/^func ExampleFormatFloat() {$/;"	f
ExampleFormatInt	./strconv/example_test.go	/^func ExampleFormatInt() {$/;"	f
ExampleFormatUint	./strconv/example_test.go	/^func ExampleFormatUint() {$/;"	f
ExampleFprint	./go/printer/example_test.go	/^func ExampleFprint() {$/;"	f
ExampleFullRune	./unicode/utf8/example_test.go	/^func ExampleFullRune() {$/;"	f
ExampleFullRuneInString	./unicode/utf8/example_test.go	/^func ExampleFullRuneInString() {$/;"	f
ExampleGet	./net/http/example_test.go	/^func ExampleGet() {$/;"	f
ExampleHello	./go/doc/example_test.go	/^func ExampleHello() {$/;"	f
ExampleHello	./testing/testing.go	/^\/\/     func ExampleHello() {$/;"	f
ExampleHijacker	./net/http/example_test.go	/^func ExampleHijacker() {$/;"	f
ExampleImport	./go/doc/example_test.go	/^func ExampleImport() {$/;"	f
ExampleIndent	./encoding/json/example_test.go	/^func ExampleIndent() {$/;"	f
ExampleIndex	./strings/example_test.go	/^func ExampleIndex() {$/;"	f
ExampleIndexAny	./strings/example_test.go	/^func ExampleIndexAny() {$/;"	f
ExampleIndexFunc	./strings/example_test.go	/^func ExampleIndexFunc() {$/;"	f
ExampleIndexRune	./strings/example_test.go	/^func ExampleIndexRune() {$/;"	f
ExampleInfo	./go/types/example_test.go	/^func ExampleInfo() {$/;"	f
ExampleInspect	./go/ast/example_test.go	/^func ExampleInspect() {$/;"	f
ExampleInt_Scan	./cmd/compile/internal/big/example_test.go	/^func ExampleInt_Scan() {$/;"	f
ExampleInt_Scan	./math/big/example_test.go	/^func ExampleInt_Scan() {$/;"	f
ExampleInt_SetString	./cmd/compile/internal/big/example_test.go	/^func ExampleInt_SetString() {$/;"	f
ExampleInt_SetString	./math/big/example_test.go	/^func ExampleInt_SetString() {$/;"	f
ExampleInts	./sort/example_test.go	/^func ExampleInts() {$/;"	f
ExampleIsAbs	./path/example_test.go	/^func ExampleIsAbs() {$/;"	f
ExampleIsPrint	./strconv/example_test.go	/^func ExampleIsPrint() {$/;"	f
ExampleItoa	./strconv/example_test.go	/^func ExampleItoa() {$/;"	f
ExampleJoin	./path/example_test.go	/^func ExampleJoin() {$/;"	f
ExampleJoin	./strings/example_test.go	/^func ExampleJoin() {$/;"	f
ExampleKeyValue	./go/doc/example_test.go	/^func ExampleKeyValue() {$/;"	f
ExampleKeyValueImport	./go/doc/example_test.go	/^func ExampleKeyValueImport() {$/;"	f
ExampleKeyValueTopDecl	./go/doc/example_test.go	/^func ExampleKeyValueTopDecl() {$/;"	f
ExampleLastIndex	./strings/example_test.go	/^func ExampleLastIndex() {$/;"	f
ExampleListener	./net/example_test.go	/^func ExampleListener() {$/;"	f
ExampleLoadLibrary	./syscall/syscall_windows_test.go	/^func ExampleLoadLibrary() {$/;"	f
ExampleLogger	./log/example_test.go	/^func ExampleLogger() {$/;"	f
ExampleLookPath	./os/exec/example_test.go	/^func ExampleLookPath() {$/;"	f
ExampleMakeFunc	./reflect/example_test.go	/^func ExampleMakeFunc() {$/;"	f
ExampleMakeTable	./hash/crc32/example_test.go	/^func ExampleMakeTable() {$/;"	f
ExampleMap	./strings/example_test.go	/^func ExampleMap() {$/;"	f
ExampleMarshal	./encoding/json/example_test.go	/^func ExampleMarshal() {$/;"	f
ExampleMarshalIndent	./encoding/xml/example_test.go	/^func ExampleMarshalIndent() {$/;"	f
ExampleMatchString	./regexp/example_test.go	/^func ExampleMatchString() {$/;"	f
ExampleMethodSet	./go/types/example_test.go	/^func ExampleMethodSet() {$/;"	f
ExampleMonth	./time/example_test.go	/^func ExampleMonth() {$/;"	f
ExampleNew	./crypto/md5/example_test.go	/^func ExampleNew() {$/;"	f
ExampleNew	./crypto/sha1/example_test.go	/^func ExampleNew() {$/;"	f
ExampleNew	./errors/errors_test.go	/^func ExampleNew() {$/;"	f
ExampleNewCBCDecrypter	./crypto/cipher/example_test.go	/^func ExampleNewCBCDecrypter() {$/;"	f
ExampleNewCBCEncrypter	./crypto/cipher/example_test.go	/^func ExampleNewCBCEncrypter() {$/;"	f
ExampleNewCFBDecrypter	./crypto/cipher/example_test.go	/^func ExampleNewCFBDecrypter() {$/;"	f
ExampleNewCFBEncrypter	./crypto/cipher/example_test.go	/^func ExampleNewCFBEncrypter() {$/;"	f
ExampleNewCTR	./crypto/cipher/example_test.go	/^func ExampleNewCTR() {$/;"	f
ExampleNewEncoder	./encoding/base32/example_test.go	/^func ExampleNewEncoder() {$/;"	f
ExampleNewEncoder	./encoding/base64/example_test.go	/^func ExampleNewEncoder() {$/;"	f
ExampleNewOFB	./crypto/cipher/example_test.go	/^func ExampleNewOFB() {$/;"	f
ExampleNewReader	./compress/zlib/example_test.go	/^func ExampleNewReader() {$/;"	f
ExampleNewReader	./mime/multipart/example_test.go	/^func ExampleNewReader() {$/;"	f
ExampleNewReplacer	./strings/example_test.go	/^func ExampleNewReplacer() {$/;"	f
ExampleNewTripleDESCipher	./crypto/des/example_test.go	/^func ExampleNewTripleDESCipher() {$/;"	f
ExampleNewWriter	./compress/zlib/example_test.go	/^func ExampleNewWriter() {$/;"	f
ExampleNew_errorf	./errors/errors_test.go	/^func ExampleNew_errorf() {$/;"	f
ExampleNotify	./os/signal/example_test.go	/^func ExampleNotify() {$/;"	f
ExampleNumError	./strconv/example_test.go	/^func ExampleNumError() {$/;"	f
ExampleOnce	./sync/example_test.go	/^func ExampleOnce() {$/;"	f
ExampleParse	./time/example_test.go	/^func ExampleParse() {$/;"	f
ExampleParseAddress	./net/mail/example_test.go	/^func ExampleParseAddress() {$/;"	f
ExampleParseAddressList	./net/mail/example_test.go	/^func ExampleParseAddressList() {$/;"	f
ExampleParseBool	./strconv/example_test.go	/^func ExampleParseBool() {$/;"	f
ExampleParseFile	./go/parser/example_test.go	/^func ExampleParseFile() {$/;"	f
ExampleParseFloat	./strconv/example_test.go	/^func ExampleParseFloat() {$/;"	f
ExampleParseInLocation	./time/example_test.go	/^func ExampleParseInLocation() {$/;"	f
ExampleParseInt	./strconv/example_test.go	/^func ExampleParseInt() {$/;"	f
ExampleParseUint	./strconv/example_test.go	/^func ExampleParseUint() {$/;"	f
ExamplePlainAuth	./net/smtp/example_test.go	/^func ExamplePlainAuth() {$/;"	f
ExamplePrint	./go/ast/example_test.go	/^func ExamplePrint() {$/;"	f
ExamplePrintln	./cmd/go/alldocs.go	/^	func ExamplePrintln() {$/;"	f
ExamplePrintln	./cmd/go/test.go	/^	func ExamplePrintln() {$/;"	f
ExampleQuote	./strconv/example_test.go	/^func ExampleQuote() {$/;"	f
ExampleQuoteRune	./strconv/example_test.go	/^func ExampleQuoteRune() {$/;"	f
ExampleQuoteRuneToASCII	./strconv/example_test.go	/^func ExampleQuoteRuneToASCII() {$/;"	f
ExampleQuoteToASCII	./strconv/example_test.go	/^func ExampleQuoteToASCII() {$/;"	f
ExampleRat_Scan	./cmd/compile/internal/big/example_test.go	/^func ExampleRat_Scan() {$/;"	f
ExampleRat_Scan	./math/big/example_test.go	/^func ExampleRat_Scan() {$/;"	f
ExampleRat_SetString	./cmd/compile/internal/big/example_test.go	/^func ExampleRat_SetString() {$/;"	f
ExampleRat_SetString	./math/big/example_test.go	/^func ExampleRat_SetString() {$/;"	f
ExampleRawMessage	./encoding/json/example_test.go	/^func ExampleRawMessage() {$/;"	f
ExampleRead	./crypto/rand/example_test.go	/^func ExampleRead() {$/;"	f
ExampleRead	./encoding/binary/example_test.go	/^func ExampleRead() {$/;"	f
ExampleReadMessage	./net/mail/example_test.go	/^func ExampleReadMessage() {$/;"	f
ExampleReader	./archive/zip/example_test.go	/^func ExampleReader() {$/;"	f
ExampleReader	./encoding/csv/example_test.go	/^func ExampleReader() {$/;"	f
ExampleReader_ReadAll	./encoding/csv/example_test.go	/^func ExampleReader_ReadAll() {$/;"	f
ExampleReader_options	./encoding/csv/example_test.go	/^func ExampleReader_options() {$/;"	f
ExampleRegexp_FindAllString	./regexp/example_test.go	/^func ExampleRegexp_FindAllString() {$/;"	f
ExampleRegexp_FindAllStringSubmatch	./regexp/example_test.go	/^func ExampleRegexp_FindAllStringSubmatch() {$/;"	f
ExampleRegexp_FindAllStringSubmatchIndex	./regexp/example_test.go	/^func ExampleRegexp_FindAllStringSubmatchIndex() {$/;"	f
ExampleRegexp_FindString	./regexp/example_test.go	/^func ExampleRegexp_FindString() {$/;"	f
ExampleRegexp_FindStringIndex	./regexp/example_test.go	/^func ExampleRegexp_FindStringIndex() {$/;"	f
ExampleRegexp_FindStringSubmatch	./regexp/example_test.go	/^func ExampleRegexp_FindStringSubmatch() {$/;"	f
ExampleRegexp_ReplaceAllLiteralString	./regexp/example_test.go	/^func ExampleRegexp_ReplaceAllLiteralString() {$/;"	f
ExampleRegexp_ReplaceAllString	./regexp/example_test.go	/^func ExampleRegexp_ReplaceAllString() {$/;"	f
ExampleRegexp_SubexpNames	./regexp/example_test.go	/^func ExampleRegexp_SubexpNames() {$/;"	f
ExampleRel	./path/filepath/example_unix_test.go	/^func ExampleRel() {$/;"	f
ExampleRepeat	./strings/example_test.go	/^func ExampleRepeat() {$/;"	f
ExampleReplace	./strings/example_test.go	/^func ExampleReplace() {$/;"	f
ExampleResponseRecorder	./net/http/httptest/example_test.go	/^func ExampleResponseRecorder() {$/;"	f
ExampleResponseWriter_trailers	./net/http/example_test.go	/^func ExampleResponseWriter_trailers() {$/;"	f
ExampleReverse	./sort/example_test.go	/^func ExampleReverse() {$/;"	f
ExampleRuneCount	./unicode/utf8/example_test.go	/^func ExampleRuneCount() {$/;"	f
ExampleRuneCountInString	./unicode/utf8/example_test.go	/^func ExampleRuneCountInString() {$/;"	f
ExampleRuneLen	./unicode/utf8/example_test.go	/^func ExampleRuneLen() {$/;"	f
ExampleRuneStart	./unicode/utf8/example_test.go	/^func ExampleRuneStart() {$/;"	f
ExampleSalutations	./testing/testing.go	/^\/\/     func ExampleSalutations() {$/;"	f
ExampleScanner_Scan	./go/scanner/example_test.go	/^func ExampleScanner_Scan() {$/;"	f
ExampleScanner_custom	./bufio/example_test.go	/^func ExampleScanner_custom() {$/;"	f
ExampleScanner_lines	./bufio/example_test.go	/^func ExampleScanner_lines() {$/;"	f
ExampleScanner_words	./bufio/example_test.go	/^func ExampleScanner_words() {$/;"	f
ExampleScope	./go/types/example_test.go	/^func ExampleScope() {$/;"	f
ExampleSendMail	./net/smtp/example_test.go	/^func ExampleSendMail() {$/;"	f
ExampleServeMux_Handle	./net/http/example_test.go	/^func ExampleServeMux_Handle() {$/;"	f
ExampleServer	./net/http/httptest/example_test.go	/^func ExampleServer() {$/;"	f
ExampleSleep	./time/example_test.go	/^func ExampleSleep() {$/;"	f
ExampleSplit	./path/example_test.go	/^func ExampleSplit() {$/;"	f
ExampleSplit	./path/filepath/example_unix_test.go	/^func ExampleSplit() {$/;"	f
ExampleSplit	./strings/example_test.go	/^func ExampleSplit() {$/;"	f
ExampleSplitAfter	./strings/example_test.go	/^func ExampleSplitAfter() {$/;"	f
ExampleSplitAfterN	./strings/example_test.go	/^func ExampleSplitAfterN() {$/;"	f
ExampleSplitList	./path/filepath/example_unix_test.go	/^func ExampleSplitList() {$/;"	f
ExampleSplitN	./strings/example_test.go	/^func ExampleSplitN() {$/;"	f
ExampleStreamReader	./crypto/cipher/example_test.go	/^func ExampleStreamReader() {$/;"	f
ExampleStreamWriter	./crypto/cipher/example_test.go	/^func ExampleStreamWriter() {$/;"	f
ExampleStripPrefix	./net/http/example_test.go	/^func ExampleStripPrefix() {$/;"	f
ExampleStructTag	./reflect/example_test.go	/^func ExampleStructTag() {$/;"	f
ExampleSum	./crypto/md5/example_test.go	/^func ExampleSum() {$/;"	f
ExampleSum	./crypto/sha1/example_test.go	/^func ExampleSum() {$/;"	f
ExampleT	./testing/testing.go	/^\/\/     func ExampleT() { ... }$/;"	f
ExampleT_M	./testing/testing.go	/^\/\/     func ExampleT_M() { ... }$/;"	f
ExampleT_M_suffix	./testing/testing.go	/^\/\/     func ExampleT_M_suffix() { ... }$/;"	f
ExampleT_suffix	./testing/testing.go	/^\/\/     func ExampleT_suffix() { ... }$/;"	f
ExampleTemplate	./text/template/example_test.go	/^func ExampleTemplate() {$/;"	f
ExampleTemplate_func	./text/template/examplefunc_test.go	/^func ExampleTemplate_func() {$/;"	f
ExampleTemplate_glob	./text/template/examplefiles_test.go	/^func ExampleTemplate_glob() {$/;"	f
ExampleTemplate_helpers	./text/template/examplefiles_test.go	/^func ExampleTemplate_helpers() {$/;"	f
ExampleTemplate_share	./text/template/examplefiles_test.go	/^func ExampleTemplate_share() {$/;"	f
ExampleTick	./time/example_test.go	/^func ExampleTick() {$/;"	f
ExampleTime_Format	./time/example_test.go	/^func ExampleTime_Format() {$/;"	f
ExampleTime_Round	./time/example_test.go	/^func ExampleTime_Round() {$/;"	f
ExampleTime_Truncate	./time/example_test.go	/^func ExampleTime_Truncate() {$/;"	f
ExampleTitle	./strings/example_test.go	/^func ExampleTitle() {$/;"	f
ExampleToLower	./strings/example_test.go	/^func ExampleToLower() {$/;"	f
ExampleToTitle	./strings/example_test.go	/^func ExampleToTitle() {$/;"	f
ExampleToUpper	./strings/example_test.go	/^func ExampleToUpper() {$/;"	f
ExampleTrim	./strings/example_test.go	/^func ExampleTrim() {$/;"	f
ExampleTrimPrefix	./bytes/example_test.go	/^func ExampleTrimPrefix() {$/;"	f
ExampleTrimPrefix	./strings/example_test.go	/^func ExampleTrimPrefix() {$/;"	f
ExampleTrimSpace	./strings/example_test.go	/^func ExampleTrimSpace() {$/;"	f
ExampleTrimSuffix	./bytes/example_test.go	/^func ExampleTrimSuffix() {$/;"	f
ExampleTrimSuffix	./strings/example_test.go	/^func ExampleTrimSuffix() {$/;"	f
ExampleTypeOf	./reflect/example_test.go	/^func ExampleTypeOf() {$/;"	f
ExampleURL	./net/url/example_test.go	/^func ExampleURL() {$/;"	f
ExampleURL_ResolveReference	./net/url/example_test.go	/^func ExampleURL_ResolveReference() {$/;"	f
ExampleURL_opaque	./net/url/example_test.go	/^func ExampleURL_opaque() {$/;"	f
ExampleURL_roundtrip	./net/url/example_test.go	/^func ExampleURL_roundtrip() {$/;"	f
ExampleUnescapeString	./html/example_test.go	/^func ExampleUnescapeString() {$/;"	f
ExampleUnmarshal	./encoding/json/example_test.go	/^func ExampleUnmarshal() {$/;"	f
ExampleUnmarshal	./encoding/xml/example_test.go	/^func ExampleUnmarshal() {$/;"	f
ExampleUnquote	./strconv/example_test.go	/^func ExampleUnquote() {$/;"	f
ExampleUnquoteChar	./strconv/example_test.go	/^func ExampleUnquoteChar() {$/;"	f
ExampleValid	./unicode/utf8/example_test.go	/^func ExampleValid() {$/;"	f
ExampleValidRune	./unicode/utf8/example_test.go	/^func ExampleValidRune() {$/;"	f
ExampleValidString	./unicode/utf8/example_test.go	/^func ExampleValidString() {$/;"	f
ExampleValue_config	./sync/atomic/value_test.go	/^func ExampleValue_config() {$/;"	f
ExampleValue_readMostly	./sync/atomic/value_test.go	/^func ExampleValue_readMostly() {$/;"	f
ExampleValues	./net/url/example_test.go	/^func ExampleValues() {$/;"	f
ExampleWaitGroup	./sync/example_test.go	/^func ExampleWaitGroup() {$/;"	f
ExampleWordDecoder_Decode	./mime/encodedword_test.go	/^func ExampleWordDecoder_Decode() {$/;"	f
ExampleWordDecoder_DecodeHeader	./mime/encodedword_test.go	/^func ExampleWordDecoder_DecodeHeader() {$/;"	f
ExampleWordEncoder_Encode	./mime/encodedword_test.go	/^func ExampleWordEncoder_Encode() {$/;"	f
ExampleWrite	./encoding/binary/example_test.go	/^func ExampleWrite() {$/;"	f
ExampleWrite_multi	./encoding/binary/example_test.go	/^func ExampleWrite_multi() {$/;"	f
ExampleWriter	./archive/zip/example_test.go	/^func ExampleWriter() {$/;"	f
ExampleWriter	./bufio/example_test.go	/^func ExampleWriter() {$/;"	f
ExampleWriter	./encoding/csv/example_test.go	/^func ExampleWriter() {$/;"	f
ExampleWriter_Init	./text/tabwriter/example_test.go	/^func ExampleWriter_Init() {$/;"	f
ExampleWriter_WriteAll	./encoding/csv/example_test.go	/^func ExampleWriter_WriteAll() {$/;"	f
Example_A	./cmd/go/testdata/example1_test.go	/^func Example_A() {$/;"	f
Example_B	./cmd/go/testdata/example2_test.go	/^func Example_B() {$/;"	f
Example_Shift	./cmd/compile/internal/big/floatexample_test.go	/^func Example_Shift() {$/;"	f
Example_Shift	./math/big/floatexample_test.go	/^func Example_Shift() {$/;"	f
Example_Y	./cmd/go/testdata/example2_test.go	/^func Example_Y() {$/;"	f
Example_Z	./cmd/go/testdata/example1_test.go	/^func Example_Z() {$/;"	f
Example_autoescaping	./html/template/example_test.go	/^func Example_autoescaping() {$/;"	f
Example_basic	./encoding/gob/example_test.go	/^func Example_basic() {$/;"	f
Example_encodeDecode	./encoding/gob/example_encdec_test.go	/^func Example_encodeDecode() {$/;"	f
Example_escape	./html/template/example_test.go	/^func Example_escape() {$/;"	f
Example_fibonacci	./math/big/example_test.go	/^func Example_fibonacci() {$/;"	f
Example_intHeap	./container/heap/example_intheap_test.go	/^func Example_intHeap() {$/;"	f
Example_interface	./encoding/gob/example_interface_test.go	/^func Example_interface() {$/;"	f
Example_priorityQueue	./container/heap/example_pq_test.go	/^func Example_priorityQueue() {$/;"	f
Example_rand	./math/rand/example_test.go	/^func Example_rand() {$/;"	f
Example_sortKeys	./sort/example_keys_test.go	/^func Example_sortKeys() {$/;"	f
Example_sortMultiKeys	./sort/example_multi_test.go	/^func Example_sortMultiKeys() {$/;"	f
Example_sortWrapper	./sort/example_wrapper_test.go	/^func Example_sortWrapper() {$/;"	f
Example_sqrt2	./math/big/example_test.go	/^func Example_sqrt2() {$/;"	f
Example_suffix	./testing/testing.go	/^\/\/     func Example_suffix() { ... }$/;"	f
Example_test	./cmd/go/testdata/norunexample/example_test.go	/^func Example_test() {$/;"	f
Examples	./go/doc/example.go	/^func Examples(files ...*ast.File) []*Example {$/;"	f
ExceptionRecord	./runtime/defs_windows.go	/^type ExceptionRecord C.EXCEPTION_RECORD$/;"	t
ExceptionState32	./runtime/defs_darwin.go	/^type ExceptionState32 C.struct_i386_exception_state$/;"	t
ExceptionState64	./runtime/defs_darwin.go	/^type ExceptionState64 C.struct_x86_exception_state64$/;"	t
Exchangedata	./syscall/zsyscall_darwin_386.go	/^func Exchangedata(path1 string, path2 string, options int) (err error) {$/;"	f
Exchangedata	./syscall/zsyscall_darwin_amd64.go	/^func Exchangedata(path1 string, path2 string, options int) (err error) {$/;"	f
Exchangedata	./syscall/zsyscall_darwin_arm.go	/^func Exchangedata(path1 string, path2 string, options int) (err error) {$/;"	f
Exchangedata	./syscall/zsyscall_darwin_arm64.go	/^func Exchangedata(path1 string, path2 string, options int) (err error) {$/;"	f
Exec	./database/sql/fakedb_test.go	/^func (c *fakeConn) Exec(query string, args []driver.Value) (driver.Result, error) {$/;"	f
Exec	./database/sql/fakedb_test.go	/^func (s *fakeStmt) Exec(args []driver.Value) (driver.Result, error) {$/;"	f
Exec	./database/sql/sql.go	/^func (db *DB) Exec(query string, args ...interface{}) (Result, error) {$/;"	f
Exec	./database/sql/sql.go	/^func (s *Stmt) Exec(args ...interface{}) (Result, error) {$/;"	f
Exec	./database/sql/sql.go	/^func (tx *Tx) Exec(query string, args ...interface{}) (Result, error) {$/;"	f
Exec	./syscall/exec_plan9.go	/^func Exec(argv0 string, argv []string, envv []string) (err error) {$/;"	f
Exec	./syscall/exec_unix.go	/^func Exec(argv0 string, argv []string, envv []string) (err error) {$/;"	f
Exec	./syscall/exec_windows.go	/^func Exec(argv0 string, argv []string, envv []string) (err error) {$/;"	f
ExecIO	./net/fd_windows.go	/^func (s *ioSrv) ExecIO(o *operation, name string, submit func(o *operation) error) (int, error) {$/;"	f
Execer	./database/sql/driver/driver.go	/^type Execer interface {$/;"	t
Execute	./html/template/template.go	/^func (t *Template) Execute(wr io.Writer, data interface{}) error {$/;"	f
Execute	./text/template/exec.go	/^func (t *Template) Execute(wr io.Writer, data interface{}) (err error) {$/;"	f
ExecuteTemplate	./html/template/template.go	/^func (t *Template) ExecuteTemplate(wr io.Writer, name string, data interface{}) error {$/;"	f
ExecuteTemplate	./text/template/exec.go	/^func (t *Template) ExecuteTemplate(wr io.Writer, name string, data interface{}) error {$/;"	f
Exit	./cmd/compile/internal/gc/util.go	/^func Exit(code int) {$/;"	f
Exit	./cmd/link/internal/ld/util.go	/^func Exit(code int) {$/;"	f
Exit	./os/proc.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/syscall_plan9.go	/^func Exit(code int) { exit(code) }$/;"	f
Exit	./syscall/syscall_windows.go	/^func Exit(code int) { ExitProcess(uint32(code)) }$/;"	f
Exit	./syscall/zsyscall_darwin_386.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_darwin_amd64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_darwin_arm.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_darwin_arm64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_dragonfly_amd64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_freebsd_386.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_freebsd_amd64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_freebsd_arm.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_linux_386.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_linux_amd64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_linux_arm.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_linux_arm64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_linux_ppc64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_linux_ppc64le.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_nacl_386.go	/^func Exit(code int) (err error) {$/;"	f
Exit	./syscall/zsyscall_nacl_amd64p32.go	/^func Exit(code int) (err error) {$/;"	f
Exit	./syscall/zsyscall_nacl_arm.go	/^func Exit(code int) (err error) {$/;"	f
Exit	./syscall/zsyscall_netbsd_386.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_netbsd_amd64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_netbsd_arm.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_openbsd_386.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_openbsd_amd64.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_openbsd_arm.go	/^func Exit(code int) {$/;"	f
Exit	./syscall/zsyscall_solaris_amd64.go	/^func Exit(code int) {$/;"	f
ExitError	./os/exec/exec.go	/^type ExitError struct {$/;"	t
ExitProcess	./syscall/zsyscall_windows.go	/^func ExitProcess(exitcode uint32) {$/;"	f
ExitStatus	./syscall/syscall_bsd.go	/^func (w WaitStatus) ExitStatus() int {$/;"	f
ExitStatus	./syscall/syscall_linux.go	/^func (w WaitStatus) ExitStatus() int {$/;"	f
ExitStatus	./syscall/syscall_nacl.go	/^func (w WaitStatus) ExitStatus() int    { return 0 }$/;"	f
ExitStatus	./syscall/syscall_plan9.go	/^func (w Waitmsg) ExitStatus() int {$/;"	f
ExitStatus	./syscall/syscall_solaris.go	/^func (w WaitStatus) ExitStatus() int {$/;"	f
ExitStatus	./syscall/syscall_windows.go	/^func (w WaitStatus) ExitStatus() int { return int(w.ExitCode) }$/;"	f
Exited	./os/doc.go	/^func (p *ProcessState) Exited() bool {$/;"	f
Exited	./syscall/syscall_bsd.go	/^func (w WaitStatus) Exited() bool { return w&mask == exited }$/;"	f
Exited	./syscall/syscall_linux.go	/^func (w WaitStatus) Exited() bool { return w&mask == exited }$/;"	f
Exited	./syscall/syscall_nacl.go	/^func (w WaitStatus) Exited() bool       { return false }$/;"	f
Exited	./syscall/syscall_plan9.go	/^func (w Waitmsg) Exited() bool   { return true }$/;"	f
Exited	./syscall/syscall_solaris.go	/^func (w WaitStatus) Exited() bool { return w&mask == exited }$/;"	f
Exited	./syscall/syscall_windows.go	/^func (w WaitStatus) Exited() bool { return true }$/;"	f
Exitf	./cmd/link/internal/ld/lib.go	/^func Exitf(format string, a ...interface{}) {$/;"	f
Exitsyscall	./runtime/export_test.go	/^var Exitsyscall = exitsyscall$/;"	v
Exp	./cmd/compile/internal/big/int.go	/^func (z *Int) Exp(x, y, m *Int) *Int {$/;"	f
Exp	./math/big/int.go	/^func (z *Int) Exp(x, y, m *Int) *Int {$/;"	f
Exp	./math/cmplx/exp.go	/^func Exp(x complex128) complex128 {$/;"	f
Exp	./math/exp.go	/^func Exp(x float64) float64$/;"	f
Exp2	./math/exp.go	/^func Exp2(x float64) float64$/;"	f
Exp2Go	./math/export_test.go	/^var Exp2Go = exp2$/;"	v
ExpFloat64	./math/rand/exp.go	/^func (r *Rand) ExpFloat64() float64 {$/;"	f
ExpFloat64	./math/rand/rand.go	/^func ExpFloat64() float64 { return globalRand.ExpFloat64() }$/;"	f
ExpFunc	./cmd/cgo/main.go	/^type ExpFunc struct {$/;"	t
ExpGo	./math/export_test.go	/^var ExpGo = exp$/;"	v
ExpHelper	./cmd/compile/internal/big/nat_test.go	/^func ExpHelper(b *testing.B, x, y Word) {$/;"	f
ExpHelper	./math/big/nat_test.go	/^func ExpHelper(b *testing.B, x, y Word) {$/;"	f
Expand	./os/env.go	/^func Expand(s string, mapping func(string) string) string {$/;"	f
Expand	./regexp/regexp.go	/^func (re *Regexp) Expand(dst []byte, template []byte, src []byte, match []int) []byte {$/;"	f
ExpandEnv	./os/env.go	/^func ExpandEnv(s string) string {$/;"	f
ExpandString	./internal/syscall/windows/registry/value.go	/^func ExpandString(value string) (string, error) {$/;"	f
ExpandString	./regexp/regexp.go	/^func (re *Regexp) ExpandString(dst []byte, template string, src string, match []int) []byte {$/;"	f
ExplicitMethod	./go/types/type.go	/^func (t *Interface) ExplicitMethod(i int) *Func { return t.methods[i] }$/;"	f
ExplodeTest	./bytes/bytes_test.go	/^type ExplodeTest struct {$/;"	t
Expm1	./math/expm1.go	/^func Expm1(x float64) float64$/;"	f
ExportAppendTime	./net/http/export_test.go	/^var ExportAppendTime = appendTime$/;"	v
ExportCloseWriteAndWait	./net/http/export_test.go	/^var ExportCloseWriteAndWait = (*conn).closeWriteAndWait$/;"	v
ExportErrRequestCanceled	./net/http/export_test.go	/^var ExportErrRequestCanceled = errRequestCanceled$/;"	v
ExportRefererForURL	./net/http/export_test.go	/^func ExportRefererForURL(lastReq, newReq *url.URL) string {$/;"	f
ExportServerNewConn	./net/http/export_test.go	/^var ExportServerNewConn = (*Server).newConn$/;"	v
Exported	./go/doc/testdata/f.go	/^func Exported() private {}$/;"	f
Exported	./go/types/object.go	/^func (obj *object) Exported() bool      { return ast.IsExported(obj.name) }$/;"	f
ExportedFunc	./cmd/doc/doc_test.go	/^			`func ExportedFunc\\(a int\\) bool`,                       \/\/ Function.$/;"	f
ExportedFunc	./cmd/doc/doc_test.go	/^			`func ExportedFunc\\(a int\\) bool`,$/;"	f
ExportedFunc	./cmd/doc/testdata/pkg.go	/^func ExportedFunc(a int) bool$/;"	f
ExportedMethod	./cmd/doc/testdata/pkg.go	/^func (ExportedType) ExportedMethod(a int) bool {$/;"	f
ExportedMethod	./cmd/doc/testdata/pkg.go	/^func (unexportedType) ExportedMethod() bool {$/;"	f
ExportedType	./cmd/doc/doc_test.go	/^			`type ExportedType struct { ... }`,                      \/\/ Exported type.$/;"	t
ExportedType	./cmd/doc/doc_test.go	/^			`type ExportedType struct`,    \/\/ Type definition.$/;"	t
ExportedType	./cmd/doc/doc_test.go	/^		[]string{`type ExportedType struct`},$/;"	t
ExportedType	./cmd/doc/testdata/pkg.go	/^type ExportedType struct {$/;"	t
ExportedTypeConstructor	./cmd/doc/doc_test.go	/^			`func ExportedTypeConstructor\\(\\) \\*ExportedType`, \/\/ Must include constructor.$/;"	f
ExportedTypeConstructor	./cmd/doc/testdata/pkg.go	/^func ExportedTypeConstructor() *ExportedType {$/;"	f
ExportedVariable	./cmd/doc/doc_test.go	/^			`var ExportedVariable = 1`,                              \/\/ Simple variable.$/;"	v
ExportedVariable	./cmd/doc/doc_test.go	/^			`var ExportedVariable = 1`,$/;"	v
ExportedVariable	./cmd/doc/testdata/pkg.go	/^var ExportedVariable = 1$/;"	v
Expr	./go/ast/ast.go	/^type Expr interface {$/;"	t
ExprString	./go/types/exprstring.go	/^func ExprString(x ast.Expr) string {$/;"	f
Expstring	./cmd/internal/obj/go.go	/^func Expstring() string {$/;"	f
Ext	./path/filepath/path.go	/^func Ext(path string) string {$/;"	f
Ext	./path/path.go	/^func Ext(path string) string {$/;"	f
ExtDis	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^type ExtDis struct {$/;"	t
ExtDis	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^type ExtDis struct {$/;"	t
ExtInst	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^type ExtInst struct {$/;"	t
ExtInst	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^type ExtInst struct {$/;"	t
ExtKeyUsage	./crypto/x509/x509.go	/^type ExtKeyUsage int$/;"	t
ExtTest	./path/filepath/path_test.go	/^type ExtTest struct {$/;"	t
ExtTest	./path/path_test.go	/^type ExtTest struct {$/;"	t
Extension	./crypto/x509/pkix/pkix.go	/^type Extension struct {$/;"	t
Extension	./net/smtp/smtp.go	/^func (c *Client) Extension(ext string) (bool, string) {$/;"	f
ExtensionsByType	./mime/type.go	/^func ExtensionsByType(typ string) ([]string, error) {$/;"	f
ExtraUsage	./cmd/pprof/pprof.go	/^func (flags) ExtraUsage() string {$/;"	f
F	./cmd/api/testdata/src/pkg/p2/p2.go	/^func F() string               {}$/;"	f
F	./cmd/go/go_test.go	/^		func F() { foo.F() }`)$/;"	f
F	./cmd/go/go_test.go	/^		func F() { p2.F() }`)$/;"	f
F	./cmd/go/go_test.go	/^		func F() {}`)$/;"	f
F	./cmd/go/testdata/cgocover/p.go	/^func F() {$/;"	f
F	./cmd/go/testdata/src/main_test/m.go	/^func F()    {}$/;"	f
F	./cmd/go/testdata/src/xtestonly/f.go	/^func F() int { return 42 }$/;"	f
F	./cmd/go/testdata/testimport/p.go	/^func F() int { return 1 }$/;"	f
F	./cmd/go/testdata/testimport/p1/p1.go	/^func F() int { return 1 }$/;"	f
F	./cmd/go/testdata/testimport/p2/p2.go	/^func F() int { return 1 }$/;"	f
F	./cmd/vet/testdata/nilfunc.go	/^func F() {}$/;"	f
F	./encoding/gob/encoder_test.go	/^func (this *interfaceIndirectTestT) F() bool {$/;"	f
F	./go/doc/testdata/b.go	/^func F(x int) int {} \/\/ F$/;"	f
F	./go/types/api_test.go	/^func F() {}$/;"	f
F	./runtime/crash_test.go	/^func F() {$/;"	f
F	./runtime/hash_test.go	/^func (x fInter) F() {$/;"	f
F0	./go/doc/testdata/d2.go	/^func F0() {}$/;"	f
F1	./go/doc/testdata/b.go	/^func F1() notExported {}$/;"	f
F1	./go/doc/testdata/d2.go	/^func F1() {}$/;"	f
F1	./go/internal/gcimporter/testdata/exports.go	/^func F1()         {}$/;"	f
F2	./go/doc/testdata/d1.go	/^func F2() {}$/;"	f
F2	./go/internal/gcimporter/testdata/exports.go	/^func F2(x int)    {}$/;"	f
F3	./go/internal/gcimporter/testdata/exports.go	/^func F3() int     { return 0 }$/;"	f
F32	./go/types/builtins_test.go	/^	{"complex", `type F32 float32; var re, im F32; _ = complex(re, im)`, `func(p.F32, p.F32) complex64`},$/;"	t
F32to64	./runtime/export_test.go	/^var F32to64 = f32to64$/;"	v
F4	./go/internal/gcimporter/testdata/exports.go	/^func F4() float32 { return 0 }$/;"	f
F5	./go/internal/gcimporter/testdata/exports.go	/^func F5(a, b, c int, u, v, w struct{ x, y T1 }, more ...interface{}) (p, q, r chan<- T10)$/;"	f
F64	./go/types/builtins_test.go	/^	{"complex", `type F64 float64; var re, im F64; _ = complex(re, im)`, `func(p.F64, p.F64) complex128`},$/;"	t
F64to32	./runtime/export_test.go	/^var F64to32 = f64to32$/;"	v
F64toint	./runtime/export_test.go	/^var F64toint = f64toint$/;"	v
FPCCMP	./cmd/internal/obj/arm64/asm7.go	/^func FPCCMP(m uint32, s uint32, type_ uint32, op uint32) uint32 {$/;"	f
FPCMP	./cmd/internal/obj/arm64/asm7.go	/^func FPCMP(m uint32, s uint32, type_ uint32, op uint32, op2 uint32) uint32 {$/;"	f
FPCVTI	./cmd/internal/obj/arm64/asm7.go	/^func FPCVTI(sf uint32, s uint32, type_ uint32, rmode uint32, op uint32) uint32 {$/;"	f
FPControl	./runtime/defs_darwin.go	/^type FPControl C.struct_fp_control$/;"	t
FPOP1S	./cmd/internal/obj/arm64/asm7.go	/^func FPOP1S(m uint32, s uint32, type_ uint32, op uint32) uint32 {$/;"	f
FPOP2S	./cmd/internal/obj/arm64/asm7.go	/^func FPOP2S(m uint32, s uint32, type_ uint32, op uint32) uint32 {$/;"	f
FPStatus	./runtime/defs_darwin.go	/^type FPStatus C.struct_fp_status$/;"	t
FPregset	./runtime/defs3_linux.go	/^type FPregset C.elf_fpregset_t$/;"	t
FR0	./runtime/memmove_arm.s	/^#define FR0	R2$/;"	d
FR1	./runtime/memmove_arm.s	/^#define FR1	R3$/;"	d
FR2	./runtime/memmove_arm.s	/^#define FR2	R4$/;"	d
FR3	./runtime/memmove_arm.s	/^#define FR3	R8					\/* shared with TE *\/$/;"	d
FROM	./runtime/memmove_arm.s	/^#define FROM	R11$/;"	d
FT	./go/types/eval_test.go	/^			type FT \/* FT => , p.FT *\/ interface{}$/;"	t
FTest	./reflect/all_test.go	/^type FTest struct {$/;"	t
FToC	./go/types/example_test.go	/^func FToC(f float64) Celsius { return Celsius(f - 32 \/ 9 * 5) }$/;"	f
FUNC1	./crypto/sha1/sha1block_386.s	/^#define FUNC1(a, b, c, d, e) \\$/;"	d
FUNC1	./crypto/sha1/sha1block_amd64.s	/^#define FUNC1(a, b, c, d, e) \\$/;"	d
FUNC1	./crypto/sha1/sha1block_amd64p32.s	/^#define FUNC1(a, b, c, d, e) \\$/;"	d
FUNC1	./crypto/sha1/sha1block_arm.s	/^#define FUNC1(Ra, Rb, Rc, Rd, Re) \\$/;"	d
FUNC2	./crypto/sha1/sha1block_386.s	/^#define FUNC2(a, b, c, d, e) \\$/;"	d
FUNC2	./crypto/sha1/sha1block_amd64.s	/^#define FUNC2(a, b, c, d, e) \\$/;"	d
FUNC2	./crypto/sha1/sha1block_amd64p32.s	/^#define FUNC2(a, b, c, d, e) \\$/;"	d
FUNC2	./crypto/sha1/sha1block_arm.s	/^#define FUNC2(Ra, Rb, Rc, Rd, Re) \\$/;"	d
FUNC3	./crypto/sha1/sha1block_386.s	/^#define FUNC3(a, b, c, d, e) \\$/;"	d
FUNC3	./crypto/sha1/sha1block_amd64.s	/^#define FUNC3(a, b, c, d, e) \\$/;"	d
FUNC3	./crypto/sha1/sha1block_amd64p32.s	/^#define FUNC3(a, b, c, d, e) \\$/;"	d
FUNC3	./crypto/sha1/sha1block_arm.s	/^#define FUNC3(Ra, Rb, Rc, Rd, Re) \\$/;"	d
FUNC4	./crypto/sha1/sha1block_386.s	/^#define FUNC4 FUNC2$/;"	d
FUNC4	./crypto/sha1/sha1block_amd64.s	/^#define FUNC4 FUNC2$/;"	d
FUNC4	./crypto/sha1/sha1block_amd64p32.s	/^#define FUNC4 FUNC2$/;"	d
FUNC4	./crypto/sha1/sha1block_arm.s	/^#define FUNC4 FUNC2$/;"	d
FUNCDATA_ArgsPointerMaps	./runtime/funcdata.h	/^#define FUNCDATA_ArgsPointerMaps /;"	d
FUNCDATA_DeadValueMaps	./runtime/funcdata.h	/^#define FUNCDATA_DeadValueMaps /;"	d
FUNCDATA_LocalsPointerMaps	./runtime/funcdata.h	/^#define FUNCDATA_LocalsPointerMaps /;"	d
FW0	./runtime/memmove_arm.s	/^#define FW0	R1$/;"	d
FW1	./runtime/memmove_arm.s	/^#define FW1	R2$/;"	d
FW2	./runtime/memmove_arm.s	/^#define FW2	R3$/;"	d
FW3	./runtime/memmove_arm.s	/^#define FW3	R4$/;"	d
Faccessat	./syscall/zsyscall_linux_386.go	/^func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Faccessat	./syscall/zsyscall_linux_amd64.go	/^func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Faccessat	./syscall/zsyscall_linux_arm.go	/^func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Faccessat	./syscall/zsyscall_linux_arm64.go	/^func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Faccessat	./syscall/zsyscall_linux_ppc64.go	/^func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Faccessat	./syscall/zsyscall_linux_ppc64le.go	/^func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Fadd64	./runtime/export_test.go	/^var Fadd64 = fadd64$/;"	v
Fail	./go/doc/testdata/testing.go	/^func (c *common) Fail() { c.failed = true }$/;"	f
Fail	./testing/testing.go	/^func (c *common) Fail() {$/;"	f
FailNow	./go/doc/testdata/testing.go	/^func (c *common) FailNow() {$/;"	f
FailNow	./testing/testing.go	/^func (c *common) FailNow() {$/;"	f
Failed	./go/doc/testdata/testing.go	/^func (c *common) Failed() bool { return c.failed }$/;"	f
Failed	./testing/testing.go	/^func (c *common) Failed() bool {$/;"	f
FakeFile	./cmd/pack/pack_test.go	/^type FakeFile struct {$/;"	t
Fallocate	./syscall/zsyscall_linux_386.go	/^func Fallocate(fd int, mode uint32, off int64, len int64) (err error) {$/;"	f
Fallocate	./syscall/zsyscall_linux_amd64.go	/^func Fallocate(fd int, mode uint32, off int64, len int64) (err error) {$/;"	f
Fallocate	./syscall/zsyscall_linux_arm.go	/^func Fallocate(fd int, mode uint32, off int64, len int64) (err error) {$/;"	f
Fallocate	./syscall/zsyscall_linux_arm64.go	/^func Fallocate(fd int, mode uint32, off int64, len int64) (err error) {$/;"	f
Fallocate	./syscall/zsyscall_linux_ppc64.go	/^func Fallocate(fd int, mode uint32, off int64, len int64) (err error) {$/;"	f
Fallocate	./syscall/zsyscall_linux_ppc64le.go	/^func Fallocate(fd int, mode uint32, off int64, len int64) (err error) {$/;"	f
Family	./net/internal/socktest/switch.go	/^func (c Cookie) Family() int { return int(c >> 48) }$/;"	f
FatArch	./debug/macho/fat.go	/^type FatArch struct {$/;"	t
FatArchHeader	./debug/macho/fat.go	/^type FatArchHeader struct {$/;"	t
FatFile	./debug/macho/fat.go	/^type FatFile struct {$/;"	t
Fatal	./cmd/compile/internal/gc/subr.go	/^func Fatal(fmt_ string, args ...interface{}) {$/;"	f
Fatal	./go/doc/testdata/testing.go	/^func (c *common) Fatal(args ...interface{}) {$/;"	f
Fatal	./log/log.go	/^func (l *Logger) Fatal(v ...interface{}) {$/;"	f
Fatal	./log/log.go	/^func Fatal(v ...interface{}) {$/;"	f
Fatal	./testing/testing.go	/^func (c *common) Fatal(args ...interface{}) {$/;"	f
Fatalf	./cmd/doc/pkg.go	/^func (pkg *Package) Fatalf(format string, args ...interface{}) {$/;"	f
Fatalf	./go/doc/testdata/testing.go	/^func (c *common) Fatalf(format string, args ...interface{}) {$/;"	f
Fatalf	./log/log.go	/^func (l *Logger) Fatalf(format string, v ...interface{}) {$/;"	f
Fatalf	./log/log.go	/^func Fatalf(format string, v ...interface{}) {$/;"	f
Fatalf	./testing/testing.go	/^func (c *common) Fatalf(format string, args ...interface{}) {$/;"	f
Fatalln	./log/log.go	/^func (l *Logger) Fatalln(v ...interface{}) {$/;"	f
Fatalln	./log/log.go	/^func Fatalln(v ...interface{}) {$/;"	f
Fbootstraptransfer_t	./syscall/types_darwin.go	/^type Fbootstraptransfer_t C.struct_fbootstraptransfer$/;"	t
Fbootstraptransfer_t	./syscall/ztypes_darwin_386.go	/^type Fbootstraptransfer_t struct {$/;"	t
Fbootstraptransfer_t	./syscall/ztypes_darwin_amd64.go	/^type Fbootstraptransfer_t struct {$/;"	t
Fbootstraptransfer_t	./syscall/ztypes_darwin_arm.go	/^type Fbootstraptransfer_t struct {$/;"	t
Fbootstraptransfer_t	./syscall/ztypes_darwin_arm64.go	/^type Fbootstraptransfer_t struct {$/;"	t
Fchdir	./syscall/fs_nacl.go	/^func Fchdir(fd int) error {$/;"	f
Fchdir	./syscall/syscall_plan9.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/syscall_windows.go	/^func Fchdir(fd Handle) (err error)             { return EWINDOWS }$/;"	f
Fchdir	./syscall/zsyscall_darwin_386.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_darwin_amd64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_darwin_arm.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_darwin_arm64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_dragonfly_amd64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_freebsd_386.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_freebsd_amd64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_freebsd_arm.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_linux_386.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_linux_amd64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_linux_arm.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_linux_arm64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_linux_ppc64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_linux_ppc64le.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_netbsd_386.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_netbsd_amd64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_netbsd_arm.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_openbsd_386.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_openbsd_amd64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_openbsd_arm.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchdir	./syscall/zsyscall_solaris_amd64.go	/^func Fchdir(fd int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_darwin_386.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_darwin_amd64.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_darwin_arm.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_darwin_arm64.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_dragonfly_amd64.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_freebsd_386.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_freebsd_amd64.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_freebsd_arm.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_netbsd_386.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_netbsd_amd64.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_netbsd_arm.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_openbsd_386.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_openbsd_amd64.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchflags	./syscall/zsyscall_openbsd_arm.go	/^func Fchflags(fd int, flags int) (err error) {$/;"	f
Fchmod	./syscall/fs_nacl.go	/^func Fchmod(fd int, mode uint32) error {$/;"	f
Fchmod	./syscall/syscall_windows.go	/^func Fchmod(fd Handle, mode uint32) (err error)        { return EWINDOWS }$/;"	f
Fchmod	./syscall/zsyscall_darwin_386.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_darwin_amd64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_darwin_arm.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_darwin_arm64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_dragonfly_amd64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_freebsd_386.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_freebsd_amd64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_freebsd_arm.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_linux_386.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_linux_amd64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_linux_arm.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_linux_arm64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_linux_ppc64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_linux_ppc64le.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_netbsd_386.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_netbsd_amd64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_netbsd_arm.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_openbsd_386.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_openbsd_amd64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_openbsd_arm.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmod	./syscall/zsyscall_solaris_amd64.go	/^func Fchmod(fd int, mode uint32) (err error) {$/;"	f
Fchmodat	./syscall/zsyscall_linux_386.go	/^func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Fchmodat	./syscall/zsyscall_linux_amd64.go	/^func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Fchmodat	./syscall/zsyscall_linux_arm.go	/^func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Fchmodat	./syscall/zsyscall_linux_arm64.go	/^func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Fchmodat	./syscall/zsyscall_linux_ppc64.go	/^func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Fchmodat	./syscall/zsyscall_linux_ppc64le.go	/^func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {$/;"	f
Fchown	./syscall/fs_nacl.go	/^func Fchown(fd int, uid, gid int) error {$/;"	f
Fchown	./syscall/syscall_windows.go	/^func Fchown(fd Handle, uid int, gid int) (err error)   { return EWINDOWS }$/;"	f
Fchown	./syscall/zsyscall_darwin_386.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_darwin_amd64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_darwin_arm.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_darwin_arm64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_dragonfly_amd64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_freebsd_386.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_freebsd_amd64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_freebsd_arm.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_linux_386.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_linux_amd64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_linux_arm.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_linux_arm64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_linux_ppc64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_linux_ppc64le.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_netbsd_386.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_netbsd_amd64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_netbsd_arm.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_openbsd_386.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_openbsd_amd64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_openbsd_arm.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchown	./syscall/zsyscall_solaris_amd64.go	/^func Fchown(fd int, uid int, gid int) (err error) {$/;"	f
Fchownat	./syscall/zsyscall_linux_386.go	/^func Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {$/;"	f
Fchownat	./syscall/zsyscall_linux_amd64.go	/^func Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {$/;"	f
Fchownat	./syscall/zsyscall_linux_arm.go	/^func Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {$/;"	f
Fchownat	./syscall/zsyscall_linux_arm64.go	/^func Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {$/;"	f
Fchownat	./syscall/zsyscall_linux_ppc64.go	/^func Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {$/;"	f
Fchownat	./syscall/zsyscall_linux_ppc64le.go	/^func Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {$/;"	f
Fcmp64	./runtime/export_test.go	/^var Fcmp64 = fcmp64$/;"	v
FcntlFlock	./syscall/flock.go	/^func FcntlFlock(fd uintptr, cmd int, lk *Flock_t) error {$/;"	f
FcntlFlock	./syscall/syscall_solaris.go	/^func FcntlFlock(fd uintptr, cmd int, lk *Flock_t) error {$/;"	f
Fconv	./cmd/compile/internal/gc/mparith3.go	/^func Fconv(fvp *Mpflt, flag int) string {$/;"	f
Fd	./os/file_plan9.go	/^func (f *File) Fd() uintptr {$/;"	f
Fd	./os/file_unix.go	/^func (f *File) Fd() uintptr {$/;"	f
Fd	./os/file_windows.go	/^func (file *File) Fd() uintptr {$/;"	f
Fd2path	./syscall/syscall_plan9.go	/^func Fd2path(fd int) (path string, err error) {$/;"	f
FdSet	./syscall/types_darwin.go	/^type FdSet C.fd_set$/;"	t
FdSet	./syscall/types_dragonfly.go	/^type FdSet C.fd_set$/;"	t
FdSet	./syscall/types_freebsd.go	/^type FdSet C.fd_set$/;"	t
FdSet	./syscall/types_linux.go	/^type FdSet C.fd_set$/;"	t
FdSet	./syscall/types_netbsd.go	/^type FdSet C.fd_set$/;"	t
FdSet	./syscall/types_openbsd.go	/^type FdSet C.fd_set$/;"	t
FdSet	./syscall/types_solaris.go	/^type FdSet C.fd_set$/;"	t
FdSet	./syscall/ztypes_darwin_386.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_darwin_amd64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_darwin_arm.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_darwin_arm64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_dragonfly_amd64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_freebsd_386.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_freebsd_amd64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_freebsd_arm.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_linux_386.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_linux_amd64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_linux_arm.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_linux_arm64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_linux_ppc64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_linux_ppc64le.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_netbsd_386.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_netbsd_amd64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_netbsd_arm.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_openbsd_386.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_openbsd_amd64.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_openbsd_arm.go	/^type FdSet struct {$/;"	t
FdSet	./syscall/ztypes_solaris_amd64.go	/^type FdSet struct {$/;"	t
Fdatasync	./syscall/zsyscall_linux_386.go	/^func Fdatasync(fd int) (err error) {$/;"	f
Fdatasync	./syscall/zsyscall_linux_amd64.go	/^func Fdatasync(fd int) (err error) {$/;"	f
Fdatasync	./syscall/zsyscall_linux_arm.go	/^func Fdatasync(fd int) (err error) {$/;"	f
Fdatasync	./syscall/zsyscall_linux_arm64.go	/^func Fdatasync(fd int) (err error) {$/;"	f
Fdatasync	./syscall/zsyscall_linux_ppc64.go	/^func Fdatasync(fd int) (err error) {$/;"	f
Fdatasync	./syscall/zsyscall_linux_ppc64le.go	/^func Fdatasync(fd int) (err error) {$/;"	f
Fdiv64	./runtime/export_test.go	/^var Fdiv64 = fdiv64$/;"	v
Features	./cmd/api/goapi.go	/^func (w *Walker) Features() (fs []string) {$/;"	f
Feed	./encoding/xml/read_test.go	/^type Feed struct {$/;"	t
FetchProfile	./cmd/pprof/internal/fetch/fetch.go	/^func FetchProfile(source string, timeout time.Duration) (*profile.Profile, error) {$/;"	f
FetchURL	./cmd/pprof/internal/fetch/fetch.go	/^func FetchURL(source string, timeout time.Duration) (io.ReadCloser, error) {$/;"	f
Fetcher	./cmd/pprof/internal/fetch/fetch.go	/^func Fetcher(source string, timeout time.Duration, ui plugin.UI) (*profile.Profile, error) {$/;"	f
Fetcher	./cmd/pprof/internal/plugin/plugin.go	/^type Fetcher func(src string, timeout time.Duration, ui UI) (*profile.Profile, error)$/;"	t
Field	./debug/dwarf/entry.go	/^type Field struct {$/;"	t
Field	./go/ast/ast.go	/^type Field struct {$/;"	t
Field	./go/types/type.go	/^func (s *Struct) Field(i int) *Var { return s.fields[i] }$/;"	f
Field	./reflect/type.go	/^func (t *rtype) Field(i int) StructField {$/;"	f
Field	./reflect/type.go	/^func (t *structType) Field(i int) (f StructField) {$/;"	f
Field	./reflect/value.go	/^func (v Value) Field(i int) Value {$/;"	f
FieldAlign	./reflect/type.go	/^func (t *rtype) FieldAlign() int { return int(t.fieldAlign) }$/;"	f
FieldByIndex	./reflect/type.go	/^func (t *rtype) FieldByIndex(index []int) StructField {$/;"	f
FieldByIndex	./reflect/type.go	/^func (t *structType) FieldByIndex(index []int) (f StructField) {$/;"	f
FieldByIndex	./reflect/value.go	/^func (v Value) FieldByIndex(index []int) Value {$/;"	f
FieldByName	./reflect/type.go	/^func (t *rtype) FieldByName(name string) (StructField, bool) {$/;"	f
FieldByName	./reflect/type.go	/^func (t *structType) FieldByName(name string) (f StructField, present bool) {$/;"	f
FieldByName	./reflect/value.go	/^func (v Value) FieldByName(name string) Value {$/;"	f
FieldByNameFunc	./reflect/type.go	/^func (t *rtype) FieldByNameFunc(match func(string) bool) (StructField, bool) {$/;"	f
FieldByNameFunc	./reflect/type.go	/^func (t *structType) FieldByNameFunc(match func(string) bool) (result StructField, ok bool) {$/;"	f
FieldByNameFunc	./reflect/value.go	/^func (v Value) FieldByNameFunc(match func(string) bool) Value {$/;"	f
FieldFilter	./go/ast/print.go	/^type FieldFilter func(name string, value reflect.Value) bool$/;"	t
FieldList	./go/ast/ast.go	/^type FieldList struct {$/;"	t
FieldMutex	./cmd/vet/testdata/copylock_func.go	/^type FieldMutex struct {$/;"	t
FieldNode	./text/template/parse/node.go	/^type FieldNode struct {$/;"	t
Fields	./bytes/bytes.go	/^func Fields(s []byte) [][]byte {$/;"	f
Fields	./strings/strings.go	/^func Fields(s string) []string {$/;"	f
FieldsFunc	./bytes/bytes.go	/^func FieldsFunc(s []byte, f func(rune) bool) [][]byte {$/;"	f
FieldsFunc	./strings/strings.go	/^func FieldsFunc(s string, f func(rune) bool) []string {$/;"	f
FieldsFuncTests	./strings/strings_test.go	/^var FieldsFuncTests = []FieldsTest{$/;"	v
FieldsTest	./bytes/bytes_test.go	/^type FieldsTest struct {$/;"	t
FieldsTest	./strings/strings_test.go	/^type FieldsTest struct {$/;"	t
File	./archive/zip/reader.go	/^type File struct {$/;"	t
File	./cmd/asm/internal/lex/slice.go	/^func (s *Slice) File() string {$/;"	f
File	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) File() string {$/;"	f
File	./cmd/asm/internal/lex/tokenizer.go	/^func (t *Tokenizer) File() string {$/;"	f
File	./cmd/cgo/main.go	/^type File struct {$/;"	t
File	./cmd/cover/cover.go	/^type File struct {$/;"	t
File	./cmd/internal/objfile/objfile.go	/^type File struct {$/;"	t
File	./cmd/vet/main.go	/^type File struct {$/;"	t
File	./debug/elf/file.go	/^type File struct {$/;"	t
File	./debug/macho/file.go	/^type File struct {$/;"	t
File	./debug/pe/file.go	/^type File struct {$/;"	t
File	./debug/plan9obj/file.go	/^type File struct {$/;"	t
File	./go/ast/ast.go	/^type File struct {$/;"	t
File	./go/token/position.go	/^func (s *FileSet) File(p Pos) (f *File) {$/;"	f
File	./go/token/position.go	/^type File struct {$/;"	t
File	./mime/multipart/formdata.go	/^type File interface {$/;"	t
File	./net/http/fs.go	/^type File interface {$/;"	t
File	./net/net.go	/^func (c *conn) File() (f *os.File, err error) {$/;"	f
File	./net/tcpsock_plan9.go	/^func (l *TCPListener) File() (f *os.File, err error) {$/;"	f
File	./net/tcpsock_posix.go	/^func (l *TCPListener) File() (f *os.File, err error) {$/;"	f
File	./net/unixsock_plan9.go	/^func (l *UnixListener) File() (*os.File, error) {$/;"	f
File	./net/unixsock_posix.go	/^func (l *UnixListener) File() (f *os.File, err error) {$/;"	f
File	./os/file_plan9.go	/^type File struct {$/;"	t
File	./os/file_unix.go	/^type File struct {$/;"	t
File	./os/file_windows.go	/^type File struct {$/;"	t
FileConn	./net/file.go	/^func FileConn(f *os.File) (c Conn, err error) {$/;"	f
FileExports	./go/ast/filter.go	/^func FileExports(src *File) bool {$/;"	f
FileHeader	./archive/zip/struct.go	/^type FileHeader struct {$/;"	t
FileHeader	./debug/elf/file.go	/^type FileHeader struct {$/;"	t
FileHeader	./debug/macho/macho.go	/^type FileHeader struct {$/;"	t
FileHeader	./debug/pe/pe.go	/^type FileHeader struct {$/;"	t
FileHeader	./debug/plan9obj/file.go	/^type FileHeader struct {$/;"	t
FileHeader	./mime/multipart/formdata.go	/^type FileHeader struct {$/;"	t
FileInfo	./archive/tar/common.go	/^func (h *Header) FileInfo() os.FileInfo {$/;"	f
FileInfo	./archive/zip/struct.go	/^func (h *FileHeader) FileInfo() os.FileInfo {$/;"	f
FileInfo	./os/types.go	/^type FileInfo interface {$/;"	t
FileInfoHeader	./archive/tar/common.go	/^func FileInfoHeader(fi os.FileInfo, link string) (*Header, error) {$/;"	f
FileInfoHeader	./archive/zip/struct.go	/^func FileInfoHeader(fi os.FileInfo) (*FileHeader, error) {$/;"	f
FileLike	./cmd/pack/pack.go	/^type FileLike interface {$/;"	t
FileLine	./cmd/internal/obj/obj.go	/^func (h *LineHist) FileLine(lineno int) (file string, line int) {$/;"	f
FileLine	./runtime/symtab.go	/^func (f *Func) FileLine(pc uintptr) (file string, line int) {$/;"	f
FileListener	./net/file.go	/^func FileListener(f *os.File) (ln Listener, err error) {$/;"	f
FileMode	./os/types.go	/^type FileMode uint32$/;"	t
FileName	./mime/multipart/multipart.go	/^func (p *Part) FileName() string {$/;"	f
FileNotifyInformation	./syscall/ztypes_windows.go	/^type FileNotifyInformation struct {$/;"	t
FilePacketConn	./net/file.go	/^func FilePacketConn(f *os.File) (c PacketConn, err error) {$/;"	f
FileServer	./net/http/fs.go	/^func FileServer(root FileSystem) Handler {$/;"	f
FileSet	./go/token/position.go	/^type FileSet struct {$/;"	t
FileSystem	./net/http/fs.go	/^type FileSystem interface {$/;"	t
Files	./go/types/check.go	/^func (check *Checker) Files(files []*ast.File) (err error) {$/;"	f
Filetime	./syscall/ztypes_windows.go	/^type Filetime struct {$/;"	t
FillFromRDNSequence	./crypto/x509/pkix/pkix.go	/^func (n *Name) FillFromRDNSequence(rdns *RDNSequence) {$/;"	f
Filter	./go/ast/commentmap.go	/^func (cmap CommentMap) Filter(node Node) CommentMap {$/;"	f
Filter	./go/ast/filter.go	/^type Filter func(string) bool$/;"	t
Filter	./go/doc/filter.go	/^func (p *Package) Filter(f Filter) {$/;"	f
Filter	./go/doc/filter.go	/^type Filter func(string) bool$/;"	t
Filter	./net/internal/socktest/switch.go	/^type Filter func(*Status) (AfterFilter, error)$/;"	t
FilterDecl	./go/ast/filter.go	/^func FilterDecl(decl Decl, f Filter) bool {$/;"	f
FilterFile	./go/ast/filter.go	/^func FilterFile(src *File, f Filter) bool {$/;"	f
FilterPackage	./go/ast/filter.go	/^func FilterPackage(pkg *Package, f Filter) bool {$/;"	f
FilterSamplesByName	./cmd/pprof/internal/profile/filter.go	/^func (p *Profile) FilterSamplesByName(focus, ignore, hide *regexp.Regexp) (fm, im, hm bool) {$/;"	f
FilterSamplesByTag	./cmd/pprof/internal/profile/filter.go	/^func (p *Profile) FilterSamplesByTag(focus, ignore TagMatch) (fm, im bool) {$/;"	f
FilterType	./net/internal/socktest/switch.go	/^type FilterType int$/;"	t
Find	./regexp/regexp.go	/^func (re *Regexp) Find(b []byte) []byte {$/;"	f
Find	./syscall/dll_windows.go	/^func (p *LazyProc) Find() error {$/;"	f
FindAll	./regexp/regexp.go	/^func (re *Regexp) FindAll(b []byte, n int) [][]byte {$/;"	f
FindAllIndex	./index/suffixarray/suffixarray.go	/^func (x *Index) FindAllIndex(r *regexp.Regexp, n int) (result [][]int) {$/;"	f
FindAllIndex	./regexp/regexp.go	/^func (re *Regexp) FindAllIndex(b []byte, n int) [][]int {$/;"	f
FindAllString	./regexp/regexp.go	/^func (re *Regexp) FindAllString(s string, n int) []string {$/;"	f
FindAllStringIndex	./regexp/regexp.go	/^func (re *Regexp) FindAllStringIndex(s string, n int) [][]int {$/;"	f
FindAllStringSubmatch	./regexp/regexp.go	/^func (re *Regexp) FindAllStringSubmatch(s string, n int) [][]string {$/;"	f
FindAllStringSubmatchIndex	./regexp/regexp.go	/^func (re *Regexp) FindAllStringSubmatchIndex(s string, n int) [][]int {$/;"	f
FindAllSubmatch	./regexp/regexp.go	/^func (re *Regexp) FindAllSubmatch(b []byte, n int) [][][]byte {$/;"	f
FindAllSubmatchIndex	./regexp/regexp.go	/^func (re *Regexp) FindAllSubmatchIndex(b []byte, n int) [][]int {$/;"	f
FindClose	./syscall/zsyscall_windows.go	/^func FindClose(handle Handle) (err error) {$/;"	f
FindExportData	./go/internal/gcimporter/exportdata.go	/^func FindExportData(r *bufio.Reader) (err error) {$/;"	f
FindFirstFile	./syscall/syscall_windows.go	/^func FindFirstFile(name *uint16, data *Win32finddata) (handle Handle, err error) {$/;"	f
FindIndex	./regexp/regexp.go	/^func (re *Regexp) FindIndex(b []byte) (loc []int) {$/;"	f
FindNextFile	./syscall/syscall_windows.go	/^func FindNextFile(handle Handle, data *Win32finddata) (err error) {$/;"	f
FindPkg	./go/internal/gcimporter/gcimporter.go	/^func FindPkg(path, srcDir string) (filename, id string) {$/;"	f
FindProc	./syscall/dll_windows.go	/^func (d *DLL) FindProc(name string) (proc *Proc, err error) {$/;"	f
FindProcess	./os/doc.go	/^func FindProcess(pid int) (p *Process, err error) {$/;"	f
FindReaderIndex	./regexp/regexp.go	/^func (re *Regexp) FindReaderIndex(r io.RuneReader) (loc []int) {$/;"	f
FindReaderSubmatchIndex	./regexp/regexp.go	/^func (re *Regexp) FindReaderSubmatchIndex(r io.RuneReader) []int {$/;"	f
FindString	./regexp/regexp.go	/^func (re *Regexp) FindString(s string) string {$/;"	f
FindStringIndex	./regexp/regexp.go	/^func (re *Regexp) FindStringIndex(s string) (loc []int) {$/;"	f
FindStringSubmatch	./regexp/regexp.go	/^func (re *Regexp) FindStringSubmatch(s string) []string {$/;"	f
FindStringSubmatchIndex	./regexp/regexp.go	/^func (re *Regexp) FindStringSubmatchIndex(s string) []int {$/;"	f
FindSubmatch	./regexp/regexp.go	/^func (re *Regexp) FindSubmatch(b []byte) [][]byte {$/;"	f
FindSubmatchIndex	./regexp/regexp.go	/^func (re *Regexp) FindSubmatchIndex(b []byte) []int {$/;"	f
FindTest	./regexp/find_test.go	/^type FindTest struct {$/;"	t
FinishType	./cmd/cgo/gcc.go	/^func (c *typeConv) FinishType(pos token.Pos) {$/;"	f
Fintto64	./runtime/export_test.go	/^var Fintto64 = fintto64$/;"	v
First	./compress/bzip2/move_to_front.go	/^func (m moveToFrontDecoder) First() byte {$/;"	f
Fix	./container/heap/heap.go	/^func Fix(h Interface, i int) {$/;"	f
FixedDecimal	./strconv/extfloat.go	/^func (f *extFloat) FixedDecimal(d *decimalSlice, n int) bool {$/;"	f
FixedZone	./time/zoneinfo.go	/^func FixedZone(name string, offset int) *Location {$/;"	f
Fixlargeoffset	./cmd/compile/internal/gc/cgen.go	/^func Fixlargeoffset(n *Node) {$/;"	f
Fixwd	./syscall/pwd_plan9.go	/^func Fixwd() {$/;"	f
Flag	./encoding/asn1/asn1.go	/^type Flag bool$/;"	t
Flag	./flag/flag.go	/^type Flag struct {$/;"	t
Flag	./fmt/print.go	/^func (p *pp) Flag(b int) bool {$/;"	f
FlagServer	./net/http/triv.go	/^func FlagServer(w http.ResponseWriter, req *http.Request) {$/;"	f
FlagSet	./cmd/pprof/internal/plugin/plugin.go	/^type FlagSet interface {$/;"	t
FlagSet	./flag/flag.go	/^type FlagSet struct {$/;"	t
Flagcount	./cmd/internal/obj/flag.go	/^func Flagcount(name, usage string, val *int) {$/;"	f
Flagfn0	./cmd/internal/obj/flag.go	/^func Flagfn0(name, usage string, f func()) {$/;"	f
Flagfn1	./cmd/internal/obj/flag.go	/^func Flagfn1(name, usage string, f func(string)) {$/;"	f
Flagfn2	./cmd/internal/obj/flag.go	/^func Flagfn2(string, string, func(string, string)) { panic("flag") }$/;"	f
Flagint32	./cmd/internal/obj/flag.go	/^func Flagint32(name, usage string, val *int32) {$/;"	f
Flagint64	./cmd/internal/obj/flag.go	/^func Flagint64(name, usage string, val *int64) {$/;"	f
Flagparse	./cmd/internal/obj/flag.go	/^func Flagparse(usage func()) {$/;"	f
Flagprint	./cmd/internal/obj/flag.go	/^func Flagprint(fd int) {$/;"	f
Flags	./log/log.go	/^func (l *Logger) Flags() int {$/;"	f
Flags	./log/log.go	/^func Flags() int {$/;"	f
Flags	./net/interface.go	/^type Flags uint$/;"	t
Flags	./regexp/syntax/parse.go	/^type Flags uint16$/;"	t
Flagstr	./cmd/internal/obj/flag.go	/^func Flagstr(name, usage string, val *string) {$/;"	f
Float	./cmd/compile/internal/big/bits_test.go	/^func (bits Bits) Float() *Float {$/;"	f
Float	./cmd/compile/internal/big/float.go	/^type Float struct {$/;"	t
Float	./encoding/gob/codec_test.go	/^type Float float64$/;"	t
Float	./expvar/expvar.go	/^type Float struct {$/;"	t
Float	./math/big/bits_test.go	/^func (bits Bits) Float() *Float {$/;"	f
Float	./math/big/float.go	/^type Float struct {$/;"	t
Float	./reflect/value.go	/^func (v Value) Float() float64 {$/;"	f
Float32	./cmd/compile/internal/big/float.go	/^func (x *Float) Float32() (float32, Accuracy) {$/;"	f
Float32	./cmd/compile/internal/big/rat.go	/^func (x *Rat) Float32() (f float32, exact bool) {$/;"	f
Float32	./math/big/float.go	/^func (x *Float) Float32() (float32, Accuracy) {$/;"	f
Float32	./math/big/rat.go	/^func (x *Rat) Float32() (f float32, exact bool) {$/;"	f
Float32	./math/rand/rand.go	/^func (r *Rand) Float32() float32 {$/;"	f
Float32	./math/rand/rand.go	/^func Float32() float32 { return globalRand.Float32() }$/;"	f
Float32Imm	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Float32Imm float32$/;"	t
Float32Val	./go/constant/value.go	/^func Float32Val(x Value) (float32, bool) {$/;"	f
Float32bits	./math/unsafe.go	/^func Float32bits(f float32) uint32 { return *(*uint32)(unsafe.Pointer(&f)) }$/;"	f
Float32frombits	./math/unsafe.go	/^func Float32frombits(b uint32) float32 { return *(*float32)(unsafe.Pointer(&b)) }$/;"	f
Float64	./cmd/compile/internal/big/float.go	/^func (x *Float) Float64() (float64, Accuracy) {$/;"	f
Float64	./cmd/compile/internal/big/rat.go	/^func (x *Rat) Float64() (f float64, exact bool) {$/;"	f
Float64	./cmd/pprof/pprof.go	/^func (flags) Float64(o string, d float64, c string) *float64 {$/;"	f
Float64	./encoding/json/decode.go	/^func (n Number) Float64() (float64, error) {$/;"	f
Float64	./flag/flag.go	/^func (f *FlagSet) Float64(name string, value float64, usage string) *float64 {$/;"	f
Float64	./flag/flag.go	/^func Float64(name string, value float64, usage string) *float64 {$/;"	f
Float64	./math/big/float.go	/^func (x *Float) Float64() (float64, Accuracy) {$/;"	f
Float64	./math/big/rat.go	/^func (x *Rat) Float64() (f float64, exact bool) {$/;"	f
Float64	./math/rand/rand.go	/^func (r *Rand) Float64() float64 {$/;"	f
Float64	./math/rand/rand.go	/^func Float64() float64 { return globalRand.Float64() }$/;"	f
Float64Imm	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Float64Imm float32$/;"	t
Float64Slice	./sort/sort.go	/^type Float64Slice []float64$/;"	t
Float64Val	./go/constant/value.go	/^func Float64Val(x Value) (float64, bool) {$/;"	f
Float64Var	./flag/flag.go	/^func (f *FlagSet) Float64Var(p *float64, name string, value float64, usage string) {$/;"	f
Float64Var	./flag/flag.go	/^func Float64Var(p *float64, name string, value float64, usage string) {$/;"	f
Float64bits	./math/unsafe.go	/^func Float64bits(f float64) uint64 { return *(*uint64)(unsafe.Pointer(&f)) }$/;"	f
Float64frombits	./math/unsafe.go	/^func Float64frombits(b uint64) float64 { return *(*float64)(unsafe.Pointer(&b)) }$/;"	f
Float64s	./sort/sort.go	/^func Float64s(a []float64) { Sort(Float64Slice(a)) }$/;"	f
Float64sAreSorted	./sort/sort.go	/^func Float64sAreSorted(a []float64) bool { return IsSorted(Float64Slice(a)) }$/;"	f
FloatInt	./runtime/map_test.go	/^type FloatInt struct {$/;"	t
FloatState32	./runtime/defs_darwin.go	/^type FloatState32 C.struct_i386_float_state$/;"	t
FloatState64	./runtime/defs_darwin.go	/^type FloatState64 C.struct_x86_float_state64$/;"	t
FloatString	./cmd/compile/internal/big/ratconv.go	/^func (x *Rat) FloatString(prec int) string {$/;"	f
FloatString	./math/big/ratconv.go	/^func (x *Rat) FloatString(prec int) string {$/;"	f
FloatTest	./fmt/scan_test.go	/^type FloatTest struct {$/;"	t
FloatType	./builtin/builtin.go	/^type FloatType float32$/;"	t
FloatType	./debug/dwarf/type.go	/^type FloatType struct {$/;"	t
FloatingSaveArea	./runtime/defs_windows.go	/^type FloatingSaveArea C.FLOATING_SAVE_AREA$/;"	t
Flock	./syscall/zsyscall_darwin_386.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_darwin_amd64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_darwin_arm.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_darwin_arm64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_dragonfly_amd64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_freebsd_386.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_freebsd_amd64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_freebsd_arm.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_linux_386.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_linux_amd64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_linux_arm.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_linux_arm64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_linux_ppc64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_linux_ppc64le.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_netbsd_386.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_netbsd_amd64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_netbsd_arm.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_openbsd_386.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_openbsd_amd64.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock	./syscall/zsyscall_openbsd_arm.go	/^func Flock(fd int, how int) (err error) {$/;"	f
Flock_t	./syscall/types_darwin.go	/^type Flock_t C.struct_flock$/;"	t
Flock_t	./syscall/types_dragonfly.go	/^type Flock_t C.struct_flock$/;"	t
Flock_t	./syscall/types_freebsd.go	/^type Flock_t C.struct_flock$/;"	t
Flock_t	./syscall/types_linux.go	/^type Flock_t C.struct_flock$/;"	t
Flock_t	./syscall/types_netbsd.go	/^type Flock_t C.struct_flock$/;"	t
Flock_t	./syscall/types_openbsd.go	/^type Flock_t C.struct_flock$/;"	t
Flock_t	./syscall/types_solaris.go	/^type Flock_t C.struct_flock$/;"	t
Flock_t	./syscall/ztypes_darwin_386.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_darwin_amd64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_darwin_arm.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_darwin_arm64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_dragonfly_amd64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_freebsd_386.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_freebsd_amd64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_freebsd_arm.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_linux_386.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_linux_amd64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_linux_arm.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_linux_arm64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_linux_ppc64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_linux_ppc64le.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_netbsd_386.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_netbsd_amd64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_netbsd_arm.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_openbsd_386.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_openbsd_amd64.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_openbsd_arm.go	/^type Flock_t struct {$/;"	t
Flock_t	./syscall/ztypes_solaris_amd64.go	/^type Flock_t struct {$/;"	t
Floor	./math/floor.go	/^func Floor(x float64) float64$/;"	f
Flow	./cmd/compile/internal/gc/go.go	/^type Flow struct {$/;"	t
Flowend	./cmd/compile/internal/gc/popt.go	/^func Flowend(graph *Graph) {$/;"	f
Flowstart	./cmd/compile/internal/gc/popt.go	/^func Flowstart(firstp *obj.Prog, newData func() interface{}) *Graph {$/;"	f
FloydSteinberg	./image/draw/draw.go	/^var FloydSteinberg Drawer = floydSteinberg{}$/;"	v
Flush	./archive/tar/writer.go	/^func (tw *Writer) Flush() error {$/;"	f
Flush	./archive/zip/writer.go	/^func (w *Writer) Flush() error {$/;"	f
Flush	./bufio/bufio.go	/^func (b *Writer) Flush() error {$/;"	f
Flush	./cmd/go/list.go	/^func (t *TrackingWriter) Flush() {$/;"	f
Flush	./cmd/internal/obj/util.go	/^func (b *Biobuf) Flush() error {$/;"	f
Flush	./compress/flate/deflate.go	/^func (w *Writer) Flush() error {$/;"	f
Flush	./compress/gzip/gzip.go	/^func (z *Writer) Flush() error {$/;"	f
Flush	./compress/zlib/writer.go	/^func (z *Writer) Flush() error {$/;"	f
Flush	./encoding/csv/writer.go	/^func (w *Writer) Flush() {$/;"	f
Flush	./encoding/xml/marshal.go	/^func (enc *Encoder) Flush() error {$/;"	f
Flush	./net/http/cgi/child.go	/^func (r *response) Flush() {$/;"	f
Flush	./net/http/fcgi/child.go	/^func (r *response) Flush() {$/;"	f
Flush	./net/http/httptest/recorder.go	/^func (rw *ResponseRecorder) Flush() {$/;"	f
Flush	./net/http/server.go	/^func (w *response) Flush() {$/;"	f
Flush	./text/tabwriter/tabwriter.go	/^func (b *Writer) Flush() (err error) {$/;"	f
FlushAfterChunkWriter	./net/http/internal/chunked.go	/^type FlushAfterChunkWriter struct {$/;"	t
FlushBpf	./syscall/bpf_bsd.go	/^func FlushBpf(fd int) error {$/;"	f
FlushFileBuffers	./syscall/zsyscall_windows.go	/^func FlushFileBuffers(handle Handle) (err error) {$/;"	f
FlushViewOfFile	./syscall/zsyscall_windows.go	/^func FlushViewOfFile(addr uintptr, length uintptr) (err error) {$/;"	f
Flusher	./net/http/server.go	/^type Flusher interface {$/;"	t
Flusherrors	./cmd/compile/internal/gc/subr.go	/^func Flusherrors() {$/;"	f
Fmul64	./runtime/export_test.go	/^var Fmul64 = fmul64$/;"	v
Fn	./syscall/mksyscall_windows.go	/^type Fn struct {$/;"	t
FoldCategory	./unicode/tables.go	/^var FoldCategory = map[string]*RangeTable{$/;"	v
FoldScript	./unicode/tables.go	/^var FoldScript = map[string]*RangeTable{}$/;"	v
Foo	./cmd/compile/internal/gc/esc.go	/^	\/\/	func (b *Buffer) Foo() {$/;"	f
Foo	./encoding/gob/type_test.go	/^type Foo struct {$/;"	t
Foo	./encoding/json/encode_test.go	/^	type Foo struct {$/;"	t
Foo	./reflect/example_test.go	/^	\/\/ type Foo is to use a *Foo value.$/;"	t
Foo	./reflect/type.go	/^\/\/ For example, if t represents type Foo, PtrTo(t) represents *Foo.$/;"	t
Foo	./runtime/mfinal.go	/^		\/\/	var Foo = &Object{}$/;"	v
Foo	./runtime/race/testdata/mop_test.go	/^func (b *Base) Foo() int {$/;"	f
Foo	./runtime/race/testdata/mop_test.go	/^func (d DeferT) Foo() {$/;"	f
Foo	./runtime/race/testdata/mop_test.go	/^func (p *InterImpl2) Foo(x int) {$/;"	f
Foo	./runtime/race/testdata/mop_test.go	/^func (p InterImpl) Foo(x int) {$/;"	f
Foo	./runtime/race/testdata/regression_test.go	/^func (i Int) Foo() *struct{ b bool } {$/;"	f
For	./go/importer/importer.go	/^func For(compiler string, lookup Lookup) types.Importer {$/;"	f
ForceAusForTesting	./time/export_windows_test.go	/^func ForceAusForTesting() {$/;"	f
ForceUSPacificForTesting	./time/export_test.go	/^func ForceUSPacificForTesting() {$/;"	f
Forget	./internal/singleflight/singleflight.go	/^func (g *Group) Forget(key string) {$/;"	f
ForkExec	./syscall/exec_plan9.go	/^func ForkExec(argv0 string, argv []string, attr *ProcAttr) (pid int, err error) {$/;"	f
ForkExec	./syscall/exec_unix.go	/^func ForkExec(argv0 string, argv []string, attr *ProcAttr) (pid int, err error) {$/;"	f
ForkLock	./syscall/exec_plan9.go	/^var ForkLock sync.RWMutex$/;"	v
ForkLock	./syscall/exec_unix.go	/^var ForkLock sync.RWMutex$/;"	v
ForkLock	./syscall/exec_windows.go	/^var ForkLock sync.RWMutex$/;"	v
ForkLock	./syscall/syscall_nacl.go	/^var ForkLock sync.RWMutex$/;"	v
Form	./mime/multipart/formdata.go	/^type Form struct {$/;"	t
FormDataContentType	./mime/multipart/writer.go	/^func (w *Writer) FormDataContentType() string {$/;"	f
FormFile	./net/http/request.go	/^func (r *Request) FormFile(key string) (multipart.File, *multipart.FileHeader, error) {$/;"	f
FormName	./mime/multipart/multipart.go	/^func (p *Part) FormName() string {$/;"	f
FormValue	./net/http/request.go	/^func (r *Request) FormValue(key string) string {$/;"	f
Format	./cmd/compile/internal/big/ftoa.go	/^func (x *Float) Format(s fmt.State, format rune) {$/;"	f
Format	./cmd/compile/internal/big/intconv.go	/^func (x *Int) Format(s fmt.State, ch rune) {$/;"	f
Format	./cmd/vet/testdata/print.go	/^func (*Formatter) Format(fmt.State, rune) {$/;"	f
Format	./fmt/fmt_test.go	/^func (byteFormatter) Format(f State, _ rune) {$/;"	f
Format	./fmt/fmt_test.go	/^func (f F) Format(s State, c rune) {$/;"	f
Format	./fmt/fmt_test.go	/^func (flagPrinter) Format(f State, c rune) {$/;"	f
Format	./fmt/fmt_test.go	/^func (p PanicF) Format(f State, c rune) {$/;"	f
Format	./internal/format/format.go	/^func Format($/;"	f
Format	./math/big/ftoa.go	/^func (x *Float) Format(s fmt.State, format rune) {$/;"	f
Format	./math/big/intconv.go	/^func (x *Int) Format(s fmt.State, ch rune) {$/;"	f
Format	./time/format.go	/^func (t Time) Format(layout string) string {$/;"	f
FormatBool	./strconv/atob.go	/^func FormatBool(b bool) string {$/;"	f
FormatError	./debug/elf/file.go	/^type FormatError struct {$/;"	t
FormatError	./debug/macho/file.go	/^type FormatError struct {$/;"	t
FormatError	./debug/pe/file.go	/^type FormatError struct {$/;"	t
FormatError	./image/jpeg/reader.go	/^type FormatError string$/;"	t
FormatError	./image/png/reader.go	/^type FormatError string$/;"	t
FormatFloat	./strconv/ftoa.go	/^func FormatFloat(f float64, fmt byte, prec, bitSize int) string {$/;"	f
FormatInt	./strconv/itoa.go	/^func FormatInt(i int64, base int) string {$/;"	f
FormatMediaType	./mime/mediatype.go	/^func FormatMediaType(t string, param map[string]string) string {$/;"	f
FormatMessage	./syscall/syscall_windows.go	/^func FormatMessage(flags uint32, msgsrc uint32, msgid uint32, langid uint32, buf []uint16, args *byte) (n uint32, err error) {$/;"	f
FormatTest	./time/format_test.go	/^type FormatTest struct {$/;"	t
FormatUint	./strconv/itoa.go	/^func FormatUint(i uint64, base int) string {$/;"	f
Formatter	./cmd/vet/testdata/print.go	/^type Formatter bool$/;"	t
Formatter	./fmt/print.go	/^type Formatter interface {$/;"	t
Fpathconf	./syscall/zsyscall_darwin_386.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_darwin_amd64.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_darwin_arm.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_darwin_arm64.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_dragonfly_amd64.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_freebsd_386.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_freebsd_amd64.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_freebsd_arm.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_netbsd_386.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_netbsd_amd64.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_netbsd_arm.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_openbsd_386.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_openbsd_amd64.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_openbsd_arm.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpathconf	./syscall/zsyscall_solaris_amd64.go	/^func Fpathconf(fd int, name int) (val int, err error) {$/;"	f
Fpreg	./runtime/defs2_linux.go	/^type Fpreg C.struct__fpreg$/;"	t
Fpreg1	./runtime/defs1_linux.go	/^type Fpreg1 C.struct__fpreg$/;"	t
Fpregset	./runtime/defs_solaris.go	/^type Fpregset C.fpregset_t$/;"	t
Fprint	./fmt/print.go	/^func Fprint(w io.Writer, a ...interface{}) (n int, err error) {$/;"	f
Fprint	./go/ast/print.go	/^func Fprint(w io.Writer, fset *token.FileSet, x interface{}, f FieldFilter) (err error) {$/;"	f
Fprint	./go/printer/printer.go	/^func (cfg *Config) Fprint(output io.Writer, fset *token.FileSet, node interface{}) error {$/;"	f
Fprint	./go/printer/printer.go	/^func Fprint(output io.Writer, fset *token.FileSet, node interface{}) error {$/;"	f
Fprintf	./fmt/print.go	/^func Fprintf(w io.Writer, format string, a ...interface{}) (n int, err error) {$/;"	f
Fprintln	./fmt/print.go	/^func Fprintln(w io.Writer, a ...interface{}) (n int, err error) {$/;"	f
Fpstate	./runtime/defs1_linux.go	/^type Fpstate C.struct__libc_fpstate$/;"	t
Fpstate	./runtime/defs2_linux.go	/^type Fpstate C.struct__fpstate$/;"	t
Fpstate1	./runtime/defs1_linux.go	/^type Fpstate1 C.struct__fpstate$/;"	t
Fpxreg	./runtime/defs1_linux.go	/^type Fpxreg C.struct__libc_fpxreg$/;"	t
Fpxreg	./runtime/defs2_linux.go	/^type Fpxreg C.struct__fpxreg$/;"	t
Fpxreg1	./runtime/defs1_linux.go	/^type Fpxreg1 C.struct__fpxreg$/;"	t
Frame	./cmd/pprof/internal/plugin/plugin.go	/^type Frame struct {$/;"	t
Frame	./internal/trace/parser.go	/^type Frame struct {$/;"	t
FreeAddrInfoW	./syscall/zsyscall_windows.go	/^func FreeAddrInfoW(addrinfo *AddrinfoW) {$/;"	f
FreeEnvironmentStrings	./syscall/zsyscall_windows.go	/^func FreeEnvironmentStrings(envs *uint16) (err error) {$/;"	f
FreeLibrary	./syscall/zsyscall_windows.go	/^func FreeLibrary(handle Handle) (err error) {$/;"	f
FreeOSMemory	./runtime/debug/garbage.go	/^func FreeOSMemory() {$/;"	f
Frexp	./math/frexp.go	/^func Frexp(f float64) (frac float64, exp int)$/;"	f
From3Offset	./cmd/internal/obj/link.go	/^func (p *Prog) From3Offset() int64 {$/;"	f
From3Type	./cmd/internal/obj/link.go	/^func (p *Prog) From3Type() int16 {$/;"	f
FromSlash	./path/filepath/path.go	/^func FromSlash(path string) string {$/;"	f
Front	./container/list/list.go	/^func (l *List) Front() *Element {$/;"	f
Fscan	./fmt/scan.go	/^func Fscan(r io.Reader, a ...interface{}) (n int, err error) {$/;"	f
Fscanf	./fmt/scan.go	/^func Fscanf(r io.Reader, format string, a ...interface{}) (n int, err error) {$/;"	f
Fscanln	./fmt/scan.go	/^func Fscanln(r io.Reader, a ...interface{}) (n int, err error) {$/;"	f
Fsid	./syscall/types_darwin.go	/^type Fsid C.struct_fsid$/;"	t
Fsid	./syscall/types_dragonfly.go	/^type Fsid C.struct_fsid$/;"	t
Fsid	./syscall/types_freebsd.go	/^type Fsid C.struct_fsid$/;"	t
Fsid	./syscall/types_linux.go	/^type Fsid C.fsid_t$/;"	t
Fsid	./syscall/types_netbsd.go	/^type Fsid C.fsid_t$/;"	t
Fsid	./syscall/types_openbsd.go	/^type Fsid C.fsid_t$/;"	t
Fsid	./syscall/ztypes_darwin_386.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_darwin_amd64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_darwin_arm.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_darwin_arm64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_dragonfly_amd64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_freebsd_386.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_freebsd_amd64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_freebsd_arm.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_linux_386.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_linux_amd64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_linux_arm.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_linux_arm64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_linux_ppc64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_linux_ppc64le.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_netbsd_386.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_netbsd_amd64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_netbsd_arm.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_openbsd_386.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_openbsd_amd64.go	/^type Fsid struct {$/;"	t
Fsid	./syscall/ztypes_openbsd_arm.go	/^type Fsid struct {$/;"	t
Fstat	./syscall/fd_nacl.go	/^func Fstat(fd int, st *Stat_t) error {$/;"	f
Fstat	./syscall/zsyscall_darwin_386.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_darwin_amd64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_darwin_arm.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_darwin_arm64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_dragonfly_amd64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_freebsd_386.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_freebsd_amd64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_freebsd_arm.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_linux_386.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_linux_amd64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_linux_arm.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_linux_arm64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_linux_ppc64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_linux_ppc64le.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_netbsd_386.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_netbsd_amd64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_netbsd_arm.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_openbsd_386.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_openbsd_amd64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_openbsd_arm.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstat	./syscall/zsyscall_plan9_386.go	/^func Fstat(fd int, edir []byte) (n int, err error) {$/;"	f
Fstat	./syscall/zsyscall_plan9_amd64.go	/^func Fstat(fd int, edir []byte) (n int, err error) {$/;"	f
Fstat	./syscall/zsyscall_solaris_amd64.go	/^func Fstat(fd int, stat *Stat_t) (err error) {$/;"	f
Fstatat	./syscall/zsyscall_linux_arm64.go	/^func Fstatat(fd int, path string, stat *Stat_t, flags int) (err error) {$/;"	f
Fstatfs	./syscall/syscall_linux_386.go	/^func Fstatfs(fd int, buf *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/syscall_linux_arm.go	/^func Fstatfs(fd int, buf *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_darwin_386.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_darwin_amd64.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_darwin_arm.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_darwin_arm64.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_dragonfly_amd64.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_freebsd_386.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_freebsd_amd64.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_freebsd_arm.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_linux_amd64.go	/^func Fstatfs(fd int, buf *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_linux_arm64.go	/^func Fstatfs(fd int, buf *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_linux_ppc64.go	/^func Fstatfs(fd int, buf *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_linux_ppc64le.go	/^func Fstatfs(fd int, buf *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_openbsd_386.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_openbsd_amd64.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstatfs	./syscall/zsyscall_openbsd_arm.go	/^func Fstatfs(fd int, stat *Statfs_t) (err error) {$/;"	f
Fstore_t	./syscall/types_darwin.go	/^type Fstore_t C.struct_fstore$/;"	t
Fstore_t	./syscall/ztypes_darwin_386.go	/^type Fstore_t struct {$/;"	t
Fstore_t	./syscall/ztypes_darwin_amd64.go	/^type Fstore_t struct {$/;"	t
Fstore_t	./syscall/ztypes_darwin_arm.go	/^type Fstore_t struct {$/;"	t
Fstore_t	./syscall/ztypes_darwin_arm64.go	/^type Fstore_t struct {$/;"	t
Fsub64	./runtime/export_test.go	/^var Fsub64 = fsub64$/;"	v
Fsync	./syscall/fs_nacl.go	/^func Fsync(fd int) error {$/;"	f
Fsync	./syscall/syscall_windows.go	/^func Fsync(fd Handle) (err error) {$/;"	f
Fsync	./syscall/zsyscall_darwin_386.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_darwin_amd64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_darwin_arm.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_darwin_arm64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_dragonfly_amd64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_freebsd_386.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_freebsd_amd64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_freebsd_arm.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_linux_386.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_linux_amd64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_linux_arm.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_linux_arm64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_linux_ppc64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_linux_ppc64le.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_netbsd_386.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_netbsd_amd64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_netbsd_arm.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_openbsd_386.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_openbsd_amd64.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_openbsd_arm.go	/^func Fsync(fd int) (err error) {$/;"	f
Fsync	./syscall/zsyscall_solaris_amd64.go	/^func Fsync(fd int) (err error) {$/;"	f
FtoB	./cmd/compile/internal/amd64/reg.go	/^func FtoB(f int) uint64 {$/;"	f
FtoB	./cmd/compile/internal/x86/reg.go	/^func FtoB(f int) uint64 {$/;"	f
Ftruncate	./syscall/fs_nacl.go	/^func Ftruncate(fd int, length int64) error {$/;"	f
Ftruncate	./syscall/syscall_windows.go	/^func Ftruncate(fd Handle, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_darwin_386.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_darwin_amd64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_darwin_arm.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_darwin_arm64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_dragonfly_amd64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_freebsd_386.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_freebsd_amd64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_freebsd_arm.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_linux_386.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_linux_amd64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_linux_arm.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_linux_arm64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_linux_ppc64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_linux_ppc64le.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_netbsd_386.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_netbsd_amd64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_netbsd_arm.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_openbsd_386.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_openbsd_amd64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_openbsd_arm.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
Ftruncate	./syscall/zsyscall_solaris_amd64.go	/^func Ftruncate(fd int, length int64) (err error) {$/;"	f
FullName	./go/types/object.go	/^func (obj *Func) FullName() string {$/;"	f
FullPath	./syscall/exec_windows.go	/^func FullPath(name string) (path string, err error) {$/;"	f
FullRune	./unicode/utf8/utf8.go	/^func FullRune(p []byte) bool {$/;"	f
FullRuneInString	./unicode/utf8/utf8.go	/^func FullRuneInString(s string) bool {$/;"	f
Func	./cmd/compile/internal/gc/syntax.go	/^type Func struct {$/;"	t
Func	./cmd/internal/goobj/read.go	/^type Func struct {$/;"	t
Func	./debug/gosym/symtab.go	/^type Func struct {$/;"	t
Func	./expvar/expvar.go	/^type Func func() interface{}$/;"	t
Func	./go/doc/doc.go	/^type Func struct {$/;"	t
Func	./go/types/object.go	/^type Func struct {$/;"	t
Func	./runtime/symtab.go	/^type Func struct {$/;"	t
FuncArg	./cmd/cgo/gcc.go	/^func (c *typeConv) FuncArg(dtype dwarf.Type, pos token.Pos) *Type {$/;"	f
FuncData	./cmd/internal/goobj/read.go	/^type FuncData struct {$/;"	t
FuncExtent	./cmd/cover/func.go	/^type FuncExtent struct {$/;"	t
FuncForPC	./runtime/symtab.go	/^func FuncForPC(pc uintptr) *Func {$/;"	f
FuncLayout	./reflect/export_test.go	/^func FuncLayout(t Type, rcvr Type) (frametype Type, argSize, retOffset uintptr, stack []byte, gc []byte, ptrs bool) {$/;"	f
FuncMap	./html/template/template.go	/^type FuncMap map[string]interface{}$/;"	t
FuncMap	./text/template/funcs.go	/^type FuncMap map[string]interface{}$/;"	t
FuncOf	./reflect/type.go	/^func FuncOf(in, out []Type, variadic bool) Type {$/;"	f
FuncPC	./runtime/export_test.go	/^var FuncPC = funcPC$/;"	v
FuncType	./cmd/api/testdata/src/pkg/p1/p1.go	/^type FuncType func(x, y int, s string) (b *B, err error)$/;"	t
FuncType	./cmd/cgo/gcc.go	/^func (c *typeConv) FuncType(dtype *dwarf.FuncType, pos token.Pos) *FuncType {$/;"	f
FuncType	./cmd/cgo/main.go	/^type FuncType struct {$/;"	t
FuncType	./debug/dwarf/type.go	/^type FuncType struct {$/;"	t
FuncVisitor	./cmd/cover/func.go	/^type FuncVisitor struct {$/;"	t
Funcdepth	./cmd/compile/internal/gc/go.go	/^var Funcdepth int32$/;"	v
Funcs	./html/template/template.go	/^func (t *Template) Funcs(funcMap FuncMap) *Template {$/;"	f
Funcs	./text/template/template.go	/^func (t *Template) Funcs(funcMap FuncMap) *Template {$/;"	f
Function	./cmd/pprof/internal/profile/profile.go	/^type Function struct {$/;"	t
Futexsleep	./runtime/export_futex_test.go	/^var Futexsleep = futexsleep$/;"	v
Futexwakeup	./runtime/export_futex_test.go	/^var Futexwakeup = futexwakeup$/;"	v
Futimes	./syscall/syscall_bsd.go	/^func Futimes(fd int, tv []Timeval) (err error) {$/;"	f
Futimes	./syscall/syscall_linux.go	/^func Futimes(fd int, tv []Timeval) (err error) {$/;"	f
Futimesat	./syscall/syscall_linux.go	/^func Futimesat(dirfd int, path string, tv []Timeval) (err error) {$/;"	f
Fv	./cmd/vet/testdata/nilfunc.go	/^var Fv = F$/;"	v
Fwstat	./syscall/zsyscall_plan9_386.go	/^func Fwstat(fd int, edir []byte) (err error) {$/;"	f
Fwstat	./syscall/zsyscall_plan9_amd64.go	/^func Fwstat(fd int, edir []byte) (err error) {$/;"	f
G	./cmd/api/testdata/src/pkg/p2/p2.go	/^func G() Twoer                {}$/;"	f
G	./cmd/go/go_test.go	/^	} else if _, err = f.WriteString(`func G() {}`); err != nil {$/;"	f
G	./runtime/cgo/libcgo.h	/^struct G$/;"	s
G	./runtime/cgo/libcgo.h	/^typedef struct G G;$/;"	t	typeref:struct:G
GC	./runtime/mgc.go	/^func GC() {$/;"	f
GCBits	./reflect/export_test.go	/^var GCBits = gcbits$/;"	v
GCD	./cmd/compile/internal/big/int.go	/^func (z *Int) GCD(x, y, a, b *Int) *Int {$/;"	f
GCD	./math/big/int.go	/^func (z *Int) GCD(x, y, a, b *Int) *Int {$/;"	f
GCFunc	./reflect/all_test.go	/^func GCFunc(args []Value) []Value {$/;"	f
GCMask	./runtime/export_test.go	/^func GCMask(x interface{}) (ret []byte) {$/;"	f
GCMethod	./reflect/all_test.go	/^func (p Point) GCMethod(k int) int {$/;"	f
GCProg	./cmd/compile/internal/gc/reflect.go	/^type GCProg struct {$/;"	t
GCProg	./cmd/link/internal/ld/data.go	/^type GCProg struct {$/;"	t
GCStats	./runtime/debug/garbage.go	/^type GCStats struct {$/;"	t
GDesc	./internal/trace/goroutines.go	/^type GDesc struct {$/;"	t
GIF	./image/gif/reader.go	/^type GIF struct {$/;"	t
GLOBL	./runtime/asm.s	/^GLOBL runtime·memstats(SB), NOPTR, $0$/;"	l
GLOBL	./runtime/asm.s	/^GLOBL runtime·mheap_(SB), NOPTR, $0$/;"	l
GLOBL	./runtime/asm.s	/^GLOBL runtime·no_pointers_stackmap(SB),RODATA, $8$/;"	l
GLOBL	./runtime/asm_386.s	/^GLOBL	runtime·mainPC(SB),RODATA,$4$/;"	l
GLOBL	./runtime/asm_386.s	/^GLOBL masks<>(SB),RODATA,$256$/;"	l
GLOBL	./runtime/asm_386.s	/^GLOBL shifts<>(SB),RODATA,$256$/;"	l
GLOBL	./runtime/asm_amd64.s	/^GLOBL	runtime·mainPC(SB),RODATA,$8$/;"	l
GLOBL	./runtime/asm_amd64.s	/^GLOBL masks<>(SB),RODATA,$256$/;"	l
GLOBL	./runtime/asm_amd64.s	/^GLOBL shifts<>(SB),RODATA,$256$/;"	l
GLOBL	./runtime/asm_amd64p32.s	/^GLOBL	runtime·mainPC(SB),RODATA,$4$/;"	l
GLOBL	./runtime/asm_arm.s	/^GLOBL	runtime·mainPC(SB),RODATA,$4$/;"	l
GLOBL	./runtime/asm_arm64.s	/^GLOBL	runtime·mainPC(SB),RODATA,$8$/;"	l
GLOBL	./runtime/asm_ppc64x.s	/^GLOBL	runtime·mainPC(SB),RODATA,$8$/;"	l
GLOBL	./runtime/rt0_android_arm.s	/^GLOBL _rt0_arm_android_argv(SB),NOPTR,$0x20$/;"	l
GLOBL	./runtime/rt0_android_arm.s	/^GLOBL _rt0_arm_android_argv0(SB),RODATA,$8$/;"	l
GLOBL	./runtime/rt0_android_arm.s	/^GLOBL _rt0_arm_android_auxv0(SB),RODATA,$4$/;"	l
GLOBL	./runtime/rt0_darwin_amd64.s	/^GLOBL _rt0_amd64_darwin_lib_argc<>(SB),NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_darwin_amd64.s	/^GLOBL _rt0_amd64_darwin_lib_argv<>(SB),NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_darwin_arm.s	/^GLOBL _rt0_arm_darwin_lib_argc<>(SB),NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_darwin_arm.s	/^GLOBL _rt0_arm_darwin_lib_argv<>(SB),NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_darwin_arm64.s	/^GLOBL _rt0_arm64_darwin_lib_argc<>(SB),NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_darwin_arm64.s	/^GLOBL _rt0_arm64_darwin_lib_argv<>(SB),NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_linux_386.s	/^GLOBL	runtime·_vdso(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_linux_386.s	/^GLOBL _rt0_386_linux_lib_argc<>(SB),NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_linux_386.s	/^GLOBL _rt0_386_linux_lib_argv<>(SB),NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_linux_amd64.s	/^GLOBL _rt0_amd64_linux_lib_argc<>(SB),NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_linux_amd64.s	/^GLOBL _rt0_amd64_linux_lib_argv<>(SB),NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_linux_arm.s	/^GLOBL _rt0_arm_linux_lib_argc<>(SB),NOPTR,$4$/;"	l
GLOBL	./runtime/rt0_linux_arm.s	/^GLOBL _rt0_arm_linux_lib_argv<>(SB),NOPTR,$4$/;"	l
GLOBL	./runtime/rt0_linux_arm.s	/^GLOBL bad_abi_msg(SB), RODATA, $45$/;"	l
GLOBL	./runtime/rt0_plan9_386.s	/^GLOBL _nprivates(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_plan9_386.s	/^GLOBL _privates(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_plan9_386.s	/^GLOBL _tos(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_plan9_386.s	/^GLOBL runtime·isplan9(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_plan9_amd64.s	/^GLOBL _nprivates(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_plan9_amd64.s	/^GLOBL _privates(SB), NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_plan9_amd64.s	/^GLOBL _tos(SB), NOPTR, $8$/;"	l
GLOBL	./runtime/rt0_plan9_amd64.s	/^GLOBL runtime·isplan9(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_solaris_amd64.s	/^GLOBL runtime·issolaris(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_windows_386.s	/^GLOBL runtime·iswindows(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/rt0_windows_amd64.s	/^GLOBL runtime·iswindows(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/sys_freebsd_386.s	/^GLOBL runtime·tlsoffset(SB),NOPTR,$4$/;"	l
GLOBL	./runtime/sys_netbsd_386.s	/^GLOBL runtime·tlsoffset(SB),NOPTR,$4$/;"	l
GLOBL	./runtime/sys_openbsd_386.s	/^GLOBL runtime·tlsoffset(SB),NOPTR,$4$/;"	l
GLOBL	./runtime/sys_windows_386.s	/^GLOBL runtime·cbctxts(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/sys_windows_amd64.s	/^GLOBL runtime·cbctxts(SB), NOPTR, $8$/;"	l
GLOBL	./runtime/tls_arm.s	/^GLOBL runtime·tlsg+0(SB), NOPTR, $4$/;"	l
GLOBL	./runtime/tls_arm64.s	/^GLOBL runtime·tls_g+0(SB), NOPTR, $8$/;"	l
GLOBL	./runtime/vlop_arm.s	/^GLOBL fast_udiv_tab<>(SB), RODATA, $64$/;"	l
GLOBL	./sync/atomic/asm_arm.s	/^GLOBL ok64<>(SB), NOPTR, $4$/;"	l
GLOBL	./sync/atomic/asm_linux_arm.s	/^GLOBL armCAS64(SB), NOPTR, $4$/;"	l
GNUSyntax	./cmd/internal/rsc.io/arm/armasm/gnu.go	/^func GNUSyntax(inst Inst) string {$/;"	f
GNUSyntax	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func GNUSyntax(inst Inst) string {$/;"	f
GOARCH	./cmd/internal/objfile/objfile.go	/^func (f *File) GOARCH() string {$/;"	f
GOARCH	./make.bat	/^set GOARCH=$/;"	v
GOARCH	./make.bat	/^set GOARCH=%GOHOSTARCH%$/;"	v
GOBUILDFAIL	./clean.bat	/^set GOBUILDFAIL=0$/;"	v
GOBUILDFAIL	./clean.bat	/^set GOBUILDFAIL=1$/;"	v
GOBUILDFAIL	./make.bat	/^set GOBUILDFAIL=0$/;"	v
GOBUILDFAIL	./make.bat	/^set GOBUILDFAIL=1$/;"	v
GOBUILDFAIL	./race.bat	/^set GOBUILDFAIL=1$/;"	v
GOBUILDFAIL	./run.bat	/^set GOBUILDFAIL=0$/;"	v
GOBUILDFAIL	./run.bat	/^set GOBUILDFAIL=1$/;"	v
GOEXPERIMENT	./cmd/internal/obj/libc.go	/^var GOEXPERIMENT string$/;"	v
GOMAXPROCS	./runtime/debug.go	/^func GOMAXPROCS(n int) int {$/;"	f
GOOS	./make.bat	/^set GOOS=$/;"	v
GOOS	./make.bat	/^set GOOS=%GOHOSTOS%$/;"	v
GOPATH	./run.bat	/^set GOPATH=$/;"	v
GOROOT	./make.bat	/^set GOROOT=%CD%$/;"	v
GOROOT	./make.bat	/^set GOROOT=%GOROOT_BOOTSTRAP%$/;"	v
GOROOT	./race.bat	/^set GOROOT=%CD%\\..$/;"	v
GOROOT	./runtime/extern.go	/^func GOROOT() string {$/;"	f
GOROOT_BOOTSTRAP	./make.bat	/^if "x%GOROOT_BOOTSTRAP%"=="x" set GOROOT_BOOTSTRAP=%HOMEDRIVE%%HOMEPATH%\\Go1.4$/;"	v
GOROOT_FINAL	./run.bat	/^set GOROOT_FINAL=$/;"	v
GO_ARGS	./runtime/funcdata.h	/^#define GO_ARGS	/;"	d
GO_RESULTS_INITIALIZED	./runtime/funcdata.h	/^#define GO_RESULTS_INITIALIZED	/;"	d
GUID	./syscall/ztypes_windows.go	/^type GUID struct {$/;"	t
Gamma	./math/gamma.go	/^func Gamma(x float64) float64 {$/;"	f
Gbranch	./cmd/compile/internal/gc/gsubr.go	/^func Gbranch(as int, t *Type, likely int) *obj.Prog {$/;"	f
GccgoInstallation	./go/internal/gccgoimporter/gccgoinstallation.go	/^type GccgoInstallation struct {$/;"	t
GenDecl	./cmd/vet/shadow.go	/^			f.Badf(spec.Pos(), "invalid AST: var GenDecl not ValueSpec")$/;"	v
GeneralCAS64	./sync/atomic/export_linux_arm_test.go	/^var GeneralCAS64 = generalCAS64$/;"	v
Generate	./cmd/pprof/internal/report/report.go	/^func Generate(w io.Writer, rpt *Report, obj plugin.ObjTool) error {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*certificateMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*certificateRequestMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*certificateStatusMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*certificateVerifyMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*clientHelloMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*clientKeyExchangeMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*finishedMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*newSessionTicketMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*nextProtoMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*serverHelloMsg) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./crypto/tls/handshake_messages_test.go	/^func (*sessionState) Generate(rand *rand.Rand, size int) reflect.Value {$/;"	f
Generate	./syscall/mksyscall_windows.go	/^func (src *Source) Generate(w io.Writer) error {$/;"	f
Generate	./testing/quick/quick_test.go	/^func (m myStruct) Generate(r *rand.Rand, _ int) reflect.Value {$/;"	f
GenerateKey	./crypto/dsa/dsa.go	/^func GenerateKey(priv *PrivateKey, rand io.Reader) error {$/;"	f
GenerateKey	./crypto/ecdsa/ecdsa.go	/^func GenerateKey(c elliptic.Curve, rand io.Reader) (priv *PrivateKey, err error) {$/;"	f
GenerateKey	./crypto/elliptic/elliptic.go	/^func GenerateKey(curve Curve, rand io.Reader) (priv []byte, x, y *big.Int, err error) {$/;"	f
GenerateKey	./crypto/rsa/rsa.go	/^func GenerateKey(random io.Reader, bits int) (priv *PrivateKey, err error) {$/;"	f
GenerateMultiPrimeKey	./crypto/rsa/rsa.go	/^func GenerateMultiPrimeKey(random io.Reader, nprimes int, bits int) (priv *PrivateKey, err error) {$/;"	f
GenerateParameters	./crypto/dsa/dsa.go	/^func GenerateParameters(params *Parameters, rand io.Reader, sizes ParameterSizes) (err error) {$/;"	f
Generator	./cmd/go/generate.go	/^type Generator struct {$/;"	t
Generator	./testing/quick/quick.go	/^type Generator interface {$/;"	t
Genlist	./cmd/compile/internal/gc/gen.go	/^func Genlist(l *NodeList) {$/;"	f
Get	./cmd/internal/obj/flag.go	/^func (f fn0) Get() interface{} { return nil }$/;"	f
Get	./cmd/internal/obj/flag.go	/^func (i *int32Value) Get() interface{} { return int32(*i) }$/;"	f
Get	./cmd/vet/main.go	/^func (ts *triState) Get() interface{} {$/;"	f
Get	./crypto/tls/common.go	/^func (c *lruSessionCache) Get(sessionKey string) (*ClientSessionState, bool) {$/;"	f
Get	./expvar/expvar.go	/^func (v *Map) Get(key string) Var {$/;"	f
Get	./expvar/expvar.go	/^func Get(name string) Var {$/;"	f
Get	./flag/flag.go	/^func (b *boolValue) Get() interface{} { return bool(*b) }$/;"	f
Get	./flag/flag.go	/^func (d *durationValue) Get() interface{} { return time.Duration(*d) }$/;"	f
Get	./flag/flag.go	/^func (f *float64Value) Get() interface{} { return float64(*f) }$/;"	f
Get	./flag/flag.go	/^func (i *int64Value) Get() interface{} { return int64(*i) }$/;"	f
Get	./flag/flag.go	/^func (i *intValue) Get() interface{} { return int(*i) }$/;"	f
Get	./flag/flag.go	/^func (i *uint64Value) Get() interface{} { return uint64(*i) }$/;"	f
Get	./flag/flag.go	/^func (i *uintValue) Get() interface{} { return uint(*i) }$/;"	f
Get	./flag/flag.go	/^func (s *stringValue) Get() interface{} { return string(*s) }$/;"	f
Get	./net/http/client.go	/^func (c *Client) Get(url string) (resp *Response, err error) {$/;"	f
Get	./net/http/client.go	/^func Get(url string) (resp *Response, err error) {$/;"	f
Get	./net/http/header.go	/^func (h Header) Get(key string) string {$/;"	f
Get	./net/http/transport.go	/^func (e *envOnce) Get() string {$/;"	f
Get	./net/mail/message.go	/^func (h Header) Get(key string) string {$/;"	f
Get	./net/textproto/header.go	/^func (h MIMEHeader) Get(key string) string {$/;"	f
Get	./net/url/url.go	/^func (v Values) Get(key string) string {$/;"	f
Get	./reflect/type.go	/^func (tag StructTag) Get(key string) string {$/;"	f
Get	./sync/example_test.go	/^func (httpPkg) Get(url string) {}$/;"	f
Get	./sync/pool.go	/^func (p *Pool) Get() interface{} {$/;"	f
GetAcceptExSockaddrs	./syscall/zsyscall_windows.go	/^func GetAcceptExSockaddrs(buf *byte, rxdatalen uint32, laddrlen uint32, raddrlen uint32, lrsa **RawSockaddrAny, lrsalen *int32, rrsa **RawSockaddrAny, rrsalen *int32) {$/;"	f
GetAdaptersAddresses	./internal/syscall/windows/zsyscall_windows.go	/^func GetAdaptersAddresses(family uint32, flags uint32, reserved uintptr, adapterAddresses *IpAdapterAddresses, sizeOfPointer *uint32) (errcode error) {$/;"	f
GetAdaptersInfo	./syscall/zsyscall_windows.go	/^func GetAdaptersInfo(ai *IpAdapterInfo, ol *uint32) (errcode error) {$/;"	f
GetAddrInfoW	./syscall/zsyscall_windows.go	/^func GetAddrInfoW(nodename *uint16, servicename *uint16, hints *AddrinfoW, result **AddrinfoW) (sockerr error) {$/;"	f
GetBinaryValue	./internal/syscall/windows/registry/value.go	/^func (k Key) GetBinaryValue(name string) (val []byte, valtype uint32, err error) {$/;"	f
GetCommandLine	./syscall/zsyscall_windows.go	/^func GetCommandLine() (cmd *uint16) {$/;"	f
GetComputerName	./syscall/zsyscall_windows.go	/^func GetComputerName(buf *uint16, n *uint32) (err error) {$/;"	f
GetComputerNameEx	./internal/syscall/windows/zsyscall_windows.go	/^func GetComputerNameEx(nameformat uint32, buf *uint16, n *uint32) (err error) {$/;"	f
GetConsoleMode	./syscall/zsyscall_windows.go	/^func GetConsoleMode(console Handle, mode *uint32) (err error) {$/;"	f
GetCurrentDirectory	./syscall/zsyscall_windows.go	/^func GetCurrentDirectory(buflen uint32, buf *uint16) (n uint32, err error) {$/;"	f
GetCurrentProcess	./syscall/zsyscall_windows.go	/^func GetCurrentProcess() (pseudoHandle Handle, err error) {$/;"	f
GetDLL	./runtime/syscall_windows_test.go	/^func GetDLL(t *testing.T, name string) *DLL {$/;"	f
GetEnvironmentStrings	./syscall/zsyscall_windows.go	/^func GetEnvironmentStrings() (envs *uint16, err error) {$/;"	f
GetEnvironmentVariable	./syscall/zsyscall_windows.go	/^func GetEnvironmentVariable(name *uint16, buffer *uint16, size uint32) (n uint32, err error) {$/;"	f
GetExitCodeProcess	./syscall/zsyscall_windows.go	/^func GetExitCodeProcess(handle Handle, exitcode *uint32) (err error) {$/;"	f
GetFileAttributes	./syscall/zsyscall_windows.go	/^func GetFileAttributes(name *uint16) (attrs uint32, err error) {$/;"	f
GetFileAttributesEx	./syscall/zsyscall_windows.go	/^func GetFileAttributesEx(name *uint16, level uint32, info *byte) (err error) {$/;"	f
GetFileInformationByHandle	./syscall/zsyscall_windows.go	/^func GetFileInformationByHandle(handle Handle, data *ByHandleFileInformation) (err error) {$/;"	f
GetFileType	./syscall/zsyscall_windows.go	/^func GetFileType(filehandle Handle) (n uint32, err error) {$/;"	f
GetFullPathName	./syscall/zsyscall_windows.go	/^func GetFullPathName(path *uint16, buflen uint32, buf *uint16, fname **uint16) (n uint32, err error) {$/;"	f
GetHostByName	./syscall/zsyscall_windows.go	/^func GetHostByName(name string) (h *Hostent, err error) {$/;"	f
GetIfEntry	./syscall/zsyscall_windows.go	/^func GetIfEntry(pIfRow *MibIfRow) (errcode error) {$/;"	f
GetImporter	./go/internal/gccgoimporter/gccgoinstallation.go	/^func (inst *GccgoInstallation) GetImporter(incpaths []string, initmap map[*types.Package]InitData) Importer {$/;"	f
GetImporter	./go/internal/gccgoimporter/importer.go	/^func GetImporter(searchpaths []string, initmap map[*types.Package]InitData) Importer {$/;"	f
GetIntegerValue	./internal/syscall/windows/registry/value.go	/^func (k Key) GetIntegerValue(name string) (val uint64, valtype uint32, err error) {$/;"	f
GetLastError	./syscall/zsyscall_windows.go	/^func GetLastError() (lasterr error) {$/;"	f
GetLengthSid	./syscall/zsyscall_windows.go	/^func GetLengthSid(sid *SID) (len uint32) {$/;"	f
GetLineTest	./encoding/pem/pem_test.go	/^type GetLineTest struct {$/;"	t
GetLongPathName	./syscall/zsyscall_windows.go	/^func GetLongPathName(path *uint16, buf *uint16, buflen uint32) (n uint32, err error) {$/;"	f
GetProcAddress	./syscall/zsyscall_windows.go	/^func GetProcAddress(module Handle, procname string) (proc uintptr, err error) {$/;"	f
GetProcessTimes	./syscall/zsyscall_windows.go	/^func GetProcessTimes(handle Handle, creationTime *Filetime, exitTime *Filetime, kernelTime *Filetime, userTime *Filetime) (err error) {$/;"	f
GetProtoByName	./syscall/zsyscall_windows.go	/^func GetProtoByName(name string) (p *Protoent, err error) {$/;"	f
GetQueuedCompletionStatus	./syscall/zsyscall_windows.go	/^func GetQueuedCompletionStatus(cphandle Handle, qty *uint32, key *uint32, overlapped **Overlapped, timeout uint32) (err error) {$/;"	f
GetRandom	./internal/syscall/unix/getrandom_linux.go	/^func GetRandom(p []byte, flags GetRandomFlag) (n int, err error) {$/;"	f
GetRandomFlag	./internal/syscall/unix/getrandom_linux.go	/^type GetRandomFlag uintptr$/;"	t
GetReg	./cmd/compile/internal/gc/gsubr.go	/^func GetReg(r int) int {$/;"	f
GetServByName	./syscall/zsyscall_windows.go	/^func GetServByName(name string, proto string) (s *Servent, err error) {$/;"	f
GetShortPathName	./syscall/zsyscall_windows.go	/^func GetShortPathName(longpath *uint16, shortpath *uint16, buflen uint32) (n uint32, err error) {$/;"	f
GetStartupInfo	./syscall/zsyscall_windows.go	/^func GetStartupInfo(startupInfo *StartupInfo) (err error) {$/;"	f
GetStdHandle	./syscall/zsyscall_windows.go	/^func GetStdHandle(stdhandle int) (handle Handle, err error) {$/;"	f
GetStringValue	./internal/syscall/windows/registry/value.go	/^func (k Key) GetStringValue(name string) (val string, valtype uint32, err error) {$/;"	f
GetStringsValue	./internal/syscall/windows/registry/value.go	/^func (k Key) GetStringsValue(name string) (val []string, valtype uint32, err error) {$/;"	f
GetSystemTimeAsFileTime	./syscall/zsyscall_windows.go	/^func GetSystemTimeAsFileTime(time *Filetime) {$/;"	f
GetTempPath	./syscall/zsyscall_windows.go	/^func GetTempPath(buflen uint32, buf *uint16) (n uint32, err error) {$/;"	f
GetThread	./runtime/crash_cgo_test.go	/^func GetThread() uint32 {$/;"	f
GetTimeZoneInformation	./syscall/zsyscall_windows.go	/^func GetTimeZoneInformation(tzi *Timezoneinformation) (rc uint32, err error) {$/;"	f
GetTokenInformation	./syscall/zsyscall_windows.go	/^func GetTokenInformation(t Token, infoClass uint32, info *byte, infoLen uint32, returnedLen *uint32) (err error) {$/;"	f
GetTokenPrimaryGroup	./syscall/security_windows.go	/^func (t Token) GetTokenPrimaryGroup() (*Tokenprimarygroup, error) {$/;"	f
GetTokenUser	./syscall/security_windows.go	/^func (t Token) GetTokenUser() (*Tokenuser, error) {$/;"	f
GetU	./text/template/exec_test.go	/^func (t *T) GetU() *U {$/;"	f
GetUserNameEx	./syscall/zsyscall_windows.go	/^func GetUserNameEx(nameFormat uint32, nameBuffre *uint16, nSize *uint32) (err error) {$/;"	f
GetUserProfileDirectory	./syscall/security_windows.go	/^func (t Token) GetUserProfileDirectory() (string, error) {$/;"	f
GetUserProfileDirectory	./syscall/zsyscall_windows.go	/^func GetUserProfileDirectory(t Token, dir *uint16, dirLen *uint32) (err error) {$/;"	f
GetValue	./internal/syscall/windows/registry/value.go	/^func (k Key) GetValue(name string, buf []byte) (n int, valtype uint32, err error) {$/;"	f
GetVersion	./syscall/zsyscall_windows.go	/^func GetVersion() (ver uint32, err error) {$/;"	f
Getcallerpc	./cmd/internal/obj/util.go	/^func Getcallerpc(interface{}) uintptr {$/;"	f
Getcwd	./syscall/fs_nacl.go	/^func Getcwd(buf []byte) (n int, err error) {$/;"	f
Getcwd	./syscall/zsyscall_linux_386.go	/^func Getcwd(buf []byte) (n int, err error) {$/;"	f
Getcwd	./syscall/zsyscall_linux_amd64.go	/^func Getcwd(buf []byte) (n int, err error) {$/;"	f
Getcwd	./syscall/zsyscall_linux_arm.go	/^func Getcwd(buf []byte) (n int, err error) {$/;"	f
Getcwd	./syscall/zsyscall_linux_arm64.go	/^func Getcwd(buf []byte) (n int, err error) {$/;"	f
Getcwd	./syscall/zsyscall_linux_ppc64.go	/^func Getcwd(buf []byte) (n int, err error) {$/;"	f
Getcwd	./syscall/zsyscall_linux_ppc64le.go	/^func Getcwd(buf []byte) (n int, err error) {$/;"	f
Getdents	./syscall/zsyscall_linux_386.go	/^func Getdents(fd int, buf []byte) (n int, err error) {$/;"	f
Getdents	./syscall/zsyscall_linux_amd64.go	/^func Getdents(fd int, buf []byte) (n int, err error) {$/;"	f
Getdents	./syscall/zsyscall_linux_arm.go	/^func Getdents(fd int, buf []byte) (n int, err error) {$/;"	f
Getdents	./syscall/zsyscall_linux_arm64.go	/^func Getdents(fd int, buf []byte) (n int, err error) {$/;"	f
Getdents	./syscall/zsyscall_linux_ppc64.go	/^func Getdents(fd int, buf []byte) (n int, err error) {$/;"	f
Getdents	./syscall/zsyscall_linux_ppc64le.go	/^func Getdents(fd int, buf []byte) (n int, err error) {$/;"	f
Getdents	./syscall/zsyscall_solaris_amd64.go	/^func Getdents(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/syscall_netbsd.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/syscall_openbsd.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_darwin_386.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_darwin_amd64.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_darwin_arm.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_darwin_arm64.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_dragonfly_amd64.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_freebsd_386.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_freebsd_amd64.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdirentries	./syscall/zsyscall_freebsd_arm.go	/^func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {$/;"	f
Getdtablesize	./syscall/zsyscall_darwin_386.go	/^func Getdtablesize() (size int) {$/;"	f
Getdtablesize	./syscall/zsyscall_darwin_amd64.go	/^func Getdtablesize() (size int) {$/;"	f
Getdtablesize	./syscall/zsyscall_darwin_arm.go	/^func Getdtablesize() (size int) {$/;"	f
Getdtablesize	./syscall/zsyscall_darwin_arm64.go	/^func Getdtablesize() (size int) {$/;"	f
Getdtablesize	./syscall/zsyscall_dragonfly_amd64.go	/^func Getdtablesize() (size int) {$/;"	f
Getdtablesize	./syscall/zsyscall_freebsd_386.go	/^func Getdtablesize() (size int) {$/;"	f
Getdtablesize	./syscall/zsyscall_freebsd_amd64.go	/^func Getdtablesize() (size int) {$/;"	f
Getdtablesize	./syscall/zsyscall_freebsd_arm.go	/^func Getdtablesize() (size int) {$/;"	f
Getegid	./os/proc.go	/^func Getegid() int { return syscall.Getegid() }$/;"	f
Getegid	./syscall/syscall_nacl.go	/^func Getegid() int                      { return 1 }$/;"	f
Getegid	./syscall/syscall_plan9.go	/^func Getegid() (egid int) { return -1 }$/;"	f
Getegid	./syscall/syscall_windows.go	/^func Getegid() (egid int)                { return -1 }$/;"	f
Getegid	./syscall/zsyscall_darwin_386.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_darwin_amd64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_darwin_arm.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_darwin_arm64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_dragonfly_amd64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_freebsd_386.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_freebsd_amd64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_freebsd_arm.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_linux_386.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_linux_amd64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_linux_arm.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_linux_arm64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_linux_ppc64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_linux_ppc64le.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_netbsd_386.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_netbsd_amd64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_netbsd_arm.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_openbsd_386.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_openbsd_amd64.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_openbsd_arm.go	/^func Getegid() (egid int) {$/;"	f
Getegid	./syscall/zsyscall_solaris_amd64.go	/^func Getegid() (egid int) {$/;"	f
Getenv	./os/env.go	/^func Getenv(key string) string {$/;"	f
Getenv	./syscall/env_plan9.go	/^func Getenv(key string) (value string, found bool) {$/;"	f
Getenv	./syscall/env_unix.go	/^func Getenv(key string) (value string, found bool) {$/;"	f
Getenv	./syscall/env_windows.go	/^func Getenv(key string) (value string, found bool) {$/;"	f
Geteuid	./os/proc.go	/^func Geteuid() int { return syscall.Geteuid() }$/;"	f
Geteuid	./syscall/syscall_nacl.go	/^func Geteuid() int                      { return 1 }$/;"	f
Geteuid	./syscall/syscall_plan9.go	/^func Geteuid() (euid int) { return -1 }$/;"	f
Geteuid	./syscall/syscall_windows.go	/^func Geteuid() (euid int)                { return -1 }$/;"	f
Geteuid	./syscall/zsyscall_darwin_386.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_darwin_amd64.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_darwin_arm.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_darwin_arm64.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_dragonfly_amd64.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_freebsd_386.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_freebsd_amd64.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_freebsd_arm.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_linux_386.go	/^func Geteuid() (euid int) {$/;"	f
Geteuid	./syscall/zsyscall_linux_amd64.go	/^func Geteuid() (euid int) {$/;"	f
Geteuid	./syscall/zsyscall_linux_arm.go	/^func Geteuid() (euid int) {$/;"	f
Geteuid	./syscall/zsyscall_linux_arm64.go	/^func Geteuid() (euid int) {$/;"	f
Geteuid	./syscall/zsyscall_linux_ppc64.go	/^func Geteuid() (euid int) {$/;"	f
Geteuid	./syscall/zsyscall_linux_ppc64le.go	/^func Geteuid() (euid int) {$/;"	f
Geteuid	./syscall/zsyscall_netbsd_386.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_netbsd_amd64.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_netbsd_arm.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_openbsd_386.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_openbsd_amd64.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_openbsd_arm.go	/^func Geteuid() (uid int) {$/;"	f
Geteuid	./syscall/zsyscall_solaris_amd64.go	/^func Geteuid() (euid int) {$/;"	f
Getfsstat	./syscall/syscall_darwin.go	/^func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {$/;"	f
Getfsstat	./syscall/syscall_dragonfly.go	/^func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {$/;"	f
Getfsstat	./syscall/syscall_freebsd.go	/^func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {$/;"	f
Getfsstat	./syscall/syscall_openbsd.go	/^func Getfsstat(buf []Statfs_t, flags int) (n int, err error) {$/;"	f
Getgid	./os/proc.go	/^func Getgid() int { return syscall.Getgid() }$/;"	f
Getgid	./syscall/syscall_nacl.go	/^func Getgid() int                       { return 1 }$/;"	f
Getgid	./syscall/syscall_plan9.go	/^func Getgid() (gid int)   { return -1 }$/;"	f
Getgid	./syscall/syscall_windows.go	/^func Getgid() (gid int)                  { return -1 }$/;"	f
Getgid	./syscall/zsyscall_darwin_386.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_darwin_amd64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_darwin_arm.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_darwin_arm64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_dragonfly_amd64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_freebsd_386.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_freebsd_amd64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_freebsd_arm.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_linux_386.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_linux_amd64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_linux_arm.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_linux_arm64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_linux_ppc64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_linux_ppc64le.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_netbsd_386.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_netbsd_amd64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_netbsd_arm.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_openbsd_386.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_openbsd_amd64.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_openbsd_arm.go	/^func Getgid() (gid int) {$/;"	f
Getgid	./syscall/zsyscall_solaris_amd64.go	/^func Getgid() (gid int) {$/;"	f
Getgo386	./cmd/internal/obj/util.go	/^func Getgo386() string {$/;"	f
Getgoarch	./cmd/internal/obj/util.go	/^func Getgoarch() string {$/;"	f
Getgoarm	./cmd/internal/obj/util.go	/^func Getgoarm() string {$/;"	f
Getgoextlinkenabled	./cmd/internal/obj/util.go	/^func Getgoextlinkenabled() string {$/;"	f
Getgoos	./cmd/internal/obj/util.go	/^func Getgoos() string {$/;"	f
Getgoroot	./cmd/internal/obj/util.go	/^func Getgoroot() string {$/;"	f
Getgoversion	./cmd/internal/obj/util.go	/^func Getgoversion() string {$/;"	f
Getgroups	./os/proc.go	/^func Getgroups() ([]int, error) {$/;"	f
Getgroups	./syscall/syscall_bsd.go	/^func Getgroups() (gids []int, err error) {$/;"	f
Getgroups	./syscall/syscall_linux.go	/^func Getgroups() (gids []int, err error) {$/;"	f
Getgroups	./syscall/syscall_nacl.go	/^func Getgroups() ([]int, error)         { return []int{1}, nil }$/;"	f
Getgroups	./syscall/syscall_plan9.go	/^func Getgroups() (gids []int, err error) {$/;"	f
Getgroups	./syscall/syscall_solaris.go	/^func Getgroups() (gids []int, err error) {$/;"	f
Getgroups	./syscall/syscall_windows.go	/^func Getgroups() (gids []int, err error) { return nil, EWINDOWS }$/;"	f
Gethostname	./syscall/syscall_solaris.go	/^func Gethostname() (name string, err error) {$/;"	f
Getoutarg	./cmd/compile/internal/gc/subr.go	/^func Getoutarg(t *Type) **Type {$/;"	f
Getpagesize	./os/types.go	/^func Getpagesize() int { return syscall.Getpagesize() }$/;"	f
Getpagesize	./syscall/syscall_darwin_386.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_darwin_amd64.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_darwin_arm.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_darwin_arm64.go	/^func Getpagesize() int { return 16384 }$/;"	f
Getpagesize	./syscall/syscall_dragonfly_amd64.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_freebsd_386.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_freebsd_amd64.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_freebsd_arm.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_linux_386.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_linux_amd64.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_linux_arm.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_linux_arm64.go	/^func Getpagesize() int { return 65536 }$/;"	f
Getpagesize	./syscall/syscall_linux_ppc64x.go	/^func Getpagesize() int { return 65536 }$/;"	f
Getpagesize	./syscall/syscall_nacl.go	/^func Getpagesize() int                  { return 65536 }$/;"	f
Getpagesize	./syscall/syscall_netbsd_386.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_netbsd_amd64.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_netbsd_arm.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_openbsd_386.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_openbsd_amd64.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_openbsd_arm.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_plan9.go	/^func Getpagesize() int { return 0x1000 }$/;"	f
Getpagesize	./syscall/syscall_solaris_amd64.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpagesize	./syscall/syscall_windows.go	/^func Getpagesize() int { return 4096 }$/;"	f
Getpeername	./syscall/net_nacl.go	/^func Getpeername(fd int) (sa Sockaddr, err error) {$/;"	f
Getpeername	./syscall/syscall_unix.go	/^func Getpeername(fd int) (sa Sockaddr, err error) {$/;"	f
Getpeername	./syscall/syscall_windows.go	/^func Getpeername(fd Handle) (sa Sockaddr, err error) {$/;"	f
Getpgid	./syscall/exec_solaris_test.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_darwin_386.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_darwin_amd64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_darwin_arm.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_darwin_arm64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_dragonfly_amd64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_freebsd_386.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_freebsd_amd64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_freebsd_arm.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_linux_386.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_linux_amd64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_linux_arm.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_linux_arm64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_linux_ppc64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_linux_ppc64le.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_netbsd_386.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_netbsd_amd64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_netbsd_arm.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_openbsd_386.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_openbsd_amd64.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgid	./syscall/zsyscall_openbsd_arm.go	/^func Getpgid(pid int) (pgid int, err error) {$/;"	f
Getpgrp	./syscall/exec_solaris_test.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/syscall_linux.go	/^func Getpgrp() (pid int) {$/;"	f
Getpgrp	./syscall/zsyscall_darwin_386.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_darwin_amd64.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_darwin_arm.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_darwin_arm64.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_dragonfly_amd64.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_freebsd_386.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_freebsd_amd64.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_freebsd_arm.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_netbsd_386.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_netbsd_amd64.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_netbsd_arm.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_openbsd_386.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_openbsd_amd64.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpgrp	./syscall/zsyscall_openbsd_arm.go	/^func Getpgrp() (pgrp int) {$/;"	f
Getpid	./os/exec.go	/^func Getpid() int { return syscall.Getpid() }$/;"	f
Getpid	./syscall/syscall_nacl.go	/^func Getpid() int                       { return 3 }$/;"	f
Getpid	./syscall/syscall_plan9.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/syscall_windows.go	/^func Getpid() (pid int) { return int(getCurrentProcessId()) }$/;"	f
Getpid	./syscall/zsyscall_darwin_386.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_darwin_amd64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_darwin_arm.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_darwin_arm64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_dragonfly_amd64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_freebsd_386.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_freebsd_amd64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_freebsd_arm.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_linux_386.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_linux_amd64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_linux_arm.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_linux_arm64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_linux_ppc64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_linux_ppc64le.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_netbsd_386.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_netbsd_amd64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_netbsd_arm.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_openbsd_386.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_openbsd_amd64.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_openbsd_arm.go	/^func Getpid() (pid int) {$/;"	f
Getpid	./syscall/zsyscall_solaris_amd64.go	/^func Getpid() (pid int) {$/;"	f
Getppid	./os/exec.go	/^func Getppid() int { return syscall.Getppid() }$/;"	f
Getppid	./syscall/syscall_nacl.go	/^func Getppid() int                      { return 2 }$/;"	f
Getppid	./syscall/syscall_plan9.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/syscall_windows.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_darwin_386.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_darwin_amd64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_darwin_arm.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_darwin_arm64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_dragonfly_amd64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_freebsd_386.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_freebsd_amd64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_freebsd_arm.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_linux_386.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_linux_amd64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_linux_arm.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_linux_arm64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_linux_ppc64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_linux_ppc64le.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_netbsd_386.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_netbsd_amd64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_netbsd_arm.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_openbsd_386.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_openbsd_amd64.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_openbsd_arm.go	/^func Getppid() (ppid int) {$/;"	f
Getppid	./syscall/zsyscall_solaris_amd64.go	/^func Getppid() (ppid int) {$/;"	f
Getpriority	./syscall/zsyscall_darwin_386.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_darwin_amd64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_darwin_arm.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_darwin_arm64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_dragonfly_amd64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_freebsd_386.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_freebsd_amd64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_freebsd_arm.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_linux_386.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_linux_amd64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_linux_arm.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_linux_arm64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_linux_ppc64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_linux_ppc64le.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_netbsd_386.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_netbsd_amd64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_netbsd_arm.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_openbsd_386.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_openbsd_amd64.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_openbsd_arm.go	/^func Getpriority(which int, who int) (prio int, err error) {$/;"	f
Getpriority	./syscall/zsyscall_solaris_amd64.go	/^func Getpriority(which int, who int) (n int, err error) {$/;"	f
Getrlimit	./syscall/syscall_linux_386.go	/^func Getrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/syscall_linux_arm.go	/^func Getrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_darwin_386.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_darwin_amd64.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_darwin_arm.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_darwin_arm64.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_dragonfly_amd64.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_freebsd_386.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_freebsd_amd64.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_freebsd_arm.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_linux_amd64.go	/^func Getrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_linux_arm64.go	/^func Getrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_linux_ppc64.go	/^func Getrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_linux_ppc64le.go	/^func Getrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_netbsd_386.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_netbsd_amd64.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_netbsd_arm.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_openbsd_386.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_openbsd_amd64.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_openbsd_arm.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrlimit	./syscall/zsyscall_solaris_amd64.go	/^func Getrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_darwin_386.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_darwin_amd64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_darwin_arm.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_darwin_arm64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_dragonfly_amd64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_freebsd_386.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_freebsd_amd64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_freebsd_arm.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_linux_386.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_linux_amd64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_linux_arm.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_linux_arm64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_linux_ppc64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_linux_ppc64le.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_netbsd_386.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_netbsd_amd64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_netbsd_arm.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_openbsd_386.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_openbsd_amd64.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getrusage	./syscall/zsyscall_openbsd_arm.go	/^func Getrusage(who int, rusage *Rusage) (err error) {$/;"	f
Getsid	./syscall/zsyscall_darwin_386.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_darwin_amd64.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_darwin_arm.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_darwin_arm64.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_dragonfly_amd64.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_freebsd_386.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_freebsd_amd64.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_freebsd_arm.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_netbsd_386.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_netbsd_amd64.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_netbsd_arm.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_openbsd_386.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_openbsd_amd64.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsid	./syscall/zsyscall_openbsd_arm.go	/^func Getsid(pid int) (sid int, err error) {$/;"	f
Getsockname	./syscall/net_nacl.go	/^func Getsockname(fd int) (sa Sockaddr, err error) {$/;"	f
Getsockname	./syscall/syscall_bsd.go	/^func Getsockname(fd int) (sa Sockaddr, err error) {$/;"	f
Getsockname	./syscall/syscall_linux.go	/^func Getsockname(fd int) (sa Sockaddr, err error) {$/;"	f
Getsockname	./syscall/syscall_solaris.go	/^func Getsockname(fd int) (sa Sockaddr, err error) {$/;"	f
Getsockname	./syscall/syscall_windows.go	/^func Getsockname(fd Handle) (sa Sockaddr, err error) {$/;"	f
Getsockopt	./syscall/zsyscall_windows.go	/^func Getsockopt(s Handle, level int32, optname int32, optval *byte, optlen *int32) (err error) {$/;"	f
GetsockoptByte	./syscall/syscall_bsd.go	/^func GetsockoptByte(fd, level, opt int) (value byte, err error) {$/;"	f
GetsockoptICMPv6Filter	./syscall/syscall_bsd.go	/^func GetsockoptICMPv6Filter(fd, level, opt int) (*ICMPv6Filter, error) {$/;"	f
GetsockoptICMPv6Filter	./syscall/syscall_linux.go	/^func GetsockoptICMPv6Filter(fd, level, opt int) (*ICMPv6Filter, error) {$/;"	f
GetsockoptIPMreq	./syscall/syscall_bsd.go	/^func GetsockoptIPMreq(fd, level, opt int) (*IPMreq, error) {$/;"	f
GetsockoptIPMreq	./syscall/syscall_linux.go	/^func GetsockoptIPMreq(fd, level, opt int) (*IPMreq, error) {$/;"	f
GetsockoptIPMreqn	./syscall/syscall_freebsd.go	/^func GetsockoptIPMreqn(fd, level, opt int) (*IPMreqn, error) {$/;"	f
GetsockoptIPMreqn	./syscall/syscall_linux.go	/^func GetsockoptIPMreqn(fd, level, opt int) (*IPMreqn, error) {$/;"	f
GetsockoptIPv6MTUInfo	./syscall/syscall_bsd.go	/^func GetsockoptIPv6MTUInfo(fd, level, opt int) (*IPv6MTUInfo, error) {$/;"	f
GetsockoptIPv6MTUInfo	./syscall/syscall_linux.go	/^func GetsockoptIPv6MTUInfo(fd, level, opt int) (*IPv6MTUInfo, error) {$/;"	f
GetsockoptIPv6Mreq	./syscall/syscall_bsd.go	/^func GetsockoptIPv6Mreq(fd, level, opt int) (*IPv6Mreq, error) {$/;"	f
GetsockoptIPv6Mreq	./syscall/syscall_linux.go	/^func GetsockoptIPv6Mreq(fd, level, opt int) (*IPv6Mreq, error) {$/;"	f
GetsockoptInet4Addr	./syscall/syscall_bsd.go	/^func GetsockoptInet4Addr(fd, level, opt int) (value [4]byte, err error) {$/;"	f
GetsockoptInet4Addr	./syscall/syscall_linux.go	/^func GetsockoptInet4Addr(fd, level, opt int) (value [4]byte, err error) {$/;"	f
GetsockoptInt	./net/internal/socktest/sys_unix.go	/^func (sw *Switch) GetsockoptInt(s, level, opt int) (soerr int, err error) {$/;"	f
GetsockoptInt	./syscall/net_nacl.go	/^func GetsockoptInt(fd, level, opt int) (value int, err error) {$/;"	f
GetsockoptInt	./syscall/syscall_unix.go	/^func GetsockoptInt(fd, level, opt int) (value int, err error) {$/;"	f
GetsockoptInt	./syscall/syscall_windows.go	/^func GetsockoptInt(fd Handle, level, opt int) (int, error) { return -1, EWINDOWS }$/;"	f
GetsockoptUcred	./syscall/syscall_linux.go	/^func GetsockoptUcred(fd, level, opt int) (*Ucred, error) {$/;"	f
Getter	./flag/flag.go	/^type Getter interface {$/;"	t
Gettid	./syscall/zsyscall_linux_386.go	/^func Gettid() (tid int) {$/;"	f
Gettid	./syscall/zsyscall_linux_amd64.go	/^func Gettid() (tid int) {$/;"	f
Gettid	./syscall/zsyscall_linux_arm.go	/^func Gettid() (tid int) {$/;"	f
Gettid	./syscall/zsyscall_linux_arm64.go	/^func Gettid() (tid int) {$/;"	f
Gettid	./syscall/zsyscall_linux_ppc64.go	/^func Gettid() (tid int) {$/;"	f
Gettid	./syscall/zsyscall_linux_ppc64le.go	/^func Gettid() (tid int) {$/;"	f
Gettimeofday	./syscall/syscall_darwin_386.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/syscall_darwin_amd64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/syscall_darwin_arm.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/syscall_darwin_arm64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/syscall_linux_amd64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/syscall_plan9.go	/^func Gettimeofday(tv *Timeval) error {$/;"	f
Gettimeofday	./syscall/syscall_windows.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_dragonfly_amd64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_freebsd_386.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_freebsd_amd64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_freebsd_arm.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_linux_386.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_linux_arm.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_linux_arm64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_linux_ppc64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_linux_ppc64le.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_netbsd_386.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_netbsd_amd64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_netbsd_arm.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_openbsd_386.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_openbsd_amd64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_openbsd_arm.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Gettimeofday	./syscall/zsyscall_solaris_amd64.go	/^func Gettimeofday(tv *Timeval) (err error) {$/;"	f
Getuid	./os/proc.go	/^func Getuid() int { return syscall.Getuid() }$/;"	f
Getuid	./syscall/syscall_nacl.go	/^func Getuid() int                       { return 1 }$/;"	f
Getuid	./syscall/syscall_plan9.go	/^func Getuid() (uid int)   { return -1 }$/;"	f
Getuid	./syscall/syscall_windows.go	/^func Getuid() (uid int)                  { return -1 }$/;"	f
Getuid	./syscall/zsyscall_darwin_386.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_darwin_amd64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_darwin_arm.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_darwin_arm64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_dragonfly_amd64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_freebsd_386.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_freebsd_amd64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_freebsd_arm.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_linux_386.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_linux_amd64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_linux_arm.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_linux_arm64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_linux_ppc64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_linux_ppc64le.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_netbsd_386.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_netbsd_amd64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_netbsd_arm.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_openbsd_386.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_openbsd_amd64.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_openbsd_arm.go	/^func Getuid() (uid int) {$/;"	f
Getuid	./syscall/zsyscall_solaris_amd64.go	/^func Getuid() (uid int) {$/;"	f
Getwd	./os/getwd.go	/^func Getwd() (dir string, err error) {$/;"	f
Getwd	./syscall/pwd_plan9.go	/^func Getwd() (wd string, err error) {$/;"	f
Getwd	./syscall/syscall_darwin.go	/^func Getwd() (string, error) {$/;"	f
Getwd	./syscall/syscall_linux.go	/^func Getwd() (wd string, err error) {$/;"	f
Getwd	./syscall/syscall_nacl.go	/^func Getwd() (wd string, err error)     { return "", ENOSYS }$/;"	f
Getwd	./syscall/syscall_no_getwd.go	/^func Getwd() (string, error) { return "", ENOTSUP }$/;"	f
Getwd	./syscall/syscall_solaris.go	/^func Getwd() (string, error) { return "", ENOTSUP }$/;"	f
Getwd	./syscall/syscall_windows.go	/^func Getwd() (wd string, err error) {$/;"	f
Getxattr	./syscall/zsyscall_linux_386.go	/^func Getxattr(path string, attr string, dest []byte) (sz int, err error) {$/;"	f
Getxattr	./syscall/zsyscall_linux_amd64.go	/^func Getxattr(path string, attr string, dest []byte) (sz int, err error) {$/;"	f
Getxattr	./syscall/zsyscall_linux_arm.go	/^func Getxattr(path string, attr string, dest []byte) (sz int, err error) {$/;"	f
Getxattr	./syscall/zsyscall_linux_arm64.go	/^func Getxattr(path string, attr string, dest []byte) (sz int, err error) {$/;"	f
Getxattr	./syscall/zsyscall_linux_ppc64.go	/^func Getxattr(path string, attr string, dest []byte) (sz int, err error) {$/;"	f
Getxattr	./syscall/zsyscall_linux_ppc64le.go	/^func Getxattr(path string, attr string, dest []byte) (sz int, err error) {$/;"	f
Ginscall	./cmd/compile/internal/gc/cgen.go	/^func Ginscall(f *Node, proc int) {$/;"	f
Glob	./path/filepath/match.go	/^func Glob(pattern string) (matches []string, err error) {$/;"	f
Global	./math/all_test.go	/^var Global float64$/;"	v
GlobalCh	./runtime/race/testdata/mop_test.go	/^var GlobalCh chan int = make(chan int, 2)$/;"	v
GlobalFunc1	./runtime/race/testdata/mop_test.go	/^func GlobalFunc1() {$/;"	f
GlobalFunc2	./runtime/race/testdata/mop_test.go	/^func GlobalFunc2() {$/;"	f
GlobalX	./runtime/race/testdata/mop_test.go	/^var GlobalX, GlobalY int = 0, 0$/;"	v
Go	./net/rpc/client.go	/^func (client *Client) Go(serviceMethod string, args interface{}, reply interface{}, done chan *Call) *Call {$/;"	f
GoCapFunc	./runtime/runtime-gdb.py	/^class GoCapFunc(gdb.Function):$/;"	c
GoIfaceCmd	./runtime/runtime-gdb.py	/^class GoIfaceCmd(gdb.Command):$/;"	c
GoLenFunc	./runtime/runtime-gdb.py	/^class GoLenFunc(gdb.Function):$/;"	c
GoString	./debug/dwarf/const.go	/^func (a Attr) GoString() string {$/;"	f
GoString	./debug/dwarf/const.go	/^func (t Tag) GoString() string {$/;"	f
GoString	./debug/dwarf/entry.go	/^func (i Class) GoString() string {$/;"	f
GoString	./debug/elf/elf.go	/^func (i Class) GoString() string { return stringName(uint32(i), classStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i Data) GoString() string { return stringName(uint32(i), dataStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i DynFlag) GoString() string { return flagName(uint32(i), dflagStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i DynTag) GoString() string { return stringName(uint32(i), dtStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i Machine) GoString() string { return stringName(uint32(i), machineStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i NType) GoString() string { return stringName(uint32(i), ntypeStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i OSABI) GoString() string { return stringName(uint32(i), osabiStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i ProgFlag) GoString() string { return flagName(uint32(i), pfStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i ProgType) GoString() string { return stringName(uint32(i), ptStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_386) GoString() string { return stringName(uint32(i), r386Strings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_AARCH64) GoString() string { return stringName(uint32(i), raarch64Strings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_ALPHA) GoString() string { return stringName(uint32(i), ralphaStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_ARM) GoString() string { return stringName(uint32(i), rarmStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_PPC) GoString() string { return stringName(uint32(i), rppcStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_PPC64) GoString() string { return stringName(uint32(i), rppc64Strings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_SPARC) GoString() string { return stringName(uint32(i), rsparcStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i R_X86_64) GoString() string { return stringName(uint32(i), rx86_64Strings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i SectionFlag) GoString() string { return flagName(uint32(i), shfStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i SectionIndex) GoString() string { return stringName(uint32(i), shnStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i SectionType) GoString() string { return stringName(uint32(i), shtStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i SymBind) GoString() string { return stringName(uint32(i), stbStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i SymType) GoString() string { return stringName(uint32(i), sttStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i SymVis) GoString() string { return stringName(uint32(i), stvStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i Type) GoString() string { return stringName(uint32(i), typeStrings, true) }$/;"	f
GoString	./debug/elf/elf.go	/^func (i Version) GoString() string { return stringName(uint32(i), versionStrings, true) }$/;"	f
GoString	./debug/macho/macho.go	/^func (i Cpu) GoString() string { return stringName(uint32(i), cpuStrings, true) }$/;"	f
GoString	./debug/macho/macho.go	/^func (i LoadCmd) GoString() string { return stringName(uint32(i), cmdStrings, true) }$/;"	f
GoString	./encoding/binary/binary.go	/^func (bigEndian) GoString() string { return "binary.BigEndian" }$/;"	f
GoString	./encoding/binary/binary.go	/^func (littleEndian) GoString() string { return "binary.LittleEndian" }$/;"	f
GoString	./fmt/fmt_test.go	/^func (g G) GoString() string {$/;"	f
GoString	./fmt/fmt_test.go	/^func (p Panic) GoString() string {$/;"	f
GoStringer	./fmt/print.go	/^type GoStringer interface {$/;"	t
GobDecode	./cmd/compile/internal/big/int.go	/^func (z *Int) GobDecode(buf []byte) error {$/;"	f
GobDecode	./cmd/compile/internal/big/rat.go	/^func (z *Rat) GobDecode(buf []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (a *ArrayStruct) GobDecode(data []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (a *isZeroBugArray) GobDecode(data []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (br *gobDecoderBug0) GobDecode(b []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (g *ByteStruct) GobDecode(data []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (g *Gobber) GobDecode(data []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (g *StringStruct) GobDecode(data []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (i *isZeroBugInterface) GobDecode(data []byte) error {$/;"	f
GobDecode	./encoding/gob/gobencdec_test.go	/^func (v *ValueGobber) GobDecode(data []byte) error {$/;"	f
GobDecode	./math/big/int.go	/^func (z *Int) GobDecode(buf []byte) error {$/;"	f
GobDecode	./math/big/rat.go	/^func (z *Rat) GobDecode(buf []byte) error {$/;"	f
GobDecode	./time/time.go	/^func (t *Time) GobDecode(data []byte) error {$/;"	f
GobDecoder	./encoding/gob/type.go	/^type GobDecoder interface {$/;"	t
GobEncode	./cmd/compile/internal/big/int.go	/^func (x *Int) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./cmd/compile/internal/big/rat.go	/^func (x *Rat) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (a *ArrayStruct) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (a isZeroBugArray) GobEncode() (b []byte, e error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (br *gobDecoderBug0) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (g *ByteStruct) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (g *Gobber) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (g *StringStruct) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (i isZeroBugInterface) GobEncode() (b []byte, e error) {$/;"	f
GobEncode	./encoding/gob/gobencdec_test.go	/^func (v ValueGobber) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./math/big/int.go	/^func (x *Int) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./math/big/rat.go	/^func (x *Rat) GobEncode() ([]byte, error) {$/;"	f
GobEncode	./time/time.go	/^func (t Time) GobEncode() ([]byte, error) {$/;"	f
GobEncoder	./encoding/gob/type.go	/^type GobEncoder interface {$/;"	t
GobTest0	./encoding/gob/gobencdec_test.go	/^type GobTest0 struct {$/;"	t
GobTest1	./encoding/gob/gobencdec_test.go	/^type GobTest1 struct {$/;"	t
GobTest2	./encoding/gob/gobencdec_test.go	/^type GobTest2 struct {$/;"	t
GobTest3	./encoding/gob/gobencdec_test.go	/^type GobTest3 struct {$/;"	t
GobTest4	./encoding/gob/gobencdec_test.go	/^type GobTest4 struct {$/;"	t
GobTest5	./encoding/gob/gobencdec_test.go	/^type GobTest5 struct {$/;"	t
GobTest6	./encoding/gob/gobencdec_test.go	/^type GobTest6 struct {$/;"	t
GobTest7	./encoding/gob/gobencdec_test.go	/^type GobTest7 struct {$/;"	t
GobTestArrayEncDec	./encoding/gob/gobencdec_test.go	/^type GobTestArrayEncDec struct {$/;"	t
GobTestIgnoreEncoder	./encoding/gob/gobencdec_test.go	/^type GobTestIgnoreEncoder struct {$/;"	t
GobTestIndirectArrayEncDec	./encoding/gob/gobencdec_test.go	/^type GobTestIndirectArrayEncDec struct {$/;"	t
GobTestIndirectEncDec	./encoding/gob/gobencdec_test.go	/^type GobTestIndirectEncDec struct {$/;"	t
GobTestValueEncDec	./encoding/gob/gobencdec_test.go	/^type GobTestValueEncDec struct {$/;"	t
Gobber	./encoding/gob/gobencdec_test.go	/^type Gobber int$/;"	t
Goexit	./runtime/panic.go	/^func Goexit() {$/;"	f
GoodPlayer	./cmd/api/testdata/src/pkg/p3/p3.go	/^func (tb *ThirdBase) GoodPlayer() (i, j, k int)$/;"	f
GoroutineCmd	./runtime/runtime-gdb.py	/^class GoroutineCmd(gdb.Command):$/;"	c
GoroutineProfile	./runtime/mprof.go	/^func GoroutineProfile(p []StackRecord) (n int, ok bool) {$/;"	f
GoroutineStats	./internal/trace/goroutines.go	/^func GoroutineStats(events []*Event) map[uint64]*GDesc {$/;"	f
GoroutinesCmd	./runtime/runtime-gdb.py	/^class GoroutinesCmd(gdb.Command):$/;"	c
Gosched	./runtime/proc.go	/^func Gosched() {$/;"	f
GostringW	./runtime/export_test.go	/^func GostringW(w []uint16) (s string) {$/;"	f
Gostringnocopy	./runtime/export_test.go	/^var Gostringnocopy = gostringnocopy$/;"	v
Grams	./sort/example_wrapper_test.go	/^type Grams int$/;"	t
Graph	./cmd/compile/internal/gc/go.go	/^type Graph struct {$/;"	t
GraphicRanges	./unicode/graphic.go	/^var GraphicRanges = []*RangeTable{$/;"	v
Gray	./image/color/color.go	/^type Gray struct {$/;"	t
Gray	./image/image.go	/^type Gray struct {$/;"	t
Gray16	./image/color/color.go	/^type Gray16 struct {$/;"	t
Gray16	./image/image.go	/^type Gray16 struct {$/;"	t
Gray16At	./image/image.go	/^func (p *Gray16) Gray16At(x, y int) color.Gray16 {$/;"	f
GrayAt	./image/image.go	/^func (p *Gray) GrayAt(x, y int) color.Gray {$/;"	f
Gregset	./runtime/defs3_linux.go	/^type Gregset C.elf_gregset_t$/;"	t
Group	./internal/singleflight/singleflight.go	/^type Group struct {$/;"	t
Grow	./bytes/buffer.go	/^func (b *Buffer) Grow(n int) {$/;"	f
GuessingGame	./sort/search.go	/^\/\/	func GuessingGame() {$/;"	f
Gvardef	./cmd/compile/internal/gc/pgen.go	/^func Gvardef(n *Node) {$/;"	f
H	./regexp/testdata/testregex.c	/^#define H(/;"	d	file:
HSqrt2	./math/log_amd64.s	/^#define HSqrt2 7.07106781186547524401e-01 \/\/ sqrt(2)\/2$/;"	d
HTMLAutoClose	./encoding/xml/xml.go	/^var HTMLAutoClose = htmlAutoClose$/;"	v
HTMLEntity	./encoding/xml/xml.go	/^var HTMLEntity = htmlEntity$/;"	v
HTMLEscape	./encoding/json/encode.go	/^func HTMLEscape(dst *bytes.Buffer, src []byte) {$/;"	f
HTMLEscape	./html/template/escape.go	/^func HTMLEscape(w io.Writer, b []byte) {$/;"	f
HTMLEscape	./text/template/funcs.go	/^func HTMLEscape(w io.Writer, b []byte) {$/;"	f
HTMLEscapeString	./html/template/escape.go	/^func HTMLEscapeString(s string) string {$/;"	f
HTMLEscapeString	./text/template/funcs.go	/^func HTMLEscapeString(s string) string {$/;"	f
HTMLEscaper	./html/template/escape.go	/^func HTMLEscaper(args ...interface{}) string {$/;"	f
HTMLEscaper	./text/template/funcs.go	/^func HTMLEscaper(args ...interface{}) string {$/;"	f
HUNG	./regexp/testdata/testregex.c	/^#define HUNG	/;"	d	file:
HalfReader	./testing/iotest/reader.go	/^func HalfReader(r io.Reader) io.Reader { return &halfReader{r} }$/;"	f
HammerMutex	./sync/mutex_test.go	/^func HammerMutex(m *Mutex, loops int, cdone chan bool) {$/;"	f
HammerRWMutex	./sync/rwmutex_test.go	/^func HammerRWMutex(gomaxprocs, numReaders, num_iterations int) {$/;"	f
HammerSemaphore	./sync/mutex_test.go	/^func HammerSemaphore(s *uint32, loops int, cdone chan bool) {$/;"	f
Handle	./net/http/server.go	/^func (mux *ServeMux) Handle(pattern string, handler Handler) {$/;"	f
Handle	./net/http/server.go	/^func Handle(pattern string, handler Handler) { DefaultServeMux.Handle(pattern, handler) }$/;"	f
Handle	./syscall/dll_windows.go	/^func (d *LazyDLL) Handle() uintptr {$/;"	f
Handle	./syscall/syscall_windows.go	/^type Handle uintptr$/;"	t
HandleFunc	./net/http/server.go	/^func (mux *ServeMux) HandleFunc(pattern string, handler func(ResponseWriter, *Request)) {$/;"	f
HandleFunc	./net/http/server.go	/^func HandleFunc(pattern string, handler func(ResponseWriter, *Request)) {$/;"	f
HandleHTTP	./net/rpc/server.go	/^func (server *Server) HandleHTTP(rpcPath, debugPath string) {$/;"	f
HandleHTTP	./net/rpc/server.go	/^func HandleHTTP() {$/;"	f
Handler	./net/http/cgi/host.go	/^type Handler struct {$/;"	t
Handler	./net/http/pprof/pprof.go	/^func Handler(name string) http.Handler {$/;"	f
Handler	./net/http/server.go	/^func (mux *ServeMux) Handler(r *Request) (h Handler, pattern string) {$/;"	f
Handler	./net/http/server.go	/^type Handler interface {$/;"	t
HandlerFunc	./net/http/server.go	/^type HandlerFunc func(ResponseWriter, *Request)$/;"	t
Handshake	./crypto/tls/conn.go	/^func (c *Conn) Handshake() error {$/;"	f
HardwareAddr	./net/mac.go	/^type HardwareAddr []byte$/;"	t
HasExec	./internal/testenv/testenv.go	/^func HasExec() bool {$/;"	f
HasExpired	./crypto/x509/pkix/pkix.go	/^func (certList *CertificateList) HasExpired(now time.Time) bool {$/;"	f
HasExternalNetwork	./internal/testenv/testenv.go	/^func HasExternalNetwork() bool {$/;"	f
HasFileLines	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) HasFileLines() bool {$/;"	f
HasFunctions	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) HasFunctions() bool {$/;"	f
HasGoBuild	./internal/testenv/testenv.go	/^func HasGoBuild() bool {$/;"	f
HasGoRun	./internal/testenv/testenv.go	/^func HasGoRun() bool {$/;"	f
HasLinkRegister	./cmd/compile/internal/gc/cgen.go	/^func HasLinkRegister() bool {$/;"	f
HasOk	./go/types/api.go	/^func (tv TypeAndValue) HasOk() bool {$/;"	f
HasPrefix	./bytes/bytes.go	/^func HasPrefix(s, prefix []byte) bool {$/;"	f
HasPrefix	./path/filepath/path_plan9.go	/^func HasPrefix(p, prefix string) bool {$/;"	f
HasPrefix	./path/filepath/path_unix.go	/^func HasPrefix(p, prefix string) bool {$/;"	f
HasPrefix	./path/filepath/path_windows.go	/^func HasPrefix(p, prefix string) bool {$/;"	f
HasPrefix	./strings/strings.go	/^func HasPrefix(s, prefix string) bool {$/;"	f
HasStringParam	./syscall/mksyscall_windows.go	/^func (f *Fn) HasStringParam() bool {$/;"	f
HasSuffix	./bytes/bytes.go	/^func HasSuffix(s, suffix []byte) bool {$/;"	f
HasSuffix	./strings/strings.go	/^func HasSuffix(s, suffix string) bool {$/;"	f
Hasdefer	./cmd/compile/internal/gc/go.go	/^var Hasdefer int \/\/ flag that curfn has defer statetment$/;"	v
Hash	./crypto/crypto.go	/^type Hash uint$/;"	t
Hash	./hash/hash.go	/^type Hash interface {$/;"	t
Hash32	./hash/hash.go	/^type Hash32 interface {$/;"	t
Hash64	./hash/hash.go	/^type Hash64 interface {$/;"	t
HashFunc	./crypto/crypto.go	/^func (h Hash) HashFunc() Hash {$/;"	f
HashFunc	./crypto/rsa/pss.go	/^func (pssOpts *PSSOptions) HashFunc() crypto.Hash {$/;"	f
HashLoad	./runtime/export_test.go	/^var HashLoad = &hashLoad$/;"	v
HashSet	./runtime/hash_test.go	/^type HashSet struct {$/;"	t
Hconv	./cmd/compile/internal/gc/fmt.go	/^func Hconv(l *NodeList, flag int) string {$/;"	f
Head	./net/http/client.go	/^func (c *Client) Head(url string) (resp *Response, err error) {$/;"	f
Head	./net/http/client.go	/^func Head(url string) (resp *Response, err error) {$/;"	f
Header	./archive/tar/common.go	/^type Header struct {$/;"	t
Header	./compress/gzip/gunzip.go	/^type Header struct {$/;"	t
Header	./net/dnsmsg.go	/^func (h *dnsRR_Header) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_A) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_AAAA) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_CNAME) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_HINFO) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_MB) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_MG) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_MINFO) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_MR) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_MX) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_NS) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_PTR) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_SOA) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_SRV) Header() *dnsRR_Header {$/;"	f
Header	./net/dnsmsg.go	/^func (rr *dnsRR_TXT) Header() *dnsRR_Header {$/;"	f
Header	./net/http/cgi/child.go	/^func (r *response) Header() http.Header {$/;"	f
Header	./net/http/cookie_test.go	/^func (ho headerOnlyResponseWriter) Header() Header {$/;"	f
Header	./net/http/fcgi/child.go	/^func (r *response) Header() http.Header {$/;"	f
Header	./net/http/filetransport.go	/^func (pr *populateResponse) Header() Header {$/;"	f
Header	./net/http/header.go	/^type Header map[string][]string$/;"	t
Header	./net/http/httptest/recorder.go	/^func (rw *ResponseRecorder) Header() http.Header {$/;"	f
Header	./net/http/npn_test.go	/^func (w http09Writer) Header() Header  { return w.h }$/;"	f
Header	./net/http/request_test.go	/^func (responseWriterJustWriter) Header() Header  { panic("should not be called") }$/;"	f
Header	./net/http/server.go	/^func (tw *timeoutWriter) Header() Header {$/;"	f
Header	./net/http/server.go	/^func (w *response) Header() Header {$/;"	f
Header	./net/mail/message.go	/^type Header map[string][]string$/;"	t
Header32	./debug/elf/elf.go	/^type Header32 struct {$/;"	t
Header64	./debug/elf/elf.go	/^type Header64 struct {$/;"	t
Headstr	./cmd/internal/obj/sym.go	/^func Headstr(v int) string {$/;"	f
Headstr	./cmd/link/internal/ld/sym.go	/^func Headstr(v int) string {$/;"	f
Heapsort	./sort/export_test.go	/^func Heapsort(data Interface) {$/;"	f
Hello	./cmd/go/testdata/local/easysub/easysub.go	/^func Hello() {$/;"	f
Hello	./cmd/go/testdata/local/sub/sub.go	/^func Hello() {$/;"	f
Hello	./cmd/go/testdata/local/sub/sub/subsub.go	/^func Hello() {$/;"	f
Hello	./go/internal/gccgoimporter/testdata/imports.go	/^var Hello = fmt.Sprintf("Hello, world")$/;"	v
Hello	./net/smtp/smtp.go	/^func (c *Client) Hello(localName string) error {$/;"	f
HelloServer	./net/http/server.go	/^\/\/	func HelloServer(w http.ResponseWriter, req *http.Request) {$/;"	f
HelloServer	./net/http/triv.go	/^func HelloServer(w http.ResponseWriter, req *http.Request) {$/;"	f
HelperCallParamList	./syscall/mksyscall_windows.go	/^func (f *Fn) HelperCallParamList() string {$/;"	f
HelperName	./syscall/mksyscall_windows.go	/^func (f *Fn) HelperName() string {$/;"	f
HelperParamList	./syscall/mksyscall_windows.go	/^func (f *Fn) HelperParamList() string {$/;"	f
HelperType	./syscall/mksyscall_windows.go	/^func (p *Param) HelperType() string {$/;"	f
HexEncoding	./encoding/base32/base32.go	/^var HexEncoding = NewEncoding(encodeHex)$/;"	v
Hijack	./net/http/httputil/persist.go	/^func (cc *ClientConn) Hijack() (c net.Conn, r *bufio.Reader) {$/;"	f
Hijack	./net/http/httputil/persist.go	/^func (sc *ServerConn) Hijack() (c net.Conn, r *bufio.Reader) {$/;"	f
Hijack	./net/http/server.go	/^func (w *response) Hijack() (rwc net.Conn, buf *bufio.ReadWriter, err error) {$/;"	f
Hijacker	./net/http/server.go	/^type Hijacker interface {$/;"	t
HistLine	./cmd/asm/internal/lex/lex.go	/^func HistLine() int32 {$/;"	f
Hostent	./syscall/ztypes_windows.go	/^type Hostent struct {$/;"	t
Hostname	./os/doc.go	/^func Hostname() (name string, err error) {$/;"	f
HostnameError	./crypto/x509/verify.go	/^type HostnameError struct {$/;"	t
Hostobj	./cmd/link/internal/ld/lib.go	/^type Hostobj struct {$/;"	t
Hour	./time/time.go	/^func (t Time) Hour() int {$/;"	f
Hours	./time/time.go	/^func (d Duration) Hours() float64 {$/;"	f
Hypot	./math/hypot.go	/^func Hypot(p, q float64) float64$/;"	f
HypotGo	./math/export_test.go	/^var HypotGo = hypot$/;"	v
Hypotenuse	./encoding/gob/example_interface_test.go	/^func (p Point) Hypotenuse() float64 {$/;"	f
I0	./go/doc/testdata/error1.go	/^type I0 interface {$/;"	t
I0	./go/doc/testdata/error2.go	/^type I0 interface {$/;"	t
I1	./runtime/iface_test.go	/^type I1 interface {$/;"	t
I2	./runtime/iface_test.go	/^type I2 interface {$/;"	t
ICMPv6Filter	./syscall/net_nacl.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/types_darwin.go	/^type ICMPv6Filter C.struct_icmp6_filter$/;"	t
ICMPv6Filter	./syscall/types_dragonfly.go	/^type ICMPv6Filter C.struct_icmp6_filter$/;"	t
ICMPv6Filter	./syscall/types_freebsd.go	/^type ICMPv6Filter C.struct_icmp6_filter$/;"	t
ICMPv6Filter	./syscall/types_linux.go	/^type ICMPv6Filter C.struct_icmp6_filter$/;"	t
ICMPv6Filter	./syscall/types_netbsd.go	/^type ICMPv6Filter C.struct_icmp6_filter$/;"	t
ICMPv6Filter	./syscall/types_openbsd.go	/^type ICMPv6Filter C.struct_icmp6_filter$/;"	t
ICMPv6Filter	./syscall/types_solaris.go	/^type ICMPv6Filter C.struct_icmp6_filter$/;"	t
ICMPv6Filter	./syscall/ztypes_darwin_386.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_darwin_amd64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_darwin_arm.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_darwin_arm64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_dragonfly_amd64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_freebsd_386.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_freebsd_amd64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_freebsd_arm.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_linux_386.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_linux_amd64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_linux_arm.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_linux_arm64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_linux_ppc64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_linux_ppc64le.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_netbsd_386.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_netbsd_amd64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_netbsd_arm.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_openbsd_386.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_openbsd_amd64.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_openbsd_arm.go	/^type ICMPv6Filter struct {$/;"	t
ICMPv6Filter	./syscall/ztypes_solaris_amd64.go	/^type ICMPv6Filter struct {$/;"	t
IEEETable	./hash/crc32/crc32.go	/^var IEEETable = makeTable(IEEE)$/;"	v
IMAGE_DATA_DIRECTORY	./cmd/link/internal/ld/pe.go	/^type IMAGE_DATA_DIRECTORY struct {$/;"	t
IMAGE_EXPORT_DIRECTORY	./cmd/link/internal/ld/pe.go	/^type IMAGE_EXPORT_DIRECTORY struct {$/;"	t
IMAGE_FILE_HEADER	./cmd/link/internal/ld/pe.go	/^type IMAGE_FILE_HEADER struct {$/;"	t
IMAGE_IMPORT_DESCRIPTOR	./cmd/link/internal/ld/pe.go	/^type IMAGE_IMPORT_DESCRIPTOR struct {$/;"	t
IMAGE_OPTIONAL_HEADER	./cmd/link/internal/ld/pe.go	/^type IMAGE_OPTIONAL_HEADER struct {$/;"	t
IMAGE_SECTION_HEADER	./cmd/link/internal/ld/pe.go	/^type IMAGE_SECTION_HEADER struct {$/;"	t
INCL	./crypto/rc4/rc4_386.s	/^	INCL DI$/;"	d
INCQ	./crypto/rc4/rc4_amd64.s	/^	INCQ	DI				\/\/ out++$/;"	d
INCQ	./crypto/rc4/rc4_amd64p32.s	/^	INCQ	DI				\/\/ out++$/;"	d
IP	./net/ip.go	/^type IP []byte$/;"	t
IPAddr	./net/iprawsock.go	/^type IPAddr struct {$/;"	t
IPConn	./net/iprawsock_plan9.go	/^type IPConn struct {$/;"	t
IPConn	./net/iprawsock_posix.go	/^type IPConn struct {$/;"	t
IPMask	./net/ip.go	/^type IPMask []byte$/;"	t
IPMreq	./syscall/net_nacl.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/syscall_windows.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/types_darwin.go	/^type IPMreq C.struct_ip_mreq$/;"	t
IPMreq	./syscall/types_dragonfly.go	/^type IPMreq C.struct_ip_mreq$/;"	t
IPMreq	./syscall/types_freebsd.go	/^type IPMreq C.struct_ip_mreq$/;"	t
IPMreq	./syscall/types_linux.go	/^type IPMreq C.struct_ip_mreq$/;"	t
IPMreq	./syscall/types_netbsd.go	/^type IPMreq C.struct_ip_mreq$/;"	t
IPMreq	./syscall/types_openbsd.go	/^type IPMreq C.struct_ip_mreq$/;"	t
IPMreq	./syscall/types_solaris.go	/^type IPMreq C.struct_ip_mreq$/;"	t
IPMreq	./syscall/ztypes_darwin_386.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_darwin_amd64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_darwin_arm.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_darwin_arm64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_dragonfly_amd64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_freebsd_386.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_freebsd_amd64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_freebsd_arm.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_linux_386.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_linux_amd64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_linux_arm.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_linux_arm64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_linux_ppc64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_linux_ppc64le.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_netbsd_386.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_netbsd_amd64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_netbsd_arm.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_openbsd_386.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_openbsd_amd64.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_openbsd_arm.go	/^type IPMreq struct {$/;"	t
IPMreq	./syscall/ztypes_solaris_amd64.go	/^type IPMreq struct {$/;"	t
IPMreqn	./syscall/types_freebsd.go	/^type IPMreqn C.struct_ip_mreqn$/;"	t
IPMreqn	./syscall/types_linux.go	/^type IPMreqn C.struct_ip_mreqn$/;"	t
IPMreqn	./syscall/ztypes_freebsd_386.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_freebsd_amd64.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_freebsd_arm.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_linux_386.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_linux_amd64.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_linux_arm.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_linux_arm64.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_linux_ppc64.go	/^type IPMreqn struct {$/;"	t
IPMreqn	./syscall/ztypes_linux_ppc64le.go	/^type IPMreqn struct {$/;"	t
IPNet	./net/ip.go	/^type IPNet struct {$/;"	t
IPv4	./net/ip.go	/^func IPv4(a, b, c, d byte) IP {$/;"	f
IPv4Mask	./net/ip.go	/^func IPv4Mask(a, b, c, d byte) IPMask {$/;"	f
IPv6MTUInfo	./syscall/types_darwin.go	/^type IPv6MTUInfo C.struct_ip6_mtuinfo$/;"	t
IPv6MTUInfo	./syscall/types_dragonfly.go	/^type IPv6MTUInfo C.struct_ip6_mtuinfo$/;"	t
IPv6MTUInfo	./syscall/types_freebsd.go	/^type IPv6MTUInfo C.struct_ip6_mtuinfo$/;"	t
IPv6MTUInfo	./syscall/types_linux.go	/^type IPv6MTUInfo C.struct_ip6_mtuinfo$/;"	t
IPv6MTUInfo	./syscall/types_netbsd.go	/^type IPv6MTUInfo C.struct_ip6_mtuinfo$/;"	t
IPv6MTUInfo	./syscall/types_openbsd.go	/^type IPv6MTUInfo C.struct_ip6_mtuinfo$/;"	t
IPv6MTUInfo	./syscall/types_solaris.go	/^type IPv6MTUInfo C.struct_ip6_mtuinfo$/;"	t
IPv6MTUInfo	./syscall/ztypes_darwin_386.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_darwin_amd64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_darwin_arm.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_darwin_arm64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_dragonfly_amd64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_freebsd_386.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_freebsd_amd64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_freebsd_arm.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_linux_386.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_linux_amd64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_linux_arm.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_linux_arm64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_linux_ppc64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_linux_ppc64le.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_netbsd_386.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_netbsd_amd64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_netbsd_arm.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_openbsd_386.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_openbsd_amd64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_openbsd_arm.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6MTUInfo	./syscall/ztypes_solaris_amd64.go	/^type IPv6MTUInfo struct {$/;"	t
IPv6Mreq	./syscall/net_nacl.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/syscall_windows.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/types_darwin.go	/^type IPv6Mreq C.struct_ipv6_mreq$/;"	t
IPv6Mreq	./syscall/types_dragonfly.go	/^type IPv6Mreq C.struct_ipv6_mreq$/;"	t
IPv6Mreq	./syscall/types_freebsd.go	/^type IPv6Mreq C.struct_ipv6_mreq$/;"	t
IPv6Mreq	./syscall/types_linux.go	/^type IPv6Mreq C.struct_ipv6_mreq$/;"	t
IPv6Mreq	./syscall/types_netbsd.go	/^type IPv6Mreq C.struct_ipv6_mreq$/;"	t
IPv6Mreq	./syscall/types_openbsd.go	/^type IPv6Mreq C.struct_ipv6_mreq$/;"	t
IPv6Mreq	./syscall/types_solaris.go	/^type IPv6Mreq C.struct_ipv6_mreq$/;"	t
IPv6Mreq	./syscall/ztypes_darwin_386.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_darwin_amd64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_darwin_arm.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_darwin_arm64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_dragonfly_amd64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_freebsd_386.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_freebsd_amd64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_freebsd_arm.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_linux_386.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_linux_amd64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_linux_arm.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_linux_arm64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_linux_ppc64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_linux_ppc64le.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_netbsd_386.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_netbsd_amd64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_netbsd_arm.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_openbsd_386.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_openbsd_amd64.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_openbsd_arm.go	/^type IPv6Mreq struct {$/;"	t
IPv6Mreq	./syscall/ztypes_solaris_amd64.go	/^type IPv6Mreq struct {$/;"	t
ISOWeek	./time/time.go	/^func (t Time) ISOWeek() (year, week int) {$/;"	f
ISOWeekTest	./time/time_test.go	/^type ISOWeekTest struct {$/;"	t
IT0	./encoding/gob/codec_test.go	/^type IT0 struct {$/;"	t
Id	./encoding/gob/debug.go	/^		\/\/ Field number 1 is type Id of elem$/;"	t
Id	./encoding/gob/debug.go	/^		\/\/ Field number 1 is type Id of key$/;"	t
Id	./encoding/gob/debug.go	/^		\/\/ Field number 2 is type Id of elem$/;"	t
Id	./go/types/object.go	/^func (obj *object) Id() string          { return Id(obj.pkg, obj.name) }$/;"	f
Id	./go/types/object.go	/^func Id(pkg *Package, name string) string {$/;"	f
Ident	./cmd/cgo/gcc.go	/^func (c *typeConv) Ident(s string) *ast.Ident {$/;"	f
Identical	./go/types/predicates.go	/^func Identical(x, y Type) bool {$/;"	f
IdentifierNode	./text/template/parse/node.go	/^type IdentifierNode struct {$/;"	t
Idir	./cmd/compile/internal/gc/go.go	/^type Idir struct {$/;"	t
IdleConnChMapSizeForTesting	./net/http/export_test.go	/^func (t *Transport) IdleConnChMapSizeForTesting() int {$/;"	f
IdleConnCountForTesting	./net/http/export_test.go	/^func (t *Transport) IdleConnCountForTesting(cacheKey string) int {$/;"	f
IdleConnKeysForTesting	./net/http/export_test.go	/^func (t *Transport) IdleConnKeysForTesting() (keys []string) {$/;"	f
IfAddrmsg	./syscall/types_linux.go	/^type IfAddrmsg C.struct_ifaddrmsg$/;"	t
IfAddrmsg	./syscall/ztypes_linux_386.go	/^type IfAddrmsg struct {$/;"	t
IfAddrmsg	./syscall/ztypes_linux_amd64.go	/^type IfAddrmsg struct {$/;"	t
IfAddrmsg	./syscall/ztypes_linux_arm.go	/^type IfAddrmsg struct {$/;"	t
IfAddrmsg	./syscall/ztypes_linux_arm64.go	/^type IfAddrmsg struct {$/;"	t
IfAddrmsg	./syscall/ztypes_linux_ppc64.go	/^type IfAddrmsg struct {$/;"	t
IfAddrmsg	./syscall/ztypes_linux_ppc64le.go	/^type IfAddrmsg struct {$/;"	t
IfAnnounceMsghdr	./syscall/types_dragonfly.go	/^type IfAnnounceMsghdr C.struct_if_announcemsghdr$/;"	t
IfAnnounceMsghdr	./syscall/types_freebsd.go	/^type IfAnnounceMsghdr C.struct_if_announcemsghdr$/;"	t
IfAnnounceMsghdr	./syscall/types_netbsd.go	/^type IfAnnounceMsghdr C.struct_if_announcemsghdr$/;"	t
IfAnnounceMsghdr	./syscall/types_openbsd.go	/^type IfAnnounceMsghdr C.struct_if_announcemsghdr$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_dragonfly_amd64.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_freebsd_386.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_freebsd_amd64.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_freebsd_arm.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_netbsd_386.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_netbsd_amd64.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_netbsd_arm.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_openbsd_386.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_openbsd_amd64.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfAnnounceMsghdr	./syscall/ztypes_openbsd_arm.go	/^type IfAnnounceMsghdr struct {$/;"	t
IfData	./syscall/types_darwin.go	/^type IfData C.struct_if_data$/;"	t
IfData	./syscall/types_dragonfly.go	/^type IfData C.struct_if_data$/;"	t
IfData	./syscall/types_freebsd.go	/^type IfData C.struct_if_data8$/;"	t
IfData	./syscall/types_netbsd.go	/^type IfData C.struct_if_data$/;"	t
IfData	./syscall/types_openbsd.go	/^type IfData C.struct_if_data$/;"	t
IfData	./syscall/types_solaris.go	/^type IfData C.struct_if_data$/;"	t
IfData	./syscall/ztypes_darwin_386.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_darwin_amd64.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_darwin_arm.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_darwin_arm64.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_dragonfly_amd64.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_freebsd_386.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_freebsd_amd64.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_freebsd_arm.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_netbsd_386.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_netbsd_amd64.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_netbsd_arm.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_openbsd_386.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_openbsd_amd64.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_openbsd_arm.go	/^type IfData struct {$/;"	t
IfData	./syscall/ztypes_solaris_amd64.go	/^type IfData struct {$/;"	t
IfInfomsg	./syscall/types_linux.go	/^type IfInfomsg C.struct_ifinfomsg$/;"	t
IfInfomsg	./syscall/ztypes_linux_386.go	/^type IfInfomsg struct {$/;"	t
IfInfomsg	./syscall/ztypes_linux_amd64.go	/^type IfInfomsg struct {$/;"	t
IfInfomsg	./syscall/ztypes_linux_arm.go	/^type IfInfomsg struct {$/;"	t
IfInfomsg	./syscall/ztypes_linux_arm64.go	/^type IfInfomsg struct {$/;"	t
IfInfomsg	./syscall/ztypes_linux_ppc64.go	/^type IfInfomsg struct {$/;"	t
IfInfomsg	./syscall/ztypes_linux_ppc64le.go	/^type IfInfomsg struct {$/;"	t
IfMsghdr	./syscall/types_darwin.go	/^type IfMsghdr C.struct_if_msghdr$/;"	t
IfMsghdr	./syscall/types_dragonfly.go	/^type IfMsghdr C.struct_if_msghdr$/;"	t
IfMsghdr	./syscall/types_freebsd.go	/^type IfMsghdr C.struct_if_msghdr8$/;"	t
IfMsghdr	./syscall/types_netbsd.go	/^type IfMsghdr C.struct_if_msghdr$/;"	t
IfMsghdr	./syscall/types_openbsd.go	/^type IfMsghdr C.struct_if_msghdr$/;"	t
IfMsghdr	./syscall/types_solaris.go	/^type IfMsghdr C.struct_if_msghdr$/;"	t
IfMsghdr	./syscall/ztypes_darwin_386.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_darwin_amd64.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_darwin_arm.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_darwin_arm64.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_dragonfly_amd64.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_freebsd_386.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_freebsd_amd64.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_freebsd_arm.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_netbsd_386.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_netbsd_amd64.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_netbsd_arm.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_openbsd_386.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_openbsd_amd64.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_openbsd_arm.go	/^type IfMsghdr struct {$/;"	t
IfMsghdr	./syscall/ztypes_solaris_amd64.go	/^type IfMsghdr struct {$/;"	t
IfNode	./text/template/parse/node.go	/^type IfNode struct {$/;"	t
IfaMsghdr	./syscall/types_darwin.go	/^type IfaMsghdr C.struct_ifa_msghdr$/;"	t
IfaMsghdr	./syscall/types_dragonfly.go	/^type IfaMsghdr C.struct_ifa_msghdr$/;"	t
IfaMsghdr	./syscall/types_freebsd.go	/^type IfaMsghdr C.struct_ifa_msghdr$/;"	t
IfaMsghdr	./syscall/types_netbsd.go	/^type IfaMsghdr C.struct_ifa_msghdr$/;"	t
IfaMsghdr	./syscall/types_openbsd.go	/^type IfaMsghdr C.struct_ifa_msghdr$/;"	t
IfaMsghdr	./syscall/types_solaris.go	/^type IfaMsghdr C.struct_ifa_msghdr$/;"	t
IfaMsghdr	./syscall/ztypes_darwin_386.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_darwin_amd64.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_darwin_arm.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_darwin_arm64.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_dragonfly_amd64.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_freebsd_386.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_freebsd_amd64.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_freebsd_arm.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_netbsd_386.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_netbsd_amd64.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_netbsd_arm.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_openbsd_386.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_openbsd_amd64.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_openbsd_arm.go	/^type IfaMsghdr struct {$/;"	t
IfaMsghdr	./syscall/ztypes_solaris_amd64.go	/^type IfaMsghdr struct {$/;"	t
Iface	./runtime/gcinfo_test.go	/^type Iface interface {$/;"	t
IfaceHash	./runtime/export_test.go	/^var IfaceHash = ifaceHash$/;"	v
IfaceImpl	./runtime/gcinfo_test.go	/^type IfaceImpl int$/;"	t
IfaceKey	./runtime/hash_test.go	/^type IfaceKey struct {$/;"	t
IfacePrinter	./runtime/runtime-gdb.py	/^class IfacePrinter:$/;"	c
IfmaMsghdr	./syscall/types_darwin.go	/^type IfmaMsghdr C.struct_ifma_msghdr$/;"	t
IfmaMsghdr	./syscall/types_dragonfly.go	/^type IfmaMsghdr C.struct_ifma_msghdr$/;"	t
IfmaMsghdr	./syscall/types_freebsd.go	/^type IfmaMsghdr C.struct_ifma_msghdr$/;"	t
IfmaMsghdr	./syscall/ztypes_darwin_386.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr	./syscall/ztypes_darwin_amd64.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr	./syscall/ztypes_darwin_arm.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr	./syscall/ztypes_darwin_arm64.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr	./syscall/ztypes_dragonfly_amd64.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr	./syscall/ztypes_freebsd_386.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr	./syscall/ztypes_freebsd_amd64.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr	./syscall/ztypes_freebsd_arm.go	/^type IfmaMsghdr struct {$/;"	t
IfmaMsghdr2	./syscall/types_darwin.go	/^type IfmaMsghdr2 C.struct_ifma_msghdr2$/;"	t
IfmaMsghdr2	./syscall/ztypes_darwin_386.go	/^type IfmaMsghdr2 struct {$/;"	t
IfmaMsghdr2	./syscall/ztypes_darwin_amd64.go	/^type IfmaMsghdr2 struct {$/;"	t
IfmaMsghdr2	./syscall/ztypes_darwin_arm.go	/^type IfmaMsghdr2 struct {$/;"	t
IfmaMsghdr2	./syscall/ztypes_darwin_arm64.go	/^type IfmaMsghdr2 struct {$/;"	t
Igen	./cmd/compile/internal/gc/cgen.go	/^func Igen(n *Node, a *Node, res *Node) {$/;"	f
Ignore	./os/signal/signal.go	/^func Ignore(sig ...os.Signal) {$/;"	f
IgnoreTest	./encoding/xml/marshal_test.go	/^type IgnoreTest struct {$/;"	t
IllegalPrefixes	./go/doc/synopsis.go	/^var IllegalPrefixes = []string{$/;"	v
Ilogb	./math/logb.go	/^func Ilogb(x float64) int {$/;"	f
Imag	./go/constant/value.go	/^func Imag(x Value) Value {$/;"	f
Image	./image/draw/draw.go	/^type Image interface {$/;"	t
Image	./image/image.go	/^type Image interface {$/;"	t
Image	./runtime/race/testdata/regression_test.go	/^type Image struct {$/;"	t
Imm	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (i ImmAlt) Imm() Imm {$/;"	f
Imm	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Imm uint32$/;"	t
Imm	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Imm int64$/;"	t
ImmAlt	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type ImmAlt struct {$/;"	t
Imp	./cmd/link/internal/ld/pe.go	/^type Imp struct {$/;"	t
Impl	./reflect/all_test.go	/^type Impl struct{}$/;"	t
Implements	./go/types/api.go	/^func Implements(V Type, T *Interface) bool {$/;"	f
Implements	./reflect/type.go	/^func (t *rtype) Implements(u Type) bool {$/;"	f
Import	./cmd/api/goapi.go	/^func (w *Walker) Import(name string) (*types.Package, error) {$/;"	f
Import	./cmd/link/internal/ld/go.go	/^type Import struct {$/;"	t
Import	./go/importer/importer.go	/^func (m *gccgoimports) Import(path string) (*types.Package, error) {$/;"	f
Import	./go/importer/importer.go	/^func (m gcimports) Import(path string) (*types.Package, error) {$/;"	f
Import	./go/internal/gcimporter/gcimporter.go	/^func Import(packages map[string]*types.Package, path string) (pkg *types.Package, err error) {$/;"	f
Import	./go/types/api_test.go	/^func (m testImporter) Import(path string) (*Package, error) {$/;"	f
Import	./go/types/resolver_test.go	/^func (imp *resolveTestImporter) Import(path string) (*Package, error) {$/;"	f
ImportData	./go/internal/gcimporter/gcimporter.go	/^func ImportData(packages map[string]*types.Package, filename, id string, data io.Reader) (pkg *types.Package, err error) {$/;"	f
ImportDirectory	./debug/pe/file.go	/^type ImportDirectory struct {$/;"	t
Imported	./go/types/object.go	/^func (obj *PkgName) Imported() *Package { return obj.imported }$/;"	f
ImportedLibraries	./debug/elf/file.go	/^func (f *File) ImportedLibraries() ([]string, error) {$/;"	f
ImportedLibraries	./debug/macho/file.go	/^func (f *File) ImportedLibraries() ([]string, error) {$/;"	f
ImportedLibraries	./debug/pe/file.go	/^func (f *File) ImportedLibraries() ([]string, error) {$/;"	f
ImportedSymbol	./debug/elf/file.go	/^type ImportedSymbol struct {$/;"	t
ImportedSymbols	./debug/elf/file.go	/^func (f *File) ImportedSymbols() ([]ImportedSymbol, error) {$/;"	f
ImportedSymbols	./debug/macho/file.go	/^func (f *File) ImportedSymbols() ([]string, error) {$/;"	f
ImportedSymbols	./debug/pe/file.go	/^func (f *File) ImportedSymbols() ([]string, error) {$/;"	f
Importer	./go/ast/resolve.go	/^type Importer func(imports map[string]*Object, path string) (pkg *Object, err error)$/;"	t
Importer	./go/internal/gccgoimporter/importer.go	/^type Importer func(imports map[string]*types.Package, path string) (*types.Package, error)$/;"	t
Importer	./go/types/api.go	/^type Importer interface {$/;"	t
Imports	./go/types/package.go	/^func (pkg *Package) Imports() []*Package { return pkg.imports }$/;"	f
In	./image/geom.go	/^func (p Point) In(r Rectangle) bool {$/;"	f
In	./image/geom.go	/^func (r Rectangle) In(s Rectangle) bool {$/;"	f
In	./reflect/type.go	/^func (t *rtype) In(i int) Type {$/;"	f
In	./time/time.go	/^func (t Time) In(loc *Location) Time {$/;"	f
In	./unicode/graphic.go	/^func In(r rune, ranges ...*RangeTable) bool {$/;"	f
InUseBytes	./runtime/mprof.go	/^func (r *MemProfileRecord) InUseBytes() int64 { return r.AllocBytes - r.FreeBytes }$/;"	f
InUseObjects	./runtime/mprof.go	/^func (r *MemProfileRecord) InUseObjects() int64 {$/;"	f
IncorrectPasswordError	./crypto/x509/pem_decrypt.go	/^var IncorrectPasswordError = errors.New("x509: decryption password incorrect")$/;"	v
Incref	./net/fd_mutex.go	/^func (mu *fdMutex) Incref() bool {$/;"	f
IncrefAndClose	./net/fd_mutex.go	/^func (mu *fdMutex) IncrefAndClose() bool {$/;"	f
Increment	./sync/once_test.go	/^func (o *one) Increment() {$/;"	f
Indent	./encoding/json/indent.go	/^func Indent(dst *bytes.Buffer, src []byte, prefix, indent string) error {$/;"	f
Indent	./encoding/xml/marshal.go	/^func (enc *Encoder) Indent(prefix, indent string) {$/;"	f
Index	./bytes/bytes.go	/^func Index(s, sep []byte) int {$/;"	f
Index	./go/types/selection.go	/^func (s *Selection) Index() []int { return s.index }$/;"	f
Index	./image/color/color.go	/^func (p Palette) Index(c Color) int {$/;"	f
Index	./index/suffixarray/suffixarray.go	/^type Index struct {$/;"	t
Index	./net/http/pprof/pprof.go	/^func Index(w http.ResponseWriter, r *http.Request) {$/;"	f
Index	./reflect/value.go	/^func (v Value) Index(i int) Value {$/;"	f
Index	./strings/strings.go	/^func Index(s, sep string) int {$/;"	f
IndexAny	./bytes/bytes.go	/^func IndexAny(s []byte, chars string) int {$/;"	f
IndexAny	./strings/strings.go	/^func IndexAny(s, chars string) int {$/;"	f
IndexByte	./bytes/bytes_decl.go	/^func IndexByte(s []byte, c byte) int \/\/ ..\/runtime\/asm_$GOARCH.s$/;"	f
IndexByte	./strings/strings_decl.go	/^func IndexByte(s string, c byte) int \/\/ ..\/runtime\/asm_$GOARCH.s$/;"	f
IndexBytePortable	./bytes/export_test.go	/^var IndexBytePortable = indexBytePortable$/;"	v
IndexFunc	./bytes/bytes.go	/^func IndexFunc(s []byte, f func(r rune) bool) int {$/;"	f
IndexFunc	./strings/strings.go	/^func IndexFunc(s string, f func(rune) bool) int {$/;"	f
IndexFuncTest	./bytes/bytes_test.go	/^type IndexFuncTest struct {$/;"	t
IndexRune	./bytes/bytes.go	/^func IndexRune(s []byte, r rune) int {$/;"	f
IndexRune	./strings/strings.go	/^func IndexRune(s string, r rune) int {$/;"	f
IndexTest	./strings/strings_test.go	/^type IndexTest struct {$/;"	t
Indirect	./encoding/gob/codec_test.go	/^type Indirect struct {$/;"	t
Indirect	./go/types/selection.go	/^func (s *Selection) Indirect() bool { return s.indirect }$/;"	f
Indirect	./reflect/value.go	/^func Indirect(v Value) Value {$/;"	f
Inet4Pktinfo	./syscall/types_darwin.go	/^type Inet4Pktinfo C.struct_in_pktinfo$/;"	t
Inet4Pktinfo	./syscall/types_linux.go	/^type Inet4Pktinfo C.struct_in_pktinfo$/;"	t
Inet4Pktinfo	./syscall/ztypes_darwin_386.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_darwin_amd64.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_darwin_arm.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_darwin_arm64.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_linux_386.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_linux_amd64.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_linux_arm.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_linux_arm64.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_linux_ppc64.go	/^type Inet4Pktinfo struct {$/;"	t
Inet4Pktinfo	./syscall/ztypes_linux_ppc64le.go	/^type Inet4Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/types_darwin.go	/^type Inet6Pktinfo C.struct_in6_pktinfo$/;"	t
Inet6Pktinfo	./syscall/types_dragonfly.go	/^type Inet6Pktinfo C.struct_in6_pktinfo$/;"	t
Inet6Pktinfo	./syscall/types_freebsd.go	/^type Inet6Pktinfo C.struct_in6_pktinfo$/;"	t
Inet6Pktinfo	./syscall/types_linux.go	/^type Inet6Pktinfo C.struct_in6_pktinfo$/;"	t
Inet6Pktinfo	./syscall/types_netbsd.go	/^type Inet6Pktinfo C.struct_in6_pktinfo$/;"	t
Inet6Pktinfo	./syscall/types_openbsd.go	/^type Inet6Pktinfo C.struct_in6_pktinfo$/;"	t
Inet6Pktinfo	./syscall/types_solaris.go	/^type Inet6Pktinfo C.struct_in6_pktinfo$/;"	t
Inet6Pktinfo	./syscall/ztypes_darwin_386.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_darwin_amd64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_darwin_arm.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_darwin_arm64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_dragonfly_amd64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_freebsd_386.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_freebsd_amd64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_freebsd_arm.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_linux_386.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_linux_amd64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_linux_arm.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_linux_arm64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_linux_ppc64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_linux_ppc64le.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_netbsd_386.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_netbsd_amd64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_netbsd_arm.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_openbsd_386.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_openbsd_amd64.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_openbsd_arm.go	/^type Inet6Pktinfo struct {$/;"	t
Inet6Pktinfo	./syscall/ztypes_solaris_amd64.go	/^type Inet6Pktinfo struct {$/;"	t
Inf	./math/bits.go	/^func Inf(sign int) float64 {$/;"	f
Inf	./math/cmplx/isinf.go	/^func Inf() complex128 {$/;"	f
Info	./go/types/api.go	/^type Info struct {$/;"	t
Info	./go/types/type.go	/^func (b *Basic) Info() BasicInfo { return b.info }$/;"	f
Info	./log/syslog/syslog.go	/^func (w *Writer) Info(m string) (err error) {$/;"	f
Info	./syscall/exec_unix_test.go	/^func (c *command) Info() (pid, pgrp int) {$/;"	f
Init	./cmd/cgo/gcc.go	/^func (c *typeConv) Init(ptrSize, intSize int64) {$/;"	f
Init	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) Init(writeByte func(byte)) {$/;"	f
Init	./cmd/link/internal/ld/data.go	/^func (p *GCProg) Init(name string) {$/;"	f
Init	./container/heap/heap.go	/^func Init(h Interface) {$/;"	f
Init	./container/list/list.go	/^func (l *List) Init() *List {$/;"	f
Init	./expvar/expvar.go	/^func (v *Map) Init() *Map {$/;"	f
Init	./flag/flag.go	/^func (f *FlagSet) Init(name string, errorHandling ErrorHandling) {$/;"	f
Init	./go/scanner/scanner.go	/^func (s *Scanner) Init(file *token.File, src []byte, err ErrorHandler, mode Mode) {$/;"	f
Init	./net/fd_poll_nacl.go	/^func (pd *pollDesc) Init(fd *netFD) error { pd.fd = fd; return nil }$/;"	f
Init	./net/fd_poll_runtime.go	/^func (pd *pollDesc) Init(fd *netFD) error {$/;"	f
Init	./text/scanner/scanner.go	/^func (s *Scanner) Init(src io.Reader) *Scanner {$/;"	f
Init	./text/tabwriter/tabwriter.go	/^func (b *Writer) Init(output io.Writer, minwidth, tabwidth, padding int, padchar byte, flags uint) *Writer {$/;"	f
InitBuf	./net/fd_windows.go	/^func (o *operation) InitBuf(buf []byte) {$/;"	f
InitData	./go/internal/gccgoimporter/importer.go	/^type InitData struct {$/;"	t
InitEntry	./cmd/compile/internal/gc/go.go	/^type InitEntry struct {$/;"	t
InitFromDriver	./go/internal/gccgoimporter/gccgoinstallation.go	/^func (inst *GccgoInstallation) InitFromDriver(gccgoPath string) (err error) {$/;"	f
InitHist	./cmd/asm/internal/lex/lex.go	/^func InitHist() {$/;"	f
InitPlan	./cmd/compile/internal/gc/go.go	/^type InitPlan struct {$/;"	t
Initializer	./go/types/api.go	/^type Initializer struct {$/;"	t
Inner	./reflect/all_test.go	/^type Inner struct {$/;"	t
InnerInt	./reflect/all_test.go	/^type InnerInt struct {$/;"	t
InnerStruct	./encoding/xml/marshal_test.go	/^type InnerStruct struct {$/;"	t
Innermost	./go/types/scope.go	/^func (s *Scope) Innermost(pos token.Pos) *Scope {$/;"	f
InotifyAddWatch	./syscall/zsyscall_linux_386.go	/^func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) {$/;"	f
InotifyAddWatch	./syscall/zsyscall_linux_amd64.go	/^func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) {$/;"	f
InotifyAddWatch	./syscall/zsyscall_linux_arm.go	/^func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) {$/;"	f
InotifyAddWatch	./syscall/zsyscall_linux_arm64.go	/^func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) {$/;"	f
InotifyAddWatch	./syscall/zsyscall_linux_ppc64.go	/^func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) {$/;"	f
InotifyAddWatch	./syscall/zsyscall_linux_ppc64le.go	/^func InotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error) {$/;"	f
InotifyEvent	./syscall/types_linux.go	/^type InotifyEvent C.struct_inotify_event$/;"	t
InotifyEvent	./syscall/ztypes_linux_386.go	/^type InotifyEvent struct {$/;"	t
InotifyEvent	./syscall/ztypes_linux_amd64.go	/^type InotifyEvent struct {$/;"	t
InotifyEvent	./syscall/ztypes_linux_arm.go	/^type InotifyEvent struct {$/;"	t
InotifyEvent	./syscall/ztypes_linux_arm64.go	/^type InotifyEvent struct {$/;"	t
InotifyEvent	./syscall/ztypes_linux_ppc64.go	/^type InotifyEvent struct {$/;"	t
InotifyEvent	./syscall/ztypes_linux_ppc64le.go	/^type InotifyEvent struct {$/;"	t
InotifyInit	./syscall/syscall_linux_arm64.go	/^func InotifyInit() (fd int, err error) {$/;"	f
InotifyInit	./syscall/zsyscall_linux_386.go	/^func InotifyInit() (fd int, err error) {$/;"	f
InotifyInit	./syscall/zsyscall_linux_amd64.go	/^func InotifyInit() (fd int, err error) {$/;"	f
InotifyInit	./syscall/zsyscall_linux_arm.go	/^func InotifyInit() (fd int, err error) {$/;"	f
InotifyInit	./syscall/zsyscall_linux_ppc64.go	/^func InotifyInit() (fd int, err error) {$/;"	f
InotifyInit	./syscall/zsyscall_linux_ppc64le.go	/^func InotifyInit() (fd int, err error) {$/;"	f
InotifyInit1	./syscall/zsyscall_linux_386.go	/^func InotifyInit1(flags int) (fd int, err error) {$/;"	f
InotifyInit1	./syscall/zsyscall_linux_amd64.go	/^func InotifyInit1(flags int) (fd int, err error) {$/;"	f
InotifyInit1	./syscall/zsyscall_linux_arm.go	/^func InotifyInit1(flags int) (fd int, err error) {$/;"	f
InotifyInit1	./syscall/zsyscall_linux_arm64.go	/^func InotifyInit1(flags int) (fd int, err error) {$/;"	f
InotifyInit1	./syscall/zsyscall_linux_ppc64.go	/^func InotifyInit1(flags int) (fd int, err error) {$/;"	f
InotifyInit1	./syscall/zsyscall_linux_ppc64le.go	/^func InotifyInit1(flags int) (fd int, err error) {$/;"	f
InotifyRmWatch	./syscall/zsyscall_linux_386.go	/^func InotifyRmWatch(fd int, watchdesc uint32) (success int, err error) {$/;"	f
InotifyRmWatch	./syscall/zsyscall_linux_amd64.go	/^func InotifyRmWatch(fd int, watchdesc uint32) (success int, err error) {$/;"	f
InotifyRmWatch	./syscall/zsyscall_linux_arm.go	/^func InotifyRmWatch(fd int, watchdesc uint32) (success int, err error) {$/;"	f
InotifyRmWatch	./syscall/zsyscall_linux_arm64.go	/^func InotifyRmWatch(fd int, watchdesc uint32) (success int, err error) {$/;"	f
InotifyRmWatch	./syscall/zsyscall_linux_ppc64.go	/^func InotifyRmWatch(fd int, watchdesc uint32) (success int, err error) {$/;"	f
InotifyRmWatch	./syscall/zsyscall_linux_ppc64le.go	/^func InotifyRmWatch(fd int, watchdesc uint32) (success int, err error) {$/;"	f
Input	./cmd/asm/internal/lex/input.go	/^type Input struct {$/;"	t
InputOffset	./encoding/xml/xml.go	/^func (d *Decoder) InputOffset() int64 {$/;"	f
Insert	./go/ast/scope.go	/^func (s *Scope) Insert(obj *Object) (alt *Object) {$/;"	f
Insert	./go/types/scope.go	/^func (s *Scope) Insert(obj Object) Object {$/;"	f
InsertAfter	./container/list/list.go	/^func (l *List) InsertAfter(v interface{}, mark *Element) *Element {$/;"	f
InsertBefore	./container/list/list.go	/^func (l *List) InsertBefore(v interface{}, mark *Element) *Element {$/;"	f
Inset	./image/geom.go	/^func (r Rectangle) Inset(n int) Rectangle {$/;"	f
Inspect	./go/ast/walk.go	/^func Inspect(node Node, f func(Node) bool) {$/;"	f
Inst	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Inst struct {$/;"	t
Inst	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Inst struct {$/;"	t
Inst	./cmd/pprof/internal/plugin/plugin.go	/^type Inst struct {$/;"	t
Inst	./regexp/syntax/prog.go	/^type Inst struct {$/;"	t
InstOp	./regexp/syntax/prog.go	/^type InstOp uint8$/;"	t
InstrumentMapLen	./runtime/race/testdata/regression_test.go	/^func InstrumentMapLen() {$/;"	f
InstrumentMapLen2	./runtime/race/testdata/regression_test.go	/^func InstrumentMapLen2() {$/;"	f
InstrumentMapLen3	./runtime/race/testdata/regression_test.go	/^func InstrumentMapLen3() {$/;"	f
Int	./cmd/compile/internal/big/float.go	/^func (x *Float) Int(z *Int) (*Int, Accuracy) {$/;"	f
Int	./cmd/compile/internal/big/int.go	/^type Int struct {$/;"	t
Int	./cmd/compile/internal/gc/const.go	/^func (n *Node) Int() int64 {$/;"	f
Int	./cmd/compile/internal/gc/syntax.go	/^	ODCLTYPE  \/\/ type Int int$/;"	t
Int	./cmd/pprof/pprof.go	/^func (flags) Int(o string, d int, c string) *int {$/;"	f
Int	./crypto/rand/util.go	/^func Int(rand io.Reader, max *big.Int) (n *big.Int, err error) {$/;"	f
Int	./encoding/gob/codec_test.go	/^type Int int$/;"	t
Int	./expvar/expvar.go	/^type Int struct {$/;"	t
Int	./flag/flag.go	/^func (f *FlagSet) Int(name string, value int, usage string) *int {$/;"	f
Int	./flag/flag.go	/^func Int(name string, value int, usage string) *int {$/;"	f
Int	./math/big/float.go	/^func (x *Float) Int(z *Int) (*Int, Accuracy) {$/;"	f
Int	./math/big/int.go	/^type Int struct {$/;"	t
Int	./math/rand/rand.go	/^func (r *Rand) Int() int {$/;"	f
Int	./math/rand/rand.go	/^func Int() int { return globalRand.Int() }$/;"	f
Int	./reflect/value.go	/^func (v Value) Int() int64 {$/;"	f
Int	./runtime/race/testdata/regression_test.go	/^type Int int$/;"	t
Int31	./math/rand/rand.go	/^func (r *Rand) Int31() int32 { return int32(r.Int63() >> 32) }$/;"	f
Int31	./math/rand/rand.go	/^func Int31() int32 { return globalRand.Int31() }$/;"	f
Int31n	./math/rand/rand.go	/^func (r *Rand) Int31n(n int32) int32 {$/;"	f
Int31n	./math/rand/rand.go	/^func Int31n(n int32) int32 { return globalRand.Int31n(n) }$/;"	f
Int32	./database/sql/driver/types.go	/^var Int32 int32Type$/;"	v
Int32Hash	./runtime/export_test.go	/^var Int32Hash = int32Hash$/;"	v
Int32Key	./runtime/hash_test.go	/^type Int32Key struct {$/;"	t
Int63	./math/rand/rand.go	/^func (r *Rand) Int63() int64 { return r.src.Int63() }$/;"	f
Int63	./math/rand/rand.go	/^func (r *lockedSource) Int63() (n int64) {$/;"	f
Int63	./math/rand/rand.go	/^func Int63() int64 { return globalRand.Int63() }$/;"	f
Int63	./math/rand/rng.go	/^func (rng *rngSource) Int63() int64 {$/;"	f
Int63n	./math/rand/rand.go	/^func (r *Rand) Int63n(n int64) int64 {$/;"	f
Int63n	./math/rand/rand.go	/^func Int63n(n int64) int64 { return globalRand.Int63n(n) }$/;"	f
Int64	./cmd/compile/internal/big/float.go	/^func (x *Float) Int64() (int64, Accuracy) {$/;"	f
Int64	./cmd/compile/internal/big/int.go	/^func (x *Int) Int64() int64 {$/;"	f
Int64	./encoding/json/decode.go	/^func (n Number) Int64() (int64, error) {$/;"	f
Int64	./flag/flag.go	/^func (f *FlagSet) Int64(name string, value int64, usage string) *int64 {$/;"	f
Int64	./flag/flag.go	/^func Int64(name string, value int64, usage string) *int64 {$/;"	f
Int64	./math/big/float.go	/^func (x *Float) Int64() (int64, Accuracy) {$/;"	f
Int64	./math/big/int.go	/^func (x *Int) Int64() int64 {$/;"	f
Int64	./reflect/all_test.go	/^		type Int64 int64$/;"	t
Int64Hash	./runtime/export_test.go	/^var Int64Hash = int64Hash$/;"	v
Int64Key	./runtime/hash_test.go	/^type Int64Key struct {$/;"	t
Int64Val	./go/constant/value.go	/^func Int64Val(x Value) (int64, bool) {$/;"	f
Int64Var	./flag/flag.go	/^func (f *FlagSet) Int64Var(p *int64, name string, value int64, usage string) {$/;"	f
Int64Var	./flag/flag.go	/^func Int64Var(p *int64, name string, value int64, usage string) {$/;"	f
Int8Ptr	./go/internal/gccgoimporter/importer_test.go	/^	{pkgpath: "pointer", name: "Int8Ptr", want: "type Int8Ptr *int8"},$/;"	t
Int8Ptr	./go/internal/gccgoimporter/testdata/pointer.go	/^type Int8Ptr *int8$/;"	t
IntHeap	./container/heap/example_intheap_test.go	/^type IntHeap []int$/;"	t
IntPtr	./reflect/set_test.go	/^type IntPtr *int$/;"	t
IntPtr1	./reflect/set_test.go	/^type IntPtr1 *int$/;"	t
IntSlice	./sort/sort.go	/^type IntSlice []int$/;"	t
IntString	./fmt/scan_test.go	/^type IntString struct {$/;"	t
IntType	./debug/dwarf/type.go	/^type IntType struct {$/;"	t
IntType	./encoding/json/encode_test.go	/^type IntType int$/;"	t
IntVar	./flag/flag.go	/^func (f *FlagSet) IntVar(p *int, name string, value int, usage string) {$/;"	f
IntVar	./flag/flag.go	/^func IntVar(p *int, name string, value int, usage string) {$/;"	f
IntegerType	./builtin/builtin.go	/^type IntegerType int$/;"	t
IntelSyntax	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^func IntelSyntax(inst Inst) string {$/;"	f
Inter	./runtime/race/testdata/mop_test.go	/^type Inter interface {$/;"	t
InterImpl	./runtime/race/testdata/mop_test.go	/^type InterImpl struct {$/;"	t
InterImpl2	./runtime/race/testdata/mop_test.go	/^type InterImpl2 InterImpl$/;"	t
Interface	./container/heap/heap.go	/^type Interface interface {$/;"	t
Interface	./go/types/type.go	/^type Interface struct {$/;"	t
Interface	./net/interface.go	/^type Interface struct {$/;"	t
Interface	./reflect/value.go	/^func (v Value) Interface() (i interface{}) {$/;"	f
Interface	./sort/sort.go	/^type Interface interface {$/;"	t
InterfaceAddrMessage	./syscall/route_bsd.go	/^type InterfaceAddrMessage struct {$/;"	t
InterfaceAddrs	./net/interface.go	/^func InterfaceAddrs() ([]Addr, error) {$/;"	f
InterfaceAnnounceMessage	./syscall/route_dragonfly.go	/^type InterfaceAnnounceMessage struct {$/;"	t
InterfaceAnnounceMessage	./syscall/route_freebsd.go	/^type InterfaceAnnounceMessage struct {$/;"	t
InterfaceAnnounceMessage	./syscall/route_netbsd.go	/^type InterfaceAnnounceMessage struct {$/;"	t
InterfaceAnnounceMessage	./syscall/route_openbsd.go	/^type InterfaceAnnounceMessage struct {$/;"	t
InterfaceByIndex	./net/interface.go	/^func InterfaceByIndex(index int) (*Interface, error) {$/;"	f
InterfaceByName	./net/interface.go	/^func InterfaceByName(name string) (*Interface, error) {$/;"	f
InterfaceData	./reflect/value.go	/^func (v Value) InterfaceData() [2]uintptr {$/;"	f
InterfaceInfo	./syscall/ztypes_windows.go	/^type InterfaceInfo struct {$/;"	t
InterfaceItem	./encoding/gob/codec_test.go	/^type InterfaceItem struct {$/;"	t
InterfaceMessage	./syscall/route_bsd.go	/^type InterfaceMessage struct {$/;"	t
InterfaceMulticastAddrMessage	./syscall/route_darwin.go	/^type InterfaceMulticastAddrMessage struct {$/;"	t
InterfaceMulticastAddrMessage	./syscall/route_dragonfly.go	/^type InterfaceMulticastAddrMessage struct {$/;"	t
InterfaceMulticastAddrMessage	./syscall/route_freebsd.go	/^type InterfaceMulticastAddrMessage struct {$/;"	t
Interfaces	./net/interface.go	/^func Interfaces() ([]Interface, error) {$/;"	f
InternalBenchmark	./go/doc/testdata/benchmark.go	/^type InternalBenchmark struct {$/;"	t
InternalBenchmark	./testing/benchmark.go	/^type InternalBenchmark struct {$/;"	t
InternalError	./compress/flate/inflate.go	/^type InternalError string$/;"	t
InternalExample	./go/doc/testdata/example.go	/^type InternalExample struct {$/;"	t
InternalExample	./testing/example.go	/^type InternalExample struct {$/;"	t
InternalTest	./go/doc/testdata/testing.go	/^type InternalTest struct {$/;"	t
InternalTest	./testing/testing.go	/^type InternalTest struct {$/;"	t
Interrupt	./time/internal_test.go	/^var Interrupt = interrupt$/;"	v
Intersect	./image/geom.go	/^func (r Rectangle) Intersect(s Rectangle) Rectangle {$/;"	f
Intn	./math/rand/rand.go	/^func (r *Rand) Intn(n int) int {$/;"	f
Intn	./math/rand/rand.go	/^func Intn(n int) int { return globalRand.Intn(n) }$/;"	f
Ints	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^		{pkgpath: "sort", name: "Ints", want: "func Ints(a []int)"},$/;"	f
Ints	./sort/sort.go	/^func Ints(a []int) { Sort(IntSlice(a)) }$/;"	f
IntsAreSorted	./sort/sort.go	/^func IntsAreSorted(a []int) bool { return IsSorted(IntSlice(a)) }$/;"	f
Inv	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Inv(x *Rat) *Rat {$/;"	f
Inv	./math/big/rat.go	/^func (z *Rat) Inv(x *Rat) *Rat {$/;"	f
InvalidAddrError	./net/net.go	/^type InvalidAddrError string$/;"	t
InvalidByteError	./encoding/hex/hex.go	/^type InvalidByteError byte$/;"	t
InvalidReason	./crypto/x509/verify.go	/^type InvalidReason int$/;"	t
InvalidUTF8Error	./encoding/json/encode.go	/^type InvalidUTF8Error struct {$/;"	t
InvalidUnmarshalError	./encoding/json/decode.go	/^type InvalidUnmarshalError struct {$/;"	t
Inventory	./text/template/doc.go	/^	type Inventory struct {$/;"	t
Io	./cmd/compile/internal/gc/go.go	/^type Io struct {$/;"	t
IoReader	./runtime/race/testdata/mop_test.go	/^type IoReader interface {$/;"	t
Ioctl	./syscall/exec_solaris_test.go	/^var Ioctl = ioctl$/;"	v
Ioctl	./syscall/export_unix_test.go	/^func Ioctl(fd, req, arg uintptr) (err Errno) {$/;"	f
Ioperm	./syscall/zsyscall_linux_386.go	/^func Ioperm(from int, num int, on int) (err error) {$/;"	f
Ioperm	./syscall/zsyscall_linux_amd64.go	/^func Ioperm(from int, num int, on int) (err error) {$/;"	f
Ioperm	./syscall/zsyscall_linux_ppc64.go	/^func Ioperm(from int, num int, on int) (err error) {$/;"	f
Ioperm	./syscall/zsyscall_linux_ppc64le.go	/^func Ioperm(from int, num int, on int) (err error) {$/;"	f
Iopl	./syscall/zsyscall_linux_386.go	/^func Iopl(level int) (err error) {$/;"	f
Iopl	./syscall/zsyscall_linux_amd64.go	/^func Iopl(level int) (err error) {$/;"	f
Iopl	./syscall/zsyscall_linux_ppc64.go	/^func Iopl(level int) (err error) {$/;"	f
Iopl	./syscall/zsyscall_linux_ppc64le.go	/^func Iopl(level int) (err error) {$/;"	f
Iovec	./syscall/types_darwin.go	/^type Iovec C.struct_iovec$/;"	t
Iovec	./syscall/types_dragonfly.go	/^type Iovec C.struct_iovec$/;"	t
Iovec	./syscall/types_freebsd.go	/^type Iovec C.struct_iovec$/;"	t
Iovec	./syscall/types_linux.go	/^type Iovec C.struct_iovec$/;"	t
Iovec	./syscall/types_netbsd.go	/^type Iovec C.struct_iovec$/;"	t
Iovec	./syscall/types_openbsd.go	/^type Iovec C.struct_iovec$/;"	t
Iovec	./syscall/types_solaris.go	/^type Iovec C.struct_iovec$/;"	t
Iovec	./syscall/ztypes_darwin_386.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_darwin_amd64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_darwin_arm.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_darwin_arm64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_dragonfly_amd64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_freebsd_386.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_freebsd_amd64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_freebsd_arm.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_linux_386.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_linux_amd64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_linux_arm.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_linux_arm64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_linux_ppc64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_linux_ppc64le.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_netbsd_386.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_netbsd_amd64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_netbsd_arm.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_openbsd_386.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_openbsd_amd64.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_openbsd_arm.go	/^type Iovec struct {$/;"	t
Iovec	./syscall/ztypes_solaris_amd64.go	/^type Iovec struct {$/;"	t
IpAdapterAddresses	./internal/syscall/windows/syscall_windows.go	/^type IpAdapterAddresses struct {$/;"	t
IpAdapterAnycastAddress	./internal/syscall/windows/syscall_windows.go	/^type IpAdapterAnycastAddress struct {$/;"	t
IpAdapterDnsServerAdapter	./internal/syscall/windows/syscall_windows.go	/^type IpAdapterDnsServerAdapter struct {$/;"	t
IpAdapterInfo	./syscall/ztypes_windows.go	/^type IpAdapterInfo struct {$/;"	t
IpAdapterMulticastAddress	./internal/syscall/windows/syscall_windows.go	/^type IpAdapterMulticastAddress struct {$/;"	t
IpAdapterPrefix	./internal/syscall/windows/syscall_windows.go	/^type IpAdapterPrefix struct {$/;"	t
IpAdapterUnicastAddress	./internal/syscall/windows/syscall_windows.go	/^type IpAdapterUnicastAddress struct {$/;"	t
IpAddrString	./syscall/ztypes_windows.go	/^type IpAddrString struct {$/;"	t
IpAddressString	./syscall/ztypes_windows.go	/^type IpAddressString struct {$/;"	t
IpMaskString	./syscall/ztypes_windows.go	/^type IpMaskString IpAddressString$/;"	t
Is	./unicode/letter.go	/^func Is(rangeTab *RangeTable, r rune) bool {$/;"	f
Is64	./cmd/compile/internal/gc/subr.go	/^func Is64(t *Type) bool {$/;"	f
IsARM64CMP	./cmd/asm/internal/arch/arm64.go	/^func IsARM64CMP(op int) bool {$/;"	f
IsARM64STLXR	./cmd/asm/internal/arch/arm64.go	/^func IsARM64STLXR(op int) bool {$/;"	f
IsARMCMP	./cmd/asm/internal/arch/arm.go	/^func IsARMCMP(op int) bool {$/;"	f
IsARMFloatCmp	./cmd/asm/internal/arch/arm.go	/^func IsARMFloatCmp(op int) bool {$/;"	f
IsARMMRC	./cmd/asm/internal/arch/arm.go	/^func IsARMMRC(op int) bool {$/;"	f
IsARMMULA	./cmd/asm/internal/arch/arm.go	/^func IsARMMULA(op int) bool {$/;"	f
IsARMSTREX	./cmd/asm/internal/arch/arm.go	/^func IsARMSTREX(op int) bool {$/;"	f
IsAbs	./net/url/url.go	/^func (u *URL) IsAbs() bool {$/;"	f
IsAbs	./path/filepath/path_plan9.go	/^func IsAbs(path string) bool {$/;"	f
IsAbs	./path/filepath/path_unix.go	/^func IsAbs(path string) bool {$/;"	f
IsAbs	./path/filepath/path_windows.go	/^func IsAbs(path string) (b bool) {$/;"	f
IsAbs	./path/path.go	/^func IsAbs(path string) bool {$/;"	f
IsAbsTest	./path/filepath/path_test.go	/^type IsAbsTest struct {$/;"	t
IsAbsTest	./path/path_test.go	/^type IsAbsTest struct {$/;"	t
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (Endian) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (Float32Imm) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (Float64Imm) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (Imm) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (ImmAlt) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (Label) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (Mem) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (PCRel) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (Reg) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (RegList) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (RegShift) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (RegShiftReg) IsArg() {}$/;"	f
IsArg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (RegX) IsArg() {}$/;"	f
IsBoolFlag	./cmd/dist/main.go	/^func (c *count) IsBoolFlag() bool {$/;"	f
IsBoolFlag	./cmd/internal/obj/flag.go	/^func (c *count) IsBoolFlag() bool {$/;"	f
IsBoolFlag	./cmd/internal/obj/flag.go	/^func (f fn0) IsBoolFlag() bool {$/;"	f
IsBoolFlag	./cmd/nm/nm.go	/^func (nflag) IsBoolFlag() bool {$/;"	f
IsBoolFlag	./cmd/vet/main.go	/^func (ts triState) IsBoolFlag() bool {$/;"	f
IsBoolFlag	./flag/flag.go	/^func (b *boolValue) IsBoolFlag() bool { return true }$/;"	f
IsBoolFlag	./flag/flag_test.go	/^func (b *boolFlagVar) IsBoolFlag() bool {$/;"	f
IsBuiltin	./go/types/api.go	/^func (tv TypeAndValue) IsBuiltin() bool {$/;"	f
IsControl	./unicode/graphic.go	/^func IsControl(r rune) bool {$/;"	f
IsDigit	./unicode/digit.go	/^func IsDigit(r rune) bool {$/;"	f
IsDir	./archive/tar/common.go	/^func (fi headerFileInfo) IsDir() bool        { return fi.Mode().IsDir() }$/;"	f
IsDir	./archive/tar/tar_test.go	/^func (symlink) IsDir() bool        { return false }$/;"	f
IsDir	./archive/zip/struct.go	/^func (fi headerFileInfo) IsDir() bool        { return fi.Mode().IsDir() }$/;"	f
IsDir	./cmd/pack/pack_test.go	/^func (f *FakeFile) IsDir() bool {$/;"	f
IsDir	./net/http/fs_test.go	/^func (f *fakeFileInfo) IsDir() bool        { return f.dir }$/;"	f
IsDir	./os/types.go	/^func (fs *fileStat) IsDir() bool  { return fs.Mode().IsDir() }$/;"	f
IsDir	./os/types.go	/^func (m FileMode) IsDir() bool {$/;"	f
IsEmptyTree	./text/template/parse/parse.go	/^func IsEmptyTree(n Node) bool {$/;"	f
IsEncryptedPEMBlock	./crypto/x509/pem_decrypt.go	/^func IsEncryptedPEMBlock(b *pem.Block) bool {$/;"	f
IsError	./syscall/mksyscall_windows.go	/^func (p *Param) IsError() bool {$/;"	f
IsExist	./os/error.go	/^func IsExist(err error) bool {$/;"	f
IsExported	./go/ast/ast.go	/^func (id *Ident) IsExported() bool { return IsExported(id.Name) }$/;"	f
IsExported	./go/ast/ast.go	/^func IsExported(name string) bool {$/;"	f
IsField	./go/types/object.go	/^func (obj *Var) IsField() bool { return obj.isField }$/;"	f
IsGlobalUnicast	./net/ip.go	/^func (ip IP) IsGlobalUnicast() bool {$/;"	f
IsGraphic	./unicode/graphic.go	/^func IsGraphic(r rune) bool {$/;"	f
IsIdleForTesting	./net/http/export_test.go	/^func (t *Transport) IsIdleForTesting() bool {$/;"	f
IsInf	./cmd/compile/internal/big/float.go	/^func (x *Float) IsInf() bool {$/;"	f
IsInf	./math/big/float.go	/^func (x *Float) IsInf() bool {$/;"	f
IsInf	./math/bits.go	/^func IsInf(f float64, sign int) bool {$/;"	f
IsInf	./math/cmplx/isinf.go	/^func IsInf(x complex128) bool {$/;"	f
IsInt	./cmd/compile/internal/big/float.go	/^func (x *Float) IsInt() bool {$/;"	f
IsInt	./cmd/compile/internal/big/rat.go	/^func (x *Rat) IsInt() bool {$/;"	f
IsInt	./math/big/float.go	/^func (x *Float) IsInt() bool {$/;"	f
IsInt	./math/big/rat.go	/^func (x *Rat) IsInt() bool {$/;"	f
IsInterface	./go/types/predicates.go	/^func IsInterface(typ Type) bool {$/;"	f
IsInterfaceLocalMulticast	./net/ip.go	/^func (ip IP) IsInterfaceLocalMulticast() bool {$/;"	f
IsKeyword	./go/token/token.go	/^func (tok Token) IsKeyword() bool { return keyword_beg < tok && tok < keyword_end }$/;"	f
IsLetter	./unicode/graphic.go	/^func IsLetter(r rune) bool {$/;"	f
IsLinkLocalMulticast	./net/ip.go	/^func (ip IP) IsLinkLocalMulticast() bool {$/;"	f
IsLinkLocalUnicast	./net/ip.go	/^func (ip IP) IsLinkLocalUnicast() bool {$/;"	f
IsLiteral	./go/token/token.go	/^func (tok Token) IsLiteral() bool { return literal_beg < tok && tok < literal_end }$/;"	f
IsLoopback	./net/ip.go	/^func (ip IP) IsLoopback() bool {$/;"	f
IsLower	./unicode/letter.go	/^func IsLower(r rune) bool {$/;"	f
IsMark	./unicode/graphic.go	/^func IsMark(r rune) bool {$/;"	f
IsMulticast	./net/ip.go	/^func (ip IP) IsMulticast() bool {$/;"	f
IsNaN	./math/bits.go	/^func IsNaN(f float64) (is bool) {$/;"	f
IsNaN	./math/cmplx/isnan.go	/^func IsNaN(x complex128) bool {$/;"	f
IsNil	./go/types/api.go	/^func (tv TypeAndValue) IsNil() bool {$/;"	f
IsNil	./reflect/value.go	/^func (v Value) IsNil() bool {$/;"	f
IsNotExist	./os/error.go	/^func IsNotExist(err error) bool {$/;"	f
IsNumber	./unicode/graphic.go	/^func IsNumber(r rune) bool {$/;"	f
IsOnCurve	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) IsOnCurve(x, y *big.Int) bool {$/;"	f
IsOnCurve	./crypto/elliptic/p224.go	/^func (curve p224Curve) IsOnCurve(bigX, bigY *big.Int) bool {$/;"	f
IsOneOf	./unicode/graphic.go	/^func IsOneOf(ranges []*RangeTable, r rune) bool {$/;"	f
IsOperator	./go/token/token.go	/^func (tok Token) IsOperator() bool { return operator_beg < tok && tok < operator_end }$/;"	f
IsPPC64CMP	./cmd/asm/internal/arch/ppc64.go	/^func IsPPC64CMP(op int) bool {$/;"	f
IsPPC64NEG	./cmd/asm/internal/arch/ppc64.go	/^func IsPPC64NEG(op int) bool {$/;"	f
IsPPC64RLD	./cmd/asm/internal/arch/ppc64.go	/^func IsPPC64RLD(op int) bool {$/;"	f
IsPathSeparator	./os/path_plan9.go	/^func IsPathSeparator(c uint8) bool {$/;"	f
IsPathSeparator	./os/path_unix.go	/^func IsPathSeparator(c uint8) bool {$/;"	f
IsPathSeparator	./os/path_windows.go	/^func IsPathSeparator(c uint8) bool {$/;"	f
IsPermission	./os/error.go	/^func IsPermission(err error) bool {$/;"	f
IsPrint	./strconv/quote.go	/^func IsPrint(r rune) bool {$/;"	f
IsPrint	./unicode/graphic.go	/^func IsPrint(r rune) bool {$/;"	f
IsPunct	./unicode/graphic.go	/^func IsPunct(r rune) bool {$/;"	f
IsREX	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (p Prefix) IsREX() bool {$/;"	f
IsRO	./reflect/export_test.go	/^func IsRO(v Value) bool {$/;"	f
IsRegisterShift	./cmd/asm/internal/lex/lex.go	/^func IsRegisterShift(r ScanToken) bool {$/;"	f
IsRegular	./os/types.go	/^func (m FileMode) IsRegular() bool {$/;"	f
IsScanValue	./database/sql/driver/types.go	/^func IsScanValue(v interface{}) bool {$/;"	f
IsSorted	./sort/sort.go	/^func IsSorted(data Interface) bool {$/;"	f
IsSpace	./bufio/export_test.go	/^var IsSpace = isSpace$/;"	v
IsSpace	./fmt/export_test.go	/^var IsSpace = isSpace$/;"	v
IsSpace	./internal/format/format.go	/^func IsSpace(b byte) bool {$/;"	f
IsSpace	./unicode/graphic.go	/^func IsSpace(r rune) bool {$/;"	f
IsSurrogate	./unicode/utf16/utf16.go	/^func IsSurrogate(r rune) bool {$/;"	f
IsSymbol	./unicode/graphic.go	/^func IsSymbol(r rune) bool {$/;"	f
IsTerminal	./cmd/pprof/internal/plugin/plugin.go	/^func (ui *stdUI) IsTerminal() bool {$/;"	f
IsTitle	./unicode/letter.go	/^func IsTitle(r rune) bool {$/;"	f
IsType	./go/types/api.go	/^func (tv TypeAndValue) IsType() bool {$/;"	f
IsUTF16	./syscall/mksyscall_windows.go	/^func (f *Fn) IsUTF16() bool {$/;"	f
IsUnspecified	./net/ip.go	/^func (ip IP) IsUnspecified() bool {$/;"	f
IsUpper	./unicode/letter.go	/^func IsUpper(r rune) bool {$/;"	f
IsValid	./go/token/position.go	/^func (p Pos) IsValid() bool {$/;"	f
IsValid	./go/token/position.go	/^func (pos *Position) IsValid() bool { return pos.Line > 0 }$/;"	f
IsValid	./reflect/value.go	/^func (v Value) IsValid() bool {$/;"	f
IsValid	./text/scanner/scanner.go	/^func (pos *Position) IsValid() bool { return pos.Line > 0 }$/;"	f
IsValue	./database/sql/driver/types.go	/^func IsValue(v interface{}) bool {$/;"	f
IsValue	./go/types/api.go	/^func (tv TypeAndValue) IsValue() bool {$/;"	f
IsVar	./cmd/cgo/main.go	/^func (n *Name) IsVar() bool {$/;"	f
IsVariadic	./reflect/type.go	/^func (t *rtype) IsVariadic() bool {$/;"	f
IsVoid	./go/types/api.go	/^func (tv TypeAndValue) IsVoid() bool {$/;"	f
IsWordChar	./regexp/syntax/prog.go	/^func IsWordChar(r rune) bool {$/;"	f
IsZero	./time/time.go	/^func (t Time) IsZero() bool {$/;"	f
Isconst	./cmd/compile/internal/gc/const.go	/^func Isconst(n *Node, ct int) bool {$/;"	f
Iself	./cmd/link/internal/ld/elf.go	/^var Iself bool$/;"	v
Isfat	./cmd/compile/internal/gc/gsubr.go	/^func Isfat(t *Type) bool {$/;"	f
Isfixedarray	./cmd/compile/internal/gc/subr.go	/^func Isfixedarray(t *Type) bool {$/;"	f
Isinter	./cmd/compile/internal/gc/subr.go	/^func Isinter(t *Type) bool {$/;"	f
Ismem	./cmd/compile/internal/gc/gsubr.go	/^func Ismem(n *Node) bool {$/;"	f
Issetugid	./syscall/zsyscall_darwin_386.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_darwin_amd64.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_darwin_arm.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_darwin_arm64.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_dragonfly_amd64.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_freebsd_386.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_freebsd_amd64.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_freebsd_arm.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_netbsd_386.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_netbsd_amd64.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_netbsd_arm.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_openbsd_386.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_openbsd_amd64.go	/^func Issetugid() (tainted bool) {$/;"	f
Issetugid	./syscall/zsyscall_openbsd_arm.go	/^func Issetugid() (tainted bool) {$/;"	f
Isslice	./cmd/compile/internal/gc/subr.go	/^func Isslice(t *Type) bool {$/;"	f
Issue7379	./html/template/escape_test.go	/^type Issue7379 int$/;"	t
Istype	./cmd/compile/internal/gc/subr.go	/^func Istype(t *Type, et int) bool {$/;"	f
Item	./cmd/yacc/yacc.go	/^type Item struct {$/;"	t
Item	./container/heap/example_pq_test.go	/^type Item struct {$/;"	t
Item	./runtime/race/testdata/mop_test.go	/^	type Item struct {$/;"	t
Iter	./cmd/compile/internal/gc/go.go	/^type Iter struct {$/;"	t
Iterate	./go/token/position.go	/^func (s *FileSet) Iterate(f func(*File) bool) {$/;"	f
Itimerval	./runtime/defs2_linux.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_arm_linux.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_darwin.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_dragonfly.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_freebsd.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_linux.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_netbsd.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_openbsd.go	/^type Itimerval C.struct_itimerval$/;"	t
Itimerval	./runtime/defs_solaris.go	/^type Itimerval C.struct_itimerval$/;"	t
Itoa	./strconv/itoa.go	/^func Itoa(i int) string {$/;"	f
Itoa	./syscall/export_test.go	/^var Itoa = itoa$/;"	v
J0	./math/j0.go	/^func J0(x float64) float64 {$/;"	f
J1	./math/j1.go	/^func J1(x float64) float64 {$/;"	f
JB	./cmd/asm/internal/asm/testdata/amd64.s	/^	JB	label$/;"	l
JC	./cmd/asm/internal/asm/testdata/386.s	/^	JC	label$/;"	l
JMP	./cmd/asm/internal/asm/testdata/386.s	/^	JMP	label$/;"	l
JMP	./cmd/asm/internal/asm/testdata/amd64.s	/^	JMP	label$/;"	l
JMP	./os/signal/sig.s	/^#define JMP B$/;"	d
JMP	./os/signal/sig.s	/^#define JMP BR$/;"	d
JMP	./runtime/debug/stubs.s	/^#define JMP B$/;"	d
JMP	./runtime/debug/stubs.s	/^#define JMP BR$/;"	d
JSEscape	./html/template/escape.go	/^func JSEscape(w io.Writer, b []byte) {$/;"	f
JSEscape	./text/template/funcs.go	/^func JSEscape(w io.Writer, b []byte) {$/;"	f
JSEscapeString	./html/template/escape.go	/^func JSEscapeString(s string) string {$/;"	f
JSEscapeString	./text/template/funcs.go	/^func JSEscapeString(s string) string {$/;"	f
JSEscaper	./html/template/escape.go	/^func JSEscaper(args ...interface{}) string {$/;"	f
JSEscaper	./text/template/funcs.go	/^func JSEscaper(args ...interface{}) string {$/;"	f
JSONEmbeddedField	./cmd/vet/testdata/structtag.go	/^type JSONEmbeddedField struct {$/;"	t
Jacobi	./cmd/compile/internal/big/int.go	/^func Jacobi(x, y *Int) int {$/;"	f
Jacobi	./math/big/int.go	/^func Jacobi(x, y *Int) int {$/;"	f
Jar	./net/http/cookiejar/jar.go	/^type Jar struct {$/;"	t
Jconv	./cmd/compile/internal/gc/fmt.go	/^func Jconv(n *Node, flag int) string {$/;"	f
Jn	./math/jn.go	/^func Jn(n int, x float64) float64 {$/;"	f
Join	./bytes/bytes.go	/^func Join(s [][]byte, sep []byte) []byte {$/;"	f
Join	./path/filepath/path.go	/^func Join(elem ...string) string {$/;"	f
Join	./path/path.go	/^func Join(elem ...string) string {$/;"	f
Join	./strings/strings.go	/^func Join(a []string, sep string) string {$/;"	f
JoinHostPort	./net/ipsock.go	/^func JoinHostPort(host, port string) string {$/;"	f
JoinTest	./path/filepath/path_test.go	/^type JoinTest struct {$/;"	t
JoinTest	./path/path_test.go	/^type JoinTest struct {$/;"	t
Joininfo	./cmd/compile/internal/arm/peep.go	/^type Joininfo struct {$/;"	t
JustOnB	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (*B) JustOnB()             {}$/;"	f
JustOnT	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (*T) JustOnT()             {}$/;"	f
KEYROUND	./crypto/rc4/rc4_amd64.s	/^#define KEYROUND(xmm, load, off, r1, r2, index) \\$/;"	d
KEYROUND	./crypto/rc4/rc4_amd64p32.s	/^#define KEYROUND(xmm, load, off, r1, r2, index) \\$/;"	d
Kevent	./runtime/defs_darwin.go	/^type Kevent C.struct_kevent$/;"	t
Kevent	./runtime/defs_dragonfly.go	/^type Kevent C.struct_kevent$/;"	t
Kevent	./runtime/defs_freebsd.go	/^type Kevent C.struct_kevent$/;"	t
Kevent	./runtime/defs_netbsd.go	/^type Kevent C.struct_kevent$/;"	t
Kevent	./syscall/syscall_bsd.go	/^func Kevent(kq int, changes, events []Kevent_t, timeout *Timespec) (n int, err error) {$/;"	f
KeventT	./runtime/defs_openbsd.go	/^type KeventT C.struct_kevent$/;"	t
Kevent_t	./syscall/types_darwin.go	/^type Kevent_t C.struct_kevent$/;"	t
Kevent_t	./syscall/types_dragonfly.go	/^type Kevent_t C.struct_kevent$/;"	t
Kevent_t	./syscall/types_freebsd.go	/^type Kevent_t C.struct_kevent$/;"	t
Kevent_t	./syscall/types_netbsd.go	/^type Kevent_t C.struct_kevent$/;"	t
Kevent_t	./syscall/types_openbsd.go	/^type Kevent_t C.struct_kevent$/;"	t
Kevent_t	./syscall/ztypes_darwin_386.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_darwin_amd64.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_darwin_arm.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_darwin_arm64.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_dragonfly_amd64.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_freebsd_386.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_freebsd_amd64.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_freebsd_arm.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_netbsd_386.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_netbsd_amd64.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_netbsd_arm.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_openbsd_386.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_openbsd_amd64.go	/^type Kevent_t struct {$/;"	t
Kevent_t	./syscall/ztypes_openbsd_arm.go	/^type Kevent_t struct {$/;"	t
Key	./go/types/type.go	/^func (m *Map) Key() Type { return m.key }$/;"	f
Key	./internal/syscall/windows/registry/key.go	/^type Key syscall.Handle$/;"	t
Key	./reflect/type.go	/^func (t *rtype) Key() Type {$/;"	f
Key	./runtime/hash_test.go	/^type Key interface {$/;"	t
KeyInfo	./internal/syscall/windows/registry/key.go	/^type KeyInfo struct {$/;"	t
KeySizeError	./crypto/aes/cipher.go	/^type KeySizeError int$/;"	t
KeySizeError	./crypto/des/cipher.go	/^type KeySizeError int$/;"	t
KeySizeError	./crypto/rc4/rc4.go	/^type KeySizeError int$/;"	t
KeyTest	./crypto/aes/aes_test.go	/^type KeyTest struct {$/;"	t
KeyUsage	./crypto/x509/x509.go	/^type KeyUsage int$/;"	t
KeyValue	./expvar/expvar.go	/^type KeyValue struct {$/;"	t
Kill	./os/doc.go	/^func (p *Process) Kill() error {$/;"	f
Kill	./syscall/syscall_darwin.go	/^func Kill(pid int, signum Signal) (err error) { return kill(pid, int(signum), 1) }$/;"	f
Kill	./syscall/syscall_nacl.go	/^func Kill(pid int, signum Signal) error { return ENOSYS }$/;"	f
Kill	./syscall/zsyscall_dragonfly_amd64.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_freebsd_386.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_freebsd_amd64.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_freebsd_arm.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_linux_386.go	/^func Kill(pid int, sig Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_linux_amd64.go	/^func Kill(pid int, sig Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_linux_arm.go	/^func Kill(pid int, sig Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_linux_arm64.go	/^func Kill(pid int, sig Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_linux_ppc64.go	/^func Kill(pid int, sig Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_linux_ppc64le.go	/^func Kill(pid int, sig Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_netbsd_386.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_netbsd_amd64.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_netbsd_arm.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_openbsd_386.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_openbsd_amd64.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_openbsd_arm.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kill	./syscall/zsyscall_solaris_amd64.go	/^func Kill(pid int, signum Signal) (err error) {$/;"	f
Kind	./go/constant/value.go	/^func (boolVal) Kind() Kind    { return Bool }$/;"	f
Kind	./go/constant/value.go	/^func (complexVal) Kind() Kind { return Complex }$/;"	f
Kind	./go/constant/value.go	/^func (floatVal) Kind() Kind   { return Float }$/;"	f
Kind	./go/constant/value.go	/^func (int64Val) Kind() Kind   { return Int }$/;"	f
Kind	./go/constant/value.go	/^func (intVal) Kind() Kind     { return Int }$/;"	f
Kind	./go/constant/value.go	/^func (stringVal) Kind() Kind  { return String }$/;"	f
Kind	./go/constant/value.go	/^func (unknownVal) Kind() Kind { return Unknown }$/;"	f
Kind	./go/constant/value.go	/^type Kind int$/;"	t
Kind	./go/types/selection.go	/^func (s *Selection) Kind() SelectionKind { return s.kind }$/;"	f
Kind	./go/types/type.go	/^func (b *Basic) Kind() BasicKind { return b.kind }$/;"	f
Kind	./reflect/type.go	/^func (t *rtype) Kind() Kind { return Kind(t.kind & kindMask) }$/;"	f
Kind	./reflect/type.go	/^type Kind uint$/;"	t
Kind	./reflect/value.go	/^func (v Value) Kind() Kind {$/;"	f
Klogctl	./syscall/zsyscall_linux_386.go	/^func Klogctl(typ int, buf []byte) (n int, err error) {$/;"	f
Klogctl	./syscall/zsyscall_linux_amd64.go	/^func Klogctl(typ int, buf []byte) (n int, err error) {$/;"	f
Klogctl	./syscall/zsyscall_linux_arm.go	/^func Klogctl(typ int, buf []byte) (n int, err error) {$/;"	f
Klogctl	./syscall/zsyscall_linux_arm64.go	/^func Klogctl(typ int, buf []byte) (n int, err error) {$/;"	f
Klogctl	./syscall/zsyscall_linux_ppc64.go	/^func Klogctl(typ int, buf []byte) (n int, err error) {$/;"	f
Klogctl	./syscall/zsyscall_linux_ppc64le.go	/^func Klogctl(typ int, buf []byte) (n int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_darwin_386.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_darwin_amd64.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_darwin_arm.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_darwin_arm64.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_dragonfly_amd64.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_freebsd_386.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_freebsd_amd64.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_freebsd_arm.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_netbsd_386.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_netbsd_amd64.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_netbsd_arm.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_openbsd_386.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_openbsd_amd64.go	/^func Kqueue() (fd int, err error) {$/;"	f
Kqueue	./syscall/zsyscall_openbsd_arm.go	/^func Kqueue() (fd int, err error) {$/;"	f
L0	./cmd/vet/testdata/copylock_func.go	/^type L0 struct {$/;"	t
L1	./cmd/vet/testdata/copylock_func.go	/^type L1 struct {$/;"	t
L1	./math/big/arith_386.s	/^L1:	MOVL (SI)(BX*4), AX$/;"	l
L1	./math/big/arith_amd64.s	/^L1:	\/\/ n > 0$/;"	l
L1	./math/big/arith_arm.s	/^L1:$/;"	l
L1	./math/log_amd64.s	/^#define L1     6.666666666666735130e-01   \/\/ 0x3FE5555555555593$/;"	d
L2	./cmd/vet/testdata/copylock_func.go	/^type L2 struct {$/;"	t
L2	./math/big/arith_386.s	/^L2:	MOVL (SI)(BX*4), AX$/;"	l
L2	./math/big/arith_amd64.s	/^L2:	\/\/ n > 0$/;"	l
L2	./math/big/arith_arm.s	/^L2:$/;"	l
L2	./math/log_amd64.s	/^#define L2     3.999999999940941908e-01   \/\/ 0x3FD999999997FA04$/;"	d
L3	./math/big/arith_386.s	/^L3:	ADDL (SI)(BX*4), AX$/;"	l
L3	./math/big/arith_amd64.s	/^L3:	\/\/ n > 0$/;"	l
L3	./math/big/arith_arm.s	/^L3:$/;"	l
L3	./math/log_amd64.s	/^#define L3     2.857142874366239149e-01   \/\/ 0x3FD2492494229359$/;"	d
L3a	./math/big/arith_arm.s	/^L3a:$/;"	l
L4	./math/big/arith_386.s	/^L4:	MOVL (SI)(BX*4), DX$/;"	l
L4	./math/big/arith_amd64.s	/^L4:	\/\/ n > 0$/;"	l
L4	./math/big/arith_arm.s	/^L4:$/;"	l
L4	./math/log_amd64.s	/^#define L4     2.222219843214978396e-01   \/\/ 0x3FCC71C51D8E78AF$/;"	d
L4a	./math/big/arith_arm.s	/^L4a:$/;"	l
L5	./math/big/arith_386.s	/^L5:	MOVL (SI)(BX*4), AX$/;"	l
L5	./math/big/arith_amd64.s	/^L5:	MOVQ (R8)(BX*8), AX$/;"	l
L5	./math/log_amd64.s	/^#define L5     1.818357216161805012e-01   \/\/ 0x3FC7466496CB03DE$/;"	d
L6	./math/big/arith_386.s	/^L6:	MOVL (SI)(BX*4), AX$/;"	l
L6	./math/big/arith_amd64.s	/^L6:	MOVQ (R8)(BX*8), AX$/;"	l
L6	./math/big/arith_arm.s	/^L6:$/;"	l
L6	./math/log_amd64.s	/^#define L6     1.531383769920937332e-01   \/\/ 0x3FC39A09D078C69F$/;"	d
L7	./math/big/arith_386.s	/^L7:	MOVL (SI)(BX*4), AX$/;"	l
L7	./math/big/arith_amd64.s	/^L7:	MOVQ (R8)(BX*8), AX$/;"	l
L7	./math/big/arith_arm.s	/^L7:$/;"	l
L7	./math/log_amd64.s	/^#define L7     1.479819860511658591e-01   \/\/ 0x3FC2F112DF3E5244$/;"	d
L8	./math/big/arith_386.s	/^L8:	MOVL AX, DX		\/\/ w = w1$/;"	l
L8	./math/big/arith_amd64.s	/^L8:	MOVQ AX, DX		\/\/ w = w1$/;"	l
L8	./math/big/arith_arm.s	/^L8:$/;"	l
L9	./math/big/arith_386.s	/^L9:	MOVL AX, DX		\/\/ w = w1$/;"	l
L9	./math/big/arith_amd64.s	/^L9:	MOVQ AX, DX		\/\/ w = w1$/;"	l
L9	./math/big/arith_arm.s	/^L9:$/;"	l
LD2STR	./cmd/internal/obj/arm64/asm7.go	/^func LD2STR(o uint32) uint32 {$/;"	f
LDSTR12U	./cmd/internal/obj/arm64/asm7.go	/^func LDSTR12U(sz uint32, v uint32, opc uint32) uint32 {$/;"	f
LDSTR9S	./cmd/internal/obj/arm64/asm7.go	/^func LDSTR9S(sz uint32, v uint32, opc uint32) uint32 {$/;"	f
LDSTX	./cmd/internal/obj/arm64/asm7.go	/^func LDSTX(sz uint32, o2 uint32, l uint32, o1 uint32, o0 uint32) uint32 {$/;"	f
LFNode	./runtime/export_test.go	/^type LFNode struct {$/;"	t
LFStackPop	./runtime/export_test.go	/^func LFStackPop(head *uint64) *LFNode {$/;"	f
LFStackPush	./runtime/export_test.go	/^func LFStackPush(head *uint64, node *LFNode) {$/;"	f
LIMIT_IN_PAGES	./runtime/sys_linux_386.s	/^#define LIMIT_IN_PAGES 0x10$/;"	d
LN2	./math/exp_amd64.s	/^#define LN2 0.6931471805599453094172321214581766 \/\/ log_e(2)$/;"	d
LN2L	./math/exp_amd64.s	/^#define LN2L 0.28235290563031577122588448175013436025525412068e-12 \/\/ lower half LN2$/;"	d
LN2U	./math/exp_amd64.s	/^#define LN2U 0.69314718055966295651160180568695068359375 \/\/ upper half LN2$/;"	d
LOAD	./cmd/compile/internal/gc/reg.go	/^func LOAD(r *Reg, z int) uint64 {$/;"	f
LOAD	./crypto/rc4/rc4_amd64.s	/^#define LOAD(off, reg) \\$/;"	d
LOAD	./crypto/rc4/rc4_amd64p32.s	/^#define LOAD(off, reg) \\$/;"	d
LOAD	./crypto/sha1/sha1block_386.s	/^#define LOAD(index, e) \\$/;"	d
LOAD	./crypto/sha1/sha1block_amd64.s	/^#define LOAD(index) \\$/;"	d
LOAD	./crypto/sha1/sha1block_amd64p32.s	/^#define LOAD(index) \\$/;"	d
LOAD	./crypto/sha1/sha1block_arm.s	/^#define LOAD(Re) \\$/;"	d
LOG2E	./math/exp_amd64.s	/^#define LOG2E 1.4426950408889634073599246810018920 \/\/ 1\/LN2$/;"	d
LOP_IRR	./cmd/internal/obj/ppc64/asm9.go	/^func LOP_IRR(op uint32, a uint32, s uint32, uimm uint32) uint32 {$/;"	f
LOP_RRR	./cmd/internal/obj/ppc64/asm9.go	/^func LOP_RRR(op uint32, a uint32, s uint32, b uint32) uint32 {$/;"	f
LR	./runtime/go_tls.h	/^#define LR /;"	d
LSHIFT	./runtime/memmove_arm.s	/^#define LSHIFT	R6$/;"	d
LSym	./cmd/internal/obj/link.go	/^type LSym struct {$/;"	t
LSym	./cmd/link/internal/ld/link.go	/^type LSym struct {$/;"	t
Label	./cmd/compile/internal/gc/go.go	/^type Label struct {$/;"	t
Label	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Label uint32$/;"	t
Label	./cmd/pprof/internal/profile/profile.go	/^type Label struct {$/;"	t
Label	./go/types/object.go	/^type Label struct {$/;"	t
LargeStruct	./runtime/malloc_test.go	/^type LargeStruct struct {$/;"	t
LastIndex	./bytes/bytes.go	/^func LastIndex(s, sep []byte) int {$/;"	f
LastIndex	./strings/strings.go	/^func LastIndex(s, sep string) int {$/;"	f
LastIndexAny	./bytes/bytes.go	/^func LastIndexAny(s []byte, chars string) int {$/;"	f
LastIndexAny	./strings/strings.go	/^func LastIndexAny(s, chars string) int {$/;"	f
LastIndexByte	./bytes/bytes.go	/^func LastIndexByte(s []byte, c byte) int {$/;"	f
LastIndexByte	./strings/strings.go	/^func LastIndexByte(s string, c byte) int {$/;"	f
LastIndexFunc	./bytes/bytes.go	/^func LastIndexFunc(s []byte, f func(r rune) bool) int {$/;"	f
LastIndexFunc	./strings/strings.go	/^func LastIndexFunc(s string, f func(rune) bool) int {$/;"	f
LastInsertId	./database/sql/driver/driver.go	/^func (RowsAffected) LastInsertId() (int64, error) {$/;"	f
LastInsertId	./database/sql/driver/driver.go	/^func (noRows) LastInsertId() (int64, error) {$/;"	f
LastInsertId	./database/sql/sql.go	/^func (dr driverResult) LastInsertId() (int64, error) {$/;"	f
LazyDLL	./syscall/dll_windows.go	/^type LazyDLL struct {$/;"	t
LazyProc	./syscall/dll_windows.go	/^type LazyProc struct {$/;"	t
Lchown	./os/file_plan9.go	/^func Lchown(name string, uid, gid int) error {$/;"	f
Lchown	./os/file_posix.go	/^func Lchown(name string, uid, gid int) error {$/;"	f
Lchown	./syscall/fs_nacl.go	/^func Lchown(path string, uid, gid int) error {$/;"	f
Lchown	./syscall/syscall_linux_arm64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/syscall_windows.go	/^func Lchown(path string, uid int, gid int) (err error) { return EWINDOWS }$/;"	f
Lchown	./syscall/zsyscall_darwin_386.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_darwin_amd64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_darwin_arm.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_darwin_arm64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_dragonfly_amd64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_freebsd_386.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_freebsd_amd64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_freebsd_arm.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_linux_386.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_linux_amd64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_linux_arm.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_linux_ppc64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_linux_ppc64le.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_netbsd_386.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_netbsd_amd64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_netbsd_arm.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_openbsd_386.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_openbsd_amd64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_openbsd_arm.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
Lchown	./syscall/zsyscall_solaris_amd64.go	/^func Lchown(path string, uid int, gid int) (err error) {$/;"	f
LdMachoCmd	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoCmd struct {$/;"	t
LdMachoDysymtab	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoDysymtab struct {$/;"	t
LdMachoObj	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoObj struct {$/;"	t
LdMachoRel	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoRel struct {$/;"	t
LdMachoSect	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoSect struct {$/;"	t
LdMachoSeg	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoSeg struct {$/;"	t
LdMachoSym	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoSym struct {$/;"	t
LdMachoSymtab	./cmd/link/internal/ld/ldmacho.go	/^type LdMachoSymtab struct {$/;"	t
Ldec128	./crypto/aes/asm_amd64.s	/^Ldec128:$/;"	l
Ldec196	./crypto/aes/asm_amd64.s	/^Ldec196:$/;"	l
Ldec256	./crypto/aes/asm_amd64.s	/^Ldec256:$/;"	l
Ldexp	./math/ldexp.go	/^func Ldexp(frac float64, exp int) float64$/;"	f
Ldmain	./cmd/link/internal/ld/pobj.go	/^func Ldmain() {$/;"	f
Le16	./cmd/link/internal/ld/lib.go	/^func Le16(b []byte) uint16 {$/;"	f
Le32	./cmd/link/internal/ld/lib.go	/^func Le32(b []byte) uint32 {$/;"	f
Le64	./cmd/link/internal/ld/lib.go	/^func Le64(b []byte) uint64 {$/;"	f
LeafSizeHelper	./cmd/compile/internal/big/natconv_test.go	/^func LeafSizeHelper(b *testing.B, base Word, size int) {$/;"	f
LeafSizeHelper	./math/big/natconv_test.go	/^func LeafSizeHelper(b *testing.B, base Word, size int) {$/;"	f
Left	./cmd/compile/internal/gc/syntax.go	/^	ODCL             \/\/ var Left (declares Left of type Left.Type)$/;"	t
Left	./cmd/compile/internal/gc/syntax.go	/^	ODCL             \/\/ var Left (declares Left of type Left.Type)$/;"	v
Len	./bytes/buffer.go	/^func (b *Buffer) Len() int { return len(b.buf) - b.off }$/;"	f
Len	./bytes/reader.go	/^func (r *Reader) Len() int {$/;"	f
Len	./cmd/compile/internal/gc/export.go	/^func (x methodbyname) Len() int {$/;"	f
Len	./cmd/compile/internal/gc/plive.go	/^func (x blockrpocmp) Len() int           { return len(x) }$/;"	f
Len	./cmd/compile/internal/gc/popt.go	/^func (x startcmp) Len() int {$/;"	f
Len	./cmd/compile/internal/gc/reg.go	/^func (x rcmp) Len() int {$/;"	f
Len	./cmd/compile/internal/gc/subr.go	/^func (x errcmp) Len() int {$/;"	f
Len	./cmd/compile/internal/gc/subr.go	/^func (x methcmp) Len() int {$/;"	f
Len	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByExpr) Len() int      { return len(x) }$/;"	f
Len	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByOrd) Len() int      { return len(x) }$/;"	f
Len	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByType) Len() int      { return len(x) }$/;"	f
Len	./cmd/cover/cover.go	/^func (b blockSlice) Len() int           { return len(b) }$/;"	f
Len	./cmd/cover/profile.go	/^func (b blocksByStart) Len() int      { return len(b) }$/;"	f
Len	./cmd/cover/profile.go	/^func (b boundariesByPos) Len() int      { return len(b) }$/;"	f
Len	./cmd/cover/profile.go	/^func (p byFileName) Len() int           { return len(p) }$/;"	f
Len	./cmd/fix/fix.go	/^func (f byDate) Len() int           { return len(f) }$/;"	f
Len	./cmd/fix/fix.go	/^func (f byName) Len() int           { return len(f) }$/;"	f
Len	./cmd/go/test.go	/^func (x byOrder) Len() int           { return len(x) }$/;"	f
Len	./cmd/internal/obj/arm/asm5.go	/^func (x ocmp) Len() int {$/;"	f
Len	./cmd/internal/obj/arm64/asm7.go	/^func (x ocmp) Len() int {$/;"	f
Len	./cmd/internal/obj/ppc64/asm9.go	/^func (x ocmp) Len() int {$/;"	f
Len	./cmd/internal/objfile/macho.go	/^func (x uint64s) Len() int           { return len(x) }$/;"	f
Len	./cmd/internal/objfile/objfile.go	/^func (x byAddr) Len() int           { return len(x) }$/;"	f
Len	./cmd/link/internal/ld/ldelf.go	/^func (x rbyoff) Len() int {$/;"	f
Len	./cmd/link/internal/ld/macho.go	/^func (x machoscmp) Len() int {$/;"	f
Len	./cmd/link/internal/ld/pe.go	/^func (x pescmp) Len() int {$/;"	f
Len	./cmd/link/internal/ld/symtab.go	/^func (libs byPkg) Len() int {$/;"	f
Len	./cmd/nm/nm.go	/^func (x byAddr) Len() int           { return len(x) }$/;"	f
Len	./cmd/nm/nm.go	/^func (x byName) Len() int           { return len(x) }$/;"	f
Len	./cmd/nm/nm.go	/^func (x bySize) Len() int           { return len(x) }$/;"	f
Len	./cmd/pprof/internal/report/report.go	/^func (el edgeList) Len() int {$/;"	f
Len	./cmd/pprof/internal/report/report.go	/^func (o objSymbols) Len() int {$/;"	f
Len	./cmd/pprof/internal/report/report.go	/^func (s nodeSorter) Len() int           { return len(s.rs) }$/;"	f
Len	./cmd/pprof/internal/report/report.go	/^func (t tags) Len() int      { return len(t) }$/;"	f
Len	./cmd/trace/goroutines.go	/^func (l gdescList) Len() int {$/;"	f
Len	./cmd/trace/goroutines.go	/^func (l gtypeList) Len() int {$/;"	f
Len	./compress/bzip2/huffman.go	/^func (h huffmanSymbolLengthPairs) Len() int {$/;"	f
Len	./compress/bzip2/huffman.go	/^func (n huffmanCodes) Len() int {$/;"	f
Len	./compress/flate/huffman_code.go	/^func (s literalNodeSorter) Len() int { return len(s.a) }$/;"	f
Len	./container/heap/example_intheap_test.go	/^func (h IntHeap) Len() int           { return len(h) }$/;"	f
Len	./container/heap/example_pq_test.go	/^func (pq PriorityQueue) Len() int { return len(pq) }$/;"	f
Len	./container/heap/heap_test.go	/^func (h *myHeap) Len() int {$/;"	f
Len	./container/list/list.go	/^func (l *List) Len() int { return l.len }$/;"	f
Len	./container/ring/ring.go	/^func (r *Ring) Len() int {$/;"	f
Len	./encoding/asn1/marshal.go	/^func (f *forkableWriter) Len() (l int) {$/;"	f
Len	./encoding/gob/decode.go	/^func (d *decBuffer) Len() int {$/;"	f
Len	./encoding/gob/encode.go	/^func (e *encBuffer) Len() int {$/;"	f
Len	./encoding/json/encode.go	/^func (sv stringValues) Len() int           { return len(sv) }$/;"	f
Len	./encoding/json/encode.go	/^func (x byIndex) Len() int { return len(x) }$/;"	f
Len	./encoding/json/encode.go	/^func (x byName) Len() int { return len(x) }$/;"	f
Len	./go/ast/commentmap.go	/^func (a byInterval) Len() int { return len(a) }$/;"	f
Len	./go/ast/commentmap.go	/^func (a byPos) Len() int           { return len(a) }$/;"	f
Len	./go/ast/import.go	/^func (x byCommentPos) Len() int           { return len(x) }$/;"	f
Len	./go/ast/import.go	/^func (x byImportSpec) Len() int      { return len(x) }$/;"	f
Len	./go/doc/example.go	/^func (s exampleByName) Len() int           { return len(s) }$/;"	f
Len	./go/doc/reader.go	/^func (d *data) Len() int           { return d.n }$/;"	f
Len	./go/internal/gcimporter/gcimporter.go	/^func (a byPath) Len() int           { return len(a) }$/;"	f
Len	./go/scanner/errors.go	/^func (p ErrorList) Len() int      { return len(p) }$/;"	f
Len	./go/types/initorder.go	/^func (a nodeQueue) Len() int { return len(a) }$/;"	f
Len	./go/types/methodset.go	/^func (a byUniqueName) Len() int           { return len(a) }$/;"	f
Len	./go/types/methodset.go	/^func (s *MethodSet) Len() int { return len(s.list) }$/;"	f
Len	./go/types/ordering.go	/^func (a inSourceOrder) Len() int           { return len(a) }$/;"	f
Len	./go/types/scope.go	/^func (s *Scope) Len() int { return len(s.elems) }$/;"	f
Len	./go/types/type.go	/^func (a *Array) Len() int64 { return a.len }$/;"	f
Len	./go/types/type.go	/^func (t *Tuple) Len() int {$/;"	f
Len	./go/types/typexpr.go	/^func (a byUniqueMethodName) Len() int           { return len(a) }$/;"	f
Len	./go/types/typexpr.go	/^func (a byUniqueTypeName) Len() int           { return len(a) }$/;"	f
Len	./index/suffixarray/qsufsort.go	/^func (x *suffixSortable) Len() int           { return len(x.sa) }$/;"	f
Len	./index/suffixarray/suffixarray_test.go	/^func (x *index) Len() int           { return len(x.sa) }$/;"	f
Len	./internal/trace/parser.go	/^func (l eventList) Len() int {$/;"	f
Len	./io/ioutil/ioutil.go	/^func (f byName) Len() int           { return len(f) }$/;"	f
Len	./net/addrselect.go	/^func (s *byRFC6724) Len() int { return len(s.addrs) }$/;"	f
Len	./net/addrselect.go	/^func (s byMaskLength) Len() int      { return len(s) }$/;"	f
Len	./net/dnsclient.go	/^func (s byPref) Len() int           { return len(s) }$/;"	f
Len	./net/dnsclient.go	/^func (s byPriorityWeight) Len() int { return len(s) }$/;"	f
Len	./net/http/cookiejar/jar.go	/^func (s byPathLength) Len() int { return len(s) }$/;"	f
Len	./net/http/header.go	/^func (s *headerSorter) Len() int           { return len(s.kvs) }$/;"	f
Len	./net/lookup_windows_test.go	/^func (s byHost) Len() int           { return len(s) }$/;"	f
Len	./net/lookup_windows_test.go	/^func (s byPrefAndHost) Len() int { return len(s) }$/;"	f
Len	./net/rpc/debug.go	/^func (m methodArray) Len() int           { return len(m) }$/;"	f
Len	./net/rpc/debug.go	/^func (s serviceArray) Len() int           { return len(s) }$/;"	f
Len	./reflect/type.go	/^func (t *rtype) Len() int {$/;"	f
Len	./reflect/value.go	/^func (v Value) Len() int {$/;"	f
Len	./regexp/onepass.go	/^func (p runeSlice) Len() int           { return len(p) }$/;"	f
Len	./regexp/syntax/parse.go	/^func (ra ranges) Len() int {$/;"	f
Len	./runtime/debug/garbage.go	/^func (x byDuration) Len() int           { return len(x) }$/;"	f
Len	./runtime/pprof/pprof.go	/^func (p runtimeProfile) Len() int              { return len(p) }$/;"	f
Len	./runtime/pprof/pprof.go	/^func (x byCycles) Len() int           { return len(x) }$/;"	f
Len	./runtime/pprof/pprof.go	/^func (x byInUseBytes) Len() int           { return len(x) }$/;"	f
Len	./runtime/pprof/pprof.go	/^func (x byName) Len() int           { return len(x) }$/;"	f
Len	./runtime/pprof/pprof.go	/^func (x stackProfile) Len() int              { return len(x) }$/;"	f
Len	./sort/example_interface_test.go	/^func (a ByAge) Len() int           { return len(a) }$/;"	f
Len	./sort/example_keys_test.go	/^func (s *planetSorter) Len() int {$/;"	f
Len	./sort/example_multi_test.go	/^func (ms *multiSorter) Len() int {$/;"	f
Len	./sort/example_wrapper_test.go	/^func (s Organs) Len() int      { return len(s) }$/;"	f
Len	./sort/sort.go	/^func (p Float64Slice) Len() int           { return len(p) }$/;"	f
Len	./sort/sort.go	/^func (p IntSlice) Len() int           { return len(p) }$/;"	f
Len	./sort/sort.go	/^func (p StringSlice) Len() int           { return len(p) }$/;"	f
Len	./sort/sort_test.go	/^func (d *adversaryTestingData) Len() int { return len(d.data) }$/;"	f
Len	./sort/sort_test.go	/^func (d *testingData) Len() int { return len(d.data) }$/;"	f
Len	./sort/sort_test.go	/^func (d intPairs) Len() int           { return len(d) }$/;"	f
Len	./strings/reader.go	/^func (r *Reader) Len() int {$/;"	f
Len	./syscall/security_windows.go	/^func (sid *SID) Len() int {$/;"	f
Len	./text/template/exec.go	/^func (x rvs) Len() int      { return len(x) }$/;"	f
Len	./time/genzabbrs.go	/^func (zs zones) Len() int           { return len(zs) }$/;"	f
Len	./unicode/maketables.go	/^func (p runeSlice) Len() int           { return len(p) }$/;"	f
Lenc128	./crypto/aes/asm_amd64.s	/^Lenc128:$/;"	l
Lenc196	./crypto/aes/asm_amd64.s	/^Lenc196:$/;"	l
Lenc256	./crypto/aes/asm_amd64.s	/^Lenc256:$/;"	l
Less	./cmd/compile/internal/gc/export.go	/^func (x methodbyname) Less(i, j int) bool {$/;"	f
Less	./cmd/compile/internal/gc/plive.go	/^func (x blockrpocmp) Less(i, j int) bool { return x[i].rpo < x[j].rpo }$/;"	f
Less	./cmd/compile/internal/gc/popt.go	/^func (x startcmp) Less(i, j int) bool {$/;"	f
Less	./cmd/compile/internal/gc/reg.go	/^func (x rcmp) Less(i, j int) bool {$/;"	f
Less	./cmd/compile/internal/gc/subr.go	/^func (x errcmp) Less(i, j int) bool {$/;"	f
Less	./cmd/compile/internal/gc/subr.go	/^func (x methcmp) Less(i, j int) bool {$/;"	f
Less	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByExpr) Less(i, j int) bool {$/;"	f
Less	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByOrd) Less(i, j int) bool {$/;"	f
Less	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByType) Less(i, j int) bool {$/;"	f
Less	./cmd/cover/cover.go	/^func (b blockSlice) Less(i, j int) bool { return b[i].startByte < b[j].startByte }$/;"	f
Less	./cmd/cover/profile.go	/^func (b blocksByStart) Less(i, j int) bool {$/;"	f
Less	./cmd/cover/profile.go	/^func (b boundariesByPos) Less(i, j int) bool {$/;"	f
Less	./cmd/cover/profile.go	/^func (p byFileName) Less(i, j int) bool { return p[i].FileName < p[j].FileName }$/;"	f
Less	./cmd/fix/fix.go	/^func (f byDate) Less(i, j int) bool { return f[i].date < f[j].date }$/;"	f
Less	./cmd/fix/fix.go	/^func (f byName) Less(i, j int) bool { return f[i].name < f[j].name }$/;"	f
Less	./cmd/go/test.go	/^func (x byOrder) Less(i, j int) bool { return x[i].Order < x[j].Order }$/;"	f
Less	./cmd/internal/obj/arm/asm5.go	/^func (x ocmp) Less(i, j int) bool {$/;"	f
Less	./cmd/internal/obj/arm64/asm7.go	/^func (x ocmp) Less(i, j int) bool {$/;"	f
Less	./cmd/internal/obj/ppc64/asm9.go	/^func (x ocmp) Less(i, j int) bool {$/;"	f
Less	./cmd/internal/objfile/macho.go	/^func (x uint64s) Less(i, j int) bool { return x[i] < x[j] }$/;"	f
Less	./cmd/internal/objfile/objfile.go	/^func (x byAddr) Less(i, j int) bool { return x[i].Addr < x[j].Addr }$/;"	f
Less	./cmd/link/internal/ld/ldelf.go	/^func (x rbyoff) Less(i, j int) bool {$/;"	f
Less	./cmd/link/internal/ld/macho.go	/^func (x machoscmp) Less(i, j int) bool {$/;"	f
Less	./cmd/link/internal/ld/pe.go	/^func (x pescmp) Less(i, j int) bool {$/;"	f
Less	./cmd/link/internal/ld/symtab.go	/^func (libs byPkg) Less(a, b int) bool {$/;"	f
Less	./cmd/nm/nm.go	/^func (x byAddr) Less(i, j int) bool { return x[i].Addr < x[j].Addr }$/;"	f
Less	./cmd/nm/nm.go	/^func (x byName) Less(i, j int) bool { return x[i].Name < x[j].Name }$/;"	f
Less	./cmd/nm/nm.go	/^func (x bySize) Less(i, j int) bool { return x[i].Size > x[j].Size }$/;"	f
Less	./cmd/pprof/internal/report/report.go	/^func (el edgeList) Less(i, j int) bool {$/;"	f
Less	./cmd/pprof/internal/report/report.go	/^func (o objSymbols) Less(i, j int) bool {$/;"	f
Less	./cmd/pprof/internal/report/report.go	/^func (s nodeSorter) Less(i, j int) bool { return s.less(i, j) }$/;"	f
Less	./cmd/pprof/internal/report/report.go	/^func (t tags) Less(i, j int) bool {$/;"	f
Less	./cmd/trace/goroutines.go	/^func (l gdescList) Less(i, j int) bool {$/;"	f
Less	./cmd/trace/goroutines.go	/^func (l gtypeList) Less(i, j int) bool {$/;"	f
Less	./compress/bzip2/huffman.go	/^func (h huffmanSymbolLengthPairs) Less(i, j int) bool {$/;"	f
Less	./compress/bzip2/huffman.go	/^func (n huffmanCodes) Less(i, j int) bool {$/;"	f
Less	./compress/flate/huffman_code.go	/^func (s literalNodeSorter) Less(i, j int) bool {$/;"	f
Less	./container/heap/example_intheap_test.go	/^func (h IntHeap) Less(i, j int) bool { return h[i] < h[j] }$/;"	f
Less	./container/heap/example_pq_test.go	/^func (pq PriorityQueue) Less(i, j int) bool {$/;"	f
Less	./container/heap/heap_test.go	/^func (h *myHeap) Less(i, j int) bool {$/;"	f
Less	./encoding/json/encode.go	/^func (sv stringValues) Less(i, j int) bool { return sv.get(i) < sv.get(j) }$/;"	f
Less	./encoding/json/encode.go	/^func (x byIndex) Less(i, j int) bool {$/;"	f
Less	./encoding/json/encode.go	/^func (x byName) Less(i, j int) bool {$/;"	f
Less	./go/ast/commentmap.go	/^func (a byInterval) Less(i, j int) bool {$/;"	f
Less	./go/ast/commentmap.go	/^func (a byPos) Less(i, j int) bool { return a[i].Pos() < a[j].Pos() }$/;"	f
Less	./go/ast/import.go	/^func (x byCommentPos) Less(i, j int) bool { return x[i].Pos() < x[j].Pos() }$/;"	f
Less	./go/ast/import.go	/^func (x byImportSpec) Less(i, j int) bool {$/;"	f
Less	./go/doc/example.go	/^func (s exampleByName) Less(i, j int) bool { return s[i].Name < s[j].Name }$/;"	f
Less	./go/doc/reader.go	/^func (d *data) Less(i, j int) bool { return d.less(i, j) }$/;"	f
Less	./go/internal/gcimporter/gcimporter.go	/^func (a byPath) Less(i, j int) bool { return a[i].Path() < a[j].Path() }$/;"	f
Less	./go/scanner/errors.go	/^func (p ErrorList) Less(i, j int) bool {$/;"	f
Less	./go/types/initorder.go	/^func (a nodeQueue) Less(i, j int) bool {$/;"	f
Less	./go/types/methodset.go	/^func (a byUniqueName) Less(i, j int) bool { return a[i].obj.Id() < a[j].obj.Id() }$/;"	f
Less	./go/types/ordering.go	/^func (a inSourceOrder) Less(i, j int) bool { return a[i].order() < a[j].order() }$/;"	f
Less	./go/types/typexpr.go	/^func (a byUniqueMethodName) Less(i, j int) bool { return a[i].Id() < a[j].Id() }$/;"	f
Less	./go/types/typexpr.go	/^func (a byUniqueTypeName) Less(i, j int) bool { return a[i].obj.Id() < a[j].obj.Id() }$/;"	f
Less	./index/suffixarray/qsufsort.go	/^func (x *suffixSortable) Less(i, j int) bool { return x.inv[x.sa[i]+x.h] < x.inv[x.sa[j]+x.h] }$/;"	f
Less	./index/suffixarray/suffixarray_test.go	/^func (x *index) Less(i, j int) bool { return bytes.Compare(x.at(i), x.at(j)) < 0 }$/;"	f
Less	./internal/trace/parser.go	/^func (l eventList) Less(i, j int) bool {$/;"	f
Less	./io/ioutil/ioutil.go	/^func (f byName) Less(i, j int) bool { return f[i].Name() < f[j].Name() }$/;"	f
Less	./net/addrselect.go	/^func (s *byRFC6724) Less(i, j int) bool {$/;"	f
Less	./net/addrselect.go	/^func (s byMaskLength) Less(i, j int) bool {$/;"	f
Less	./net/dnsclient.go	/^func (s byPref) Less(i, j int) bool { return s[i].Pref < s[j].Pref }$/;"	f
Less	./net/dnsclient.go	/^func (s byPriorityWeight) Less(i, j int) bool {$/;"	f
Less	./net/http/cookiejar/jar.go	/^func (s byPathLength) Less(i, j int) bool {$/;"	f
Less	./net/http/header.go	/^func (s *headerSorter) Less(i, j int) bool { return s.kvs[i].key < s.kvs[j].key }$/;"	f
Less	./net/lookup_windows_test.go	/^func (s byHost) Less(i, j int) bool { return s[i].Host < s[j].Host }$/;"	f
Less	./net/lookup_windows_test.go	/^func (s byPrefAndHost) Less(i, j int) bool {$/;"	f
Less	./net/rpc/debug.go	/^func (m methodArray) Less(i, j int) bool { return m[i].Name < m[j].Name }$/;"	f
Less	./net/rpc/debug.go	/^func (s serviceArray) Less(i, j int) bool { return s[i].Name < s[j].Name }$/;"	f
Less	./regexp/onepass.go	/^func (p runeSlice) Less(i, j int) bool { return p[i] < p[j] }$/;"	f
Less	./regexp/syntax/parse.go	/^func (ra ranges) Less(i, j int) bool {$/;"	f
Less	./runtime/debug/garbage.go	/^func (x byDuration) Less(i, j int) bool { return x[i] < x[j] }$/;"	f
Less	./runtime/pprof/pprof.go	/^func (x byCycles) Less(i, j int) bool { return x[i].Cycles > x[j].Cycles }$/;"	f
Less	./runtime/pprof/pprof.go	/^func (x byInUseBytes) Less(i, j int) bool { return x[i].InUseBytes() > x[j].InUseBytes() }$/;"	f
Less	./runtime/pprof/pprof.go	/^func (x byName) Less(i, j int) bool { return x[i].name < x[j].name }$/;"	f
Less	./runtime/pprof/pprof.go	/^func (x stackProfile) Less(i, j int) bool {$/;"	f
Less	./sort/example_interface_test.go	/^func (a ByAge) Less(i, j int) bool { return a[i].Age < a[j].Age }$/;"	f
Less	./sort/example_keys_test.go	/^func (s *planetSorter) Less(i, j int) bool {$/;"	f
Less	./sort/example_multi_test.go	/^func (ms *multiSorter) Less(i, j int) bool {$/;"	f
Less	./sort/example_wrapper_test.go	/^func (s ByName) Less(i, j int) bool { return s.Organs[i].Name < s.Organs[j].Name }$/;"	f
Less	./sort/example_wrapper_test.go	/^func (s ByWeight) Less(i, j int) bool { return s.Organs[i].Weight < s.Organs[j].Weight }$/;"	f
Less	./sort/sort.go	/^func (p Float64Slice) Less(i, j int) bool { return p[i] < p[j] || isNaN(p[i]) && !isNaN(p[j]) }$/;"	f
Less	./sort/sort.go	/^func (p IntSlice) Less(i, j int) bool { return p[i] < p[j] }$/;"	f
Less	./sort/sort.go	/^func (p StringSlice) Less(i, j int) bool { return p[i] < p[j] }$/;"	f
Less	./sort/sort.go	/^func (r reverse) Less(i, j int) bool {$/;"	f
Less	./sort/sort_test.go	/^func (d *adversaryTestingData) Less(i, j int) bool {$/;"	f
Less	./sort/sort_test.go	/^func (d *testingData) Less(i, j int) bool {$/;"	f
Less	./sort/sort_test.go	/^func (d intPairs) Less(i, j int) bool { return d[i].a < d[j].a }$/;"	f
Less	./text/template/exec.go	/^func (x rvFloats) Less(i, j int) bool { return x.rvs[i].Float() < x.rvs[j].Float() }$/;"	f
Less	./text/template/exec.go	/^func (x rvInts) Less(i, j int) bool { return x.rvs[i].Int() < x.rvs[j].Int() }$/;"	f
Less	./text/template/exec.go	/^func (x rvStrings) Less(i, j int) bool { return x.rvs[i].String() < x.rvs[j].String() }$/;"	f
Less	./text/template/exec.go	/^func (x rvUints) Less(i, j int) bool { return x.rvs[i].Uint() < x.rvs[j].Uint() }$/;"	f
Less	./time/genzabbrs.go	/^func (zs zones) Less(i, j int) bool { return zs[i].UnixName < zs[j].UnixName }$/;"	f
Less	./unicode/maketables.go	/^func (p runeSlice) Less(i, j int) bool { return p[i] < p[j] }$/;"	f
Level	./cmd/compile/internal/gc/esc.go	/^type Level struct {$/;"	t
Lex	./cmd/compile/internal/gc/lex.go	/^func (yy) Lex(v *yySymType) int {$/;"	f
Lexp_dec	./crypto/aes/asm_amd64.s	/^Lexp_dec:$/;"	l
Lexp_dec_loop	./crypto/aes/asm_amd64.s	/^Lexp_dec_loop:$/;"	l
Lexp_enc128	./crypto/aes/asm_amd64.s	/^Lexp_enc128:$/;"	l
Lexp_enc196	./crypto/aes/asm_amd64.s	/^Lexp_enc196:$/;"	l
Lexp_enc256	./crypto/aes/asm_amd64.s	/^Lexp_enc256:$/;"	l
Lflag	./cmd/link/internal/ld/lib.go	/^func Lflag(arg string) {$/;"	f
Lgamma	./math/lgamma.go	/^func Lgamma(x float64) (lgamma float64, sign int) {$/;"	f
Lhs	./go/types/api.go	/^	Lhs []*Var \/\/ var Lhs = Rhs$/;"	v
Library	./cmd/link/internal/ld/link.go	/^type Library struct {$/;"	t
LimitReader	./io/io.go	/^func LimitReader(r Reader, n int64) Reader { return &LimitedReader{r, n} }$/;"	f
LimitedReader	./io/io.go	/^type LimitedReader struct {$/;"	t
Line	./cmd/asm/internal/lex/slice.go	/^func (s *Slice) Line() int {$/;"	f
Line	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) Line() int {$/;"	f
Line	./cmd/asm/internal/lex/tokenizer.go	/^func (t *Tokenizer) Line() int {$/;"	f
Line	./cmd/compile/internal/gc/util.go	/^func (n *Node) Line() string {$/;"	f
Line	./cmd/internal/obj/util.go	/^func (ctxt *Link) Line(n int) string {$/;"	f
Line	./cmd/internal/obj/util.go	/^func (p *Prog) Line() string {$/;"	f
Line	./cmd/pprof/internal/profile/profile.go	/^type Line struct {$/;"	t
Line	./go/token/position.go	/^func (f *File) Line(p Pos) int {$/;"	f
LineCount	./go/token/position.go	/^func (f *File) LineCount() int {$/;"	f
LineEntry	./debug/dwarf/line.go	/^type LineEntry struct {$/;"	t
LineFile	./debug/dwarf/line.go	/^type LineFile struct {$/;"	t
LineHist	./cmd/internal/obj/obj.go	/^type LineHist struct {$/;"	t
LineRange	./cmd/internal/obj/obj.go	/^type LineRange struct {$/;"	t
LineReader	./debug/dwarf/line.go	/^func (d *Data) LineReader(cu *Entry) (*LineReader, error) {$/;"	f
LineReader	./debug/dwarf/line.go	/^type LineReader struct {$/;"	t
LineReaderPos	./debug/dwarf/line.go	/^type LineReaderPos struct {$/;"	t
LineStack	./cmd/internal/obj/obj.go	/^type LineStack struct {$/;"	t
LineString	./cmd/internal/obj/obj.go	/^func (h *LineHist) LineString(lineno int) string {$/;"	f
LineTable	./debug/gosym/pclntab.go	/^type LineTable struct {$/;"	t
LineToPC	./debug/gosym/pclntab.go	/^func (t *LineTable) LineToPC(line int, maxpc uint64) uint64 {$/;"	f
LineToPC	./debug/gosym/symtab.go	/^func (t *Table) LineToPC(file string, line int) (pc uint64, fn *Func, err error) {$/;"	f
Linger	./syscall/net_nacl.go	/^type Linger struct {$/;"	t
Linger	./syscall/syscall_windows.go	/^type Linger struct {$/;"	t
Linger	./syscall/types_darwin.go	/^type Linger C.struct_linger$/;"	t
Linger	./syscall/types_dragonfly.go	/^type Linger C.struct_linger$/;"	t
Linger	./syscall/types_freebsd.go	/^type Linger C.struct_linger$/;"	t
Linger	./syscall/types_linux.go	/^type Linger C.struct_linger$/;"	t
Linger	./syscall/types_netbsd.go	/^type Linger C.struct_linger$/;"	t
Linger	./syscall/types_openbsd.go	/^type Linger C.struct_linger$/;"	t
Linger	./syscall/types_solaris.go	/^type Linger C.struct_linger$/;"	t
Linger	./syscall/ztypes_darwin_386.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_darwin_amd64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_darwin_arm.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_darwin_arm64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_dragonfly_amd64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_freebsd_386.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_freebsd_amd64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_freebsd_arm.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_linux_386.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_linux_amd64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_linux_arm.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_linux_arm64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_linux_ppc64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_linux_ppc64le.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_netbsd_386.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_netbsd_amd64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_netbsd_arm.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_openbsd_386.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_openbsd_amd64.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_openbsd_arm.go	/^type Linger struct {$/;"	t
Linger	./syscall/ztypes_solaris_amd64.go	/^type Linger struct {$/;"	t
Link	./cmd/internal/obj/link.go	/^type Link struct {$/;"	t
Link	./cmd/link/internal/ld/link.go	/^type Link struct {$/;"	t
Link	./container/ring/ring.go	/^func (r *Ring) Link(s *Ring) *Ring {$/;"	f
Link	./encoding/xml/read_test.go	/^type Link struct {$/;"	t
Link	./os/file_plan9.go	/^func Link(oldname, newname string) error {$/;"	f
Link	./os/file_unix.go	/^func Link(oldname, newname string) error {$/;"	f
Link	./os/file_windows.go	/^func Link(oldname, newname string) error {$/;"	f
Link	./syscall/fs_nacl.go	/^func Link(path, link string) error {$/;"	f
Link	./syscall/syscall_linux.go	/^func Link(oldpath string, newpath string) (err error) {$/;"	f
Link	./syscall/syscall_windows.go	/^func Link(oldpath, newpath string) (err error) { return EWINDOWS }$/;"	f
Link	./syscall/zsyscall_darwin_386.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_darwin_amd64.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_darwin_arm.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_darwin_arm64.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_dragonfly_amd64.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_freebsd_386.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_freebsd_amd64.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_freebsd_arm.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_netbsd_386.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_netbsd_amd64.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_netbsd_arm.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_openbsd_386.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_openbsd_amd64.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_openbsd_arm.go	/^func Link(path string, link string) (err error) {$/;"	f
Link	./syscall/zsyscall_solaris_amd64.go	/^func Link(path string, link string) (err error) {$/;"	f
Link386	./cmd/internal/obj/x86/obj6.go	/^var Link386 = obj.LinkArch{$/;"	v
Link386	./cmd/link/internal/ld/arch.go	/^var Link386 = LinkArch{$/;"	v
LinkArch	./cmd/internal/obj/link.go	/^type LinkArch struct {$/;"	t
LinkArch	./cmd/link/internal/ld/link.go	/^type LinkArch struct {$/;"	t
LinkError	./os/file.go	/^type LinkError struct {$/;"	t
Linkamd64	./cmd/internal/obj/x86/obj6.go	/^var Linkamd64 = obj.LinkArch{$/;"	v
Linkamd64	./cmd/link/internal/ld/arch.go	/^var Linkamd64 = LinkArch{$/;"	v
Linkamd64p32	./cmd/internal/obj/x86/obj6.go	/^var Linkamd64p32 = obj.LinkArch{$/;"	v
Linkamd64p32	./cmd/link/internal/ld/arch.go	/^var Linkamd64p32 = LinkArch{$/;"	v
Linkarm	./cmd/internal/obj/arm/obj5.go	/^var Linkarm = obj.LinkArch{$/;"	v
Linkarm	./cmd/link/internal/ld/arch.go	/^var Linkarm = LinkArch{$/;"	v
Linkarm64	./cmd/internal/obj/arm64/obj7.go	/^var Linkarm64 = obj.LinkArch{$/;"	v
Linkarm64	./cmd/link/internal/ld/arch.go	/^var Linkarm64 = LinkArch{$/;"	v
Linklookup	./cmd/internal/obj/sym.go	/^func Linklookup(ctxt *Link, name string, v int) *LSym {$/;"	f
Linklookup	./cmd/link/internal/ld/sym.go	/^func Linklookup(ctxt *Link, name string, v int) *LSym {$/;"	f
Linknew	./cmd/internal/obj/sym.go	/^func Linknew(arch *LinkArch) *Link {$/;"	f
Linknewplist	./cmd/internal/obj/link.go	/^func Linknewplist(ctxt *Link) *Plist {$/;"	f
Linkppc64	./cmd/internal/obj/ppc64/obj9.go	/^var Linkppc64 = obj.LinkArch{$/;"	v
Linkppc64	./cmd/link/internal/ld/arch.go	/^var Linkppc64 = LinkArch{$/;"	v
Linkppc64le	./cmd/internal/obj/ppc64/obj9.go	/^var Linkppc64le = obj.LinkArch{$/;"	v
Linkppc64le	./cmd/link/internal/ld/arch.go	/^var Linkppc64le = LinkArch{$/;"	v
Linkprfile	./cmd/internal/obj/obj.go	/^func Linkprfile(ctxt *Link, line int) {$/;"	f
Linkrlookup	./cmd/link/internal/ld/sym.go	/^func Linkrlookup(ctxt *Link, name string, v int) *LSym {$/;"	f
Linksym	./cmd/compile/internal/gc/obj.go	/^func Linksym(s *Sym) *obj.LSym {$/;"	f
Linksymfmt	./cmd/internal/obj/sym.go	/^func Linksymfmt(s *LSym) string {$/;"	f
List	./container/list/list.go	/^type List struct {$/;"	t
List	./syscall/mksyscall_windows.go	/^func (r *Rets) List() string {$/;"	f
ListNode	./text/template/parse/node.go	/^type ListNode struct {$/;"	t
Listen	./crypto/tls/tls.go	/^func Listen(network, laddr string, config *Config) (net.Listener, error) {$/;"	f
Listen	./net/dial.go	/^func Listen(net, laddr string) (Listener, error) {$/;"	f
Listen	./net/internal/socktest/sys_unix.go	/^func (sw *Switch) Listen(s, backlog int) (err error) {$/;"	f
Listen	./net/internal/socktest/sys_windows.go	/^func (sw *Switch) Listen(s syscall.Handle, backlog int) (err error) {$/;"	f
Listen	./syscall/net_nacl.go	/^func Listen(fd int, backlog int) error {$/;"	f
Listen	./syscall/syscall_linux_386.go	/^func Listen(s int, n int) (err error) {$/;"	f
Listen	./syscall/syscall_windows.go	/^func Listen(s Handle, n int) (err error) {$/;"	f
Listen	./syscall/zsyscall_darwin_386.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_darwin_amd64.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_darwin_arm.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_darwin_arm64.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_dragonfly_amd64.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_freebsd_386.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_freebsd_amd64.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_freebsd_arm.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_linux_amd64.go	/^func Listen(s int, n int) (err error) {$/;"	f
Listen	./syscall/zsyscall_linux_arm.go	/^func Listen(s int, n int) (err error) {$/;"	f
Listen	./syscall/zsyscall_linux_arm64.go	/^func Listen(s int, n int) (err error) {$/;"	f
Listen	./syscall/zsyscall_linux_ppc64.go	/^func Listen(s int, n int) (err error) {$/;"	f
Listen	./syscall/zsyscall_linux_ppc64le.go	/^func Listen(s int, n int) (err error) {$/;"	f
Listen	./syscall/zsyscall_netbsd_386.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_netbsd_amd64.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_netbsd_arm.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_openbsd_386.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_openbsd_amd64.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_openbsd_arm.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
Listen	./syscall/zsyscall_solaris_amd64.go	/^func Listen(s int, backlog int) (err error) {$/;"	f
ListenAndServe	./net/http/server.go	/^func (srv *Server) ListenAndServe() error {$/;"	f
ListenAndServe	./net/http/server.go	/^func ListenAndServe(addr string, handler Handler) error {$/;"	f
ListenAndServeTLS	./net/http/server.go	/^func (srv *Server) ListenAndServeTLS(certFile, keyFile string) error {$/;"	f
ListenAndServeTLS	./net/http/server.go	/^func ListenAndServeTLS(addr string, certFile string, keyFile string, handler Handler) error {$/;"	f
ListenIP	./net/iprawsock_plan9.go	/^func ListenIP(netProto string, laddr *IPAddr) (*IPConn, error) {$/;"	f
ListenIP	./net/iprawsock_posix.go	/^func ListenIP(netProto string, laddr *IPAddr) (*IPConn, error) {$/;"	f
ListenMulticastUDP	./net/udpsock_plan9.go	/^func ListenMulticastUDP(network string, ifi *Interface, gaddr *UDPAddr) (*UDPConn, error) {$/;"	f
ListenMulticastUDP	./net/udpsock_posix.go	/^func ListenMulticastUDP(network string, ifi *Interface, gaddr *UDPAddr) (*UDPConn, error) {$/;"	f
ListenPacket	./net/dial.go	/^func ListenPacket(net, laddr string) (PacketConn, error) {$/;"	f
ListenTCP	./net/tcpsock_plan9.go	/^func ListenTCP(net string, laddr *TCPAddr) (*TCPListener, error) {$/;"	f
ListenTCP	./net/tcpsock_posix.go	/^func ListenTCP(net string, laddr *TCPAddr) (*TCPListener, error) {$/;"	f
ListenUDP	./net/udpsock_plan9.go	/^func ListenUDP(net string, laddr *UDPAddr) (*UDPConn, error) {$/;"	f
ListenUDP	./net/udpsock_posix.go	/^func ListenUDP(net string, laddr *UDPAddr) (*UDPConn, error) {$/;"	f
ListenUnix	./net/unixsock_plan9.go	/^func ListenUnix(net string, laddr *UnixAddr) (*UnixListener, error) {$/;"	f
ListenUnix	./net/unixsock_posix.go	/^func ListenUnix(net string, laddr *UnixAddr) (*UnixListener, error) {$/;"	f
ListenUnixgram	./net/unixsock_plan9.go	/^func ListenUnixgram(net string, laddr *UnixAddr) (*UnixConn, error) {$/;"	f
ListenUnixgram	./net/unixsock_posix.go	/^func ListenUnixgram(net string, laddr *UnixAddr) (*UnixConn, error) {$/;"	f
Listener	./net/net.go	/^type Listener interface {$/;"	t
Listener	./net/tcpsock_plan9.go	/^\/\/ use variables of type Listener instead of assuming TCP.$/;"	t
Listener	./net/tcpsock_posix.go	/^\/\/ use variables of type Listener instead of assuming TCP.$/;"	t
Listener	./net/unixsock_plan9.go	/^\/\/ typically use variables of type Listener instead of assuming Unix$/;"	t
Listener	./net/unixsock_posix.go	/^\/\/ typically use variables of type Listener instead of assuming Unix$/;"	t
Listxattr	./syscall/zsyscall_linux_386.go	/^func Listxattr(path string, dest []byte) (sz int, err error) {$/;"	f
Listxattr	./syscall/zsyscall_linux_amd64.go	/^func Listxattr(path string, dest []byte) (sz int, err error) {$/;"	f
Listxattr	./syscall/zsyscall_linux_arm.go	/^func Listxattr(path string, dest []byte) (sz int, err error) {$/;"	f
Listxattr	./syscall/zsyscall_linux_arm64.go	/^func Listxattr(path string, dest []byte) (sz int, err error) {$/;"	f
Listxattr	./syscall/zsyscall_linux_ppc64.go	/^func Listxattr(path string, dest []byte) (sz int, err error) {$/;"	f
Listxattr	./syscall/zsyscall_linux_ppc64le.go	/^func Listxattr(path string, dest []byte) (sz int, err error) {$/;"	f
LiteralPrefix	./regexp/regexp.go	/^func (re *Regexp) LiteralPrefix() (prefix string, complete bool) {$/;"	f
LittleEndian	./encoding/binary/binary.go	/^var LittleEndian littleEndian$/;"	v
Liveness	./cmd/compile/internal/gc/plive.go	/^type Liveness struct {$/;"	t
Lkset	./cmd/yacc/yacc.go	/^type Lkset []int$/;"	t
Ln2Hi	./math/log_amd64.s	/^#define Ln2Hi  6.93147180369123816490e-01 \/\/ 0x3fe62e42fee00000$/;"	d
Ln2Lo	./math/log_amd64.s	/^#define Ln2Lo  1.90821492927058770002e-10 \/\/ 0x3dea39ef35793c76$/;"	d
Load	./debug/macho/file.go	/^type Load interface {$/;"	t
Load	./sync/atomic/value.go	/^func (v *Value) Load() (x interface{}) {$/;"	f
Load	./syscall/dll_windows.go	/^func (d *LazyDLL) Load() error {$/;"	f
LoadBytes	./debug/macho/file.go	/^type LoadBytes []byte$/;"	t
LoadCancelIoEx	./syscall/syscall_windows.go	/^func LoadCancelIoEx() error {$/;"	f
LoadCmd	./debug/macho/macho.go	/^type LoadCmd uint32$/;"	t
LoadConnectEx	./syscall/syscall_windows.go	/^func LoadConnectEx() error {$/;"	f
LoadCreateSymbolicLink	./syscall/syscall_windows.go	/^func LoadCreateSymbolicLink() error {$/;"	f
LoadDLL	./syscall/dll_windows.go	/^func LoadDLL(name string) (dll *DLL, err error) {$/;"	f
LoadGetAddrInfo	./syscall/syscall_windows.go	/^func LoadGetAddrInfo() error {$/;"	f
LoadInt32	./sync/atomic/doc.go	/^func LoadInt32(addr *int32) (val int32)$/;"	f
LoadInt64	./sync/atomic/doc.go	/^func LoadInt64(addr *int64) (val int64)$/;"	f
LoadLibrary	./syscall/zsyscall_windows.go	/^func LoadLibrary(libname string) (handle Handle, err error) {$/;"	f
LoadLocation	./time/zoneinfo.go	/^func LoadLocation(name string) (*Location, error) {$/;"	f
LoadPointer	./sync/atomic/doc.go	/^func LoadPointer(addr *unsafe.Pointer) (val unsafe.Pointer)$/;"	f
LoadSetFileCompletionNotificationModes	./syscall/syscall_windows.go	/^func LoadSetFileCompletionNotificationModes() error {$/;"	f
LoadUint32	./sync/atomic/doc.go	/^func LoadUint32(addr *uint32) (val uint32)$/;"	f
LoadUint64	./sync/atomic/doc.go	/^func LoadUint64(addr *uint64) (val uint64)$/;"	f
LoadUintptr	./sync/atomic/doc.go	/^func LoadUintptr(addr *uintptr) (val uintptr)$/;"	f
LoadX509KeyPair	./crypto/tls/tls.go	/^func LoadX509KeyPair(certFile, keyFile string) (Certificate, error) {$/;"	f
Local	./time/time.go	/^func (t Time) Local() Time {$/;"	f
Local	./time/zoneinfo.go	/^var Local *Location = &localLoc$/;"	v
LocalAddr	./crypto/tls/conn.go	/^func (c *Conn) LocalAddr() net.Addr {$/;"	f
LocalAddr	./net/http/httputil/dump.go	/^func (c *dumpConn) LocalAddr() net.Addr                { return nil }$/;"	f
LocalAddr	./net/http/serve_test.go	/^func (noopConn) LocalAddr() net.Addr                { return dummyAddr("local-addr") }$/;"	f
LocalAddr	./net/net.go	/^func (c *conn) LocalAddr() Addr {$/;"	f
LocalAddr	./net/pipe.go	/^func (p *pipe) LocalAddr() Addr {$/;"	f
LocalAddr	./net/rpc/jsonrpc/all_test.go	/^func (p *pipe) LocalAddr() net.Addr {$/;"	f
LocalAddr	./net/smtp/smtp_test.go	/^func (f faker) LocalAddr() net.Addr              { return nil }$/;"	f
LocalFree	./syscall/zsyscall_windows.go	/^func LocalFree(hmem Handle) (handle Handle, err error) {$/;"	f
LocalMutex	./cmd/vet/testdata/copylock_func.go	/^type LocalMutex sync.Mutex$/;"	t
LocalOnce	./cmd/vet/testdata/copylock_func.go	/^type LocalOnce sync.Once$/;"	t
Location	./cmd/pprof/internal/profile/profile.go	/^type Location struct {$/;"	t
Location	./net/http/response.go	/^func (r *Response) Location() (*url.URL, error) {$/;"	f
Location	./time/time.go	/^func (t Time) Location() *Location {$/;"	f
Location	./time/zoneinfo.go	/^type Location struct {$/;"	t
Lock	./cmd/vet/testdata/copylock_func.go	/^func (*CustomLock) Lock()   {}$/;"	f
Lock	./net/http/transport.go	/^func (fakeLocker) Lock()   {}$/;"	f
Lock	./sync/mutex.go	/^func (m *Mutex) Lock() {$/;"	f
Lock	./sync/rwmutex.go	/^func (r *rlocker) Lock()   { (*RWMutex)(r).RLock() }$/;"	f
Lock	./sync/rwmutex.go	/^func (rw *RWMutex) Lock() {$/;"	f
LockOSThread	./runtime/proc1.go	/^func LockOSThread() {$/;"	f
LockedOSThread	./runtime/export_test.go	/^var LockedOSThread = lockedOSThread$/;"	v
Locker	./sync/mutex.go	/^type Locker interface {$/;"	t
Log	./go/doc/testdata/testing.go	/^func (c *common) Log(args ...interface{}) { c.log(fmt.Sprintln(args...)) }$/;"	f
Log	./math/cmplx/log.go	/^func Log(x complex128) complex128 {$/;"	f
Log	./math/log.go	/^func Log(x float64) float64$/;"	f
Log	./testing/testing.go	/^func (c *common) Log(args ...interface{}) { c.log(fmt.Sprintln(args...)) }$/;"	f
Log10	./math/cmplx/log.go	/^func Log10(x complex128) complex128 {$/;"	f
Log10	./math/log10.go	/^func Log10(x float64) float64$/;"	f
Log1p	./math/log1p.go	/^func Log1p(x float64) float64$/;"	f
Log2	./math/log10.go	/^func Log2(x float64) float64$/;"	f
Log2phys_t	./syscall/types_darwin.go	/^type Log2phys_t C.struct_log2phys$/;"	t
Log2phys_t	./syscall/ztypes_darwin_386.go	/^type Log2phys_t struct {$/;"	t
Log2phys_t	./syscall/ztypes_darwin_amd64.go	/^type Log2phys_t struct {$/;"	t
Log2phys_t	./syscall/ztypes_darwin_arm.go	/^type Log2phys_t struct {$/;"	t
Log2phys_t	./syscall/ztypes_darwin_arm64.go	/^type Log2phys_t struct {$/;"	t
LogImpl	./runtime/race/testdata/regression_test.go	/^type LogImpl struct {$/;"	t
Logb	./math/logb.go	/^func Logb(x float64) float64 {$/;"	f
Logf	./go/doc/testdata/testing.go	/^func (c *common) Logf(format string, args ...interface{}) { c.log(fmt.Sprintf(format, args...)) }$/;"	f
Logf	./testing/testing.go	/^func (c *common) Logf(format string, args ...interface{}) { c.log(fmt.Sprintf(format, args...)) }$/;"	f
Logger	./log/log.go	/^type Logger struct {$/;"	t
Logger	./net/http/triv.go	/^func Logger(w http.ResponseWriter, req *http.Request) {$/;"	f
Longest	./regexp/regexp.go	/^func (re *Regexp) Longest() {$/;"	f
LookPath	./os/exec/lp_plan9.go	/^func LookPath(file string) (string, error) {$/;"	f
LookPath	./os/exec/lp_unix.go	/^func LookPath(file string) (string, error) {$/;"	f
LookPath	./os/exec/lp_windows.go	/^func LookPath(file string) (f string, err error) {$/;"	f
Lookahead	./cmd/compile/internal/gc/y.go	/^func (p *yyParserImpl) Lookahead() int {$/;"	f
Lookahead	./cmd/yacc/yacc.go	/^func (p *$$ParserImpl) Lookahead() int {$/;"	f
LookinGood	./cmd/vet/testdata/copylock_func.go	/^func LookinGood() EmbeddedMutexPointer {}$/;"	f
Lookup	./cmd/compile/internal/gc/subr.go	/^func (pkg *Pkg) Lookup(name string) *Sym {$/;"	f
Lookup	./cmd/compile/internal/gc/subr.go	/^func Lookup(name string) *Sym {$/;"	f
Lookup	./flag/flag.go	/^func (f *FlagSet) Lookup(name string) *Flag {$/;"	f
Lookup	./flag/flag.go	/^func Lookup(name string) *Flag {$/;"	f
Lookup	./go/ast/scope.go	/^func (s *Scope) Lookup(name string) *Object {$/;"	f
Lookup	./go/importer/importer.go	/^type Lookup func(path string) (io.ReadCloser, error)$/;"	t
Lookup	./go/token/token.go	/^func Lookup(ident string) Token {$/;"	f
Lookup	./go/types/methodset.go	/^func (s *MethodSet) Lookup(pkg *Package, name string) *Selection {$/;"	f
Lookup	./go/types/scope.go	/^func (s *Scope) Lookup(name string) Object {$/;"	f
Lookup	./html/template/template.go	/^func (t *Template) Lookup(name string) *Template {$/;"	f
Lookup	./index/suffixarray/suffixarray.go	/^func (x *Index) Lookup(s []byte, n int) (result []int) {$/;"	f
Lookup	./os/user/lookup.go	/^func Lookup(username string) (*User, error) {$/;"	f
Lookup	./runtime/pprof/pprof.go	/^func Lookup(name string) *Profile {$/;"	f
Lookup	./text/template/template.go	/^func (t *Template) Lookup(name string) *Template {$/;"	f
LookupAccount	./syscall/security_windows.go	/^func (sid *SID) LookupAccount(system string) (account, domain string, accType uint32, err error) {$/;"	f
LookupAccountName	./syscall/zsyscall_windows.go	/^func LookupAccountName(systemName *uint16, accountName *uint16, sid *SID, sidLen *uint32, refdDomainName *uint16, refdDomainNameLen *uint32, use *uint32) (err error) {$/;"	f
LookupAccountSid	./syscall/zsyscall_windows.go	/^func LookupAccountSid(systemName *uint16, sid *SID, name *uint16, nameLen *uint32, refdDomainName *uint16, refdDomainNameLen *uint32, use *uint32) (err error) {$/;"	f
LookupAddr	./net/lookup.go	/^func LookupAddr(addr string) (names []string, err error) {$/;"	f
LookupBytes	./cmd/compile/internal/gc/subr.go	/^func (pkg *Pkg) LookupBytes(name []byte) *Sym {$/;"	f
LookupBytes	./cmd/compile/internal/gc/subr.go	/^func LookupBytes(name []byte) *Sym {$/;"	f
LookupCNAME	./net/lookup.go	/^func LookupCNAME(name string) (cname string, err error) {$/;"	f
LookupEnv	./os/env.go	/^func LookupEnv(key string) (string, bool) {$/;"	f
LookupFieldOrMethod	./go/types/lookup.go	/^func LookupFieldOrMethod(T Type, addressable bool, pkg *Package, name string) (obj Object, index []int, indirect bool) {$/;"	f
LookupFunc	./debug/gosym/symtab.go	/^func (t *Table) LookupFunc(name string) *Func {$/;"	f
LookupHost	./net/lookup.go	/^func LookupHost(host string) (addrs []string, err error) {$/;"	f
LookupIP	./net/lookup.go	/^func LookupIP(host string) (ips []IP, err error) {$/;"	f
LookupId	./os/user/lookup.go	/^func LookupId(uid string) (*User, error) {$/;"	f
LookupMX	./net/lookup.go	/^func LookupMX(name string) (mxs []*MX, err error) {$/;"	f
LookupNS	./net/lookup.go	/^func LookupNS(name string) (nss []*NS, err error) {$/;"	f
LookupParent	./go/types/scope.go	/^func (s *Scope) LookupParent(name string, pos token.Pos) (*Scope, Object) {$/;"	f
LookupPort	./net/lookup.go	/^func LookupPort(network, service string) (port int, err error) {$/;"	f
LookupSID	./syscall/security_windows.go	/^func LookupSID(system, account string) (sid *SID, domain string, accType uint32, err error) {$/;"	f
LookupSRV	./net/lookup.go	/^func LookupSRV(service, proto, name string) (cname string, addrs []*SRV, err error) {$/;"	f
LookupSym	./debug/gosym/symtab.go	/^func (t *Table) LookupSym(name string) *Sym {$/;"	f
LookupTXT	./net/lookup.go	/^func LookupTXT(name string) (txts []string, err error) {$/;"	f
Lookupf	./cmd/compile/internal/gc/subr.go	/^func Lookupf(format string, a ...interface{}) *Sym {$/;"	f
Loop	./encoding/json/decode_test.go	/^type Loop struct {$/;"	t
Loophack	./cmd/compile/internal/gc/lex.go	/^type Loophack struct {$/;"	t
Lputb	./cmd/link/internal/ld/symtab.go	/^func Lputb(l uint32) {$/;"	f
Lputl	./cmd/link/internal/ld/symtab.go	/^func Lputl(l uint32) {$/;"	f
LsfJump	./syscall/lsf_linux.go	/^func LsfJump(code, k, jt, jf int) *SockFilter {$/;"	f
LsfSocket	./syscall/lsf_linux.go	/^func LsfSocket(ifindex, proto int) (int, error) {$/;"	f
LsfStmt	./syscall/lsf_linux.go	/^func LsfStmt(code, k int) *SockFilter {$/;"	f
Lsh	./cmd/compile/internal/big/int.go	/^func (z *Int) Lsh(x *Int, n uint) *Int {$/;"	f
Lsh	./math/big/int.go	/^func (z *Int) Lsh(x *Int, n uint) *Int {$/;"	f
Lstat	./os/file_unix.go	/^func Lstat(name string) (FileInfo, error) {$/;"	f
Lstat	./os/stat_plan9.go	/^func Lstat(name string) (FileInfo, error) {$/;"	f
Lstat	./os/stat_windows.go	/^func Lstat(name string) (FileInfo, error) {$/;"	f
Lstat	./syscall/fs_nacl.go	/^func Lstat(path string, st *Stat_t) error {$/;"	f
Lstat	./syscall/syscall_linux_arm64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_darwin_386.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_darwin_amd64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_darwin_arm.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_darwin_arm64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_dragonfly_amd64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_freebsd_386.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_freebsd_amd64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_freebsd_arm.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_linux_386.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_linux_amd64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_linux_arm.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_linux_ppc64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_linux_ppc64le.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_netbsd_386.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_netbsd_amd64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_netbsd_arm.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_openbsd_386.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_openbsd_amd64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_openbsd_arm.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
Lstat	./syscall/zsyscall_solaris_amd64.go	/^func Lstat(path string, stat *Stat_t) (err error) {$/;"	f
LstatP	./os/export_test.go	/^var LstatP = &lstat$/;"	v
LstatP	./path/filepath/export_test.go	/^var LstatP = &lstat$/;"	v
Lwpparams	./runtime/defs_dragonfly.go	/^type Lwpparams C.struct_lwp_params$/;"	t
M	./cmd/compile/internal/big/nat.go	/^\/\/   func (x *T) M() T1                \/\/ v = x.M()$/;"	f
M	./cmd/compile/internal/gc/subr.go	/^ *	func (t T) M() {$/;"	f
M	./cmd/compile/internal/gc/subr.go	/^ *	func (u U) M() {$/;"	f
M	./cmd/vet/testdata/nilfunc.go	/^func (T) M() {}$/;"	f
M	./go/doc/testdata/b.go	/^func (x *T) M()   {} \/\/ M$/;"	f
M	./go/doc/testdata/c.go	/^func (t1 *T1) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (*T4) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (*U1) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (*U2) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (*U4) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (*V4) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (*V6) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (T2) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (T3) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (t1) M() {}$/;"	f
M	./go/doc/testdata/e.go	/^func (t2) M() {}$/;"	f
M	./go/internal/gccgoimporter/parser_test.go	/^	{id: "foo", typ: "<type 1 \\"bar.Foo\\" \\"bar\\" <type -1> func (? <type 1>) M (); >", want: "bar.Foo", underlying: "int8", methods: "func (bar.Foo).M()"},$/;"	f
M	./go/types/api_test.go	/^func (T) M() {}$/;"	f
M	./math/big/nat.go	/^\/\/   func (x *T) M() T1                \/\/ v = x.M()$/;"	f
M	./reflect/all_test.go	/^\/\/	func (p *Outer) M() {$/;"	f
M	./reflect/all_test.go	/^func (i *InnerInt) M() int {$/;"	f
M	./reflect/all_test.go	/^func (p *Public) M() {$/;"	f
M	./reflect/all_test.go	/^func (p *Tbigp) M(x int, b byte) (byte, int) { return b, x + int(p[0]) + int(p[1]) }$/;"	f
M	./reflect/all_test.go	/^func (p *Tsmallp) M(x int, b byte) (byte, int) { return b, x + int(*p) }$/;"	f
M	./reflect/all_test.go	/^func (p *Twordp) M(x int, b byte) (byte, int) { return b, x + int(*p) }$/;"	f
M	./reflect/all_test.go	/^func (pi *Inner) M() {$/;"	f
M	./reflect/all_test.go	/^func (t4 Tm4) M(x int, b byte) (byte, int) { return b, x + 40 }$/;"	f
M	./reflect/all_test.go	/^func (v Tbigv) M(x int, b byte) (byte, int) { return b, x + int(v[0]) + int(v[1]) }$/;"	f
M	./reflect/all_test.go	/^func (v Tsmallv) M(x int, b byte) (byte, int) { return b, x + int(v) }$/;"	f
M	./reflect/all_test.go	/^func (v Twordv) M(x int, b byte) (byte, int) { return b, x + int(v) }$/;"	f
M1	./go/internal/gcimporter/testdata/exports.go	/^func (p *T1) M1()$/;"	f
M128a	./runtime/defs_windows.go	/^type M128a C.M128A$/;"	t
M4PI	./math/sincos_amd64.s	/^#define M4PI 1.273239544735162542821171882678754627704620361328125 \/\/ 4\/pi$/;"	d
MAC	./crypto/tls/cipher_suites.go	/^func (s ssl30MAC) MAC(digestBuf, seq, header, data []byte) []byte {$/;"	f
MAC	./crypto/tls/cipher_suites.go	/^func (s tls10MAC) MAC(digestBuf, seq, header, data []byte) []byte {$/;"	f
MAXWIDTH	./cmd/compile/internal/amd64/galign.go	/^var MAXWIDTH int64 = 1 << 50$/;"	v
MAXWIDTH	./cmd/compile/internal/arm/galign.go	/^var MAXWIDTH int64 = (1 << 32) - 1$/;"	v
MAXWIDTH	./cmd/compile/internal/arm64/galign.go	/^var MAXWIDTH int64 = 1 << 50$/;"	v
MAXWIDTH	./cmd/compile/internal/ppc64/galign.go	/^var MAXWIDTH int64 = 1 << 50$/;"	v
MAXWIDTH	./cmd/compile/internal/x86/galign.go	/^var MAXWIDTH int64 = (1 << 32) - 1$/;"	v
MAdd	./text/template/exec_test.go	/^func (t *T) MAdd(a int, b []int) []int {$/;"	f
MIMEHeader	./net/textproto/header.go	/^type MIMEHeader map[string][]string$/;"	t
MIX	./crypto/sha1/sha1block_386.s	/^#define MIX(a, b, c, d, e, const) \\$/;"	d
MIX	./crypto/sha1/sha1block_amd64.s	/^#define MIX(a, b, c, d, e, const) \\$/;"	d
MIX	./crypto/sha1/sha1block_amd64p32.s	/^#define MIX(a, b, c, d, e, const) \\$/;"	d
MIX	./crypto/sha1/sha1block_arm.s	/^#define MIX(Ra, Rb, Rc, Rd, Re) \\$/;"	d
MOVL	./crypto/md5/md5block_386.s	/^	MOVL	d,		BP; \\$/;"	d
MOVL	./crypto/md5/md5block_386.s	/^	MOVL	d,		DI; \\$/;"	d
MOVL	./crypto/sha1/sha1block_386.s	/^	MOVL	d, DI; \\$/;"	d
MOVL	./crypto/sha1/sha1block_amd64.s	/^	MOVL	d, R9; \\$/;"	d
MOVL	./crypto/sha1/sha1block_amd64p32.s	/^	MOVL	d, R9; \\$/;"	d
MOVL	./runtime/sys_nacl_amd64p32.s	/^MOVL $1, DI; NACL_SYSCALL(SYS_exit)$/;"	l
MRS_TPIDR_R0	./runtime/tls_arm64.h	/^#define MRS_TPIDR_R0 /;"	d
MSGSCHEDULE0	./crypto/sha256/sha256block_386.s	/^#define MSGSCHEDULE0(index) \\$/;"	d
MSGSCHEDULE0	./crypto/sha256/sha256block_amd64.s	/^#define MSGSCHEDULE0(index) \\$/;"	d
MSGSCHEDULE0	./crypto/sha512/sha512block_amd64.s	/^#define MSGSCHEDULE0(index) \\$/;"	d
MSGSCHEDULE1	./crypto/sha256/sha256block_386.s	/^#define MSGSCHEDULE1(index) \\$/;"	d
MSGSCHEDULE1	./crypto/sha256/sha256block_amd64.s	/^#define MSGSCHEDULE1(index) \\$/;"	d
MSGSCHEDULE1	./crypto/sha512/sha512block_amd64.s	/^#define MSGSCHEDULE1(index) \\$/;"	d
MULL	./runtime/sys_dragonfly_amd64.s	/^	MULL	DX$/;"	d
MULL	./runtime/sys_freebsd_386.s	/^	MULL	DX$/;"	d
MULL	./runtime/sys_freebsd_amd64.s	/^	MULL	DX$/;"	d
MULL	./runtime/sys_netbsd_386.s	/^	MULL	DX$/;"	d
MULL	./runtime/sys_netbsd_amd64.s	/^	MULL	DX$/;"	d
MULL	./runtime/sys_openbsd_386.s	/^	MULL	DX$/;"	d
MULL	./runtime/sys_openbsd_amd64.s	/^	MULL	DX$/;"	d
MX	./net/dnsclient.go	/^type MX struct {$/;"	t
MachBody	./runtime/defs_darwin.go	/^type MachBody C.mach_msg_body_t$/;"	t
MachHeader	./runtime/defs_darwin.go	/^type MachHeader C.mach_msg_header_t$/;"	t
MachNDR	./runtime/defs_darwin.go	/^type MachNDR C.NDR_record_t$/;"	t
MachPort	./runtime/defs_darwin.go	/^type MachPort C.mach_msg_port_descriptor_t$/;"	t
Machine	./debug/elf/elf.go	/^type Machine uint16$/;"	t
MachoHdr	./cmd/link/internal/ld/macho.go	/^type MachoHdr struct {$/;"	t
MachoLoad	./cmd/link/internal/ld/macho.go	/^type MachoLoad struct {$/;"	t
MachoSect	./cmd/link/internal/ld/macho.go	/^type MachoSect struct {$/;"	t
MachoSeg	./cmd/link/internal/ld/macho.go	/^type MachoSeg struct {$/;"	t
Machoadddynlib	./cmd/link/internal/ld/macho.go	/^func Machoadddynlib(lib string) {$/;"	f
Machoemitreloc	./cmd/link/internal/ld/macho.go	/^func Machoemitreloc() {$/;"	f
Machoinit	./cmd/link/internal/ld/macho.go	/^func Machoinit() {$/;"	f
Macro	./cmd/asm/internal/lex/lex.go	/^type Macro struct {$/;"	t
Madvise	./syscall/zsyscall_linux_386.go	/^func Madvise(b []byte, advice int) (err error) {$/;"	f
Madvise	./syscall/zsyscall_linux_amd64.go	/^func Madvise(b []byte, advice int) (err error) {$/;"	f
Madvise	./syscall/zsyscall_linux_arm.go	/^func Madvise(b []byte, advice int) (err error) {$/;"	f
Madvise	./syscall/zsyscall_linux_arm64.go	/^func Madvise(b []byte, advice int) (err error) {$/;"	f
Madvise	./syscall/zsyscall_linux_ppc64.go	/^func Madvise(b []byte, advice int) (err error) {$/;"	f
Madvise	./syscall/zsyscall_linux_ppc64le.go	/^func Madvise(b []byte, advice int) (err error) {$/;"	f
Magic	./cmd/compile/internal/gc/go.go	/^type Magic struct {$/;"	t
Mail	./net/smtp/smtp.go	/^func (c *Client) Mail(from string) error {$/;"	f
Main	./cmd/compile/internal/amd64/galign.go	/^func Main() {$/;"	f
Main	./cmd/compile/internal/arm/galign.go	/^func Main() {$/;"	f
Main	./cmd/compile/internal/arm64/galign.go	/^func Main() {$/;"	f
Main	./cmd/compile/internal/gc/lex.go	/^func Main() {$/;"	f
Main	./cmd/compile/internal/ppc64/galign.go	/^func Main() {$/;"	f
Main	./cmd/compile/internal/x86/galign.go	/^func Main() {$/;"	f
Main	./cmd/link/internal/amd64/obj.go	/^func Main() {$/;"	f
Main	./cmd/link/internal/arm/obj.go	/^func Main() {$/;"	f
Main	./cmd/link/internal/arm64/obj.go	/^func Main() {$/;"	f
Main	./cmd/link/internal/ppc64/obj.go	/^func Main() {$/;"	f
Main	./cmd/link/internal/x86/obj.go	/^func Main() {$/;"	f
Main	./go/doc/testdata/testing.go	/^func Main(matchString func(pat, str string) (bool, error), tests []InternalTest, benchmarks []InternalBenchmark, examples []InternalExample) {$/;"	f
Main	./testing/testing.go	/^func Main(matchString func(pat, str string) (bool, error), tests []InternalTest, benchmarks []InternalBenchmark, examples []InternalExample) {$/;"	f
MainStart	./testing/testing.go	/^func MainStart(matchString func(pat, str string) (bool, error), tests []InternalTest, benchmarks []InternalBenchmark, examples []InternalExample) *M {$/;"	f
Make	./cmd/asm/internal/lex/lex.go	/^func Make(token ScanToken, text string) Token {$/;"	f
MakeBool	./go/constant/value.go	/^func MakeBool(b bool) Value { return boolVal(b) }$/;"	f
MakeChan	./reflect/value.go	/^func MakeChan(typ Type, buffer int) Value {$/;"	f
MakeFloat64	./go/constant/value.go	/^func MakeFloat64(x float64) Value {$/;"	f
MakeFromBytes	./go/constant/value.go	/^func MakeFromBytes(bytes []byte) Value {$/;"	f
MakeFromLiteral	./go/constant/value.go	/^func MakeFromLiteral(lit string, tok token.Token, prec uint) Value {$/;"	f
MakeFunc	./reflect/makefunc.go	/^func MakeFunc(typ Type, fn func(args []Value) (results []Value)) Value {$/;"	f
MakeImag	./go/constant/value.go	/^func MakeImag(x Value) Value {$/;"	f
MakeInt64	./go/constant/value.go	/^func MakeInt64(x int64) Value { return int64Val(x) }$/;"	f
MakeMap	./reflect/value.go	/^func MakeMap(typ Type) Value {$/;"	f
MakeMap	./runtime/race/testdata/regression_test.go	/^func MakeMap() map[int]int {$/;"	f
MakeRO	./reflect/export_test.go	/^func MakeRO(v Value) Value {$/;"	f
MakeSlice	./reflect/value.go	/^func MakeSlice(typ Type, len, cap int) Value {$/;"	f
MakeString	./go/constant/value.go	/^func MakeString(s string) Value { return stringVal(s) }$/;"	f
MakeTable	./hash/crc32/crc32.go	/^func MakeTable(poly uint32) *Table {$/;"	f
MakeTable	./hash/crc64/crc64.go	/^func MakeTable(poly uint64) *Table {$/;"	f
MakeUint64	./go/constant/value.go	/^func MakeUint64(x uint64) Value { return normInt(new(big.Int).SetUint64(x)) }$/;"	f
MakeUnknown	./go/constant/value.go	/^func MakeUnknown() Value { return unknownVal{} }$/;"	f
MantExp	./cmd/compile/internal/big/float.go	/^func (x *Float) MantExp(mant *Float) (exp int) {$/;"	f
MantExp	./math/big/float.go	/^func (x *Float) MantExp(mant *Float) (exp int) {$/;"	f
Map	./bytes/bytes.go	/^func Map(mapping func(r rune) rune, s []byte) []byte {$/;"	f
Map	./expvar/expvar.go	/^type Map struct {$/;"	t
Map	./go/types/type.go	/^type Map struct {$/;"	t
Map	./strings/strings.go	/^func Map(mapping func(rune) rune, s string) string {$/;"	f
Map	./sync/atomic/value_test.go	/^	type Map map[string]string$/;"	t
MapBucketOf	./reflect/export_test.go	/^func MapBucketOf(x, y Type) Type {$/;"	f
MapIndex	./reflect/value.go	/^func (v Value) MapIndex(key Value) Value {$/;"	f
MapKeys	./reflect/value.go	/^func (v Value) MapKeys() []Value {$/;"	f
MapOf	./reflect/type.go	/^func MapOf(key, elem Type) Type {$/;"	f
MapTypePrinter	./runtime/runtime-gdb.py	/^class MapTypePrinter:$/;"	c
MapViewOfFile	./syscall/zsyscall_windows.go	/^func MapViewOfFile(handle Handle, access uint32, offsetHigh uint32, offsetLow uint32, length uintptr) (addr uintptr, err error) {$/;"	f
MapZone	./time/genzabbrs.go	/^type MapZone struct {$/;"	t
Mapping	./cmd/pprof/internal/profile/profile.go	/^type Mapping struct {$/;"	t
MarkComplete	./go/types/package.go	/^func (pkg *Package) MarkComplete() { pkg.complete = true }$/;"	f
Marshal	./crypto/elliptic/elliptic.go	/^func Marshal(curve Curve, x, y *big.Int) []byte {$/;"	f
Marshal	./encoding/asn1/marshal.go	/^func Marshal(val interface{}) ([]byte, error) {$/;"	f
Marshal	./encoding/json/encode.go	/^func Marshal(v interface{}) ([]byte, error) {$/;"	f
Marshal	./encoding/xml/marshal.go	/^func Marshal(v interface{}) ([]byte, error) {$/;"	f
Marshal	./syscall/dir_plan9.go	/^func (d *Dir) Marshal(b []byte) (n int, err error) {$/;"	f
MarshalBinary	./encoding/gob/example_encdec_test.go	/^func (v Vector) MarshalBinary() ([]byte, error) {$/;"	f
MarshalBinary	./encoding/gob/gobencdec_test.go	/^func (g *BinaryGobber) MarshalBinary() ([]byte, error) {$/;"	f
MarshalBinary	./encoding/gob/gobencdec_test.go	/^func (v BinaryValueGobber) MarshalBinary() ([]byte, error) {$/;"	f
MarshalBinary	./time/time.go	/^func (t Time) MarshalBinary() ([]byte, error) {$/;"	f
MarshalECPrivateKey	./crypto/x509/sec1.go	/^func MarshalECPrivateKey(key *ecdsa.PrivateKey) ([]byte, error) {$/;"	f
MarshalIndent	./encoding/json/encode.go	/^func MarshalIndent(v interface{}, prefix, indent string) ([]byte, error) {$/;"	f
MarshalIndent	./encoding/xml/marshal.go	/^func MarshalIndent(v interface{}, prefix, indent string) ([]byte, error) {$/;"	f
MarshalJSON	./cmd/compile/internal/big/int.go	/^func (z *Int) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./encoding/json/encode_test.go	/^func (*Ref) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./encoding/json/encode_test.go	/^func (C) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./encoding/json/encode_test.go	/^func (Val) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./encoding/json/stream.go	/^func (m *RawMessage) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./html/template/escape_test.go	/^func (x *badMarshaler) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./html/template/escape_test.go	/^func (x *goodMarshaler) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./math/big/int.go	/^func (z *Int) MarshalJSON() ([]byte, error) {$/;"	f
MarshalJSON	./time/time.go	/^func (t Time) MarshalJSON() ([]byte, error) {$/;"	f
MarshalPKCS1PrivateKey	./crypto/x509/pkcs1.go	/^func MarshalPKCS1PrivateKey(key *rsa.PrivateKey) []byte {$/;"	f
MarshalPKIXPublicKey	./crypto/x509/x509.go	/^func MarshalPKIXPublicKey(pub interface{}) ([]byte, error) {$/;"	f
MarshalText	./cmd/compile/internal/big/int.go	/^func (z *Int) MarshalText() (text []byte, err error) {$/;"	f
MarshalText	./cmd/compile/internal/big/rat.go	/^func (r *Rat) MarshalText() (text []byte, err error) {$/;"	f
MarshalText	./encoding/gob/gobencdec_test.go	/^func (g *TextGobber) MarshalText() ([]byte, error) {$/;"	f
MarshalText	./encoding/gob/gobencdec_test.go	/^func (v TextValueGobber) MarshalText() ([]byte, error) {$/;"	f
MarshalText	./encoding/json/decode_test.go	/^func (u *unmarshalerText) MarshalText() ([]byte, error) {$/;"	f
MarshalText	./encoding/json/encode_test.go	/^func (*RefText) MarshalText() ([]byte, error) {$/;"	f
MarshalText	./encoding/json/encode_test.go	/^func (CText) MarshalText() ([]byte, error) {$/;"	f
MarshalText	./encoding/json/encode_test.go	/^func (ValText) MarshalText() ([]byte, error) {$/;"	f
MarshalText	./math/big/int.go	/^func (z *Int) MarshalText() (text []byte, err error) {$/;"	f
MarshalText	./math/big/rat.go	/^func (r *Rat) MarshalText() (text []byte, err error) {$/;"	f
MarshalText	./net/ip.go	/^func (ip IP) MarshalText() ([]byte, error) {$/;"	f
MarshalText	./time/time.go	/^func (t Time) MarshalText() ([]byte, error) {$/;"	f
MarshalXML	./encoding/xml/marshal_test.go	/^func (m *MyMarshalerTest) MarshalXML(e *Encoder, start StartElement) error {$/;"	f
MarshalXMLAttr	./encoding/xml/marshal_test.go	/^func (m *MyMarshalerAttrTest) MarshalXMLAttr(name Name) (Attr, error) {$/;"	f
Marshaler	./encoding/json/encode.go	/^type Marshaler interface {$/;"	t
Marshaler	./encoding/xml/marshal.go	/^type Marshaler interface {$/;"	t
MarshalerAttr	./encoding/xml/marshal.go	/^type MarshalerAttr interface {$/;"	t
MarshalerError	./encoding/json/encode.go	/^type MarshalerError struct {$/;"	t
MarshalerStruct	./encoding/xml/marshal_test.go	/^type MarshalerStruct struct {$/;"	t
Mask	./net/ip.go	/^func (ip IP) Mask(mask IPMask) IP {$/;"	f
Massage	./cmd/pprof/internal/svg/svg.go	/^func Massage(in bytes.Buffer) string {$/;"	f
Match	./path/filepath/match.go	/^func Match(pattern, name string) (matched bool, err error) {$/;"	f
Match	./path/match.go	/^func Match(pattern, name string) (matched bool, err error) {$/;"	f
Match	./regexp/regexp.go	/^func (re *Regexp) Match(b []byte) bool {$/;"	f
Match	./regexp/regexp.go	/^func Match(pattern string, b []byte) (matched bool, err error) {$/;"	f
MatchEmptyWidth	./regexp/syntax/prog.go	/^func (i *Inst) MatchEmptyWidth(before rune, after rune) bool {$/;"	f
MatchReader	./regexp/regexp.go	/^func (re *Regexp) MatchReader(r io.RuneReader) bool {$/;"	f
MatchReader	./regexp/regexp.go	/^func MatchReader(pattern string, r io.RuneReader) (matched bool, err error) {$/;"	f
MatchRune	./regexp/syntax/prog.go	/^func (i *Inst) MatchRune(r rune) bool {$/;"	f
MatchRunePos	./regexp/syntax/prog.go	/^func (i *Inst) MatchRunePos(r rune) int {$/;"	f
MatchString	./regexp/regexp.go	/^func (re *Regexp) MatchString(s string) bool {$/;"	f
MatchString	./regexp/regexp.go	/^func MatchString(pattern string, s string) (matched bool, err error) {$/;"	f
MatchTest	./path/filepath/match_test.go	/^type MatchTest struct {$/;"	t
MatchTest	./path/match_test.go	/^type MatchTest struct {$/;"	t
Matrix	./runtime/proc_test.go	/^type Matrix [][]float64$/;"	t
Max	./math/dim.go	/^func Max(x, y float64) float64$/;"	f
MaxBytesReader	./net/http/request.go	/^func MaxBytesReader(w ResponseWriter, r io.ReadCloser, n int64) io.ReadCloser {$/;"	f
MaxCap	./regexp/syntax/regexp.go	/^func (re *Regexp) MaxCap() int {$/;"	f
MaxEncodedLen	./encoding/ascii85/ascii85.go	/^func MaxEncodedLen(n int) int { return (n + 3) \/ 4 * 5 }$/;"	f
MaxInt	./go/doc/testdata/b.go	/^var MaxInt int    \/\/ MaxInt$/;"	v
MaxTokenSize	./bufio/export_test.go	/^func (s *Scanner) MaxTokenSize(n int) {$/;"	f
Maxarg	./cmd/compile/internal/gc/go.go	/^var Maxarg int64$/;"	v
Maxintval	./cmd/compile/internal/gc/go.go	/^var Maxintval [NTYPE]*Mpint$/;"	v
Maxstring	./runtime/export_test.go	/^var Maxstring = &maxstring$/;"	v
Maybe	./reflect/all_test.go	/^func (x *exhaustive) Maybe() bool {$/;"	f
Mclpool	./syscall/types_netbsd.go	/^type Mclpool C.struct_mclpool$/;"	t
Mclpool	./syscall/types_openbsd.go	/^type Mclpool C.struct_mclpool$/;"	t
Mclpool	./syscall/ztypes_netbsd_386.go	/^type Mclpool [0]byte$/;"	t
Mclpool	./syscall/ztypes_netbsd_amd64.go	/^type Mclpool [0]byte$/;"	t
Mclpool	./syscall/ztypes_netbsd_arm.go	/^type Mclpool [0]byte$/;"	t
Mclpool	./syscall/ztypes_openbsd_386.go	/^type Mclpool struct {$/;"	t
Mclpool	./syscall/ztypes_openbsd_amd64.go	/^type Mclpool struct {$/;"	t
Mclpool	./syscall/ztypes_openbsd_arm.go	/^type Mclpool struct{}$/;"	t
Mcontext	./runtime/defs1_linux.go	/^type Mcontext C.mcontext_t$/;"	t
Mcontext	./runtime/defs_dragonfly.go	/^type Mcontext C.mcontext_t$/;"	t
Mcontext	./runtime/defs_freebsd.go	/^type Mcontext C.mcontext_t$/;"	t
Mcontext	./runtime/defs_solaris.go	/^type Mcontext C.mcontext_t$/;"	t
Mcontext32	./runtime/defs_darwin.go	/^type Mcontext32 C.struct_mcontext32$/;"	t
Mcontext64	./runtime/defs_darwin.go	/^type Mcontext64 C.struct_mcontext64$/;"	t
McontextT	./runtime/defs_netbsd.go	/^type McontextT C.mcontext_t$/;"	t
Mconv	./cmd/internal/obj/util.go	/^func Mconv(a *Addr) string {$/;"	f
Mem	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Mem struct {$/;"	t
Mem	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Mem struct {$/;"	t
MemProfile	./runtime/mprof.go	/^func MemProfile(p []MemProfileRecord, inuseZero bool) (n int, ok bool) {$/;"	f
MemProfileRate	./runtime/mprof.go	/^var MemProfileRate int = 512 * 1024$/;"	v
MemProfileRecord	./runtime/mprof.go	/^type MemProfileRecord struct {$/;"	t
MemStats	./runtime/mstats.go	/^\/\/ If you edit this structure, also edit type MemStats below.$/;"	t
MemStats	./runtime/mstats.go	/^type MemStats struct {$/;"	t
MemString	./testing/benchmark.go	/^func (r BenchmarkResult) MemString() string {$/;"	f
MemclrBytes	./runtime/export_test.go	/^var MemclrBytes = memclrBytes$/;"	v
Merge	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) Merge(pb *Profile, r float64) error {$/;"	f
MergeLine	./go/token/position.go	/^func (f *File) MergeLine(line int) {$/;"	f
MergeMode	./go/ast/filter.go	/^type MergeMode uint$/;"	t
MergePackageFiles	./go/ast/filter.go	/^func MergePackageFiles(pkg *Package, mode MergeMode) *File {$/;"	f
Message	./encoding/json/example_test.go	/^	type Message struct {$/;"	t
Message	./net/mail/message.go	/^type Message struct {$/;"	t
MetaTest	./regexp/all_test.go	/^type MetaTest struct {$/;"	t
Method	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (s) Method()$/;"	f
Method	./go/types/type.go	/^func (t *Interface) Method(i int) *Func { return t.allMethods[i] }$/;"	f
Method	./go/types/type.go	/^func (t *Named) Method(i int) *Func { return t.methods[i] }$/;"	f
Method	./reflect/type.go	/^func (t *interfaceType) Method(i int) (m Method) {$/;"	f
Method	./reflect/type.go	/^func (t *rtype) Method(i int) (m Method) {$/;"	f
Method	./reflect/type.go	/^func (t *uncommonType) Method(i int) (m Method) {$/;"	f
Method	./reflect/type.go	/^type Method struct {$/;"	t
Method	./reflect/value.go	/^func (v Value) Method(i int) Value {$/;"	f
Method0	./text/template/exec_test.go	/^func (t *T) Method0() string {$/;"	f
Method1	./runtime/iface_test.go	/^func (TL) Method1() {}$/;"	f
Method1	./runtime/iface_test.go	/^func (TM) Method1() {}$/;"	f
Method1	./runtime/iface_test.go	/^func (TS) Method1() {}$/;"	f
Method1	./text/template/exec_test.go	/^func (t *T) Method1(a int) int {$/;"	f
Method2	./runtime/iface_test.go	/^func (TL) Method2() {}$/;"	f
Method2	./runtime/iface_test.go	/^func (TM) Method2() {}$/;"	f
Method2	./runtime/iface_test.go	/^func (TS) Method2() {}$/;"	f
Method2	./text/template/exec_test.go	/^func (t *T) Method2(a uint16, b string) string {$/;"	f
Method3	./text/template/exec_test.go	/^func (t *T) Method3(v interface{}) string {$/;"	f
MethodByName	./reflect/type.go	/^func (t *interfaceType) MethodByName(name string) (m Method, ok bool) {$/;"	f
MethodByName	./reflect/type.go	/^func (t *rtype) MethodByName(name string) (m Method, ok bool) {$/;"	f
MethodByName	./reflect/type.go	/^func (t *uncommonType) MethodByName(name string) (m Method, ok bool) {$/;"	f
MethodByName	./reflect/value.go	/^func (v Value) MethodByName(name string) Value {$/;"	f
MethodName	./net/rpc/server.go	/^		func (t *T) MethodName(argType T1, replyType *T2) error$/;"	f
MethodSet	./go/types/methodset.go	/^type MethodSet struct {$/;"	t
MethodSig	./cmd/vet/method.go	/^type MethodSig struct {$/;"	t
MethodTest	./cmd/vet/testdata/method.go	/^type MethodTest int$/;"	t
MethodTestInterface	./cmd/vet/testdata/method.go	/^type MethodTestInterface interface {$/;"	t
Mfree	./cmd/compile/internal/gc/cgen.go	/^func Mfree(n *Node) {$/;"	f
Mgen	./cmd/compile/internal/gc/cgen.go	/^func Mgen(n *Node, n1 *Node, rg *Node) {$/;"	f
MibIfRow	./syscall/ztypes_windows.go	/^type MibIfRow struct {$/;"	t
Min	./math/dim.go	/^func Min(x, y float64) float64$/;"	f
MinPrec	./cmd/compile/internal/big/float.go	/^func (x *Float) MinPrec() uint {$/;"	f
MinPrec	./math/big/float.go	/^func (x *Float) MinPrec() uint {$/;"	f
MiniCGI	./net/http/cgi/testdata/test.cgi	/^package MiniCGI;$/;"	p
Minintval	./cmd/compile/internal/gc/go.go	/^var Minintval [NTYPE]*Mpint$/;"	v
Minute	./time/time.go	/^func (t Time) Minute() int {$/;"	f
Minutes	./time/time.go	/^func (d Duration) Minutes() float64 {$/;"	f
MissingMethod	./go/types/lookup.go	/^func MissingMethod(V Type, T *Interface, static bool) (method *Func, wrongType bool) {$/;"	f
MixedNested	./encoding/xml/marshal_test.go	/^type MixedNested struct {$/;"	t
Mkdir	./os/file.go	/^func Mkdir(name string, perm FileMode) error {$/;"	f
Mkdir	./syscall/fs_nacl.go	/^func Mkdir(path string, perm uint32) error {$/;"	f
Mkdir	./syscall/syscall_linux.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/syscall_plan9.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/syscall_windows.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_darwin_386.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_darwin_amd64.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_darwin_arm.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_darwin_arm64.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_dragonfly_amd64.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_freebsd_386.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_freebsd_amd64.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_freebsd_arm.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_netbsd_386.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_netbsd_amd64.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_netbsd_arm.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_openbsd_386.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_openbsd_amd64.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_openbsd_arm.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
Mkdir	./syscall/zsyscall_solaris_amd64.go	/^func Mkdir(path string, mode uint32) (err error) {$/;"	f
MkdirAll	./os/path.go	/^func MkdirAll(path string, perm FileMode) error {$/;"	f
Mkdirat	./syscall/zsyscall_linux_386.go	/^func Mkdirat(dirfd int, path string, mode uint32) (err error) {$/;"	f
Mkdirat	./syscall/zsyscall_linux_amd64.go	/^func Mkdirat(dirfd int, path string, mode uint32) (err error) {$/;"	f
Mkdirat	./syscall/zsyscall_linux_arm.go	/^func Mkdirat(dirfd int, path string, mode uint32) (err error) {$/;"	f
Mkdirat	./syscall/zsyscall_linux_arm64.go	/^func Mkdirat(dirfd int, path string, mode uint32) (err error) {$/;"	f
Mkdirat	./syscall/zsyscall_linux_ppc64.go	/^func Mkdirat(dirfd int, path string, mode uint32) (err error) {$/;"	f
Mkdirat	./syscall/zsyscall_linux_ppc64le.go	/^func Mkdirat(dirfd int, path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/syscall_linux.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_darwin_386.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_darwin_amd64.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_darwin_arm.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_darwin_arm64.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_dragonfly_amd64.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_freebsd_386.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_freebsd_amd64.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_freebsd_arm.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_netbsd_386.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_netbsd_amd64.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_netbsd_arm.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_openbsd_386.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_openbsd_amd64.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mkfifo	./syscall/zsyscall_openbsd_arm.go	/^func Mkfifo(path string, mode uint32) (err error) {$/;"	f
Mknod	./syscall/syscall_linux.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_darwin_386.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_darwin_amd64.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_darwin_arm.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_darwin_arm64.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_dragonfly_amd64.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_freebsd_386.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_freebsd_amd64.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_freebsd_arm.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_netbsd_386.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_netbsd_amd64.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_netbsd_arm.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_openbsd_386.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_openbsd_amd64.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_openbsd_arm.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknod	./syscall/zsyscall_solaris_amd64.go	/^func Mknod(path string, mode uint32, dev int) (err error) {$/;"	f
Mknodat	./syscall/zsyscall_linux_386.go	/^func Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {$/;"	f
Mknodat	./syscall/zsyscall_linux_amd64.go	/^func Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {$/;"	f
Mknodat	./syscall/zsyscall_linux_arm.go	/^func Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {$/;"	f
Mknodat	./syscall/zsyscall_linux_arm64.go	/^func Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {$/;"	f
Mknodat	./syscall/zsyscall_linux_ppc64.go	/^func Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {$/;"	f
Mknodat	./syscall/zsyscall_linux_ppc64le.go	/^func Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {$/;"	f
Mlock	./syscall/zsyscall_darwin_386.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_darwin_amd64.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_darwin_arm.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_darwin_arm64.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_linux_386.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_linux_amd64.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_linux_arm.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_linux_arm64.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_linux_ppc64.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlock	./syscall/zsyscall_linux_ppc64le.go	/^func Mlock(b []byte) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_darwin_386.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_darwin_amd64.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_darwin_arm.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_darwin_arm64.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_linux_386.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_linux_amd64.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_linux_arm.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_linux_arm64.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_linux_ppc64.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mlockall	./syscall/zsyscall_linux_ppc64le.go	/^func Mlockall(flags int) (err error) {$/;"	f
Mmap	./syscall/syscall_bsd.go	/^func Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {$/;"	f
Mmap	./syscall/syscall_linux.go	/^func Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {$/;"	f
Mmap	./syscall/syscall_unix.go	/^func (m *mmapper) Mmap(fd int, offset int64, length int, prot int, flags int) (data []byte, err error) {$/;"	f
Mod	./cmd/compile/internal/big/int.go	/^func (z *Int) Mod(x, y *Int) *Int {$/;"	f
Mod	./image/geom.go	/^func (p Point) Mod(r Rectangle) Point {$/;"	f
Mod	./math/big/int.go	/^func (z *Int) Mod(x, y *Int) *Int {$/;"	f
Mod	./math/mod.go	/^func Mod(x, y float64) float64$/;"	f
ModInverse	./cmd/compile/internal/big/int.go	/^func (z *Int) ModInverse(g, n *Int) *Int {$/;"	f
ModInverse	./math/big/int.go	/^func (z *Int) ModInverse(g, n *Int) *Int {$/;"	f
ModSqrt	./cmd/compile/internal/big/int.go	/^func (z *Int) ModSqrt(x, p *Int) *Int {$/;"	f
ModSqrt	./math/big/int.go	/^func (z *Int) ModSqrt(x, p *Int) *Int {$/;"	f
ModTime	./archive/tar/common.go	/^func (fi headerFileInfo) ModTime() time.Time { return fi.h.ModTime }$/;"	f
ModTime	./archive/tar/tar_test.go	/^func (symlink) ModTime() time.Time { return time.Time{} }$/;"	f
ModTime	./archive/zip/struct.go	/^func (fi headerFileInfo) ModTime() time.Time { return fi.fh.ModTime() }$/;"	f
ModTime	./archive/zip/struct.go	/^func (h *FileHeader) ModTime() time.Time {$/;"	f
ModTime	./cmd/pack/pack_test.go	/^func (f *FakeFile) ModTime() time.Time {$/;"	f
ModTime	./net/http/fs_test.go	/^func (f *fakeFileInfo) ModTime() time.Time { return f.modtime }$/;"	f
ModTime	./os/types_notwin.go	/^func (fs *fileStat) ModTime() time.Time { return fs.modTime }$/;"	f
ModTime	./os/types_windows.go	/^func (fs *fileStat) ModTime() time.Time {$/;"	f
Mode	./archive/tar/common.go	/^func (fi headerFileInfo) Mode() (mode os.FileMode) {$/;"	f
Mode	./archive/tar/tar_test.go	/^func (symlink) Mode() os.FileMode  { return os.ModeSymlink }$/;"	f
Mode	./archive/zip/struct.go	/^func (fi headerFileInfo) Mode() os.FileMode  { return fi.fh.Mode() }$/;"	f
Mode	./archive/zip/struct.go	/^func (h *FileHeader) Mode() (mode os.FileMode) {$/;"	f
Mode	./cmd/compile/internal/big/float.go	/^func (x *Float) Mode() RoundingMode {$/;"	f
Mode	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Mode int$/;"	t
Mode	./cmd/pack/pack_test.go	/^func (f *FakeFile) Mode() os.FileMode {$/;"	f
Mode	./go/doc/doc.go	/^type Mode int$/;"	t
Mode	./go/parser/interface.go	/^type Mode uint$/;"	t
Mode	./go/printer/printer.go	/^type Mode uint$/;"	t
Mode	./go/scanner/scanner.go	/^type Mode uint$/;"	t
Mode	./math/big/float.go	/^func (x *Float) Mode() RoundingMode {$/;"	f
Mode	./net/http/fs_test.go	/^func (f *fakeFileInfo) Mode() os.FileMode {$/;"	f
Mode	./os/types_notwin.go	/^func (fs *fileStat) Mode() FileMode     { return fs.mode }$/;"	f
Mode	./os/types_windows.go	/^func (fs *fileStat) Mode() (m FileMode) {$/;"	f
Model	./image/color/color.go	/^type Model interface {$/;"	t
ModelFunc	./image/color/color.go	/^func ModelFunc(f func(Color) Color) Model {$/;"	f
Modf	./math/modf.go	/^func Modf(f float64) (int float64, frac float64)$/;"	f
Month	./time/time.go	/^func (t Time) Month() Month {$/;"	f
Month	./time/time.go	/^type Month int$/;"	t
More	./encoding/json/stream.go	/^func (dec *Decoder) More() bool {$/;"	f
Mount	./syscall/syscall_linux.go	/^func Mount(source string, target string, fstype string, flags uintptr, data string) (err error) {$/;"	f
Mount	./syscall/syscall_plan9.go	/^func Mount(fd int, afd int, old string, flag int, aname string) (err error) {$/;"	f
Move	./container/ring/ring.go	/^func (r *Ring) Move(n int) *Ring {$/;"	f
MoveAfter	./container/list/list.go	/^func (l *List) MoveAfter(e, mark *Element) {$/;"	f
MoveBefore	./container/list/list.go	/^func (l *List) MoveBefore(e, mark *Element) {$/;"	f
MoveFile	./syscall/zsyscall_windows.go	/^func MoveFile(from *uint16, to *uint16) (err error) {$/;"	f
MoveFileEx	./internal/syscall/windows/zsyscall_windows.go	/^func MoveFileEx(from *uint16, to *uint16, flags uint32) (err error) {$/;"	f
MoveToBack	./container/list/list.go	/^func (l *List) MoveToBack(e *Element) {$/;"	f
MoveToFront	./container/list/list.go	/^func (l *List) MoveToFront(e *Element) {$/;"	f
Movie	./encoding/xml/marshal_test.go	/^type Movie struct {$/;"	t
Movtab	./cmd/internal/obj/x86/asm6.go	/^type Movtab struct {$/;"	t
Mpcmpfixfix	./cmd/compile/internal/gc/mparith2.go	/^func Mpcmpfixfix(a, b *Mpint) int {$/;"	f
Mpcplx	./cmd/compile/internal/gc/go.go	/^type Mpcplx struct {$/;"	t
Mpflt	./cmd/compile/internal/gc/go.go	/^type Mpflt struct {$/;"	t
Mpgetfix	./cmd/compile/internal/gc/mparith2.go	/^func Mpgetfix(a *Mpint) int64 {$/;"	f
Mpint	./cmd/compile/internal/gc/go.go	/^type Mpint struct {$/;"	t
Mpmovecfix	./cmd/compile/internal/gc/mparith2.go	/^func Mpmovecfix(a *Mpint, c int64) {$/;"	f
Mpmovecflt	./cmd/compile/internal/gc/mparith3.go	/^func Mpmovecflt(a *Mpflt, c float64) {$/;"	f
Mpmovefixflt	./cmd/compile/internal/gc/mparith3.go	/^func Mpmovefixflt(a *Mpflt, b *Mpint) {$/;"	f
Mprotect	./syscall/zsyscall_darwin_386.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_darwin_amd64.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_darwin_arm.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_darwin_arm64.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_linux_386.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_linux_amd64.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_linux_arm.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_linux_arm64.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_linux_ppc64.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mprotect	./syscall/zsyscall_linux_ppc64le.go	/^func Mprotect(b []byte, prot int) (err error) {$/;"	f
Mpshiftfix	./cmd/compile/internal/gc/mparith2.go	/^func Mpshiftfix(a *Mpint, s int) {$/;"	f
Msghdr	./syscall/types_darwin.go	/^type Msghdr C.struct_msghdr$/;"	t
Msghdr	./syscall/types_dragonfly.go	/^type Msghdr C.struct_msghdr$/;"	t
Msghdr	./syscall/types_freebsd.go	/^type Msghdr C.struct_msghdr$/;"	t
Msghdr	./syscall/types_linux.go	/^type Msghdr C.struct_msghdr$/;"	t
Msghdr	./syscall/types_netbsd.go	/^type Msghdr C.struct_msghdr$/;"	t
Msghdr	./syscall/types_openbsd.go	/^type Msghdr C.struct_msghdr$/;"	t
Msghdr	./syscall/types_solaris.go	/^type Msghdr C.struct_msghdr$/;"	t
Msghdr	./syscall/ztypes_darwin_386.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_darwin_amd64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_darwin_arm.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_darwin_arm64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_dragonfly_amd64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_freebsd_386.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_freebsd_amd64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_freebsd_arm.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_linux_386.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_linux_amd64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_linux_arm.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_linux_arm64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_linux_ppc64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_linux_ppc64le.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_netbsd_386.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_netbsd_amd64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_netbsd_arm.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_openbsd_386.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_openbsd_amd64.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_openbsd_arm.go	/^type Msghdr struct {$/;"	t
Msghdr	./syscall/ztypes_solaris_amd64.go	/^type Msghdr struct {$/;"	t
Mul	./cmd/compile/internal/big/float.go	/^func (z *Float) Mul(x, y *Float) *Float {$/;"	f
Mul	./cmd/compile/internal/big/int.go	/^func (z *Int) Mul(x, y *Int) *Int {$/;"	f
Mul	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Mul(x, y *Rat) *Rat {$/;"	f
Mul	./image/geom.go	/^func (p Point) Mul(k int) Point {$/;"	f
Mul	./math/big/float.go	/^func (z *Float) Mul(x, y *Float) *Float {$/;"	f
Mul	./math/big/int.go	/^func (z *Int) Mul(x, y *Int) *Int {$/;"	f
Mul	./math/big/rat.go	/^func (z *Rat) Mul(x, y *Rat) *Rat {$/;"	f
Mul	./net/rpc/jsonrpc/all_test.go	/^func (t *Arith) Mul(args *Args, reply *Reply) error {$/;"	f
Mul	./net/rpc/server_test.go	/^func (t *Arith) Mul(args *Args, reply *Reply) error {$/;"	f
MulRange	./cmd/compile/internal/big/int.go	/^func (z *Int) MulRange(a, b int64) *Int {$/;"	f
MulRange	./math/big/int.go	/^func (z *Int) MulRange(a, b int64) *Int {$/;"	f
MultiFlag	./cmd/asm/internal/flags/flags.go	/^type MultiFlag []string$/;"	t
MultiReader	./io/multi.go	/^func MultiReader(readers ...Reader) Reader {$/;"	f
MultiWriter	./io/multi.go	/^func MultiWriter(writers ...Writer) Writer {$/;"	f
MulticastAddrs	./net/interface.go	/^func (ifi *Interface) MulticastAddrs() ([]Addr, error) {$/;"	f
MultipartReader	./net/http/request.go	/^func (r *Request) MultipartReader() (*multipart.Reader, error) {$/;"	f
Multiply	./net/rpc/server.go	/^		func (t *Arith) Multiply(args *Args, reply *int) error {$/;"	f
Multiply	./strconv/extfloat.go	/^func (f *extFloat) Multiply(g extFloat) {$/;"	f
Multistream	./compress/gzip/gunzip.go	/^func (z *Reader) Multistream(ok bool) {$/;"	f
Munlock	./syscall/zsyscall_darwin_386.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_darwin_amd64.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_darwin_arm.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_darwin_arm64.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_linux_386.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_linux_amd64.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_linux_arm.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_linux_arm64.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_linux_ppc64.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlock	./syscall/zsyscall_linux_ppc64le.go	/^func Munlock(b []byte) (err error) {$/;"	f
Munlockall	./syscall/zsyscall_darwin_386.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_darwin_amd64.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_darwin_arm.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_darwin_arm64.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_linux_386.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_linux_amd64.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_linux_arm.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_linux_arm64.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_linux_ppc64.go	/^func Munlockall() (err error) {$/;"	f
Munlockall	./syscall/zsyscall_linux_ppc64le.go	/^func Munlockall() (err error) {$/;"	f
Munmap	./syscall/syscall_bsd.go	/^func Munmap(b []byte) (err error) {$/;"	f
Munmap	./syscall/syscall_linux.go	/^func Munmap(b []byte) (err error) {$/;"	f
Munmap	./syscall/syscall_unix.go	/^func (m *mmapper) Munmap(data []byte) (err error) {$/;"	f
Must	./html/template/template.go	/^func Must(t *Template, err error) *Template {$/;"	f
Must	./text/template/helper.go	/^func Must(t *Template, err error) *Template {$/;"	f
MustCompile	./regexp/regexp.go	/^func MustCompile(str string) *Regexp {$/;"	f
MustCompilePOSIX	./regexp/regexp.go	/^func MustCompilePOSIX(str string) *Regexp {$/;"	f
MustFindProc	./syscall/dll_windows.go	/^func (d *DLL) MustFindProc(name string) *Proc {$/;"	f
MustHaveExec	./internal/testenv/testenv.go	/^func MustHaveExec(t *testing.T) {$/;"	f
MustHaveExternalNetwork	./internal/testenv/testenv.go	/^func MustHaveExternalNetwork(t *testing.T) {$/;"	f
MustHaveGoBuild	./internal/testenv/testenv.go	/^func MustHaveGoBuild(t *testing.T) {$/;"	f
MustHaveGoRun	./internal/testenv/testenv.go	/^func MustHaveGoRun(t *testing.T) {$/;"	f
MustLoadDLL	./syscall/dll_windows.go	/^func MustLoadDLL(name string) *DLL {$/;"	f
Mutex	./sync/mutex.go	/^type Mutex struct {$/;"	t
MyAttr	./encoding/xml/read_test.go	/^type MyAttr struct {$/;"	t
MyBuffer	./reflect/set_test.go	/^type MyBuffer bytes.Buffer$/;"	t
MyByte	./reflect/all_test.go	/^type MyByte byte$/;"	t
MyBytes	./encoding/xml/marshal_test.go	/^type MyBytes []byte$/;"	t
MyBytes	./reflect/all_test.go	/^type MyBytes []byte$/;"	t
MyCharData	./encoding/xml/read_test.go	/^type MyCharData struct {$/;"	t
MyError	./errors/example_test.go	/^type MyError struct {$/;"	t
MyError	./text/template/exec_test.go	/^func (t *T) MyError(error bool) (bool, error) {$/;"	f
MyFunc	./reflect/all_test.go	/^type MyFunc func()$/;"	t
MyFunction	./cmd/cgo/doc.go	/^	func MyFunction(arg1, arg2 int, arg3 string) int64 {...}$/;"	f
MyFunction2	./cmd/cgo/doc.go	/^	func MyFunction2(arg1, arg2 int, arg3 string) (int64, *C.char) {...}$/;"	f
MyInt	./cmd/api/testdata/src/pkg/p1/p1.go	/^type MyInt int$/;"	t
MyInt	./encoding/xml/marshal_test.go	/^type MyInt int$/;"	t
MyMarshalerAttrTest	./encoding/xml/marshal_test.go	/^type MyMarshalerAttrTest struct {$/;"	t
MyMarshalerTest	./encoding/xml/marshal_test.go	/^type MyMarshalerTest struct {$/;"	t
MyNode	./runtime/lfstack_test.go	/^type MyNode struct {$/;"	t
MyRunes	./reflect/all_test.go	/^type MyRunes []int32$/;"	t
MyString	./reflect/all_test.go	/^type MyString string$/;"	t
MyStruct	./cmd/vet/testdata/composite.go	/^type MyStruct struct {$/;"	t
MyStruct	./encoding/json/encode_test.go	/^type MyStruct struct {$/;"	t
MyStruct	./encoding/xml/read_test.go	/^type MyStruct struct {$/;"	t
MyStruct	./testing/quick/quick_test.go	/^\/\/ values of type MyStruct have x = 42.$/;"	t
N	./go/doc/testdata/e.go	/^func (*U3) N() {}$/;"	f
N	./runtime/memclr_arm.s	/^#define N	R12$/;"	d
N	./runtime/memmove_arm.s	/^#define N	R12$/;"	d
N1	./encoding/gob/type_test.go	/^type N1 struct{}$/;"	t
N2	./encoding/gob/type_test.go	/^type N2 struct{}$/;"	t
NACL_SYSCALL	./runtime/sys_nacl_386.s	/^#define NACL_SYSCALL(code) \\$/;"	d
NACL_SYSCALL	./runtime/sys_nacl_amd64p32.s	/^#define NACL_SYSCALL(code) \\$/;"	d
NACL_SYSCALL	./runtime/sys_nacl_arm.s	/^#define NACL_SYSCALL(code) \\$/;"	d
NACL_SYSCALL	./syscall/asm_nacl_386.s	/^#define NACL_SYSCALL(code) \\$/;"	d
NACL_SYSCALL	./syscall/asm_nacl_amd64p32.s	/^#define NACL_SYSCALL(code) \\$/;"	d
NACL_SYSCALL	./syscall/asm_nacl_arm.s	/^#define NACL_SYSCALL(code) \\$/;"	d
NACL_SYSJMP	./syscall/asm_nacl_386.s	/^#define NACL_SYSJMP(code) \\$/;"	d
NACL_SYSJMP	./syscall/asm_nacl_amd64p32.s	/^#define NACL_SYSJMP(code) \\$/;"	d
NACL_SYSJMP	./syscall/asm_nacl_arm.s	/^#define NACL_SYSJMP(code) \\$/;"	d
NArg	./flag/flag.go	/^func (f *FlagSet) NArg() int { return len(f.args) }$/;"	f
NArg	./flag/flag.go	/^func NArg() int { return len(CommandLine.args) }$/;"	f
NEEDCTXT	./runtime/textflag.h	/^#define NEEDCTXT /;"	d
NEGL	./math/big/arith_386.s	/^	NEGL DX$/;"	d
NFlag	./flag/flag.go	/^func (f *FlagSet) NFlag() int { return len(f.actual) }$/;"	f
NFlag	./flag/flag.go	/^func NFlag() int { return len(CommandLine.actual) }$/;"	f
NOMATCH	./regexp/testdata/testregex.c	/^	regmatch_t	NOMATCH;$/;"	m	struct:__anon2	file:
NOPROF	./runtime/textflag.h	/^#define NOPROF	/;"	d
NOPTR	./runtime/textflag.h	/^#define NOPTR	/;"	d
NOSPLIT	./runtime/textflag.h	/^#define NOSPLIT	/;"	d
NOTEST	./regexp/testdata/testregex.c	/^#define NOTEST	/;"	d	file:
NO_LOCAL_POINTERS	./runtime/funcdata.h	/^#define NO_LOCAL_POINTERS	/;"	d
NRGBA	./image/color/color.go	/^type NRGBA struct {$/;"	t
NRGBA	./image/image.go	/^type NRGBA struct {$/;"	t
NRGBA64	./image/color/color.go	/^type NRGBA64 struct {$/;"	t
NRGBA64	./image/image.go	/^type NRGBA64 struct {$/;"	t
NRGBA64At	./image/image.go	/^func (p *NRGBA64) NRGBA64At(x, y int) color.NRGBA64 {$/;"	f
NRGBAAt	./image/image.go	/^func (p *NRGBA) NRGBAAt(x, y int) color.NRGBA {$/;"	f
NS	./net/dnsclient.go	/^type NS struct {$/;"	t
NType	./debug/elf/elf.go	/^type NType int$/;"	t
N_EXT	./cmd/link/internal/ld/macho.go	/^			Adduint8(Ctxt, symtab, 0x01)                \/\/ type N_EXT, external symbol$/;"	t
NaN	./math/bits.go	/^func NaN() float64 { return Float64frombits(uvnan) }$/;"	f
NaN	./math/cmplx/isnan.go	/^func NaN() complex128 {$/;"	f
NaN	./math/dim_amd64.s	/^#define NaN    0x7FF8000000000001$/;"	d
NaN	./math/hypot_amd64.s	/^#define NaN 0x7FF8000000000001$/;"	d
NaN	./math/log_amd64.s	/^#define NaN    0x7FF8000000000001$/;"	d
NaN	./math/sincos_amd64.s	/^#define NaN    0x7FF8000000000001$/;"	d
Nacl	./cmd/compile/internal/gc/go.go	/^var Nacl bool$/;"	v
Naddr	./cmd/compile/internal/gc/gsubr.go	/^func Naddr(a *obj.Addr, n *Node) {$/;"	f
Name	./archive/tar/common.go	/^func (fi headerFileInfo) Name() string {$/;"	f
Name	./archive/tar/tar_test.go	/^func (symlink) Name() string       { return "some-symlink" }$/;"	f
Name	./archive/zip/struct.go	/^func (fi headerFileInfo) Name() string { return path.Base(fi.fh.Name) }$/;"	f
Name	./cmd/cgo/main.go	/^type Name struct {$/;"	t
Name	./cmd/compile/internal/gc/syntax.go	/^type Name struct {$/;"	t
Name	./cmd/go/main.go	/^func (c *Command) Name() string {$/;"	f
Name	./cmd/pack/pack_test.go	/^func (f *FakeFile) Name() string {$/;"	f
Name	./cmd/pprof/pprof.go	/^func (f *file) Name() string {$/;"	f
Name	./cmd/vet/print.go	/^	var Name string$/;"	v
Name	./crypto/x509/pkix/pkix.go	/^type Name struct {$/;"	t
Name	./encoding/xml/xml.go	/^type Name struct {$/;"	t
Name	./go/token/position.go	/^func (f *File) Name() string {$/;"	f
Name	./go/types/object.go	/^func (obj *object) Name() string        { return obj.name }$/;"	f
Name	./go/types/package.go	/^func (pkg *Package) Name() string { return pkg.name }$/;"	f
Name	./go/types/type.go	/^func (b *Basic) Name() string { return b.name }$/;"	f
Name	./html/template/template.go	/^func (t *Template) Name() string {$/;"	f
Name	./net/http/fs_test.go	/^func (f *fakeFileInfo) Name() string       { return f.basename }$/;"	f
Name	./os/file.go	/^func (f *File) Name() string { return f.name }$/;"	f
Name	./os/types.go	/^func (fs *fileStat) Name() string { return fs.name }$/;"	f
Name	./reflect/type.go	/^func (t *rtype) Name() string {$/;"	f
Name	./reflect/type.go	/^func (t *uncommonType) Name() string {$/;"	f
Name	./runtime/pprof/pprof.go	/^func (p *Profile) Name() string {$/;"	f
Name	./runtime/symtab.go	/^func (f *Func) Name() string {$/;"	f
Name	./text/template/template.go	/^func (t *Template) Name() string {$/;"	f
NameArg	./cmd/trace/trace.go	/^type NameArg struct {$/;"	t
NameCasing	./encoding/xml/marshal_test.go	/^type NameCasing struct {$/;"	t
NameInField	./encoding/xml/marshal_test.go	/^type NameInField struct {$/;"	t
NamePrecedence	./encoding/xml/marshal_test.go	/^type NamePrecedence struct {$/;"	t
Named	./go/types/type.go	/^type Named struct {$/;"	t
NamedPoint	./runtime/race/testdata/mop_test.go	/^type NamedPoint struct {$/;"	t
NamedType	./encoding/xml/marshal_test.go	/^type NamedType string$/;"	t
Namer	./cmd/api/testdata/src/pkg/p1/p1.go	/^type Namer interface {$/;"	t
Names	./go/types/scope.go	/^func (s *Scope) Names() []string {$/;"	f
Nano	./syscall/syscall.go	/^func (ts *Timespec) Nano() int64 {$/;"	f
Nano	./syscall/syscall.go	/^func (tv *Timeval) Nano() int64 {$/;"	f
Nanosecond	./time/time.go	/^func (t Time) Nanosecond() int {$/;"	f
Nanoseconds	./syscall/ztypes_windows.go	/^func (ft *Filetime) Nanoseconds() int64 {$/;"	f
Nanoseconds	./syscall/ztypes_windows.go	/^func (tv *Timeval) Nanoseconds() int64 {$/;"	f
Nanoseconds	./time/time.go	/^func (d Duration) Nanoseconds() int64 { return int64(d) }$/;"	f
Nanosleep	./syscall/zsyscall_dragonfly_amd64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_freebsd_386.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_freebsd_amd64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_freebsd_arm.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_linux_386.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_linux_amd64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_linux_arm.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_linux_arm64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_linux_ppc64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_linux_ppc64le.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_netbsd_386.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_netbsd_amd64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_netbsd_arm.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_openbsd_386.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_openbsd_amd64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_openbsd_arm.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nanosleep	./syscall/zsyscall_solaris_amd64.go	/^func Nanosleep(time *Timespec, leftover *Timespec) (err error) {$/;"	f
Nconv	./cmd/compile/internal/gc/fmt.go	/^func Nconv(n *Node, flag int) string {$/;"	f
NeedNL	./cmd/go/list.go	/^func (t *TrackingWriter) NeedNL() bool {$/;"	f
NeedsPtrType	./net/rpc/server_test.go	/^func (t *NeedsPtrType) NeedsPtrType(args *Args, reply *Reply) error {$/;"	f
NeedsPtrType	./net/rpc/server_test.go	/^type NeedsPtrType int$/;"	t
Neg	./cmd/compile/internal/big/float.go	/^func (z *Float) Neg(x *Float) *Float {$/;"	f
Neg	./cmd/compile/internal/big/int.go	/^func (z *Int) Neg(x *Int) *Int {$/;"	f
Neg	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Neg(x *Rat) *Rat {$/;"	f
Neg	./math/big/float.go	/^func (z *Float) Neg(x *Float) *Float {$/;"	f
Neg	./math/big/int.go	/^func (z *Int) Neg(x *Int) *Int {$/;"	f
Neg	./math/big/rat.go	/^func (z *Rat) Neg(x *Rat) *Rat {$/;"	f
NegInf	./math/dim_amd64.s	/^#define NegInf 0xFFF0000000000000$/;"	d
NegInf	./math/exp_amd64.s	/^#define NegInf 0xFFF0000000000000$/;"	d
NegInf	./math/log_amd64.s	/^#define NegInf 0xFFF0000000000000$/;"	d
Nelfsym	./cmd/link/internal/ld/elf.go	/^var Nelfsym int = 1$/;"	v
NestedAndChardata	./encoding/xml/marshal_test.go	/^type NestedAndChardata struct {$/;"	t
NestedAndComment	./encoding/xml/marshal_test.go	/^type NestedAndComment struct {$/;"	t
NestedItems	./encoding/xml/marshal_test.go	/^type NestedItems struct {$/;"	t
NestedOrder	./encoding/xml/marshal_test.go	/^type NestedOrder struct {$/;"	t
NetApiBufferFree	./syscall/zsyscall_windows.go	/^func NetApiBufferFree(buf *byte) (neterr error) {$/;"	f
NetGetJoinInformation	./syscall/zsyscall_windows.go	/^func NetGetJoinInformation(server *uint16, name **uint16, bufType *uint32) (neterr error) {$/;"	f
NetUserGetInfo	./syscall/zsyscall_windows.go	/^func NetUserGetInfo(serverName *uint16, userName *uint16, level uint32, buf **byte) (neterr error) {$/;"	f
NetlinkMessage	./syscall/netlink_linux.go	/^type NetlinkMessage struct {$/;"	t
NetlinkRIB	./syscall/netlink_linux.go	/^func NetlinkRIB(proto, family int) ([]byte, error) {$/;"	f
NetlinkRouteAttr	./syscall/netlink_linux.go	/^type NetlinkRouteAttr struct {$/;"	t
NetlinkRouteRequest	./syscall/netlink_linux.go	/^type NetlinkRouteRequest struct {$/;"	t
Network	./net/file.go	/^func (fileAddr) Network() string  { return "file+net" }$/;"	f
Network	./net/http/serve_test.go	/^func (a dummyAddr) Network() string {$/;"	f
Network	./net/ip.go	/^func (n *IPNet) Network() string { return "ip+net" }$/;"	f
Network	./net/iprawsock.go	/^func (a *IPAddr) Network() string { return "ip" }$/;"	f
Network	./net/pipe.go	/^func (pipeAddr) Network() string {$/;"	f
Network	./net/rpc/jsonrpc/all_test.go	/^func (pipeAddr) Network() string {$/;"	f
Network	./net/tcpsock.go	/^func (a *TCPAddr) Network() string { return "tcp" }$/;"	f
Network	./net/udpsock.go	/^func (a *UDPAddr) Network() string { return "udp" }$/;"	f
Network	./net/unixsock.go	/^func (a *UnixAddr) Network() string {$/;"	f
New	./cmd/pprof/internal/report/report.go	/^func New(prof *profile.Profile, options Options, value func(s *profile.Sample) int64, unit string) *Report {$/;"	f
New	./cmd/pprof/internal/tempfile/tempfile.go	/^func New(dir, prefix, suffix string) (*os.File, error) {$/;"	f
New	./container/list/list.go	/^func New() *List { return new(List).Init() }$/;"	f
New	./container/ring/ring.go	/^func New(n int) *Ring {$/;"	f
New	./crypto/crypto.go	/^func (h Hash) New() hash.Hash {$/;"	f
New	./crypto/hmac/hmac.go	/^func New(h func() hash.Hash, key []byte) hash.Hash {$/;"	f
New	./crypto/md5/md5.go	/^func New() hash.Hash {$/;"	f
New	./crypto/sha1/sha1.go	/^func New() hash.Hash {$/;"	f
New	./crypto/sha256/sha256.go	/^func New() hash.Hash {$/;"	f
New	./crypto/sha512/sha512.go	/^func New() hash.Hash {$/;"	f
New	./debug/dwarf/open.go	/^func New(abbrev, aranges, frame, info, line, pubnames, ranges, str []byte) (*Data, error) {$/;"	f
New	./errors/errors.go	/^func New(text string) error {$/;"	f
New	./go/doc/doc.go	/^func New(pkg *ast.Package, importPath string, mode Mode) *Package {$/;"	f
New	./hash/adler32/adler32.go	/^func New() hash.Hash32 {$/;"	f
New	./hash/crc32/crc32.go	/^func New(tab *Table) hash.Hash32 { return &digest{0, tab} }$/;"	f
New	./hash/crc64/crc64.go	/^func New(tab *Table) hash.Hash64 { return &digest{0, tab} }$/;"	f
New	./html/template/template.go	/^func (t *Template) New(name string) *Template {$/;"	f
New	./html/template/template.go	/^func New(name string) *Template {$/;"	f
New	./index/suffixarray/suffixarray.go	/^func New(data []byte) *Index {$/;"	f
New	./log/log.go	/^func New(out io.Writer, prefix string, flag int) *Logger {$/;"	f
New	./log/syslog/syslog.go	/^func New(priority Priority, tag string) (w *Writer, err error) {$/;"	f
New	./math/rand/rand.go	/^func New(src Source) *Rand { return &Rand{src} }$/;"	f
New	./net/http/cookiejar/jar.go	/^func New(o *Options) (*Jar, error) {$/;"	f
New	./reflect/value.go	/^func New(typ Type) Value {$/;"	f
New	./text/template/parse/parse.go	/^func New(name string, funcs ...map[string]interface{}) *Tree {$/;"	f
New	./text/template/template.go	/^func (t *Template) New(name string) *Template {$/;"	f
New	./text/template/template.go	/^func New(name string) *Template {$/;"	f
New224	./crypto/sha256/sha256.go	/^func New224() hash.Hash {$/;"	f
New32	./hash/fnv/fnv.go	/^func New32() hash.Hash32 {$/;"	f
New32a	./hash/fnv/fnv.go	/^func New32a() hash.Hash32 {$/;"	f
New384	./crypto/sha512/sha512.go	/^func New384() hash.Hash {$/;"	f
New512_224	./crypto/sha512/sha512.go	/^func New512_224() hash.Hash {$/;"	f
New512_256	./crypto/sha512/sha512.go	/^func New512_256() hash.Hash {$/;"	f
New64	./hash/fnv/fnv.go	/^func New64() hash.Hash64 {$/;"	f
New64a	./hash/fnv/fnv.go	/^func New64a() hash.Hash64 {$/;"	f
NewAlpha	./image/image.go	/^func NewAlpha(r Rectangle) *Alpha {$/;"	f
NewAlpha16	./image/image.go	/^func NewAlpha16(r Rectangle) *Alpha16 {$/;"	f
NewArray	./go/types/type.go	/^func NewArray(elem Type, len int64) *Array { return &Array{len, elem} }$/;"	f
NewAt	./reflect/value.go	/^func NewAt(typ Type, p unsafe.Pointer) Value {$/;"	f
NewBuffer	./bytes/buffer.go	/^func NewBuffer(buf []byte) *Buffer { return &Buffer{buf: buf} }$/;"	f
NewBufferString	./bytes/buffer.go	/^func NewBufferString(s string) *Buffer {$/;"	f
NewCBCDecrypter	./crypto/cipher/cbc.go	/^func NewCBCDecrypter(b Block, iv []byte) BlockMode {$/;"	f
NewCBCEncrypter	./crypto/cipher/cbc.go	/^func NewCBCEncrypter(b Block, iv []byte) BlockMode {$/;"	f
NewCFBDecrypter	./crypto/cipher/cfb.go	/^func NewCFBDecrypter(block Block, iv []byte) Stream {$/;"	f
NewCFBEncrypter	./crypto/cipher/cfb.go	/^func NewCFBEncrypter(block Block, iv []byte) Stream {$/;"	f
NewCMYK	./image/image.go	/^func NewCMYK(r Rectangle) *CMYK {$/;"	f
NewCTR	./crypto/cipher/ctr.go	/^func NewCTR(block Block, iv []byte) Stream {$/;"	f
NewCallback	./syscall/syscall_windows.go	/^func NewCallback(fn interface{}) uintptr {$/;"	f
NewCallbackCDecl	./syscall/syscall_windows.go	/^func NewCallbackCDecl(fn interface{}) uintptr {$/;"	f
NewCertPool	./crypto/x509/cert_pool.go	/^func NewCertPool() *CertPool {$/;"	f
NewChan	./go/types/type.go	/^func NewChan(dir ChanDir, elem Type) *Chan {$/;"	f
NewChecker	./go/types/check.go	/^func NewChecker(conf *Config, fset *token.FileSet, pkg *Package, info *Info) *Checker {$/;"	f
NewChunkedReader	./net/http/httputil/httputil.go	/^func NewChunkedReader(r io.Reader) io.Reader {$/;"	f
NewChunkedReader	./net/http/internal/chunked.go	/^func NewChunkedReader(r io.Reader) io.Reader {$/;"	f
NewChunkedWriter	./net/http/httputil/httputil.go	/^func NewChunkedWriter(w io.Writer) io.WriteCloser {$/;"	f
NewChunkedWriter	./net/http/internal/chunked.go	/^func NewChunkedWriter(w io.Writer) io.WriteCloser {$/;"	f
NewCipher	./crypto/aes/cipher.go	/^func NewCipher(key []byte) (cipher.Block, error) {$/;"	f
NewCipher	./crypto/des/cipher.go	/^func NewCipher(key []byte) (cipher.Block, error) {$/;"	f
NewCipher	./crypto/rc4/rc4.go	/^func NewCipher(key []byte) (*Cipher, error) {$/;"	f
NewClient	./net/rpc/client.go	/^func NewClient(conn io.ReadWriteCloser) *Client {$/;"	f
NewClient	./net/rpc/jsonrpc/client.go	/^func NewClient(conn io.ReadWriteCloser) *rpc.Client {$/;"	f
NewClient	./net/smtp/smtp.go	/^func NewClient(conn net.Conn, host string) (*Client, error) {$/;"	f
NewClientCodec	./net/rpc/jsonrpc/client.go	/^func NewClientCodec(conn io.ReadWriteCloser) rpc.ClientCodec {$/;"	f
NewClientConn	./net/http/httputil/persist.go	/^func NewClientConn(c net.Conn, r *bufio.Reader) *ClientConn {$/;"	f
NewClientWithCodec	./net/rpc/client.go	/^func NewClientWithCodec(codec ClientCodec) *Client {$/;"	f
NewCommentMap	./go/ast/commentmap.go	/^func NewCommentMap(fset *token.FileSet, node Node, comments []*CommentGroup) CommentMap {$/;"	f
NewCompleter	./cmd/pprof/internal/commands/commands.go	/^func NewCompleter(cs Commands) Completer {$/;"	f
NewCond	./sync/cond.go	/^func NewCond(l Locker) *Cond {$/;"	f
NewConn	./net/textproto/textproto.go	/^func NewConn(conn io.ReadWriteCloser) *Conn {$/;"	f
NewConst	./go/types/object.go	/^func NewConst(pos token.Pos, pkg *Package, name string, typ Type, val constant.Value) *Const {$/;"	f
NewDecimal	./strconv/internal_test.go	/^func NewDecimal(i uint64) *decimal {$/;"	f
NewDecoder	./encoding/ascii85/ascii85.go	/^func NewDecoder(r io.Reader) io.Reader { return &decoder{r: r} }$/;"	f
NewDecoder	./encoding/base32/base32.go	/^func NewDecoder(enc *Encoding, r io.Reader) io.Reader {$/;"	f
NewDecoder	./encoding/base64/base64.go	/^func NewDecoder(enc *Encoding, r io.Reader) io.Reader {$/;"	f
NewDecoder	./encoding/gob/decoder.go	/^func NewDecoder(r io.Reader) *Decoder {$/;"	f
NewDecoder	./encoding/json/stream.go	/^func NewDecoder(r io.Reader) *Decoder {$/;"	f
NewDecoder	./encoding/xml/xml.go	/^func NewDecoder(r io.Reader) *Decoder {$/;"	f
NewDefault	./cmd/pprof/internal/report/report.go	/^func NewDefault(prof *profile.Profile, options Options) *Report {$/;"	f
NewEncoder	./encoding/ascii85/ascii85.go	/^func NewEncoder(w io.Writer) io.WriteCloser { return &encoder{w: w} }$/;"	f
NewEncoder	./encoding/base32/base32.go	/^func NewEncoder(enc *Encoding, w io.Writer) io.WriteCloser {$/;"	f
NewEncoder	./encoding/base64/base64.go	/^func NewEncoder(enc *Encoding, w io.Writer) io.WriteCloser {$/;"	f
NewEncoder	./encoding/gob/encoder.go	/^func NewEncoder(w io.Writer) *Encoder {$/;"	f
NewEncoder	./encoding/json/stream.go	/^func NewEncoder(w io.Writer) *Encoder {$/;"	f
NewEncoder	./encoding/xml/marshal.go	/^func NewEncoder(w io.Writer) *Encoder {$/;"	f
NewEncoding	./encoding/base32/base32.go	/^func NewEncoding(encoder string) *Encoding {$/;"	f
NewEncoding	./encoding/base64/base64.go	/^func NewEncoding(encoder string) *Encoding {$/;"	f
NewError	./cmd/api/testdata/src/pkg/p2/p2.go	/^func NewError(s string) error {}$/;"	f
NewError	./syscall/syscall_plan9.go	/^func NewError(s string) error { return ErrorString(s) }$/;"	f
NewFatFile	./debug/macho/fat.go	/^func NewFatFile(r io.ReaderAt) (*FatFile, error) {$/;"	f
NewField	./go/types/object.go	/^func NewField(pos token.Pos, pkg *Package, name string, typ Type, anonymous bool) *Var {$/;"	f
NewFile	./debug/elf/file.go	/^func NewFile(r io.ReaderAt) (*File, error) {$/;"	f
NewFile	./debug/macho/file.go	/^func NewFile(r io.ReaderAt) (*File, error) {$/;"	f
NewFile	./debug/pe/file.go	/^func NewFile(r io.ReaderAt) (*File, error) {$/;"	f
NewFile	./debug/plan9obj/file.go	/^func NewFile(r io.ReaderAt) (*File, error) {$/;"	f
NewFile	./os/file_plan9.go	/^func NewFile(fd uintptr, name string) *File {$/;"	f
NewFile	./os/file_unix.go	/^func NewFile(fd uintptr, name string) *File {$/;"	f
NewFile	./os/file_windows.go	/^func NewFile(fd uintptr, name string) *File {$/;"	f
NewFileSet	./go/token/position.go	/^func NewFileSet() *FileSet {$/;"	f
NewFileTransport	./net/http/filetransport.go	/^func NewFileTransport(fs FileSystem) RoundTripper {$/;"	f
NewFlagSet	./flag/flag.go	/^func NewFlagSet(name string, errorHandling ErrorHandling) *FlagSet {$/;"	f
NewFloat	./cmd/compile/internal/big/float.go	/^func NewFloat(x float64) *Float {$/;"	f
NewFloat	./expvar/expvar.go	/^func NewFloat(name string) *Float {$/;"	f
NewFloat	./math/big/float.go	/^func NewFloat(x float64) *Float {$/;"	f
NewFunc	./go/types/object.go	/^func NewFunc(pos token.Pos, pkg *Package, name string, sig *Signature) *Func {$/;"	f
NewGCM	./crypto/cipher/gcm.go	/^func NewGCM(cipher Block) (AEAD, error) {$/;"	f
NewGCMWithNonceSize	./crypto/cipher/gcm.go	/^func NewGCMWithNonceSize(cipher Block, size int) (AEAD, error) {$/;"	f
NewGray	./image/image.go	/^func NewGray(r Rectangle) *Gray {$/;"	f
NewGray16	./image/image.go	/^func NewGray16(r Rectangle) *Gray16 {$/;"	f
NewIEEE	./hash/crc32/crc32.go	/^func NewIEEE() hash.Hash32 { return New(IEEETable) }$/;"	f
NewIdent	./go/ast/ast.go	/^func NewIdent(name string) *Ident { return &Ident{token.NoPos, name, nil} }$/;"	f
NewIdentifier	./text/template/parse/node.go	/^func NewIdentifier(ident string) *IdentifierNode {$/;"	f
NewImage	./runtime/race/testdata/regression_test.go	/^func NewImage() Image {$/;"	f
NewInput	./cmd/asm/internal/lex/input.go	/^func NewInput(name string) *Input {$/;"	f
NewInt	./cmd/compile/internal/big/int.go	/^func NewInt(x int64) *Int {$/;"	f
NewInt	./expvar/expvar.go	/^func NewInt(name string) *Int {$/;"	f
NewInt	./math/big/int.go	/^func NewInt(x int64) *Int {$/;"	f
NewInterface	./go/types/type.go	/^func NewInterface(methods []*Func, embeddeds []*Named) *Interface {$/;"	f
NewLRUClientSessionCache	./crypto/tls/common.go	/^func NewLRUClientSessionCache(capacity int) ClientSessionCache {$/;"	f
NewLabel	./go/types/object.go	/^func NewLabel(pos token.Pos, pkg *Package, name string) *Label {$/;"	f
NewLazyDLL	./syscall/dll_windows.go	/^func NewLazyDLL(name string) *LazyDLL {$/;"	f
NewLexer	./cmd/asm/internal/lex/lex.go	/^func NewLexer(name string, ctxt *obj.Link) TokenReader {$/;"	f
NewLineTable	./debug/gosym/pclntab.go	/^func NewLineTable(data []byte, text uint64) *LineTable {$/;"	f
NewListener	./crypto/tls/tls.go	/^func NewListener(inner net.Listener, config *Config) net.Listener {$/;"	f
NewLog	./runtime/race/testdata/regression_test.go	/^func NewLog() (l LogImpl) {$/;"	f
NewLogger	./log/syslog/syslog.go	/^func NewLogger(p Priority, logFlag int) (*log.Logger, error) {$/;"	f
NewLoggingConn	./net/http/export_test.go	/^func NewLoggingConn(baseName string, c net.Conn) net.Conn {$/;"	f
NewMap	./expvar/expvar.go	/^func NewMap(name string) *Map {$/;"	f
NewMap	./go/types/type.go	/^func NewMap(key, elem Type) *Map {$/;"	f
NewMethodSet	./go/types/methodset.go	/^func NewMethodSet(T Type) *MethodSet {$/;"	f
NewNRGBA	./image/image.go	/^func NewNRGBA(r Rectangle) *NRGBA {$/;"	f
NewNRGBA64	./image/image.go	/^func NewNRGBA64(r Rectangle) *NRGBA64 {$/;"	f
NewNamed	./go/types/type.go	/^func NewNamed(obj *TypeName, underlying Type, methods []*Func) *Named {$/;"	f
NewOFB	./crypto/cipher/ofb.go	/^func NewOFB(b Block, iv []byte) Stream {$/;"	f
NewOSProc0	./runtime/export_linux_test.go	/^var NewOSProc0 = newosproc0$/;"	v
NewObj	./go/ast/scope.go	/^func NewObj(kind ObjKind, name string) *Object {$/;"	f
NewPackage	./go/ast/resolve.go	/^func NewPackage(fset *token.FileSet, files map[string]*File, importer Importer, universe *Scope) (*Package, error) {$/;"	f
NewPackage	./go/types/package.go	/^func NewPackage(path, name string) *Package {$/;"	f
NewPaletted	./image/image.go	/^func NewPaletted(r Rectangle, p color.Palette) *Paletted {$/;"	f
NewParFor	./runtime/export_test.go	/^func NewParFor(nthrmax uint32) *ParFor {$/;"	f
NewParam	./go/types/object.go	/^func NewParam(pos token.Pos, pkg *Package, name string, typ Type) *Var {$/;"	f
NewParser	./cmd/asm/internal/asm/parse.go	/^func NewParser(ctxt *obj.Link, ar *arch.Arch, lexer lex.TokenReader) *Parser {$/;"	f
NewPkgName	./go/types/object.go	/^func NewPkgName(pos token.Pos, pkg *Package, name string, imported *Package) *PkgName {$/;"	f
NewPointer	./go/types/type.go	/^func NewPointer(elem Type) *Pointer { return &Pointer{base: elem} }$/;"	f
NewProc	./syscall/dll_windows.go	/^func (d *LazyDLL) NewProc(name string) *LazyProc {$/;"	f
NewProfile	./runtime/pprof/pprof.go	/^func NewProfile(name string) *Profile {$/;"	f
NewProg	./cmd/internal/obj/util.go	/^func (ctxt *Link) NewProg() *Prog {$/;"	f
NewProxyClientConn	./net/http/httputil/persist.go	/^func NewProxyClientConn(c net.Conn, r *bufio.Reader) *ClientConn {$/;"	f
NewRGBA	./image/image.go	/^func NewRGBA(r Rectangle) *RGBA {$/;"	f
NewRGBA64	./image/image.go	/^func NewRGBA64(r Rectangle) *RGBA64 {$/;"	f
NewRPC	./syscall/srpc_nacl.go	/^func (c *srpcClient) NewRPC(done chan *srpc) *srpc {$/;"	f
NewRat	./cmd/compile/internal/big/rat.go	/^func NewRat(a, b int64) *Rat {$/;"	f
NewRat	./math/big/rat.go	/^func NewRat(a, b int64) *Rat {$/;"	f
NewReadLogger	./testing/iotest/logger.go	/^func NewReadLogger(prefix string, r io.Reader) io.Reader {$/;"	f
NewReadWriter	./bufio/bufio.go	/^func NewReadWriter(r *Reader, w *Writer) *ReadWriter {$/;"	f
NewReader	./archive/tar/reader.go	/^func NewReader(r io.Reader) *Reader { return &Reader{r: r} }$/;"	f
NewReader	./archive/zip/reader.go	/^func NewReader(r io.ReaderAt, size int64) (*Reader, error) {$/;"	f
NewReader	./bufio/bufio.go	/^func NewReader(rd io.Reader) *Reader {$/;"	f
NewReader	./bytes/reader.go	/^func NewReader(b []byte) *Reader { return &Reader{b, 0, -1} }$/;"	f
NewReader	./compress/bzip2/bzip2.go	/^func NewReader(r io.Reader) io.Reader {$/;"	f
NewReader	./compress/flate/inflate.go	/^func NewReader(r io.Reader) io.ReadCloser {$/;"	f
NewReader	./compress/gzip/gunzip.go	/^func NewReader(r io.Reader) (*Reader, error) {$/;"	f
NewReader	./compress/lzw/reader.go	/^func NewReader(r io.Reader, order Order, litWidth int) io.ReadCloser {$/;"	f
NewReader	./compress/zlib/reader.go	/^func NewReader(r io.Reader) (io.ReadCloser, error) {$/;"	f
NewReader	./encoding/csv/reader.go	/^func NewReader(r io.Reader) *Reader {$/;"	f
NewReader	./mime/multipart/multipart.go	/^func NewReader(r io.Reader, boundary string) *Reader {$/;"	f
NewReader	./mime/quotedprintable/reader.go	/^func NewReader(r io.Reader) *Reader {$/;"	f
NewReader	./net/textproto/reader.go	/^func NewReader(r *bufio.Reader) *Reader {$/;"	f
NewReader	./strings/reader.go	/^func NewReader(s string) *Reader { return &Reader{s, 0, -1} }$/;"	f
NewReaderDict	./compress/flate/inflate.go	/^func NewReaderDict(r io.Reader, dict []byte) io.ReadCloser {$/;"	f
NewReaderDict	./compress/zlib/reader.go	/^func NewReaderDict(r io.Reader, dict []byte) (io.ReadCloser, error) {$/;"	f
NewReaderSize	./bufio/bufio.go	/^func NewReaderSize(rd io.Reader, size int) *Reader {$/;"	f
NewRecorder	./net/http/httptest/recorder.go	/^func NewRecorder() *ResponseRecorder {$/;"	f
NewReplacer	./strings/replace.go	/^func NewReplacer(oldnew ...string) *Replacer {$/;"	f
NewRequest	./net/http/request.go	/^func NewRequest(method, urlStr string, body io.Reader) (*Request, error) {$/;"	f
NewScanner	./bufio/scan.go	/^func NewScanner(r io.Reader) *Scanner {$/;"	f
NewScope	./go/ast/scope.go	/^func NewScope(outer *Scope) *Scope {$/;"	f
NewScope	./go/types/scope.go	/^func NewScope(parent *Scope, pos, end token.Pos, comment string) *Scope {$/;"	f
NewSectionReader	./io/io.go	/^func NewSectionReader(r ReaderAt, off int64, n int64) *SectionReader {$/;"	f
NewServeMux	./net/http/server.go	/^func NewServeMux() *ServeMux { return &ServeMux{m: make(map[string]muxEntry)} }$/;"	f
NewServer	./net/http/httptest/server.go	/^func NewServer(handler http.Handler) *Server {$/;"	f
NewServer	./net/rpc/server.go	/^func NewServer() *Server {$/;"	f
NewServerCodec	./net/rpc/jsonrpc/server.go	/^func NewServerCodec(conn io.ReadWriteCloser) rpc.ServerCodec {$/;"	f
NewServerConn	./net/http/httputil/persist.go	/^func NewServerConn(c net.Conn, r *bufio.Reader) *ServerConn {$/;"	f
NewSignature	./go/types/type.go	/^func NewSignature(recv *Var, params, results *Tuple, variadic bool) *Signature {$/;"	f
NewSingleHostReverseProxy	./net/http/httputil/reverseproxy.go	/^func NewSingleHostReverseProxy(target *url.URL) *ReverseProxy {$/;"	f
NewSlice	./cmd/asm/internal/lex/slice.go	/^func NewSlice(fileName string, line int, tokens []Token) *Slice {$/;"	f
NewSlice	./go/types/type.go	/^func NewSlice(elem Type) *Slice { return &Slice{elem} }$/;"	f
NewSource	./math/rand/rand.go	/^func NewSource(seed int64) Source {$/;"	f
NewString	./expvar/expvar.go	/^func NewString(name string) *String {$/;"	f
NewStruct	./go/types/type.go	/^func NewStruct(fields []*Var, tags []string) *Struct {$/;"	f
NewSyscallError	./os/error.go	/^func NewSyscallError(syscall string, err error) error {$/;"	f
NewTLSServer	./net/http/httptest/server.go	/^func NewTLSServer(handler http.Handler) *Server {$/;"	f
NewTable	./debug/gosym/symtab.go	/^func NewTable(symtab []byte, pcln *LineTable) (*Table, error) {$/;"	f
NewTestTimeoutHandler	./net/http/export_test.go	/^func NewTestTimeoutHandler(handler Handler, ch <-chan time.Time) Handler {$/;"	f
NewText	./encoding/xml/atom_test.go	/^func NewText(text string) Text {$/;"	f
NewTicker	./time/tick.go	/^func NewTicker(d Duration) *Ticker {$/;"	f
NewTimer	./time/sleep.go	/^func NewTimer(d Duration) *Timer {$/;"	f
NewTokenizer	./cmd/asm/internal/lex/tokenizer.go	/^func NewTokenizer(name string, r io.Reader, file *os.File) *Tokenizer {$/;"	f
NewTripleDESCipher	./crypto/des/cipher.go	/^func NewTripleDESCipher(key []byte) (cipher.Block, error) {$/;"	f
NewTuple	./go/types/type.go	/^func NewTuple(x ...*Var) *Tuple {$/;"	f
NewType0	./encoding/gob/encoder_test.go	/^type NewType0 struct {$/;"	t
NewTypeName	./go/types/object.go	/^func NewTypeName(pos token.Pos, pkg *Package, name string, typ Type) *TypeName {$/;"	f
NewUniform	./image/names.go	/^func NewUniform(c color.Color) *Uniform {$/;"	f
NewUnstartedServer	./net/http/httptest/server.go	/^func NewUnstartedServer(handler http.Handler) *Server {$/;"	f
NewVar	./go/types/object.go	/^func NewVar(pos token.Pos, pkg *Package, name string, typ Type) *Var {$/;"	f
NewWalker	./cmd/api/goapi.go	/^func NewWalker(context *build.Context, root string) *Walker {$/;"	f
NewWriteLogger	./testing/iotest/logger.go	/^func NewWriteLogger(prefix string, w io.Writer) io.Writer {$/;"	f
NewWriter	./archive/tar/writer.go	/^func NewWriter(w io.Writer) *Writer { return &Writer{w: w} }$/;"	f
NewWriter	./archive/zip/writer.go	/^func NewWriter(w io.Writer) *Writer {$/;"	f
NewWriter	./bufio/bufio.go	/^func NewWriter(w io.Writer) *Writer {$/;"	f
NewWriter	./compress/flate/deflate.go	/^func NewWriter(w io.Writer, level int) (*Writer, error) {$/;"	f
NewWriter	./compress/gzip/gzip.go	/^func NewWriter(w io.Writer) *Writer {$/;"	f
NewWriter	./compress/lzw/writer.go	/^func NewWriter(w io.Writer, order Order, litWidth int) io.WriteCloser {$/;"	f
NewWriter	./compress/zlib/writer.go	/^func NewWriter(w io.Writer) *Writer {$/;"	f
NewWriter	./encoding/csv/writer.go	/^func NewWriter(w io.Writer) *Writer {$/;"	f
NewWriter	./mime/multipart/writer.go	/^func NewWriter(w io.Writer) *Writer {$/;"	f
NewWriter	./mime/quotedprintable/writer.go	/^func NewWriter(w io.Writer) *Writer {$/;"	f
NewWriter	./net/textproto/writer.go	/^func NewWriter(w *bufio.Writer) *Writer {$/;"	f
NewWriter	./text/tabwriter/tabwriter.go	/^func NewWriter(output io.Writer, minwidth, tabwidth, padding int, padchar byte, flags uint) *Writer {$/;"	f
NewWriterDict	./compress/flate/deflate.go	/^func NewWriterDict(w io.Writer, level int, dict []byte) (*Writer, error) {$/;"	f
NewWriterLevel	./compress/gzip/gzip.go	/^func NewWriterLevel(w io.Writer, level int) (*Writer, error) {$/;"	f
NewWriterLevel	./compress/zlib/writer.go	/^func NewWriterLevel(w io.Writer, level int) (*Writer, error) {$/;"	f
NewWriterLevelDict	./compress/zlib/writer.go	/^func NewWriterLevelDict(w io.Writer, level int, dict []byte) (*Writer, error) {$/;"	f
NewWriterSize	./bufio/bufio.go	/^func NewWriterSize(w io.Writer, size int) *Writer {$/;"	f
NewYCbCr	./image/ycbcr.go	/^func NewYCbCr(r Rectangle, subsampleRatio YCbCrSubsampleRatio) *YCbCr {$/;"	f
NewZipf	./math/rand/zipf.go	/^func NewZipf(r *Rand, s float64, v float64, imax uint64) *Zipf {$/;"	f
Newproc	./cmd/compile/internal/gc/go.go	/^var Newproc *Node$/;"	v
Next	./archive/tar/reader.go	/^func (tr *Reader) Next() (*Header, error) {$/;"	f
Next	./bytes/buffer.go	/^func (b *Buffer) Next(n int) []byte {$/;"	f
Next	./cmd/asm/internal/lex/input.go	/^func (in *Input) Next() ScanToken {$/;"	f
Next	./cmd/asm/internal/lex/slice.go	/^func (s *Slice) Next() ScanToken {$/;"	f
Next	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) Next() ScanToken {$/;"	f
Next	./cmd/asm/internal/lex/tokenizer.go	/^func (t *Tokenizer) Next() ScanToken {$/;"	f
Next	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func (r *loadCmdReader) Next() (cmd loadCmd, err error) {$/;"	f
Next	./container/list/list.go	/^func (e *Element) Next() *Element {$/;"	f
Next	./container/ring/ring.go	/^func (r *Ring) Next() *Ring {$/;"	f
Next	./database/sql/fakedb_test.go	/^func (rc *rowsCursor) Next(dest []driver.Value) error {$/;"	f
Next	./database/sql/sql.go	/^func (rs *Rows) Next() bool {$/;"	f
Next	./debug/dwarf/entry.go	/^func (r *Reader) Next() (*Entry, error) {$/;"	f
Next	./debug/dwarf/line.go	/^func (r *LineReader) Next(entry *LineEntry) error {$/;"	f
Next	./debug/dwarf/typeunit.go	/^func (tur *typeUnitReader) Next() (*Entry, error) {$/;"	f
Next	./net/smtp/auth.go	/^func (a *cramMD5Auth) Next(fromServer []byte, more bool) ([]byte, error) {$/;"	f
Next	./net/smtp/auth.go	/^func (a *plainAuth) Next(fromServer []byte, more bool) ([]byte, error) {$/;"	f
Next	./net/textproto/pipeline.go	/^func (p *Pipeline) Next() uint {$/;"	f
Next	./reflect/all_test.go	/^func (x *exhaustive) Next() bool {$/;"	f
Next	./testing/benchmark.go	/^func (pb *PB) Next() bool {$/;"	f
Next	./text/scanner/scanner.go	/^func (s *Scanner) Next() rune {$/;"	f
NextPart	./mime/multipart/multipart.go	/^func (r *Reader) NextPart() (*Part, error) {$/;"	f
Nextafter	./math/nextafter.go	/^func Nextafter(x, y float64) (r float64) {$/;"	f
Nextafter32	./math/nextafter.go	/^func Nextafter32(x, y float32) (r float32) {$/;"	f
NiL	./regexp/testdata/testregex.c	/^#define NiL	/;"	d	file:
Nil	./go/types/object.go	/^type Nil struct {$/;"	t
Nil	./reflect/all_test.go	/^func Nil(a interface{}, t *testing.T) {$/;"	f
NilNode	./text/template/parse/node.go	/^type NilNode struct {$/;"	t
NilTest	./encoding/xml/marshal_test.go	/^type NilTest struct {$/;"	t
NilVal	./cmd/compile/internal/gc/go.go	/^type NilVal struct{}$/;"	t
NlAttr	./syscall/types_linux.go	/^type NlAttr C.struct_nlattr$/;"	t
NlAttr	./syscall/ztypes_linux_386.go	/^type NlAttr struct {$/;"	t
NlAttr	./syscall/ztypes_linux_amd64.go	/^type NlAttr struct {$/;"	t
NlAttr	./syscall/ztypes_linux_arm.go	/^type NlAttr struct {$/;"	t
NlAttr	./syscall/ztypes_linux_arm64.go	/^type NlAttr struct {$/;"	t
NlAttr	./syscall/ztypes_linux_ppc64.go	/^type NlAttr struct {$/;"	t
NlAttr	./syscall/ztypes_linux_ppc64le.go	/^type NlAttr struct {$/;"	t
NlMsgerr	./syscall/types_linux.go	/^type NlMsgerr C.struct_nlmsgerr$/;"	t
NlMsgerr	./syscall/ztypes_linux_386.go	/^type NlMsgerr struct {$/;"	t
NlMsgerr	./syscall/ztypes_linux_amd64.go	/^type NlMsgerr struct {$/;"	t
NlMsgerr	./syscall/ztypes_linux_arm.go	/^type NlMsgerr struct {$/;"	t
NlMsgerr	./syscall/ztypes_linux_arm64.go	/^type NlMsgerr struct {$/;"	t
NlMsgerr	./syscall/ztypes_linux_ppc64.go	/^type NlMsgerr struct {$/;"	t
NlMsgerr	./syscall/ztypes_linux_ppc64le.go	/^type NlMsgerr struct {$/;"	t
NlMsghdr	./syscall/types_linux.go	/^type NlMsghdr C.struct_nlmsghdr$/;"	t
NlMsghdr	./syscall/ztypes_linux_386.go	/^type NlMsghdr struct {$/;"	t
NlMsghdr	./syscall/ztypes_linux_amd64.go	/^type NlMsghdr struct {$/;"	t
NlMsghdr	./syscall/ztypes_linux_arm.go	/^type NlMsghdr struct {$/;"	t
NlMsghdr	./syscall/ztypes_linux_arm64.go	/^type NlMsghdr struct {$/;"	t
NlMsghdr	./syscall/ztypes_linux_ppc64.go	/^type NlMsghdr struct {$/;"	t
NlMsghdr	./syscall/ztypes_linux_ppc64le.go	/^type NlMsghdr struct {$/;"	t
Nlist32	./debug/macho/macho.go	/^type Nlist32 struct {$/;"	t
Nlist64	./debug/macho/macho.go	/^type Nlist64 struct {$/;"	t
NoInterfaceItem	./encoding/gob/codec_test.go	/^type NoInterfaceItem struct {$/;"	t
NoObjTool	./cmd/pprof/internal/plugin/plugin.go	/^func NoObjTool() ObjTool {$/;"	f
Nocache	./cmd/internal/obj/go.go	/^func Nocache(p *Prog) {$/;"	f
Noconv	./cmd/compile/internal/gc/subr.go	/^func Noconv(t1 *Type, t2 *Type) bool {$/;"	f
Nod	./cmd/compile/internal/gc/subr.go	/^func Nod(op int, nleft *Node, nright *Node) *Node {$/;"	f
Nodbool	./cmd/compile/internal/gc/subr.go	/^func Nodbool(b bool) *Node {$/;"	f
Nodconst	./cmd/compile/internal/gc/subr.go	/^func Nodconst(n *Node, t *Type, v int64) {$/;"	f
Node	./cmd/compile/internal/gc/syntax.go	/^type Node struct {$/;"	t
Node	./go/ast/ast.go	/^type Node interface {$/;"	t
Node	./go/format/format.go	/^func Node(dst io.Writer, fset *token.FileSet, node interface{}) error {$/;"	f
Node	./path/filepath/path_test.go	/^type Node struct {$/;"	t
Node	./text/template/parse/node.go	/^type Node interface {$/;"	t
Node1	./runtime/gc_test.go	/^type Node1 struct {$/;"	t
Node1024	./runtime/gc_test.go	/^type Node1024 struct {$/;"	t
Node124	./runtime/gc_test.go	/^type Node124 struct {$/;"	t
Node126	./runtime/gc_test.go	/^type Node126 struct {$/;"	t
Node128	./runtime/gc_test.go	/^type Node128 struct {$/;"	t
Node130	./runtime/gc_test.go	/^type Node130 struct {$/;"	t
Node64	./runtime/gc_test.go	/^type Node64 struct {$/;"	t
Node64Dead	./runtime/gc_test.go	/^type Node64Dead struct {$/;"	t
Node8	./runtime/gc_test.go	/^type Node8 struct {$/;"	t
NodeEscState	./cmd/compile/internal/gc/esc.go	/^type NodeEscState struct {$/;"	t
NodeField	./text/template/parse/parse.go	/^		\/\/ Compatibility with original API: If the term is of type NodeField$/;"	t
NodeList	./cmd/compile/internal/gc/syntax.go	/^type NodeList struct {$/;"	t
NodeType	./text/template/parse/node.go	/^type NodeType int$/;"	t
Nodindreg	./cmd/compile/internal/gc/gsubr.go	/^func Nodindreg(n *Node, t *Type, r int) {$/;"	f
Nodintconst	./cmd/compile/internal/gc/subr.go	/^func Nodintconst(v int64) *Node {$/;"	f
Nodreg	./cmd/compile/internal/gc/gsubr.go	/^func Nodreg(n *Node, t *Type, r int) {$/;"	f
NonComparableStruct	./reflect/all_test.go	/^type NonComparableStruct struct {$/;"	t
NonStruct	./encoding/gob/encoder_test.go	/^	type NonStruct string$/;"	t
NonceSize	./crypto/cipher/gcm.go	/^func (g *gcm) NonceSize() int {$/;"	f
NonceSize	./crypto/tls/cipher_suites.go	/^func (f *fixedNonceAEAD) NonceSize() int { return 8 }$/;"	f
NopCloser	./io/ioutil/ioutil.go	/^func NopCloser(r io.Reader) io.ReadCloser {$/;"	f
Nopout	./cmd/internal/obj/go.go	/^func Nopout(p *Prog) {$/;"	f
Noreturn	./cmd/compile/internal/gc/popt.go	/^func Noreturn(p *obj.Prog) bool {$/;"	f
NormFloat64	./math/rand/normal.go	/^func (r *Rand) NormFloat64() float64 {$/;"	f
NormFloat64	./math/rand/rand.go	/^func NormFloat64() float64 { return globalRand.NormFloat64() }$/;"	f
Normalize	./strconv/extfloat.go	/^func (f *extFloat) Normalize() (shift uint) {$/;"	f
Not	./cmd/compile/internal/big/int.go	/^func (z *Int) Not(x *Int) *Int {$/;"	f
Not	./math/big/int.go	/^func (z *Int) Not(x *Int) *Int {$/;"	f
NotAFactory	./go/doc/testdata/b.go	/^func NotAFactory() int {}$/;"	f
NotBasic	./reflect/all_test.go	/^type NotBasic Basic$/;"	t
NotFound	./net/http/server.go	/^func NotFound(w ResponseWriter, r *Request) { Error(w, "404 page not found", StatusNotFound) }$/;"	f
NotFoundHandler	./net/http/server.go	/^func NotFoundHandler() Handler { return HandlerFunc(NotFound) }$/;"	f
NotNil	./reflect/all_test.go	/^func NotNil(a interface{}, t *testing.T) {$/;"	f
NotNilFilter	./go/ast/print.go	/^func NotNilFilter(_ string, v reflect.Value) bool {$/;"	f
NotNull	./database/sql/driver/types.go	/^type NotNull struct {$/;"	t
Note	./go/doc/doc.go	/^type Note struct {$/;"	t
Note	./syscall/syscall_plan9.go	/^type Note string$/;"	t
Notice	./log/syslog/syslog.go	/^func (w *Writer) Notice(m string) (err error) {$/;"	f
Notify	./os/signal/signal.go	/^func Notify(c chan<- os.Signal, sig ...os.Signal) {$/;"	f
Now	./cmd/api/testdata/src/pkg/p1/p1.go	/^func Now() Time {$/;"	f
Now	./time/time.go	/^func Now() Time {$/;"	f
NsPerOp	./go/doc/testdata/benchmark.go	/^func (r BenchmarkResult) NsPerOp() int64 {$/;"	f
NsPerOp	./testing/benchmark.go	/^func (r BenchmarkResult) NsPerOp() int64 {$/;"	f
NsecToFiletime	./syscall/ztypes_windows.go	/^func NsecToFiletime(nsec int64) (ft Filetime) {$/;"	f
NsecToTimespec	./syscall/syscall_darwin_386.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_darwin_amd64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_darwin_arm.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_darwin_arm64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_dragonfly_amd64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_freebsd_386.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_freebsd_amd64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_freebsd_arm.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_linux_386.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_linux_amd64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_linux_arm.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_linux_arm64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_linux_ppc64x.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_nacl_386.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_nacl_amd64p32.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_nacl_arm.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_netbsd_386.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_netbsd_amd64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_netbsd_arm.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_openbsd_386.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_openbsd_amd64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_openbsd_arm.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_solaris_amd64.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimespec	./syscall/syscall_windows.go	/^func NsecToTimespec(nsec int64) (ts Timespec) {$/;"	f
NsecToTimeval	./syscall/syscall_darwin_386.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_darwin_amd64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_darwin_arm.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_darwin_arm64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_dragonfly_amd64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_freebsd_386.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_freebsd_amd64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_freebsd_arm.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_linux_386.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_linux_amd64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_linux_arm.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_linux_arm64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_linux_ppc64x.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_nacl_386.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_nacl_amd64p32.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_nacl_arm.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_netbsd_386.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_netbsd_amd64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_netbsd_arm.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_openbsd_386.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_openbsd_amd64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_openbsd_arm.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_plan9.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/syscall_solaris_amd64.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
NsecToTimeval	./syscall/ztypes_windows.go	/^func NsecToTimeval(nsec int64) (tv Timeval) {$/;"	f
Ntohs	./syscall/zsyscall_windows.go	/^func Ntohs(netshort uint16) (u uint16) {$/;"	f
Null	./database/sql/driver/types.go	/^type Null struct {$/;"	t
Null	./syscall/dir_plan9.go	/^func (d *Dir) Null() { *d = nullDir }$/;"	f
NullBool	./database/sql/sql.go	/^type NullBool struct {$/;"	t
NullFloat64	./database/sql/sql.go	/^type NullFloat64 struct {$/;"	t
NullInt64	./database/sql/sql.go	/^type NullInt64 struct {$/;"	t
NullString	./database/sql/sql.go	/^type NullString struct {$/;"	t
Num	./cmd/compile/internal/big/rat.go	/^func (x *Rat) Num() *Int {$/;"	f
Num	./go/constant/value.go	/^func Num(x Value) Value {$/;"	f
Num	./math/big/rat.go	/^func (x *Rat) Num() *Int {$/;"	f
NumCPU	./runtime/debug.go	/^func NumCPU() int {$/;"	f
NumCalls	./net/rpc/server.go	/^func (m *methodType) NumCalls() (n uint) {$/;"	f
NumCgoCall	./runtime/debug.go	/^func NumCgoCall() int64 {$/;"	f
NumChildren	./go/types/scope.go	/^func (s *Scope) NumChildren() int { return len(s.children) }$/;"	f
NumEmbeddeds	./go/types/type.go	/^func (t *Interface) NumEmbeddeds() int { return len(t.embeddeds) }$/;"	f
NumError	./strconv/atoi.go	/^type NumError struct {$/;"	t
NumExplicitMethods	./go/types/type.go	/^func (t *Interface) NumExplicitMethods() int { return len(t.methods) }$/;"	f
NumField	./reflect/type.go	/^func (t *rtype) NumField() int {$/;"	f
NumField	./reflect/value.go	/^func (v Value) NumField() int {$/;"	f
NumFields	./go/ast/ast.go	/^func (f *FieldList) NumFields() int {$/;"	f
NumFields	./go/types/type.go	/^func (s *Struct) NumFields() int { return len(s.fields) }$/;"	f
NumGoroutine	./runtime/debug.go	/^func NumGoroutine() int {$/;"	f
NumIn	./reflect/type.go	/^func (t *rtype) NumIn() int {$/;"	f
NumInput	./database/sql/fakedb_test.go	/^func (s *fakeStmt) NumInput() int {$/;"	f
NumMethod	./reflect/type.go	/^func (t *interfaceType) NumMethod() int { return len(t.methods) }$/;"	f
NumMethod	./reflect/type.go	/^func (t *rtype) NumMethod() int {$/;"	f
NumMethod	./reflect/type.go	/^func (t *uncommonType) NumMethod() int {$/;"	f
NumMethod	./reflect/value.go	/^func (v Value) NumMethod() int {$/;"	f
NumMethods	./go/types/type.go	/^func (t *Interface) NumMethods() int { return len(t.allMethods) }$/;"	f
NumMethods	./go/types/type.go	/^func (t *Named) NumMethods() int { return len(t.methods) }$/;"	f
NumOut	./reflect/type.go	/^func (t *rtype) NumOut() int {$/;"	f
NumPendingRequestsForTesting	./net/http/export_test.go	/^func (t *Transport) NumPendingRequestsForTesting() int {$/;"	f
NumSubexp	./regexp/regexp.go	/^func (re *Regexp) NumSubexp() int {$/;"	f
Number	./encoding/json/decode.go	/^type Number string$/;"	t
NumberNode	./text/template/parse/node.go	/^type NumberNode struct {$/;"	t
OAEPOptions	./crypto/rsa/rsa.go	/^type OAEPOptions struct {$/;"	t
OCSPResponse	./crypto/tls/conn.go	/^func (c *Conn) OCSPResponse() []byte {$/;"	f
OFFSET	./runtime/memmove_arm.s	/^#define OFFSET	R7$/;"	d
OLDPATH	./all.bat	/^set OLDPATH=%PATH%$/;"	v
OP	./cmd/internal/obj/ppc64/asm9.go	/^func OP(o uint32, xo uint32) uint32 {$/;"	f
OPBIT	./cmd/internal/obj/arm64/asm7.go	/^func OPBIT(x uint32) uint32 {$/;"	f
OPBLR	./cmd/internal/obj/arm64/asm7.go	/^func OPBLR(x uint32) uint32 {$/;"	f
OPBcc	./cmd/internal/obj/arm64/asm7.go	/^func OPBcc(x uint32) uint32 {$/;"	f
OPCC	./cmd/internal/obj/ppc64/asm9.go	/^func OPCC(o uint32, xo uint32, rc uint32) uint32 {$/;"	f
OPDP2	./cmd/internal/obj/arm64/asm7.go	/^func OPDP2(x uint32) uint32 {$/;"	f
OPDP3	./cmd/internal/obj/arm64/asm7.go	/^func OPDP3(sf uint32, op54 uint32, op31 uint32, o0 uint32) uint32 {$/;"	f
OPVCC	./cmd/internal/obj/ppc64/asm9.go	/^func OPVCC(o uint32, xo uint32, oe uint32, rc uint32) uint32 {$/;"	f
OP_BC	./cmd/internal/obj/ppc64/asm9.go	/^func OP_BC(op uint32, bo uint32, bi uint32, bd uint32, aa uint32) uint32 {$/;"	f
OP_BCR	./cmd/internal/obj/ppc64/asm9.go	/^func OP_BCR(op uint32, bo uint32, bi uint32) uint32 {$/;"	f
OP_BR	./cmd/internal/obj/ppc64/asm9.go	/^func OP_BR(op uint32, li uint32, aa uint32) uint32 {$/;"	f
OP_RLW	./cmd/internal/obj/ppc64/asm9.go	/^func OP_RLW(op uint32, a uint32, s uint32, sh uint32, mb uint32, me uint32) uint32 {$/;"	f
OSABI	./debug/elf/elf.go	/^type OSABI byte$/;"	t
OSVersionInfoEx	./runtime/syscall_windows_test.go	/^	type OSVersionInfoEx struct {$/;"	t
Obj	./debug/gosym/symtab.go	/^type Obj struct {$/;"	t
Obj	./go/types/selection.go	/^func (s *Selection) Obj() Object { return s.obj }$/;"	f
Obj	./go/types/type.go	/^func (t *Named) Obj() *TypeName { return t.obj }$/;"	f
Obj	./runtime/debug/heapdump_test.go	/^type Obj struct {$/;"	t
Obj32	./runtime/pprof/mprof_test.go	/^type Obj32 struct {$/;"	t
ObjFile	./cmd/pprof/internal/plugin/plugin.go	/^type ObjFile interface {$/;"	t
ObjKind	./go/ast/scope.go	/^type ObjKind int$/;"	t
ObjTool	./cmd/pprof/internal/plugin/plugin.go	/^type ObjTool interface {$/;"	t
Object	./go/ast/scope.go	/^type Object struct {$/;"	t
Object	./go/types/object.go	/^type Object interface {$/;"	t
Object1	./runtime/mfinal_test.go	/^type Object1 struct {$/;"	t
Object2	./runtime/mfinal_test.go	/^type Object2 struct {$/;"	t
ObjectIdentifier	./encoding/asn1/asn1.go	/^type ObjectIdentifier []int$/;"	t
ObjectOf	./go/types/api.go	/^func (info *Info) ObjectOf(id *ast.Ident) Object {$/;"	f
ObjectString	./go/types/object.go	/^func ObjectString(obj Object, qf Qualifier) string {$/;"	f
Oconv	./cmd/compile/internal/gc/fmt.go	/^func Oconv(o int, flag int) string {$/;"	f
Offset	./debug/dwarf/entry.go	/^type Offset uint32$/;"	t
Offset	./go/token/position.go	/^func (f *File) Offset(p Pos) int {$/;"	f
Offsetof	./cmd/compile/internal/gc/builtin/unsafe.go	/^func Offsetof(any) uintptr$/;"	f
Offsetof	./unsafe/unsafe.go	/^func Offsetof(x ArbitraryType) uintptr$/;"	f
Offsetsof	./go/types/sizes.go	/^func (s *StdSizes) Offsetsof(fields []*Var) []int64 {$/;"	f
Ok	./cmd/vet/testdata/copylock_func.go	/^func (*EmbeddedLocker) Ok()    {}$/;"	f
Ok	./cmd/vet/testdata/copylock_func.go	/^func (*EmbeddedMutexPointer) Ok()      {}$/;"	f
Ok	./cmd/vet/testdata/copylock_func.go	/^func (*L0) Ok() {}$/;"	f
Ok	./cmd/vet/testdata/copylock_func.go	/^func Ok(*CustomLock) {}$/;"	f
OkFunc	./cmd/vet/testdata/copylock_func.go	/^func OkFunc(*FieldMutex)      {}$/;"	f
OkFunc	./cmd/vet/testdata/copylock_func.go	/^func OkFunc(*sync.Mutex) {}$/;"	f
OkFunc	./cmd/vet/testdata/copylock_func.go	/^func OkFunc(e *EmbeddedRWMutex)  {}$/;"	f
OkMeth	./cmd/vet/testdata/copylock_func.go	/^func (*EmbeddedRWMutex) OkMeth() {}$/;"	f
OkMeth	./cmd/vet/testdata/copylock_func.go	/^func (*FieldMutex) OkMeth()   {}$/;"	f
OkRet	./cmd/vet/testdata/copylock_func.go	/^func OkRet() *EmbeddedRWMutex    {}$/;"	f
OkRet	./cmd/vet/testdata/copylock_func.go	/^func OkRet() *sync.Mutex {}$/;"	f
Okay1	./cmd/vet/testdata/composite.go	/^var Okay1 = []string{$/;"	v
Okay2	./cmd/vet/testdata/composite.go	/^var Okay2 = map[string]bool{$/;"	v
Okay3	./cmd/vet/testdata/composite.go	/^var Okay3 = struct {$/;"	v
Okay4	./cmd/vet/testdata/composite.go	/^var Okay4 = MyStruct{$/;"	v
OmitAttrTest	./encoding/xml/marshal_test.go	/^type OmitAttrTest struct {$/;"	t
OmitFieldTest	./encoding/xml/marshal_test.go	/^type OmitFieldTest struct {$/;"	t
OnBothTandBPtr	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (*common) OnBothTandBPtr() {}$/;"	f
OnBothTandBVal	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (common) OnBothTandBVal()  {}$/;"	f
OnEmbedded	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (*Embedded) OnEmbedded() {}$/;"	f
OnTheFly	./encoding/gob/codec_test.go	/^type OnTheFly struct {$/;"	t
Once	./sync/once.go	/^type Once struct {$/;"	t
One	./runtime/runtime_test.go	/^var One = []int64{1}$/;"	v
OneByteReader	./testing/iotest/reader.go	/^func OneByteReader(r io.Reader) io.Reader { return &oneByteReader{r} }$/;"	f
Op	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Op uint16$/;"	t
Op	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Op uint32$/;"	t
Op	./image/draw/draw.go	/^type Op int$/;"	t
Op	./regexp/syntax/regexp.go	/^type Op uint8$/;"	t
Op	./unicode/maketables.go	/^type Op func(code rune) bool$/;"	t
OpError	./net/net.go	/^type OpError struct {$/;"	t
Opaque	./cmd/cgo/gcc.go	/^func (c *typeConv) Opaque(n int64) ast.Expr {$/;"	f
Opaque	./image/image.go	/^func (p *Alpha) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *Alpha16) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *CMYK) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *Gray) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *Gray16) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *NRGBA) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *NRGBA64) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *Paletted) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *RGBA) Opaque() bool {$/;"	f
Opaque	./image/image.go	/^func (p *RGBA64) Opaque() bool {$/;"	f
Opaque	./image/names.go	/^func (c *Uniform) Opaque() bool {$/;"	f
Opaque	./image/ycbcr.go	/^func (p *YCbCr) Opaque() bool {$/;"	f
Opcross	./cmd/internal/obj/arm/asm5.go	/^type Opcross [32][2][32]uint8$/;"	t
Open	./archive/zip/reader.go	/^func (f *File) Open() (rc io.ReadCloser, err error) {$/;"	f
Open	./cmd/internal/objfile/objfile.go	/^func Open(name string) (*File, error) {$/;"	f
Open	./cmd/pprof/internal/plugin/plugin.go	/^func (noObjTool) Open(file string, start uint64) (ObjFile, error) {$/;"	f
Open	./cmd/pprof/pprof.go	/^func (*objTool) Open(name string, start uint64) (plugin.ObjFile, error) {$/;"	f
Open	./crypto/cipher/gcm.go	/^func (g *gcm) Open(dst, nonce, ciphertext, data []byte) ([]byte, error) {$/;"	f
Open	./crypto/tls/cipher_suites.go	/^func (f *fixedNonceAEAD) Open(out, nonce, plaintext, additionalData []byte) ([]byte, error) {$/;"	f
Open	./database/sql/fakedb_test.go	/^func (d *fakeDriver) Open(dsn string) (driver.Conn, error) {$/;"	f
Open	./database/sql/sql.go	/^func Open(driverName, dataSourceName string) (*DB, error) {$/;"	f
Open	./debug/elf/file.go	/^func (p *Prog) Open() io.ReadSeeker { return io.NewSectionReader(p.sr, 0, 1<<63-1) }$/;"	f
Open	./debug/elf/file.go	/^func (s *Section) Open() io.ReadSeeker { return io.NewSectionReader(s.sr, 0, 1<<63-1) }$/;"	f
Open	./debug/elf/file.go	/^func Open(name string) (*File, error) {$/;"	f
Open	./debug/macho/file.go	/^func (s *Section) Open() io.ReadSeeker { return io.NewSectionReader(s.sr, 0, 1<<63-1) }$/;"	f
Open	./debug/macho/file.go	/^func (s *Segment) Open() io.ReadSeeker { return io.NewSectionReader(s.sr, 0, 1<<63-1) }$/;"	f
Open	./debug/macho/file.go	/^func Open(name string) (*File, error) {$/;"	f
Open	./debug/pe/file.go	/^func (s *Section) Open() io.ReadSeeker { return io.NewSectionReader(s.sr, 0, 1<<63-1) }$/;"	f
Open	./debug/pe/file.go	/^func Open(name string) (*File, error) {$/;"	f
Open	./debug/plan9obj/file.go	/^func (s *Section) Open() io.ReadSeeker { return io.NewSectionReader(s.sr, 0, 1<<63-1) }$/;"	f
Open	./debug/plan9obj/file.go	/^func Open(name string) (*File, error) {$/;"	f
Open	./mime/multipart/formdata.go	/^func (fh *FileHeader) Open() (File, error) {$/;"	f
Open	./net/http/fs.go	/^func (d Dir) Open(name string) (File, error) {$/;"	f
Open	./net/http/fs_test.go	/^func (d fileServerCleanPathDir) Open(path string) (File, error) {$/;"	f
Open	./net/http/fs_test.go	/^func (fs *testFileSystem) Open(name string) (File, error) {$/;"	f
Open	./net/http/fs_test.go	/^func (fs fakeFS) Open(name string) (File, error) {$/;"	f
Open	./os/file.go	/^func Open(name string) (*File, error) {$/;"	f
Open	./runtime/export_test.go	/^var Open = open$/;"	v
Open	./syscall/fs_nacl.go	/^func Open(path string, openmode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/syscall_linux.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/syscall_plan9.go	/^func Open(path string, mode int) (fd int, err error) {$/;"	f
Open	./syscall/syscall_windows.go	/^func Open(path string, mode int, perm uint32) (fd Handle, err error) {$/;"	f
Open	./syscall/zsyscall_darwin_386.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_darwin_amd64.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_darwin_arm.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_darwin_arm64.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_dragonfly_amd64.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_freebsd_386.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_freebsd_amd64.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_freebsd_arm.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_netbsd_386.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_netbsd_amd64.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_netbsd_arm.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_openbsd_386.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_openbsd_amd64.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_openbsd_arm.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
Open	./syscall/zsyscall_solaris_amd64.go	/^func Open(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
OpenCurrentProcessToken	./syscall/security_windows.go	/^func OpenCurrentProcessToken() (Token, error) {$/;"	f
OpenFat	./debug/macho/fat.go	/^func OpenFat(name string) (ff *FatFile, err error) {$/;"	f
OpenFile	./os/file_plan9.go	/^func OpenFile(name string, flag int, perm FileMode) (*File, error) {$/;"	f
OpenFile	./os/file_unix.go	/^func OpenFile(name string, flag int, perm FileMode) (*File, error) {$/;"	f
OpenFile	./os/file_windows.go	/^func OpenFile(name string, flag int, perm FileMode) (*File, error) {$/;"	f
OpenKey	./internal/syscall/windows/registry/key.go	/^func OpenKey(k Key, path string, access uint32) (Key, error) {$/;"	f
OpenProcess	./syscall/zsyscall_windows.go	/^func OpenProcess(da uint32, inheritHandle bool, pid uint32) (handle Handle, err error) {$/;"	f
OpenProcessToken	./syscall/zsyscall_windows.go	/^func OpenProcessToken(h Handle, access uint32, token *Token) (err error) {$/;"	f
OpenReader	./archive/zip/reader.go	/^func OpenReader(name string) (*ReadCloser, error) {$/;"	f
Openat	./syscall/syscall_linux.go	/^func Openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {$/;"	f
Oprang	./cmd/internal/obj/arm/asm5.go	/^type Oprang struct {$/;"	t
Oprang	./cmd/internal/obj/ppc64/asm9.go	/^type Oprang struct {$/;"	t
Oprange	./cmd/internal/obj/arm64/asm7.go	/^type Oprange struct {$/;"	t
Opt	./cmd/compile/internal/gc/syntax.go	/^func (n *Node) Opt() interface{} {$/;"	f
OptStats	./cmd/compile/internal/gc/popt.go	/^type OptStats struct {$/;"	t
Optab	./cmd/internal/obj/arm/asm5.go	/^type Optab struct {$/;"	t
Optab	./cmd/internal/obj/arm64/asm7.go	/^type Optab struct {$/;"	t
Optab	./cmd/internal/obj/ppc64/asm9.go	/^type Optab struct {$/;"	t
Optab	./cmd/internal/obj/x86/asm6.go	/^type Optab struct {$/;"	t
Option	./html/template/template.go	/^func (t *Template) Option(opt ...string) *Template {$/;"	f
Option	./text/template/option.go	/^func (t *Template) Option(opt ...string) *Template {$/;"	f
OptionalHeader32	./debug/pe/pe.go	/^type OptionalHeader32 struct {$/;"	t
OptionalHeader64	./debug/pe/pe.go	/^type OptionalHeader64 struct {$/;"	t
Optionals	./encoding/json/encode_test.go	/^type Optionals struct {$/;"	t
Options	./cmd/pprof/internal/report/report.go	/^type Options struct {$/;"	t
Options	./image/gif/writer.go	/^type Options struct {$/;"	t
Options	./image/jpeg/writer.go	/^type Options struct {$/;"	t
Options	./net/http/cookiejar/jar.go	/^type Options struct {$/;"	t
Or	./cmd/compile/internal/big/int.go	/^func (z *Int) Or(x, y *Int) *Int {$/;"	f
Or	./math/big/int.go	/^func (z *Int) Or(x, y *Int) *Int {$/;"	f
Order	./cmd/compile/internal/gc/order.go	/^type Order struct {$/;"	t
Order	./compress/lzw/reader.go	/^type Order int$/;"	t
OrderedBy	./sort/example_multi_test.go	/^func OrderedBy(less ...lessFunc) *multiSorter {$/;"	f
Organ	./sort/example_wrapper_test.go	/^type Organ struct {$/;"	t
Organs	./sort/example_wrapper_test.go	/^type Organs []*Organ$/;"	t
OsFile	./runtime/race/testdata/mop_test.go	/^type OsFile struct{}$/;"	t
Ostats	./cmd/compile/internal/gc/popt.go	/^var Ostats OptStats$/;"	v
Out	./reflect/type.go	/^func (t *rtype) Out(i int) Type {$/;"	f
Outer	./reflect/all_test.go	/^\/\/	type Outer struct {$/;"	t
Outer	./reflect/all_test.go	/^type Outer struct {$/;"	t
OuterInt	./reflect/all_test.go	/^type OuterInt struct {$/;"	t
OuterNamedOrderedStruct	./encoding/xml/marshal_test.go	/^type OuterNamedOrderedStruct struct {$/;"	t
OuterNamedStruct	./encoding/xml/marshal_test.go	/^type OuterNamedStruct struct {$/;"	t
OuterOuterStruct	./encoding/xml/marshal_test.go	/^type OuterOuterStruct struct {$/;"	t
OuterStruct	./encoding/xml/marshal_test.go	/^type OuterStruct struct {$/;"	t
Output	./log/log.go	/^func (l *Logger) Output(calldepth int, s string) error {$/;"	f
Output	./log/log.go	/^func Output(calldepth int, s string) error {$/;"	f
Output	./os/exec/exec.go	/^func (c *Cmd) Output() ([]byte, error) {$/;"	f
OverflowComplex	./reflect/value.go	/^func (v Value) OverflowComplex(x complex128) bool {$/;"	f
OverflowFloat	./reflect/value.go	/^func (v Value) OverflowFloat(x float64) bool {$/;"	f
OverflowInt	./reflect/value.go	/^func (v Value) OverflowInt(x int64) bool {$/;"	f
OverflowUint	./reflect/value.go	/^func (v Value) OverflowUint(x uint64) bool {$/;"	f
Overhead	./crypto/cipher/gcm.go	/^func (*gcm) Overhead() int {$/;"	f
Overhead	./crypto/tls/cipher_suites.go	/^func (f *fixedNonceAEAD) Overhead() int  { return f.aead.Overhead() }$/;"	f
Overlapped	./runtime/defs_windows.go	/^type Overlapped C.OVERLAPPED$/;"	t
Overlapped	./syscall/ztypes_windows.go	/^type Overlapped struct {$/;"	t
Overlaps	./image/geom.go	/^func (r Rectangle) Overlaps(s Rectangle) bool {$/;"	f
P2	./runtime/race/testdata/comp_test.go	/^type P2 P$/;"	t
P224	./crypto/elliptic/p224.go	/^func P224() Curve {$/;"	f
P256	./crypto/elliptic/elliptic.go	/^func P256() Curve {$/;"	f
P384	./crypto/elliptic/elliptic.go	/^func P384() Curve {$/;"	f
P521	./crypto/elliptic/elliptic.go	/^func P521() Curve {$/;"	f
PADDR	./cmd/link/internal/amd64/asm.go	/^func PADDR(x uint32) uint32 {$/;"	f
PASS	./cmd/cover/testdata/main.go	/^var PASS = true$/;"	v
PATH	./all.bat	/^set PATH=%OLDPATH%$/;"	v
PB	./testing/benchmark.go	/^type PB struct {$/;"	t
PC	./syscall/syscall_linux_386.go	/^func (r *PtraceRegs) PC() uint64 { return uint64(uint32(r.Eip)) }$/;"	f
PC	./syscall/syscall_linux_amd64.go	/^func (r *PtraceRegs) PC() uint64 { return r.Rip }$/;"	f
PC	./syscall/syscall_linux_arm.go	/^func (r *PtraceRegs) PC() uint64 { return uint64(r.Uregs[15]) }$/;"	f
PC	./syscall/syscall_linux_arm64.go	/^func (r *PtraceRegs) PC() uint64 { return r.Pc }$/;"	f
PC	./syscall/syscall_linux_ppc64x.go	/^func (r *PtraceRegs) PC() uint64 { return r.Nip }$/;"	f
PCDATA_StackMapIndex	./runtime/funcdata.h	/^#define PCDATA_StackMapIndex /;"	d
PCLineTable	./cmd/internal/objfile/objfile.go	/^func (f *File) PCLineTable() (*gosym.Table, error) {$/;"	f
PCRel	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type PCRel int32$/;"	t
PCToFunc	./debug/gosym/symtab.go	/^func (t *Table) PCToFunc(pc uint64) *Func {$/;"	f
PCToLine	./debug/gosym/pclntab.go	/^func (t *LineTable) PCToLine(pc uint64) int {$/;"	f
PCToLine	./debug/gosym/symtab.go	/^func (t *Table) PCToLine(pc uint64) (file string, line int, fn *Func) {$/;"	f
PE64_IMAGE_OPTIONAL_HEADER	./cmd/link/internal/ld/pe.go	/^type PE64_IMAGE_OPTIONAL_HEADER struct {$/;"	t
PEFILEHEADR	./cmd/link/internal/ld/pe.go	/^var PEFILEHEADR int32$/;"	v
PEMCipher	./crypto/x509/pem_decrypt.go	/^type PEMCipher int$/;"	t
PESECTHEADR	./cmd/link/internal/ld/pe.go	/^var PESECTHEADR int32$/;"	v
PI4A	./math/sincos_amd64.s	/^#define PI4A 0.7853981554508209228515625 \/\/ pi\/4 split into three parts$/;"	d
PI4B	./math/sincos_amd64.s	/^#define PI4B 0.794662735614792836713604629039764404296875e-8$/;"	d
PI4C	./math/sincos_amd64.s	/^#define PI4C 0.306161699786838294306516483068750264552437361480769e-16$/;"	d
PKCS1v15DecryptOptions	./crypto/rsa/pkcs1v15.go	/^type PKCS1v15DecryptOptions struct {$/;"	t
PLEVEL	./cmd/yacc/yacc.go	/^func PLEVEL(i int) int { return (i >> 4) & 077 }$/;"	f
POPL	./runtime/cgo/asm_386.s	/^	POPL	DI$/;"	d
POPL	./runtime/rt0_linux_386.s	/^	POPL	DI$/;"	d
POPL	./runtime/sys_darwin_386.s	/^	POPL	DX$/;"	d
POPL	./runtime/sys_windows_386.s	/^	POPL	DI$/;"	d
POPL	./runtime/sys_windows_386.s	/^	POPL	DX$/;"	d
POPQ	./runtime/race_amd64.s	/^	POPQ	DI$/;"	d
POPQ	./runtime/sys_darwin_amd64.s	/^	POPQ	DX$/;"	d
POPQ	./runtime/sys_solaris_amd64.s	/^	POPQ	DI$/;"	d
POPQ	./runtime/sys_windows_amd64.s	/^	POPQ	DI$/;"	d
PProf	./cmd/pprof/internal/commands/commands.go	/^func PProf(c Completer, interactive **bool) Commands {$/;"	f
PProf	./cmd/pprof/internal/driver/driver.go	/^func PProf(flagset plugin.FlagSet, fetch plugin.Fetcher, sym plugin.Symbolizer, obj plugin.ObjTool, ui plugin.UI, overrides commands.Commands) error {$/;"	f
PSHUFD_X0_X0_	./crypto/aes/asm_amd64.s	/^#define PSHUFD_X0_X0_ BYTE $0x66; BYTE $0x0f; BYTE $0x70; BYTE $0xc0$/;"	d
PSHUFD_X0_X3_	./crypto/aes/asm_amd64.s	/^#define PSHUFD_X0_X3_ BYTE $0x66; BYTE $0x0f; BYTE $0x70; BYTE $0xd8$/;"	d
PSHUFD_X1_X1_	./crypto/aes/asm_amd64.s	/^#define PSHUFD_X1_X1_ BYTE $0x66; BYTE $0x0f; BYTE $0x70; BYTE $0xc9$/;"	d
PSLLDQ_X5_	./crypto/aes/asm_amd64.s	/^#define PSLLDQ_X5_ BYTE $0x66; BYTE $0x0f; BYTE $0x73; BYTE $0xfd$/;"	d
PSSOptions	./crypto/rsa/pss.go	/^type PSSOptions struct {$/;"	t
PST	./encoding/asn1/marshal_test.go	/^var PST = time.FixedZone("PST", -8*60*60)$/;"	v
PTHREAD_KEYS_MAX	./runtime/cgo/gcc_android_arm.c	/^#define PTHREAD_KEYS_MAX /;"	d	file:
PUSHL	./runtime/cgo/asm_386.s	/^	PUSHL	DI$/;"	d
PUSHL	./runtime/rt0_linux_386.s	/^	PUSHL	DI$/;"	d
PUSHL	./runtime/sys_darwin_386.s	/^	PUSHL	DI	\/\/ tls #$/;"	d
PUSHL	./runtime/sys_freebsd_386.s	/^	PUSHL	DI$/;"	d
PUSHL	./runtime/sys_linux_386.s	/^	PUSHL	DI	\/\/ tls #$/;"	d
PUSHL	./runtime/sys_windows_386.s	/^	PUSHL	DI$/;"	d
PUSHL	./runtime/sys_windows_386.s	/^	PUSHL	DX			\/\/ argsize (including return value)$/;"	d
PUSHL	./runtime/sys_windows_386.s	/^	PUSHL	DX$/;"	d
PUSHQ	./runtime/race_amd64.s	/^	PUSHQ	DI$/;"	d
PUSHQ	./runtime/sys_darwin_amd64.s	/^	PUSHQ	DX$/;"	d
PUSHQ	./runtime/sys_solaris_amd64.s	/^	PUSHQ	DI			\/\/ save for later$/;"	d
PUSHQ	./runtime/sys_windows_amd64.s	/^	PUSHQ	DI$/;"	d
Pack	./net/dnsmsg.go	/^func (dns *dnsMsg) Pack() (msg []byte, ok bool) {$/;"	f
Package	./cmd/cgo/main.go	/^type Package struct {$/;"	t
Package	./cmd/doc/pkg.go	/^type Package struct {$/;"	t
Package	./cmd/go/alldocs.go	/^    type Package struct {$/;"	t
Package	./cmd/go/list.go	/^    type Package struct {$/;"	t
Package	./cmd/go/pkg.go	/^type Package struct {$/;"	t
Package	./cmd/internal/goobj/read.go	/^type Package struct {$/;"	t
Package	./cmd/vet/main.go	/^type Package struct {$/;"	t
Package	./go/ast/ast.go	/^type Package struct {$/;"	t
Package	./go/doc/doc.go	/^type Package struct {$/;"	t
Package	./go/types/package.go	/^type Package struct {$/;"	t
PackageError	./cmd/doc/pkg.go	/^type PackageError string \/\/ type returned by pkg.Fatalf.$/;"	t
PackageError	./cmd/go/pkg.go	/^type PackageError struct {$/;"	t
PackageExports	./go/ast/filter.go	/^func PackageExports(pkg *Package) bool {$/;"	f
PackageInit	./go/internal/gccgoimporter/importer.go	/^type PackageInit struct {$/;"	t
PackageName	./debug/gosym/symtab.go	/^func (s *Sym) PackageName() string {$/;"	f
PacketConn	./net/net.go	/^type PacketConn interface {$/;"	t
PaddedMutex	./sync/mutex_test.go	/^	type PaddedMutex struct {$/;"	t
PaddedRWMutex	./sync/rwmutex_test.go	/^	type PaddedRWMutex struct {$/;"	t
PaddedSem	./sync/runtime_sema_test.go	/^	type PaddedSem struct {$/;"	t
PaddedWaitGroup	./sync/waitgroup_test.go	/^	type PaddedWaitGroup struct {$/;"	t
Palette	./image/color/color.go	/^type Palette []Color$/;"	t
Paletted	./image/image.go	/^type Paletted struct {$/;"	t
PalettedImage	./image/image.go	/^type PalettedImage interface {$/;"	t
Panic	./fmt/fmt_test.go	/^type Panic struct {$/;"	t
Panic	./log/log.go	/^func (l *Logger) Panic(v ...interface{}) {$/;"	f
Panic	./log/log.go	/^func Panic(v ...interface{}) {$/;"	f
PanicF	./fmt/fmt_test.go	/^type PanicF struct {$/;"	t
Panicf	./log/log.go	/^func (l *Logger) Panicf(format string, v ...interface{}) {$/;"	f
Panicf	./log/log.go	/^func Panicf(format string, v ...interface{}) {$/;"	f
Panicindex	./cmd/compile/internal/gc/go.go	/^var Panicindex *Node$/;"	v
Panicln	./log/log.go	/^func (l *Logger) Panicln(v ...interface{}) {$/;"	f
Panicln	./log/log.go	/^func Panicln(v ...interface{}) {$/;"	f
ParFor	./runtime/export_test.go	/^type ParFor struct {$/;"	t
ParForDo	./runtime/export_test.go	/^func ParForDo(desc *ParFor) {$/;"	f
ParForIters	./runtime/export_test.go	/^func ParForIters(desc *ParFor, tid uint32) (uint32, uint32) {$/;"	f
ParForSetup	./runtime/export_test.go	/^func ParForSetup(desc *ParFor, nthr, n uint32, wait bool, body func(*ParFor, uint32)) {$/;"	f
Parallel	./go/doc/testdata/testing.go	/^func (t *T) Parallel() {$/;"	f
Parallel	./testing/testing.go	/^func (t *T) Parallel() {$/;"	f
Param	./cmd/compile/internal/gc/syntax.go	/^type Param struct {$/;"	t
Param	./syscall/mksyscall_windows.go	/^type Param struct {$/;"	t
ParamCount	./syscall/mksyscall_windows.go	/^func (f *Fn) ParamCount() int {$/;"	f
ParamList	./syscall/mksyscall_windows.go	/^func (f *Fn) ParamList() string {$/;"	f
ParamPrintList	./syscall/mksyscall_windows.go	/^func (f *Fn) ParamPrintList() string {$/;"	f
ParamPtr	./encoding/xml/read_test.go	/^	type ParamPtr struct {$/;"	t
ParamStringPtr	./encoding/xml/read_test.go	/^	type ParamStringPtr struct {$/;"	t
ParamVal	./encoding/xml/read_test.go	/^	type ParamVal struct {$/;"	t
ParameterSizes	./crypto/dsa/dsa.go	/^type ParameterSizes int$/;"	t
Parameters	./crypto/dsa/dsa.go	/^type Parameters struct {$/;"	t
Params	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) Params() *CurveParams {$/;"	f
Params	./crypto/elliptic/p224.go	/^func (curve p224Curve) Params() *CurveParams {$/;"	f
Params	./crypto/elliptic/p256.go	/^func (curve p256Curve) Params() *CurveParams {$/;"	f
Params	./go/types/type.go	/^func (s *Signature) Params() *Tuple { return s.params }$/;"	f
Parent	./go/types/object.go	/^func (obj *object) Parent() *Scope      { return obj.parent }$/;"	f
Parent	./go/types/scope.go	/^func (s *Scope) Parent() *Scope { return s.parent }$/;"	f
Parse	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) Parse() (*obj.Prog, bool) {$/;"	f
Parse	./cmd/asm/internal/flags/flags.go	/^func Parse() {$/;"	f
Parse	./cmd/compile/internal/big/floatconv.go	/^func (z *Float) Parse(s string, base int) (f *Float, b int, err error) {$/;"	f
Parse	./cmd/compile/internal/gc/y.go	/^func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {$/;"	f
Parse	./cmd/internal/goobj/read.go	/^func Parse(r io.ReadSeeker, pkgpath string) (*Package, error) {$/;"	f
Parse	./cmd/pprof/internal/profile/profile.go	/^func Parse(r io.Reader) (*Profile, error) {$/;"	f
Parse	./cmd/pprof/pprof.go	/^func (flags) Parse(usage func()) []string {$/;"	f
Parse	./cmd/yacc/yacc.go	/^func ($$rcvr *$$ParserImpl) Parse($$lex $$Lexer) int {$/;"	f
Parse	./flag/flag.go	/^func (f *FlagSet) Parse(arguments []string) error {$/;"	f
Parse	./flag/flag.go	/^func Parse() {$/;"	f
Parse	./html/template/template.go	/^func (t *Template) Parse(src string) (*Template, error) {$/;"	f
Parse	./internal/format/format.go	/^func Parse(fset *token.FileSet, filename string, src []byte, fragmentOk bool) ($/;"	f
Parse	./internal/trace/parser.go	/^func Parse(r io.Reader) ([]*Event, error) {$/;"	f
Parse	./math/big/floatconv.go	/^func (z *Float) Parse(s string, base int) (f *Float, b int, err error) {$/;"	f
Parse	./net/mail/message.go	/^func (p *AddressParser) Parse(address string) (*Address, error) {$/;"	f
Parse	./net/url/url.go	/^func (u *URL) Parse(ref string) (*URL, error) {$/;"	f
Parse	./net/url/url.go	/^func Parse(rawurl string) (url *URL, err error) {$/;"	f
Parse	./regexp/syntax/parse.go	/^func Parse(s string, flags Flags) (*Regexp, error) {$/;"	f
Parse	./text/template/parse/parse.go	/^func (t *Tree) Parse(text, leftDelim, rightDelim string, treeSet map[string]*Tree, funcs ...map[string]interface{}) (tree *Tree, err error) {$/;"	f
Parse	./text/template/parse/parse.go	/^func Parse(name, text, leftDelim, rightDelim string, funcs ...map[string]interface{}) (treeSet map[string]*Tree, err error) {$/;"	f
Parse	./text/template/template.go	/^func (t *Template) Parse(text string) (*Template, error) {$/;"	f
Parse	./time/format.go	/^func Parse(layout, value string) (Time, error) {$/;"	f
ParseARM64Suffix	./cmd/asm/internal/arch/arm64.go	/^func ParseARM64Suffix(cond string) (uint8, bool) {$/;"	f
ParseARMCondition	./cmd/asm/internal/arch/arm.go	/^func ParseARMCondition(cond string) (uint8, bool) {$/;"	f
ParseAddress	./net/mail/message.go	/^func ParseAddress(address string) (*Address, error) {$/;"	f
ParseAddressList	./net/mail/message.go	/^func ParseAddressList(list string) ([]*Address, error) {$/;"	f
ParseBool	./strconv/atob.go	/^func ParseBool(str string) (value bool, err error) {$/;"	f
ParseCIDR	./net/ip.go	/^func ParseCIDR(s string) (IP, *IPNet, error) {$/;"	f
ParseCRL	./crypto/x509/x509.go	/^func ParseCRL(crlBytes []byte) (certList *pkix.CertificateList, err error) {$/;"	f
ParseCertificate	./crypto/x509/x509.go	/^func ParseCertificate(asn1Data []byte) (*Certificate, error) {$/;"	f
ParseCertificateRequest	./crypto/x509/x509.go	/^func ParseCertificateRequest(asn1Data []byte) (*CertificateRequest, error) {$/;"	f
ParseCertificates	./crypto/x509/x509.go	/^func ParseCertificates(asn1Data []byte) ([]*Certificate, error) {$/;"	f
ParseDERCRL	./crypto/x509/x509.go	/^func ParseDERCRL(derBytes []byte) (certList *pkix.CertificateList, err error) {$/;"	f
ParseDir	./go/parser/interface.go	/^func ParseDir(fset *token.FileSet, path string, filter func(os.FileInfo) bool, mode Mode) (pkgs map[string]*ast.Package, first error) {$/;"	f
ParseDirent	./syscall/syscall_darwin.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDirent	./syscall/syscall_dragonfly.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDirent	./syscall/syscall_freebsd.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDirent	./syscall/syscall_linux.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDirent	./syscall/syscall_nacl.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDirent	./syscall/syscall_netbsd.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDirent	./syscall/syscall_openbsd.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDirent	./syscall/syscall_solaris.go	/^func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {$/;"	f
ParseDuration	./time/format.go	/^func ParseDuration(s string) (Duration, error) {$/;"	f
ParseECPrivateKey	./crypto/x509/sec1.go	/^func ParseECPrivateKey(der []byte) (key *ecdsa.PrivateKey, err error) {$/;"	f
ParseError	./encoding/csv/reader.go	/^type ParseError struct {$/;"	t
ParseError	./net/net.go	/^type ParseError struct {$/;"	t
ParseError	./time/format.go	/^type ParseError struct {$/;"	t
ParseErrorTest	./time/format_test.go	/^type ParseErrorTest struct {$/;"	t
ParseExpr	./go/parser/interface.go	/^func ParseExpr(x string) (ast.Expr, error) {$/;"	f
ParseExprFrom	./go/parser/interface.go	/^func ParseExprFrom(fset *token.FileSet, filename string, src interface{}, mode Mode) (ast.Expr, error) {$/;"	f
ParseFile	./go/parser/interface.go	/^func ParseFile(fset *token.FileSet, filename string, src interface{}, mode Mode) (f *ast.File, err error) {$/;"	f
ParseFile	./syscall/mksyscall_windows.go	/^func (src *Source) ParseFile(path string) error {$/;"	f
ParseFiles	./html/template/template.go	/^func (t *Template) ParseFiles(filenames ...string) (*Template, error) {$/;"	f
ParseFiles	./html/template/template.go	/^func ParseFiles(filenames ...string) (*Template, error) {$/;"	f
ParseFiles	./syscall/mksyscall_windows.go	/^func ParseFiles(fs []string) (*Source, error) {$/;"	f
ParseFiles	./text/template/helper.go	/^func (t *Template) ParseFiles(filenames ...string) (*Template, error) {$/;"	f
ParseFiles	./text/template/helper.go	/^func ParseFiles(filenames ...string) (*Template, error) {$/;"	f
ParseFloat	./cmd/compile/internal/big/floatconv.go	/^func ParseFloat(s string, base int, prec uint, mode RoundingMode) (f *Float, b int, err error) {$/;"	f
ParseFloat	./math/big/floatconv.go	/^func ParseFloat(s string, base int, prec uint, mode RoundingMode) (f *Float, b int, err error) {$/;"	f
ParseFloat	./strconv/atof.go	/^func ParseFloat(s string, bitSize int) (f float64, err error) {$/;"	f
ParseForm	./net/http/request.go	/^func (r *Request) ParseForm() error {$/;"	f
ParseGlob	./html/template/template.go	/^func (t *Template) ParseGlob(pattern string) (*Template, error) {$/;"	f
ParseGlob	./html/template/template.go	/^func ParseGlob(pattern string) (*Template, error) {$/;"	f
ParseGlob	./text/template/helper.go	/^func (t *Template) ParseGlob(pattern string) (*Template, error) {$/;"	f
ParseGlob	./text/template/helper.go	/^func ParseGlob(pattern string) (*Template, error) {$/;"	f
ParseHTTPVersion	./net/http/request.go	/^func ParseHTTPVersion(vers string) (major, minor int, ok bool) {$/;"	f
ParseIP	./net/ip.go	/^func ParseIP(s string) IP {$/;"	f
ParseInLocation	./time/format.go	/^func ParseInLocation(layout, value string, loc *Location) (Time, error) {$/;"	f
ParseInt	./strconv/atoi.go	/^func ParseInt(s string, base int, bitSize int) (i int64, err error) {$/;"	f
ParseList	./net/mail/message.go	/^func (p *AddressParser) ParseList(list string) ([]*Address, error) {$/;"	f
ParseMAC	./net/mac.go	/^func ParseMAC(s string) (hw HardwareAddr, err error) {$/;"	f
ParseMediaType	./mime/mediatype.go	/^func ParseMediaType(v string) (mediatype string, params map[string]string, err error) {$/;"	f
ParseMemoryMap	./cmd/pprof/internal/profile/legacy_profile.go	/^func (p *Profile) ParseMemoryMap(rd io.Reader) error {$/;"	f
ParseMultipartForm	./net/http/request.go	/^func (r *Request) ParseMultipartForm(maxMemory int64) error {$/;"	f
ParseNetlinkMessage	./syscall/netlink_linux.go	/^func ParseNetlinkMessage(b []byte) ([]NetlinkMessage, error) {$/;"	f
ParseNetlinkRouteAttr	./syscall/netlink_linux.go	/^func ParseNetlinkRouteAttr(m *NetlinkMessage) ([]NetlinkRouteAttr, error) {$/;"	f
ParsePKCS1PrivateKey	./crypto/x509/pkcs1.go	/^func ParsePKCS1PrivateKey(der []byte) (key *rsa.PrivateKey, err error) {$/;"	f
ParsePKCS8PrivateKey	./crypto/x509/pkcs8.go	/^func ParsePKCS8PrivateKey(der []byte) (key interface{}, err error) {$/;"	f
ParsePKIXPublicKey	./crypto/x509/x509.go	/^func ParsePKIXPublicKey(derBytes []byte) (pub interface{}, err error) {$/;"	f
ParseProfiles	./cmd/cover/profile.go	/^func ParseProfiles(fileName string) ([]*Profile, error) {$/;"	f
ParseQuery	./net/url/url.go	/^func ParseQuery(query string) (m Values, err error) {$/;"	f
ParseRangeTests	./net/http/range_test.go	/^var ParseRangeTests = []struct {$/;"	v
ParseRequestURI	./net/url/url.go	/^func ParseRequestURI(rawurl string) (url *URL, err error) {$/;"	f
ParseRoutingMessage	./syscall/route_bsd.go	/^func ParseRoutingMessage(b []byte) (msgs []RoutingMessage, err error) {$/;"	f
ParseRoutingMessage	./syscall/syscall_nacl.go	/^func ParseRoutingMessage(b []byte) ([]RoutingMessage, error)      { return nil, ENOSYS }$/;"	f
ParseRoutingSockaddr	./syscall/route_bsd.go	/^func ParseRoutingSockaddr(msg RoutingMessage) ([]Sockaddr, error) {$/;"	f
ParseRoutingSockaddr	./syscall/syscall_nacl.go	/^func ParseRoutingSockaddr(msg RoutingMessage) ([]Sockaddr, error) { return nil, ENOSYS }$/;"	f
ParseSocketControlMessage	./syscall/sockcmsg_unix.go	/^func ParseSocketControlMessage(b []byte) ([]SocketControlMessage, error) {$/;"	f
ParseTest	./time/format_test.go	/^type ParseTest struct {$/;"	t
ParseTime	./encoding/xml/atom_test.go	/^func ParseTime(str string) time.Time {$/;"	f
ParseTime	./net/http/header.go	/^func ParseTime(text string) (t time.Time, err error) {$/;"	f
ParseTimeZoneTest	./time/format_test.go	/^type ParseTimeZoneTest struct {$/;"	t
ParseTracebacks	./cmd/pprof/internal/profile/legacy_profile.go	/^func ParseTracebacks(b []byte) (*Profile, error) {$/;"	f
ParseUint	./strconv/atoi.go	/^func ParseUint(s string, base int, bitSize int) (n uint64, err error) {$/;"	f
ParseUnixCredentials	./syscall/sockcmsg_linux.go	/^func ParseUnixCredentials(m *SocketControlMessage) (*Ucred, error) {$/;"	f
ParseUnixRights	./syscall/sockcmsg_unix.go	/^func ParseUnixRights(m *SocketControlMessage) ([]int, error) {$/;"	f
Parsed	./flag/flag.go	/^func (f *FlagSet) Parsed() bool {$/;"	f
Parsed	./flag/flag.go	/^func Parsed() bool {$/;"	f
ParsedTestData	./cmd/internal/obj/x86/obj6_test.go	/^type ParsedTestData struct {$/;"	t
Parser	./cmd/asm/internal/asm/parse.go	/^type Parser struct {$/;"	t
Part	./mime/multipart/multipart.go	/^type Part struct {$/;"	t
Particle	./encoding/xml/marshal_test.go	/^type Particle struct {$/;"	t
Passenger	./encoding/xml/marshal_test.go	/^type Passenger struct {$/;"	t
Password	./net/url/url.go	/^func (u *Userinfo) Password() (string, bool) {$/;"	f
Patch	./cmd/asm/internal/asm/parse.go	/^type Patch struct {$/;"	t
Patch	./cmd/compile/internal/gc/gsubr.go	/^func Patch(p *obj.Prog, to *obj.Prog) {$/;"	f
Path	./go/types/package.go	/^func (pkg *Package) Path() string { return pkg.path }$/;"	f
PathError	./os/error.go	/^type PathError struct {$/;"	t
PathTest	./path/filepath/path_test.go	/^type PathTest struct {$/;"	t
PathTest	./path/path_test.go	/^type PathTest struct {$/;"	t
PathTestA	./encoding/xml/read_test.go	/^type PathTestA struct {$/;"	t
PathTestB	./encoding/xml/read_test.go	/^type PathTestB struct {$/;"	t
PathTestC	./encoding/xml/read_test.go	/^type PathTestC struct {$/;"	t
PathTestD	./encoding/xml/read_test.go	/^type PathTestD struct {$/;"	t
PathTestE	./encoding/xml/read_test.go	/^type PathTestE struct {$/;"	t
PathTestItem	./encoding/xml/read_test.go	/^type PathTestItem struct {$/;"	t
PathTestSet	./encoding/xml/read_test.go	/^type PathTestSet struct {$/;"	t
Pathconf	./syscall/zsyscall_darwin_386.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_darwin_amd64.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_darwin_arm.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_darwin_arm64.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_dragonfly_amd64.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_freebsd_386.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_freebsd_amd64.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_freebsd_arm.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_netbsd_386.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_netbsd_amd64.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_netbsd_arm.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_openbsd_386.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_openbsd_amd64.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_openbsd_arm.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pathconf	./syscall/zsyscall_solaris_amd64.go	/^func Pathconf(path string, name int) (val int, err error) {$/;"	f
Pause	./syscall/zsyscall_linux_386.go	/^func Pause() (err error) {$/;"	f
Pause	./syscall/zsyscall_linux_amd64.go	/^func Pause() (err error) {$/;"	f
Pause	./syscall/zsyscall_linux_arm.go	/^func Pause() (err error) {$/;"	f
Pause	./syscall/zsyscall_linux_arm64.go	/^func Pause() (err error) {$/;"	f
Pause	./syscall/zsyscall_linux_ppc64.go	/^func Pause() (err error) {$/;"	f
Pause	./syscall/zsyscall_linux_ppc64le.go	/^func Pause() (err error) {$/;"	f
Pc	./cmd/compile/internal/gc/go.go	/^var Pc *obj.Prog$/;"	v
Pcdata	./cmd/internal/obj/link.go	/^type Pcdata struct {$/;"	t
Pcdata	./cmd/link/internal/ld/link.go	/^type Pcdata struct {$/;"	t
Pciter	./cmd/internal/obj/link.go	/^type Pciter struct {$/;"	t
Pciter	./cmd/link/internal/ld/link.go	/^type Pciter struct {$/;"	t
Pcln	./cmd/internal/obj/link.go	/^type Pcln struct {$/;"	t
Pcln	./cmd/link/internal/ld/link.go	/^type Pcln struct {$/;"	t
PeObj	./cmd/link/internal/ld/ldpe.go	/^type PeObj struct {$/;"	t
PeSect	./cmd/link/internal/ld/ldpe.go	/^type PeSect struct {$/;"	t
PeSym	./cmd/link/internal/ld/ldpe.go	/^type PeSym struct {$/;"	t
Pea	./encoding/xml/read_test.go	/^type Pea struct {$/;"	t
Peek	./bufio/bufio.go	/^func (b *Reader) Peek(n int) ([]byte, error) {$/;"	f
Peek	./cmd/internal/obj/util.go	/^func (b *Biobuf) Peek(n int) ([]byte, error) {$/;"	f
Peek	./text/scanner/scanner.go	/^func (s *Scanner) Peek() rune {$/;"	f
Peinit	./cmd/link/internal/ld/pe.go	/^func Peinit() {$/;"	f
Pending	./net/http/httputil/persist.go	/^func (cc *ClientConn) Pending() int {$/;"	f
Pending	./net/http/httputil/persist.go	/^func (sc *ServerConn) Pending() int {$/;"	f
Perm	./math/rand/rand.go	/^func (r *Rand) Perm(n int) []int {$/;"	f
Perm	./math/rand/rand.go	/^func Perm(n int) []int { return globalRand.Perm(n) }$/;"	f
Perm	./os/types.go	/^func (m FileMode) Perm() FileMode {$/;"	f
Person	./encoding/xml/example_test.go	/^	type Person struct {$/;"	t
Person	./encoding/xml/read_test.go	/^type Person struct {$/;"	t
Person	./sort/example_interface_test.go	/^type Person struct {$/;"	t
Phase	./math/cmplx/phase.go	/^func Phase(x complex128) float64 { return math.Atan2(imag(x), real(x)) }$/;"	f
Pi	./encoding/xml/marshal_test.go	/^type Pi struct {$/;"	t
Pid	./os/exec_plan9.go	/^func (p *ProcessState) Pid() int {$/;"	f
Pid	./os/exec_posix.go	/^func (p *ProcessState) Pid() int {$/;"	f
Ping	./database/sql/sql.go	/^func (db *DB) Ping() error {$/;"	f
Pipe	./io/pipe.go	/^func Pipe() (*PipeReader, *PipeWriter) {$/;"	f
Pipe	./net/pipe.go	/^func Pipe() (Conn, Conn) {$/;"	f
Pipe	./os/file_plan9.go	/^func Pipe() (r *File, w *File, err error) {$/;"	f
Pipe	./os/file_windows.go	/^func Pipe() (r *File, w *File, err error) {$/;"	f
Pipe	./os/pipe_bsd.go	/^func Pipe() (r *File, w *File, err error) {$/;"	f
Pipe	./os/pipe_linux.go	/^func Pipe() (r *File, w *File, err error) {$/;"	f
Pipe	./syscall/fd_nacl.go	/^func Pipe(fd []int) error {$/;"	f
Pipe	./syscall/syscall_darwin.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_dragonfly.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_freebsd.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_linux_386.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_linux_amd64.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_linux_arm.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_linux_arm64.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_linux_ppc64x.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_netbsd.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_openbsd.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_plan9.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_solaris.go	/^func Pipe(p []int) (err error) {$/;"	f
Pipe	./syscall/syscall_windows.go	/^func Pipe(p []Handle) (err error) {$/;"	f
Pipe2	./syscall/syscall_linux_386.go	/^func Pipe2(p []int, flags int) (err error) {$/;"	f
Pipe2	./syscall/syscall_linux_amd64.go	/^func Pipe2(p []int, flags int) (err error) {$/;"	f
Pipe2	./syscall/syscall_linux_arm.go	/^func Pipe2(p []int, flags int) (err error) {$/;"	f
Pipe2	./syscall/syscall_linux_arm64.go	/^func Pipe2(p []int, flags int) (err error) {$/;"	f
Pipe2	./syscall/syscall_linux_ppc64x.go	/^func Pipe2(p []int, flags int) (err error) {$/;"	f
PipeNode	./text/template/parse/node.go	/^type PipeNode struct {$/;"	t
PipeReader	./io/pipe.go	/^type PipeReader struct {$/;"	t
PipeWriter	./io/pipe.go	/^type PipeWriter struct {$/;"	t
Pipeline	./net/textproto/pipeline.go	/^type Pipeline struct {$/;"	t
Pitem	./cmd/yacc/yacc.go	/^type Pitem struct {$/;"	t
PivotRoot	./syscall/zsyscall_linux_386.go	/^func PivotRoot(newroot string, putold string) (err error) {$/;"	f
PivotRoot	./syscall/zsyscall_linux_amd64.go	/^func PivotRoot(newroot string, putold string) (err error) {$/;"	f
PivotRoot	./syscall/zsyscall_linux_arm.go	/^func PivotRoot(newroot string, putold string) (err error) {$/;"	f
PivotRoot	./syscall/zsyscall_linux_arm64.go	/^func PivotRoot(newroot string, putold string) (err error) {$/;"	f
PivotRoot	./syscall/zsyscall_linux_ppc64.go	/^func PivotRoot(newroot string, putold string) (err error) {$/;"	f
PivotRoot	./syscall/zsyscall_linux_ppc64le.go	/^func PivotRoot(newroot string, putold string) (err error) {$/;"	f
PixOffset	./image/image.go	/^func (p *Alpha) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *Alpha16) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *CMYK) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *Gray) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *Gray16) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *NRGBA) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *NRGBA64) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *Paletted) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *RGBA) PixOffset(x, y int) int {$/;"	f
PixOffset	./image/image.go	/^func (p *RGBA64) PixOffset(x, y int) int {$/;"	f
Pkg	./cmd/compile/internal/gc/go.go	/^type Pkg struct {$/;"	t
Pkg	./cmd/link/internal/ld/go.go	/^type Pkg struct {$/;"	t
Pkg	./go/types/object.go	/^func (obj *object) Pkg() *Package       { return obj.pkg }$/;"	f
PkgName	./go/types/object.go	/^type PkgName struct {$/;"	t
PkgPath	./reflect/type.go	/^func (t *rtype) PkgPath() string {$/;"	f
PkgPath	./reflect/type.go	/^func (t *uncommonType) PkgPath() string {$/;"	f
Pkglookup	./cmd/compile/internal/gc/subr.go	/^func Pkglookup(name string, pkg *Pkg) *Sym {$/;"	f
Plain	./encoding/xml/marshal_test.go	/^type Plain struct {$/;"	t
PlainAuth	./net/smtp/auth.go	/^func PlainAuth(identity, username, password, host string) Auth {$/;"	f
PlainFunc	./cmd/api/testdata/src/pkg/p1/p1.go	/^func PlainFunc(x, y int, s string) (b *B, err error)$/;"	f
Plan9	./image/color/palette/gen.go	/^	fmt.Fprintln(w, "var Plan9 = []color.Color{")$/;"	v
Plan9	./image/color/palette/palette.go	/^var Plan9 = []color.Color{$/;"	v
Plan9Syntax	./cmd/internal/rsc.io/arm/armasm/plan9x.go	/^func Plan9Syntax(inst Inst, pc uint64, symname func(uint64) (string, uint64), text io.ReaderAt) string {$/;"	f
Plan9Syntax	./cmd/internal/rsc.io/x86/x86asm/plan9x.go	/^func Plan9Syntax(inst Inst, pc uint64, symname func(uint64) (string, uint64)) string {$/;"	f
Planet	./sort/example_keys_test.go	/^type Planet struct {$/;"	t
Plist	./cmd/internal/obj/link.go	/^type Plist struct {$/;"	t
Pod	./encoding/xml/read_test.go	/^type Pod struct {$/;"	t
Point	./encoding/gob/codec_test.go	/^type Point struct {$/;"	t
Point	./encoding/gob/doc.go	/^	type Point struct {X, Y int}$/;"	t
Point	./encoding/gob/doc.go	/^Since this is the first transmission of type Point, the type descriptor$/;"	t
Point	./encoding/gob/example_interface_test.go	/^type Point struct {$/;"	t
Point	./encoding/json/decode_test.go	/^type Point struct {$/;"	t
Point	./image/geom.go	/^type Point struct {$/;"	t
Point	./reflect/all_test.go	/^type Point struct {$/;"	t
Point	./runtime/race/testdata/mop_test.go	/^type Point struct {$/;"	t
Pointer	./cmd/compile/internal/gc/builtin/unsafe.go	/^type Pointer uintptr \/\/ not really; filled in by compiler$/;"	t
Pointer	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^		{pkgpath: "unsafe", name: "Pointer", want: "type Pointer unsafe.Pointer"},$/;"	t
Pointer	./go/types/type.go	/^type Pointer struct {$/;"	t
Pointer	./reflect/value.go	/^func (v Value) Pointer() uintptr {$/;"	f
Pointer	./unsafe/unsafe.go	/^\/\/ available for type Pointer that are not available for other types.$/;"	t
Pointer	./unsafe/unsafe.go	/^type Pointer *ArbitraryType$/;"	t
PointerFieldsTest	./encoding/xml/marshal_test.go	/^type PointerFieldsTest struct {$/;"	t
Polar	./math/cmplx/polar.go	/^func Polar(x complex128) (r, θ float64) {$/;"	f
Pool	./sync/pool.go	/^type Pool struct {$/;"	t
Pop	./cmd/internal/obj/obj.go	/^func (h *LineHist) Pop(lineno int) {$/;"	f
Pop	./container/heap/example_intheap_test.go	/^func (h *IntHeap) Pop() interface{} {$/;"	f
Pop	./container/heap/example_pq_test.go	/^func (pq *PriorityQueue) Pop() interface{} {$/;"	f
Pop	./container/heap/heap.go	/^func Pop(h Interface) interface{} {$/;"	f
Pop	./container/heap/heap_test.go	/^func (h *myHeap) Pop() (v interface{}) {$/;"	f
Pop	./go/types/initorder.go	/^func (a *nodeQueue) Pop() interface{} {$/;"	f
Port	./encoding/xml/marshal_test.go	/^type Port struct {$/;"	t
PortEvent	./runtime/defs_solaris.go	/^type PortEvent C.port_event_t$/;"	t
Pos	./cmd/cgo/main.go	/^func (r *Ref) Pos() token.Pos {$/;"	f
Pos	./go/ast/ast.go	/^func (c *Comment) Pos() token.Pos { return c.Slash }$/;"	f
Pos	./go/ast/ast.go	/^func (d *BadDecl) Pos() token.Pos  { return d.From }$/;"	f
Pos	./go/ast/ast.go	/^func (d *FuncDecl) Pos() token.Pos { return d.Type.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (d *GenDecl) Pos() token.Pos  { return d.TokPos }$/;"	f
Pos	./go/ast/ast.go	/^func (f *Field) Pos() token.Pos {$/;"	f
Pos	./go/ast/ast.go	/^func (f *FieldList) Pos() token.Pos {$/;"	f
Pos	./go/ast/ast.go	/^func (f *File) Pos() token.Pos { return f.Package }$/;"	f
Pos	./go/ast/ast.go	/^func (g *CommentGroup) Pos() token.Pos { return g.List[0].Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (p *Package) Pos() token.Pos { return token.NoPos }$/;"	f
Pos	./go/ast/ast.go	/^func (s *AssignStmt) Pos() token.Pos     { return s.Lhs[0].Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (s *BadStmt) Pos() token.Pos        { return s.From }$/;"	f
Pos	./go/ast/ast.go	/^func (s *BlockStmt) Pos() token.Pos      { return s.Lbrace }$/;"	f
Pos	./go/ast/ast.go	/^func (s *BranchStmt) Pos() token.Pos     { return s.TokPos }$/;"	f
Pos	./go/ast/ast.go	/^func (s *CaseClause) Pos() token.Pos     { return s.Case }$/;"	f
Pos	./go/ast/ast.go	/^func (s *CommClause) Pos() token.Pos     { return s.Case }$/;"	f
Pos	./go/ast/ast.go	/^func (s *DeclStmt) Pos() token.Pos       { return s.Decl.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (s *DeferStmt) Pos() token.Pos      { return s.Defer }$/;"	f
Pos	./go/ast/ast.go	/^func (s *EmptyStmt) Pos() token.Pos      { return s.Semicolon }$/;"	f
Pos	./go/ast/ast.go	/^func (s *ExprStmt) Pos() token.Pos       { return s.X.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (s *ForStmt) Pos() token.Pos        { return s.For }$/;"	f
Pos	./go/ast/ast.go	/^func (s *GoStmt) Pos() token.Pos         { return s.Go }$/;"	f
Pos	./go/ast/ast.go	/^func (s *IfStmt) Pos() token.Pos         { return s.If }$/;"	f
Pos	./go/ast/ast.go	/^func (s *ImportSpec) Pos() token.Pos {$/;"	f
Pos	./go/ast/ast.go	/^func (s *IncDecStmt) Pos() token.Pos     { return s.X.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (s *LabeledStmt) Pos() token.Pos    { return s.Label.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (s *RangeStmt) Pos() token.Pos      { return s.For }$/;"	f
Pos	./go/ast/ast.go	/^func (s *ReturnStmt) Pos() token.Pos     { return s.Return }$/;"	f
Pos	./go/ast/ast.go	/^func (s *SelectStmt) Pos() token.Pos     { return s.Select }$/;"	f
Pos	./go/ast/ast.go	/^func (s *SendStmt) Pos() token.Pos       { return s.Chan.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (s *SwitchStmt) Pos() token.Pos     { return s.Switch }$/;"	f
Pos	./go/ast/ast.go	/^func (s *TypeSpec) Pos() token.Pos  { return s.Name.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (s *TypeSwitchStmt) Pos() token.Pos { return s.Switch }$/;"	f
Pos	./go/ast/ast.go	/^func (s *ValueSpec) Pos() token.Pos { return s.Names[0].Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *ArrayType) Pos() token.Pos      { return x.Lbrack }$/;"	f
Pos	./go/ast/ast.go	/^func (x *BadExpr) Pos() token.Pos  { return x.From }$/;"	f
Pos	./go/ast/ast.go	/^func (x *BasicLit) Pos() token.Pos { return x.ValuePos }$/;"	f
Pos	./go/ast/ast.go	/^func (x *BinaryExpr) Pos() token.Pos     { return x.X.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *CallExpr) Pos() token.Pos       { return x.Fun.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *ChanType) Pos() token.Pos      { return x.Begin }$/;"	f
Pos	./go/ast/ast.go	/^func (x *CompositeLit) Pos() token.Pos {$/;"	f
Pos	./go/ast/ast.go	/^func (x *Ellipsis) Pos() token.Pos { return x.Ellipsis }$/;"	f
Pos	./go/ast/ast.go	/^func (x *FuncLit) Pos() token.Pos  { return x.Type.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *FuncType) Pos() token.Pos {$/;"	f
Pos	./go/ast/ast.go	/^func (x *Ident) Pos() token.Pos    { return x.NamePos }$/;"	f
Pos	./go/ast/ast.go	/^func (x *IndexExpr) Pos() token.Pos      { return x.X.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *InterfaceType) Pos() token.Pos { return x.Interface }$/;"	f
Pos	./go/ast/ast.go	/^func (x *KeyValueExpr) Pos() token.Pos   { return x.Key.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *MapType) Pos() token.Pos       { return x.Map }$/;"	f
Pos	./go/ast/ast.go	/^func (x *ParenExpr) Pos() token.Pos      { return x.Lparen }$/;"	f
Pos	./go/ast/ast.go	/^func (x *SelectorExpr) Pos() token.Pos   { return x.X.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *SliceExpr) Pos() token.Pos      { return x.X.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *StarExpr) Pos() token.Pos       { return x.Star }$/;"	f
Pos	./go/ast/ast.go	/^func (x *StructType) Pos() token.Pos     { return x.Struct }$/;"	f
Pos	./go/ast/ast.go	/^func (x *TypeAssertExpr) Pos() token.Pos { return x.X.Pos() }$/;"	f
Pos	./go/ast/ast.go	/^func (x *UnaryExpr) Pos() token.Pos      { return x.OpPos }$/;"	f
Pos	./go/ast/scope.go	/^func (obj *Object) Pos() token.Pos {$/;"	f
Pos	./go/token/position.go	/^func (f *File) Pos(offset int) Pos {$/;"	f
Pos	./go/token/position.go	/^type Pos int$/;"	t
Pos	./go/types/object.go	/^func (obj *object) Pos() token.Pos      { return obj.pos }$/;"	f
Pos	./go/types/scope.go	/^func (s *Scope) Pos() token.Pos { return s.pos }$/;"	f
Pos	./text/scanner/scanner.go	/^func (s *Scanner) Pos() (pos Position) {$/;"	f
Pos	./text/template/parse/node.go	/^type Pos int$/;"	t
PosInf	./math/dim_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
PosInf	./math/exp_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
PosInf	./math/hypot_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
PosInf	./math/log_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
PosInf	./math/sincos_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
PosOne	./math/sincos_amd64.s	/^#define PosOne 0x3FF0000000000000$/;"	d
Position	./go/token/position.go	/^func (f *File) Position(p Pos) (pos Position) {$/;"	f
Position	./go/token/position.go	/^func (s *FileSet) Position(p Pos) (pos Position) {$/;"	f
Position	./go/token/position.go	/^type Position struct {$/;"	t
Position	./text/scanner/scanner.go	/^type Position struct {$/;"	t
Position	./text/template/parse/node.go	/^func (p Pos) Position() Pos {$/;"	f
PositionFor	./go/token/position.go	/^func (f *File) PositionFor(p Pos, adjusted bool) (pos Position) {$/;"	f
PositionFor	./go/token/position.go	/^func (s *FileSet) PositionFor(p Pos, adjusted bool) (pos Position) {$/;"	f
Post	./net/http/client.go	/^func (c *Client) Post(url string, bodyType string, body io.Reader) (resp *Response, err error) {$/;"	f
Post	./net/http/client.go	/^func Post(url string, bodyType string, body io.Reader) (resp *Response, err error) {$/;"	f
PostForm	./net/http/client.go	/^func (c *Client) PostForm(url string, data url.Values) (resp *Response, err error) {$/;"	f
PostForm	./net/http/client.go	/^func PostForm(url string, data url.Values) (resp *Response, err error) {$/;"	f
PostFormValue	./net/http/request.go	/^func (r *Request) PostFormValue(key string) string {$/;"	f
PostProcessor	./cmd/pprof/internal/commands/commands.go	/^type PostProcessor func(input *bytes.Buffer, output io.Writer, ui plugin.UI) error$/;"	t
PostQueuedCompletionStatus	./syscall/zsyscall_windows.go	/^func PostQueuedCompletionStatus(cphandle Handle, qty uint32, key uint32, overlapped *Overlapped) (err error) {$/;"	f
PostURL	./cmd/pprof/internal/fetch/fetch.go	/^func PostURL(source, post string) ([]byte, error) {$/;"	f
Pow	./math/cmplx/pow.go	/^func Pow(x, y complex128) complex128 {$/;"	f
Pow	./math/pow.go	/^func Pow(x, y float64) float64 {$/;"	f
Pow10	./math/pow10.go	/^func Pow10(e int) float64 {$/;"	f
Pread	./syscall/fd_nacl.go	/^func Pread(fd int, b []byte, offset int64) (int, error) {$/;"	f
Pread	./syscall/syscall_dragonfly.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_darwin_386.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_darwin_amd64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_darwin_arm.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_darwin_arm64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_freebsd_386.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_freebsd_amd64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_freebsd_arm.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_linux_386.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_linux_amd64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_linux_arm.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_linux_arm64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_linux_ppc64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_linux_ppc64le.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_netbsd_386.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_netbsd_amd64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_netbsd_arm.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_openbsd_386.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_openbsd_amd64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_openbsd_arm.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_plan9_386.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_plan9_amd64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pread	./syscall/zsyscall_solaris_amd64.go	/^func Pread(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Prec	./cmd/compile/internal/big/float.go	/^func (x *Float) Prec() uint {$/;"	f
Prec	./math/big/float.go	/^func (x *Float) Prec() uint {$/;"	f
Precedence	./go/token/token.go	/^func (op Token) Precedence() int {$/;"	f
Precision	./fmt/print.go	/^func (p *pp) Precision() (prec int, ok bool) { return p.fmt.prec, p.fmt.precPresent }$/;"	f
Precompute	./crypto/rsa/rsa.go	/^func (priv *PrivateKey) Precompute() {$/;"	f
PrecomputedValues	./crypto/rsa/rsa.go	/^type PrecomputedValues struct {$/;"	t
Prefix	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Prefix uint16$/;"	t
Prefix	./log/log.go	/^func (l *Logger) Prefix() string {$/;"	f
Prefix	./log/log.go	/^func Prefix() string {$/;"	f
Prefix	./regexp/syntax/prog.go	/^func (p *Prog) Prefix() (prefix string, complete bool) {$/;"	f
Prefixes	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Prefixes [14]Prefix$/;"	t
Prepare	./database/sql/fakedb_test.go	/^func (c *fakeConn) Prepare(query string) (driver.Stmt, error) {$/;"	f
Prepare	./database/sql/sql.go	/^func (db *DB) Prepare(query string) (*Stmt, error) {$/;"	f
Prepare	./database/sql/sql.go	/^func (tx *Tx) Prepare(query string) (*Stmt, error) {$/;"	f
Prepare	./net/fd_poll_nacl.go	/^func (pd *pollDesc) Prepare(mode int) error {$/;"	f
Prepare	./net/fd_poll_runtime.go	/^func (pd *pollDesc) Prepare(mode int) error {$/;"	f
PrepareRead	./net/fd_poll_nacl.go	/^func (pd *pollDesc) PrepareRead() error { return pd.Prepare('r') }$/;"	f
PrepareRead	./net/fd_poll_runtime.go	/^func (pd *pollDesc) PrepareRead() error {$/;"	f
PrepareWrite	./net/fd_poll_nacl.go	/^func (pd *pollDesc) PrepareWrite() error { return pd.Prepare('w') }$/;"	f
PrepareWrite	./net/fd_poll_runtime.go	/^func (pd *pollDesc) PrepareWrite() error {$/;"	f
PresenceTest	./encoding/xml/marshal_test.go	/^type PresenceTest struct {$/;"	t
Prev	./container/list/list.go	/^func (e *Element) Prev() *Element {$/;"	f
Prev	./container/ring/ring.go	/^func (r *Ring) Prev() *Ring {$/;"	f
Prime	./crypto/rand/util.go	/^func Prime(rand io.Reader, bits int) (p *big.Int, err error) {$/;"	f
Print	./cmd/internal/objfile/disasm.go	/^func (d *Disasm) Print(w io.Writer, filter *regexp.Regexp, start, end uint64) {$/;"	f
Print	./cmd/pprof/internal/plugin/plugin.go	/^func (ui *stdUI) Print(args ...interface{}) {$/;"	f
Print	./fmt/print.go	/^func Print(a ...interface{}) (n int, err error) {$/;"	f
Print	./go/ast/print.go	/^func Print(fset *token.FileSet, x interface{}) error {$/;"	f
Print	./internal/trace/parser.go	/^func Print(events []*Event) {$/;"	f
Print	./log/log.go	/^func (l *Logger) Print(v ...interface{}) { l.Output(2, fmt.Sprint(v...)) }$/;"	f
Print	./log/log.go	/^func Print(v ...interface{}) {$/;"	f
PrintClass	./regexp/syntax/make_perl_groups.pl	/^sub PrintClass($$@) {$/;"	s
PrintClasses	./regexp/syntax/make_perl_groups.pl	/^sub PrintClasses($@) {$/;"	s
PrintDefaults	./flag/flag.go	/^func (f *FlagSet) PrintDefaults() {$/;"	f
PrintDefaults	./flag/flag.go	/^func PrintDefaults() {$/;"	f
PrintErr	./cmd/pprof/internal/plugin/plugin.go	/^func (ui *stdUI) PrintErr(args ...interface{}) {$/;"	f
PrintError	./go/scanner/errors.go	/^func PrintError(w io.Writer, err error) {$/;"	f
PrintList	./syscall/mksyscall_windows.go	/^func (r *Rets) PrintList() string {$/;"	f
PrintRanges	./unicode/graphic.go	/^var PrintRanges = []*RangeTable{$/;"	v
PrintStack	./runtime/debug/stack.go	/^func PrintStack() {$/;"	f
PrintTrie	./strings/export_test.go	/^func (r *Replacer) PrintTrie() string {$/;"	f
Printf	./cmd/doc/pkg.go	/^func (pkg *Package) Printf(format string, args ...interface{}) {$/;"	f
Printf	./cmd/vet/main.go	/^func Printf(format string, args ...interface{}) {$/;"	f
Printf	./cmd/vet/testdata/print.go	/^func Printf(format string, args ...interface{}) {$/;"	f
Printf	./fmt/print.go	/^func Printf(format string, a ...interface{}) (n int, err error) {$/;"	f
Printf	./log/log.go	/^func (l *Logger) Printf(format string, v ...interface{}) {$/;"	f
Printf	./log/log.go	/^func Printf(format string, v ...interface{}) {$/;"	f
Printf	./net/mail/message.go	/^func (d debugT) Printf(format string, args ...interface{}) {$/;"	f
PrintfLine	./net/textproto/writer.go	/^func (w *Writer) PrintfLine(format string, args ...interface{}) error {$/;"	f
PrintfTests	./cmd/vet/testdata/print.go	/^func PrintfTests() {$/;"	f
Println	./cmd/vet/main.go	/^func Println(args ...interface{}) {$/;"	f
Println	./fmt/print.go	/^func Println(a ...interface{}) (n int, err error) {$/;"	f
Println	./go/types/resolver_test.go	/^		var Println = fmt.Println$/;"	v
Println	./log/log.go	/^func (l *Logger) Println(v ...interface{}) { l.Output(2, fmt.Sprintln(v...)) }$/;"	f
Println	./log/log.go	/^func Println(v ...interface{}) {$/;"	f
Priority	./log/syslog/syslog.go	/^type Priority int$/;"	t
PriorityQueue	./container/heap/example_pq_test.go	/^type PriorityQueue []*Item$/;"	t
Private	./cmd/api/testdata/src/pkg/p1/p1.go	/^type Private interface {$/;"	t
Private	./reflect/all_test.go	/^type Private struct {$/;"	t
PrivateKey	./crypto/crypto.go	/^type PrivateKey interface{}$/;"	t
PrivateKey	./crypto/dsa/dsa.go	/^type PrivateKey struct {$/;"	t
PrivateKey	./crypto/ecdsa/ecdsa.go	/^type PrivateKey struct {$/;"	t
PrivateKey	./crypto/rsa/rsa.go	/^type PrivateKey struct {$/;"	t
ProbablyPrime	./cmd/compile/internal/big/int.go	/^func (x *Int) ProbablyPrime(n int) bool {$/;"	f
ProbablyPrime	./math/big/int.go	/^func (x *Int) ProbablyPrime(n int) bool {$/;"	f
Proc	./runtime/syscall_windows_test.go	/^func (d *DLL) Proc(name string) *syscall.Proc {$/;"	f
Proc	./syscall/dll_windows.go	/^type Proc struct {$/;"	t
ProcAttr	./os/exec.go	/^type ProcAttr struct {$/;"	t
ProcAttr	./syscall/exec_plan9.go	/^type ProcAttr struct {$/;"	t
ProcAttr	./syscall/exec_unix.go	/^type ProcAttr struct {$/;"	t
ProcAttr	./syscall/exec_windows.go	/^type ProcAttr struct {$/;"	t
ProcAttr	./syscall/syscall_nacl.go	/^type ProcAttr struct {$/;"	t
ProcInst	./encoding/xml/xml.go	/^type ProcInst struct {$/;"	t
Process	./os/exec.go	/^type Process struct {$/;"	t
Process32First	./syscall/zsyscall_windows.go	/^func Process32First(snapshot Handle, procEntry *ProcessEntry32) (err error) {$/;"	f
Process32Next	./syscall/zsyscall_windows.go	/^func Process32Next(snapshot Handle, procEntry *ProcessEntry32) (err error) {$/;"	f
ProcessEntry32	./syscall/ztypes_windows.go	/^type ProcessEntry32 struct {$/;"	t
ProcessInformation	./syscall/ztypes_windows.go	/^type ProcessInformation struct {$/;"	t
ProcessRemoteIO	./net/fd_windows.go	/^func (s *ioSrv) ProcessRemoteIO() {$/;"	f
ProcessState	./os/exec_plan9.go	/^type ProcessState struct {$/;"	t
ProcessState	./os/exec_posix.go	/^type ProcessState struct {$/;"	t
Profile	./cmd/cover/profile.go	/^type Profile struct {$/;"	t
Profile	./cmd/pprof/internal/profile/profile.go	/^type Profile struct {$/;"	t
Profile	./net/http/pprof/pprof.go	/^func Profile(w http.ResponseWriter, r *http.Request) {$/;"	f
Profile	./runtime/pprof/pprof.go	/^type Profile struct {$/;"	t
ProfileBlock	./cmd/cover/profile.go	/^type ProfileBlock struct {$/;"	t
Profiles	./runtime/pprof/pprof.go	/^func Profiles() []*Profile {$/;"	f
Prog	./cmd/compile/internal/gc/gsubr.go	/^func Prog(as int) *obj.Prog {$/;"	f
Prog	./cmd/internal/obj/link.go	/^type Prog struct {$/;"	t
Prog	./debug/elf/file.go	/^type Prog struct {$/;"	t
Prog	./regexp/syntax/prog.go	/^type Prog struct {$/;"	t
Prog32	./debug/elf/elf.go	/^type Prog32 struct {$/;"	t
Prog64	./debug/elf/elf.go	/^type Prog64 struct {$/;"	t
ProgFlag	./debug/elf/elf.go	/^type ProgFlag uint32$/;"	t
ProgHeader	./debug/elf/file.go	/^type ProgHeader struct {$/;"	t
ProgInfo	./cmd/internal/obj/link.go	/^type ProgInfo struct {$/;"	t
ProgType	./debug/elf/elf.go	/^type ProgType int$/;"	t
Properties	./unicode/maketables.go	/^			println("var Properties = map[string] *RangeTable{")$/;"	v
Properties	./unicode/tables.go	/^var Properties = map[string]*RangeTable{$/;"	v
ProtoAtLeast	./net/http/request.go	/^func (r *Request) ProtoAtLeast(major, minor int) bool {$/;"	f
ProtoAtLeast	./net/http/response.go	/^func (r *Response) ProtoAtLeast(major, minor int) bool {$/;"	f
Protocol	./net/internal/socktest/switch.go	/^func (c Cookie) Protocol() int { return int(c & 0xff) }$/;"	f
ProtocolError	./net/http/request.go	/^type ProtocolError struct {$/;"	t
ProtocolError	./net/textproto/textproto.go	/^type ProtocolError string$/;"	t
Protoent	./syscall/ztypes_windows.go	/^type Protoent struct {$/;"	t
ProxyFromEnvironment	./net/http/transport.go	/^func ProxyFromEnvironment(req *Request) (*url.URL, error) {$/;"	f
ProxyURL	./net/http/transport.go	/^func ProxyURL(fixedURL *url.URL) func(*Request) (*url.URL, error) {$/;"	f
Prune	./cmd/pprof/internal/profile/prune.go	/^func (p *Profile) Prune(dropRx, keepRx *regexp.Regexp) {$/;"	f
Pseudos	./cmd/asm/internal/arch/arch.go	/^var Pseudos = map[string]int{$/;"	v
Pt	./image/geom.go	/^func Pt(X, Y int) Point {$/;"	f
Pthread	./runtime/defs_solaris.go	/^type Pthread C.pthread_t$/;"	t
PthreadAttr	./runtime/defs_solaris.go	/^type PthreadAttr C.pthread_attr_t$/;"	t
Ptr	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) Ptr(index int64) {$/;"	f
Ptr	./reflect/all_test.go	/^		type Ptr struct{ x *byte }$/;"	t
Ptr	./runtime/gcinfo_test.go	/^type Ptr struct {$/;"	t
Ptr	./runtime/race/testdata/comp_test.go	/^type Ptr struct {$/;"	t
PtrInterfaceItem	./encoding/gob/codec_test.go	/^type PtrInterfaceItem struct {$/;"	t
PtrScalar	./runtime/gcinfo_test.go	/^type PtrScalar struct {$/;"	t
PtrTo	./reflect/type.go	/^func PtrTo(t Type) Type {$/;"	f
PtrType	./debug/dwarf/type.go	/^type PtrType struct {$/;"	t
PtraceAttach	./syscall/syscall_darwin.go	/^func PtraceAttach(pid int) (err error) { return ptrace(PT_ATTACH, pid, 0, 0) }$/;"	f
PtraceAttach	./syscall/syscall_linux.go	/^func PtraceAttach(pid int) (err error) { return ptrace(PTRACE_ATTACH, pid, 0, 0) }$/;"	f
PtraceCont	./syscall/syscall_linux.go	/^func PtraceCont(pid int, signal int) (err error) {$/;"	f
PtraceDetach	./syscall/syscall_darwin.go	/^func PtraceDetach(pid int) (err error) { return ptrace(PT_DETACH, pid, 0, 0) }$/;"	f
PtraceDetach	./syscall/syscall_linux.go	/^func PtraceDetach(pid int) (err error) { return ptrace(PTRACE_DETACH, pid, 0, 0) }$/;"	f
PtraceGetEventMsg	./syscall/syscall_linux.go	/^func PtraceGetEventMsg(pid int) (msg uint, err error) {$/;"	f
PtraceGetRegs	./syscall/syscall_linux.go	/^func PtraceGetRegs(pid int, regsout *PtraceRegs) (err error) {$/;"	f
PtracePeekData	./syscall/syscall_linux.go	/^func PtracePeekData(pid int, addr uintptr, out []byte) (count int, err error) {$/;"	f
PtracePeekText	./syscall/syscall_linux.go	/^func PtracePeekText(pid int, addr uintptr, out []byte) (count int, err error) {$/;"	f
PtracePokeData	./syscall/syscall_linux.go	/^func PtracePokeData(pid int, addr uintptr, data []byte) (count int, err error) {$/;"	f
PtracePokeText	./syscall/syscall_linux.go	/^func PtracePokeText(pid int, addr uintptr, data []byte) (count int, err error) {$/;"	f
PtraceRegs	./syscall/types_linux.go	/^type PtraceRegs C.PtraceRegs$/;"	t
PtraceRegs	./syscall/ztypes_linux_386.go	/^type PtraceRegs struct {$/;"	t
PtraceRegs	./syscall/ztypes_linux_amd64.go	/^type PtraceRegs struct {$/;"	t
PtraceRegs	./syscall/ztypes_linux_arm.go	/^type PtraceRegs struct {$/;"	t
PtraceRegs	./syscall/ztypes_linux_arm64.go	/^type PtraceRegs struct {$/;"	t
PtraceRegs	./syscall/ztypes_linux_ppc64.go	/^type PtraceRegs struct {$/;"	t
PtraceRegs	./syscall/ztypes_linux_ppc64le.go	/^type PtraceRegs struct {$/;"	t
PtraceSetOptions	./syscall/syscall_linux.go	/^func PtraceSetOptions(pid int, options int) (err error) {$/;"	f
PtraceSetRegs	./syscall/syscall_linux.go	/^func PtraceSetRegs(pid int, regs *PtraceRegs) (err error) {$/;"	f
PtraceSingleStep	./syscall/syscall_linux.go	/^func PtraceSingleStep(pid int) (err error) { return ptrace(PTRACE_SINGLESTEP, pid, 0, 0) }$/;"	f
PtraceSyscall	./syscall/syscall_linux.go	/^func PtraceSyscall(pid int, signal int) (err error) {$/;"	f
Ptregs	./runtime/defs3_linux.go	/^type Ptregs C.struct_pt_regs$/;"	t
Ptrscalar	./reflect/all_test.go	/^		type Ptrscalar struct {$/;"	t
Ptrto	./cmd/compile/internal/gc/subr.go	/^func Ptrto(t *Type) *Type {$/;"	f
Public	./cmd/api/testdata/src/pkg/p1/p1.go	/^type Public interface {$/;"	t
Public	./crypto/ecdsa/ecdsa.go	/^func (priv *PrivateKey) Public() crypto.PublicKey {$/;"	f
Public	./crypto/rsa/rsa.go	/^func (priv *PrivateKey) Public() crypto.PublicKey {$/;"	f
Public	./reflect/all_test.go	/^type Public struct {$/;"	t
PublicKey	./crypto/crypto.go	/^type PublicKey interface{}$/;"	t
PublicKey	./crypto/dsa/dsa.go	/^type PublicKey struct {$/;"	t
PublicKey	./crypto/ecdsa/ecdsa.go	/^type PublicKey struct {$/;"	t
PublicKey	./crypto/rsa/rsa.go	/^type PublicKey struct {$/;"	t
PublicKeyAlgorithm	./crypto/x509/x509.go	/^type PublicKeyAlgorithm int$/;"	t
PublicKeyInfo	./encoding/asn1/asn1_test.go	/^type PublicKeyInfo struct {$/;"	t
PublicSuffix	./net/http/cookiejar/jar_test.go	/^func (testPSL) PublicSuffix(d string) string {$/;"	f
PublicSuffixList	./net/http/cookiejar/jar.go	/^type PublicSuffixList interface {$/;"	t
Publish	./expvar/expvar.go	/^func Publish(name string, v Var) {$/;"	f
Push	./cmd/asm/internal/lex/input.go	/^func (in *Input) Push(r TokenReader) {$/;"	f
Push	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) Push(tr TokenReader) {$/;"	f
Push	./cmd/internal/obj/obj.go	/^func (h *LineHist) Push(lineno int, file string) {$/;"	f
Push	./container/heap/example_intheap_test.go	/^func (h *IntHeap) Push(x interface{}) {$/;"	f
Push	./container/heap/example_pq_test.go	/^func (pq *PriorityQueue) Push(x interface{}) {$/;"	f
Push	./container/heap/heap.go	/^func Push(h Interface, x interface{}) {$/;"	f
Push	./container/heap/heap_test.go	/^func (h *myHeap) Push(v interface{}) {$/;"	f
Push	./go/types/initorder.go	/^func (a *nodeQueue) Push(x interface{}) {$/;"	f
PushBack	./container/list/list.go	/^func (l *List) PushBack(v interface{}) *Element {$/;"	f
PushBackList	./container/list/list.go	/^func (l *List) PushBackList(other *List) {$/;"	f
PushFront	./container/list/list.go	/^func (l *List) PushFront(v interface{}) *Element {$/;"	f
PushFrontList	./container/list/list.go	/^func (l *List) PushFrontList(other *List) {$/;"	f
Put	./crypto/tls/common.go	/^func (c *lruSessionCache) Put(sessionKey string, cs *ClientSessionState) {$/;"	f
Put	./sync/pool.go	/^func (p *Pool) Put(x interface{}) {$/;"	f
PutIdleTestConn	./net/http/export_test.go	/^func (t *Transport) PutIdleTestConn() bool {$/;"	f
PutUint16	./encoding/binary/binary.go	/^func (bigEndian) PutUint16(b []byte, v uint16) {$/;"	f
PutUint16	./encoding/binary/binary.go	/^func (littleEndian) PutUint16(b []byte, v uint16) {$/;"	f
PutUint32	./encoding/binary/binary.go	/^func (bigEndian) PutUint32(b []byte, v uint32) {$/;"	f
PutUint32	./encoding/binary/binary.go	/^func (littleEndian) PutUint32(b []byte, v uint32) {$/;"	f
PutUint64	./encoding/binary/binary.go	/^func (bigEndian) PutUint64(b []byte, v uint64) {$/;"	f
PutUint64	./encoding/binary/binary.go	/^func (littleEndian) PutUint64(b []byte, v uint64) {$/;"	f
PutUvarint	./encoding/binary/varint.go	/^func PutUvarint(buf []byte, x uint64) int {$/;"	f
PutVarint	./encoding/binary/varint.go	/^func PutVarint(buf []byte, x int64) int {$/;"	f
Pwrite	./syscall/fd_nacl.go	/^func Pwrite(fd int, b []byte, offset int64) (int, error) {$/;"	f
Pwrite	./syscall/syscall_dragonfly.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_darwin_386.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_darwin_amd64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_darwin_arm.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_darwin_arm64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_freebsd_386.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_freebsd_amd64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_freebsd_arm.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_linux_386.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_linux_amd64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_linux_arm.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_linux_arm64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_linux_ppc64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_linux_ppc64le.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_netbsd_386.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_netbsd_amd64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_netbsd_arm.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_openbsd_386.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_openbsd_amd64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_openbsd_arm.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_plan9_386.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_plan9_amd64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pwrite	./syscall/zsyscall_solaris_amd64.go	/^func Pwrite(fd int, p []byte, offset int64) (n int, err error) {$/;"	f
Pythagoras	./encoding/gob/example_interface_test.go	/^type Pythagoras interface {$/;"	t
Qid	./syscall/dir_plan9.go	/^type Qid struct {$/;"	t
QualType	./debug/dwarf/type.go	/^type QualType struct {$/;"	t
Qualifier	./go/types/typestring.go	/^type Qualifier func(*Package) string$/;"	t
Quantizer	./image/draw/draw.go	/^type Quantizer interface {$/;"	t
Query	./database/sql/fakedb_test.go	/^func (c *fakeConn) Query(query string, args []driver.Value) (driver.Rows, error) {$/;"	f
Query	./database/sql/fakedb_test.go	/^func (s *fakeStmt) Query(args []driver.Value) (driver.Rows, error) {$/;"	f
Query	./database/sql/sql.go	/^func (db *DB) Query(query string, args ...interface{}) (*Rows, error) {$/;"	f
Query	./database/sql/sql.go	/^func (s *Stmt) Query(args ...interface{}) (*Rows, error) {$/;"	f
Query	./database/sql/sql.go	/^func (tx *Tx) Query(query string, args ...interface{}) (*Rows, error) {$/;"	f
Query	./net/url/url.go	/^func (u *URL) Query() Values {$/;"	f
QueryEscape	./net/url/url.go	/^func QueryEscape(s string) string {$/;"	f
QueryRow	./database/sql/sql.go	/^func (db *DB) QueryRow(query string, args ...interface{}) *Row {$/;"	f
QueryRow	./database/sql/sql.go	/^func (s *Stmt) QueryRow(args ...interface{}) *Row {$/;"	f
QueryRow	./database/sql/sql.go	/^func (tx *Tx) QueryRow(query string, args ...interface{}) *Row {$/;"	f
QueryUnescape	./net/url/url.go	/^func QueryUnescape(s string) (string, error) {$/;"	f
Queryer	./database/sql/driver/driver.go	/^type Queryer interface {$/;"	t
Quit	./net/smtp/smtp.go	/^func (c *Client) Quit() error {$/;"	f
Quo	./cmd/compile/internal/big/float.go	/^func (z *Float) Quo(x, y *Float) *Float {$/;"	f
Quo	./cmd/compile/internal/big/int.go	/^func (z *Int) Quo(x, y *Int) *Int {$/;"	f
Quo	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Quo(x, y *Rat) *Rat {$/;"	f
Quo	./math/big/float.go	/^func (z *Float) Quo(x, y *Float) *Float {$/;"	f
Quo	./math/big/int.go	/^func (z *Int) Quo(x, y *Int) *Int {$/;"	f
Quo	./math/big/rat.go	/^func (z *Rat) Quo(x, y *Rat) *Rat {$/;"	f
QuoRem	./cmd/compile/internal/big/int.go	/^func (z *Int) QuoRem(x, y, r *Int) (*Int, *Int) {$/;"	f
QuoRem	./math/big/int.go	/^func (z *Int) QuoRem(x, y, r *Int) (*Int, *Int) {$/;"	f
Quote	./strconv/quote.go	/^func Quote(s string) string {$/;"	f
QuoteMeta	./regexp/regexp.go	/^func QuoteMeta(s string) string {$/;"	f
QuoteRune	./strconv/quote.go	/^func QuoteRune(r rune) string {$/;"	f
QuoteRuneToASCII	./strconv/quote.go	/^func QuoteRuneToASCII(r rune) string {$/;"	f
QuoteToASCII	./strconv/quote.go	/^func QuoteToASCII(s string) string {$/;"	f
Quotient	./net/rpc/server.go	/^		type Quotient struct {$/;"	t
R0	./reflect/all_test.go	/^type R0 struct {$/;"	t
R1	./reflect/all_test.go	/^type R1 struct {$/;"	t
R10	./reflect/all_test.go	/^type R10 R9$/;"	t
R11	./reflect/all_test.go	/^type R11 R9$/;"	t
R12	./reflect/all_test.go	/^type R12 R9$/;"	t
R13	./reflect/all_test.go	/^type R13 struct {$/;"	t
R14	./reflect/all_test.go	/^type R14 R13$/;"	t
R15	./reflect/all_test.go	/^type R15 R13$/;"	t
R16	./reflect/all_test.go	/^type R16 R13$/;"	t
R17	./reflect/all_test.go	/^type R17 struct {$/;"	t
R18	./reflect/all_test.go	/^type R18 R17$/;"	t
R19	./reflect/all_test.go	/^type R19 R17$/;"	t
R2	./reflect/all_test.go	/^type R2 R1$/;"	t
R20	./reflect/all_test.go	/^type R20 R17$/;"	t
R21	./reflect/all_test.go	/^type R21 struct {$/;"	t
R22	./reflect/all_test.go	/^type R22 R21$/;"	t
R23	./reflect/all_test.go	/^type R23 R21$/;"	t
R24	./reflect/all_test.go	/^type R24 R21$/;"	t
R3	./reflect/all_test.go	/^type R3 R1$/;"	t
R4	./reflect/all_test.go	/^type R4 R1$/;"	t
R5	./reflect/all_test.go	/^type R5 struct {$/;"	t
R6	./reflect/all_test.go	/^type R6 R5$/;"	t
R7	./reflect/all_test.go	/^type R7 R5$/;"	t
R8	./reflect/all_test.go	/^type R8 R5$/;"	t
R9	./reflect/all_test.go	/^type R9 struct {$/;"	t
RARG0	./runtime/race_amd64.s	/^#define RARG0 CX$/;"	d
RARG0	./runtime/race_amd64.s	/^#define RARG0 DI$/;"	d
RARG1	./runtime/race_amd64.s	/^#define RARG1 DX$/;"	d
RARG1	./runtime/race_amd64.s	/^#define RARG1 SI$/;"	d
RARG2	./runtime/race_amd64.s	/^#define RARG2 DX$/;"	d
RARG2	./runtime/race_amd64.s	/^#define RARG2 R8$/;"	d
RARG3	./runtime/race_amd64.s	/^#define RARG3 CX$/;"	d
RARG3	./runtime/race_amd64.s	/^#define RARG3 R9$/;"	d
RDNSequence	./crypto/x509/pkix/pkix.go	/^type RDNSequence []RelativeDistinguishedNameSET$/;"	t
RDNSequence	./encoding/asn1/asn1_test.go	/^type RDNSequence []RelativeDistinguishedNameSET$/;"	t
READ_EXEC_ONLY	./runtime/sys_linux_386.s	/^#define READ_EXEC_ONLY 0x08$/;"	d
REG_BADESC	./regexp/testdata/testregex.c	/^#define REG_BADESC	/;"	d	file:
REG_CLASS_ESCAPE	./regexp/testdata/testregex.c	/^#define REG_CLASS_ESCAPE	/;"	d	file:
REG_COMMENT	./regexp/testdata/testregex.c	/^#define REG_COMMENT	/;"	d	file:
REG_DELIMITED	./regexp/testdata/testregex.c	/^#define REG_DELIMITED	/;"	d	file:
REG_DISCIPLINE	./regexp/testdata/testregex.c	/^#undef	REG_DISCIPLINE$/;"	d	file:
REG_EBUS	./regexp/testdata/testregex.c	/^#define REG_EBUS	/;"	d	file:
REG_ECOUNT	./regexp/testdata/testregex.c	/^#define REG_ECOUNT	/;"	d	file:
REG_EDELIM	./regexp/testdata/testregex.c	/^#define REG_EDELIM	/;"	d	file:
REG_EFAULT	./regexp/testdata/testregex.c	/^#define REG_EFAULT	/;"	d	file:
REG_EFLAGS	./regexp/testdata/testregex.c	/^#define REG_EFLAGS	/;"	d	file:
REG_EHUNG	./regexp/testdata/testregex.c	/^#define REG_EHUNG	/;"	d	file:
REG_EMEM	./regexp/testdata/testregex.c	/^#define REG_EMEM	/;"	d	file:
REG_ENEWLINE	./regexp/testdata/testregex.c	/^#define REG_ENEWLINE	/;"	d	file:
REG_ENULL	./regexp/testdata/testregex.c	/^#define REG_ENULL	/;"	d	file:
REG_ESCAPE	./regexp/testdata/testregex.c	/^#define REG_ESCAPE	/;"	d	file:
REG_EXEC_DEFAULT	./regexp/testdata/testregex.c	/^#define REG_EXEC_DEFAULT	/;"	d	file:
REG_ICASE	./regexp/testdata/testregex.c	/^#define REG_ICASE	/;"	d	file:
REG_LEFT	./regexp/testdata/testregex.c	/^#define REG_LEFT	/;"	d	file:
REG_LENIENT	./regexp/testdata/testregex.c	/^#define REG_LENIENT	/;"	d	file:
REG_MINIMAL	./regexp/testdata/testregex.c	/^#define REG_MINIMAL	/;"	d	file:
REG_MULTIPLE	./regexp/testdata/testregex.c	/^#define REG_MULTIPLE	/;"	d	file:
REG_MULTIREF	./regexp/testdata/testregex.c	/^#define REG_MULTIREF	/;"	d	file:
REG_MUSTDELIM	./regexp/testdata/testregex.c	/^#define REG_MUSTDELIM	/;"	d	file:
REG_NEWLINE	./regexp/testdata/testregex.c	/^#define REG_NEWLINE	/;"	d	file:
REG_NOTBOL	./regexp/testdata/testregex.c	/^#define REG_NOTBOL	/;"	d	file:
REG_NOTEOL	./regexp/testdata/testregex.c	/^#define REG_NOTEOL	/;"	d	file:
REG_NULL	./regexp/testdata/testregex.c	/^#define REG_NULL	/;"	d	file:
REG_RIGHT	./regexp/testdata/testregex.c	/^#define REG_RIGHT	/;"	d	file:
REG_SHELL_DOT	./regexp/testdata/testregex.c	/^#define REG_SHELL_DOT	/;"	d	file:
REG_SHELL_ESCAPED	./regexp/testdata/testregex.c	/^#define REG_SHELL_ESCAPED	/;"	d	file:
REG_SHELL_GROUP	./regexp/testdata/testregex.c	/^#define REG_SHELL_GROUP	/;"	d	file:
REG_SHELL_PATH	./regexp/testdata/testregex.c	/^#define REG_SHELL_PATH	/;"	d	file:
REG_SPAN	./regexp/testdata/testregex.c	/^#define REG_SPAN	/;"	d	file:
REG_TEST_DEFAULT	./regexp/testdata/testregex.c	/^#define REG_TEST_DEFAULT	/;"	d	file:
REG_UNKNOWN	./regexp/testdata/testregex.c	/^#define REG_UNKNOWN	/;"	d	file:
RE_DUP_MAX	./regexp/testdata/testregex.c	/^#define RE_DUP_MAX	/;"	d	file:
RGB	./encoding/json/example_test.go	/^	type RGB struct {$/;"	t
RGBA	./image/color/color.go	/^func (c Alpha) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^func (c Alpha16) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^func (c Gray) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^func (c Gray16) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^func (c NRGBA) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^func (c NRGBA64) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^func (c RGBA) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^func (c RGBA64) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA	./image/color/color.go	/^type RGBA struct {$/;"	t
RGBA	./image/color/ycbcr.go	/^func (c CMYK) RGBA() (uint32, uint32, uint32, uint32) {$/;"	f
RGBA	./image/color/ycbcr.go	/^func (c YCbCr) RGBA() (uint32, uint32, uint32, uint32) {$/;"	f
RGBA	./image/image.go	/^type RGBA struct {$/;"	t
RGBA	./image/names.go	/^func (c *Uniform) RGBA() (r, g, b, a uint32) {$/;"	f
RGBA64	./image/color/color.go	/^type RGBA64 struct {$/;"	t
RGBA64	./image/image.go	/^type RGBA64 struct {$/;"	t
RGBA64At	./image/image.go	/^func (p *RGBA64) RGBA64At(x, y int) color.RGBA64 {$/;"	f
RGBAAt	./image/image.go	/^func (p *RGBA) RGBAAt(x, y int) color.RGBA {$/;"	f
RGBToCMYK	./image/color/ycbcr.go	/^func RGBToCMYK(r, g, b uint8) (uint8, uint8, uint8, uint8) {$/;"	f
RGBToYCbCr	./image/color/ycbcr.go	/^func RGBToYCbCr(r, g, b uint8) (uint8, uint8, uint8) {$/;"	f
RLock	./sync/rwmutex.go	/^func (rw *RWMutex) RLock() {$/;"	f
RLocker	./sync/rwmutex.go	/^func (rw *RWMutex) RLocker() Locker {$/;"	f
RM	./runtime/vlop_arm.s	/^#define RM	R3$/;"	d
RODATA	./runtime/textflag.h	/^#define RODATA	/;"	d
ROUND1	./crypto/md5/md5block_386.s	/^#define ROUND1(a, b, c, d, index, const, shift) \\$/;"	d
ROUND1	./crypto/md5/md5block_amd64.s	/^#define ROUND1(a, b, c, d, index, const, shift) \\$/;"	d
ROUND1	./crypto/md5/md5block_amd64p32.s	/^#define ROUND1(a, b, c, d, index, const, shift) \\$/;"	d
ROUND1	./crypto/md5/md5block_arm.s	/^#define ROUND1(Ra, Rb, Rc, Rd, index, shift, Rconst) \\$/;"	d
ROUND1	./crypto/sha1/sha1block_386.s	/^#define ROUND1(a, b, c, d, e, index) \\$/;"	d
ROUND1	./crypto/sha1/sha1block_amd64.s	/^#define ROUND1(a, b, c, d, e, index) \\$/;"	d
ROUND1	./crypto/sha1/sha1block_amd64p32.s	/^#define ROUND1(a, b, c, d, e, index) \\$/;"	d
ROUND1	./crypto/sha1/sha1block_arm.s	/^#define ROUND1(Ra, Rb, Rc, Rd, Re) \\$/;"	d
ROUND1x	./crypto/sha1/sha1block_386.s	/^#define ROUND1x(a, b, c, d, e, index) \\$/;"	d
ROUND1x	./crypto/sha1/sha1block_amd64.s	/^#define ROUND1x(a, b, c, d, e, index) \\$/;"	d
ROUND1x	./crypto/sha1/sha1block_amd64p32.s	/^#define ROUND1x(a, b, c, d, e, index) \\$/;"	d
ROUND1x	./crypto/sha1/sha1block_arm.s	/^#define ROUND1x(Ra, Rb, Rc, Rd, Re) \\$/;"	d
ROUND2	./crypto/md5/md5block_386.s	/^#define ROUND2(a, b, c, d, index, const, shift) \\$/;"	d
ROUND2	./crypto/md5/md5block_amd64.s	/^#define ROUND2(a, b, c, d, index, const, shift) \\$/;"	d
ROUND2	./crypto/md5/md5block_amd64p32.s	/^#define ROUND2(a, b, c, d, index, const, shift) \\$/;"	d
ROUND2	./crypto/md5/md5block_arm.s	/^#define ROUND2(Ra, Rb, Rc, Rd, index, shift, Rconst) \\$/;"	d
ROUND2	./crypto/sha1/sha1block_386.s	/^#define ROUND2(a, b, c, d, e, index) \\$/;"	d
ROUND2	./crypto/sha1/sha1block_amd64.s	/^#define ROUND2(a, b, c, d, e, index) \\$/;"	d
ROUND2	./crypto/sha1/sha1block_amd64p32.s	/^#define ROUND2(a, b, c, d, e, index) \\$/;"	d
ROUND2	./crypto/sha1/sha1block_arm.s	/^#define ROUND2(Ra, Rb, Rc, Rd, Re) \\$/;"	d
ROUND3	./crypto/md5/md5block_386.s	/^#define ROUND3(a, b, c, d, index, const, shift) \\$/;"	d
ROUND3	./crypto/md5/md5block_amd64.s	/^#define ROUND3(a, b, c, d, index, const, shift) \\$/;"	d
ROUND3	./crypto/md5/md5block_amd64p32.s	/^#define ROUND3(a, b, c, d, index, const, shift) \\$/;"	d
ROUND3	./crypto/md5/md5block_arm.s	/^#define ROUND3(Ra, Rb, Rc, Rd, index, shift, Rconst) \\$/;"	d
ROUND3	./crypto/sha1/sha1block_386.s	/^#define ROUND3(a, b, c, d, e, index) \\$/;"	d
ROUND3	./crypto/sha1/sha1block_amd64.s	/^#define ROUND3(a, b, c, d, e, index) \\$/;"	d
ROUND3	./crypto/sha1/sha1block_amd64p32.s	/^#define ROUND3(a, b, c, d, e, index) \\$/;"	d
ROUND3	./crypto/sha1/sha1block_arm.s	/^#define ROUND3(Ra, Rb, Rc, Rd, Re) \\$/;"	d
ROUND4	./crypto/md5/md5block_386.s	/^#define ROUND4(a, b, c, d, index, const, shift) \\$/;"	d
ROUND4	./crypto/md5/md5block_amd64.s	/^#define ROUND4(a, b, c, d, index, const, shift) \\$/;"	d
ROUND4	./crypto/md5/md5block_amd64p32.s	/^#define ROUND4(a, b, c, d, index, const, shift) \\$/;"	d
ROUND4	./crypto/md5/md5block_arm.s	/^#define ROUND4(Ra, Rb, Rc, Rd, index, shift, Rconst) \\$/;"	d
ROUND4	./crypto/sha1/sha1block_386.s	/^#define ROUND4(a, b, c, d, e, index) \\$/;"	d
ROUND4	./crypto/sha1/sha1block_amd64.s	/^#define ROUND4(a, b, c, d, e, index) \\$/;"	d
ROUND4	./crypto/sha1/sha1block_amd64p32.s	/^#define ROUND4(a, b, c, d, e, index) \\$/;"	d
ROUND4	./crypto/sha1/sha1block_arm.s	/^#define ROUND4(Ra, Rb, Rc, Rd, Re) \\$/;"	d
RSHIFT	./runtime/memmove_arm.s	/^#define RSHIFT	R5$/;"	d
RT	./encoding/gob/codec_test.go	/^	type RT struct {$/;"	t
RT0	./encoding/gob/codec_test.go	/^type RT0 struct {$/;"	t
RT1	./encoding/gob/codec_test.go	/^type RT1 struct {$/;"	t
RTMP	./runtime/vlop_arm.s	/^#define RTMP R11$/;"	d
RUnlock	./sync/rwmutex.go	/^func (rw *RWMutex) RUnlock() {$/;"	f
RWLock	./net/fd_mutex.go	/^func (mu *fdMutex) RWLock(read bool) bool {$/;"	f
RWMutex	./sync/rwmutex.go	/^type RWMutex struct {$/;"	t
RWUnlock	./net/fd_mutex.go	/^func (mu *fdMutex) RWUnlock(read bool) bool {$/;"	f
R_386	./debug/elf/elf.go	/^type R_386 int$/;"	t
R_AARCH64	./debug/elf/elf.go	/^type R_AARCH64 int$/;"	t
R_ALPHA	./debug/elf/elf.go	/^type R_ALPHA int$/;"	t
R_ARM	./debug/elf/elf.go	/^type R_ARM int$/;"	t
R_INFO	./debug/elf/elf.go	/^func R_INFO(sym, typ uint32) uint64 { return uint64(sym)<<32 | uint64(typ) }$/;"	f
R_INFO32	./debug/elf/elf.go	/^func R_INFO32(sym, typ uint32) uint32 { return sym<<8 | typ }$/;"	f
R_PPC	./debug/elf/elf.go	/^type R_PPC int$/;"	t
R_PPC64	./debug/elf/elf.go	/^type R_PPC64 int$/;"	t
R_SPARC	./debug/elf/elf.go	/^type R_SPARC int$/;"	t
R_SYM32	./debug/elf/elf.go	/^func R_SYM32(info uint32) uint32      { return uint32(info >> 8) }$/;"	f
R_SYM64	./debug/elf/elf.go	/^func R_SYM64(info uint64) uint32    { return uint32(info >> 32) }$/;"	f
R_TYPE32	./debug/elf/elf.go	/^func R_TYPE32(info uint32) uint32     { return uint32(info & 0xff) }$/;"	f
R_TYPE64	./debug/elf/elf.go	/^func R_TYPE64(info uint64) uint32   { return uint32(info) }$/;"	f
R_X86_64	./debug/elf/elf.go	/^type R_X86_64 int$/;"	t
Ra	./crypto/md5/md5block_arm.s	/^#define Ra	R2	\/\/ MD5 accumulator$/;"	d
Ra	./crypto/sha1/sha1block_arm.s	/^#define Ra	R2		\/\/ SHA1 accumulator$/;"	d
Ra	./runtime/vlop_arm.s	/^#define Ra	R11$/;"	d
RaceAcquire	./runtime/race1.go	/^func RaceAcquire(addr unsafe.Pointer) {$/;"	f
RaceDisable	./runtime/race1.go	/^func RaceDisable() {$/;"	f
RaceEnable	./runtime/race1.go	/^func RaceEnable() {$/;"	f
RaceRead	./runtime/race.go	/^func RaceRead(addr unsafe.Pointer)$/;"	f
RaceReadRange	./runtime/race.go	/^func RaceReadRange(addr unsafe.Pointer, len int)$/;"	f
RaceRelease	./runtime/race1.go	/^func RaceRelease(addr unsafe.Pointer) {$/;"	f
RaceReleaseMerge	./runtime/race1.go	/^func RaceReleaseMerge(addr unsafe.Pointer) {$/;"	f
RaceSemacquire	./runtime/race.go	/^func RaceSemacquire(s *uint32)$/;"	f
RaceSemrelease	./runtime/race.go	/^func RaceSemrelease(s *uint32)$/;"	f
RaceWrite	./runtime/race.go	/^func RaceWrite(addr unsafe.Pointer)$/;"	f
RaceWriteRange	./runtime/race.go	/^func RaceWriteRange(addr unsafe.Pointer, len int)$/;"	f
Radvisory_t	./syscall/types_darwin.go	/^type Radvisory_t C.struct_radvisory$/;"	t
Radvisory_t	./syscall/ztypes_darwin_386.go	/^type Radvisory_t struct {$/;"	t
Radvisory_t	./syscall/ztypes_darwin_amd64.go	/^type Radvisory_t struct {$/;"	t
Radvisory_t	./syscall/ztypes_darwin_arm.go	/^type Radvisory_t struct {$/;"	t
Radvisory_t	./syscall/ztypes_darwin_arm64.go	/^type Radvisory_t struct {$/;"	t
Rand	./cmd/compile/internal/big/int.go	/^func (z *Int) Rand(rnd *rand.Rand, n *Int) *Int {$/;"	f
Rand	./math/big/int.go	/^func (z *Int) Rand(rnd *rand.Rand, n *Int) *Int {$/;"	f
Rand	./math/rand/rand.go	/^type Rand struct {$/;"	t
Range16	./unicode/letter.go	/^type Range16 struct {$/;"	t
Range32	./unicode/letter.go	/^type Range32 struct {$/;"	t
RangeLoopTests	./cmd/vet/testdata/rangeloop.go	/^func RangeLoopTests() {$/;"	f
RangeNode	./text/template/parse/node.go	/^type RangeNode struct {$/;"	t
RangeTable	./unicode/letter.go	/^type RangeTable struct {$/;"	t
Rat	./cmd/compile/internal/big/float.go	/^func (x *Float) Rat(z *Rat) (*Rat, Accuracy) {$/;"	f
Rat	./cmd/compile/internal/big/rat.go	/^type Rat struct {$/;"	t
Rat	./math/big/float.go	/^func (x *Float) Rat(z *Rat) (*Rat, Accuracy) {$/;"	f
Rat	./math/big/rat.go	/^type Rat struct {$/;"	t
RatString	./cmd/compile/internal/big/ratconv.go	/^func (x *Rat) RatString() string {$/;"	f
RatString	./math/big/ratconv.go	/^func (x *Rat) RatString() string {$/;"	f
RatherStupidConditions	./cmd/vet/testdata/bool.go	/^func RatherStupidConditions() {$/;"	f
Raw	./debug/macho/file.go	/^func (b LoadBytes) Raw() []byte { return b }$/;"	f
RawBytes	./database/sql/sql.go	/^type RawBytes []byte$/;"	t
RawContent	./encoding/asn1/asn1.go	/^type RawContent []byte$/;"	t
RawMessage	./encoding/json/stream.go	/^type RawMessage []byte$/;"	t
RawSockaddr	./syscall/syscall_windows.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/types_darwin.go	/^type RawSockaddr C.struct_sockaddr$/;"	t
RawSockaddr	./syscall/types_dragonfly.go	/^type RawSockaddr C.struct_sockaddr$/;"	t
RawSockaddr	./syscall/types_freebsd.go	/^type RawSockaddr C.struct_sockaddr$/;"	t
RawSockaddr	./syscall/types_linux.go	/^type RawSockaddr C.struct_sockaddr$/;"	t
RawSockaddr	./syscall/types_netbsd.go	/^type RawSockaddr C.struct_sockaddr$/;"	t
RawSockaddr	./syscall/types_openbsd.go	/^type RawSockaddr C.struct_sockaddr$/;"	t
RawSockaddr	./syscall/types_solaris.go	/^type RawSockaddr C.struct_sockaddr$/;"	t
RawSockaddr	./syscall/ztypes_darwin_386.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_darwin_amd64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_darwin_arm.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_darwin_arm64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_dragonfly_amd64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_freebsd_386.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_freebsd_amd64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_freebsd_arm.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_linux_386.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_linux_amd64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_linux_arm.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_linux_arm64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_linux_ppc64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_linux_ppc64le.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_netbsd_386.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_netbsd_amd64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_netbsd_arm.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_openbsd_386.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_openbsd_amd64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_openbsd_arm.go	/^type RawSockaddr struct {$/;"	t
RawSockaddr	./syscall/ztypes_solaris_amd64.go	/^type RawSockaddr struct {$/;"	t
RawSockaddrAny	./syscall/syscall_windows.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/types_darwin.go	/^type RawSockaddrAny C.struct_sockaddr_any$/;"	t
RawSockaddrAny	./syscall/types_dragonfly.go	/^type RawSockaddrAny C.struct_sockaddr_any$/;"	t
RawSockaddrAny	./syscall/types_freebsd.go	/^type RawSockaddrAny C.struct_sockaddr_any$/;"	t
RawSockaddrAny	./syscall/types_linux.go	/^type RawSockaddrAny C.struct_sockaddr_any$/;"	t
RawSockaddrAny	./syscall/types_netbsd.go	/^type RawSockaddrAny C.struct_sockaddr_any$/;"	t
RawSockaddrAny	./syscall/types_openbsd.go	/^type RawSockaddrAny C.struct_sockaddr_any$/;"	t
RawSockaddrAny	./syscall/types_solaris.go	/^type RawSockaddrAny C.struct_sockaddr_any$/;"	t
RawSockaddrAny	./syscall/ztypes_darwin_386.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_darwin_amd64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_darwin_arm.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_darwin_arm64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_dragonfly_amd64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_freebsd_386.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_freebsd_amd64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_freebsd_arm.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_linux_386.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_linux_amd64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_linux_arm.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_linux_arm64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_linux_ppc64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_linux_ppc64le.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_netbsd_386.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_netbsd_amd64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_netbsd_arm.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_openbsd_386.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_openbsd_amd64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_openbsd_arm.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrAny	./syscall/ztypes_solaris_amd64.go	/^type RawSockaddrAny struct {$/;"	t
RawSockaddrDatalink	./syscall/types_darwin.go	/^type RawSockaddrDatalink C.struct_sockaddr_dl$/;"	t
RawSockaddrDatalink	./syscall/types_dragonfly.go	/^type RawSockaddrDatalink C.struct_sockaddr_dl$/;"	t
RawSockaddrDatalink	./syscall/types_freebsd.go	/^type RawSockaddrDatalink C.struct_sockaddr_dl$/;"	t
RawSockaddrDatalink	./syscall/types_netbsd.go	/^type RawSockaddrDatalink C.struct_sockaddr_dl$/;"	t
RawSockaddrDatalink	./syscall/types_openbsd.go	/^type RawSockaddrDatalink C.struct_sockaddr_dl$/;"	t
RawSockaddrDatalink	./syscall/types_solaris.go	/^type RawSockaddrDatalink C.struct_sockaddr_dl$/;"	t
RawSockaddrDatalink	./syscall/ztypes_darwin_386.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_darwin_amd64.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_darwin_arm.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_darwin_arm64.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_dragonfly_amd64.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_freebsd_386.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_freebsd_amd64.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_freebsd_arm.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_netbsd_386.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_netbsd_amd64.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_netbsd_arm.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_openbsd_386.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_openbsd_amd64.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_openbsd_arm.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrDatalink	./syscall/ztypes_solaris_amd64.go	/^type RawSockaddrDatalink struct {$/;"	t
RawSockaddrInet4	./syscall/syscall_windows.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/types_darwin.go	/^type RawSockaddrInet4 C.struct_sockaddr_in$/;"	t
RawSockaddrInet4	./syscall/types_dragonfly.go	/^type RawSockaddrInet4 C.struct_sockaddr_in$/;"	t
RawSockaddrInet4	./syscall/types_freebsd.go	/^type RawSockaddrInet4 C.struct_sockaddr_in$/;"	t
RawSockaddrInet4	./syscall/types_linux.go	/^type RawSockaddrInet4 C.struct_sockaddr_in$/;"	t
RawSockaddrInet4	./syscall/types_netbsd.go	/^type RawSockaddrInet4 C.struct_sockaddr_in$/;"	t
RawSockaddrInet4	./syscall/types_openbsd.go	/^type RawSockaddrInet4 C.struct_sockaddr_in$/;"	t
RawSockaddrInet4	./syscall/types_solaris.go	/^type RawSockaddrInet4 C.struct_sockaddr_in$/;"	t
RawSockaddrInet4	./syscall/ztypes_darwin_386.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_darwin_amd64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_darwin_arm.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_darwin_arm64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_dragonfly_amd64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_freebsd_386.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_freebsd_amd64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_freebsd_arm.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_linux_386.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_linux_amd64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_linux_arm.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_linux_arm64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_linux_ppc64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_linux_ppc64le.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_netbsd_386.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_netbsd_amd64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_netbsd_arm.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_openbsd_386.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_openbsd_amd64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_openbsd_arm.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet4	./syscall/ztypes_solaris_amd64.go	/^type RawSockaddrInet4 struct {$/;"	t
RawSockaddrInet6	./cmd/api/goapi_test.go	/^				"pkg syscall (darwin-386), type RawSockaddrInet6 struct",$/;"	t
RawSockaddrInet6	./cmd/api/goapi_test.go	/^				"pkg syscall (darwin-amd64), type RawSockaddrInet6 struct",$/;"	t
RawSockaddrInet6	./cmd/api/goapi_test.go	/^				"pkg syscall, type RawSockaddrInet6 struct",$/;"	t
RawSockaddrInet6	./cmd/api/goapi_test.go	/^			out: "+pkg syscall, type RawSockaddrInet6 struct\\n",$/;"	t
RawSockaddrInet6	./syscall/syscall_windows.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/types_darwin.go	/^type RawSockaddrInet6 C.struct_sockaddr_in6$/;"	t
RawSockaddrInet6	./syscall/types_dragonfly.go	/^type RawSockaddrInet6 C.struct_sockaddr_in6$/;"	t
RawSockaddrInet6	./syscall/types_freebsd.go	/^type RawSockaddrInet6 C.struct_sockaddr_in6$/;"	t
RawSockaddrInet6	./syscall/types_linux.go	/^type RawSockaddrInet6 C.struct_sockaddr_in6$/;"	t
RawSockaddrInet6	./syscall/types_netbsd.go	/^type RawSockaddrInet6 C.struct_sockaddr_in6$/;"	t
RawSockaddrInet6	./syscall/types_openbsd.go	/^type RawSockaddrInet6 C.struct_sockaddr_in6$/;"	t
RawSockaddrInet6	./syscall/types_solaris.go	/^type RawSockaddrInet6 C.struct_sockaddr_in6$/;"	t
RawSockaddrInet6	./syscall/ztypes_darwin_386.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_darwin_amd64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_darwin_arm.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_darwin_arm64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_dragonfly_amd64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_freebsd_386.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_freebsd_amd64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_freebsd_arm.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_linux_386.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_linux_amd64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_linux_arm.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_linux_arm64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_linux_ppc64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_linux_ppc64le.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_netbsd_386.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_netbsd_amd64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_netbsd_arm.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_openbsd_386.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_openbsd_amd64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_openbsd_arm.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrInet6	./syscall/ztypes_solaris_amd64.go	/^type RawSockaddrInet6 struct {$/;"	t
RawSockaddrLinklayer	./syscall/types_linux.go	/^type RawSockaddrLinklayer C.struct_sockaddr_ll$/;"	t
RawSockaddrLinklayer	./syscall/ztypes_linux_386.go	/^type RawSockaddrLinklayer struct {$/;"	t
RawSockaddrLinklayer	./syscall/ztypes_linux_amd64.go	/^type RawSockaddrLinklayer struct {$/;"	t
RawSockaddrLinklayer	./syscall/ztypes_linux_arm.go	/^type RawSockaddrLinklayer struct {$/;"	t
RawSockaddrLinklayer	./syscall/ztypes_linux_arm64.go	/^type RawSockaddrLinklayer struct {$/;"	t
RawSockaddrLinklayer	./syscall/ztypes_linux_ppc64.go	/^type RawSockaddrLinklayer struct {$/;"	t
RawSockaddrLinklayer	./syscall/ztypes_linux_ppc64le.go	/^type RawSockaddrLinklayer struct {$/;"	t
RawSockaddrNetlink	./syscall/types_linux.go	/^type RawSockaddrNetlink C.struct_sockaddr_nl$/;"	t
RawSockaddrNetlink	./syscall/ztypes_linux_386.go	/^type RawSockaddrNetlink struct {$/;"	t
RawSockaddrNetlink	./syscall/ztypes_linux_amd64.go	/^type RawSockaddrNetlink struct {$/;"	t
RawSockaddrNetlink	./syscall/ztypes_linux_arm.go	/^type RawSockaddrNetlink struct {$/;"	t
RawSockaddrNetlink	./syscall/ztypes_linux_arm64.go	/^type RawSockaddrNetlink struct {$/;"	t
RawSockaddrNetlink	./syscall/ztypes_linux_ppc64.go	/^type RawSockaddrNetlink struct {$/;"	t
RawSockaddrNetlink	./syscall/ztypes_linux_ppc64le.go	/^type RawSockaddrNetlink struct {$/;"	t
RawSockaddrUnix	./syscall/types_darwin.go	/^type RawSockaddrUnix C.struct_sockaddr_un$/;"	t
RawSockaddrUnix	./syscall/types_dragonfly.go	/^type RawSockaddrUnix C.struct_sockaddr_un$/;"	t
RawSockaddrUnix	./syscall/types_freebsd.go	/^type RawSockaddrUnix C.struct_sockaddr_un$/;"	t
RawSockaddrUnix	./syscall/types_linux.go	/^type RawSockaddrUnix C.struct_my_sockaddr_un$/;"	t
RawSockaddrUnix	./syscall/types_netbsd.go	/^type RawSockaddrUnix C.struct_sockaddr_un$/;"	t
RawSockaddrUnix	./syscall/types_openbsd.go	/^type RawSockaddrUnix C.struct_sockaddr_un$/;"	t
RawSockaddrUnix	./syscall/types_solaris.go	/^type RawSockaddrUnix C.struct_sockaddr_un$/;"	t
RawSockaddrUnix	./syscall/ztypes_darwin_386.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_darwin_amd64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_darwin_arm.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_darwin_arm64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_dragonfly_amd64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_freebsd_386.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_freebsd_amd64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_freebsd_arm.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_linux_386.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_linux_amd64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_linux_arm.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_linux_arm64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_linux_ppc64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_linux_ppc64le.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_netbsd_386.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_netbsd_amd64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_netbsd_arm.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_openbsd_386.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_openbsd_amd64.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_openbsd_arm.go	/^type RawSockaddrUnix struct {$/;"	t
RawSockaddrUnix	./syscall/ztypes_solaris_amd64.go	/^type RawSockaddrUnix struct {$/;"	t
RawStdEncoding	./encoding/base64/base64.go	/^var RawStdEncoding = StdEncoding.WithPadding(NoPadding)$/;"	v
RawSyscall	./syscall/syscall_nacl.go	/^func RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)           { return 0, 0, ENOSYS }$/;"	f
RawSyscall	./syscall/syscall_plan9.go	/^func RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr)$/;"	f
RawSyscall	./syscall/syscall_unix.go	/^func RawSyscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
RawSyscall6	./syscall/syscall_nacl.go	/^func RawSyscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno) {$/;"	f
RawSyscall6	./syscall/syscall_plan9.go	/^func RawSyscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr)$/;"	f
RawSyscall6	./syscall/syscall_unix.go	/^func RawSyscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
RawToken	./encoding/xml/xml.go	/^func (d *Decoder) RawToken() (Token, error) {$/;"	f
RawURLEncoding	./encoding/base64/base64.go	/^var RawURLEncoding = URLEncoding.WithPadding(NoPadding)$/;"	v
RawValue	./encoding/asn1/asn1.go	/^type RawValue struct {$/;"	t
Rb	./crypto/md5/md5block_arm.s	/^#define Rb	R3	\/\/ MD5 accumulator$/;"	d
Rb	./crypto/sha1/sha1block_arm.s	/^#define Rb	R3		\/\/ SHA1 accumulator$/;"	d
Rc	./crypto/md5/md5block_arm.s	/^#define Rc	R4	\/\/ MD5 accumulator$/;"	d
Rc	./crypto/sha1/sha1block_arm.s	/^#define Rc	R4		\/\/ SHA1 accumulator$/;"	d
Rc0	./crypto/md5/md5block_arm.s	/^#define Rc0	R6	\/\/ MD5 constant$/;"	d
Rc1	./crypto/md5/md5block_arm.s	/^#define Rc1	R7	\/\/ MD5 constant$/;"	d
Rc2	./crypto/md5/md5block_arm.s	/^#define Rc2	R8	\/\/ MD5 constant$/;"	d
Rc3	./crypto/md5/md5block_arm.s	/^#define Rc3	R11	\/\/ MD5 constant$/;"	d
Rconst	./crypto/sha1/sha1block_arm.s	/^#define Rconst	R1	\/\/ Current constant for SHA round$/;"	d
Rconv	./cmd/internal/obj/arm/list5.go	/^func Rconv(r int) string {$/;"	f
Rconv	./cmd/internal/obj/arm64/list7.go	/^func Rconv(r int) string {$/;"	f
Rconv	./cmd/internal/obj/ppc64/list9.go	/^func Rconv(r int) string {$/;"	f
Rconv	./cmd/internal/obj/util.go	/^func Rconv(reg int) string {$/;"	f
Rconv	./cmd/internal/obj/x86/list6.go	/^func Rconv(r int) string {$/;"	f
Rcpt	./net/smtp/smtp.go	/^func (c *Client) Rcpt(to string) error {$/;"	f
Rctr	./crypto/sha1/sha1block_arm.s	/^#define Rctr	R12	\/\/ loop counter$/;"	d
Rd	./crypto/md5/md5block_arm.s	/^#define Rd	R5	\/\/ MD5 accumulator$/;"	d
Rd	./crypto/sha1/sha1block_arm.s	/^#define Rd	R5		\/\/ SHA1 accumulator$/;"	d
Rdata	./crypto/md5/md5block_arm.s	/^#define Rdata	R1	\/\/ Pointer to data to hash$/;"	d
Rdata	./crypto/sha1/sha1block_arm.s	/^#define Rdata	R0	\/\/ Pointer to incoming data$/;"	d
Rdst	./crypto/rc4/rc4_arm.s	/^#define Rdst	R0$/;"	d
Re	./crypto/sha1/sha1block_arm.s	/^#define Re	R6		\/\/ SHA1 accumulator$/;"	d
Read	./archive/tar/reader.go	/^func (rfr *regFileReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./archive/tar/reader.go	/^func (sfr *sparseFileReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./archive/tar/reader.go	/^func (tr *Reader) Read(b []byte) (n int, err error) {$/;"	f
Read	./archive/zip/reader.go	/^func (r *checksumReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./bufio/bufio.go	/^func (b *Reader) Read(p []byte) (n int, err error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (r *StringReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (r *emptyThenNonEmptyReader) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (r *errorThenGoodReader) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (r *negativeReader) Read([]byte) (int, error) { return -1, nil }$/;"	f
Read	./bufio/bufio_test.go	/^func (r dataAndEOFReader) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (r errorReaderFromTest) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (r errorWriterToTest) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (r13 *rot13Reader) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (sr *scriptedReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (t *testReader) Read(buf []byte) (n int, err error) {$/;"	f
Read	./bufio/bufio_test.go	/^func (zeroReader) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/scan_test.go	/^func (alwaysError) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/scan_test.go	/^func (endlessZeros) Read(p []byte) (int, error) {$/;"	f
Read	./bufio/scan_test.go	/^func (sr *slowReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./bytes/buffer.go	/^func (b *Buffer) Read(p []byte) (n int, err error) {$/;"	f
Read	./bytes/reader.go	/^func (r *Reader) Read(b []byte) (n int, err error) {$/;"	f
Read	./cmd/internal/obj/util.go	/^func (b *Biobuf) Read(p []byte) (int, error) {$/;"	f
Read	./cmd/pack/pack_test.go	/^func (f *FakeFile) Read(p []byte) (int, error) {$/;"	f
Read	./compress/bzip2/bzip2.go	/^func (bz2 *reader) Read(buf []byte) (n int, err error) {$/;"	f
Read	./compress/flate/deflate_test.go	/^func (b *syncBuffer) Read(p []byte) (n int, err error) {$/;"	f
Read	./compress/flate/deflate_test.go	/^func (r *sparseReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./compress/flate/inflate.go	/^func (f *decompressor) Read(b []byte) (int, error) {$/;"	f
Read	./compress/gzip/gunzip.go	/^func (z *Reader) Read(p []byte) (n int, err error) {$/;"	f
Read	./compress/lzw/reader.go	/^func (d *decoder) Read(b []byte) (int, error) {$/;"	f
Read	./compress/zlib/reader.go	/^func (z *reader) Read(p []byte) (n int, err error) {$/;"	f
Read	./crypto/cipher/io.go	/^func (r StreamReader) Read(dst []byte) (n int, err error) {$/;"	f
Read	./crypto/ecdsa/ecdsa.go	/^func (z *zr) Read(dst []byte) (n int, err error) {$/;"	f
Read	./crypto/rand/rand.go	/^func Read(b []byte) (n int, err error) {$/;"	f
Read	./crypto/rand/rand_unix.go	/^func (hr hideAgainReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./crypto/rand/rand_unix.go	/^func (r *devReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./crypto/rand/rand_unix.go	/^func (r *reader) Read(b []byte) (n int, err error) {$/;"	f
Read	./crypto/rand/rand_windows.go	/^func (r *rngReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./crypto/tls/conn.go	/^func (b *block) Read(p []byte) (n int, err error) {$/;"	f
Read	./crypto/tls/conn.go	/^func (c *Conn) Read(b []byte) (n int, err error) {$/;"	f
Read	./crypto/tls/handshake_client_test.go	/^func (b blockingSource) Read([]byte) (n int, err error) {$/;"	f
Read	./crypto/tls/handshake_server_test.go	/^func (zeroSource) Read(b []byte) (n int, err error) {$/;"	f
Read	./crypto/tls/handshake_test.go	/^func (r *recordingConn) Read(b []byte) (n int, err error) {$/;"	f
Read	./encoding/ascii85/ascii85.go	/^func (d *decoder) Read(p []byte) (n int, err error) {$/;"	f
Read	./encoding/base32/base32.go	/^func (d *decoder) Read(p []byte) (n int, err error) {$/;"	f
Read	./encoding/base32/base32.go	/^func (r *newlineFilteringReader) Read(p []byte) (int, error) {$/;"	f
Read	./encoding/base64/base64.go	/^func (d *decoder) Read(p []byte) (n int, err error) {$/;"	f
Read	./encoding/base64/base64.go	/^func (r *newlineFilteringReader) Read(p []byte) (int, error) {$/;"	f
Read	./encoding/base64/base64_test.go	/^func (r *faultInjectReader) Read(p []byte) (int, error) {$/;"	f
Read	./encoding/binary/binary.go	/^func Read(r io.Reader, order ByteOrder, data interface{}) error {$/;"	f
Read	./encoding/binary/binary_test.go	/^func (br *byteSliceReader) Read(p []byte) (int, error) {$/;"	f
Read	./encoding/csv/reader.go	/^func (r *Reader) Read() (record []string, err error) {$/;"	f
Read	./encoding/gob/debug.go	/^func (p *peekReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./encoding/gob/decode.go	/^func (d *decBuffer) Read(p []byte) (int, error) {$/;"	f
Read	./encoding/gob/timing_test.go	/^func (b *benchmarkBuf) Read(p []byte) (n int, err error) {$/;"	f
Read	./encoding/xml/xml_test.go	/^func (d *downCaser) Read(p []byte) (int, error) {$/;"	f
Read	./fmt/scan.go	/^func (r *stringReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./fmt/scan.go	/^func (s *ss) Read(buf []byte) (n int, err error) {$/;"	f
Read	./fmt/scan_test.go	/^func (ec *eofCounter) Read(b []byte) (n int, err error) {$/;"	f
Read	./fmt/scan_test.go	/^func (s *myStringReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./fmt/scan_test.go	/^func (s *simpleReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./go/token/serialize.go	/^func (s *FileSet) Read(decode func(interface{}) error) error {$/;"	f
Read	./image/gif/reader.go	/^func (b *blockReader) Read(p []byte) (int, error) {$/;"	f
Read	./image/jpeg/reader_test.go	/^func (r *eofReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./image/png/reader.go	/^func (d *decoder) Read(p []byte) (int, error) {$/;"	f
Read	./index/suffixarray/suffixarray.go	/^func (x *Index) Read(r io.Reader) error {$/;"	f
Read	./io/io.go	/^func (l *LimitedReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./io/io.go	/^func (s *SectionReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./io/io.go	/^func (t *teeReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./io/io_test.go	/^func (r *dataAndErrorBuffer) Read(p []byte) (n int, err error) {$/;"	f
Read	./io/io_test.go	/^func (r zeroErrReader) Read(p []byte) (int, error) {$/;"	f
Read	./io/io_test.go	/^func (wantedAndErrReader) Read(p []byte) (int, error) {$/;"	f
Read	./io/multi.go	/^func (mr *multiReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./io/pipe.go	/^func (r *PipeReader) Read(data []byte) (n int, err error) {$/;"	f
Read	./mime/multipart/multipart.go	/^func (p *Part) Read(d []byte) (n int, err error) {$/;"	f
Read	./mime/multipart/multipart.go	/^func (pr partReader) Read(d []byte) (n int, err error) {$/;"	f
Read	./mime/multipart/multipart_test.go	/^func (mr *maliciousReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./mime/multipart/multipart_test.go	/^func (s *slowReader) Read(p []byte) (int, error) {$/;"	f
Read	./mime/quotedprintable/reader.go	/^func (r *Reader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/fd_plan9.go	/^func (fd *netFD) Read(b []byte) (n int, err error) {$/;"	f
Read	./net/fd_unix.go	/^func (fd *netFD) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/fd_windows.go	/^func (fd *netFD) Read(buf []byte) (int, error) {$/;"	f
Read	./net/http/cgi/matryoshka_test.go	/^func (b neverEnding) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/client.go	/^func (b *cancelTimerBody) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/client_test.go	/^func (f eofReaderFunc) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/fcgi/fcgi_test.go	/^func (c *writeOnlyConn) Read(p []byte) (int, error) {$/;"	f
Read	./net/http/httputil/dump.go	/^func (b neverEnding) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/httputil/dump.go	/^func (failureToReadBody) Read([]byte) (int, error) { return 0, errNoBody }$/;"	f
Read	./net/http/httputil/dump.go	/^func (r *delegateReader) Read(p []byte) (int, error) {$/;"	f
Read	./net/http/httputil/persist.go	/^func (cc *ClientConn) Read(req *http.Request) (resp *http.Response, err error) {$/;"	f
Read	./net/http/httputil/persist.go	/^func (sc *ServerConn) Read() (req *http.Request, err error) {$/;"	f
Read	./net/http/httputil/reverseproxy.go	/^func (c *runOnFirstRead) Read(bs []byte) (int, error) {$/;"	f
Read	./net/http/internal/chunked.go	/^func (cr *chunkedReader) Read(b []uint8) (n int, err error) {$/;"	f
Read	./net/http/request.go	/^func (l *maxBytesReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/request_test.go	/^func (dr delayedEOFReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/request_test.go	/^func (r *infiniteReader) Read(b []byte) (int, error) {$/;"	f
Read	./net/http/serve_test.go	/^func (b neverEnding) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/serve_test.go	/^func (c *slowTestConn) Read(b []byte) (n int, err error) {$/;"	f
Read	./net/http/serve_test.go	/^func (c *testConn) Read(b []byte) (int, error) {$/;"	f
Read	./net/http/serve_test.go	/^func (cr countReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/serve_test.go	/^func (r *repeatReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/server.go	/^func (c *loggingConn) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/server.go	/^func (ecr *expectContinueReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/server.go	/^func (eofReaderWithWriteTo) Read([]byte) (int, error)         { return 0, io.EOF }$/;"	f
Read	./net/http/server.go	/^func (sr *liveSwitchReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transfer.go	/^func (b *body) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transfer.go	/^func (bl bodyLocked) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transfer.go	/^func (r errorReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transport.go	/^func (es *bodyEOFSignal) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transport.go	/^func (gz *gzipReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transport.go	/^func (nr noteEOFReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transport_test.go	/^func (c *logWritesConn) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transport_test.go	/^func (c byteFromChanReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./net/http/transport_test.go	/^func (e errorReader) Read(p []byte) (int, error) { return 0, e.err }$/;"	f
Read	./net/net.go	/^func (c *conn) Read(b []byte) (int, error) {$/;"	f
Read	./net/rpc/server_test.go	/^func (w *writeCrasher) Read(p []byte) (int, error) {$/;"	f
Read	./net/textproto/reader.go	/^func (d *dotReader) Read(b []byte) (n int, err error) {$/;"	f
Read	./net/timeout_test.go	/^func (b neverEnding) Read(p []byte) (int, error) {$/;"	f
Read	./os/file.go	/^func (f *File) Read(b []byte) (n int, err error) {$/;"	f
Read	./runtime/export_test.go	/^var Read = read$/;"	v
Read	./runtime/race/testdata/mop_test.go	/^func (*OsFile) Read() {$/;"	f
Read	./strings/reader.go	/^func (r *Reader) Read(b []byte) (n int, err error) {$/;"	f
Read	./syscall/fd_nacl.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f
Read	./syscall/syscall_plan9.go	/^func Read(fd int, p []byte) (n int, err error) {$/;"	f
Read	./syscall/syscall_unix.go	/^func Read(fd int, p []byte) (n int, err error) {$/;"	f
Read	./syscall/syscall_windows.go	/^func Read(fd Handle, p []byte) (n int, err error) {$/;"	f
Read	./testing/iotest/logger.go	/^func (l *readLogger) Read(p []byte) (n int, err error) {$/;"	f
Read	./testing/iotest/reader.go	/^func (r *dataErrReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./testing/iotest/reader.go	/^func (r *halfReader) Read(p []byte) (int, error) {$/;"	f
Read	./testing/iotest/reader.go	/^func (r *oneByteReader) Read(p []byte) (int, error) {$/;"	f
Read	./testing/iotest/reader.go	/^func (r *timeoutReader) Read(p []byte) (int, error) {$/;"	f
Read	./text/scanner/scanner_test.go	/^func (errReader) Read(b []byte) (int, error) {$/;"	f
Read	./text/scanner/scanner_test.go	/^func (r *StringReader) Read(p []byte) (n int, err error) {$/;"	f
Read	./text/scanner/scanner_test.go	/^func (r *countReader) Read([]byte) (int, error) {$/;"	f
ReadAll	./encoding/csv/reader.go	/^func (r *Reader) ReadAll() (records [][]string, err error) {$/;"	f
ReadAll	./io/ioutil/ioutil.go	/^func ReadAll(r io.Reader) ([]byte, error) {$/;"	f
ReadAt	./archive/zip/zip_test.go	/^func (r *rleBuffer) ReadAt(p []byte, off int64) (n int, err error) {$/;"	f
ReadAt	./bytes/reader.go	/^func (r *Reader) ReadAt(b []byte, off int64) (n int, err error) {$/;"	f
ReadAt	./cmd/internal/objfile/disasm.go	/^func (r textReader) ReadAt(data []byte, off int64) (n int, err error) {$/;"	f
ReadAt	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func (r loadCmdReader) ReadAt(offset int64, data interface{}) error {$/;"	f
ReadAt	./io/io.go	/^func (s *SectionReader) ReadAt(p []byte, off int64) (n int, err error) {$/;"	f
ReadAt	./os/file.go	/^func (f *File) ReadAt(b []byte, off int64) (n int, err error) {$/;"	f
ReadAt	./strings/reader.go	/^func (r *Reader) ReadAt(b []byte, off int64) (n int, err error) {$/;"	f
ReadAtLeast	./io/io.go	/^func ReadAtLeast(r Reader, buf []byte, min int) (n int, err error) {$/;"	f
ReadBit	./compress/bzip2/bit_reader.go	/^func (br *bitReader) ReadBit() bool {$/;"	f
ReadBits	./compress/bzip2/bit_reader.go	/^func (br *bitReader) ReadBits(bits uint) (n int) {$/;"	f
ReadBits64	./compress/bzip2/bit_reader.go	/^func (br *bitReader) ReadBits64(bits uint) (n uint64) {$/;"	f
ReadBuildIDFromBinary	./cmd/go/pkg.go	/^func ReadBuildIDFromBinary(filename string) (id string, err error) {$/;"	f
ReadByte	./bufio/bufio.go	/^func (b *Reader) ReadByte() (c byte, err error) {$/;"	f
ReadByte	./bytes/buffer.go	/^func (b *Buffer) ReadByte() (c byte, err error) {$/;"	f
ReadByte	./bytes/reader.go	/^func (r *Reader) ReadByte() (b byte, err error) {$/;"	f
ReadByte	./cmd/compile/internal/big/intconv.go	/^func (r byteReader) ReadByte() (byte, error) {$/;"	f
ReadByte	./encoding/gob/decode.go	/^func (d *decBuffer) ReadByte() (byte, error) {$/;"	f
ReadByte	./encoding/gob/timing_test.go	/^func (b *benchmarkBuf) ReadByte() (c byte, err error) {$/;"	f
ReadByte	./encoding/xml/xml_test.go	/^func (d *downCaser) ReadByte() (c byte, err error) {$/;"	f
ReadByte	./math/big/intconv.go	/^func (r byteReader) ReadByte() (byte, error) {$/;"	f
ReadByte	./strings/reader.go	/^func (r *Reader) ReadByte() (b byte, err error) {$/;"	f
ReadBytes	./bufio/bufio.go	/^func (b *Reader) ReadBytes(delim byte) (line []byte, err error) {$/;"	f
ReadBytes	./bytes/buffer.go	/^func (b *Buffer) ReadBytes(delim byte) (line []byte, err error) {$/;"	f
ReadCloser	./archive/zip/reader.go	/^type ReadCloser struct {$/;"	t
ReadCloser	./io/io.go	/^type ReadCloser interface {$/;"	t
ReadCodeLine	./net/textproto/reader.go	/^func (r *Reader) ReadCodeLine(expectCode int) (code int, message string, err error) {$/;"	f
ReadConsole	./syscall/zsyscall_windows.go	/^func ReadConsole(console Handle, buf *uint16, toread uint32, read *uint32, inputControl *byte) (err error) {$/;"	f
ReadContinuedLine	./net/textproto/reader.go	/^func (r *Reader) ReadContinuedLine() (string, error) {$/;"	f
ReadContinuedLineBytes	./net/textproto/reader.go	/^func (r *Reader) ReadContinuedLineBytes() ([]byte, error) {$/;"	f
ReadDir	./io/ioutil/ioutil.go	/^func ReadDir(dirname string) ([]os.FileInfo, error) {$/;"	f
ReadDirectoryChanges	./syscall/zsyscall_windows.go	/^func ReadDirectoryChanges(handle Handle, buf *byte, buflen uint32, watchSubTree bool, mask uint32, retlen *uint32, overlapped *Overlapped, completionRoutine uintptr) (err error) {$/;"	f
ReadDirent	./syscall/fs_nacl.go	/^func ReadDirent(fd int, buf []byte) (int, error) {$/;"	f
ReadDirent	./syscall/syscall_bsd.go	/^func ReadDirent(fd int, buf []byte) (n int, err error) {$/;"	f
ReadDirent	./syscall/syscall_linux.go	/^func ReadDirent(fd int, buf []byte) (n int, err error) {$/;"	f
ReadDirent	./syscall/syscall_solaris.go	/^func ReadDirent(fd int, buf []byte) (n int, err error) {$/;"	f
ReadDotBytes	./net/textproto/reader.go	/^func (r *Reader) ReadDotBytes() ([]byte, error) {$/;"	f
ReadDotLines	./net/textproto/reader.go	/^func (r *Reader) ReadDotLines() ([]string, error) {$/;"	f
ReadError	./compress/flate/inflate.go	/^type ReadError struct {$/;"	t
ReadFile	./io/ioutil/ioutil.go	/^func ReadFile(filename string) ([]byte, error) {$/;"	f
ReadFile	./syscall/zsyscall_windows.go	/^func ReadFile(handle Handle, buf []byte, done *uint32, overlapped *Overlapped) (err error) {$/;"	f
ReadForm	./mime/multipart/formdata.go	/^func (r *Reader) ReadForm(maxMemory int64) (f *Form, err error) {$/;"	f
ReadFrom	./bufio/bufio.go	/^func (b *Writer) ReadFrom(r io.Reader) (n int64, err error) {$/;"	f
ReadFrom	./bytes/buffer.go	/^func (b *Buffer) ReadFrom(r io.Reader) (n int64, err error) {$/;"	f
ReadFrom	./io/ioutil/ioutil.go	/^func (devNull) ReadFrom(r io.Reader) (n int64, err error) {$/;"	f
ReadFrom	./net/http/server.go	/^func (w *response) ReadFrom(src io.Reader) (n int64, err error) {$/;"	f
ReadFrom	./net/iprawsock_plan9.go	/^func (c *IPConn) ReadFrom(b []byte) (int, Addr, error) {$/;"	f
ReadFrom	./net/iprawsock_posix.go	/^func (c *IPConn) ReadFrom(b []byte) (int, Addr, error) {$/;"	f
ReadFrom	./net/tcpsock_plan9.go	/^func (c *TCPConn) ReadFrom(r io.Reader) (int64, error) {$/;"	f
ReadFrom	./net/tcpsock_posix.go	/^func (c *TCPConn) ReadFrom(r io.Reader) (int64, error) {$/;"	f
ReadFrom	./net/udpsock_plan9.go	/^func (c *UDPConn) ReadFrom(b []byte) (int, Addr, error) {$/;"	f
ReadFrom	./net/udpsock_posix.go	/^func (c *UDPConn) ReadFrom(b []byte) (int, Addr, error) {$/;"	f
ReadFrom	./net/unixsock_plan9.go	/^func (c *UnixConn) ReadFrom(b []byte) (int, Addr, error) {$/;"	f
ReadFrom	./net/unixsock_posix.go	/^func (c *UnixConn) ReadFrom(b []byte) (int, Addr, error) {$/;"	f
ReadFromIP	./net/iprawsock_plan9.go	/^func (c *IPConn) ReadFromIP(b []byte) (int, *IPAddr, error) {$/;"	f
ReadFromIP	./net/iprawsock_posix.go	/^func (c *IPConn) ReadFromIP(b []byte) (int, *IPAddr, error) {$/;"	f
ReadFromUDP	./net/udpsock_plan9.go	/^func (c *UDPConn) ReadFromUDP(b []byte) (n int, addr *UDPAddr, err error) {$/;"	f
ReadFromUDP	./net/udpsock_posix.go	/^func (c *UDPConn) ReadFromUDP(b []byte) (int, *UDPAddr, error) {$/;"	f
ReadFromUnix	./net/unixsock_plan9.go	/^func (c *UnixConn) ReadFromUnix(b []byte) (int, *UnixAddr, error) {$/;"	f
ReadFromUnix	./net/unixsock_posix.go	/^func (c *UnixConn) ReadFromUnix(b []byte) (int, *UnixAddr, error) {$/;"	f
ReadFull	./io/io.go	/^func ReadFull(r Reader, buf []byte) (n int, err error) {$/;"	f
ReadGCStats	./runtime/debug/garbage.go	/^func ReadGCStats(stats *GCStats) {$/;"	f
ReadGo	./cmd/cgo/ast.go	/^func (f *File) ReadGo(name string) {$/;"	f
ReadLine	./bufio/bufio.go	/^func (b *Reader) ReadLine() (line []byte, isPrefix bool, err error) {$/;"	f
ReadLine	./cmd/pprof/internal/plugin/plugin.go	/^func (ui *stdUI) ReadLine() (string, error) {$/;"	f
ReadLine	./net/textproto/reader.go	/^func (r *Reader) ReadLine() (string, error) {$/;"	f
ReadLineBytes	./net/textproto/reader.go	/^func (r *Reader) ReadLineBytes() ([]byte, error) {$/;"	f
ReadMIMEHeader	./net/textproto/reader.go	/^func (r *Reader) ReadMIMEHeader() (MIMEHeader, error) {$/;"	f
ReadMemStats	./runtime/mstats.go	/^func ReadMemStats(m *MemStats) {$/;"	f
ReadMessage	./net/mail/message.go	/^func ReadMessage(r io.Reader) (msg *Message, err error) {$/;"	f
ReadMode	./compress/flate/deflate_test.go	/^func (b *syncBuffer) ReadMode() {$/;"	f
ReadMsgIP	./net/iprawsock_plan9.go	/^func (c *IPConn) ReadMsgIP(b, oob []byte) (n, oobn, flags int, addr *IPAddr, err error) {$/;"	f
ReadMsgIP	./net/iprawsock_posix.go	/^func (c *IPConn) ReadMsgIP(b, oob []byte) (n, oobn, flags int, addr *IPAddr, err error) {$/;"	f
ReadMsgUDP	./net/udpsock_plan9.go	/^func (c *UDPConn) ReadMsgUDP(b, oob []byte) (n, oobn, flags int, addr *UDPAddr, err error) {$/;"	f
ReadMsgUDP	./net/udpsock_posix.go	/^func (c *UDPConn) ReadMsgUDP(b, oob []byte) (n, oobn, flags int, addr *UDPAddr, err error) {$/;"	f
ReadMsgUnix	./net/unixsock_plan9.go	/^func (c *UnixConn) ReadMsgUnix(b, oob []byte) (n, oobn, flags int, addr *UnixAddr, err error) {$/;"	f
ReadMsgUnix	./net/unixsock_posix.go	/^func (c *UnixConn) ReadMsgUnix(b, oob []byte) (n, oobn, flags int, addr *UnixAddr, err error) {$/;"	f
ReadRequest	./net/http/request.go	/^func ReadRequest(b *bufio.Reader) (req *Request, err error) {$/;"	f
ReadRequestBody	./net/rpc/jsonrpc/server.go	/^func (c *serverCodec) ReadRequestBody(x interface{}) error {$/;"	f
ReadRequestBody	./net/rpc/server.go	/^func (c *gobServerCodec) ReadRequestBody(body interface{}) error {$/;"	f
ReadRequestBody	./net/rpc/server_test.go	/^func (codec *CodecEmulator) ReadRequestBody(argv interface{}) error {$/;"	f
ReadRequestHeader	./net/rpc/jsonrpc/server.go	/^func (c *serverCodec) ReadRequestHeader(r *rpc.Request) error {$/;"	f
ReadRequestHeader	./net/rpc/server.go	/^func (c *gobServerCodec) ReadRequestHeader(r *Request) error {$/;"	f
ReadRequestHeader	./net/rpc/server_test.go	/^func (codec *CodecEmulator) ReadRequestHeader(req *Request) error {$/;"	f
ReadResponse	./net/http/response.go	/^func ReadResponse(r *bufio.Reader, req *Request) (*Response, error) {$/;"	f
ReadResponse	./net/textproto/reader.go	/^func (r *Reader) ReadResponse(expectCode int) (code int, message string, err error) {$/;"	f
ReadResponseBody	./net/rpc/client.go	/^func (c *gobClientCodec) ReadResponseBody(body interface{}) error {$/;"	f
ReadResponseBody	./net/rpc/client_test.go	/^func (c *shutdownCodec) ReadResponseBody(interface{}) error       { return nil }$/;"	f
ReadResponseBody	./net/rpc/jsonrpc/client.go	/^func (c *clientCodec) ReadResponseBody(x interface{}) error {$/;"	f
ReadResponseBody	./net/rpc/server_test.go	/^func (WriteFailCodec) ReadResponseBody(interface{}) error {$/;"	f
ReadResponseHeader	./net/rpc/client.go	/^func (c *gobClientCodec) ReadResponseHeader(r *Response) error {$/;"	f
ReadResponseHeader	./net/rpc/client_test.go	/^func (c *shutdownCodec) ReadResponseHeader(*Response) error {$/;"	f
ReadResponseHeader	./net/rpc/jsonrpc/client.go	/^func (c *clientCodec) ReadResponseHeader(r *rpc.Response) error {$/;"	f
ReadResponseHeader	./net/rpc/server_test.go	/^func (WriteFailCodec) ReadResponseHeader(*Response) error {$/;"	f
ReadRune	./bufio/bufio.go	/^func (b *Reader) ReadRune() (r rune, size int, err error) {$/;"	f
ReadRune	./bytes/buffer.go	/^func (b *Buffer) ReadRune() (r rune, size int, err error) {$/;"	f
ReadRune	./bytes/reader.go	/^func (r *Reader) ReadRune() (ch rune, size int, err error) {$/;"	f
ReadRune	./fmt/scan.go	/^func (r *readRune) ReadRune() (rr rune, size int, err error) {$/;"	f
ReadRune	./fmt/scan.go	/^func (s *ss) ReadRune() (r rune, size int, err error) {$/;"	f
ReadRune	./strings/reader.go	/^func (r *Reader) ReadRune() (ch rune, size int, err error) {$/;"	f
ReadSeeker	./io/io.go	/^type ReadSeeker interface {$/;"	t
ReadSlice	./bufio/bufio.go	/^func (b *Reader) ReadSlice(delim byte) (line []byte, err error) {$/;"	f
ReadString	./bufio/bufio.go	/^func (b *Reader) ReadString(delim byte) (line string, err error) {$/;"	f
ReadString	./bytes/buffer.go	/^func (b *Buffer) ReadString(delim byte) (line string, err error) {$/;"	f
ReadSubKeyNames	./internal/syscall/windows/registry/key.go	/^func (k Key) ReadSubKeyNames(n int) ([]string, error) {$/;"	f
ReadTrace	./runtime/trace.go	/^func ReadTrace() []byte {$/;"	f
ReadUvarint	./encoding/binary/varint.go	/^func ReadUvarint(r io.ByteReader) (uint64, error) {$/;"	f
ReadValueNames	./internal/syscall/windows/registry/value.go	/^func (k Key) ReadValueNames(n int) ([]string, error) {$/;"	f
ReadVarint	./encoding/binary/varint.go	/^func ReadVarint(r io.ByteReader) (int64, error) {$/;"	f
ReadWriteCloser	./io/io.go	/^type ReadWriteCloser interface {$/;"	t
ReadWriteSeeker	./io/io.go	/^type ReadWriteSeeker interface {$/;"	t
ReadWriter	./bufio/bufio.go	/^type ReadWriter struct {$/;"	t
ReadWriter	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^		{pkgpath: "io", name: "ReadWriter", want: "type ReadWriter interface{Reader; Writer}"},$/;"	t
ReadWriter	./go/internal/gcimporter/gcimporter_test.go	/^	{"io.ReadWriter", "type ReadWriter interface{Read(p []byte) (n int, err error); Write(p []byte) (n int, err error)}"},$/;"	t
ReadWriter	./io/io.go	/^type ReadWriter interface {$/;"	t
ReadWriterV	./reflect/all_test.go	/^func ReadWriterV(x io.ReadWriter) Value {$/;"	f
Readdir	./net/http/fs_test.go	/^func (f *fakeFile) Readdir(count int) ([]os.FileInfo, error) {$/;"	f
Readdir	./os/doc.go	/^func (f *File) Readdir(n int) (fi []FileInfo, err error) {$/;"	f
Readdirnames	./os/doc.go	/^func (f *File) Readdirnames(n int) (names []string, err error) {$/;"	f
Reader	./archive/tar/reader.go	/^type Reader struct {$/;"	t
Reader	./archive/zip/reader.go	/^type Reader struct {$/;"	t
Reader	./bufio/bufio.go	/^type Reader struct {$/;"	t
Reader	./bytes/reader.go	/^type Reader struct {$/;"	t
Reader	./compress/flate/inflate.go	/^type Reader interface {$/;"	t
Reader	./compress/gzip/gunzip.go	/^type Reader struct {$/;"	t
Reader	./crypto/rand/rand.go	/^var Reader io.Reader$/;"	v
Reader	./debug/dwarf/entry.go	/^func (d *Data) Reader() *Reader {$/;"	f
Reader	./debug/dwarf/entry.go	/^type Reader struct {$/;"	t
Reader	./encoding/csv/reader.go	/^type Reader struct {$/;"	t
Reader	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^		{pkgpath: "io", name: "Reader", want: "type Reader interface{Read(p []uint8) (n int, err error)}"},$/;"	t
Reader	./go/internal/gcimporter/gcimporter_test.go	/^	{"io.Reader", "type Reader interface{Read(p []byte) (n int, err error)}"},$/;"	t
Reader	./image/jpeg/reader.go	/^type Reader interface {$/;"	t
Reader	./io/io.go	/^type Reader interface {$/;"	t
Reader	./mime/multipart/multipart.go	/^type Reader struct {$/;"	t
Reader	./mime/quotedprintable/reader.go	/^type Reader struct {$/;"	t
Reader	./net/textproto/reader.go	/^type Reader struct {$/;"	t
Reader	./strings/reader.go	/^type Reader struct {$/;"	t
ReaderAt	./io/io.go	/^type ReaderAt interface {$/;"	t
ReaderFrom	./io/io.go	/^type ReaderFrom interface {$/;"	t
ReaderV	./reflect/all_test.go	/^func ReaderV(x io.Reader) Value {$/;"	f
Readlink	./os/file_plan9.go	/^func Readlink(name string) (string, error) {$/;"	f
Readlink	./os/file_posix.go	/^func Readlink(name string) (string, error) {$/;"	f
Readlink	./syscall/fs_nacl.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/syscall_linux.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/syscall_windows.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_darwin_386.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_darwin_amd64.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_darwin_arm.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_darwin_arm64.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_dragonfly_amd64.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_freebsd_386.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_freebsd_amd64.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_freebsd_arm.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_netbsd_386.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_netbsd_amd64.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_netbsd_arm.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_openbsd_386.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_openbsd_amd64.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_openbsd_arm.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Readlink	./syscall/zsyscall_solaris_amd64.go	/^func Readlink(path string, buf []byte) (n int, err error) {$/;"	f
Real	./go/constant/value.go	/^func Real(x Value) Value {$/;"	f
Reboot	./syscall/syscall_linux.go	/^func Reboot(cmd int) (err error) {$/;"	f
Rec	./encoding/gob/codec_test.go	/^	type Rec ***Rec$/;"	t
ReceiverName	./debug/gosym/symtab.go	/^func (s *Sym) ReceiverName() string {$/;"	f
Recipient	./text/template/example_test.go	/^	type Recipient struct {$/;"	t
Record	./cmd/cgo/main.go	/^func (p *Package) Record(f *File) {$/;"	f
Record	./cmd/trace/pprof.go	/^type Record struct {$/;"	t
RecordingJar	./net/http/client_test.go	/^type RecordingJar struct {$/;"	t
Rect	./image/geom.go	/^func Rect(x0, y0, x1, y1 int) Rectangle {$/;"	f
Rect	./math/cmplx/rect.go	/^func Rect(r, θ float64) complex128 {$/;"	f
Rect	./runtime/race/testdata/regression_test.go	/^type Rect struct {$/;"	t
Rect	./runtime/syscall_windows_test.go	/^	type Rect struct {$/;"	t
Rectangle	./image/geom.go	/^type Rectangle struct {$/;"	t
Recur	./fmt/fmt_test.go	/^type Recur struct {$/;"	t
RecurseA	./encoding/xml/marshal_test.go	/^type RecurseA struct {$/;"	t
RecurseB	./encoding/xml/marshal_test.go	/^type RecurseB struct {$/;"	t
Recursive	./reflect/all_test.go	/^type Recursive struct {$/;"	t
Recursive	./testing/quick/quick_test.go	/^	type Recursive struct {$/;"	t
RecursiveInt	./fmt/scan_test.go	/^type RecursiveInt struct {$/;"	t
RecursiveMap	./cmd/vet/testdata/print.go	/^type RecursiveMap map[int]RecursiveMap$/;"	t
RecursiveSlice	./cmd/vet/testdata/print.go	/^type RecursiveSlice []RecursiveSlice$/;"	t
RecursiveStruct	./cmd/vet/testdata/print.go	/^type RecursiveStruct struct {$/;"	t
RecursiveStruct1	./cmd/vet/testdata/print.go	/^type RecursiveStruct1 struct {$/;"	t
RecursiveStruct2	./cmd/vet/testdata/print.go	/^type RecursiveStruct2 struct {$/;"	t
Recv	./go/types/selection.go	/^func (s *Selection) Recv() Type { return s.recv }$/;"	f
Recv	./go/types/type.go	/^func (s *Signature) Recv() *Var { return s.recv }$/;"	f
Recv	./net/rpc/client_test.go	/^func (s *S) Recv(nul *struct{}, reply *R) error {$/;"	f
Recv	./reflect/value.go	/^func (v Value) Recv() (x Value, ok bool) {$/;"	f
Recvfrom	./syscall/net_nacl.go	/^func Recvfrom(fd int, p []byte, flags int) (n int, from Sockaddr, err error) {$/;"	f
Recvfrom	./syscall/syscall_unix.go	/^func Recvfrom(fd int, p []byte, flags int) (n int, from Sockaddr, err error) {$/;"	f
Recvfrom	./syscall/syscall_windows.go	/^func Recvfrom(fd Handle, p []byte, flags int) (n int, from Sockaddr, err error) {$/;"	f
Recvmsg	./syscall/net_nacl.go	/^func Recvmsg(fd int, p, oob []byte, flags int) (n, oobn, recvflags int, from Sockaddr, err error) {$/;"	f
Recvmsg	./syscall/syscall_bsd.go	/^func Recvmsg(fd int, p, oob []byte, flags int) (n, oobn int, recvflags int, from Sockaddr, err error) {$/;"	f
Recvmsg	./syscall/syscall_linux.go	/^func Recvmsg(fd int, p, oob []byte, flags int) (n, oobn int, recvflags int, from Sockaddr, err error) {$/;"	f
Recvmsg	./syscall/syscall_solaris.go	/^func Recvmsg(fd int, p, oob []byte, flags int) (n, oobn int, recvflags int, from Sockaddr, err error) {$/;"	f
Redirect	./net/http/server.go	/^func Redirect(w ResponseWriter, r *Request, urlStr string, code int) {$/;"	f
RedirectHandler	./net/http/server.go	/^func RedirectHandler(url string, code int) Handler {$/;"	f
Ref	./cmd/cgo/main.go	/^type Ref struct {$/;"	t
Ref	./encoding/json/encode_test.go	/^type Ref int$/;"	t
RefText	./encoding/json/encode_test.go	/^type RefText int$/;"	t
Referer	./net/http/request.go	/^func (r *Request) Referer() string {$/;"	f
Reg	./cmd/compile/internal/gc/reg.go	/^type Reg struct {$/;"	t
Reg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Reg uint8$/;"	t
Reg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Reg uint8$/;"	t
RegCloseKey	./syscall/zsyscall_windows.go	/^func RegCloseKey(key Handle) (regerrno error) {$/;"	f
RegEnumKeyEx	./syscall/zsyscall_windows.go	/^func RegEnumKeyEx(key Handle, index uint32, name *uint16, nameLen *uint32, reserved *uint32, class *uint16, classLen *uint32, lastWriteTime *Filetime) (regerrno error) {$/;"	f
RegList	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type RegList uint16$/;"	t
RegMMST	./runtime/defs_darwin.go	/^type RegMMST C.struct_mmst_reg$/;"	t
RegOpenKeyEx	./syscall/zsyscall_windows.go	/^func RegOpenKeyEx(key Handle, subkey *uint16, options uint32, desiredAccess uint32, result *Handle) (regerrno error) {$/;"	f
RegQueryInfoKey	./syscall/zsyscall_windows.go	/^func RegQueryInfoKey(key Handle, class *uint16, classLen *uint32, reserved *uint32, subkeysLen *uint32, maxSubkeyLen *uint32, maxClassLen *uint32, valuesLen *uint32, maxValueNameLen *uint32, maxValueLen *uint32, saLen *uint32, lastWriteTime *Filetime) (regerrno error) {$/;"	f
RegQueryValueEx	./syscall/zsyscall_windows.go	/^func RegQueryValueEx(key Handle, name *uint16, reserved *uint32, valtype *uint32, buf *byte, buflen *uint32) (regerrno error) {$/;"	f
RegShift	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type RegShift struct {$/;"	t
RegShiftReg	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type RegShiftReg struct {$/;"	t
RegX	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type RegX struct {$/;"	t
RegXMM	./runtime/defs_darwin.go	/^type RegXMM C.struct_xmm_reg$/;"	t
Regalloc	./cmd/compile/internal/gc/gsubr.go	/^func Regalloc(n *Node, t *Type, o *Node) {$/;"	f
Regdump	./cmd/compile/internal/gc/gsubr.go	/^func Regdump() {$/;"	f
Regexp	./regexp/regexp.go	/^type Regexp struct {$/;"	t
Regexp	./regexp/syntax/regexp.go	/^type Regexp struct {$/;"	t
Regfree	./cmd/compile/internal/gc/gsubr.go	/^func Regfree(n *Node) {$/;"	f
Reginuse	./cmd/compile/internal/gc/gsubr.go	/^func Reginuse(r int) bool {$/;"	f
Register	./cmd/internal/obj/x86/list6.go	/^var Register = []string{$/;"	v
Register	./database/sql/sql.go	/^func Register(name string, driver driver.Driver) {$/;"	f
Register	./encoding/gob/type.go	/^func Register(value interface{}) {$/;"	f
Register	./net/rpc/server.go	/^func (server *Server) Register(rcvr interface{}) error {$/;"	f
Register	./net/rpc/server.go	/^func Register(rcvr interface{}) error { return DefaultServer.Register(rcvr) }$/;"	f
RegisterCompressor	./archive/zip/register.go	/^func RegisterCompressor(method uint16, comp Compressor) {$/;"	f
RegisterCover	./testing/cover.go	/^func RegisterCover(c Cover) {$/;"	f
RegisterDecompressor	./archive/zip/register.go	/^func RegisterDecompressor(method uint16, d Decompressor) {$/;"	f
RegisterFormat	./image/format.go	/^func RegisterFormat(name, magic string, decode func(io.Reader) (Image, error), decodeConfig func(io.Reader) (Config, error)) {$/;"	f
RegisterHash	./crypto/crypto.go	/^func RegisterHash(h Hash, f func() hash.Hash) {$/;"	f
RegisterName	./encoding/gob/type.go	/^func RegisterName(name string, value interface{}) {$/;"	f
RegisterName	./net/rpc/server.go	/^func (server *Server) RegisterName(name string, rcvr interface{}) error {$/;"	f
RegisterName	./net/rpc/server.go	/^func RegisterName(name string, rcvr interface{}) error {$/;"	f
RegisterOpcode	./cmd/internal/obj/util.go	/^func RegisterOpcode(lo int, Anames []string) {$/;"	f
RegisterProtocol	./net/http/transport.go	/^func (t *Transport) RegisterProtocol(scheme string, rt RoundTripper) {$/;"	f
RegisterRegister	./cmd/internal/obj/util.go	/^func RegisterRegister(lo, hi int, Rconv func(int) string) {$/;"	f
Regrealloc	./cmd/compile/internal/gc/gsubr.go	/^func Regrealloc(n *Node) {$/;"	f
Regs32	./runtime/defs_darwin.go	/^type Regs32 C.struct_i386_thread_state$/;"	t
Regs386	./debug/macho/macho.go	/^type Regs386 struct {$/;"	t
Regs64	./runtime/defs_darwin.go	/^type Regs64 C.struct_x86_thread_state64$/;"	t
RegsAMD64	./debug/macho/macho.go	/^type RegsAMD64 struct {$/;"	t
Rel	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^type Rel int32$/;"	t
Rel	./path/filepath/path.go	/^func Rel(basepath, targpath string) (string, error) {$/;"	f
Rel32	./debug/elf/elf.go	/^type Rel32 struct {$/;"	t
Rel64	./debug/elf/elf.go	/^type Rel64 struct {$/;"	t
RelTests	./path/filepath/path_test.go	/^type RelTests struct {$/;"	t
Rela32	./debug/elf/elf.go	/^type Rela32 struct {$/;"	t
Rela64	./debug/elf/elf.go	/^type Rela64 struct {$/;"	t
RelatedGoroutines	./internal/trace/goroutines.go	/^func RelatedGoroutines(events []*Event, goid uint64) map[uint64]bool {$/;"	f
RelativeDistinguishedNameSET	./crypto/x509/pkix/pkix.go	/^type RelativeDistinguishedNameSET []AttributeTypeAndValue$/;"	t
RelativeDistinguishedNameSET	./encoding/asn1/asn1_test.go	/^type RelativeDistinguishedNameSET []AttributeTypeAndValue$/;"	t
RelativeTo	./go/types/typestring.go	/^func RelativeTo(pkg *Package) Qualifier {$/;"	f
Release	./os/doc.go	/^func (p *Process) Release() error {$/;"	f
Release	./syscall/dll_windows.go	/^func (d *DLL) Release() (err error) {$/;"	f
Reloc	./cmd/internal/goobj/read.go	/^type Reloc struct {$/;"	t
Reloc	./cmd/internal/obj/link.go	/^type Reloc struct {$/;"	t
Reloc	./cmd/link/internal/ld/link.go	/^type Reloc struct {$/;"	t
Rem	./cmd/compile/internal/big/int.go	/^func (z *Int) Rem(x, y *Int) *Int {$/;"	f
Rem	./math/big/int.go	/^func (z *Int) Rem(x, y *Int) *Int {$/;"	f
Remainder	./math/remainder.go	/^func Remainder(x, y float64) float64$/;"	f
RemoteAddr	./crypto/tls/conn.go	/^func (c *Conn) RemoteAddr() net.Addr {$/;"	f
RemoteAddr	./net/http/httputil/dump.go	/^func (c *dumpConn) RemoteAddr() net.Addr               { return nil }$/;"	f
RemoteAddr	./net/http/serve_test.go	/^func (noopConn) RemoteAddr() net.Addr               { return dummyAddr("remote-addr") }$/;"	f
RemoteAddr	./net/net.go	/^func (c *conn) RemoteAddr() Addr {$/;"	f
RemoteAddr	./net/pipe.go	/^func (p *pipe) RemoteAddr() Addr {$/;"	f
RemoteAddr	./net/rpc/jsonrpc/all_test.go	/^func (p *pipe) RemoteAddr() net.Addr {$/;"	f
RemoteAddr	./net/smtp/smtp_test.go	/^func (f faker) RemoteAddr() net.Addr             { return nil }$/;"	f
Remove	./container/heap/heap.go	/^func Remove(h Interface, i int) interface{} {$/;"	f
Remove	./container/list/list.go	/^func (l *List) Remove(e *Element) interface{} {$/;"	f
Remove	./os/file_plan9.go	/^func Remove(name string) error {$/;"	f
Remove	./os/file_unix.go	/^func Remove(name string) error {$/;"	f
Remove	./os/file_windows.go	/^func Remove(name string) error {$/;"	f
Remove	./runtime/pprof/pprof.go	/^func (p *Profile) Remove(value interface{}) {$/;"	f
Remove	./syscall/syscall_plan9.go	/^func Remove(path string) error {$/;"	f
RemoveAll	./expvar/expvar_test.go	/^func RemoveAll() {$/;"	f
RemoveAll	./mime/multipart/formdata.go	/^func (f *Form) RemoveAll() error {$/;"	f
RemoveAll	./os/path.go	/^func RemoveAll(path string) error {$/;"	f
RemoveDirectory	./syscall/zsyscall_windows.go	/^func RemoveDirectory(path *uint16) (err error) {$/;"	f
RemoveMultiples	./go/scanner/errors.go	/^func (p *ErrorList) RemoveMultiples() {$/;"	f
RemoveUninteresting	./cmd/pprof/internal/profile/prune.go	/^func (p *Profile) RemoveUninteresting() error {$/;"	f
Removexattr	./syscall/zsyscall_linux_386.go	/^func Removexattr(path string, attr string) (err error) {$/;"	f
Removexattr	./syscall/zsyscall_linux_amd64.go	/^func Removexattr(path string, attr string) (err error) {$/;"	f
Removexattr	./syscall/zsyscall_linux_arm.go	/^func Removexattr(path string, attr string) (err error) {$/;"	f
Removexattr	./syscall/zsyscall_linux_arm64.go	/^func Removexattr(path string, attr string) (err error) {$/;"	f
Removexattr	./syscall/zsyscall_linux_ppc64.go	/^func Removexattr(path string, attr string) (err error) {$/;"	f
Removexattr	./syscall/zsyscall_linux_ppc64le.go	/^func Removexattr(path string, attr string) (err error) {$/;"	f
Rename	./internal/syscall/windows/syscall_windows.go	/^func Rename(oldpath, newpath string) error {$/;"	f
Rename	./os/file.go	/^func Rename(oldpath, newpath string) error {$/;"	f
Rename	./syscall/fs_nacl.go	/^func Rename(from, to string) error {$/;"	f
Rename	./syscall/syscall_linux.go	/^func Rename(oldpath string, newpath string) (err error) {$/;"	f
Rename	./syscall/syscall_windows.go	/^func Rename(oldpath, newpath string) (err error) {$/;"	f
Rename	./syscall/zsyscall_darwin_386.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_darwin_amd64.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_darwin_arm.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_darwin_arm64.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_dragonfly_amd64.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_freebsd_386.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_freebsd_amd64.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_freebsd_arm.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_netbsd_386.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_netbsd_amd64.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_netbsd_arm.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_openbsd_386.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_openbsd_amd64.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_openbsd_arm.go	/^func Rename(from string, to string) (err error) {$/;"	f
Rename	./syscall/zsyscall_solaris_amd64.go	/^func Rename(from string, to string) (err error) {$/;"	f
Renameat	./syscall/zsyscall_linux_386.go	/^func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
Renameat	./syscall/zsyscall_linux_amd64.go	/^func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
Renameat	./syscall/zsyscall_linux_arm.go	/^func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
Renameat	./syscall/zsyscall_linux_arm64.go	/^func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
Renameat	./syscall/zsyscall_linux_ppc64.go	/^func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
Renameat	./syscall/zsyscall_linux_ppc64le.go	/^func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
Repeat	./bytes/bytes.go	/^func Repeat(b []byte, count int) []byte {$/;"	f
Repeat	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) Repeat(n, c int64) {$/;"	f
Repeat	./strings/strings.go	/^func Repeat(s string, count int) string {$/;"	f
RepeatTest	./bytes/bytes_test.go	/^type RepeatTest struct {$/;"	t
RepeatTests	./bytes/bytes_test.go	/^var RepeatTests = []RepeatTest{$/;"	v
RepeatTests	./strings/strings_test.go	/^var RepeatTests = []struct {$/;"	v
Replace	./bytes/bytes.go	/^func Replace(s, old, new []byte, n int) []byte {$/;"	f
Replace	./strings/replace.go	/^func (r *Replacer) Replace(s string) string {$/;"	f
Replace	./strings/replace.go	/^func (r *byteReplacer) Replace(s string) string {$/;"	f
Replace	./strings/replace.go	/^func (r *byteStringReplacer) Replace(s string) string {$/;"	f
Replace	./strings/replace.go	/^func (r *genericReplacer) Replace(s string) string {$/;"	f
Replace	./strings/replace.go	/^func (r *singleStringReplacer) Replace(s string) string {$/;"	f
Replace	./strings/strings.go	/^func Replace(s, old, new string, n int) string {$/;"	f
ReplaceAll	./regexp/regexp.go	/^func (re *Regexp) ReplaceAll(src, repl []byte) []byte {$/;"	f
ReplaceAllFunc	./regexp/regexp.go	/^func (re *Regexp) ReplaceAllFunc(src []byte, repl func([]byte) []byte) []byte {$/;"	f
ReplaceAllLiteral	./regexp/regexp.go	/^func (re *Regexp) ReplaceAllLiteral(src, repl []byte) []byte {$/;"	f
ReplaceAllLiteralString	./regexp/regexp.go	/^func (re *Regexp) ReplaceAllLiteralString(src, repl string) string {$/;"	f
ReplaceAllString	./regexp/regexp.go	/^func (re *Regexp) ReplaceAllString(src, repl string) string {$/;"	f
ReplaceAllStringFunc	./regexp/regexp.go	/^func (re *Regexp) ReplaceAllStringFunc(src string, repl func(string) string) string {$/;"	f
ReplaceFuncTest	./regexp/all_test.go	/^type ReplaceFuncTest struct {$/;"	t
ReplaceTest	./bytes/bytes_test.go	/^type ReplaceTest struct {$/;"	t
ReplaceTest	./regexp/all_test.go	/^type ReplaceTest struct {$/;"	t
ReplaceTests	./bytes/bytes_test.go	/^var ReplaceTests = []ReplaceTest{$/;"	v
ReplaceTests	./strings/strings_test.go	/^var ReplaceTests = []struct {$/;"	v
Replacer	./strings/export_test.go	/^func (r *Replacer) Replacer() interface{} {$/;"	f
Replacer	./strings/replace.go	/^type Replacer struct {$/;"	t
Reply	./net/rpc/jsonrpc/all_test.go	/^type Reply struct {$/;"	t
Reply	./net/rpc/server_test.go	/^type Reply struct {$/;"	t
ReplyNotPointer	./net/rpc/server_test.go	/^func (t *ReplyNotPointer) ReplyNotPointer(args *Args, reply Reply) error {$/;"	f
ReplyNotPointer	./net/rpc/server_test.go	/^type ReplyNotPointer int$/;"	t
ReplyNotPublic	./net/rpc/server_test.go	/^func (t *ReplyNotPublic) ReplyNotPublic(args *Args, reply *local) error {$/;"	f
ReplyNotPublic	./net/rpc/server_test.go	/^type ReplyNotPublic int$/;"	t
Report	./cmd/pprof/internal/report/report.go	/^type Report struct {$/;"	t
ReportAllocs	./testing/benchmark.go	/^func (b *B) ReportAllocs() {$/;"	f
Request	./net/http/cgi/child.go	/^func Request() (*http.Request, error) {$/;"	f
Request	./net/http/request.go	/^type Request struct {$/;"	t
Request	./net/rpc/server.go	/^type Request struct {$/;"	t
RequestFromMap	./net/http/cgi/child.go	/^func RequestFromMap(params map[string]string) (*http.Request, error) {$/;"	f
RequestIdleConnChForTesting	./net/http/export_test.go	/^func (t *Transport) RequestIdleConnChForTesting() {$/;"	f
RequestURI	./net/url/url.go	/^func (u *URL) RequestURI() string {$/;"	f
RequestURITest	./net/url/url_test.go	/^type RequestURITest struct {$/;"	t
Reset	./bufio/bufio.go	/^func (b *Reader) Reset(r io.Reader) {$/;"	f
Reset	./bufio/bufio.go	/^func (b *Writer) Reset(w io.Writer) {$/;"	f
Reset	./bytes/buffer.go	/^func (b *Buffer) Reset() { b.Truncate(0) }$/;"	f
Reset	./cmd/pack/pack_test.go	/^func (f *FakeFile) Reset() *FakeFile {$/;"	f
Reset	./compress/flate/deflate.go	/^func (w *Writer) Reset(dst io.Writer) {$/;"	f
Reset	./compress/flate/inflate.go	/^func (f *decompressor) Reset(r io.Reader, dict []byte) error {$/;"	f
Reset	./compress/gzip/gunzip.go	/^func (z *Reader) Reset(r io.Reader) error {$/;"	f
Reset	./compress/gzip/gzip.go	/^func (z *Writer) Reset(w io.Writer) {$/;"	f
Reset	./compress/zlib/reader.go	/^func (z *reader) Reset(r io.Reader, dict []byte) error {$/;"	f
Reset	./compress/zlib/writer.go	/^func (z *Writer) Reset(w io.Writer) {$/;"	f
Reset	./crypto/hmac/hmac.go	/^func (h *hmac) Reset() {$/;"	f
Reset	./crypto/md5/md5.go	/^func (d *digest) Reset() {$/;"	f
Reset	./crypto/rc4/rc4.go	/^func (c *Cipher) Reset() {$/;"	f
Reset	./crypto/sha1/sha1.go	/^func (d *digest) Reset() {$/;"	f
Reset	./crypto/sha256/sha256.go	/^func (d *digest) Reset() {$/;"	f
Reset	./crypto/sha512/sha512.go	/^func (d *digest) Reset() {$/;"	f
Reset	./debug/dwarf/line.go	/^func (r *LineReader) Reset() {$/;"	f
Reset	./encoding/gob/decode.go	/^func (d *decBuffer) Reset() {$/;"	f
Reset	./encoding/gob/encode.go	/^func (e *encBuffer) Reset() {$/;"	f
Reset	./go/scanner/errors.go	/^func (p *ErrorList) Reset() { *p = (*p)[0:0] }$/;"	f
Reset	./hash/adler32/adler32.go	/^func (d *digest) Reset() { *d = 1 }$/;"	f
Reset	./hash/crc32/crc32.go	/^func (d *digest) Reset() { d.crc = 0 }$/;"	f
Reset	./hash/crc64/crc64.go	/^func (d *digest) Reset() { d.crc = 0 }$/;"	f
Reset	./hash/fnv/fnv.go	/^func (s *sum32) Reset()  { *s = offset32 }$/;"	f
Reset	./hash/fnv/fnv.go	/^func (s *sum32a) Reset() { *s = offset32 }$/;"	f
Reset	./hash/fnv/fnv.go	/^func (s *sum64) Reset()  { *s = offset64 }$/;"	f
Reset	./hash/fnv/fnv.go	/^func (s *sum64a) Reset() { *s = offset64 }$/;"	f
Reset	./net/smtp/smtp.go	/^func (c *Client) Reset() error {$/;"	f
Reset	./os/signal/signal.go	/^func Reset(sig ...os.Signal) {$/;"	f
Reset	./time/sleep.go	/^func (t *Timer) Reset(d Duration) bool {$/;"	f
ResetCachedEnvironment	./net/http/export_test.go	/^func ResetCachedEnvironment() {$/;"	f
ResetForTesting	./flag/export_test.go	/^func ResetForTesting(usage func()) {$/;"	f
ResetLocalOnceForTest	./time/export_test.go	/^func ResetLocalOnceForTest() {$/;"	f
ResetProxyEnv	./net/http/proxy_test.go	/^func ResetProxyEnv() {$/;"	f
ResetTimer	./go/doc/testdata/benchmark.go	/^func (b *B) ResetTimer() {$/;"	f
ResetTimer	./testing/benchmark.go	/^func (b *B) ResetTimer() {$/;"	f
Resetter	./compress/flate/inflate.go	/^type Resetter interface {$/;"	t
Resetter	./compress/zlib/reader.go	/^type Resetter interface {$/;"	t
ResolveIPAddr	./net/iprawsock.go	/^func ResolveIPAddr(net, addr string) (*IPAddr, error) {$/;"	f
ResolveReference	./net/url/url.go	/^func (u *URL) ResolveReference(ref *URL) *URL {$/;"	f
ResolveTCPAddr	./net/tcpsock.go	/^func ResolveTCPAddr(net, addr string) (*TCPAddr, error) {$/;"	f
ResolveUDPAddr	./net/udpsock.go	/^func ResolveUDPAddr(net, addr string) (*UDPAddr, error) {$/;"	f
ResolveUnixAddr	./net/unixsock.go	/^func ResolveUnixAddr(net, addr string) (*UnixAddr, error) {$/;"	f
Response	./net/http/response.go	/^type Response struct {$/;"	t
Response	./net/rpc/server.go	/^type Response struct {$/;"	t
ResponseRecorder	./net/http/httptest/recorder.go	/^type ResponseRecorder struct {$/;"	t
ResponseWriter	./net/http/server.go	/^type ResponseWriter interface {$/;"	t
Resrv	./cmd/yacc/yacc.go	/^type Resrv struct {$/;"	t
Result	./database/sql/driver/driver.go	/^type Result interface {$/;"	t
Result	./database/sql/sql.go	/^type Result interface {$/;"	t
Result	./encoding/xml/example_test.go	/^	type Result struct {$/;"	t
Result	./internal/singleflight/singleflight.go	/^type Result struct {$/;"	t
ResultNoRows	./database/sql/driver/driver.go	/^var ResultNoRows noRows$/;"	v
Results	./go/types/type.go	/^func (s *Signature) Results() *Tuple { return s.results }$/;"	f
Rets	./syscall/mksyscall_windows.go	/^type Rets struct {$/;"	t
Reverse	./sort/sort.go	/^func Reverse(data Interface) Interface {$/;"	f
ReverseProxy	./net/http/httputil/reverseproxy.go	/^type ReverseProxy struct {$/;"	t
Revoke	./syscall/zsyscall_darwin_386.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_darwin_amd64.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_darwin_arm.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_darwin_arm64.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_dragonfly_amd64.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_freebsd_386.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_freebsd_amd64.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_freebsd_arm.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_netbsd_386.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_netbsd_amd64.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_netbsd_arm.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_openbsd_386.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_openbsd_amd64.go	/^func Revoke(path string) (err error) {$/;"	f
Revoke	./syscall/zsyscall_openbsd_arm.go	/^func Revoke(path string) (err error) {$/;"	f
RevokedCertificate	./crypto/x509/pkix/pkix.go	/^type RevokedCertificate struct {$/;"	t
Rgn	./cmd/compile/internal/gc/reg.go	/^type Rgn struct {$/;"	t
Ri	./crypto/rc4/rc4_arm.s	/^#define Ri	R6$/;"	d
Right	./cmd/compile/internal/gc/syntax.go	/^	OCMPIFACE        \/\/ Left Etype Right (interface comparison, x == y or x != y)$/;"	t
Right	./cmd/compile/internal/gc/syntax.go	/^	OCMPSTR          \/\/ Left Etype Right (string comparison, x == y, x < y, etc)$/;"	t
RightAlign	./encoding/asn1/asn1.go	/^func (b BitString) RightAlign() []byte {$/;"	f
Ring	./container/ring/ring.go	/^type Ring struct {$/;"	t
Rj	./crypto/rc4/rc4_arm.s	/^#define Rj	R7$/;"	d
Rk	./crypto/rc4/rc4_arm.s	/^#define Rk	R8$/;"	d
Rlimit	./syscall/types_darwin.go	/^type Rlimit C.struct_rlimit$/;"	t
Rlimit	./syscall/types_dragonfly.go	/^type Rlimit C.struct_rlimit$/;"	t
Rlimit	./syscall/types_freebsd.go	/^type Rlimit C.struct_rlimit$/;"	t
Rlimit	./syscall/types_linux.go	/^type Rlimit C.struct_rlimit$/;"	t
Rlimit	./syscall/types_netbsd.go	/^type Rlimit C.struct_rlimit$/;"	t
Rlimit	./syscall/types_openbsd.go	/^type Rlimit C.struct_rlimit$/;"	t
Rlimit	./syscall/types_solaris.go	/^type Rlimit C.struct_rlimit$/;"	t
Rlimit	./syscall/ztypes_darwin_386.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_darwin_amd64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_darwin_arm.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_darwin_arm64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_dragonfly_amd64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_freebsd_386.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_freebsd_amd64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_freebsd_arm.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_linux_386.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_linux_amd64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_linux_arm.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_linux_arm64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_linux_ppc64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_linux_ppc64le.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_netbsd_386.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_netbsd_amd64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_netbsd_arm.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_openbsd_386.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_openbsd_amd64.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_openbsd_arm.go	/^type Rlimit struct {$/;"	t
Rlimit	./syscall/ztypes_solaris_amd64.go	/^type Rlimit struct {$/;"	t
Rmdir	./syscall/fs_nacl.go	/^func Rmdir(path string) error {$/;"	f
Rmdir	./syscall/syscall_linux.go	/^func Rmdir(path string) error {$/;"	f
Rmdir	./syscall/syscall_windows.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_darwin_386.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_darwin_amd64.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_darwin_arm.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_darwin_arm64.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_dragonfly_amd64.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_freebsd_386.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_freebsd_amd64.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_freebsd_arm.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_netbsd_386.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_netbsd_amd64.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_netbsd_arm.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_openbsd_386.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_openbsd_amd64.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_openbsd_arm.go	/^func Rmdir(path string) (err error) {$/;"	f
Rmdir	./syscall/zsyscall_solaris_amd64.go	/^func Rmdir(path string) (err error) {$/;"	f
Rn	./crypto/rc4/rc4_arm.s	/^#define Rn	R2$/;"	d
Rnd	./cmd/compile/internal/gc/align.go	/^func Rnd(o int64, r int64) int64 {$/;"	f
Rnd	./cmd/link/internal/ld/lib.go	/^func Rnd(v int64, r int64) int64 {$/;"	f
Road	./encoding/json/example_test.go	/^	type Road struct {$/;"	t
Rollback	./database/sql/fakedb_test.go	/^func (tx *fakeTx) Rollback() error {$/;"	f
Rollback	./database/sql/sql.go	/^func (tx *Tx) Rollback() error {$/;"	f
Round	./strconv/decimal.go	/^func (a *decimal) Round(nd int) {$/;"	f
Round	./time/time.go	/^func (t Time) Round(d Duration) Time {$/;"	f
RoundDown	./strconv/decimal.go	/^func (a *decimal) RoundDown(nd int) {$/;"	f
RoundTrip	./net/http/client_test.go	/^func (t *recordingTransport) RoundTrip(req *Request) (resp *Response, err error) {$/;"	f
RoundTrip	./net/http/filetransport.go	/^func (t fileTransport) RoundTrip(req *Request) (resp *Response, err error) {$/;"	f
RoundTrip	./net/http/transport.go	/^func (t *Transport) RoundTrip(req *Request) (resp *Response, err error) {$/;"	f
RoundTrip	./net/http/transport_test.go	/^func (fooProto) RoundTrip(req *Request) (*Response, error) {$/;"	f
RoundTripper	./net/http/client.go	/^type RoundTripper interface {$/;"	t
RoundUp	./strconv/decimal.go	/^func (a *decimal) RoundUp(nd int) {$/;"	f
RoundedInteger	./strconv/decimal.go	/^func (a *decimal) RoundedInteger() uint64 {$/;"	f
RoundingMode	./cmd/compile/internal/big/float.go	/^type RoundingMode byte$/;"	t
RoundingMode	./math/big/float.go	/^type RoundingMode byte$/;"	t
RouteMessage	./syscall/route_bsd.go	/^type RouteMessage struct {$/;"	t
RouteRIB	./syscall/route_bsd.go	/^func RouteRIB(facility, param int) ([]byte, error) {$/;"	f
RouteRIB	./syscall/syscall_nacl.go	/^func RouteRIB(facility, param int) ([]byte, error)                { return nil, ENOSYS }$/;"	f
RoutingMessage	./syscall/net_nacl.go	/^type RoutingMessage interface {$/;"	t
RoutingMessage	./syscall/route_bsd.go	/^type RoutingMessage interface {$/;"	t
Row	./cmd/yacc/yacc.go	/^type Row struct {$/;"	t
Row	./database/sql/sql.go	/^type Row struct {$/;"	t
Rows	./database/sql/driver/driver.go	/^type Rows interface {$/;"	t
Rows	./database/sql/sql.go	/^type Rows struct {$/;"	t
RowsAffected	./database/sql/driver/driver.go	/^func (noRows) RowsAffected() (int64, error) {$/;"	f
RowsAffected	./database/sql/driver/driver.go	/^func (v RowsAffected) RowsAffected() (int64, error) {$/;"	f
RowsAffected	./database/sql/driver/driver.go	/^type RowsAffected int64$/;"	t
RowsAffected	./database/sql/sql.go	/^func (dr driverResult) RowsAffected() (int64, error) {$/;"	f
RoyallySuspectConditions	./cmd/vet/testdata/bool.go	/^func RoyallySuspectConditions() {$/;"	f
Rpath	./cmd/link/internal/ld/lib.go	/^type Rpath struct {$/;"	t
RpcChan	./runtime/race/testdata/regression_test.go	/^type RpcChan struct {$/;"	t
Rpi	./crypto/rc4/rc4_arm.s	/^#define Rpi	R4$/;"	d
Rpj	./crypto/rc4/rc4_arm.s	/^#define Rpj	R5$/;"	d
Rq	./runtime/vlop_arm.s	/^#define Rq	R0 \/\/ input d, output q$/;"	d
Rr	./runtime/vlop_arm.s	/^#define Rr	R1 \/\/ input n, output r$/;"	d
Rs	./runtime/vlop_arm.s	/^#define Rs	R2 \/\/ three temporary variables$/;"	d
Rsh	./cmd/compile/internal/big/int.go	/^func (z *Int) Rsh(x *Int, n uint) *Int {$/;"	f
Rsh	./math/big/int.go	/^func (z *Int) Rsh(x *Int, n uint) *Int {$/;"	f
Rsrc	./crypto/rc4/rc4_arm.s	/^#define Rsrc	R1$/;"	d
Rstate	./crypto/rc4/rc4_arm.s	/^#define Rstate	R3$/;"	d
Rt	./crypto/rc4/rc4_arm.s	/^#define Rt	R11$/;"	d
Rt0	./crypto/md5/md5block_arm.s	/^#define Rt0	R12	\/\/ temporary$/;"	d
Rt0	./crypto/sha1/sha1block_arm.s	/^#define Rt0	R7		\/\/ Temporary$/;"	d
Rt1	./crypto/md5/md5block_arm.s	/^#define Rt1	R14	\/\/ temporary$/;"	d
Rt1	./crypto/sha1/sha1block_arm.s	/^#define Rt1	R8		\/\/ Temporary$/;"	d
Rt2	./crypto/rc4/rc4_arm.s	/^#define Rt2	R12$/;"	d
Rt2	./crypto/sha1/sha1block_arm.s	/^#define Rt2	R11		\/\/ Temporary$/;"	d
RtAttr	./syscall/types_linux.go	/^type RtAttr C.struct_rtattr$/;"	t
RtAttr	./syscall/ztypes_linux_386.go	/^type RtAttr struct {$/;"	t
RtAttr	./syscall/ztypes_linux_amd64.go	/^type RtAttr struct {$/;"	t
RtAttr	./syscall/ztypes_linux_arm.go	/^type RtAttr struct {$/;"	t
RtAttr	./syscall/ztypes_linux_arm64.go	/^type RtAttr struct {$/;"	t
RtAttr	./syscall/ztypes_linux_ppc64.go	/^type RtAttr struct {$/;"	t
RtAttr	./syscall/ztypes_linux_ppc64le.go	/^type RtAttr struct {$/;"	t
RtGenmsg	./syscall/types_linux.go	/^type RtGenmsg C.struct_rtgenmsg$/;"	t
RtGenmsg	./syscall/ztypes_linux_386.go	/^type RtGenmsg struct {$/;"	t
RtGenmsg	./syscall/ztypes_linux_amd64.go	/^type RtGenmsg struct {$/;"	t
RtGenmsg	./syscall/ztypes_linux_arm.go	/^type RtGenmsg struct {$/;"	t
RtGenmsg	./syscall/ztypes_linux_arm64.go	/^type RtGenmsg struct {$/;"	t
RtGenmsg	./syscall/ztypes_linux_ppc64.go	/^type RtGenmsg struct {$/;"	t
RtGenmsg	./syscall/ztypes_linux_ppc64le.go	/^type RtGenmsg struct {$/;"	t
RtMetrics	./syscall/types_darwin.go	/^type RtMetrics C.struct_rt_metrics$/;"	t
RtMetrics	./syscall/types_dragonfly.go	/^type RtMetrics C.struct_rt_metrics$/;"	t
RtMetrics	./syscall/types_freebsd.go	/^type RtMetrics C.struct_rt_metrics$/;"	t
RtMetrics	./syscall/types_netbsd.go	/^type RtMetrics C.struct_rt_metrics$/;"	t
RtMetrics	./syscall/types_openbsd.go	/^type RtMetrics C.struct_rt_metrics$/;"	t
RtMetrics	./syscall/types_solaris.go	/^type RtMetrics C.struct_rt_metrics$/;"	t
RtMetrics	./syscall/ztypes_darwin_386.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_darwin_amd64.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_darwin_arm.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_darwin_arm64.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_dragonfly_amd64.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_freebsd_386.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_freebsd_amd64.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_freebsd_arm.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_netbsd_386.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_netbsd_amd64.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_netbsd_arm.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_openbsd_386.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_openbsd_amd64.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_openbsd_arm.go	/^type RtMetrics struct {$/;"	t
RtMetrics	./syscall/ztypes_solaris_amd64.go	/^type RtMetrics struct {$/;"	t
RtMsg	./syscall/types_linux.go	/^type RtMsg C.struct_rtmsg$/;"	t
RtMsg	./syscall/ztypes_linux_386.go	/^type RtMsg struct {$/;"	t
RtMsg	./syscall/ztypes_linux_amd64.go	/^type RtMsg struct {$/;"	t
RtMsg	./syscall/ztypes_linux_arm.go	/^type RtMsg struct {$/;"	t
RtMsg	./syscall/ztypes_linux_arm64.go	/^type RtMsg struct {$/;"	t
RtMsg	./syscall/ztypes_linux_ppc64.go	/^type RtMsg struct {$/;"	t
RtMsg	./syscall/ztypes_linux_ppc64le.go	/^type RtMsg struct {$/;"	t
RtMsghdr	./syscall/types_darwin.go	/^type RtMsghdr C.struct_rt_msghdr$/;"	t
RtMsghdr	./syscall/types_dragonfly.go	/^type RtMsghdr C.struct_rt_msghdr$/;"	t
RtMsghdr	./syscall/types_freebsd.go	/^type RtMsghdr C.struct_rt_msghdr$/;"	t
RtMsghdr	./syscall/types_netbsd.go	/^type RtMsghdr C.struct_rt_msghdr$/;"	t
RtMsghdr	./syscall/types_openbsd.go	/^type RtMsghdr C.struct_rt_msghdr$/;"	t
RtMsghdr	./syscall/types_solaris.go	/^type RtMsghdr C.struct_rt_msghdr$/;"	t
RtMsghdr	./syscall/ztypes_darwin_386.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_darwin_amd64.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_darwin_arm.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_darwin_arm64.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_dragonfly_amd64.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_freebsd_386.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_freebsd_amd64.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_freebsd_arm.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_netbsd_386.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_netbsd_amd64.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_netbsd_arm.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_openbsd_386.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_openbsd_amd64.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_openbsd_arm.go	/^type RtMsghdr struct {$/;"	t
RtMsghdr	./syscall/ztypes_solaris_amd64.go	/^type RtMsghdr struct {$/;"	t
RtNexthop	./syscall/types_linux.go	/^type RtNexthop C.struct_rtnexthop$/;"	t
RtNexthop	./syscall/ztypes_linux_386.go	/^type RtNexthop struct {$/;"	t
RtNexthop	./syscall/ztypes_linux_amd64.go	/^type RtNexthop struct {$/;"	t
RtNexthop	./syscall/ztypes_linux_arm.go	/^type RtNexthop struct {$/;"	t
RtNexthop	./syscall/ztypes_linux_arm64.go	/^type RtNexthop struct {$/;"	t
RtNexthop	./syscall/ztypes_linux_ppc64.go	/^type RtNexthop struct {$/;"	t
RtNexthop	./syscall/ztypes_linux_ppc64le.go	/^type RtNexthop struct {$/;"	t
Rtable	./crypto/md5/md5block_arm.s	/^#define Rtable	R0	\/\/ Pointer to MD5 constants table$/;"	d
RtoB	./cmd/compile/internal/amd64/reg.go	/^func RtoB(r int) uint64 {$/;"	f
RtoB	./cmd/compile/internal/arm/reg.go	/^func RtoB(r int) uint64 {$/;"	f
RtoB	./cmd/compile/internal/arm64/reg.go	/^func RtoB(r int) uint64 {$/;"	f
RtoB	./cmd/compile/internal/ppc64/reg.go	/^func RtoB(r int) uint64 {$/;"	f
RtoB	./cmd/compile/internal/x86/reg.go	/^func RtoB(r int) uint64 {$/;"	f
Rtprio	./runtime/defs_dragonfly.go	/^type Rtprio C.struct_rtprio$/;"	t
Rtprio	./runtime/defs_freebsd.go	/^type Rtprio C.struct_rtprio$/;"	t
Run	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func (ext *ExtDis) Run(cmd ...string) (*bufio.Reader, error) {$/;"	f
Run	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func (ext *ExtDis) Run(cmd ...string) (*bufio.Reader, error) {$/;"	f
Run	./os/exec/exec.go	/^func (c *Cmd) Run() error {$/;"	f
Run	./testing/testing.go	/^func (m *M) Run() int {$/;"	f
RunBenchmarks	./go/doc/testdata/benchmark.go	/^func RunBenchmarks(matchString func(pat, str string) (bool, error), benchmarks []InternalBenchmark) {$/;"	f
RunBenchmarks	./testing/benchmark.go	/^func RunBenchmarks(matchString func(pat, str string) (bool, error), benchmarks []InternalBenchmark) {$/;"	f
RunExamples	./go/doc/testdata/example.go	/^func RunExamples(examples []InternalExample) (ok bool) {$/;"	f
RunExamples	./testing/example.go	/^func RunExamples(matchString func(pat, str string) (bool, error), examples []InternalExample) (ok bool) {$/;"	f
RunParallel	./testing/benchmark.go	/^func (b *B) RunParallel(body func(*PB)) {$/;"	f
RunSchedLocalQueueStealTest	./runtime/export_test.go	/^func RunSchedLocalQueueStealTest() {$/;"	f
RunSchedLocalQueueTest	./runtime/export_test.go	/^func RunSchedLocalQueueTest() {$/;"	f
RunTests	./go/doc/testdata/testing.go	/^func RunTests(matchString func(pat, str string) (bool, error), tests []InternalTest) (ok bool) {$/;"	f
RunTests	./testing/testing.go	/^func RunTests(matchString func(pat, str string) (bool, error), tests []InternalTest) (ok bool) {$/;"	f
RuneCount	./unicode/utf8/utf8.go	/^func RuneCount(p []byte) int {$/;"	f
RuneCountInString	./unicode/utf8/utf8.go	/^func RuneCountInString(s string) (n int) {$/;"	f
RuneCountTest	./unicode/utf8/utf8_test.go	/^type RuneCountTest struct {$/;"	t
RuneLen	./unicode/utf8/utf8.go	/^func RuneLen(r rune) int {$/;"	f
RuneLenTest	./unicode/utf8/utf8_test.go	/^type RuneLenTest struct {$/;"	t
RuneReader	./io/io.go	/^type RuneReader interface {$/;"	t
RuneScanner	./io/io.go	/^type RuneScanner interface {$/;"	t
RuneStart	./unicode/utf8/utf8.go	/^func RuneStart(b byte) bool { return b&0xC0 != 0x80 }$/;"	f
Runes	./bytes/bytes.go	/^func Runes(s []byte) []rune {$/;"	f
RunesTest	./bytes/bytes_test.go	/^type RunesTest struct {$/;"	t
RunesTests	./bytes/bytes_test.go	/^var RunesTests = []RunesTest{$/;"	v
RunesTests	./strings/strings_test.go	/^var RunesTests = []struct {$/;"	v
Runnable	./cmd/go/main.go	/^func (c *Command) Runnable() bool {$/;"	f
RuntimeError	./runtime/error.go	/^func (*TypeAssertionError) RuntimeError() {}$/;"	f
RuntimeError	./runtime/error.go	/^func (e errorString) RuntimeError() {}$/;"	f
Runtime_Semacquire	./sync/export_test.go	/^var Runtime_Semacquire = runtime_Semacquire$/;"	v
Runtime_Semrelease	./sync/export_test.go	/^var Runtime_Semrelease = runtime_Semrelease$/;"	v
Runtimepkg	./cmd/compile/internal/gc/go.go	/^var Runtimepkg *Pkg \/\/ package runtime$/;"	v
Rusage	./syscall/syscall_nacl.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/syscall_windows.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/types_darwin.go	/^type Rusage C.struct_rusage$/;"	t
Rusage	./syscall/types_dragonfly.go	/^type Rusage C.struct_rusage$/;"	t
Rusage	./syscall/types_freebsd.go	/^type Rusage C.struct_rusage$/;"	t
Rusage	./syscall/types_linux.go	/^type Rusage C.struct_rusage$/;"	t
Rusage	./syscall/types_netbsd.go	/^type Rusage C.struct_rusage$/;"	t
Rusage	./syscall/types_openbsd.go	/^type Rusage C.struct_rusage$/;"	t
Rusage	./syscall/types_solaris.go	/^type Rusage C.struct_rusage$/;"	t
Rusage	./syscall/ztypes_darwin_386.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_darwin_amd64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_darwin_arm.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_darwin_arm64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_dragonfly_amd64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_freebsd_386.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_freebsd_amd64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_freebsd_arm.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_linux_386.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_linux_amd64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_linux_arm.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_linux_arm64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_linux_ppc64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_linux_ppc64le.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_netbsd_386.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_netbsd_amd64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_netbsd_arm.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_openbsd_386.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_openbsd_amd64.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_openbsd_arm.go	/^type Rusage struct {$/;"	t
Rusage	./syscall/ztypes_solaris_amd64.go	/^type Rusage struct {$/;"	t
Rw	./crypto/sha1/sha1block_arm.s	/^#define Rw	R14		\/\/ point to w buffer$/;"	d
S0	./go/doc/testdata/error1.go	/^type S0 struct {$/;"	t
S0	./go/doc/testdata/error2.go	/^type S0 struct {$/;"	t
S0	./reflect/all_test.go	/^type S0 struct {$/;"	t
S1	./reflect/all_test.go	/^type S1 struct {$/;"	t
S10	./encoding/json/decode_test.go	/^type S10 struct {$/;"	t
S10	./reflect/all_test.go	/^type S10 struct {$/;"	t
S11	./encoding/json/decode_test.go	/^type S11 struct {$/;"	t
S11	./reflect/all_test.go	/^type S11 struct {$/;"	t
S12	./encoding/json/decode_test.go	/^type S12 struct {$/;"	t
S12	./reflect/all_test.go	/^type S12 struct {$/;"	t
S13	./encoding/json/decode_test.go	/^type S13 struct {$/;"	t
S13	./reflect/all_test.go	/^type S13 struct {$/;"	t
S14	./reflect/all_test.go	/^type S14 struct {$/;"	t
S15	./reflect/all_test.go	/^type S15 struct {$/;"	t
S16	./reflect/all_test.go	/^type S16 struct {$/;"	t
S1x	./reflect/all_test.go	/^type S1x struct {$/;"	t
S1y	./reflect/all_test.go	/^type S1y struct {$/;"	t
S2	./cmd/api/testdata/src/pkg/p1/p1.go	/^type S2 struct {$/;"	t
S2	./reflect/all_test.go	/^type S2 struct {$/;"	t
S2	./runtime/race/testdata/comp_test.go	/^type S2 S$/;"	t
S3	./reflect/all_test.go	/^type S3 struct {$/;"	t
S4	./reflect/all_test.go	/^type S4 struct {$/;"	t
S5	./encoding/json/decode_test.go	/^type S5 struct {$/;"	t
S5	./reflect/all_test.go	/^type S5 struct {$/;"	t
S6	./encoding/json/decode_test.go	/^type S6 struct {$/;"	t
S6	./reflect/all_test.go	/^type S6 struct {$/;"	t
S7	./encoding/json/decode_test.go	/^type S7 S6$/;"	t
S7	./reflect/all_test.go	/^type S7 S6$/;"	t
S8	./encoding/json/decode_test.go	/^type S8 struct {$/;"	t
S8	./reflect/all_test.go	/^type S8 struct {$/;"	t
S9	./encoding/json/decode_test.go	/^type S9 struct {$/;"	t
S9	./reflect/all_test.go	/^type S9 struct {$/;"	t
SDATA	./cmd/link/internal/ld/pe.go	/^		\/\/ Note: although address of runtime.edata (type SDATA) is at the start of .bss section$/;"	t
SE	./fmt/fmt_test.go	/^type SE []interface{} \/\/ slice of empty; notational compactness.$/;"	t
SEG_32BIT	./runtime/sys_linux_386.s	/^#define SEG_32BIT 0x01$/;"	d
SEG_NOT_PRESENT	./runtime/sys_linux_386.s	/^#define SEG_NOT_PRESENT 0x20$/;"	d
SELFGOT	./cmd/link/internal/ld/data.go	/^	\/\/ from input files.  Both are type SELFGOT, so in that case$/;"	t
SETASC	./cmd/yacc/yacc.go	/^func SETASC(i, j int) int { return i | j }$/;"	f
SETHI	./runtime/asm_386.s	/^	SETHI	DX$/;"	d
SETPLEV	./cmd/yacc/yacc.go	/^func SETPLEV(i, j int) int { return i | (j << 4) }$/;"	f
SETTYPE	./cmd/yacc/yacc.go	/^func SETTYPE(i, j int) int { return i | (j << 10) }$/;"	f
SHA256ROUND	./crypto/sha256/sha256block_386.s	/^#define SHA256ROUND(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA256ROUND	./crypto/sha256/sha256block_amd64.s	/^#define SHA256ROUND(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA256ROUND0	./crypto/sha256/sha256block_386.s	/^#define SHA256ROUND0(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA256ROUND0	./crypto/sha256/sha256block_amd64.s	/^#define SHA256ROUND0(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA256ROUND1	./crypto/sha256/sha256block_386.s	/^#define SHA256ROUND1(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA256ROUND1	./crypto/sha256/sha256block_amd64.s	/^#define SHA256ROUND1(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA256T1	./crypto/sha256/sha256block_386.s	/^#define SHA256T1(const, e, f, g, h) \\$/;"	d
SHA256T1	./crypto/sha256/sha256block_amd64.s	/^#define SHA256T1(const, e, f, g, h) \\$/;"	d
SHA256T2	./crypto/sha256/sha256block_386.s	/^#define SHA256T2(a, b, c) \\$/;"	d
SHA256T2	./crypto/sha256/sha256block_amd64.s	/^#define SHA256T2(a, b, c) \\$/;"	d
SHA512ROUND	./crypto/sha512/sha512block_amd64.s	/^#define SHA512ROUND(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA512ROUND0	./crypto/sha512/sha512block_amd64.s	/^#define SHA512ROUND0(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA512ROUND1	./crypto/sha512/sha512block_amd64.s	/^#define SHA512ROUND1(index, const, a, b, c, d, e, f, g, h) \\$/;"	d
SHA512T1	./crypto/sha512/sha512block_amd64.s	/^#define SHA512T1(const, e, f, g, h) \\$/;"	d
SHA512T2	./crypto/sha512/sha512block_amd64.s	/^#define SHA512T2(a, b, c) \\$/;"	d
SHUFFLE	./crypto/sha1/sha1block_386.s	/^#define SHUFFLE(index, e) \\$/;"	d
SHUFFLE	./crypto/sha1/sha1block_amd64.s	/^#define SHUFFLE(index) \\$/;"	d
SHUFFLE	./crypto/sha1/sha1block_amd64p32.s	/^#define SHUFFLE(index) \\$/;"	d
SHUFFLE	./crypto/sha1/sha1block_arm.s	/^#define SHUFFLE(Re) \\$/;"	d
SI	./cmd/api/testdata/src/pkg/p1/p1.go	/^type SI struct {$/;"	t
SI	./fmt/fmt_test.go	/^type SI struct {$/;"	t
SID	./syscall/security_windows.go	/^type SID struct{}$/;"	t
SIDAndAttributes	./syscall/security_windows.go	/^type SIDAndAttributes struct {$/;"	t
SIPtr	./cmd/api/testdata/src/pkg/p1/p1.go	/^var SIPtr = &SI{}$/;"	v
SIPtr2	./cmd/api/testdata/src/pkg/p1/p1.go	/^var SIPtr2 *SI$/;"	v
SIVal	./cmd/api/testdata/src/pkg/p1/p1.go	/^var SIVal = SI{}$/;"	v
SKIP	./crypto/rc4/rc4_amd64.s	/^#define SKIP(off, reg)$/;"	d
SKIP	./crypto/rc4/rc4_amd64p32.s	/^#define SKIP(off, reg)$/;"	d
SMethod	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (s *S2) SMethod(x int8, y int16, z int64) {}$/;"	f
SRV	./net/dnsclient.go	/^type SRV struct {$/;"	t
SSLExtraCertChainPolicyPara	./syscall/ztypes_windows.go	/^type SSLExtraCertChainPolicyPara struct {$/;"	t
ST	./cmd/vet/testdata/assign.go	/^type ST struct {$/;"	t
STACKSIZE	./runtime/cgo/gcc_windows_386.c	/^#define STACKSIZE /;"	d	file:
STACKSIZE	./runtime/cgo/gcc_windows_amd64.c	/^#define STACKSIZE /;"	d	file:
STORE	./cmd/compile/internal/gc/reg.go	/^func STORE(r *Reg, z int) uint64 {$/;"	f
ST_BIND	./debug/elf/elf.go	/^func ST_BIND(info uint8) SymBind { return SymBind(info >> 4) }$/;"	f
ST_INFO	./debug/elf/elf.go	/^func ST_INFO(bind SymBind, typ SymType) uint8 {$/;"	f
ST_TYPE	./debug/elf/elf.go	/^func ST_TYPE(info uint8) SymType { return SymType(info & 0xF) }$/;"	f
ST_VISIBILITY	./debug/elf/elf.go	/^func ST_VISIBILITY(other uint8) SymVis { return SymVis(other & 3) }$/;"	f
SYSARG4	./cmd/internal/obj/arm64/asm7.go	/^func SYSARG4(op1 int, Cn int, Cm int, op2 int) int {$/;"	f
SYSARG5	./cmd/internal/obj/arm64/asm7.go	/^func SYSARG5(op0 int, op1 int, Cn int, Cm int, op2 int) int {$/;"	f
SYSHINT	./cmd/internal/obj/arm64/asm7.go	/^func SYSHINT(x uint32) uint32 {$/;"	f
SYSOP	./cmd/internal/obj/arm64/asm7.go	/^func SYSOP(l uint32, op0 uint32, op1 uint32, crn uint32, crm uint32, op2 uint32, rt uint32) uint32 {$/;"	f
SYS_BASE	./runtime/sys_freebsd_arm.s	/^#define SYS_BASE 0x0$/;"	d
SYS_BASE	./runtime/sys_linux_arm.s	/^#define SYS_BASE 0x0$/;"	d
SYS_SEEK	./syscall/asm_plan9_386.s	/^#define SYS_SEEK 39	\/* from zsysnum_plan9_386.go *\/$/;"	d
SYS_SEEK	./syscall/asm_plan9_amd64.s	/^#define SYS_SEEK 39	\/* from zsysnum_plan9_amd64.go *\/$/;"	d
SYS_SOCKETCALL	./syscall/asm_linux_386.s	/^#define SYS_SOCKETCALL 102	\/* from zsysnum_linux_386.go *\/$/;"	d
SYS__LLSEEK	./syscall/asm_linux_386.s	/^#define SYS__LLSEEK 140	\/* from zsysnum_linux_386.go *\/$/;"	d
SYS__LLSEEK	./syscall/asm_linux_arm.s	/^#define SYS__LLSEEK 140  \/* from zsysnum_linux_arm.go *\/$/;"	d
SYS___pthread_kill	./runtime/sys_darwin_arm.s	/^#define	SYS___pthread_kill 328$/;"	d
SYS___pthread_kill	./runtime/sys_darwin_arm64.s	/^#define	SYS___pthread_kill 328$/;"	d
SYS___sysctl	./runtime/sys_darwin_arm.s	/^#define	SYS___sysctl       202$/;"	d
SYS___sysctl	./runtime/sys_darwin_arm64.s	/^#define	SYS___sysctl       202$/;"	d
SYS___sysctl	./runtime/sys_freebsd_arm.s	/^#define SYS___sysctl (SYS_BASE + 202)$/;"	d
SYS__umtx_op	./runtime/sys_freebsd_arm.s	/^#define SYS__umtx_op (SYS_BASE + 454)$/;"	d
SYS_access	./runtime/sys_linux_arm.s	/^#define SYS_access (SYS_BASE + 33)$/;"	d
SYS_access	./runtime/syscall_nacl.h	/^#define SYS_access /;"	d
SYS_brk	./runtime/syscall_nacl.h	/^#define SYS_brk /;"	d
SYS_bsdthread_create	./runtime/sys_darwin_arm.s	/^#define	SYS_bsdthread_create 360$/;"	d
SYS_bsdthread_create	./runtime/sys_darwin_arm64.s	/^#define	SYS_bsdthread_create 360$/;"	d
SYS_bsdthread_register	./runtime/sys_darwin_arm.s	/^#define	SYS_bsdthread_register 366$/;"	d
SYS_bsdthread_register	./runtime/sys_darwin_arm64.s	/^#define	SYS_bsdthread_register 366$/;"	d
SYS_bsdthread_terminate	./runtime/sys_darwin_arm.s	/^#define	SYS_bsdthread_terminate 361$/;"	d
SYS_bsdthread_terminate	./runtime/sys_darwin_arm64.s	/^#define	SYS_bsdthread_terminate 361$/;"	d
SYS_chdir	./runtime/syscall_nacl.h	/^#define SYS_chdir /;"	d
SYS_chmod	./runtime/syscall_nacl.h	/^#define SYS_chmod /;"	d
SYS_clock	./runtime/syscall_nacl.h	/^#define SYS_clock /;"	d
SYS_clock_getres	./runtime/syscall_nacl.h	/^#define SYS_clock_getres /;"	d
SYS_clock_gettime	./runtime/sys_freebsd_arm.s	/^#define SYS_clock_gettime (SYS_BASE + 232)$/;"	d
SYS_clock_gettime	./runtime/sys_linux_arm.s	/^#define SYS_clock_gettime (SYS_BASE + 263)$/;"	d
SYS_clock_gettime	./runtime/sys_linux_arm64.s	/^#define SYS_clock_gettime	113$/;"	d
SYS_clock_gettime	./runtime/sys_linux_ppc64x.s	/^#define SYS_clock_gettime	246$/;"	d
SYS_clock_gettime	./runtime/syscall_nacl.h	/^#define SYS_clock_gettime /;"	d
SYS_clone	./runtime/sys_linux_arm.s	/^#define SYS_clone (SYS_BASE + 120)$/;"	d
SYS_clone	./runtime/sys_linux_arm64.s	/^#define SYS_clone		220$/;"	d
SYS_clone	./runtime/sys_linux_ppc64x.s	/^#define SYS_clone		120$/;"	d
SYS_close	./runtime/sys_darwin_arm.s	/^#define	SYS_close          6$/;"	d
SYS_close	./runtime/sys_darwin_arm64.s	/^#define	SYS_close          6$/;"	d
SYS_close	./runtime/sys_freebsd_arm.s	/^#define SYS_close (SYS_BASE + 6)$/;"	d
SYS_close	./runtime/sys_linux_arm.s	/^#define SYS_close (SYS_BASE + 6)$/;"	d
SYS_close	./runtime/sys_linux_arm64.s	/^#define SYS_close		57$/;"	d
SYS_close	./runtime/sys_linux_ppc64x.s	/^#define SYS_close		  6$/;"	d
SYS_close	./runtime/syscall_nacl.h	/^#define SYS_close /;"	d
SYS_cond_broadcast	./runtime/syscall_nacl.h	/^#define SYS_cond_broadcast /;"	d
SYS_cond_create	./runtime/syscall_nacl.h	/^#define SYS_cond_create /;"	d
SYS_cond_signal	./runtime/syscall_nacl.h	/^#define SYS_cond_signal /;"	d
SYS_cond_timed_wait_abs	./runtime/syscall_nacl.h	/^#define SYS_cond_timed_wait_abs /;"	d
SYS_cond_wait	./runtime/syscall_nacl.h	/^#define SYS_cond_wait /;"	d
SYS_connect	./runtime/sys_linux_arm.s	/^#define SYS_connect (SYS_BASE + 283)$/;"	d
SYS_dup	./runtime/syscall_nacl.h	/^#define SYS_dup /;"	d
SYS_dup2	./runtime/syscall_nacl.h	/^#define SYS_dup2 /;"	d
SYS_dyncode_create	./runtime/syscall_nacl.h	/^#define SYS_dyncode_create /;"	d
SYS_dyncode_delete	./runtime/syscall_nacl.h	/^#define SYS_dyncode_delete /;"	d
SYS_dyncode_modify	./runtime/syscall_nacl.h	/^#define SYS_dyncode_modify /;"	d
SYS_epoll_create	./runtime/sys_linux_arm.s	/^#define SYS_epoll_create (SYS_BASE + 250)$/;"	d
SYS_epoll_create	./runtime/sys_linux_ppc64x.s	/^#define SYS_epoll_create	236$/;"	d
SYS_epoll_create1	./runtime/sys_linux_arm.s	/^#define SYS_epoll_create1 (SYS_BASE + 357)$/;"	d
SYS_epoll_create1	./runtime/sys_linux_arm64.s	/^#define SYS_epoll_create1	20$/;"	d
SYS_epoll_create1	./runtime/sys_linux_ppc64x.s	/^#define SYS_epoll_create1	315$/;"	d
SYS_epoll_ctl	./runtime/sys_linux_arm.s	/^#define SYS_epoll_ctl (SYS_BASE + 251)$/;"	d
SYS_epoll_ctl	./runtime/sys_linux_arm64.s	/^#define SYS_epoll_ctl		21$/;"	d
SYS_epoll_ctl	./runtime/sys_linux_ppc64x.s	/^#define SYS_epoll_ctl		237$/;"	d
SYS_epoll_pwait	./runtime/sys_linux_arm64.s	/^#define SYS_epoll_pwait		22$/;"	d
SYS_epoll_wait	./runtime/sys_linux_arm.s	/^#define SYS_epoll_wait (SYS_BASE + 252)$/;"	d
SYS_epoll_wait	./runtime/sys_linux_ppc64x.s	/^#define SYS_epoll_wait		238$/;"	d
SYS_exception_clear_flag	./runtime/syscall_nacl.h	/^#define SYS_exception_clear_flag /;"	d
SYS_exception_handler	./runtime/syscall_nacl.h	/^#define SYS_exception_handler /;"	d
SYS_exception_stack	./runtime/syscall_nacl.h	/^#define SYS_exception_stack /;"	d
SYS_exit	./runtime/sys_darwin_arm.s	/^#define	SYS_exit           1$/;"	d
SYS_exit	./runtime/sys_darwin_arm64.s	/^#define	SYS_exit           1$/;"	d
SYS_exit	./runtime/sys_freebsd_arm.s	/^#define SYS_exit (SYS_BASE + 1)$/;"	d
SYS_exit	./runtime/sys_linux_arm.s	/^#define SYS_exit (SYS_BASE + 1)$/;"	d
SYS_exit	./runtime/sys_linux_arm64.s	/^#define SYS_exit		93$/;"	d
SYS_exit	./runtime/sys_linux_ppc64x.s	/^#define SYS_exit		  1$/;"	d
SYS_exit	./runtime/syscall_nacl.h	/^#define SYS_exit /;"	d
SYS_exit_group	./runtime/sys_linux_arm.s	/^#define SYS_exit_group (SYS_BASE + 248)$/;"	d
SYS_exit_group	./runtime/sys_linux_arm64.s	/^#define SYS_exit_group		94$/;"	d
SYS_exit_group	./runtime/sys_linux_ppc64x.s	/^#define SYS_exit_group		234$/;"	d
SYS_fcntl	./runtime/sys_darwin_arm.s	/^#define	SYS_fcntl          92$/;"	d
SYS_fcntl	./runtime/sys_darwin_arm64.s	/^#define	SYS_fcntl          92$/;"	d
SYS_fcntl	./runtime/sys_freebsd_arm.s	/^#define SYS_fcntl (SYS_BASE + 92)$/;"	d
SYS_fcntl	./runtime/sys_linux_arm.s	/^#define SYS_fcntl (SYS_BASE + 55)$/;"	d
SYS_fcntl	./runtime/sys_linux_arm64.s	/^#define SYS_fcntl		25$/;"	d
SYS_fcntl	./runtime/sys_linux_ppc64x.s	/^#define SYS_fcntl		 55$/;"	d
SYS_fstat	./runtime/syscall_nacl.h	/^#define SYS_fstat /;"	d
SYS_futex	./runtime/sys_linux_arm.s	/^#define SYS_futex (SYS_BASE + 240)$/;"	d
SYS_futex	./runtime/sys_linux_arm64.s	/^#define SYS_futex		98$/;"	d
SYS_futex	./runtime/sys_linux_ppc64x.s	/^#define SYS_futex		221$/;"	d
SYS_futex_wait_abs	./runtime/syscall_nacl.h	/^#define SYS_futex_wait_abs /;"	d
SYS_futex_wake	./runtime/syscall_nacl.h	/^#define SYS_futex_wake /;"	d
SYS_get_random_bytes	./runtime/syscall_nacl.h	/^#define SYS_get_random_bytes /;"	d
SYS_getcwd	./runtime/syscall_nacl.h	/^#define SYS_getcwd /;"	d
SYS_getdents	./runtime/syscall_nacl.h	/^#define SYS_getdents /;"	d
SYS_getpid	./runtime/sys_darwin_arm.s	/^#define	SYS_getpid         20$/;"	d
SYS_getpid	./runtime/sys_darwin_arm64.s	/^#define	SYS_getpid         20$/;"	d
SYS_getpid	./runtime/sys_freebsd_arm.s	/^#define SYS_getpid (SYS_BASE + 20)$/;"	d
SYS_getpid	./runtime/sys_linux_arm.s	/^#define SYS_getpid (SYS_BASE + 20)$/;"	d
SYS_getpid	./runtime/sys_linux_arm64.s	/^#define SYS_getpid		172$/;"	d
SYS_getpid	./runtime/sys_linux_ppc64x.s	/^#define SYS_getpid		 20$/;"	d
SYS_getpid	./runtime/syscall_nacl.h	/^#define SYS_getpid /;"	d
SYS_getrlimit	./runtime/sys_freebsd_arm.s	/^#define SYS_getrlimit (SYS_BASE + 194)$/;"	d
SYS_getrlimit	./runtime/sys_linux_arm64.s	/^#define SYS_getrlimit		163$/;"	d
SYS_gettid	./runtime/sys_linux_arm.s	/^#define SYS_gettid (SYS_BASE + 224)$/;"	d
SYS_gettid	./runtime/sys_linux_arm64.s	/^#define SYS_gettid		178$/;"	d
SYS_gettid	./runtime/sys_linux_ppc64x.s	/^#define SYS_gettid		207$/;"	d
SYS_gettimeofday	./runtime/sys_darwin_arm.s	/^#define	SYS_gettimeofday   116$/;"	d
SYS_gettimeofday	./runtime/sys_darwin_arm64.s	/^#define	SYS_gettimeofday   116$/;"	d
SYS_gettimeofday	./runtime/sys_linux_arm.s	/^#define SYS_gettimeofday (SYS_BASE + 78)$/;"	d
SYS_gettimeofday	./runtime/sys_linux_arm64.s	/^#define SYS_gettimeofday	169$/;"	d
SYS_gettimeofday	./runtime/sys_linux_ppc64x.s	/^#define SYS_gettimeofday	 78$/;"	d
SYS_gettimeofday	./runtime/syscall_nacl.h	/^#define SYS_gettimeofday /;"	d
SYS_imc_accept	./runtime/syscall_nacl.h	/^#define SYS_imc_accept /;"	d
SYS_imc_connect	./runtime/syscall_nacl.h	/^#define SYS_imc_connect /;"	d
SYS_imc_makeboundsock	./runtime/syscall_nacl.h	/^#define SYS_imc_makeboundsock /;"	d
SYS_imc_mem_obj_create	./runtime/syscall_nacl.h	/^#define SYS_imc_mem_obj_create /;"	d
SYS_imc_recvmsg	./runtime/syscall_nacl.h	/^#define SYS_imc_recvmsg /;"	d
SYS_imc_sendmsg	./runtime/syscall_nacl.h	/^#define SYS_imc_sendmsg /;"	d
SYS_imc_socketpair	./runtime/syscall_nacl.h	/^#define SYS_imc_socketpair /;"	d
SYS_isatty	./runtime/syscall_nacl.h	/^#define SYS_isatty /;"	d
SYS_kevent	./runtime/sys_darwin_arm.s	/^#define	SYS_kevent         363$/;"	d
SYS_kevent	./runtime/sys_darwin_arm64.s	/^#define	SYS_kevent         363$/;"	d
SYS_kevent	./runtime/sys_freebsd_arm.s	/^#define SYS_kevent (SYS_BASE + 363)$/;"	d
SYS_kill	./runtime/sys_darwin_arm.s	/^#define	SYS_kill           37$/;"	d
SYS_kill	./runtime/sys_darwin_arm64.s	/^#define	SYS_kill           37$/;"	d
SYS_kill	./runtime/sys_freebsd_arm.s	/^#define SYS_kill (SYS_BASE + 37)$/;"	d
SYS_kill	./runtime/sys_linux_arm.s	/^#define SYS_kill (SYS_BASE + 37)$/;"	d
SYS_kill	./runtime/sys_linux_arm64.s	/^#define SYS_kill		129$/;"	d
SYS_kill	./runtime/sys_linux_ppc64x.s	/^#define SYS_kill		 37$/;"	d
SYS_kqueue	./runtime/sys_darwin_arm.s	/^#define	SYS_kqueue         362$/;"	d
SYS_kqueue	./runtime/sys_darwin_arm64.s	/^#define	SYS_kqueue         362$/;"	d
SYS_kqueue	./runtime/sys_freebsd_arm.s	/^#define SYS_kqueue (SYS_BASE + 362)$/;"	d
SYS_link	./runtime/syscall_nacl.h	/^#define SYS_link /;"	d
SYS_list_mappings	./runtime/syscall_nacl.h	/^#define SYS_list_mappings /;"	d
SYS_lseek	./runtime/syscall_nacl.h	/^#define SYS_lseek /;"	d
SYS_lstat	./runtime/syscall_nacl.h	/^#define SYS_lstat /;"	d
SYS_madvise	./runtime/sys_darwin_arm.s	/^#define	SYS_madvise        75$/;"	d
SYS_madvise	./runtime/sys_darwin_arm64.s	/^#define	SYS_madvise        75$/;"	d
SYS_madvise	./runtime/sys_freebsd_arm.s	/^#define SYS_madvise (SYS_BASE + 75)$/;"	d
SYS_madvise	./runtime/sys_linux_arm.s	/^#define SYS_madvise (SYS_BASE + 220)$/;"	d
SYS_madvise	./runtime/sys_linux_arm64.s	/^#define SYS_madvise		233$/;"	d
SYS_madvise	./runtime/sys_linux_ppc64x.s	/^#define SYS_madvise		205$/;"	d
SYS_mincore	./runtime/sys_darwin_arm.s	/^#define	SYS_mincore        78$/;"	d
SYS_mincore	./runtime/sys_darwin_arm64.s	/^#define	SYS_mincore        78$/;"	d
SYS_mincore	./runtime/sys_linux_arm.s	/^#define SYS_mincore (SYS_BASE + 219)$/;"	d
SYS_mincore	./runtime/sys_linux_arm64.s	/^#define SYS_mincore		232$/;"	d
SYS_mincore	./runtime/sys_linux_ppc64x.s	/^#define SYS_mincore		206$/;"	d
SYS_mkdir	./runtime/syscall_nacl.h	/^#define SYS_mkdir /;"	d
SYS_mmap	./runtime/sys_darwin_arm.s	/^#define	SYS_mmap           197$/;"	d
SYS_mmap	./runtime/sys_darwin_arm64.s	/^#define	SYS_mmap           197$/;"	d
SYS_mmap	./runtime/sys_freebsd_arm.s	/^#define SYS_mmap (SYS_BASE + 477) $/;"	d
SYS_mmap	./runtime/sys_linux_arm64.s	/^#define SYS_mmap		222$/;"	d
SYS_mmap	./runtime/sys_linux_ppc64x.s	/^#define SYS_mmap		 90$/;"	d
SYS_mmap	./runtime/syscall_nacl.h	/^#define SYS_mmap /;"	d
SYS_mmap2	./runtime/sys_linux_arm.s	/^#define SYS_mmap2 (SYS_BASE + 192)$/;"	d
SYS_mprotect	./runtime/syscall_nacl.h	/^#define SYS_mprotect /;"	d
SYS_munmap	./runtime/sys_darwin_arm.s	/^#define	SYS_munmap         73$/;"	d
SYS_munmap	./runtime/sys_darwin_arm64.s	/^#define	SYS_munmap         73$/;"	d
SYS_munmap	./runtime/sys_freebsd_arm.s	/^#define SYS_munmap (SYS_BASE + 73)$/;"	d
SYS_munmap	./runtime/sys_linux_arm.s	/^#define SYS_munmap (SYS_BASE + 91)$/;"	d
SYS_munmap	./runtime/sys_linux_arm64.s	/^#define SYS_munmap		215$/;"	d
SYS_munmap	./runtime/sys_linux_ppc64x.s	/^#define SYS_munmap		 91$/;"	d
SYS_munmap	./runtime/syscall_nacl.h	/^#define SYS_munmap /;"	d
SYS_mutex_create	./runtime/syscall_nacl.h	/^#define SYS_mutex_create /;"	d
SYS_mutex_lock	./runtime/syscall_nacl.h	/^#define SYS_mutex_lock /;"	d
SYS_mutex_trylock	./runtime/syscall_nacl.h	/^#define SYS_mutex_trylock /;"	d
SYS_mutex_unlock	./runtime/syscall_nacl.h	/^#define SYS_mutex_unlock /;"	d
SYS_nameservice	./runtime/syscall_nacl.h	/^#define SYS_nameservice /;"	d
SYS_nanosleep	./runtime/sys_freebsd_arm.s	/^#define SYS_nanosleep (SYS_BASE + 240)$/;"	d
SYS_nanosleep	./runtime/syscall_nacl.h	/^#define SYS_nanosleep /;"	d
SYS_newselect	./runtime/sys_linux_ppc64x.s	/^#define SYS_newselect		142$/;"	d
SYS_null	./runtime/syscall_nacl.h	/^#define SYS_null /;"	d
SYS_open	./runtime/sys_darwin_arm.s	/^#define	SYS_open           5$/;"	d
SYS_open	./runtime/sys_darwin_arm64.s	/^#define	SYS_open           5$/;"	d
SYS_open	./runtime/sys_freebsd_arm.s	/^#define SYS_open (SYS_BASE + 5)$/;"	d
SYS_open	./runtime/sys_linux_arm.s	/^#define SYS_open (SYS_BASE + 5)$/;"	d
SYS_open	./runtime/sys_linux_ppc64x.s	/^#define SYS_open		  5$/;"	d
SYS_open	./runtime/syscall_nacl.h	/^#define SYS_open /;"	d
SYS_openat	./runtime/sys_linux_arm64.s	/^#define SYS_openat		56$/;"	d
SYS_pread	./runtime/syscall_nacl.h	/^#define SYS_pread /;"	d
SYS_pselect6	./runtime/sys_linux_arm64.s	/^#define SYS_pselect6		72$/;"	d
SYS_pwrite	./runtime/syscall_nacl.h	/^#define SYS_pwrite /;"	d
SYS_read	./runtime/sys_darwin_arm.s	/^#define	SYS_read           3$/;"	d
SYS_read	./runtime/sys_darwin_arm64.s	/^#define	SYS_read           3$/;"	d
SYS_read	./runtime/sys_freebsd_arm.s	/^#define SYS_read (SYS_BASE + 3)$/;"	d
SYS_read	./runtime/sys_linux_arm.s	/^#define SYS_read (SYS_BASE + 3)$/;"	d
SYS_read	./runtime/sys_linux_arm64.s	/^#define SYS_read		63$/;"	d
SYS_read	./runtime/sys_linux_ppc64x.s	/^#define SYS_read		  3$/;"	d
SYS_read	./runtime/syscall_nacl.h	/^#define SYS_read /;"	d
SYS_readlink	./runtime/syscall_nacl.h	/^#define SYS_readlink /;"	d
SYS_rename	./runtime/syscall_nacl.h	/^#define SYS_rename /;"	d
SYS_rmdir	./runtime/syscall_nacl.h	/^#define SYS_rmdir /;"	d
SYS_rt_sigaction	./runtime/sys_linux_arm.s	/^#define SYS_rt_sigaction (SYS_BASE + 174)$/;"	d
SYS_rt_sigaction	./runtime/sys_linux_arm64.s	/^#define SYS_rt_sigaction	134$/;"	d
SYS_rt_sigaction	./runtime/sys_linux_ppc64x.s	/^#define SYS_rt_sigaction	173$/;"	d
SYS_rt_sigprocmask	./runtime/sys_linux_arm.s	/^#define SYS_rt_sigprocmask (SYS_BASE + 175)$/;"	d
SYS_rt_sigprocmask	./runtime/sys_linux_arm64.s	/^#define SYS_rt_sigprocmask	135$/;"	d
SYS_rt_sigprocmask	./runtime/sys_linux_ppc64x.s	/^#define SYS_rt_sigprocmask	174$/;"	d
SYS_rt_sigreturn	./runtime/sys_linux_arm.s	/^#define SYS_rt_sigreturn (SYS_BASE + 173)$/;"	d
SYS_rt_sigreturn	./runtime/sys_linux_arm64.s	/^#define SYS_rt_sigreturn	139$/;"	d
SYS_rt_sigreturn	./runtime/sys_linux_ppc64x.s	/^#define SYS_rt_sigreturn	172$/;"	d
SYS_sched_getaffinity	./runtime/sys_linux_arm.s	/^#define SYS_sched_getaffinity (SYS_BASE + 242)$/;"	d
SYS_sched_getaffinity	./runtime/sys_linux_arm64.s	/^#define SYS_sched_getaffinity	123$/;"	d
SYS_sched_getaffinity	./runtime/sys_linux_ppc64x.s	/^#define SYS_sched_getaffinity	223$/;"	d
SYS_sched_yield	./runtime/sys_freebsd_arm.s	/^#define SYS_sched_yield (SYS_BASE + 331)$/;"	d
SYS_sched_yield	./runtime/sys_linux_arm.s	/^#define SYS_sched_yield (SYS_BASE + 158)$/;"	d
SYS_sched_yield	./runtime/sys_linux_arm64.s	/^#define SYS_sched_yield		124$/;"	d
SYS_sched_yield	./runtime/sys_linux_ppc64x.s	/^#define SYS_sched_yield		158$/;"	d
SYS_sched_yield	./runtime/syscall_nacl.h	/^#define SYS_sched_yield /;"	d
SYS_second_tls_get	./runtime/syscall_nacl.h	/^#define SYS_second_tls_get /;"	d
SYS_second_tls_set	./runtime/syscall_nacl.h	/^#define SYS_second_tls_set /;"	d
SYS_select	./runtime/sys_darwin_arm.s	/^#define	SYS_select         93$/;"	d
SYS_select	./runtime/sys_darwin_arm64.s	/^#define	SYS_select         93$/;"	d
SYS_select	./runtime/sys_linux_arm.s	/^#define SYS_select (SYS_BASE + 142) \/\/ newselect$/;"	d
SYS_select	./runtime/sys_linux_ppc64x.s	/^#define SYS_select		 82	\/\/ always return -ENOSYS$/;"	d
SYS_sem_create	./runtime/syscall_nacl.h	/^#define SYS_sem_create /;"	d
SYS_sem_get_value	./runtime/syscall_nacl.h	/^#define SYS_sem_get_value /;"	d
SYS_sem_post	./runtime/syscall_nacl.h	/^#define SYS_sem_post /;"	d
SYS_sem_wait	./runtime/syscall_nacl.h	/^#define SYS_sem_wait /;"	d
SYS_setitimer	./runtime/sys_darwin_arm.s	/^#define	SYS_setitimer      83$/;"	d
SYS_setitimer	./runtime/sys_darwin_arm64.s	/^#define	SYS_setitimer      83$/;"	d
SYS_setitimer	./runtime/sys_freebsd_arm.s	/^#define SYS_setitimer (SYS_BASE + 83)$/;"	d
SYS_setitimer	./runtime/sys_linux_arm.s	/^#define SYS_setitimer (SYS_BASE + 104)$/;"	d
SYS_setitimer	./runtime/sys_linux_arm64.s	/^#define SYS_setitimer		103$/;"	d
SYS_setitimer	./runtime/sys_linux_ppc64x.s	/^#define SYS_setitimer		104$/;"	d
SYS_sigaction	./runtime/sys_darwin_arm.s	/^#define	SYS_sigaction      46$/;"	d
SYS_sigaction	./runtime/sys_darwin_arm64.s	/^#define	SYS_sigaction      46$/;"	d
SYS_sigaction	./runtime/sys_freebsd_arm.s	/^#define SYS_sigaction (SYS_BASE + 416)$/;"	d
SYS_sigaltstack	./runtime/sys_freebsd_arm.s	/^#define SYS_sigaltstack (SYS_BASE + 53)$/;"	d
SYS_sigaltstack	./runtime/sys_linux_arm.s	/^#define SYS_sigaltstack (SYS_BASE + 186)$/;"	d
SYS_sigaltstack	./runtime/sys_linux_arm64.s	/^#define SYS_sigaltstack		132$/;"	d
SYS_sigaltstack	./runtime/sys_linux_ppc64x.s	/^#define SYS_sigaltstack		185$/;"	d
SYS_sigprocmask	./runtime/sys_darwin_arm.s	/^#define	SYS_sigprocmask    48$/;"	d
SYS_sigprocmask	./runtime/sys_darwin_arm64.s	/^#define	SYS_sigprocmask    48$/;"	d
SYS_sigprocmask	./runtime/sys_freebsd_arm.s	/^#define SYS_sigprocmask (SYS_BASE + 340)$/;"	d
SYS_sigreturn	./runtime/sys_darwin_arm.s	/^#define	SYS_sigreturn      184$/;"	d
SYS_sigreturn	./runtime/sys_darwin_arm64.s	/^#define	SYS_sigreturn      184$/;"	d
SYS_socket	./runtime/sys_linux_arm.s	/^#define SYS_socket (SYS_BASE + 281)$/;"	d
SYS_stat	./runtime/syscall_nacl.h	/^#define SYS_stat /;"	d
SYS_symlink	./runtime/syscall_nacl.h	/^#define SYS_symlink /;"	d
SYS_sysconf	./runtime/syscall_nacl.h	/^#define SYS_sysconf /;"	d
SYS_test_crash	./runtime/syscall_nacl.h	/^#define SYS_test_crash /;"	d
SYS_test_infoleak	./runtime/syscall_nacl.h	/^#define SYS_test_infoleak /;"	d
SYS_test_syscall_1	./runtime/syscall_nacl.h	/^#define SYS_test_syscall_1 /;"	d
SYS_test_syscall_2	./runtime/syscall_nacl.h	/^#define SYS_test_syscall_2 /;"	d
SYS_thr_exit	./runtime/sys_freebsd_arm.s	/^#define SYS_thr_exit (SYS_BASE + 431)$/;"	d
SYS_thr_kill	./runtime/sys_freebsd_arm.s	/^#define SYS_thr_kill (SYS_BASE + 433)$/;"	d
SYS_thr_new	./runtime/sys_freebsd_arm.s	/^#define SYS_thr_new (SYS_BASE + 455)$/;"	d
SYS_thr_self	./runtime/sys_freebsd_arm.s	/^#define SYS_thr_self (SYS_BASE + 432)$/;"	d
SYS_thread_create	./runtime/syscall_nacl.h	/^#define SYS_thread_create /;"	d
SYS_thread_exit	./runtime/syscall_nacl.h	/^#define SYS_thread_exit /;"	d
SYS_thread_nice	./runtime/syscall_nacl.h	/^#define SYS_thread_nice /;"	d
SYS_tkill	./runtime/sys_linux_arm.s	/^#define SYS_tkill (SYS_BASE + 238)$/;"	d
SYS_tkill	./runtime/sys_linux_arm64.s	/^#define SYS_tkill		130$/;"	d
SYS_tkill	./runtime/sys_linux_ppc64x.s	/^#define SYS_tkill		208$/;"	d
SYS_tls_get	./runtime/syscall_nacl.h	/^#define SYS_tls_get /;"	d
SYS_tls_init	./runtime/syscall_nacl.h	/^#define SYS_tls_init /;"	d
SYS_truncate	./runtime/syscall_nacl.h	/^#define SYS_truncate /;"	d
SYS_ugetrlimit	./runtime/sys_linux_arm.s	/^#define SYS_ugetrlimit (SYS_BASE + 191)$/;"	d
SYS_ugetrlimit	./runtime/sys_linux_ppc64x.s	/^#define SYS_ugetrlimit		190$/;"	d
SYS_unlink	./runtime/syscall_nacl.h	/^#define SYS_unlink /;"	d
SYS_utimes	./runtime/syscall_nacl.h	/^#define SYS_utimes /;"	d
SYS_write	./runtime/sys_darwin_arm.s	/^#define	SYS_write          4$/;"	d
SYS_write	./runtime/sys_darwin_arm64.s	/^#define	SYS_write          4$/;"	d
SYS_write	./runtime/sys_freebsd_arm.s	/^#define SYS_write (SYS_BASE + 4)$/;"	d
SYS_write	./runtime/sys_linux_arm.s	/^#define SYS_write (SYS_BASE + 4)$/;"	d
SYS_write	./runtime/sys_linux_arm64.s	/^#define SYS_write		64$/;"	d
SYS_write	./runtime/sys_linux_ppc64x.s	/^#define SYS_write		  4$/;"	d
SYS_write	./runtime/syscall_nacl.h	/^#define SYS_write /;"	d
SameFile	./os/types.go	/^func SameFile(fi1, fi2 FileInfo) bool {$/;"	f
Samereg	./cmd/compile/internal/gc/gsubr.go	/^func Samereg(a *Node, b *Node) bool {$/;"	f
Sample	./cmd/pprof/internal/profile/profile.go	/^type Sample struct {$/;"	t
Scalar	./reflect/all_test.go	/^		type Scalar struct{ x uintptr }$/;"	t
ScalarBaseMult	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) ScalarBaseMult(k []byte) (*big.Int, *big.Int) {$/;"	f
ScalarBaseMult	./crypto/elliptic/p224.go	/^func (curve p224Curve) ScalarBaseMult(scalar []byte) (x, y *big.Int) {$/;"	f
ScalarBaseMult	./crypto/elliptic/p256.go	/^func (p256Curve) ScalarBaseMult(scalar []byte) (x, y *big.Int) {$/;"	f
ScalarMult	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) ScalarMult(Bx, By *big.Int, k []byte) (*big.Int, *big.Int) {$/;"	f
ScalarMult	./crypto/elliptic/p224.go	/^func (p224Curve) ScalarMult(bigX1, bigY1 *big.Int, scalar []byte) (x, y *big.Int) {$/;"	f
ScalarMult	./crypto/elliptic/p256.go	/^func (p256Curve) ScalarMult(bigX, bigY *big.Int, scalar []byte) (x, y *big.Int) {$/;"	f
ScalarPtr	./runtime/gcinfo_test.go	/^type ScalarPtr struct {$/;"	t
Scalarptr	./reflect/all_test.go	/^		type Scalarptr struct {$/;"	t
ScaleValue	./cmd/pprof/internal/report/report.go	/^func ScaleValue(value int64, fromUnit, toUnit string) (sv float64, su string) {$/;"	f
Scan	./bufio/scan.go	/^func (s *Scanner) Scan() bool {$/;"	f
Scan	./cmd/compile/internal/big/intconv.go	/^func (z *Int) Scan(s fmt.ScanState, ch rune) error {$/;"	f
Scan	./cmd/compile/internal/big/ratconv.go	/^func (z *Rat) Scan(s fmt.ScanState, ch rune) error {$/;"	f
Scan	./cmd/vet/testdata/method.go	/^func (t *MethodTest) Scan(x fmt.ScanState, c byte) { \/\/ ERROR "should have signature Scan"$/;"	f
Scan	./database/sql/sql.go	/^func (n *NullBool) Scan(value interface{}) error {$/;"	f
Scan	./database/sql/sql.go	/^func (n *NullFloat64) Scan(value interface{}) error {$/;"	f
Scan	./database/sql/sql.go	/^func (n *NullInt64) Scan(value interface{}) error {$/;"	f
Scan	./database/sql/sql.go	/^func (ns *NullString) Scan(value interface{}) error {$/;"	f
Scan	./database/sql/sql.go	/^func (r *Row) Scan(dest ...interface{}) error {$/;"	f
Scan	./database/sql/sql.go	/^func (rs *Rows) Scan(dest ...interface{}) error {$/;"	f
Scan	./fmt/scan.go	/^func Scan(a ...interface{}) (n int, err error) {$/;"	f
Scan	./fmt/scan_test.go	/^func (h *hexBytes) Scan(ss ScanState, verb rune) error {$/;"	f
Scan	./fmt/scan_test.go	/^func (r *RecursiveInt) Scan(state ScanState, verb rune) (err error) {$/;"	f
Scan	./fmt/scan_test.go	/^func (rs *runeScanner) Scan(state ScanState, verb rune) error {$/;"	f
Scan	./fmt/scan_test.go	/^func (s *IntString) Scan(state ScanState, verb rune) error {$/;"	f
Scan	./fmt/scan_test.go	/^func (t *TwoLines) Scan(state ScanState, verb rune) error {$/;"	f
Scan	./fmt/scan_test.go	/^func (x *Xs) Scan(state ScanState, verb rune) error {$/;"	f
Scan	./go/scanner/scanner.go	/^func (s *Scanner) Scan() (pos token.Pos, tok token.Token, lit string) {$/;"	f
Scan	./math/big/intconv.go	/^func (z *Int) Scan(s fmt.ScanState, ch rune) error {$/;"	f
Scan	./math/big/ratconv.go	/^func (z *Rat) Scan(s fmt.ScanState, ch rune) error {$/;"	f
Scan	./net/rpc/server_test.go	/^func (t *Arith) Scan(args string, reply *Reply) (err error) {$/;"	f
Scan	./text/scanner/scanner.go	/^func (s *Scanner) Scan() rune {$/;"	f
ScanBytes	./bufio/scan.go	/^func ScanBytes(data []byte, atEOF bool) (advance int, token []byte, err error) {$/;"	f
ScanHelper	./cmd/compile/internal/big/natconv_test.go	/^func ScanHelper(b *testing.B, base int, x, y Word) {$/;"	f
ScanHelper	./math/big/natconv_test.go	/^func ScanHelper(b *testing.B, base int, x, y Word) {$/;"	f
ScanLines	./bufio/scan.go	/^func ScanLines(data []byte, atEOF bool) (advance int, token []byte, err error) {$/;"	f
ScanRunes	./bufio/scan.go	/^func ScanRunes(data []byte, atEOF bool) (advance int, token []byte, err error) {$/;"	f
ScanState	./fmt/scan.go	/^type ScanState interface {$/;"	t
ScanTest	./fmt/scan_test.go	/^type ScanTest struct {$/;"	t
ScanToken	./cmd/asm/internal/lex/lex.go	/^type ScanToken rune$/;"	t
ScanWords	./bufio/scan.go	/^func ScanWords(data []byte, atEOF bool) (advance int, token []byte, err error) {$/;"	f
Scanf	./fmt/scan.go	/^func Scanf(format string, a ...interface{}) (n int, err error) {$/;"	f
ScanfMultiTest	./fmt/scan_test.go	/^type ScanfMultiTest struct {$/;"	t
ScanfTest	./fmt/scan_test.go	/^type ScanfTest struct {$/;"	t
Scanln	./fmt/scan.go	/^func Scanln(a ...interface{}) (n int, err error) {$/;"	f
Scanner	./bufio/scan.go	/^type Scanner struct {$/;"	t
Scanner	./database/sql/sql.go	/^type Scanner interface {$/;"	t
Scanner	./fmt/scan.go	/^type Scanner interface {$/;"	t
Scanner	./go/scanner/scanner.go	/^type Scanner struct {$/;"	t
Scanner	./text/scanner/scanner.go	/^type Scanner struct {$/;"	t
Sconv	./cmd/compile/internal/gc/fmt.go	/^func Sconv(s *Sym, flag int) string {$/;"	f
Scope	./go/ast/scope.go	/^type Scope struct {$/;"	t
Scope	./go/types/object.go	/^func (obj *Func) Scope() *Scope {$/;"	f
Scope	./go/types/package.go	/^func (pkg *Package) Scope() *Scope { return pkg.scope }$/;"	f
Scope	./go/types/scope.go	/^type Scope struct {$/;"	t
Script	./unicode/maketables.go	/^type Script struct {$/;"	t
Scripts	./unicode/maketables.go	/^			println("var Scripts = map[string] *RangeTable{")$/;"	v
Scripts	./unicode/tables.go	/^var Scripts = map[string]*RangeTable{$/;"	v
Seal	./crypto/cipher/gcm.go	/^func (g *gcm) Seal(dst, nonce, plaintext, data []byte) []byte {$/;"	f
Seal	./crypto/tls/cipher_suites.go	/^func (f *fixedNonceAEAD) Seal(out, nonce, plaintext, additionalData []byte) []byte {$/;"	f
Search	./sort/search.go	/^func (p Float64Slice) Search(x float64) int { return SearchFloat64s(p, x) }$/;"	f
Search	./sort/search.go	/^func (p IntSlice) Search(x int) int { return SearchInts(p, x) }$/;"	f
Search	./sort/search.go	/^func (p StringSlice) Search(x string) int { return SearchStrings(p, x) }$/;"	f
Search	./sort/search.go	/^func Search(n int, f func(int) bool) int {$/;"	f
SearchFloat64s	./sort/search.go	/^func SearchFloat64s(a []float64, x float64) int {$/;"	f
SearchInts	./sort/search.go	/^func SearchInts(a []int, x int) int {$/;"	f
SearchPaths	./go/internal/gccgoimporter/gccgoinstallation.go	/^func (inst *GccgoInstallation) SearchPaths() (paths []string) {$/;"	f
SearchStrings	./sort/search.go	/^func SearchStrings(a []string, x string) int {$/;"	f
Second	./time/time.go	/^func (t Time) Second() int {$/;"	f
Seconds	./time/time.go	/^func (d Duration) Seconds() float64 {$/;"	f
SecondsTimeZoneOffsetTest	./time/format_test.go	/^type SecondsTimeZoneOffsetTest struct {$/;"	t
SecretAgent	./encoding/xml/marshal_test.go	/^type SecretAgent struct {$/;"	t
Section	./cmd/link/internal/ld/lib.go	/^type Section struct {$/;"	t
Section	./debug/elf/file.go	/^func (f *File) Section(name string) *Section {$/;"	f
Section	./debug/elf/file.go	/^type Section struct {$/;"	t
Section	./debug/macho/file.go	/^func (f *File) Section(name string) *Section {$/;"	f
Section	./debug/macho/file.go	/^type Section struct {$/;"	t
Section	./debug/pe/file.go	/^func (f *File) Section(name string) *Section {$/;"	f
Section	./debug/pe/file.go	/^type Section struct {$/;"	t
Section	./debug/plan9obj/file.go	/^func (f *File) Section(name string) *Section {$/;"	f
Section	./debug/plan9obj/file.go	/^type Section struct {$/;"	t
Section32	./debug/elf/elf.go	/^type Section32 struct {$/;"	t
Section32	./debug/macho/macho.go	/^type Section32 struct {$/;"	t
Section64	./debug/elf/elf.go	/^type Section64 struct {$/;"	t
Section64	./debug/macho/macho.go	/^type Section64 struct {$/;"	t
SectionByType	./debug/elf/file.go	/^func (f *File) SectionByType(typ SectionType) *Section {$/;"	f
SectionFlag	./debug/elf/elf.go	/^type SectionFlag uint32$/;"	t
SectionHeader	./debug/elf/file.go	/^type SectionHeader struct {$/;"	t
SectionHeader	./debug/macho/file.go	/^type SectionHeader struct {$/;"	t
SectionHeader	./debug/pe/file.go	/^type SectionHeader struct {$/;"	t
SectionHeader	./debug/plan9obj/file.go	/^type SectionHeader struct {$/;"	t
SectionHeader32	./debug/pe/pe.go	/^type SectionHeader32 struct {$/;"	t
SectionIndex	./debug/elf/elf.go	/^type SectionIndex int$/;"	t
SectionReader	./io/io.go	/^type SectionReader struct {$/;"	t
SectionType	./debug/elf/elf.go	/^type SectionType uint32$/;"	t
SecurityAttributes	./syscall/ztypes_windows.go	/^type SecurityAttributes struct {$/;"	t
Seed	./math/rand/rand.go	/^func (r *Rand) Seed(seed int64) { r.src.Seed(seed) }$/;"	f
Seed	./math/rand/rand.go	/^func (r *lockedSource) Seed(seed int64) {$/;"	f
Seed	./math/rand/rand.go	/^func Seed(seed int64) { globalRand.Seed(seed) }$/;"	f
Seed	./math/rand/rng.go	/^func (rng *rngSource) Seed(seed int64) {$/;"	f
Seek	./bytes/reader.go	/^func (r *Reader) Seek(offset int64, whence int) (int64, error) {$/;"	f
Seek	./debug/dwarf/entry.go	/^func (r *Reader) Seek(off Offset) {$/;"	f
Seek	./debug/dwarf/line.go	/^func (r *LineReader) Seek(pos LineReaderPos) {$/;"	f
Seek	./debug/dwarf/typeunit.go	/^func (tur *typeUnitReader) Seek(off Offset) {$/;"	f
Seek	./io/io.go	/^func (s *SectionReader) Seek(offset int64, whence int) (int64, error) {$/;"	f
Seek	./os/file.go	/^func (f *File) Seek(offset int64, whence int) (ret int64, err error) {$/;"	f
Seek	./strings/reader.go	/^func (r *Reader) Seek(offset int64, whence int) (int64, error) {$/;"	f
Seek	./syscall/fd_nacl.go	/^func Seek(fd int, offset int64, whence int) (int64, error) {$/;"	f
Seek	./syscall/syscall_linux_386.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/syscall_linux_arm.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/syscall_plan9.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/syscall_windows.go	/^func Seek(fd Handle, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_darwin_386.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_darwin_amd64.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_darwin_arm.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_darwin_arm64.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_dragonfly_amd64.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_freebsd_386.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_freebsd_amd64.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_freebsd_arm.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_linux_amd64.go	/^func Seek(fd int, offset int64, whence int) (off int64, err error) {$/;"	f
Seek	./syscall/zsyscall_linux_arm64.go	/^func Seek(fd int, offset int64, whence int) (off int64, err error) {$/;"	f
Seek	./syscall/zsyscall_linux_ppc64.go	/^func Seek(fd int, offset int64, whence int) (off int64, err error) {$/;"	f
Seek	./syscall/zsyscall_linux_ppc64le.go	/^func Seek(fd int, offset int64, whence int) (off int64, err error) {$/;"	f
Seek	./syscall/zsyscall_netbsd_386.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_netbsd_amd64.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_netbsd_arm.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_openbsd_386.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_openbsd_amd64.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_openbsd_arm.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
Seek	./syscall/zsyscall_solaris_amd64.go	/^func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {$/;"	f
SeekPC	./debug/dwarf/line.go	/^func (r *LineReader) SeekPC(pc uint64, entry *LineEntry) error {$/;"	f
Seeker	./io/io.go	/^type Seeker interface {$/;"	t
Segment	./cmd/link/internal/ld/lib.go	/^type Segment struct {$/;"	t
Segment	./debug/macho/file.go	/^func (f *File) Segment(name string) *Segment {$/;"	f
Segment	./debug/macho/file.go	/^type Segment struct {$/;"	t
Segment32	./debug/macho/macho.go	/^type Segment32 struct {$/;"	t
Segment64	./debug/macho/macho.go	/^type Segment64 struct {$/;"	t
SegmentHeader	./debug/macho/file.go	/^type SegmentHeader struct {$/;"	t
Select	./reflect/value.go	/^func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool) {$/;"	f
Select	./syscall/zsyscall_darwin_386.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_darwin_amd64.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_darwin_arm.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_darwin_arm64.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_dragonfly_amd64.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_freebsd_386.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_freebsd_amd64.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_freebsd_arm.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_linux_386.go	/^func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {$/;"	f
Select	./syscall/zsyscall_linux_amd64.go	/^func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {$/;"	f
Select	./syscall/zsyscall_linux_arm.go	/^func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {$/;"	f
Select	./syscall/zsyscall_linux_arm64.go	/^func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {$/;"	f
Select	./syscall/zsyscall_linux_ppc64.go	/^func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {$/;"	f
Select	./syscall/zsyscall_linux_ppc64le.go	/^func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {$/;"	f
Select	./syscall/zsyscall_netbsd_386.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_netbsd_amd64.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_netbsd_arm.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_openbsd_386.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_openbsd_amd64.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
Select	./syscall/zsyscall_openbsd_arm.go	/^func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {$/;"	f
SelectCase	./reflect/value.go	/^type SelectCase struct {$/;"	t
SelectDir	./reflect/value.go	/^type SelectDir int$/;"	t
Selection	./go/types/selection.go	/^type Selection struct {$/;"	t
SelectionKind	./go/types/selection.go	/^type SelectionKind int$/;"	t
SelectionString	./go/types/selection.go	/^func SelectionString(s *Selection, qf Qualifier) string {$/;"	f
SemT	./runtime/defs_solaris.go	/^type SemT C.sem_t$/;"	t
Send	./reflect/value.go	/^func (v Value) Send(x Value) {$/;"	f
SendMail	./net/smtp/smtp.go	/^func SendMail(addr string, a Auth, from string, to []string, msg []byte) error {$/;"	f
Sendfile	./syscall/syscall_nacl.go	/^func Sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
Sendfile	./syscall/syscall_unix.go	/^func Sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
Sendmsg	./syscall/net_nacl.go	/^func Sendmsg(fd int, p, oob []byte, to Sockaddr, flags int) error {$/;"	f
Sendmsg	./syscall/syscall_bsd.go	/^func Sendmsg(fd int, p, oob []byte, to Sockaddr, flags int) (err error) {$/;"	f
Sendmsg	./syscall/syscall_linux.go	/^func Sendmsg(fd int, p, oob []byte, to Sockaddr, flags int) (err error) {$/;"	f
Sendmsg	./syscall/syscall_solaris.go	/^func Sendmsg(fd int, p, oob []byte, to Sockaddr, flags int) (err error) {$/;"	f
SendmsgN	./syscall/net_nacl.go	/^func SendmsgN(fd int, p, oob []byte, to Sockaddr, flags int) (n int, err error) {$/;"	f
SendmsgN	./syscall/syscall_bsd.go	/^func SendmsgN(fd int, p, oob []byte, to Sockaddr, flags int) (n int, err error) {$/;"	f
SendmsgN	./syscall/syscall_linux.go	/^func SendmsgN(fd int, p, oob []byte, to Sockaddr, flags int) (n int, err error) {$/;"	f
SendmsgN	./syscall/syscall_solaris.go	/^func SendmsgN(fd int, p, oob []byte, to Sockaddr, flags int) (n int, err error) {$/;"	f
Sendto	./syscall/net_nacl.go	/^func Sendto(fd int, p []byte, flags int, to Sockaddr) error {$/;"	f
Sendto	./syscall/syscall_unix.go	/^func Sendto(fd int, p []byte, flags int, to Sockaddr) (err error) {$/;"	f
Sendto	./syscall/syscall_windows.go	/^func Sendto(fd Handle, p []byte, flags int, to Sockaddr) (err error)       { return EWINDOWS }$/;"	f
Serve	./net/http/cgi/child.go	/^func Serve(handler http.Handler) error {$/;"	f
Serve	./net/http/fcgi/child.go	/^func Serve(l net.Listener, handler http.Handler) error {$/;"	f
Serve	./net/http/server.go	/^func (srv *Server) Serve(l net.Listener) error {$/;"	f
Serve	./net/http/server.go	/^func Serve(l net.Listener, handler Handler) error {$/;"	f
ServeCodec	./net/rpc/server.go	/^func (server *Server) ServeCodec(codec ServerCodec) {$/;"	f
ServeCodec	./net/rpc/server.go	/^func ServeCodec(codec ServerCodec) {$/;"	f
ServeConn	./net/rpc/jsonrpc/server.go	/^func ServeConn(conn io.ReadWriteCloser) {$/;"	f
ServeConn	./net/rpc/server.go	/^func (server *Server) ServeConn(conn io.ReadWriteCloser) {$/;"	f
ServeConn	./net/rpc/server.go	/^func ServeConn(conn io.ReadWriteCloser) {$/;"	f
ServeContent	./net/http/fs.go	/^func ServeContent(w ResponseWriter, req *Request, name string, modtime time.Time, content io.ReadSeeker) {$/;"	f
ServeFile	./net/http/fs.go	/^func ServeFile(w ResponseWriter, r *Request, name string) {$/;"	f
ServeFileRangeTests	./net/http/fs_test.go	/^var ServeFileRangeTests = []struct {$/;"	v
ServeHTTP	./net/http/cgi/host.go	/^func (h *Handler) ServeHTTP(rw http.ResponseWriter, req *http.Request) {$/;"	f
ServeHTTP	./net/http/example_test.go	/^func (apiHandler) ServeHTTP(http.ResponseWriter, *http.Request) {}$/;"	f
ServeHTTP	./net/http/fs.go	/^func (f *fileHandler) ServeHTTP(w ResponseWriter, r *Request) {$/;"	f
ServeHTTP	./net/http/httptest/server.go	/^func (h *waitGroupHandler) ServeHTTP(w http.ResponseWriter, r *http.Request) {$/;"	f
ServeHTTP	./net/http/httputil/reverseproxy.go	/^func (p *ReverseProxy) ServeHTTP(rw http.ResponseWriter, req *http.Request) {$/;"	f
ServeHTTP	./net/http/pprof/pprof.go	/^func (name handler) ServeHTTP(w http.ResponseWriter, r *http.Request) {$/;"	f
ServeHTTP	./net/http/serve_test.go	/^func (s stringHandler) ServeHTTP(w ResponseWriter, r *Request) {$/;"	f
ServeHTTP	./net/http/server.go	/^func (f HandlerFunc) ServeHTTP(w ResponseWriter, r *Request) {$/;"	f
ServeHTTP	./net/http/server.go	/^func (globalOptionsHandler) ServeHTTP(w ResponseWriter, r *Request) {$/;"	f
ServeHTTP	./net/http/server.go	/^func (h *timeoutHandler) ServeHTTP(w ResponseWriter, r *Request) {$/;"	f
ServeHTTP	./net/http/server.go	/^func (h initNPNRequest) ServeHTTP(rw ResponseWriter, req *Request) {$/;"	f
ServeHTTP	./net/http/server.go	/^func (mux *ServeMux) ServeHTTP(w ResponseWriter, r *Request) {$/;"	f
ServeHTTP	./net/http/server.go	/^func (rh *redirectHandler) ServeHTTP(w ResponseWriter, r *Request) {$/;"	f
ServeHTTP	./net/http/server.go	/^func (sh serverHandler) ServeHTTP(rw ResponseWriter, req *Request) {$/;"	f
ServeHTTP	./net/http/triv.go	/^func (ch Chan) ServeHTTP(w http.ResponseWriter, req *http.Request) {$/;"	f
ServeHTTP	./net/http/triv.go	/^func (ctr *Counter) ServeHTTP(w http.ResponseWriter, req *http.Request) {$/;"	f
ServeHTTP	./net/rpc/debug.go	/^func (server debugHTTP) ServeHTTP(w http.ResponseWriter, req *http.Request) {$/;"	f
ServeHTTP	./net/rpc/server.go	/^func (server *Server) ServeHTTP(w http.ResponseWriter, req *http.Request) {$/;"	f
ServeMux	./net/http/server.go	/^type ServeMux struct {$/;"	t
ServeRequest	./net/rpc/server.go	/^func (server *Server) ServeRequest(codec ServerCodec) error {$/;"	f
ServeRequest	./net/rpc/server.go	/^func ServeRequest(codec ServerCodec) error {$/;"	f
Servent	./syscall/ztypes_windows_386.go	/^type Servent struct {$/;"	t
Servent	./syscall/ztypes_windows_amd64.go	/^type Servent struct {$/;"	t
Server	./crypto/tls/tls.go	/^func Server(conn net.Conn, config *Config) *Conn {$/;"	f
Server	./net/http/httptest/server.go	/^type Server struct {$/;"	t
Server	./net/http/server.go	/^type Server struct {$/;"	t
Server	./net/rpc/server.go	/^type Server struct {$/;"	t
ServerCodec	./net/rpc/server.go	/^type ServerCodec interface {$/;"	t
ServerConn	./net/http/httputil/persist.go	/^type ServerConn struct {$/;"	t
ServerError	./net/rpc/client.go	/^type ServerError string$/;"	t
ServerInfo	./net/smtp/auth.go	/^type ServerInfo struct {$/;"	t
Service	./encoding/xml/marshal_test.go	/^type Service struct {$/;"	t
Set	./cmd/asm/internal/arch/arch.go	/^func Set(GOARCH string) *Arch {$/;"	f
Set	./cmd/asm/internal/flags/flags.go	/^func (m *MultiFlag) Set(val string) error {$/;"	f
Set	./cmd/cgo/gcc.go	/^func (tr *TypeRepr) Set(repr string, fargs ...interface{}) {$/;"	f
Set	./cmd/compile/internal/big/float.go	/^func (z *Float) Set(x *Float) *Float {$/;"	f
Set	./cmd/compile/internal/big/int.go	/^func (z *Int) Set(x *Int) *Int {$/;"	f
Set	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Set(x *Rat) *Rat {$/;"	f
Set	./cmd/dist/main.go	/^func (c *count) Set(s string) error {$/;"	f
Set	./cmd/internal/obj/flag.go	/^func (c *count) Set(s string) error {$/;"	f
Set	./cmd/internal/obj/flag.go	/^func (f fn0) Set(s string) error {$/;"	f
Set	./cmd/internal/obj/flag.go	/^func (f fn1) Set(s string) error {$/;"	f
Set	./cmd/internal/obj/flag.go	/^func (i *int32Value) Set(s string) error {$/;"	f
Set	./cmd/link/internal/ld/lib.go	/^func (mode *BuildMode) Set(s string) error {$/;"	f
Set	./cmd/link/internal/ld/lib.go	/^func (r *Rpath) Set(val string) error {$/;"	f
Set	./cmd/nm/nm.go	/^func (nflag) Set(value string) error {$/;"	f
Set	./cmd/vet/main.go	/^func (ts *triState) Set(value string) error {$/;"	f
Set	./expvar/expvar.go	/^func (v *Float) Set(value float64) {$/;"	f
Set	./expvar/expvar.go	/^func (v *Int) Set(value int64) {$/;"	f
Set	./expvar/expvar.go	/^func (v *Map) Set(key string, av Var) {$/;"	f
Set	./expvar/expvar.go	/^func (v *String) Set(value string) {$/;"	f
Set	./flag/example_test.go	/^func (i *interval) Set(value string) error {$/;"	f
Set	./flag/flag.go	/^func (b *boolValue) Set(s string) error {$/;"	f
Set	./flag/flag.go	/^func (d *durationValue) Set(s string) error {$/;"	f
Set	./flag/flag.go	/^func (f *FlagSet) Set(name, value string) error {$/;"	f
Set	./flag/flag.go	/^func (f *float64Value) Set(s string) error {$/;"	f
Set	./flag/flag.go	/^func (i *int64Value) Set(s string) error {$/;"	f
Set	./flag/flag.go	/^func (i *intValue) Set(s string) error {$/;"	f
Set	./flag/flag.go	/^func (i *uint64Value) Set(s string) error {$/;"	f
Set	./flag/flag.go	/^func (i *uintValue) Set(s string) error {$/;"	f
Set	./flag/flag.go	/^func (s *stringValue) Set(val string) error {$/;"	f
Set	./flag/flag.go	/^func Set(name, value string) error {$/;"	f
Set	./flag/flag_test.go	/^func (b *boolFlagVar) Set(value string) error {$/;"	f
Set	./flag/flag_test.go	/^func (f *flagVar) Set(value string) error {$/;"	f
Set	./image/image.go	/^func (p *Alpha) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *Alpha16) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *CMYK) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *Gray) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *Gray16) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *NRGBA) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *NRGBA64) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *Paletted) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *RGBA) Set(x, y int, c color.Color) {$/;"	f
Set	./image/image.go	/^func (p *RGBA64) Set(x, y int, c color.Color) {$/;"	f
Set	./math/big/float.go	/^func (z *Float) Set(x *Float) *Float {$/;"	f
Set	./math/big/int.go	/^func (z *Int) Set(x *Int) *Int {$/;"	f
Set	./math/big/rat.go	/^func (z *Rat) Set(x *Rat) *Rat {$/;"	f
Set	./net/http/header.go	/^func (h Header) Set(key, value string) {$/;"	f
Set	./net/internal/socktest/switch.go	/^func (sw *Switch) Set(t FilterType, f Filter) {$/;"	f
Set	./net/textproto/header.go	/^func (h MIMEHeader) Set(key, value string) {$/;"	f
Set	./net/url/url.go	/^func (v Values) Set(key, value string) {$/;"	f
Set	./reflect/value.go	/^func (v Value) Set(x Value) {$/;"	f
SetAlpha	./image/image.go	/^func (p *Alpha) SetAlpha(x, y int, c color.Alpha) {$/;"	f
SetAlpha16	./image/image.go	/^func (p *Alpha16) SetAlpha16(x, y int, c color.Alpha16) {$/;"	f
SetAutoComplete	./cmd/pprof/internal/plugin/plugin.go	/^func (ui *stdUI) SetAutoComplete(func(string) string) {$/;"	f
SetBasicAuth	./net/http/request.go	/^func (r *Request) SetBasicAuth(username, password string) {$/;"	f
SetBigInt	./cmd/compile/internal/gc/const.go	/^func (n *Node) SetBigInt(x *big.Int) {$/;"	f
SetBinaryValue	./internal/syscall/windows/registry/value.go	/^func (k Key) SetBinaryValue(name string, value []byte) error {$/;"	f
SetBit	./cmd/compile/internal/big/int.go	/^func (z *Int) SetBit(x *Int, i int, b uint) *Int {$/;"	f
SetBit	./math/big/int.go	/^func (z *Int) SetBit(x *Int, i int, b uint) *Int {$/;"	f
SetBits	./cmd/compile/internal/big/int.go	/^func (z *Int) SetBits(abs []Word) *Int {$/;"	f
SetBits	./math/big/int.go	/^func (z *Int) SetBits(abs []Word) *Int {$/;"	f
SetBlockProfileRate	./runtime/mprof.go	/^func SetBlockProfileRate(rate int) {$/;"	f
SetBool	./reflect/value.go	/^func (v Value) SetBool(x bool) {$/;"	f
SetBoundary	./mime/multipart/writer.go	/^func (w *Writer) SetBoundary(boundary string) error {$/;"	f
SetBpf	./syscall/bpf_bsd.go	/^func SetBpf(fd int, i []BpfInsn) error {$/;"	f
SetBpfBuflen	./syscall/bpf_bsd.go	/^func SetBpfBuflen(fd, l int) (int, error) {$/;"	f
SetBpfDatalink	./syscall/bpf_bsd.go	/^func SetBpfDatalink(fd, t int) (int, error) {$/;"	f
SetBpfHeadercmpl	./syscall/bpf_bsd.go	/^func SetBpfHeadercmpl(fd, f int) error {$/;"	f
SetBpfImmediate	./syscall/bpf_bsd.go	/^func SetBpfImmediate(fd, m int) error {$/;"	f
SetBpfInterface	./syscall/bpf_bsd.go	/^func SetBpfInterface(fd int, name string) error {$/;"	f
SetBpfPromisc	./syscall/bpf_bsd.go	/^func SetBpfPromisc(fd, m int) error {$/;"	f
SetBpfTimeout	./syscall/bpf_bsd.go	/^func SetBpfTimeout(fd int, tv *Timeval) error {$/;"	f
SetBytes	./cmd/compile/internal/big/int.go	/^func (z *Int) SetBytes(buf []byte) *Int {$/;"	f
SetBytes	./go/doc/testdata/benchmark.go	/^func (b *B) SetBytes(n int64) { b.bytes = n }$/;"	f
SetBytes	./math/big/int.go	/^func (z *Int) SetBytes(buf []byte) *Int {$/;"	f
SetBytes	./reflect/value.go	/^func (v Value) SetBytes(x []byte) {$/;"	f
SetBytes	./testing/benchmark.go	/^func (b *B) SetBytes(n int64) { b.bytes = n }$/;"	f
SetCMYK	./image/image.go	/^func (p *CMYK) SetCMYK(x, y int, c color.CMYK) {$/;"	f
SetCPUProfileRate	./runtime/cpuprof.go	/^func SetCPUProfileRate(hz int) {$/;"	f
SetCap	./reflect/value.go	/^func (v Value) SetCap(n int) {$/;"	f
SetColorIndex	./image/image.go	/^func (p *Paletted) SetColorIndex(x, y int, index uint8) {$/;"	f
SetComplex	./reflect/value.go	/^func (v Value) SetComplex(x complex128) {$/;"	f
SetConfig	./cmd/pprof/internal/plugin/plugin.go	/^func (noObjTool) SetConfig(config string) {$/;"	f
SetConfig	./cmd/pprof/pprof.go	/^func (*objTool) SetConfig(config string) {$/;"	f
SetControllen	./syscall/syscall_darwin_386.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_darwin_amd64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_darwin_arm.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_darwin_arm64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_dragonfly_amd64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_freebsd_386.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_freebsd_amd64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_freebsd_arm.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_linux_386.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_linux_amd64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_linux_arm.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_linux_arm64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_linux_ppc64x.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_netbsd_386.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_netbsd_amd64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_netbsd_arm.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_openbsd_386.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_openbsd_amd64.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetControllen	./syscall/syscall_openbsd_arm.go	/^func (msghdr *Msghdr) SetControllen(length int) {$/;"	f
SetCookie	./net/http/cookie.go	/^func SetCookie(w ResponseWriter, cookie *Cookie) {$/;"	f
SetCookies	./net/http/client_test.go	/^func (j *RecordingJar) SetCookies(u *url.URL, cookies []*Cookie) {$/;"	f
SetCookies	./net/http/client_test.go	/^func (j *TestJar) SetCookies(u *url.URL, cookies []*Cookie) {$/;"	f
SetCookies	./net/http/cookiejar/jar.go	/^func (j *Jar) SetCookies(u *url.URL, cookies []*http.Cookie) {$/;"	f
SetCurrentDirectory	./syscall/zsyscall_windows.go	/^func SetCurrentDirectory(path *uint16) (err error) {$/;"	f
SetDWordValue	./internal/syscall/windows/registry/value.go	/^func (k Key) SetDWordValue(name string, value uint32) error {$/;"	f
SetDeadline	./crypto/tls/conn.go	/^func (c *Conn) SetDeadline(t time.Time) error {$/;"	f
SetDeadline	./net/http/httputil/dump.go	/^func (c *dumpConn) SetDeadline(t time.Time) error      { return nil }$/;"	f
SetDeadline	./net/http/serve_test.go	/^func (c *slowTestConn) SetDeadline(t time.Time) error {$/;"	f
SetDeadline	./net/http/serve_test.go	/^func (noopConn) SetDeadline(t time.Time) error      { return nil }$/;"	f
SetDeadline	./net/net.go	/^func (c *conn) SetDeadline(t time.Time) error {$/;"	f
SetDeadline	./net/pipe.go	/^func (p *pipe) SetDeadline(t time.Time) error {$/;"	f
SetDeadline	./net/smtp/smtp_test.go	/^func (f faker) SetDeadline(time.Time) error      { return nil }$/;"	f
SetDeadline	./net/tcpsock_plan9.go	/^func (l *TCPListener) SetDeadline(t time.Time) error {$/;"	f
SetDeadline	./net/tcpsock_posix.go	/^func (l *TCPListener) SetDeadline(t time.Time) error {$/;"	f
SetDeadline	./net/unixsock_plan9.go	/^func (l *UnixListener) SetDeadline(t time.Time) error {$/;"	f
SetDeadline	./net/unixsock_posix.go	/^func (l *UnixListener) SetDeadline(t time.Time) error {$/;"	f
SetEndOfFile	./syscall/zsyscall_windows.go	/^func SetEndOfFile(handle Handle) (err error) {$/;"	f
SetEnterRoundTripHook	./net/http/export_test.go	/^func SetEnterRoundTripHook(f func()) {$/;"	f
SetEnvironmentVariable	./syscall/zsyscall_windows.go	/^func SetEnvironmentVariable(name *uint16, value *uint16) (err error) {$/;"	f
SetEnvs	./runtime/export_test.go	/^func SetEnvs(e []string) { envs = e }$/;"	f
SetErrorCode	./syscall/mksyscall_windows.go	/^func (r *Rets) SetErrorCode() string {$/;"	f
SetExpandStringValue	./internal/syscall/windows/registry/value.go	/^func (k Key) SetExpandStringValue(name, value string) error {$/;"	f
SetF	./go/types/example_test.go	/^func (c *Celsius) SetF(f float64) { *c = Celsius(f - 32 \/ 9 * 5) }$/;"	f
SetFileAttributes	./syscall/zsyscall_windows.go	/^func SetFileAttributes(name *uint16, attrs uint32) (err error) {$/;"	f
SetFileCompletionNotificationModes	./syscall/zsyscall_windows.go	/^func SetFileCompletionNotificationModes(handle Handle, flags uint8) (err error) {$/;"	f
SetFilePointer	./syscall/zsyscall_windows.go	/^func SetFilePointer(handle Handle, lowoffset int32, highoffsetptr *int32, whence uint32) (newlowoffset uint32, err error) {$/;"	f
SetFileTime	./syscall/zsyscall_windows.go	/^func SetFileTime(handle Handle, ctime *Filetime, atime *Filetime, wtime *Filetime) (err error) {$/;"	f
SetFinalizer	./runtime/mfinal.go	/^func SetFinalizer(obj interface{}, finalizer interface{}) {$/;"	f
SetFlags	./log/log.go	/^func (l *Logger) SetFlags(flag int) {$/;"	f
SetFlags	./log/log.go	/^func SetFlags(flag int) {$/;"	f
SetFloat	./reflect/value.go	/^func (v Value) SetFloat(x float64) {$/;"	f
SetFloat64	./cmd/compile/internal/big/float.go	/^func (z *Float) SetFloat64(x float64) *Float {$/;"	f
SetFloat64	./cmd/compile/internal/big/rat.go	/^func (z *Rat) SetFloat64(f float64) *Rat {$/;"	f
SetFloat64	./math/big/float.go	/^func (z *Float) SetFloat64(x float64) *Float {$/;"	f
SetFloat64	./math/big/rat.go	/^func (z *Rat) SetFloat64(f float64) *Rat {$/;"	f
SetFrac	./cmd/compile/internal/big/rat.go	/^func (z *Rat) SetFrac(a, b *Int) *Rat {$/;"	f
SetFrac	./math/big/rat.go	/^func (z *Rat) SetFrac(a, b *Int) *Rat {$/;"	f
SetFrac64	./cmd/compile/internal/big/rat.go	/^func (z *Rat) SetFrac64(a, b int64) *Rat {$/;"	f
SetFrac64	./math/big/rat.go	/^func (z *Rat) SetFrac64(a, b int64) *Rat {$/;"	f
SetGCPercent	./runtime/debug/garbage.go	/^func SetGCPercent(percent int) int {$/;"	f
SetGray	./image/image.go	/^func (p *Gray) SetGray(x, y int, c color.Gray) {$/;"	f
SetGray16	./image/image.go	/^func (p *Gray16) SetGray16(x, y int, c color.Gray16) {$/;"	f
SetHandleInformation	./syscall/zsyscall_windows.go	/^func SetHandleInformation(handle Handle, mask uint32, flags uint32) (err error) {$/;"	f
SetIV	./crypto/cipher/cbc.go	/^func (x *cbcDecrypter) SetIV(iv []byte) {$/;"	f
SetIV	./crypto/cipher/cbc.go	/^func (x *cbcEncrypter) SetIV(iv []byte) {$/;"	f
SetImports	./go/types/package.go	/^func (pkg *Package) SetImports(list []*Package) { pkg.imports = list }$/;"	f
SetInf	./cmd/compile/internal/big/float.go	/^func (z *Float) SetInf(signbit bool) *Float {$/;"	f
SetInf	./math/big/float.go	/^func (z *Float) SetInf(signbit bool) *Float {$/;"	f
SetInstallConnClosedHook	./net/http/export_test.go	/^func SetInstallConnClosedHook(f func()) {$/;"	f
SetInt	./cmd/compile/internal/big/float.go	/^func (z *Float) SetInt(x *Int) *Float {$/;"	f
SetInt	./cmd/compile/internal/big/rat.go	/^func (z *Rat) SetInt(x *Int) *Rat {$/;"	f
SetInt	./cmd/compile/internal/gc/const.go	/^func (n *Node) SetInt(i int64) {$/;"	f
SetInt	./math/big/float.go	/^func (z *Float) SetInt(x *Int) *Float {$/;"	f
SetInt	./math/big/rat.go	/^func (z *Rat) SetInt(x *Int) *Rat {$/;"	f
SetInt	./reflect/value.go	/^func (v Value) SetInt(x int64) {$/;"	f
SetInt64	./cmd/compile/internal/big/float.go	/^func (z *Float) SetInt64(x int64) *Float {$/;"	f
SetInt64	./cmd/compile/internal/big/int.go	/^func (z *Int) SetInt64(x int64) *Int {$/;"	f
SetInt64	./cmd/compile/internal/big/rat.go	/^func (z *Rat) SetInt64(x int64) *Rat {$/;"	f
SetInt64	./math/big/float.go	/^func (z *Float) SetInt64(x int64) *Float {$/;"	f
SetInt64	./math/big/int.go	/^func (z *Int) SetInt64(x int64) *Int {$/;"	f
SetInt64	./math/big/rat.go	/^func (z *Rat) SetInt64(x int64) *Rat {$/;"	f
SetKeepAlive	./net/tcpsock_plan9.go	/^func (c *TCPConn) SetKeepAlive(keepalive bool) error {$/;"	f
SetKeepAlive	./net/tcpsock_posix.go	/^func (c *TCPConn) SetKeepAlive(keepalive bool) error {$/;"	f
SetKeepAlivePeriod	./net/tcpsock_plan9.go	/^func (c *TCPConn) SetKeepAlivePeriod(d time.Duration) error {$/;"	f
SetKeepAlivePeriod	./net/tcpsock_posix.go	/^func (c *TCPConn) SetKeepAlivePeriod(d time.Duration) error {$/;"	f
SetKeepAlivesEnabled	./net/http/server.go	/^func (srv *Server) SetKeepAlivesEnabled(v bool) {$/;"	f
SetKevent	./syscall/syscall_darwin_386.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_darwin_amd64.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_darwin_arm.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_darwin_arm64.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_dragonfly_amd64.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_freebsd_386.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_freebsd_amd64.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_freebsd_arm.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_netbsd_386.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_netbsd_amd64.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_netbsd_arm.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_openbsd_386.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_openbsd_amd64.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetKevent	./syscall/syscall_openbsd_arm.go	/^func SetKevent(k *Kevent_t, fd, mode, flags int) {$/;"	f
SetLen	./reflect/value.go	/^func (v Value) SetLen(n int) {$/;"	f
SetLen	./syscall/syscall_darwin_386.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_darwin_386.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_darwin_amd64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_darwin_amd64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_darwin_arm.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_darwin_arm.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_darwin_arm64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_darwin_arm64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_dragonfly_amd64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_dragonfly_amd64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_freebsd_386.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_freebsd_386.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_freebsd_amd64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_freebsd_amd64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_freebsd_arm.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_freebsd_arm.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_386.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_386.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_amd64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_amd64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_arm.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_arm.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_arm64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_arm64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_ppc64x.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_linux_ppc64x.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_netbsd_386.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_netbsd_386.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_netbsd_amd64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_netbsd_amd64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_netbsd_arm.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_netbsd_arm.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_openbsd_386.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_openbsd_386.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_openbsd_amd64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_openbsd_amd64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_openbsd_arm.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_openbsd_arm.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_solaris_amd64.go	/^func (cmsg *Cmsghdr) SetLen(length int) {$/;"	f
SetLen	./syscall/syscall_solaris_amd64.go	/^func (iov *Iovec) SetLen(length int) {$/;"	f
SetLines	./go/token/position.go	/^func (f *File) SetLines(lines []int) bool {$/;"	f
SetLinesForContent	./go/token/position.go	/^func (f *File) SetLinesForContent(content []byte) {$/;"	f
SetLinger	./net/tcpsock_plan9.go	/^func (c *TCPConn) SetLinger(sec int) error {$/;"	f
SetLinger	./net/tcpsock_posix.go	/^func (c *TCPConn) SetLinger(sec int) error {$/;"	f
SetLsfPromisc	./syscall/lsf_linux.go	/^func SetLsfPromisc(name string, m bool) error {$/;"	f
SetMantExp	./cmd/compile/internal/big/float.go	/^func (z *Float) SetMantExp(mant *Float, exp int) *Float {$/;"	f
SetMantExp	./math/big/float.go	/^func (z *Float) SetMantExp(mant *Float, exp int) *Float {$/;"	f
SetMapIndex	./reflect/value.go	/^func (v Value) SetMapIndex(key, val Value) {$/;"	f
SetMaxIdleConns	./database/sql/sql.go	/^func (db *DB) SetMaxIdleConns(n int) {$/;"	f
SetMaxOpenConns	./database/sql/sql.go	/^func (db *DB) SetMaxOpenConns(n int) {$/;"	f
SetMaxStack	./runtime/debug/garbage.go	/^func SetMaxStack(bytes int) int {$/;"	f
SetMaxThreads	./runtime/debug/garbage.go	/^func SetMaxThreads(threads int) int {$/;"	f
SetModTime	./archive/zip/struct.go	/^func (h *FileHeader) SetModTime(t time.Time) {$/;"	f
SetMode	./archive/zip/struct.go	/^func (h *FileHeader) SetMode(mode os.FileMode) {$/;"	f
SetMode	./cmd/compile/internal/big/float.go	/^func (z *Float) SetMode(mode RoundingMode) *Float {$/;"	f
SetMode	./math/big/float.go	/^func (z *Float) SetMode(mode RoundingMode) *Float {$/;"	f
SetNRGBA	./image/image.go	/^func (p *NRGBA) SetNRGBA(x, y int, c color.NRGBA) {$/;"	f
SetNRGBA64	./image/image.go	/^func (p *NRGBA64) SetNRGBA64(x, y int, c color.NRGBA64) {$/;"	f
SetNoDelay	./net/tcpsock_plan9.go	/^func (c *TCPConn) SetNoDelay(noDelay bool) error {$/;"	f
SetNoDelay	./net/tcpsock_posix.go	/^func (c *TCPConn) SetNoDelay(noDelay bool) error {$/;"	f
SetNonblock	./syscall/exec_unix.go	/^func SetNonblock(fd int, nonblocking bool) (err error) {$/;"	f
SetNonblock	./syscall/exec_windows.go	/^func SetNonblock(fd Handle, nonblocking bool) (err error) {$/;"	f
SetNonblock	./syscall/net_nacl.go	/^func SetNonblock(fd int, nonblocking bool) error { return nil }$/;"	f
SetOffset	./archive/zip/writer.go	/^func (w *Writer) SetOffset(n int64) {$/;"	f
SetOpt	./cmd/compile/internal/gc/syntax.go	/^func (n *Node) SetOpt(x interface{}) {$/;"	f
SetOptimize	./strconv/internal_test.go	/^func SetOptimize(b bool) bool {$/;"	f
SetOutput	./flag/flag.go	/^func (f *FlagSet) SetOutput(output io.Writer) {$/;"	f
SetOutput	./log/log.go	/^func (l *Logger) SetOutput(w io.Writer) {$/;"	f
SetOutput	./log/log.go	/^func SetOutput(w io.Writer) {$/;"	f
SetPC	./syscall/syscall_linux_386.go	/^func (r *PtraceRegs) SetPC(pc uint64) { r.Eip = int32(pc) }$/;"	f
SetPC	./syscall/syscall_linux_amd64.go	/^func (r *PtraceRegs) SetPC(pc uint64) { r.Rip = pc }$/;"	f
SetPC	./syscall/syscall_linux_arm.go	/^func (r *PtraceRegs) SetPC(pc uint64) { r.Uregs[15] = uint32(pc) }$/;"	f
SetPC	./syscall/syscall_linux_arm64.go	/^func (r *PtraceRegs) SetPC(pc uint64) { r.Pc = pc }$/;"	f
SetPC	./syscall/syscall_linux_ppc64x.go	/^func (r *PtraceRegs) SetPC(pc uint64) { r.Nip = pc }$/;"	f
SetPanicOnFault	./runtime/debug/garbage.go	/^func SetPanicOnFault(enabled bool) bool {$/;"	f
SetParallelism	./testing/benchmark.go	/^func (b *B) SetParallelism(p int) {$/;"	f
SetPendingDialHooks	./net/http/export_test.go	/^func SetPendingDialHooks(before, after func()) {$/;"	f
SetPointer	./reflect/value.go	/^func (v Value) SetPointer(x unsafe.Pointer) {$/;"	f
SetPos	./cmd/asm/internal/lex/slice.go	/^func (s *Slice) SetPos(line int, file string) {$/;"	f
SetPos	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) SetPos(line int, file string) {$/;"	f
SetPos	./cmd/asm/internal/lex/tokenizer.go	/^func (t *Tokenizer) SetPos(line int, file string) {$/;"	f
SetPos	./text/template/parse/node.go	/^func (i *IdentifierNode) SetPos(pos Pos) *IdentifierNode {$/;"	f
SetPrec	./cmd/compile/internal/big/float.go	/^func (z *Float) SetPrec(prec uint) *Float {$/;"	f
SetPrec	./math/big/float.go	/^func (z *Float) SetPrec(prec uint) *Float {$/;"	f
SetPrefix	./log/log.go	/^func (l *Logger) SetPrefix(prefix string) {$/;"	f
SetPrefix	./log/log.go	/^func SetPrefix(prefix string) {$/;"	f
SetQWordValue	./internal/syscall/windows/registry/value.go	/^func (k Key) SetQWordValue(name string, value uint64) error {$/;"	f
SetRGBA	./image/image.go	/^func (p *RGBA) SetRGBA(x, y int, c color.RGBA) {$/;"	f
SetRGBA64	./image/image.go	/^func (p *RGBA64) SetRGBA64(x, y int, c color.RGBA64) {$/;"	f
SetRat	./cmd/compile/internal/big/float.go	/^func (z *Float) SetRat(x *Rat) *Float {$/;"	f
SetRat	./math/big/float.go	/^func (z *Float) SetRat(x *Rat) *Float {$/;"	f
SetReadBuffer	./net/net.go	/^func (c *conn) SetReadBuffer(bytes int) error {$/;"	f
SetReadDeadline	./crypto/tls/conn.go	/^func (c *Conn) SetReadDeadline(t time.Time) error {$/;"	f
SetReadDeadline	./net/http/httputil/dump.go	/^func (c *dumpConn) SetReadDeadline(t time.Time) error  { return nil }$/;"	f
SetReadDeadline	./net/http/serve_test.go	/^func (c *slowTestConn) SetReadDeadline(t time.Time) error {$/;"	f
SetReadDeadline	./net/http/serve_test.go	/^func (noopConn) SetReadDeadline(t time.Time) error  { return nil }$/;"	f
SetReadDeadline	./net/net.go	/^func (c *conn) SetReadDeadline(t time.Time) error {$/;"	f
SetReadDeadline	./net/pipe.go	/^func (p *pipe) SetReadDeadline(t time.Time) error {$/;"	f
SetReadDeadline	./net/smtp/smtp_test.go	/^func (f faker) SetReadDeadline(time.Time) error  { return nil }$/;"	f
SetReadDeadline	./syscall/net_nacl.go	/^func SetReadDeadline(fd int, t int64) error {$/;"	f
SetReadLoopBeforeNextReadHook	./net/http/export_test.go	/^func SetReadLoopBeforeNextReadHook(f func()) {$/;"	f
SetReadTimeout	./net/rpc/jsonrpc/all_test.go	/^func (p *pipe) SetReadTimeout(nsec int64) error {$/;"	f
SetReg	./cmd/compile/internal/gc/gsubr.go	/^func SetReg(r, v int) {$/;"	f
SetReturnValuesCode	./syscall/mksyscall_windows.go	/^func (r *Rets) SetReturnValuesCode() string {$/;"	f
SetSessionTicketKeys	./crypto/tls/common.go	/^func (c *Config) SetSessionTicketKeys(keys [][32]byte) {$/;"	f
SetString	./cmd/compile/internal/big/floatconv.go	/^func (z *Float) SetString(s string) (*Float, bool) {$/;"	f
SetString	./cmd/compile/internal/big/int.go	/^func (z *Int) SetString(s string, base int) (*Int, bool) {$/;"	f
SetString	./cmd/compile/internal/big/ratconv.go	/^func (z *Rat) SetString(s string) (*Rat, bool) {$/;"	f
SetString	./math/big/floatconv.go	/^func (z *Float) SetString(s string) (*Float, bool) {$/;"	f
SetString	./math/big/int.go	/^func (z *Int) SetString(s string, base int) (*Int, bool) {$/;"	f
SetString	./math/big/ratconv.go	/^func (z *Rat) SetString(s string) (*Rat, bool) {$/;"	f
SetString	./reflect/value.go	/^func (v Value) SetString(x string) {$/;"	f
SetStringValue	./internal/syscall/windows/registry/value.go	/^func (k Key) SetStringValue(name, value string) error {$/;"	f
SetStringsValue	./internal/syscall/windows/registry/value.go	/^func (k Key) SetStringsValue(name string, value []string) error {$/;"	f
SetTimeout	./net/rpc/jsonrpc/all_test.go	/^func (p *pipe) SetTimeout(nsec int64) error {$/;"	f
SetTree	./text/template/parse/node.go	/^func (i *IdentifierNode) SetTree(t *Tree) *IdentifierNode {$/;"	f
SetUint	./reflect/value.go	/^func (v Value) SetUint(x uint64) {$/;"	f
SetUint64	./cmd/compile/internal/big/float.go	/^func (z *Float) SetUint64(x uint64) *Float {$/;"	f
SetUint64	./cmd/compile/internal/big/int.go	/^func (z *Int) SetUint64(x uint64) *Int {$/;"	f
SetUint64	./math/big/float.go	/^func (z *Float) SetUint64(x uint64) *Float {$/;"	f
SetUint64	./math/big/int.go	/^func (z *Int) SetUint64(x uint64) *Int {$/;"	f
SetUnderlying	./go/types/type.go	/^func (t *Named) SetUnderlying(underlying Type) {$/;"	f
SetVal	./cmd/compile/internal/gc/syntax.go	/^func (n *Node) SetVal(v Val) {$/;"	f
SetValue	./internal/syscall/windows/registry/export_test.go	/^func (k Key) SetValue(name string, valtype uint32, data []byte) error {$/;"	f
SetWriteBuffer	./net/net.go	/^func (c *conn) SetWriteBuffer(bytes int) error {$/;"	f
SetWriteDeadline	./crypto/tls/conn.go	/^func (c *Conn) SetWriteDeadline(t time.Time) error {$/;"	f
SetWriteDeadline	./net/http/httputil/dump.go	/^func (c *dumpConn) SetWriteDeadline(t time.Time) error { return nil }$/;"	f
SetWriteDeadline	./net/http/serve_test.go	/^func (c *slowTestConn) SetWriteDeadline(t time.Time) error {$/;"	f
SetWriteDeadline	./net/http/serve_test.go	/^func (noopConn) SetWriteDeadline(t time.Time) error { return nil }$/;"	f
SetWriteDeadline	./net/net.go	/^func (c *conn) SetWriteDeadline(t time.Time) error {$/;"	f
SetWriteDeadline	./net/pipe.go	/^func (p *pipe) SetWriteDeadline(t time.Time) error {$/;"	f
SetWriteDeadline	./net/smtp/smtp_test.go	/^func (f faker) SetWriteDeadline(time.Time) error { return nil }$/;"	f
SetWriteDeadline	./syscall/net_nacl.go	/^func SetWriteDeadline(fd int, t int64) error {$/;"	f
SetWriteTimeout	./net/rpc/jsonrpc/all_test.go	/^func (p *pipe) SetWriteTimeout(nsec int64) error {$/;"	f
SetX	./cmd/vet/testdata/assign.go	/^func (s *ST) SetX(x int) {$/;"	f
Setdomainname	./syscall/zsyscall_linux_386.go	/^func Setdomainname(p []byte) (err error) {$/;"	f
Setdomainname	./syscall/zsyscall_linux_amd64.go	/^func Setdomainname(p []byte) (err error) {$/;"	f
Setdomainname	./syscall/zsyscall_linux_arm.go	/^func Setdomainname(p []byte) (err error) {$/;"	f
Setdomainname	./syscall/zsyscall_linux_arm64.go	/^func Setdomainname(p []byte) (err error) {$/;"	f
Setdomainname	./syscall/zsyscall_linux_ppc64.go	/^func Setdomainname(p []byte) (err error) {$/;"	f
Setdomainname	./syscall/zsyscall_linux_ppc64le.go	/^func Setdomainname(p []byte) (err error) {$/;"	f
Setegid	./syscall/zsyscall_darwin_386.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_darwin_amd64.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_darwin_arm.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_darwin_arm64.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_dragonfly_amd64.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_freebsd_386.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_freebsd_amd64.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_freebsd_arm.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_netbsd_386.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_netbsd_amd64.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_netbsd_arm.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_openbsd_386.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_openbsd_amd64.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_openbsd_arm.go	/^func Setegid(egid int) (err error) {$/;"	f
Setegid	./syscall/zsyscall_solaris_amd64.go	/^func Setegid(egid int) (err error) {$/;"	f
Setenv	./os/env.go	/^func Setenv(key, value string) error {$/;"	f
Setenv	./syscall/env_plan9.go	/^func Setenv(key, value string) error {$/;"	f
Setenv	./syscall/env_unix.go	/^func Setenv(key, value string) error {$/;"	f
Setenv	./syscall/env_windows.go	/^func Setenv(key, value string) error {$/;"	f
Seteuid	./syscall/zsyscall_darwin_386.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_darwin_amd64.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_darwin_arm.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_darwin_arm64.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_dragonfly_amd64.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_freebsd_386.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_freebsd_amd64.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_freebsd_arm.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_netbsd_386.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_netbsd_amd64.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_netbsd_arm.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_openbsd_386.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_openbsd_amd64.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_openbsd_arm.go	/^func Seteuid(euid int) (err error) {$/;"	f
Seteuid	./syscall/zsyscall_solaris_amd64.go	/^func Seteuid(euid int) (err error) {$/;"	f
Setfsgid	./syscall/zsyscall_linux_386.go	/^func Setfsgid(gid int) (err error) {$/;"	f
Setfsgid	./syscall/zsyscall_linux_amd64.go	/^func Setfsgid(gid int) (err error) {$/;"	f
Setfsgid	./syscall/zsyscall_linux_arm.go	/^func Setfsgid(gid int) (err error) {$/;"	f
Setfsgid	./syscall/zsyscall_linux_arm64.go	/^func Setfsgid(gid int) (err error) {$/;"	f
Setfsgid	./syscall/zsyscall_linux_ppc64.go	/^func Setfsgid(gid int) (err error) {$/;"	f
Setfsgid	./syscall/zsyscall_linux_ppc64le.go	/^func Setfsgid(gid int) (err error) {$/;"	f
Setfsuid	./syscall/zsyscall_linux_386.go	/^func Setfsuid(uid int) (err error) {$/;"	f
Setfsuid	./syscall/zsyscall_linux_amd64.go	/^func Setfsuid(uid int) (err error) {$/;"	f
Setfsuid	./syscall/zsyscall_linux_arm.go	/^func Setfsuid(uid int) (err error) {$/;"	f
Setfsuid	./syscall/zsyscall_linux_arm64.go	/^func Setfsuid(uid int) (err error) {$/;"	f
Setfsuid	./syscall/zsyscall_linux_ppc64.go	/^func Setfsuid(uid int) (err error) {$/;"	f
Setfsuid	./syscall/zsyscall_linux_ppc64le.go	/^func Setfsuid(uid int) (err error) {$/;"	f
Setgid	./syscall/syscall_linux.go	/^func Setgid(uid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_darwin_386.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_darwin_amd64.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_darwin_arm.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_darwin_arm64.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_dragonfly_amd64.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_freebsd_386.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_freebsd_amd64.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_freebsd_arm.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_netbsd_386.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_netbsd_amd64.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_netbsd_arm.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_openbsd_386.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_openbsd_amd64.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_openbsd_arm.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgid	./syscall/zsyscall_solaris_amd64.go	/^func Setgid(gid int) (err error) {$/;"	f
Setgroups	./syscall/syscall_bsd.go	/^func Setgroups(gids []int) (err error) {$/;"	f
Setgroups	./syscall/syscall_linux.go	/^func Setgroups(gids []int) (err error) {$/;"	f
Setgroups	./syscall/syscall_solaris.go	/^func Setgroups(gids []int) (err error) {$/;"	f
Sethostname	./syscall/zsyscall_linux_386.go	/^func Sethostname(p []byte) (err error) {$/;"	f
Sethostname	./syscall/zsyscall_linux_amd64.go	/^func Sethostname(p []byte) (err error) {$/;"	f
Sethostname	./syscall/zsyscall_linux_arm.go	/^func Sethostname(p []byte) (err error) {$/;"	f
Sethostname	./syscall/zsyscall_linux_arm64.go	/^func Sethostname(p []byte) (err error) {$/;"	f
Sethostname	./syscall/zsyscall_linux_ppc64.go	/^func Sethostname(p []byte) (err error) {$/;"	f
Sethostname	./syscall/zsyscall_linux_ppc64le.go	/^func Sethostname(p []byte) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_darwin_386.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_darwin_amd64.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_darwin_arm.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_darwin_arm64.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_dragonfly_amd64.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_freebsd_386.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_freebsd_amd64.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_freebsd_arm.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_openbsd_386.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_openbsd_amd64.go	/^func Setlogin(name string) (err error) {$/;"	f
Setlogin	./syscall/zsyscall_openbsd_arm.go	/^func Setlogin(name string) (err error) {$/;"	f
Setmaxarg	./cmd/compile/internal/gc/subr.go	/^func Setmaxarg(t *Type, extra int32) {$/;"	f
Setpgid	./syscall/zsyscall_darwin_386.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_darwin_amd64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_darwin_arm.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_darwin_arm64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_dragonfly_amd64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_freebsd_386.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_freebsd_amd64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_freebsd_arm.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_linux_386.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_linux_amd64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_linux_arm.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_linux_arm64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_linux_ppc64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_linux_ppc64le.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_netbsd_386.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_netbsd_amd64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_netbsd_arm.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_openbsd_386.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_openbsd_amd64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_openbsd_arm.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpgid	./syscall/zsyscall_solaris_amd64.go	/^func Setpgid(pid int, pgid int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_darwin_386.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_darwin_amd64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_darwin_arm.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_darwin_arm64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_dragonfly_amd64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_freebsd_386.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_freebsd_amd64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_freebsd_arm.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_linux_386.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_linux_amd64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_linux_arm.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_linux_arm64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_linux_ppc64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_linux_ppc64le.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_netbsd_386.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_netbsd_amd64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_netbsd_arm.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_openbsd_386.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_openbsd_amd64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_openbsd_arm.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setpriority	./syscall/zsyscall_solaris_amd64.go	/^func Setpriority(which int, who int, prio int) (err error) {$/;"	f
Setprivexec	./syscall/zsyscall_darwin_386.go	/^func Setprivexec(flag int) (err error) {$/;"	f
Setprivexec	./syscall/zsyscall_darwin_amd64.go	/^func Setprivexec(flag int) (err error) {$/;"	f
Setprivexec	./syscall/zsyscall_darwin_arm.go	/^func Setprivexec(flag int) (err error) {$/;"	f
Setprivexec	./syscall/zsyscall_darwin_arm64.go	/^func Setprivexec(flag int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_darwin_386.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_darwin_amd64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_darwin_arm.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_darwin_arm64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_dragonfly_amd64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_freebsd_386.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_freebsd_amd64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_freebsd_arm.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_linux_386.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_linux_amd64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_linux_arm.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_linux_arm64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_linux_ppc64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_linux_ppc64le.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_netbsd_386.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_netbsd_amd64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_netbsd_arm.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_openbsd_386.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_openbsd_amd64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_openbsd_arm.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setregid	./syscall/zsyscall_solaris_amd64.go	/^func Setregid(rgid int, egid int) (err error) {$/;"	f
Setresgid	./syscall/zsyscall_linux_386.go	/^func Setresgid(rgid int, egid int, sgid int) (err error) {$/;"	f
Setresgid	./syscall/zsyscall_linux_amd64.go	/^func Setresgid(rgid int, egid int, sgid int) (err error) {$/;"	f
Setresgid	./syscall/zsyscall_linux_arm.go	/^func Setresgid(rgid int, egid int, sgid int) (err error) {$/;"	f
Setresgid	./syscall/zsyscall_linux_arm64.go	/^func Setresgid(rgid int, egid int, sgid int) (err error) {$/;"	f
Setresgid	./syscall/zsyscall_linux_ppc64.go	/^func Setresgid(rgid int, egid int, sgid int) (err error) {$/;"	f
Setresgid	./syscall/zsyscall_linux_ppc64le.go	/^func Setresgid(rgid int, egid int, sgid int) (err error) {$/;"	f
Setresuid	./syscall/zsyscall_linux_386.go	/^func Setresuid(ruid int, euid int, suid int) (err error) {$/;"	f
Setresuid	./syscall/zsyscall_linux_amd64.go	/^func Setresuid(ruid int, euid int, suid int) (err error) {$/;"	f
Setresuid	./syscall/zsyscall_linux_arm.go	/^func Setresuid(ruid int, euid int, suid int) (err error) {$/;"	f
Setresuid	./syscall/zsyscall_linux_arm64.go	/^func Setresuid(ruid int, euid int, suid int) (err error) {$/;"	f
Setresuid	./syscall/zsyscall_linux_ppc64.go	/^func Setresuid(ruid int, euid int, suid int) (err error) {$/;"	f
Setresuid	./syscall/zsyscall_linux_ppc64le.go	/^func Setresuid(ruid int, euid int, suid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_darwin_386.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_darwin_amd64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_darwin_arm.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_darwin_arm64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_dragonfly_amd64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_freebsd_386.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_freebsd_amd64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_freebsd_arm.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_linux_386.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_linux_amd64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_linux_arm.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_linux_arm64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_linux_ppc64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_linux_ppc64le.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_netbsd_386.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_netbsd_amd64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_netbsd_arm.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_openbsd_386.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_openbsd_amd64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_openbsd_arm.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setreuid	./syscall/zsyscall_solaris_amd64.go	/^func Setreuid(ruid int, euid int) (err error) {$/;"	f
Setrlimit	./syscall/syscall_linux_386.go	/^func Setrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/syscall_linux_arm.go	/^func Setrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_darwin_386.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_darwin_amd64.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_darwin_arm.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_darwin_arm64.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_dragonfly_amd64.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_freebsd_386.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_freebsd_amd64.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_freebsd_arm.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_linux_amd64.go	/^func Setrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_linux_arm64.go	/^func Setrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_linux_ppc64.go	/^func Setrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_linux_ppc64le.go	/^func Setrlimit(resource int, rlim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_netbsd_386.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_netbsd_amd64.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_netbsd_arm.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_openbsd_386.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_openbsd_amd64.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_openbsd_arm.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setrlimit	./syscall/zsyscall_solaris_amd64.go	/^func Setrlimit(which int, lim *Rlimit) (err error) {$/;"	f
Setsid	./syscall/zsyscall_darwin_386.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_darwin_amd64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_darwin_arm.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_darwin_arm64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_dragonfly_amd64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_freebsd_386.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_freebsd_amd64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_freebsd_arm.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_linux_386.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_linux_amd64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_linux_arm.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_linux_arm64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_linux_ppc64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_linux_ppc64le.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_netbsd_386.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_netbsd_amd64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_netbsd_arm.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_openbsd_386.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_openbsd_amd64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_openbsd_arm.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsid	./syscall/zsyscall_solaris_amd64.go	/^func Setsid() (pid int, err error) {$/;"	f
Setsockopt	./syscall/zsyscall_windows.go	/^func Setsockopt(s Handle, level int32, optname int32, optval *byte, optlen int32) (err error) {$/;"	f
SetsockoptByte	./syscall/net_nacl.go	/^func SetsockoptByte(fd, level, opt int, value byte) error {$/;"	f
SetsockoptByte	./syscall/syscall_unix.go	/^func SetsockoptByte(fd, level, opt int, value byte) (err error) {$/;"	f
SetsockoptICMPv6Filter	./syscall/net_nacl.go	/^func SetsockoptICMPv6Filter(fd, level, opt int, filter *ICMPv6Filter) error { panic("SetsockoptICMPv") }$/;"	f
SetsockoptICMPv6Filter	./syscall/syscall_unix.go	/^func SetsockoptICMPv6Filter(fd, level, opt int, filter *ICMPv6Filter) error {$/;"	f
SetsockoptIPMreq	./syscall/net_nacl.go	/^func SetsockoptIPMreq(fd, level, opt int, mreq *IPMreq) error               { panic("SetsockoptIPMreq") }$/;"	f
SetsockoptIPMreq	./syscall/syscall_unix.go	/^func SetsockoptIPMreq(fd, level, opt int, mreq *IPMreq) (err error) {$/;"	f
SetsockoptIPMreq	./syscall/syscall_windows.go	/^func SetsockoptIPMreq(fd Handle, level, opt int, mreq *IPMreq) (err error) {$/;"	f
SetsockoptIPMreqn	./syscall/syscall_freebsd.go	/^func SetsockoptIPMreqn(fd, level, opt int, mreq *IPMreqn) (err error) {$/;"	f
SetsockoptIPMreqn	./syscall/syscall_linux.go	/^func SetsockoptIPMreqn(fd, level, opt int, mreq *IPMreqn) (err error) {$/;"	f
SetsockoptIPv6Mreq	./syscall/net_nacl.go	/^func SetsockoptIPv6Mreq(fd, level, opt int, mreq *IPv6Mreq) error           { panic("SetsockoptIPv") }$/;"	f
SetsockoptIPv6Mreq	./syscall/syscall_unix.go	/^func SetsockoptIPv6Mreq(fd, level, opt int, mreq *IPv6Mreq) (err error) {$/;"	f
SetsockoptIPv6Mreq	./syscall/syscall_windows.go	/^func SetsockoptIPv6Mreq(fd Handle, level, opt int, mreq *IPv6Mreq) (err error) { return EWINDOWS }$/;"	f
SetsockoptInet4Addr	./syscall/net_nacl.go	/^func SetsockoptInet4Addr(fd, level, opt int, value [4]byte) error           { panic("SetsockoptInet") }$/;"	f
SetsockoptInet4Addr	./syscall/syscall_unix.go	/^func SetsockoptInet4Addr(fd, level, opt int, value [4]byte) (err error) {$/;"	f
SetsockoptInet4Addr	./syscall/syscall_windows.go	/^func SetsockoptInet4Addr(fd Handle, level, opt int, value [4]byte) (err error) {$/;"	f
SetsockoptInt	./syscall/net_nacl.go	/^func SetsockoptInt(fd, level, opt int, value int) error {$/;"	f
SetsockoptInt	./syscall/syscall_unix.go	/^func SetsockoptInt(fd, level, opt int, value int) (err error) {$/;"	f
SetsockoptInt	./syscall/syscall_windows.go	/^func SetsockoptInt(fd Handle, level, opt int, value int) (err error) {$/;"	f
SetsockoptLinger	./syscall/net_nacl.go	/^func SetsockoptLinger(fd, level, opt int, l *Linger) error {$/;"	f
SetsockoptLinger	./syscall/syscall_unix.go	/^func SetsockoptLinger(fd, level, opt int, l *Linger) (err error) {$/;"	f
SetsockoptLinger	./syscall/syscall_windows.go	/^func SetsockoptLinger(fd Handle, level, opt int, l *Linger) (err error) {$/;"	f
SetsockoptString	./syscall/net_nacl.go	/^func SetsockoptString(fd, level, opt int, s string) error                   { panic("SetsockoptString") }$/;"	f
SetsockoptString	./syscall/syscall_unix.go	/^func SetsockoptString(fd, level, opt int, s string) (err error) {$/;"	f
SetsockoptTimeval	./syscall/net_nacl.go	/^func SetsockoptTimeval(fd, level, opt int, tv *Timeval) error               { panic("SetsockoptTimeval") }$/;"	f
SetsockoptTimeval	./syscall/syscall_unix.go	/^func SetsockoptTimeval(fd, level, opt int, tv *Timeval) (err error) {$/;"	f
SetsockoptTimeval	./syscall/syscall_windows.go	/^func SetsockoptTimeval(fd Handle, level, opt int, tv *Timeval) (err error) { return EWINDOWS }$/;"	f
Settimeofday	./syscall/zsyscall_darwin_386.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_darwin_amd64.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_darwin_arm.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_darwin_arm64.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_dragonfly_amd64.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_freebsd_386.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_freebsd_amd64.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_freebsd_arm.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_linux_386.go	/^func Settimeofday(tv *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_linux_amd64.go	/^func Settimeofday(tv *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_linux_arm.go	/^func Settimeofday(tv *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_linux_arm64.go	/^func Settimeofday(tv *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_linux_ppc64.go	/^func Settimeofday(tv *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_linux_ppc64le.go	/^func Settimeofday(tv *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_netbsd_386.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_netbsd_amd64.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_netbsd_arm.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_openbsd_386.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_openbsd_amd64.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Settimeofday	./syscall/zsyscall_openbsd_arm.go	/^func Settimeofday(tp *Timeval) (err error) {$/;"	f
Setuid	./syscall/syscall_linux.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_darwin_386.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_darwin_amd64.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_darwin_arm.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_darwin_arm64.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_dragonfly_amd64.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_freebsd_386.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_freebsd_amd64.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_freebsd_arm.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_netbsd_386.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_netbsd_amd64.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_netbsd_arm.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_openbsd_386.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_openbsd_amd64.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_openbsd_arm.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuid	./syscall/zsyscall_solaris_amd64.go	/^func Setuid(uid int) (err error) {$/;"	f
Setuintxx	./cmd/internal/obj/data.go	/^func Setuintxx(ctxt *Link, s *LSym, off int64, v uint64, wid int64) int64 {$/;"	f
SetupError	./testing/quick/quick.go	/^type SetupError string$/;"	t
Setxattr	./syscall/zsyscall_linux_386.go	/^func Setxattr(path string, attr string, data []byte, flags int) (err error) {$/;"	f
Setxattr	./syscall/zsyscall_linux_amd64.go	/^func Setxattr(path string, attr string, data []byte, flags int) (err error) {$/;"	f
Setxattr	./syscall/zsyscall_linux_arm.go	/^func Setxattr(path string, attr string, data []byte, flags int) (err error) {$/;"	f
Setxattr	./syscall/zsyscall_linux_arm64.go	/^func Setxattr(path string, attr string, data []byte, flags int) (err error) {$/;"	f
Setxattr	./syscall/zsyscall_linux_ppc64.go	/^func Setxattr(path string, attr string, data []byte, flags int) (err error) {$/;"	f
Setxattr	./syscall/zsyscall_linux_ppc64le.go	/^func Setxattr(path string, attr string, data []byte, flags int) (err error) {$/;"	f
ShadowRead	./cmd/vet/testdata/shadow.go	/^func ShadowRead(f *os.File, buf []byte) (err error) {$/;"	f
Shift	./cmd/internal/rsc.io/arm/armasm/inst.go	/^type Shift uint8$/;"	t
Shift	./go/constant/value.go	/^func Shift(x Value, op token.Token, s uint) Value {$/;"	f
Shift	./strconv/decimal.go	/^func (a *decimal) Shift(k int) {$/;"	f
ShiftTest	./cmd/vet/testdata/shift.go	/^func ShiftTest() {$/;"	f
Ship	./encoding/xml/marshal_test.go	/^type Ship struct {$/;"	t
Shlib	./cmd/link/internal/ld/link.go	/^type Shlib struct {$/;"	t
Short	./go/doc/testdata/testing.go	/^func Short() bool {$/;"	f
Short	./testing/testing.go	/^func Short() bool {$/;"	f
ShortestDecimal	./strconv/extfloat.go	/^func (f *extFloat) ShortestDecimal(d *decimalSlice, lower, upper *extFloat) bool {$/;"	f
ShouldRepeat	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) ShouldRepeat(n, c int64) bool {$/;"	f
Shutdown	./syscall/net_nacl.go	/^func Shutdown(fd int, how int) error {$/;"	f
Shutdown	./syscall/syscall_linux_386.go	/^func Shutdown(s, how int) (err error) {$/;"	f
Shutdown	./syscall/syscall_windows.go	/^func Shutdown(fd Handle, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_darwin_386.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_darwin_amd64.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_darwin_arm.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_darwin_arm64.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_dragonfly_amd64.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_freebsd_386.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_freebsd_amd64.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_freebsd_arm.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_linux_amd64.go	/^func Shutdown(fd int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_linux_arm.go	/^func Shutdown(fd int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_linux_arm64.go	/^func Shutdown(fd int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_linux_ppc64.go	/^func Shutdown(fd int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_linux_ppc64le.go	/^func Shutdown(fd int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_netbsd_386.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_netbsd_amd64.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_netbsd_arm.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_openbsd_386.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_openbsd_amd64.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_openbsd_arm.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Shutdown	./syscall/zsyscall_solaris_amd64.go	/^func Shutdown(s int, how int) (err error) {$/;"	f
Sig	./cmd/compile/internal/gc/go.go	/^type Sig struct {$/;"	t
Sigaction	./runtime/defs2_linux.go	/^type Sigaction C.struct_kernel_sigaction$/;"	t
Sigaction	./runtime/defs_arm_linux.go	/^type Sigaction C.struct_xsigaction$/;"	t
Sigaction	./runtime/defs_darwin.go	/^\/\/ type Sigaction C.struct_sigaction	\/\/ used by the C library$/;"	t
Sigaction	./runtime/defs_darwin.go	/^type Sigaction C.struct___sigaction \/\/ used in syscalls$/;"	t
Sigaction	./runtime/defs_linux.go	/^type Sigaction C.struct_sigaction$/;"	t
Sigaction	./runtime/defs_solaris.go	/^type Sigaction C.struct_sigaction$/;"	t
SigaltstackT	./runtime/defs1_linux.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs2_linux.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs3_linux.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs_arm_linux.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs_dragonfly.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs_freebsd.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs_netbsd.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs_openbsd.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
SigaltstackT	./runtime/defs_solaris.go	/^type SigaltstackT C.struct_sigaltstack$/;"	t
Sigcontext	./runtime/defs1_linux.go	/^type Sigcontext C.struct_sigcontext$/;"	t
Sigcontext	./runtime/defs2_linux.go	/^type Sigcontext C.struct_sigcontext$/;"	t
Sigcontext	./runtime/defs3_linux.go	/^type Sigcontext C.struct_sigcontext$/;"	t
Sigcontext	./runtime/defs_arm_linux.go	/^type Sigcontext C.struct_sigcontext$/;"	t
Sigcontext	./runtime/defs_openbsd.go	/^type Sigcontext C.struct_sigcontext$/;"	t
Sighandler	./runtime/defs_darwin.go	/^type Sighandler C.union___sigaction_u$/;"	t
Siginfo	./runtime/defs2_linux.go	/^type Siginfo C.siginfo_t$/;"	t
Siginfo	./runtime/defs_arm_linux.go	/^type Siginfo C.struct_xsiginfo$/;"	t
Siginfo	./runtime/defs_darwin.go	/^type Siginfo C.siginfo_t$/;"	t
Siginfo	./runtime/defs_dragonfly.go	/^type Siginfo C.siginfo_t$/;"	t
Siginfo	./runtime/defs_freebsd.go	/^type Siginfo C.siginfo_t$/;"	t
Siginfo	./runtime/defs_linux.go	/^type Siginfo C.siginfo_t$/;"	t
Siginfo	./runtime/defs_netbsd.go	/^type Siginfo C.struct__ksiginfo$/;"	t
Siginfo	./runtime/defs_openbsd.go	/^type Siginfo C.siginfo_t$/;"	t
Siginfo	./runtime/defs_solaris.go	/^type Siginfo C.siginfo_t$/;"	t
Sign	./cmd/compile/internal/big/float.go	/^func (x *Float) Sign() int {$/;"	f
Sign	./cmd/compile/internal/big/int.go	/^func (x *Int) Sign() int {$/;"	f
Sign	./cmd/compile/internal/big/rat.go	/^func (x *Rat) Sign() int {$/;"	f
Sign	./crypto/dsa/dsa.go	/^func Sign(rand io.Reader, priv *PrivateKey, hash []byte) (r, s *big.Int, err error) {$/;"	f
Sign	./crypto/ecdsa/ecdsa.go	/^func (priv *PrivateKey) Sign(rand io.Reader, msg []byte, opts crypto.SignerOpts) ([]byte, error) {$/;"	f
Sign	./crypto/ecdsa/ecdsa.go	/^func Sign(rand io.Reader, priv *PrivateKey, hash []byte) (r, s *big.Int, err error) {$/;"	f
Sign	./crypto/rsa/rsa.go	/^func (priv *PrivateKey) Sign(rand io.Reader, msg []byte, opts crypto.SignerOpts) ([]byte, error) {$/;"	f
Sign	./go/constant/value.go	/^func Sign(x Value) int {$/;"	f
Sign	./math/big/float.go	/^func (x *Float) Sign() int {$/;"	f
Sign	./math/big/int.go	/^func (x *Int) Sign() int {$/;"	f
Sign	./math/big/rat.go	/^func (x *Rat) Sign() int {$/;"	f
SignPKCS1v15	./crypto/rsa/pkcs1v15.go	/^func SignPKCS1v15(rand io.Reader, priv *PrivateKey, hash crypto.Hash, hashed []byte) (s []byte, err error) {$/;"	f
SignPSS	./crypto/rsa/pss.go	/^func SignPSS(rand io.Reader, priv *PrivateKey, hash crypto.Hash, hashed []byte, opts *PSSOptions) (s []byte, err error) {$/;"	f
Signal	./os/doc.go	/^func (p *Process) Signal(sig Signal) error {$/;"	f
Signal	./os/exec.go	/^type Signal interface {$/;"	t
Signal	./sync/cond.go	/^func (c *Cond) Signal() {$/;"	f
Signal	./syscall/syscall_bsd.go	/^func (w WaitStatus) Signal() Signal {$/;"	f
Signal	./syscall/syscall_linux.go	/^func (w WaitStatus) Signal() Signal {$/;"	f
Signal	./syscall/syscall_nacl.go	/^func (s Signal) Signal() {}$/;"	f
Signal	./syscall/syscall_nacl.go	/^func (w WaitStatus) Signal() Signal     { return 0 }$/;"	f
Signal	./syscall/syscall_nacl.go	/^type Signal int$/;"	t
Signal	./syscall/syscall_plan9.go	/^func (n Note) Signal() {}$/;"	f
Signal	./syscall/syscall_solaris.go	/^func (w WaitStatus) Signal() Signal {$/;"	f
Signal	./syscall/syscall_unix.go	/^func (s Signal) Signal() {}$/;"	f
Signal	./syscall/syscall_unix.go	/^type Signal int$/;"	t
Signal	./syscall/syscall_windows.go	/^func (s Signal) Signal() {}$/;"	f
Signal	./syscall/syscall_windows.go	/^func (w WaitStatus) Signal() Signal { return -1 }$/;"	f
Signal	./syscall/syscall_windows.go	/^type Signal int$/;"	t
Signaled	./syscall/syscall_bsd.go	/^func (w WaitStatus) Signaled() bool { return w&mask != stopped && w&mask != 0 }$/;"	f
Signaled	./syscall/syscall_linux.go	/^func (w WaitStatus) Signaled() bool { return w&mask != stopped && w&mask != exited }$/;"	f
Signaled	./syscall/syscall_nacl.go	/^func (w WaitStatus) Signaled() bool     { return false }$/;"	f
Signaled	./syscall/syscall_plan9.go	/^func (w Waitmsg) Signaled() bool { return false }$/;"	f
Signaled	./syscall/syscall_solaris.go	/^func (w WaitStatus) Signaled() bool { return w&mask != stopped && w&mask != 0 }$/;"	f
Signaled	./syscall/syscall_windows.go	/^func (w WaitStatus) Signaled() bool { return false }$/;"	f
Signature	./go/types/type.go	/^type Signature struct {$/;"	t
SignatureAlgorithm	./crypto/x509/x509.go	/^type SignatureAlgorithm int$/;"	t
Signbit	./cmd/compile/internal/big/float.go	/^func (x *Float) Signbit() bool {$/;"	f
Signbit	./math/big/float.go	/^func (x *Float) Signbit() bool {$/;"	f
Signbit	./math/signbit.go	/^func Signbit(x float64) bool {$/;"	f
Signer	./crypto/crypto.go	/^type Signer interface {$/;"	t
SignerOpts	./crypto/crypto.go	/^type SignerOpts interface {$/;"	t
Sigset	./runtime/defs_dragonfly.go	/^type Sigset C.struct___sigset$/;"	t
Sigset	./runtime/defs_freebsd.go	/^type Sigset C.struct___sigset$/;"	t
Sigset	./runtime/defs_linux.go	/^type Sigset C.sigset_t$/;"	t
Sigset	./runtime/defs_netbsd.go	/^type Sigset C.sigset_t$/;"	t
Sigset	./runtime/defs_openbsd.go	/^type Sigset C.sigset_t$/;"	t
Sigset	./runtime/defs_solaris.go	/^type Sigset C.sigset_t$/;"	t
Sigval	./runtime/defs_darwin.go	/^type Sigval C.union_sigval$/;"	t
Sigval	./runtime/defs_openbsd.go	/^type Sigval C.union_sigval$/;"	t
SimpleFold	./unicode/letter.go	/^func SimpleFold(r rune) rune {$/;"	f
Simplify	./regexp/syntax/simplify.go	/^func (re *Regexp) Simplify() *Regexp {$/;"	f
Simsimtype	./cmd/compile/internal/gc/subr.go	/^func Simsimtype(t *Type) int {$/;"	f
Simtype	./cmd/compile/internal/gc/go.go	/^var Simtype [NTYPE]uint8$/;"	v
Sin	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^		{pkgpath: "math", name: "Sin", want: "func Sin(x float64) float64"},$/;"	f
Sin	./go/internal/gcimporter/gcimporter_test.go	/^	{"math.Sin", "func Sin(x float64) float64"},$/;"	f
Sin	./math/cmplx/sin.go	/^func Sin(x complex128) complex128 {$/;"	f
Sin	./math/sin.go	/^func Sin(x float64) float64$/;"	f
Since	./time/time.go	/^func Since(t Time) Duration {$/;"	f
Sincos	./math/sincos.go	/^func Sincos(x float64) (sin, cos float64)$/;"	f
SingleTest	./encoding/gob/encoder_test.go	/^type SingleTest struct {$/;"	t
Sinh	./math/cmplx/sin.go	/^func Sinh(x complex128) complex128 {$/;"	f
Sinh	./math/sinh.go	/^func Sinh(x float64) float64 {$/;"	f
Size	./archive/tar/common.go	/^func (fi headerFileInfo) Size() int64        { return fi.h.Size }$/;"	f
Size	./archive/tar/tar_test.go	/^func (symlink) Size() int64        { return 0 }$/;"	f
Size	./archive/zip/struct.go	/^func (fi headerFileInfo) Size() int64 {$/;"	f
Size	./archive/zip/zip_test.go	/^func (r *rleBuffer) Size() int64 {$/;"	f
Size	./bytes/reader.go	/^func (r *Reader) Size() int64 { return int64(len(r.s)) }$/;"	f
Size	./cmd/pack/pack_test.go	/^func (f *FakeFile) Size() int64 {$/;"	f
Size	./crypto/crypto.go	/^func (h Hash) Size() int {$/;"	f
Size	./crypto/hmac/hmac.go	/^func (h *hmac) Size() int { return h.size }$/;"	f
Size	./crypto/md5/md5.go	/^func (d *digest) Size() int { return Size }$/;"	f
Size	./crypto/sha1/sha1.go	/^func (d *digest) Size() int { return Size }$/;"	f
Size	./crypto/sha256/sha256.go	/^func (d *digest) Size() int {$/;"	f
Size	./crypto/sha512/sha512.go	/^func (d *digest) Size() int {$/;"	f
Size	./crypto/tls/cipher_suites.go	/^func (s ssl30MAC) Size() int {$/;"	f
Size	./crypto/tls/cipher_suites.go	/^func (s tls10MAC) Size() int {$/;"	f
Size	./debug/dwarf/type.go	/^func (c *CommonType) Size() int64 { return c.ByteSize }$/;"	f
Size	./debug/dwarf/type.go	/^func (t *ArrayType) Size() int64 {$/;"	f
Size	./debug/dwarf/type.go	/^func (t *QualType) Size() int64 { return t.Type.Size() }$/;"	f
Size	./debug/dwarf/type.go	/^func (t *TypedefType) Size() int64 { return t.Type.Size() }$/;"	f
Size	./encoding/binary/binary.go	/^func Size(v interface{}) int {$/;"	f
Size	./encoding/gob/decode.go	/^func (d *decBuffer) Size(n int) {$/;"	f
Size	./go/token/position.go	/^func (f *File) Size() int {$/;"	f
Size	./hash/adler32/adler32.go	/^func (d *digest) Size() int { return Size }$/;"	f
Size	./hash/crc32/crc32.go	/^func (d *digest) Size() int { return Size }$/;"	f
Size	./hash/crc64/crc64.go	/^func (d *digest) Size() int { return Size }$/;"	f
Size	./hash/fnv/fnv.go	/^func (s *sum32) Size() int  { return 4 }$/;"	f
Size	./hash/fnv/fnv.go	/^func (s *sum32a) Size() int { return 4 }$/;"	f
Size	./hash/fnv/fnv.go	/^func (s *sum64) Size() int  { return 8 }$/;"	f
Size	./hash/fnv/fnv.go	/^func (s *sum64a) Size() int { return 8 }$/;"	f
Size	./image/geom.go	/^func (r Rectangle) Size() Point {$/;"	f
Size	./io/io.go	/^func (s *SectionReader) Size() int64 { return s.limit - s.base }$/;"	f
Size	./net/http/fs_test.go	/^func (f *fakeFileInfo) Size() int64        { return int64(len(f.contents)) }$/;"	f
Size	./net/ip.go	/^func (m IPMask) Size() (ones, bits int) {$/;"	f
Size	./os/types_notwin.go	/^func (fs *fileStat) Size() int64        { return fs.size }$/;"	f
Size	./os/types_windows.go	/^func (fs *fileStat) Size() int64 {$/;"	f
Size	./reflect/type.go	/^func (t *rtype) Size() uintptr { return t.size }$/;"	f
Size	./strings/reader.go	/^func (r *Reader) Size() int64 { return int64(len(r.s)) }$/;"	f
Sizeof	./cmd/compile/internal/gc/builtin/unsafe.go	/^func Sizeof(any) uintptr$/;"	f
Sizeof	./go/types/sizes.go	/^func (s *StdSizes) Sizeof(T Type) int64 {$/;"	f
Sizeof	./unsafe/unsafe.go	/^func Sizeof(x ArbitraryType) uintptr$/;"	f
Sizes	./go/types/sizes.go	/^type Sizes interface {$/;"	t
Skip	./encoding/xml/read.go	/^func (d *Decoder) Skip() error {$/;"	f
Skip	./testing/testing.go	/^func (c *common) Skip(args ...interface{}) {$/;"	f
SkipChildren	./debug/dwarf/entry.go	/^func (r *Reader) SkipChildren() {$/;"	f
SkipDir	./path/filepath/path.go	/^var SkipDir = errors.New("skip this directory")$/;"	v
SkipNow	./testing/testing.go	/^func (c *common) SkipNow() {$/;"	f
SkipSpace	./fmt/scan.go	/^func (s *ss) SkipSpace() {$/;"	f
Skipf	./testing/testing.go	/^func (c *common) Skipf(format string, args ...interface{}) {$/;"	f
Skipped	./testing/testing.go	/^func (c *common) Skipped() bool {$/;"	f
Sleep	./time/sleep.go	/^func Sleep(d Duration)$/;"	f
Slice	./cmd/asm/internal/lex/slice.go	/^type Slice struct {$/;"	t
Slice	./go/types/type.go	/^type Slice struct {$/;"	t
Slice	./reflect/value.go	/^func (v Value) Slice(i, j int) Value {$/;"	f
Slice3	./reflect/value.go	/^func (v Value) Slice3(i, j, k int) Value {$/;"	f
SliceHeader	./cmd/vet/testdata/unsafeptr.go	/^type SliceHeader struct {$/;"	t
SliceHeader	./reflect/value.go	/^type SliceHeader struct {$/;"	t
SliceOf	./reflect/type.go	/^func SliceOf(t Type) Type {$/;"	f
SlicePtrFromStrings	./syscall/exec_plan9.go	/^func SlicePtrFromStrings(ss []string) ([]*byte, error) {$/;"	f
SlicePtrFromStrings	./syscall/exec_unix.go	/^func SlicePtrFromStrings(ss []string) ([]*byte, error) {$/;"	f
SliceTmpVarCode	./syscall/mksyscall_windows.go	/^func (p *Param) SliceTmpVarCode() string {$/;"	f
SliceTypePrinter	./runtime/runtime-gdb.py	/^class SliceTypePrinter:$/;"	c
SliceValue	./runtime/runtime-gdb.py	/^class SliceValue:$/;"	c
Smagic	./cmd/compile/internal/gc/subr.go	/^func Smagic(m *Magic) {$/;"	f
Small	./encoding/json/decode_test.go	/^type Small struct {$/;"	t
Smallintconst	./cmd/compile/internal/gc/const.go	/^func Smallintconst(n *Node) bool {$/;"	f
SockFilter	./syscall/types_linux.go	/^type SockFilter C.struct_sock_filter$/;"	t
SockFilter	./syscall/ztypes_linux_386.go	/^type SockFilter struct {$/;"	t
SockFilter	./syscall/ztypes_linux_amd64.go	/^type SockFilter struct {$/;"	t
SockFilter	./syscall/ztypes_linux_arm.go	/^type SockFilter struct {$/;"	t
SockFilter	./syscall/ztypes_linux_arm64.go	/^type SockFilter struct {$/;"	t
SockFilter	./syscall/ztypes_linux_ppc64.go	/^type SockFilter struct {$/;"	t
SockFilter	./syscall/ztypes_linux_ppc64le.go	/^type SockFilter struct {$/;"	t
SockFprog	./syscall/types_linux.go	/^type SockFprog C.struct_sock_fprog$/;"	t
SockFprog	./syscall/ztypes_linux_386.go	/^type SockFprog struct {$/;"	t
SockFprog	./syscall/ztypes_linux_amd64.go	/^type SockFprog struct {$/;"	t
SockFprog	./syscall/ztypes_linux_arm.go	/^type SockFprog struct {$/;"	t
SockFprog	./syscall/ztypes_linux_arm64.go	/^type SockFprog struct {$/;"	t
SockFprog	./syscall/ztypes_linux_ppc64.go	/^type SockFprog struct {$/;"	t
SockFprog	./syscall/ztypes_linux_ppc64le.go	/^type SockFprog struct {$/;"	t
Sockaddr	./syscall/net_nacl.go	/^type Sockaddr interface {$/;"	t
Sockaddr	./syscall/syscall_unix.go	/^type Sockaddr interface {$/;"	t
Sockaddr	./syscall/syscall_windows.go	/^func (rsa *RawSockaddrAny) Sockaddr() (Sockaddr, error) {$/;"	f
Sockaddr	./syscall/syscall_windows.go	/^type Sockaddr interface {$/;"	t
SockaddrDatalink	./syscall/net_nacl.go	/^type SockaddrDatalink struct {$/;"	t
SockaddrDatalink	./syscall/syscall_darwin.go	/^type SockaddrDatalink struct {$/;"	t
SockaddrDatalink	./syscall/syscall_dragonfly.go	/^type SockaddrDatalink struct {$/;"	t
SockaddrDatalink	./syscall/syscall_freebsd.go	/^type SockaddrDatalink struct {$/;"	t
SockaddrDatalink	./syscall/syscall_netbsd.go	/^type SockaddrDatalink struct {$/;"	t
SockaddrDatalink	./syscall/syscall_openbsd.go	/^type SockaddrDatalink struct {$/;"	t
SockaddrDatalink	./syscall/syscall_solaris.go	/^type SockaddrDatalink struct {$/;"	t
SockaddrGen	./syscall/ztypes_windows.go	/^type SockaddrGen [24]byte$/;"	t
SockaddrInet4	./syscall/net_nacl.go	/^type SockaddrInet4 struct {$/;"	t
SockaddrInet4	./syscall/syscall_unix.go	/^type SockaddrInet4 struct {$/;"	t
SockaddrInet4	./syscall/syscall_windows.go	/^type SockaddrInet4 struct {$/;"	t
SockaddrInet6	./syscall/net_nacl.go	/^type SockaddrInet6 struct {$/;"	t
SockaddrInet6	./syscall/syscall_unix.go	/^type SockaddrInet6 struct {$/;"	t
SockaddrInet6	./syscall/syscall_windows.go	/^type SockaddrInet6 struct {$/;"	t
SockaddrLinklayer	./syscall/syscall_linux.go	/^type SockaddrLinklayer struct {$/;"	t
SockaddrNetlink	./syscall/syscall_linux.go	/^type SockaddrNetlink struct {$/;"	t
SockaddrUnix	./syscall/net_nacl.go	/^type SockaddrUnix struct {$/;"	t
SockaddrUnix	./syscall/syscall_unix.go	/^type SockaddrUnix struct {$/;"	t
SockaddrUnix	./syscall/syscall_windows.go	/^type SockaddrUnix struct {$/;"	t
Socket	./net/internal/socktest/sys_unix.go	/^func (sw *Switch) Socket(family, sotype, proto int) (s int, err error) {$/;"	f
Socket	./net/internal/socktest/sys_windows.go	/^func (sw *Switch) Socket(family, sotype, proto int) (s syscall.Handle, err error) {$/;"	f
Socket	./syscall/net_nacl.go	/^func Socket(proto, sotype, unused int) (fd int, err error) {$/;"	f
Socket	./syscall/syscall_unix.go	/^func Socket(domain, typ, proto int) (fd int, err error) {$/;"	f
Socket	./syscall/syscall_windows.go	/^func Socket(domain, typ, proto int) (fd Handle, err error) {$/;"	f
SocketAddress	./internal/syscall/windows/syscall_windows.go	/^type SocketAddress struct {$/;"	t
SocketControlMessage	./syscall/sockcmsg_unix.go	/^type SocketControlMessage struct {$/;"	t
SocketDisableIPv6	./syscall/net_nacl.go	/^var SocketDisableIPv6 bool$/;"	v
SocketDisableIPv6	./syscall/syscall_plan9.go	/^var SocketDisableIPv6 bool$/;"	v
SocketDisableIPv6	./syscall/syscall_unix.go	/^var SocketDisableIPv6 bool$/;"	v
SocketDisableIPv6	./syscall/syscall_windows.go	/^var SocketDisableIPv6 bool$/;"	v
Socketpair	./syscall/net_nacl.go	/^func Socketpair(domain, typ, proto int) (fd [2]int, err error)              { panic("Socketpair") }$/;"	f
Socketpair	./syscall/syscall_unix.go	/^func Socketpair(domain, typ, proto int) (fd [2]int, err error) {$/;"	f
Sockets	./net/internal/socktest/switch.go	/^func (sw *Switch) Sockets() Sockets {$/;"	f
Sockets	./net/internal/socktest/switch_stub.go	/^type Sockets map[int]Status$/;"	t
Sockets	./net/internal/socktest/switch_unix.go	/^type Sockets map[int]Status$/;"	t
Sockets	./net/internal/socktest/switch_windows.go	/^type Sockets map[syscall.Handle]Status$/;"	t
SomeMethod	./html/template/escape_test.go	/^func (Issue7379) SomeMethod(x int) string {$/;"	f
Sort	./go/scanner/errors.go	/^func (p ErrorList) Sort() {$/;"	f
Sort	./regexp/onepass.go	/^func (p runeSlice) Sort() {$/;"	f
Sort	./sort/example_keys_test.go	/^func (by By) Sort(planets []Planet) {$/;"	f
Sort	./sort/example_multi_test.go	/^func (ms *multiSorter) Sort(changes []Change) {$/;"	f
Sort	./sort/sort.go	/^func (p Float64Slice) Sort() { Sort(p) }$/;"	f
Sort	./sort/sort.go	/^func (p IntSlice) Sort() { Sort(p) }$/;"	f
Sort	./sort/sort.go	/^func (p StringSlice) Sort() { Sort(p) }$/;"	f
Sort	./sort/sort.go	/^func Sort(data Interface) {$/;"	f
SortImports	./go/ast/import.go	/^func SortImports(fset *token.FileSet, f *File) {$/;"	f
SortIndexArg	./cmd/trace/trace.go	/^type SortIndexArg struct {$/;"	t
Source	./go/format/format.go	/^func Source(src []byte) ([]byte, error) {$/;"	f
Source	./math/rand/rand.go	/^type Source interface {$/;"	t
Source	./syscall/mksyscall_windows.go	/^type Source struct {$/;"	t
SourceLine	./cmd/pprof/pprof.go	/^func (f *file) SourceLine(addr uint64) ([]plugin.Frame, error) {$/;"	f
Span	./cmd/vet/shadow.go	/^type Span struct {$/;"	t
SpecialCase	./unicode/letter.go	/^type SpecialCase []CaseRange$/;"	t
Splice	./syscall/zsyscall_linux_386.go	/^func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int, err error) {$/;"	f
Splice	./syscall/zsyscall_linux_amd64.go	/^func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error) {$/;"	f
Splice	./syscall/zsyscall_linux_arm.go	/^func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int, err error) {$/;"	f
Splice	./syscall/zsyscall_linux_arm64.go	/^func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error) {$/;"	f
Splice	./syscall/zsyscall_linux_ppc64.go	/^func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error) {$/;"	f
Splice	./syscall/zsyscall_linux_ppc64le.go	/^func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error) {$/;"	f
Split	./bufio/scan.go	/^func (s *Scanner) Split(split SplitFunc) {$/;"	f
Split	./bytes/bytes.go	/^func Split(s, sep []byte) [][]byte { return genSplit(s, sep, 0, -1) }$/;"	f
Split	./path/filepath/path.go	/^func Split(path string) (dir, file string) {$/;"	f
Split	./path/path.go	/^func Split(path string) (dir, file string) {$/;"	f
Split	./regexp/regexp.go	/^func (re *Regexp) Split(s string, n int) []string {$/;"	f
Split	./strings/strings.go	/^func Split(s, sep string) []string { return genSplit(s, sep, 0, -1) }$/;"	f
SplitAfter	./bytes/bytes.go	/^func SplitAfter(s, sep []byte) [][]byte {$/;"	f
SplitAfter	./strings/strings.go	/^func SplitAfter(s, sep string) []string {$/;"	f
SplitAfterN	./bytes/bytes.go	/^func SplitAfterN(s, sep []byte, n int) [][]byte {$/;"	f
SplitAfterN	./strings/strings.go	/^func SplitAfterN(s, sep string, n int) []string {$/;"	f
SplitFunc	./bufio/scan.go	/^\/\/ defined by a split function of type SplitFunc; the default split$/;"	t
SplitFunc	./bufio/scan.go	/^type SplitFunc func(data []byte, atEOF bool) (advance int, token []byte, err error)$/;"	t
SplitHostPort	./net/ipsock.go	/^func SplitHostPort(hostport string) (host, port string, err error) {$/;"	f
SplitList	./path/filepath/path.go	/^func SplitList(path string) []string {$/;"	f
SplitListTest	./path/filepath/path_test.go	/^type SplitListTest struct {$/;"	t
SplitN	./bytes/bytes.go	/^func SplitN(s, sep []byte, n int) [][]byte { return genSplit(s, sep, 0, n) }$/;"	f
SplitN	./strings/strings.go	/^func SplitN(s, sep string, n int) []string { return genSplit(s, sep, 0, n) }$/;"	f
SplitTest	./bytes/bytes_test.go	/^type SplitTest struct {$/;"	t
SplitTest	./path/filepath/path_test.go	/^type SplitTest struct {$/;"	t
SplitTest	./path/path_test.go	/^type SplitTest struct {$/;"	t
SplitTest	./strings/strings_test.go	/^type SplitTest struct {$/;"	t
Sprint	./fmt/print.go	/^func Sprint(a ...interface{}) string {$/;"	f
Sprintf	./fmt/print.go	/^func Sprintf(format string, a ...interface{}) string {$/;"	f
Sprintln	./fmt/print.go	/^func Sprintln(a ...interface{}) string {$/;"	f
Sqrt	./math/cmplx/sqrt.go	/^func Sqrt(x complex128) complex128 {$/;"	f
Sqrt	./math/sqrt.go	/^func Sqrt(x float64) float64$/;"	f
Sqrt	./runtime/export_test.go	/^var Sqrt = sqrt$/;"	v
SqrtGo	./math/export_test.go	/^var SqrtGo = sqrt$/;"	v
SqrtRT	./runtime/sqrt_test.go	/^func SqrtRT(x float64) float64 {$/;"	f
Square	./encoding/gob/codec_test.go	/^func (f Float) Square() int {$/;"	f
Square	./encoding/gob/codec_test.go	/^func (i Int) Square() int {$/;"	f
Square	./encoding/gob/codec_test.go	/^func (p Point) Square() int {$/;"	f
Square	./encoding/gob/codec_test.go	/^func (v Vector) Square() int {$/;"	f
Squarer	./encoding/gob/codec_test.go	/^type Squarer interface {$/;"	t
Sscan	./fmt/scan.go	/^func Sscan(str string, a ...interface{}) (n int, err error) {$/;"	f
Sscanf	./fmt/scan.go	/^func Sscanf(str string, format string, a ...interface{}) (n int, err error) {$/;"	f
Sscanln	./fmt/scan.go	/^func Sscanln(str string, a ...interface{}) (n int, err error) {$/;"	f
Stable	./sort/sort.go	/^func Stable(data Interface) {$/;"	f
Stack	./cmd/asm/internal/lex/stack.go	/^type Stack struct {$/;"	t
Stack	./runtime/debug/stack.go	/^func Stack() []byte {$/;"	f
Stack	./runtime/mprof.go	/^func (r *MemProfileRecord) Stack() []uintptr {$/;"	f
Stack	./runtime/mprof.go	/^func (r *StackRecord) Stack() []uintptr {$/;"	f
Stack	./runtime/mprof.go	/^func Stack(buf []byte, all bool) int {$/;"	f
Stack	./runtime/pprof/pprof.go	/^func (p runtimeProfile) Stack(i int) []uintptr { return p[i].Stack() }$/;"	f
Stack	./runtime/pprof/pprof.go	/^func (x stackProfile) Stack(i int) []uintptr { return x[i] }$/;"	f
StackRecord	./runtime/mprof.go	/^type StackRecord struct {$/;"	t
StackT	./runtime/defs_darwin.go	/^type StackT C.struct_sigaltstack$/;"	t
StackT	./runtime/defs_dragonfly.go	/^type StackT C.stack_t$/;"	t
StackT	./runtime/defs_freebsd.go	/^type StackT C.stack_t$/;"	t
StackT	./runtime/defs_netbsd.go	/^type StackT C.stack_t$/;"	t
StackT	./runtime/defs_openbsd.go	/^type StackT C.stack_t$/;"	t
StackT	./runtime/defs_solaris.go	/^type StackT C.stack_t$/;"	t
StandardUI	./cmd/pprof/internal/plugin/plugin.go	/^func StandardUI() UI {$/;"	f
Start	./net/http/httptest/server.go	/^func (s *Server) Start() {$/;"	f
Start	./net/smtp/auth.go	/^func (a *cramMD5Auth) Start(server *ServerInfo) (string, []byte, error) {$/;"	f
Start	./net/smtp/auth.go	/^func (a *plainAuth) Start(server *ServerInfo) (string, []byte, error) {$/;"	f
Start	./net/textproto/pipeline.go	/^func (s *sequencer) Start(id uint) {$/;"	f
Start	./os/exec/exec.go	/^func (c *Cmd) Start() error {$/;"	f
Start	./runtime/trace/trace.go	/^func Start(w io.Writer) error {$/;"	f
Start	./syscall/exec_unix_test.go	/^func (c *command) Start() {$/;"	f
Start	./syscall/srpc_nacl.go	/^func (r *srpc) Start(name string, arg []interface{}) {$/;"	f
StartCPUProfile	./runtime/pprof/pprof.go	/^func StartCPUProfile(w io.Writer) error {$/;"	f
StartCond	./regexp/syntax/prog.go	/^func (p *Prog) StartCond() EmptyOp {$/;"	f
StartElement	./encoding/xml/xml.go	/^type StartElement struct {$/;"	t
StartProcess	./os/doc.go	/^func StartProcess(name string, argv []string, attr *ProcAttr) (*Process, error) {$/;"	f
StartProcess	./syscall/exec_plan9.go	/^func StartProcess(argv0 string, argv []string, attr *ProcAttr) (pid int, handle uintptr, err error) {$/;"	f
StartProcess	./syscall/exec_unix.go	/^func StartProcess(argv0 string, argv []string, attr *ProcAttr) (pid int, handle uintptr, err error) {$/;"	f
StartProcess	./syscall/exec_windows.go	/^func StartProcess(argv0 string, argv []string, attr *ProcAttr) (pid int, handle uintptr, err error) {$/;"	f
StartProcess	./syscall/syscall_nacl.go	/^func StartProcess(argv0 string, argv []string, attr *ProcAttr) (pid int, handle uintptr, err error) {$/;"	f
StartRequest	./net/textproto/pipeline.go	/^func (p *Pipeline) StartRequest(id uint) {$/;"	f
StartResponse	./net/textproto/pipeline.go	/^func (p *Pipeline) StartResponse(id uint) {$/;"	f
StartTLS	./net/http/httptest/server.go	/^func (s *Server) StartTLS() {$/;"	f
StartTLS	./net/smtp/smtp.go	/^func (c *Client) StartTLS(config *tls.Config) error {$/;"	f
StartTimer	./go/doc/testdata/benchmark.go	/^func (b *B) StartTimer() {$/;"	f
StartTimer	./testing/benchmark.go	/^func (b *B) StartTimer() {$/;"	f
StartTrace	./runtime/trace.go	/^func StartTrace() error {$/;"	f
StartupInfo	./syscall/ztypes_windows.go	/^type StartupInfo struct {$/;"	t
Stat	./cmd/pack/pack_test.go	/^func (f *FakeFile) Stat() (os.FileInfo, error) {$/;"	f
Stat	./internal/syscall/windows/registry/key.go	/^func (k Key) Stat() (*KeyInfo, error) {$/;"	f
Stat	./net/http/fs_test.go	/^func (f *fakeFile) Stat() (os.FileInfo, error) { return f.fi, nil }$/;"	f
Stat	./net/internal/socktest/switch.go	/^type Stat struct {$/;"	t
Stat	./os/file_plan9.go	/^func (f *File) Stat() (FileInfo, error) {$/;"	f
Stat	./os/file_unix.go	/^func (f *File) Stat() (FileInfo, error) {$/;"	f
Stat	./os/file_unix.go	/^func Stat(name string) (FileInfo, error) {$/;"	f
Stat	./os/stat_plan9.go	/^func Stat(name string) (FileInfo, error) {$/;"	f
Stat	./os/stat_windows.go	/^func (file *File) Stat() (FileInfo, error) {$/;"	f
Stat	./os/stat_windows.go	/^func Stat(name string) (FileInfo, error) {$/;"	f
Stat	./runtime/defs_solaris.go	/^type Stat C.struct_stat$/;"	t
Stat	./syscall/fs_nacl.go	/^func Stat(path string, st *Stat_t) error {$/;"	f
Stat	./syscall/syscall_linux_arm64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/syscall_plan9.go	/^func Stat(path string, edir []byte) (n int, err error) {$/;"	f
Stat	./syscall/zsyscall_darwin_386.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_darwin_amd64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_darwin_arm.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_darwin_arm64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_dragonfly_amd64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_freebsd_386.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_freebsd_amd64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_freebsd_arm.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_linux_386.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_linux_amd64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_linux_arm.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_linux_ppc64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_linux_ppc64le.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_netbsd_386.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_netbsd_amd64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_netbsd_arm.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_openbsd_386.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_openbsd_amd64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_openbsd_arm.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat	./syscall/zsyscall_solaris_amd64.go	/^func Stat(path string, stat *Stat_t) (err error) {$/;"	f
Stat_t	./syscall/syscall_nacl.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/types_darwin.go	/^type Stat_t C.struct_stat64$/;"	t
Stat_t	./syscall/types_dragonfly.go	/^type Stat_t C.struct_stat$/;"	t
Stat_t	./syscall/types_freebsd.go	/^type Stat_t C.struct_stat8$/;"	t
Stat_t	./syscall/types_linux.go	/^type Stat_t C.struct_stat$/;"	t
Stat_t	./syscall/types_netbsd.go	/^type Stat_t C.struct_stat$/;"	t
Stat_t	./syscall/types_openbsd.go	/^type Stat_t C.struct_stat$/;"	t
Stat_t	./syscall/types_solaris.go	/^type Stat_t C.struct_stat$/;"	t
Stat_t	./syscall/ztypes_darwin_386.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_darwin_amd64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_darwin_arm.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_darwin_arm64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_dragonfly_amd64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_freebsd_386.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_freebsd_amd64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_freebsd_arm.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_linux_386.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_linux_amd64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_linux_arm.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_linux_arm64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_linux_ppc64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_linux_ppc64le.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_netbsd_386.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_netbsd_amd64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_netbsd_arm.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_openbsd_386.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_openbsd_amd64.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_openbsd_arm.go	/^type Stat_t struct {$/;"	t
Stat_t	./syscall/ztypes_solaris_amd64.go	/^type Stat_t struct {$/;"	t
State	./fmt/print.go	/^type State interface {$/;"	t
State	./unicode/maketables.go	/^type State int$/;"	t
Statfs	./syscall/syscall_linux_386.go	/^func Statfs(path string, buf *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/syscall_linux_arm.go	/^func Statfs(path string, buf *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_darwin_386.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_darwin_amd64.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_darwin_arm.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_darwin_arm64.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_dragonfly_amd64.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_freebsd_386.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_freebsd_amd64.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_freebsd_arm.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_linux_amd64.go	/^func Statfs(path string, buf *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_linux_arm64.go	/^func Statfs(path string, buf *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_linux_ppc64.go	/^func Statfs(path string, buf *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_linux_ppc64le.go	/^func Statfs(path string, buf *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_openbsd_386.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_openbsd_amd64.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs	./syscall/zsyscall_openbsd_arm.go	/^func Statfs(path string, stat *Statfs_t) (err error) {$/;"	f
Statfs_t	./syscall/types_darwin.go	/^type Statfs_t C.struct_statfs64$/;"	t
Statfs_t	./syscall/types_dragonfly.go	/^type Statfs_t C.struct_statfs$/;"	t
Statfs_t	./syscall/types_freebsd.go	/^type Statfs_t C.struct_statfs$/;"	t
Statfs_t	./syscall/types_linux.go	/^type Statfs_t C.struct_statfs$/;"	t
Statfs_t	./syscall/types_netbsd.go	/^type Statfs_t C.struct_statfs$/;"	t
Statfs_t	./syscall/types_openbsd.go	/^type Statfs_t C.struct_statfs$/;"	t
Statfs_t	./syscall/ztypes_darwin_386.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_darwin_amd64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_darwin_arm.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_darwin_arm64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_dragonfly_amd64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_freebsd_386.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_freebsd_amd64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_freebsd_arm.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_linux_386.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_linux_amd64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_linux_arm.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_linux_arm64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_linux_ppc64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_linux_ppc64le.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_netbsd_386.go	/^type Statfs_t [0]byte$/;"	t
Statfs_t	./syscall/ztypes_netbsd_amd64.go	/^type Statfs_t [0]byte$/;"	t
Statfs_t	./syscall/ztypes_netbsd_arm.go	/^type Statfs_t [0]byte$/;"	t
Statfs_t	./syscall/ztypes_openbsd_386.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_openbsd_amd64.go	/^type Statfs_t struct {$/;"	t
Statfs_t	./syscall/ztypes_openbsd_arm.go	/^type Statfs_t struct {$/;"	t
Static	./debug/gosym/symtab.go	/^func (s *Sym) Static() bool { return s.Type >= 'a' }$/;"	f
Stats	./database/sql/sql.go	/^func (db *DB) Stats() DBStats {$/;"	f
Stats	./net/internal/socktest/switch.go	/^func (sw *Switch) Stats() []Stat {$/;"	f
Status	./net/internal/socktest/switch.go	/^type Status struct {$/;"	t
StatusText	./net/http/status.go	/^func StatusText(code int) string {$/;"	f
StdEncoding	./encoding/base32/base32.go	/^var StdEncoding = NewEncoding(encodeStd)$/;"	v
StdEncoding	./encoding/base64/base64.go	/^var StdEncoding = NewEncoding(encodeStd)$/;"	v
StdSizes	./go/types/sizes.go	/^type StdSizes struct {$/;"	t
StderrPipe	./os/exec/exec.go	/^func (c *Cmd) StderrPipe() (io.ReadCloser, error) {$/;"	f
StdinPipe	./os/exec/exec.go	/^func (c *Cmd) StdinPipe() (io.WriteCloser, error) {$/;"	f
StdoutPipe	./os/exec/exec.go	/^func (c *Cmd) StdoutPipe() (io.ReadCloser, error) {$/;"	f
StillOk	./cmd/vet/testdata/copylock_func.go	/^func StillOk(EmbeddedMutexPointer)     {}$/;"	f
Stksize	./cmd/compile/internal/gc/go.go	/^var Stksize int64 \/\/ stack size for current frame$/;"	v
Stmt	./database/sql/driver/driver.go	/^type Stmt interface {$/;"	t
Stmt	./database/sql/sql.go	/^func (tx *Tx) Stmt(stmt *Stmt) *Stmt {$/;"	f
Stmt	./database/sql/sql.go	/^type Stmt struct {$/;"	t
Stmt	./go/ast/ast.go	/^type Stmt interface {$/;"	t
Stop	./os/signal/signal.go	/^func Stop(c chan<- os.Signal) {$/;"	f
Stop	./runtime/trace/trace.go	/^func Stop() {$/;"	f
Stop	./syscall/exec_unix_test.go	/^func (c *command) Stop() {$/;"	f
Stop	./time/sleep.go	/^func (t *Timer) Stop() bool {$/;"	f
Stop	./time/tick.go	/^func (t *Ticker) Stop() {$/;"	f
StopCPUProfile	./runtime/pprof/pprof.go	/^func StopCPUProfile() {$/;"	f
StopIO	./syscall/net_nacl.go	/^func StopIO(fd int) error {$/;"	f
StopSignal	./syscall/syscall_bsd.go	/^func (w WaitStatus) StopSignal() Signal {$/;"	f
StopSignal	./syscall/syscall_linux.go	/^func (w WaitStatus) StopSignal() Signal {$/;"	f
StopSignal	./syscall/syscall_nacl.go	/^func (w WaitStatus) StopSignal() Signal { return 0 }$/;"	f
StopSignal	./syscall/syscall_solaris.go	/^func (w WaitStatus) StopSignal() Signal {$/;"	f
StopSignal	./syscall/syscall_windows.go	/^func (w WaitStatus) StopSignal() Signal { return -1 }$/;"	f
StopTimer	./go/doc/testdata/benchmark.go	/^func (b *B) StopTimer() {$/;"	f
StopTimer	./testing/benchmark.go	/^func (b *B) StopTimer() {$/;"	f
StopTrace	./runtime/trace.go	/^func StopTrace() {$/;"	f
Stopped	./syscall/syscall_bsd.go	/^func (w WaitStatus) Stopped() bool { return w&mask == stopped && Signal(w>>shift) != SIGSTOP }$/;"	f
Stopped	./syscall/syscall_linux.go	/^func (w WaitStatus) Stopped() bool { return w&0xFF == stopped }$/;"	f
Stopped	./syscall/syscall_nacl.go	/^func (w WaitStatus) Stopped() bool      { return false }$/;"	f
Stopped	./syscall/syscall_solaris.go	/^func (w WaitStatus) Stopped() bool { return w&mask == stopped && Signal(w>>shift) != SIGSTOP }$/;"	f
Stopped	./syscall/syscall_windows.go	/^func (w WaitStatus) Stopped() bool { return false }$/;"	f
Store	./sync/atomic/value.go	/^func (v *Value) Store(x interface{}) {$/;"	f
StoreInt32	./sync/atomic/doc.go	/^func StoreInt32(addr *int32, val int32)$/;"	f
StoreInt64	./sync/atomic/doc.go	/^func StoreInt64(addr *int64, val int64)$/;"	f
StorePointer	./sync/atomic/doc.go	/^func StorePointer(addr *unsafe.Pointer, val unsafe.Pointer)$/;"	f
StoreUint32	./sync/atomic/doc.go	/^func StoreUint32(addr *uint32, val uint32)$/;"	f
StoreUint64	./sync/atomic/doc.go	/^func StoreUint64(addr *uint64, val uint64)$/;"	f
StoreUintptr	./sync/atomic/doc.go	/^func StoreUintptr(addr *uintptr, val uintptr)$/;"	f
Str	./runtime/race/testdata/slice_test.go	/^	type Str struct {$/;"	t
StrconvFunc	./syscall/mksyscall_windows.go	/^func (f *Fn) StrconvFunc() string {$/;"	f
StrconvType	./syscall/mksyscall_windows.go	/^func (f *Fn) StrconvType() string {$/;"	f
Stream	./crypto/cipher/cipher.go	/^type Stream interface {$/;"	t
StreamReader	./crypto/cipher/io.go	/^type StreamReader struct {$/;"	t
StreamWriter	./crypto/cipher/io.go	/^type StreamWriter struct {$/;"	t
String	./bytes/buffer.go	/^func (b *Buffer) String() string {$/;"	f
String	./cmd/asm/internal/flags/flags.go	/^func (m *MultiFlag) String() string {$/;"	f
String	./cmd/asm/internal/lex/lex.go	/^func (l Token) String() string {$/;"	f
String	./cmd/asm/internal/lex/lex.go	/^func (t ScanToken) String() string {$/;"	f
String	./cmd/cgo/gcc.go	/^func (tr *TypeRepr) String() string {$/;"	f
String	./cmd/compile/internal/big/accuracy_string.go	/^func (i Accuracy) String() string {$/;"	f
String	./cmd/compile/internal/big/decimal.go	/^func (x *decimal) String() string {$/;"	f
String	./cmd/compile/internal/big/ftoa.go	/^func (x *Float) String() string {$/;"	f
String	./cmd/compile/internal/big/hilbert_test.go	/^func (a *matrix) String() string {$/;"	f
String	./cmd/compile/internal/big/intconv.go	/^func (x *Int) String() string {$/;"	f
String	./cmd/compile/internal/big/ratconv.go	/^func (x *Rat) String() string {$/;"	f
String	./cmd/compile/internal/big/roundingmode_string.go	/^func (i RoundingMode) String() string {$/;"	f
String	./cmd/compile/internal/gc/fmt.go	/^func (l *NodeList) String() string {$/;"	f
String	./cmd/compile/internal/gc/fmt.go	/^func (n *Node) String() string {$/;"	f
String	./cmd/compile/internal/gc/fmt.go	/^func (s *Sym) String() string {$/;"	f
String	./cmd/compile/internal/gc/fmt.go	/^func (t *Type) String() string {$/;"	f
String	./cmd/compile/internal/gc/mparith2.go	/^func (x *Mpint) String() string {$/;"	f
String	./cmd/compile/internal/gc/mparith3.go	/^func (f *Mpflt) String() string {$/;"	f
String	./cmd/compile/internal/gc/reg.go	/^func (bits Bits) String() string {$/;"	f
String	./cmd/dist/main.go	/^func (c *count) String() string {$/;"	f
String	./cmd/go/vcs.go	/^func (v *vcsCmd) String() string {$/;"	f
String	./cmd/internal/goobj/read.go	/^func (k SymKind) String() string {$/;"	f
String	./cmd/internal/goobj/read.go	/^func (s SymID) String() string {$/;"	f
String	./cmd/internal/obj/flag.go	/^func (c *count) String() string {$/;"	f
String	./cmd/internal/obj/flag.go	/^func (f fn0) String() string { return "" }$/;"	f
String	./cmd/internal/obj/flag.go	/^func (f fn1) String() string { return "" }$/;"	f
String	./cmd/internal/obj/flag.go	/^func (i *int32Value) String() string { return fmt.Sprint(*i) }$/;"	f
String	./cmd/internal/obj/util.go	/^func (p *Prog) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func (r ExtInst) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (e Endian) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (f Float32Imm) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (f Float64Imm) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (i Imm) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (i ImmAlt) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (i Inst) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (i Label) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (m Mem) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (m Mode) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (op Op) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (r PCRel) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (r Reg) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (r RegList) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (r RegShift) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (r RegShiftReg) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (r RegX) String() string {$/;"	f
String	./cmd/internal/rsc.io/arm/armasm/inst.go	/^func (s Shift) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func (r ExtInst) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (i Imm) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (i Inst) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (m Mem) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (op Op) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (p Prefix) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (r Reg) String() string {$/;"	f
String	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (r Rel) String() string {$/;"	f
String	./cmd/link/internal/ld/lib.go	/^func (mode *BuildMode) String() string {$/;"	f
String	./cmd/link/internal/ld/lib.go	/^func (r *Rpath) String() string {$/;"	f
String	./cmd/link/internal/ld/link.go	/^func (s *LSym) String() string {$/;"	f
String	./cmd/nm/nm.go	/^func (nflag) String() string {$/;"	f
String	./cmd/pack/pack.go	/^func (e *Entry) String() string {$/;"	f
String	./cmd/pprof/internal/driver/driver.go	/^func (f *flags) String(p *profile.Profile) string {$/;"	f
String	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) String() string {$/;"	f
String	./cmd/pprof/pprof.go	/^func (flags) String(o, d, c string) *string {$/;"	f
String	./cmd/vet/copylock.go	/^func (path typePath) String() string {$/;"	f
String	./cmd/vet/main.go	/^func (ts *triState) String() string {$/;"	f
String	./cmd/vet/testdata/print.go	/^func (*stringer) String() string {$/;"	f
String	./cmd/vet/testdata/print.go	/^func (int) String() {$/;"	f
String	./cmd/vet/testdata/print.go	/^func (p *recursivePtrStringer) String() string {$/;"	f
String	./cmd/vet/testdata/print.go	/^func (s recursiveStringer) String() string {$/;"	f
String	./cmd/vet/testdata/print.go	/^func (stringerarray) String() string {$/;"	f
String	./crypto/tls/alert.go	/^func (e alert) String() string {$/;"	f
String	./database/sql/driver/types.go	/^func (boolType) String() string { return "Bool" }$/;"	f
String	./database/sql/driver/types.go	/^var String stringType$/;"	v
String	./debug/dwarf/class_string.go	/^func (i Class) String() string {$/;"	f
String	./debug/dwarf/const.go	/^func (a Attr) String() string {$/;"	f
String	./debug/dwarf/const.go	/^func (t Tag) String() string {$/;"	f
String	./debug/dwarf/type.go	/^func (t *ArrayType) String() string {$/;"	f
String	./debug/dwarf/type.go	/^func (t *BasicType) String() string {$/;"	f
String	./debug/dwarf/type.go	/^func (t *DotDotDotType) String() string { return "..." }$/;"	f
String	./debug/dwarf/type.go	/^func (t *EnumType) String() string {$/;"	f
String	./debug/dwarf/type.go	/^func (t *FuncType) String() string {$/;"	f
String	./debug/dwarf/type.go	/^func (t *PtrType) String() string { return "*" + t.Type.String() }$/;"	f
String	./debug/dwarf/type.go	/^func (t *QualType) String() string { return t.Qual + " " + t.Type.String() }$/;"	f
String	./debug/dwarf/type.go	/^func (t *StructType) String() string {$/;"	f
String	./debug/dwarf/type.go	/^func (t *TypedefType) String() string { return t.Name }$/;"	f
String	./debug/dwarf/type.go	/^func (t *VoidType) String() string { return "void" }$/;"	f
String	./debug/elf/elf.go	/^func (i Class) String() string   { return stringName(uint32(i), classStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i Data) String() string   { return stringName(uint32(i), dataStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i DynFlag) String() string   { return flagName(uint32(i), dflagStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i DynTag) String() string   { return stringName(uint32(i), dtStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i Machine) String() string   { return stringName(uint32(i), machineStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i NType) String() string   { return stringName(uint32(i), ntypeStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i OSABI) String() string   { return stringName(uint32(i), osabiStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i ProgFlag) String() string   { return flagName(uint32(i), pfStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i ProgType) String() string   { return stringName(uint32(i), ptStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_386) String() string   { return stringName(uint32(i), r386Strings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_AARCH64) String() string   { return stringName(uint32(i), raarch64Strings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_ALPHA) String() string   { return stringName(uint32(i), ralphaStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_ARM) String() string   { return stringName(uint32(i), rarmStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_PPC) String() string   { return stringName(uint32(i), rppcStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_PPC64) String() string   { return stringName(uint32(i), rppc64Strings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_SPARC) String() string   { return stringName(uint32(i), rsparcStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i R_X86_64) String() string   { return stringName(uint32(i), rx86_64Strings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i SectionFlag) String() string   { return flagName(uint32(i), shfStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i SectionIndex) String() string   { return stringName(uint32(i), shnStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i SectionType) String() string   { return stringName(uint32(i), shtStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i SymBind) String() string   { return stringName(uint32(i), stbStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i SymType) String() string   { return stringName(uint32(i), sttStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i SymVis) String() string   { return stringName(uint32(i), stvStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i Type) String() string   { return stringName(uint32(i), typeStrings, false) }$/;"	f
String	./debug/elf/elf.go	/^func (i Version) String() string   { return stringName(uint32(i), versionStrings, false) }$/;"	f
String	./debug/macho/macho.go	/^func (i Cpu) String() string   { return stringName(uint32(i), cpuStrings, false) }$/;"	f
String	./debug/macho/macho.go	/^func (i LoadCmd) String() string   { return stringName(uint32(i), cmdStrings, false) }$/;"	f
String	./encoding/asn1/asn1.go	/^func (oi ObjectIdentifier) String() string {$/;"	f
String	./encoding/binary/binary.go	/^func (bigEndian) String() string { return "BigEndian" }$/;"	f
String	./encoding/binary/binary.go	/^func (littleEndian) String() string { return "LittleEndian" }$/;"	f
String	./encoding/gob/codec_test.go	/^		t.Errorf("derived type String failed: %q should be %q", v, str2)$/;"	t
String	./encoding/gob/codec_test.go	/^type String string$/;"	t
String	./encoding/gob/debug.go	/^func (t tab) String() string {$/;"	f
String	./encoding/gob/gobencdec_test.go	/^func (br *gobDecoderBug0) String() string {$/;"	f
String	./encoding/json/decode.go	/^func (n Number) String() string { return string(n) }$/;"	f
String	./encoding/json/stream.go	/^func (d Delim) String() string {$/;"	f
String	./expvar/expvar.go	/^func (f Func) String() string {$/;"	f
String	./expvar/expvar.go	/^func (v *Float) String() string {$/;"	f
String	./expvar/expvar.go	/^func (v *Int) String() string {$/;"	f
String	./expvar/expvar.go	/^func (v *Map) String() string {$/;"	f
String	./expvar/expvar.go	/^func (v *String) String() string {$/;"	f
String	./expvar/expvar.go	/^type String struct {$/;"	t
String	./flag/example_test.go	/^func (i *interval) String() string {$/;"	f
String	./flag/flag.go	/^func (b *boolValue) String() string { return fmt.Sprintf("%v", *b) }$/;"	f
String	./flag/flag.go	/^func (d *durationValue) String() string { return (*time.Duration)(d).String() }$/;"	f
String	./flag/flag.go	/^func (f *FlagSet) String(name string, value string, usage string) *string {$/;"	f
String	./flag/flag.go	/^func (f *float64Value) String() string { return fmt.Sprintf("%v", *f) }$/;"	f
String	./flag/flag.go	/^func (i *int64Value) String() string { return fmt.Sprintf("%v", *i) }$/;"	f
String	./flag/flag.go	/^func (i *intValue) String() string { return fmt.Sprintf("%v", *i) }$/;"	f
String	./flag/flag.go	/^func (i *uint64Value) String() string { return fmt.Sprintf("%v", *i) }$/;"	f
String	./flag/flag.go	/^func (i *uintValue) String() string { return fmt.Sprintf("%v", *i) }$/;"	f
String	./flag/flag.go	/^func (s *stringValue) String() string { return fmt.Sprintf("%s", *s) }$/;"	f
String	./flag/flag.go	/^func String(name string, value string, usage string) *string {$/;"	f
String	./flag/flag_test.go	/^func (b *boolFlagVar) String() string {$/;"	f
String	./flag/flag_test.go	/^func (f *flagVar) String() string {$/;"	f
String	./fmt/doc.go	/^		func (x X) String() string { return Sprintf("<%s>", string(x)) }$/;"	f
String	./fmt/doc.go	/^		func (x X) String() string { return Sprintf("<%s>", x) }$/;"	f
String	./fmt/fmt_test.go	/^func (byteStringer) String() string { return "X" }$/;"	f
String	./fmt/fmt_test.go	/^func (i I) String() string { return Sprintf("<%d>", int(i)) }$/;"	f
String	./fmt/fmt_test.go	/^func (p *P) String() string {$/;"	f
String	./fmt/fmt_test.go	/^func (p Panic) String() string {$/;"	f
String	./fmt/fmt_test.go	/^func (r *Recur) String() string {$/;"	f
String	./fmt/stringer_test.go	/^func (v TB) String() string   { return Sprintf("B: %t", bool(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TF) String() string   { return Sprintf("F: %f", float64(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TF32) String() string { return Sprintf("F32: %f", float32(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TF64) String() string { return Sprintf("F64: %f", float64(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TI) String() string   { return Sprintf("I: %d", int(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TI16) String() string { return Sprintf("I16: %d", int16(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TI32) String() string { return Sprintf("I32: %d", int32(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TI64) String() string { return Sprintf("I64: %d", int64(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TI8) String() string  { return Sprintf("I8: %d", int8(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TS) String() string   { return Sprintf("S: %q", string(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TU) String() string   { return Sprintf("U: %d", uint(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TU16) String() string { return Sprintf("U16: %d", uint16(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TU32) String() string { return Sprintf("U32: %d", uint32(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TU64) String() string { return Sprintf("U64: %d", uint64(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TU8) String() string  { return Sprintf("U8: %d", uint8(v)) }$/;"	f
String	./fmt/stringer_test.go	/^func (v TUI) String() string  { return Sprintf("UI: %d", uintptr(v)) }$/;"	f
String	./go/ast/ast.go	/^func (id *Ident) String() string {$/;"	f
String	./go/ast/commentmap.go	/^func (cmap CommentMap) String() string {$/;"	f
String	./go/ast/scope.go	/^func (kind ObjKind) String() string { return objKindStrings[kind] }$/;"	f
String	./go/ast/scope.go	/^func (s *Scope) String() string {$/;"	f
String	./go/constant/value.go	/^func (unknownVal) String() string   { return "unknown" }$/;"	f
String	./go/constant/value.go	/^func (x boolVal) String() string    { return fmt.Sprintf("%v", bool(x)) }$/;"	f
String	./go/constant/value.go	/^func (x complexVal) String() string { return fmt.Sprintf("(%s + %si)", x.re, x.im) }$/;"	f
String	./go/constant/value.go	/^func (x floatVal) String() string   { return x.val.String() }$/;"	f
String	./go/constant/value.go	/^func (x int64Val) String() string   { return strconv.FormatInt(int64(x), 10) }$/;"	f
String	./go/constant/value.go	/^func (x intVal) String() string     { return x.val.String() }$/;"	f
String	./go/constant/value.go	/^func (x stringVal) String() string  { return strconv.Quote(string(x)) }$/;"	f
String	./go/doc/testdata/benchmark.go	/^func (r BenchmarkResult) String() string {$/;"	f
String	./go/format/format_test.go	/^func String(s string) (string, error) {$/;"	f
String	./go/token/position.go	/^func (pos Position) String() string {$/;"	f
String	./go/token/token.go	/^func (tok Token) String() string {$/;"	f
String	./go/types/api.go	/^func (init *Initializer) String() string {$/;"	f
String	./go/types/example_test.go	/^func (c Celsius) String() string  { return fmt.Sprintf("%g°C", c) }$/;"	f
String	./go/types/example_test.go	/^func (c Celsius) String() string { return fmt.Sprintf("%g°C", c) }$/;"	f
String	./go/types/methodset.go	/^func (s *MethodSet) String() string {$/;"	f
String	./go/types/object.go	/^func (obj *Builtin) String() string  { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *Const) String() string    { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *Func) String() string     { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *Label) String() string    { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *Nil) String() string      { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *PkgName) String() string  { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *TypeName) String() string { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *Var) String() string      { return ObjectString(obj, nil) }$/;"	f
String	./go/types/object.go	/^func (obj *object) String() string      { panic("abstract") }$/;"	f
String	./go/types/operand.go	/^func (x *operand) String() string {$/;"	f
String	./go/types/package.go	/^func (pkg *Package) String() string {$/;"	f
String	./go/types/scope.go	/^func (s *Scope) String() string {$/;"	f
String	./go/types/selection.go	/^func (s *Selection) String() string { return SelectionString(s, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Array) String() string     { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Basic) String() string     { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Chan) String() string      { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Interface) String() string { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Map) String() string       { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Named) String() string     { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Pointer) String() string   { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Signature) String() string { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Slice) String() string     { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Struct) String() string    { return TypeString(t, nil) }$/;"	f
String	./go/types/type.go	/^func (t *Tuple) String() string     { return TypeString(t, nil) }$/;"	f
String	./html/template/content_test.go	/^func (s *stringer) String() string {$/;"	f
String	./html/template/context.go	/^func (a attr) String() string {$/;"	f
String	./html/template/context.go	/^func (c context) String() string {$/;"	f
String	./html/template/context.go	/^func (c jsCtx) String() string {$/;"	f
String	./html/template/context.go	/^func (d delim) String() string {$/;"	f
String	./html/template/context.go	/^func (e element) String() string {$/;"	f
String	./html/template/context.go	/^func (s state) String() string {$/;"	f
String	./html/template/context.go	/^func (u urlPart) String() string {$/;"	f
String	./image/geom.go	/^func (p Point) String() string {$/;"	f
String	./image/geom.go	/^func (r Rectangle) String() string {$/;"	f
String	./image/jpeg/dct_test.go	/^func (b *block) String() string {$/;"	f
String	./image/ycbcr.go	/^func (s YCbCrSubsampleRatio) String() string {$/;"	f
String	./io/pipe_test.go	/^func (p pipeTest) String() string {$/;"	f
String	./math/big/accuracy_string.go	/^func (i Accuracy) String() string {$/;"	f
String	./math/big/decimal.go	/^func (x *decimal) String() string {$/;"	f
String	./math/big/ftoa.go	/^func (x *Float) String() string {$/;"	f
String	./math/big/hilbert_test.go	/^func (a *matrix) String() string {$/;"	f
String	./math/big/intconv.go	/^func (x *Int) String() string {$/;"	f
String	./math/big/ratconv.go	/^func (x *Rat) String() string {$/;"	f
String	./math/big/roundingmode_string.go	/^func (i RoundingMode) String() string {$/;"	f
String	./net/dnsclient_unix.go	/^func (o hostLookupOrder) String() string {$/;"	f
String	./net/dnsmsg.go	/^func (dns *dnsMsg) String() string {$/;"	f
String	./net/file.go	/^func (f fileAddr) String() string { return string(f) }$/;"	f
String	./net/http/cookie.go	/^func (c *Cookie) String() string {$/;"	f
String	./net/http/cookiejar/jar_test.go	/^func (testPSL) String() string {$/;"	f
String	./net/http/serve_test.go	/^func (a dummyAddr) String() string {$/;"	f
String	./net/http/server.go	/^func (c ConnState) String() string {$/;"	f
String	./net/http/transport.go	/^func (k connectMethodKey) String() string {$/;"	f
String	./net/http/transport_test.go	/^func (t proxyFromEnvTest) String() string {$/;"	f
String	./net/http/triv.go	/^func (ctr *Counter) String() string {$/;"	f
String	./net/interface.go	/^func (f Flags) String() string {$/;"	f
String	./net/internal/socktest/switch.go	/^func (so Status) String() string {$/;"	f
String	./net/internal/socktest/switch.go	/^func (st Stat) String() string {$/;"	f
String	./net/ip.go	/^func (ip IP) String() string {$/;"	f
String	./net/ip.go	/^func (m IPMask) String() string {$/;"	f
String	./net/ip.go	/^func (n *IPNet) String() string {$/;"	f
String	./net/iprawsock.go	/^func (a *IPAddr) String() string {$/;"	f
String	./net/mac.go	/^func (a HardwareAddr) String() string {$/;"	f
String	./net/mail/message.go	/^func (a *Address) String() string {$/;"	f
String	./net/pipe.go	/^func (pipeAddr) String() string {$/;"	f
String	./net/rpc/jsonrpc/all_test.go	/^func (pipeAddr) String() string {$/;"	f
String	./net/rpc/server_test.go	/^func (t *Arith) String(args *Args, reply *string) error {$/;"	f
String	./net/tcpsock.go	/^func (a *TCPAddr) String() string {$/;"	f
String	./net/udpsock.go	/^func (a *UDPAddr) String() string {$/;"	f
String	./net/unixsock.go	/^func (a *UnixAddr) String() string {$/;"	f
String	./net/url/url.go	/^func (u *URL) String() string {$/;"	f
String	./net/url/url.go	/^func (u *Userinfo) String() string {$/;"	f
String	./os/exec_plan9.go	/^func (p *ProcessState) String() string {$/;"	f
String	./os/exec_posix.go	/^func (p *ProcessState) String() string {$/;"	f
String	./os/types.go	/^func (m FileMode) String() string {$/;"	f
String	./reflect/all_test.go	/^func (*XM) String() string { return "" }$/;"	f
String	./reflect/type.go	/^func (d ChanDir) String() string {$/;"	f
String	./reflect/type.go	/^func (k Kind) String() string {$/;"	f
String	./reflect/type.go	/^func (t *rtype) String() string { return *t.string }$/;"	f
String	./reflect/value.go	/^func (v Value) String() string {$/;"	f
String	./regexp/find_test.go	/^func (t FindTest) String() string {$/;"	f
String	./regexp/regexp.go	/^func (re *Regexp) String() string {$/;"	f
String	./regexp/syntax/parse.go	/^func (e ErrorCode) String() string {$/;"	f
String	./regexp/syntax/prog.go	/^func (i *Inst) String() string {$/;"	f
String	./regexp/syntax/prog.go	/^func (i InstOp) String() string {$/;"	f
String	./regexp/syntax/prog.go	/^func (p *Prog) String() string {$/;"	f
String	./regexp/syntax/regexp.go	/^func (re *Regexp) String() string {$/;"	f
String	./sort/example_interface_test.go	/^func (p Person) String() string {$/;"	f
String	./sort/example_wrapper_test.go	/^func (g Grams) String() string { return fmt.Sprintf("%dg", int(g)) }$/;"	f
String	./strconv/decimal.go	/^func (a *decimal) String() string {$/;"	f
String	./syscall/route_bsd_test.go	/^func (f addrFamily) String() string {$/;"	f
String	./syscall/route_bsd_test.go	/^func (f addrFlags) String() string {$/;"	f
String	./syscall/route_bsd_test.go	/^func (sas sockaddrs) String() string {$/;"	f
String	./syscall/security_windows.go	/^func (sid *SID) String() (string, error) {$/;"	f
String	./syscall/syscall_nacl.go	/^func (s Signal) String() string {$/;"	f
String	./syscall/syscall_plan9.go	/^func (n Note) String() string {$/;"	f
String	./syscall/syscall_unix.go	/^func (s Signal) String() string {$/;"	f
String	./syscall/syscall_windows.go	/^func (s Signal) String() string {$/;"	f
String	./testing/benchmark.go	/^func (r BenchmarkResult) String() string {$/;"	f
String	./text/scanner/scanner.go	/^func (pos Position) String() string {$/;"	f
String	./text/tabwriter/tabwriter_test.go	/^func (b *buffer) String() string { return string(b.a) }$/;"	f
String	./text/template/exec_test.go	/^func (v *V) String() string {$/;"	f
String	./text/template/parse/lex.go	/^func (i item) String() string {$/;"	f
String	./text/template/parse/lex_test.go	/^func (i itemType) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (a *ActionNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (b *BoolNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (b *BranchNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (c *ChainNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (c *CommandNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (d *DotNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (e *elseNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (e *endNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (f *FieldNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (i *IdentifierNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (l *ListNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (n *NilNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (n *NumberNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (p *PipeNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (s *StringNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (t *TemplateNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (t *TextNode) String() string {$/;"	f
String	./text/template/parse/node.go	/^func (v *VariableNode) String() string {$/;"	f
String	./time/format.go	/^func (t Time) String() string {$/;"	f
String	./time/time.go	/^func (d Duration) String() string {$/;"	f
String	./time/time.go	/^func (d Weekday) String() string { return days[d] }$/;"	f
String	./time/time.go	/^func (m Month) String() string { return months[m-1] }$/;"	f
String	./time/zoneinfo.go	/^func (l *Location) String() string {$/;"	f
StringBytePtr	./syscall/syscall.go	/^func StringBytePtr(s string) *byte { return &StringByteSlice(s)[0] }$/;"	f
StringByteSlice	./syscall/syscall.go	/^func StringByteSlice(s string) []byte {$/;"	f
StringFind	./strings/export_test.go	/^func StringFind(pattern, text string) int {$/;"	f
StringHash	./runtime/export_test.go	/^var StringHash = stringHash$/;"	v
StringHeader	./cmd/vet/testdata/unsafeptr.go	/^type StringHeader struct {$/;"	t
StringHeader	./reflect/value.go	/^type StringHeader struct {$/;"	t
StringHelper	./cmd/compile/internal/big/natconv_test.go	/^func StringHelper(b *testing.B, base int, x, y Word) {$/;"	f
StringHelper	./math/big/natconv_test.go	/^func StringHelper(b *testing.B, base int, x, y Word) {$/;"	f
StringNode	./text/template/parse/node.go	/^type StringNode struct {$/;"	t
StringReader	./bufio/bufio_test.go	/^type StringReader struct {$/;"	t
StringReader	./text/scanner/scanner_test.go	/^type StringReader struct {$/;"	t
StringSlice	./sort/sort.go	/^type StringSlice []string$/;"	t
StringSlicePtr	./syscall/exec_plan9.go	/^func StringSlicePtr(ss []string) []*byte {$/;"	f
StringSlicePtr	./syscall/exec_unix.go	/^func StringSlicePtr(ss []string) []*byte {$/;"	f
StringStruct	./encoding/gob/gobencdec_test.go	/^type StringStruct struct {$/;"	t
StringTag	./encoding/json/encode_test.go	/^type StringTag struct {$/;"	t
StringTest	./bytes/bytes_test.go	/^type StringTest struct {$/;"	t
StringTest	./cmd/compile/internal/big/ratconv_test.go	/^type StringTest struct {$/;"	t
StringTest	./math/big/ratconv_test.go	/^type StringTest struct {$/;"	t
StringTest	./strings/strings_test.go	/^type StringTest struct {$/;"	t
StringTmpVarCode	./syscall/mksyscall_windows.go	/^func (p *Param) StringTmpVarCode() string {$/;"	f
StringToSid	./syscall/security_windows.go	/^func StringToSid(s string) (*SID, error) {$/;"	f
StringToUTF16	./syscall/syscall_windows.go	/^func StringToUTF16(s string) []uint16 {$/;"	f
StringToUTF16Ptr	./syscall/syscall_windows.go	/^func StringToUTF16Ptr(s string) *uint16 { return &StringToUTF16(s)[0] }$/;"	f
StringTypePrinter	./runtime/runtime-gdb.py	/^class StringTypePrinter:$/;"	c
StringVal	./go/constant/value.go	/^func StringVal(x Value) string {$/;"	f
StringVar	./flag/flag.go	/^func (f *FlagSet) StringVar(p *string, name string, value string, usage string) {$/;"	f
StringVar	./flag/flag.go	/^func StringVar(p *string, name string, value string, usage string) {$/;"	f
Stringer	./fmt/print.go	/^type Stringer interface {$/;"	t
Strings	./encoding/xml/marshal_test.go	/^type Strings struct {$/;"	t
Strings	./sort/sort.go	/^func Strings(a []string) { Sort(StringSlice(a)) }$/;"	f
StringsAreSorted	./sort/sort.go	/^func StringsAreSorted(a []string) bool { return IsSorted(StringSlice(a)) }$/;"	f
StripPrefix	./net/http/server.go	/^func StripPrefix(prefix string, h Handler) Handler {$/;"	f
Struct	./cmd/cgo/gcc.go	/^func (c *typeConv) Struct(dt *dwarf.StructType, pos token.Pos) (expr *ast.StructType, csyntax string, align int64) {$/;"	f
Struct	./encoding/binary/binary_test.go	/^type Struct struct {$/;"	t
Struct	./encoding/gob/encoder_test.go	/^	type Struct struct {$/;"	t
Struct	./go/types/type.go	/^type Struct struct {$/;"	t
Struct0	./encoding/gob/encoder_test.go	/^type Struct0 struct {$/;"	t
StructField	./debug/dwarf/type.go	/^type StructField struct {$/;"	t
StructField	./reflect/type.go	/^type StructField struct {$/;"	t
StructTag	./reflect/type.go	/^type StructTag string$/;"	t
StructTagTest	./cmd/vet/testdata/structtag.go	/^type StructTagTest struct {$/;"	t
StructType	./debug/dwarf/type.go	/^type StructType struct {$/;"	t
StructValueMethod	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (S) StructValueMethod()$/;"	f
StructValueMethodNamedRecv	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (ignored S) StructValueMethodNamedRecv()$/;"	f
Structfirst	./cmd/compile/internal/gc/subr.go	/^func Structfirst(s *Iter, nn **Type) *Type {$/;"	f
StructuralError	./compress/bzip2/bzip2.go	/^type StructuralError string$/;"	t
StructuralError	./encoding/asn1/asn1.go	/^type StructuralError struct {$/;"	t
Sub	./cmd/compile/internal/big/float.go	/^func (z *Float) Sub(x, y *Float) *Float {$/;"	f
Sub	./cmd/compile/internal/big/int.go	/^func (z *Int) Sub(x, y *Int) *Int {$/;"	f
Sub	./cmd/compile/internal/big/rat.go	/^func (z *Rat) Sub(x, y *Rat) *Rat {$/;"	f
Sub	./image/geom.go	/^func (p Point) Sub(q Point) Point {$/;"	f
Sub	./image/geom.go	/^func (r Rectangle) Sub(p Point) Rectangle {$/;"	f
Sub	./math/big/float.go	/^func (z *Float) Sub(x, y *Float) *Float {$/;"	f
Sub	./math/big/int.go	/^func (z *Int) Sub(x, y *Int) *Int {$/;"	f
Sub	./math/big/rat.go	/^func (z *Rat) Sub(x, y *Rat) *Rat {$/;"	f
Sub	./time/time.go	/^func (t Time) Sub(u Time) Duration {$/;"	f
SubImage	./image/image.go	/^func (p *Alpha) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *Alpha16) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *CMYK) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *Gray) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *Gray16) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *NRGBA) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *NRGBA64) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *Paletted) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *RGBA) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/image.go	/^func (p *RGBA64) SubImage(r Rectangle) Image {$/;"	f
SubImage	./image/ycbcr.go	/^func (p *YCbCr) SubImage(r Rectangle) Image {$/;"	f
SubexpNames	./regexp/regexp.go	/^func (re *Regexp) SubexpNames() []string {$/;"	f
Subjects	./crypto/x509/cert_pool.go	/^func (s *CertPool) Subjects() (res [][]byte) {$/;"	f
Success	./os/doc.go	/^func (p *ProcessState) Success() bool {$/;"	f
Sum	./crypto/hmac/hmac.go	/^func (h *hmac) Sum(in []byte) []byte {$/;"	f
Sum	./crypto/md5/md5.go	/^func (d0 *digest) Sum(in []byte) []byte {$/;"	f
Sum	./crypto/md5/md5.go	/^func Sum(data []byte) [Size]byte {$/;"	f
Sum	./crypto/sha1/sha1.go	/^func (d0 *digest) Sum(in []byte) []byte {$/;"	f
Sum	./crypto/sha1/sha1.go	/^func Sum(data []byte) [Size]byte {$/;"	f
Sum	./crypto/sha256/sha256.go	/^func (d0 *digest) Sum(in []byte) []byte {$/;"	f
Sum	./crypto/sha512/sha512.go	/^func (d0 *digest) Sum(in []byte) []byte {$/;"	f
Sum	./crypto/tls/prf.go	/^func (h finishedHash) Sum() []byte {$/;"	f
Sum	./hash/adler32/adler32.go	/^func (d *digest) Sum(in []byte) []byte {$/;"	f
Sum	./hash/crc32/crc32.go	/^func (d *digest) Sum(in []byte) []byte {$/;"	f
Sum	./hash/crc64/crc64.go	/^func (d *digest) Sum(in []byte) []byte {$/;"	f
Sum	./hash/fnv/fnv.go	/^func (s *sum32) Sum(in []byte) []byte {$/;"	f
Sum	./hash/fnv/fnv.go	/^func (s *sum32a) Sum(in []byte) []byte {$/;"	f
Sum	./hash/fnv/fnv.go	/^func (s *sum64) Sum(in []byte) []byte {$/;"	f
Sum	./hash/fnv/fnv.go	/^func (s *sum64a) Sum(in []byte) []byte {$/;"	f
Sum224	./crypto/sha256/sha256.go	/^func Sum224(data []byte) (sum224 [Size224]byte) {$/;"	f
Sum256	./crypto/sha256/sha256.go	/^func Sum256(data []byte) [Size]byte {$/;"	f
Sum32	./archive/zip/zip_test.go	/^func (fakeHash32) Sum32() uint32               { return 0 }$/;"	f
Sum32	./hash/adler32/adler32.go	/^func (d *digest) Sum32() uint32 { return uint32(*d) }$/;"	f
Sum32	./hash/crc32/crc32.go	/^func (d *digest) Sum32() uint32 { return d.crc }$/;"	f
Sum32	./hash/fnv/fnv.go	/^func (s *sum32) Sum32() uint32  { return uint32(*s) }$/;"	f
Sum32	./hash/fnv/fnv.go	/^func (s *sum32a) Sum32() uint32 { return uint32(*s) }$/;"	f
Sum384	./crypto/sha512/sha512.go	/^func Sum384(data []byte) (sum384 [Size384]byte) {$/;"	f
Sum512	./crypto/sha512/sha512.go	/^func Sum512(data []byte) [Size]byte {$/;"	f
Sum512_224	./crypto/sha512/sha512.go	/^func Sum512_224(data []byte) (sum224 [Size224]byte) {$/;"	f
Sum512_256	./crypto/sha512/sha512.go	/^func Sum512_256(data []byte) (sum256 [Size256]byte) {$/;"	f
Sum64	./hash/crc64/crc64.go	/^func (d *digest) Sum64() uint64 { return d.crc }$/;"	f
Sum64	./hash/fnv/fnv.go	/^func (s *sum64) Sum64() uint64  { return uint64(*s) }$/;"	f
Sum64	./hash/fnv/fnv.go	/^func (s *sum64a) Sum64() uint64 { return uint64(*s) }$/;"	f
SupplementalData	./time/genzabbrs.go	/^type SupplementalData struct {$/;"	t
Swap	./cmd/compile/internal/gc/export.go	/^func (x methodbyname) Swap(i, j int) {$/;"	f
Swap	./cmd/compile/internal/gc/plive.go	/^func (x blockrpocmp) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/compile/internal/gc/popt.go	/^func (x startcmp) Swap(i, j int) {$/;"	f
Swap	./cmd/compile/internal/gc/reg.go	/^func (x rcmp) Swap(i, j int) {$/;"	f
Swap	./cmd/compile/internal/gc/subr.go	/^func (x errcmp) Swap(i, j int) {$/;"	f
Swap	./cmd/compile/internal/gc/subr.go	/^func (x methcmp) Swap(i, j int) {$/;"	f
Swap	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByExpr) Swap(i, j int) { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByOrd) Swap(i, j int) { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/compile/internal/gc/swt.go	/^func (x caseClauseByType) Swap(i, j int) { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/cover/cover.go	/^func (b blockSlice) Swap(i, j int)      { b[i], b[j] = b[j], b[i] }$/;"	f
Swap	./cmd/cover/profile.go	/^func (b blocksByStart) Swap(i, j int) { b[i], b[j] = b[j], b[i] }$/;"	f
Swap	./cmd/cover/profile.go	/^func (b boundariesByPos) Swap(i, j int) { b[i], b[j] = b[j], b[i] }$/;"	f
Swap	./cmd/cover/profile.go	/^func (p byFileName) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }$/;"	f
Swap	./cmd/fix/fix.go	/^func (f byDate) Swap(i, j int)      { f[i], f[j] = f[j], f[i] }$/;"	f
Swap	./cmd/fix/fix.go	/^func (f byName) Swap(i, j int)      { f[i], f[j] = f[j], f[i] }$/;"	f
Swap	./cmd/go/test.go	/^func (x byOrder) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/internal/obj/arm/asm5.go	/^func (x ocmp) Swap(i, j int) {$/;"	f
Swap	./cmd/internal/obj/arm64/asm7.go	/^func (x ocmp) Swap(i, j int) {$/;"	f
Swap	./cmd/internal/obj/ppc64/asm9.go	/^func (x ocmp) Swap(i, j int) {$/;"	f
Swap	./cmd/internal/objfile/macho.go	/^func (x uint64s) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/internal/objfile/objfile.go	/^func (x byAddr) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/link/internal/ld/ldelf.go	/^func (x rbyoff) Swap(i, j int) {$/;"	f
Swap	./cmd/link/internal/ld/macho.go	/^func (x machoscmp) Swap(i, j int) {$/;"	f
Swap	./cmd/link/internal/ld/pe.go	/^func (x pescmp) Swap(i, j int) {$/;"	f
Swap	./cmd/link/internal/ld/symtab.go	/^func (libs byPkg) Swap(a, b int) {$/;"	f
Swap	./cmd/nm/nm.go	/^func (x byAddr) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/nm/nm.go	/^func (x byName) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/nm/nm.go	/^func (x bySize) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./cmd/pprof/internal/report/report.go	/^func (el edgeList) Swap(i, j int) {$/;"	f
Swap	./cmd/pprof/internal/report/report.go	/^func (o objSymbols) Swap(i, j int) {$/;"	f
Swap	./cmd/pprof/internal/report/report.go	/^func (s nodeSorter) Swap(i, j int)      { s.rs[i], s.rs[j] = s.rs[j], s.rs[i] }$/;"	f
Swap	./cmd/pprof/internal/report/report.go	/^func (t tags) Swap(i, j int) { t[i], t[j] = t[j], t[i] }$/;"	f
Swap	./cmd/trace/goroutines.go	/^func (l gdescList) Swap(i, j int) {$/;"	f
Swap	./cmd/trace/goroutines.go	/^func (l gtypeList) Swap(i, j int) {$/;"	f
Swap	./compress/bzip2/huffman.go	/^func (h huffmanSymbolLengthPairs) Swap(i, j int) {$/;"	f
Swap	./compress/bzip2/huffman.go	/^func (n huffmanCodes) Swap(i, j int) {$/;"	f
Swap	./compress/flate/huffman_code.go	/^func (s literalNodeSorter) Swap(i, j int) { s.a[i], s.a[j] = s.a[j], s.a[i] }$/;"	f
Swap	./container/heap/example_intheap_test.go	/^func (h IntHeap) Swap(i, j int)      { h[i], h[j] = h[j], h[i] }$/;"	f
Swap	./container/heap/example_pq_test.go	/^func (pq PriorityQueue) Swap(i, j int) {$/;"	f
Swap	./container/heap/heap_test.go	/^func (h *myHeap) Swap(i, j int) {$/;"	f
Swap	./encoding/json/encode.go	/^func (sv stringValues) Swap(i, j int)      { sv[i], sv[j] = sv[j], sv[i] }$/;"	f
Swap	./encoding/json/encode.go	/^func (x byIndex) Swap(i, j int) { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./encoding/json/encode.go	/^func (x byName) Swap(i, j int) { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./go/ast/commentmap.go	/^func (a byInterval) Swap(i, j int) { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./go/ast/commentmap.go	/^func (a byPos) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./go/ast/import.go	/^func (x byCommentPos) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./go/ast/import.go	/^func (x byImportSpec) Swap(i, j int) { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./go/doc/example.go	/^func (s exampleByName) Swap(i, j int)      { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./go/doc/reader.go	/^func (d *data) Swap(i, j int)      { d.swap(i, j) }$/;"	f
Swap	./go/internal/gcimporter/gcimporter.go	/^func (a byPath) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./go/scanner/errors.go	/^func (p ErrorList) Swap(i, j int) { p[i], p[j] = p[j], p[i] }$/;"	f
Swap	./go/types/initorder.go	/^func (a nodeQueue) Swap(i, j int) {$/;"	f
Swap	./go/types/methodset.go	/^func (a byUniqueName) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./go/types/ordering.go	/^func (a inSourceOrder) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./go/types/typexpr.go	/^func (a byUniqueMethodName) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./go/types/typexpr.go	/^func (a byUniqueTypeName) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./index/suffixarray/qsufsort.go	/^func (x *suffixSortable) Swap(i, j int)      { x.sa[i], x.sa[j] = x.sa[j], x.sa[i] }$/;"	f
Swap	./index/suffixarray/suffixarray_test.go	/^func (x *index) Swap(i, j int)      { x.sa[i], x.sa[j] = x.sa[j], x.sa[i] }$/;"	f
Swap	./internal/trace/parser.go	/^func (l eventList) Swap(i, j int) {$/;"	f
Swap	./io/ioutil/ioutil.go	/^func (f byName) Swap(i, j int)      { f[i], f[j] = f[j], f[i] }$/;"	f
Swap	./net/addrselect.go	/^func (s *byRFC6724) Swap(i, j int) {$/;"	f
Swap	./net/addrselect.go	/^func (s byMaskLength) Swap(i, j int) { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./net/dnsclient.go	/^func (s byPref) Swap(i, j int)      { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./net/dnsclient.go	/^func (s byPriorityWeight) Swap(i, j int) { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./net/http/cookiejar/jar.go	/^func (s byPathLength) Swap(i, j int) { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./net/http/header.go	/^func (s *headerSorter) Swap(i, j int)      { s.kvs[i], s.kvs[j] = s.kvs[j], s.kvs[i] }$/;"	f
Swap	./net/lookup_windows_test.go	/^func (s byHost) Swap(i, j int)      { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./net/lookup_windows_test.go	/^func (s byPrefAndHost) Swap(i, j int) { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./net/rpc/debug.go	/^func (m methodArray) Swap(i, j int)      { m[i], m[j] = m[j], m[i] }$/;"	f
Swap	./net/rpc/debug.go	/^func (s serviceArray) Swap(i, j int)      { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./regexp/onepass.go	/^func (p runeSlice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }$/;"	f
Swap	./regexp/syntax/parse.go	/^func (ra ranges) Swap(i, j int) {$/;"	f
Swap	./runtime/debug/garbage.go	/^func (x byDuration) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./runtime/pprof/pprof.go	/^func (x byCycles) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./runtime/pprof/pprof.go	/^func (x byInUseBytes) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./runtime/pprof/pprof.go	/^func (x byName) Swap(i, j int)      { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./runtime/pprof/pprof.go	/^func (x stackProfile) Swap(i, j int)         { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./sort/example_interface_test.go	/^func (a ByAge) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }$/;"	f
Swap	./sort/example_keys_test.go	/^func (s *planetSorter) Swap(i, j int) {$/;"	f
Swap	./sort/example_multi_test.go	/^func (ms *multiSorter) Swap(i, j int) {$/;"	f
Swap	./sort/example_wrapper_test.go	/^func (s Organs) Swap(i, j int) { s[i], s[j] = s[j], s[i] }$/;"	f
Swap	./sort/sort.go	/^func (p Float64Slice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }$/;"	f
Swap	./sort/sort.go	/^func (p IntSlice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }$/;"	f
Swap	./sort/sort.go	/^func (p StringSlice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }$/;"	f
Swap	./sort/sort_test.go	/^func (d *adversaryTestingData) Swap(i, j int) {$/;"	f
Swap	./sort/sort_test.go	/^func (d *testingData) Swap(i, j int) {$/;"	f
Swap	./sort/sort_test.go	/^func (d intPairs) Swap(i, j int)      { d[i], d[j] = d[j], d[i] }$/;"	f
Swap	./text/template/exec.go	/^func (x rvs) Swap(i, j int) { x[i], x[j] = x[j], x[i] }$/;"	f
Swap	./time/genzabbrs.go	/^func (zs zones) Swap(i, j int)      { zs[i], zs[j] = zs[j], zs[i] }$/;"	f
Swap	./unicode/maketables.go	/^func (p runeSlice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }$/;"	f
SwapInt32	./sync/atomic/doc.go	/^func SwapInt32(addr *int32, new int32) (old int32)$/;"	f
SwapInt64	./sync/atomic/doc.go	/^func SwapInt64(addr *int64, new int64) (old int64)$/;"	f
SwapPointer	./sync/atomic/doc.go	/^func SwapPointer(addr *unsafe.Pointer, new unsafe.Pointer) (old unsafe.Pointer)$/;"	f
SwapUint32	./sync/atomic/doc.go	/^func SwapUint32(addr *uint32, new uint32) (old uint32)$/;"	f
SwapUint64	./sync/atomic/doc.go	/^func SwapUint64(addr *uint64, new uint64) (old uint64)$/;"	f
SwapUintptr	./sync/atomic/doc.go	/^func SwapUintptr(addr *uintptr, new uintptr) (old uintptr)$/;"	f
Switch	./net/internal/socktest/switch.go	/^type Switch struct {$/;"	t
Sym	./cmd/compile/internal/gc/go.go	/^type Sym struct {$/;"	t
Sym	./cmd/internal/goobj/read.go	/^type Sym struct {$/;"	t
Sym	./cmd/internal/objfile/objfile.go	/^type Sym struct {$/;"	t
Sym	./cmd/pprof/internal/plugin/plugin.go	/^type Sym struct {$/;"	t
Sym	./debug/gosym/symtab.go	/^type Sym struct {$/;"	t
Sym	./debug/plan9obj/file.go	/^type Sym struct {$/;"	t
Sym32	./debug/elf/elf.go	/^type Sym32 struct {$/;"	t
Sym64	./debug/elf/elf.go	/^type Sym64 struct {$/;"	t
SymBind	./debug/elf/elf.go	/^type SymBind int$/;"	t
SymByAddr	./debug/gosym/symtab.go	/^func (t *Table) SymByAddr(addr uint64) *Sym {$/;"	f
SymID	./cmd/internal/goobj/read.go	/^type SymID struct {$/;"	t
SymKind	./cmd/internal/goobj/read.go	/^type SymKind int$/;"	t
SymType	./debug/elf/elf.go	/^type SymType int$/;"	t
SymVer	./cmd/internal/obj/link.go	/^type SymVer struct {$/;"	t
SymVis	./debug/elf/elf.go	/^type SymVis int$/;"	t
Symaddr	./cmd/link/internal/ld/lib.go	/^func Symaddr(s *LSym) int64 {$/;"	f
Symb	./cmd/yacc/yacc.go	/^type Symb struct {$/;"	t
Symbol	./debug/elf/file.go	/^type Symbol struct {$/;"	t
Symbol	./debug/macho/macho.go	/^type Symbol struct {$/;"	t
Symbol	./debug/pe/file.go	/^type Symbol struct {$/;"	t
Symbol	./net/http/pprof/pprof.go	/^func Symbol(w http.ResponseWriter, r *http.Request) {$/;"	f
Symbolize	./cmd/pprof/internal/symbolizer/symbolizer.go	/^func Symbolize(mode string, prof *profile.Profile, obj plugin.ObjTool, ui plugin.UI) error {$/;"	f
Symbolize	./cmd/pprof/internal/symbolz/symbolz.go	/^func Symbolize(source string, syms func(string, string) ([]byte, error), p *profile.Profile) error {$/;"	f
Symbolize	./internal/trace/parser.go	/^func Symbolize(events []*Event, bin string) error {$/;"	f
Symbolizer	./cmd/pprof/internal/plugin/plugin.go	/^type Symbolizer func(mode, src string, prof *profile.Profile, obj ObjTool, ui UI) error$/;"	t
Symbols	./cmd/internal/objfile/objfile.go	/^func (f *File) Symbols() ([]Sym, error) {$/;"	f
Symbols	./cmd/pprof/pprof.go	/^func (f *file) Symbols(r *regexp.Regexp, addr uint64) ([]*plugin.Sym, error) {$/;"	f
Symbols	./debug/elf/file.go	/^func (f *File) Symbols() ([]Symbol, error) {$/;"	f
Symbols	./debug/plan9obj/file.go	/^func (f *File) Symbols() ([]Sym, error) {$/;"	f
Symgrow	./cmd/internal/obj/data.go	/^func Symgrow(ctxt *Link, s *LSym, lsiz int64) {$/;"	f
Symgrow	./cmd/link/internal/ld/data.go	/^func Symgrow(ctxt *Link, s *LSym, siz int64) {$/;"	f
Symlink	./cmd/compile/internal/gc/subr.go	/^type Symlink struct {$/;"	t
Symlink	./os/file_plan9.go	/^func Symlink(oldname, newname string) error {$/;"	f
Symlink	./os/file_unix.go	/^func Symlink(oldname, newname string) error {$/;"	f
Symlink	./os/file_windows.go	/^func Symlink(oldname, newname string) error {$/;"	f
Symlink	./syscall/fs_nacl.go	/^func Symlink(path, link string) error {$/;"	f
Symlink	./syscall/syscall_linux.go	/^func Symlink(oldpath string, newpath string) (err error) {$/;"	f
Symlink	./syscall/syscall_windows.go	/^func Symlink(path, link string) (err error)    { return EWINDOWS }$/;"	f
Symlink	./syscall/zsyscall_darwin_386.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_darwin_amd64.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_darwin_arm.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_darwin_arm64.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_dragonfly_amd64.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_freebsd_386.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_freebsd_amd64.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_freebsd_arm.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_netbsd_386.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_netbsd_amd64.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_netbsd_arm.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_openbsd_386.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_openbsd_amd64.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_openbsd_arm.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symlink	./syscall/zsyscall_solaris_amd64.go	/^func Symlink(path string, link string) (err error) {$/;"	f
Symtab	./debug/macho/file.go	/^type Symtab struct {$/;"	t
SymtabCmd	./debug/macho/macho.go	/^type SymtabCmd struct {$/;"	t
Sync	./os/file_plan9.go	/^func (f *File) Sync() error {$/;"	f
Sync	./os/file_posix.go	/^func (f *File) Sync() error {$/;"	f
Sync	./syscall/zsyscall_darwin_386.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_darwin_amd64.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_darwin_arm.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_darwin_arm64.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_dragonfly_amd64.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_freebsd_386.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_freebsd_amd64.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_freebsd_arm.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_linux_386.go	/^func Sync() {$/;"	f
Sync	./syscall/zsyscall_linux_amd64.go	/^func Sync() {$/;"	f
Sync	./syscall/zsyscall_linux_arm.go	/^func Sync() {$/;"	f
Sync	./syscall/zsyscall_linux_arm64.go	/^func Sync() {$/;"	f
Sync	./syscall/zsyscall_linux_ppc64.go	/^func Sync() {$/;"	f
Sync	./syscall/zsyscall_linux_ppc64le.go	/^func Sync() {$/;"	f
Sync	./syscall/zsyscall_netbsd_386.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_netbsd_amd64.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_netbsd_arm.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_openbsd_386.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_openbsd_amd64.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_openbsd_arm.go	/^func Sync() (err error) {$/;"	f
Sync	./syscall/zsyscall_solaris_amd64.go	/^func Sync() (err error) {$/;"	f
SyncFileRange	./syscall/zsyscall_linux_386.go	/^func SyncFileRange(fd int, off int64, n int64, flags int) (err error) {$/;"	f
SyncFileRange	./syscall/zsyscall_linux_amd64.go	/^func SyncFileRange(fd int, off int64, n int64, flags int) (err error) {$/;"	f
SyncFileRange	./syscall/zsyscall_linux_arm64.go	/^func SyncFileRange(fd int, off int64, n int64, flags int) (err error) {$/;"	f
SyncFileRange	./syscall/zsyscall_linux_ppc64.go	/^func SyncFileRange(fd int, off int64, n int64, flags int) (err error) {$/;"	f
SyncFileRange	./syscall/zsyscall_linux_ppc64le.go	/^func SyncFileRange(fd int, off int64, n int64, flags int) (err error) {$/;"	f
Synopsis	./go/doc/synopsis.go	/^func Synopsis(s string) string {$/;"	f
SyntaxError	./encoding/asn1/asn1.go	/^type SyntaxError struct {$/;"	t
SyntaxError	./encoding/json/scanner.go	/^type SyntaxError struct {$/;"	t
SyntaxError	./encoding/xml/xml.go	/^type SyntaxError struct {$/;"	t
Sys	./archive/tar/common.go	/^func (fi headerFileInfo) Sys() interface{}   { return fi.h }$/;"	f
Sys	./archive/tar/tar_test.go	/^func (symlink) Sys() interface{}   { return nil }$/;"	f
Sys	./archive/zip/struct.go	/^func (fi headerFileInfo) Sys() interface{}   { return fi.fh }$/;"	f
Sys	./cmd/pack/pack_test.go	/^func (f *FakeFile) Sys() interface{} {$/;"	f
Sys	./net/http/fs_test.go	/^func (f *fakeFileInfo) Sys() interface{}   { return nil }$/;"	f
Sys	./os/doc.go	/^func (p *ProcessState) Sys() interface{} {$/;"	f
Sys	./os/types_notwin.go	/^func (fs *fileStat) Sys() interface{}   { return fs.sys }$/;"	f
Sys	./os/types_windows.go	/^func (fs *fileStat) Sys() interface{} { return &fs.sys }$/;"	f
SysProcAttr	./syscall/exec_bsd.go	/^type SysProcAttr struct {$/;"	t
SysProcAttr	./syscall/exec_linux.go	/^type SysProcAttr struct {$/;"	t
SysProcAttr	./syscall/exec_plan9.go	/^type SysProcAttr struct {$/;"	t
SysProcAttr	./syscall/exec_solaris.go	/^type SysProcAttr struct {$/;"	t
SysProcAttr	./syscall/exec_windows.go	/^type SysProcAttr struct {$/;"	t
SysProcAttr	./syscall/syscall_nacl.go	/^type SysProcAttr struct {$/;"	t
SysProcIDMap	./syscall/exec_linux.go	/^type SysProcIDMap struct {$/;"	t
SysUsage	./os/doc.go	/^func (p *ProcessState) SysUsage() interface{} {$/;"	f
Syscall	./syscall/dll_windows.go	/^func Syscall(trap, nargs, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall	./syscall/mksyscall_windows.go	/^func (f *Fn) Syscall() string {$/;"	f
Syscall	./syscall/syscall_nacl.go	/^func Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall	./syscall/syscall_plan9.go	/^func Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err ErrorString)$/;"	f
Syscall	./syscall/syscall_unix.go	/^func Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall12	./syscall/dll_windows.go	/^func Syscall12(trap, nargs, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall15	./syscall/dll_windows.go	/^func Syscall15(trap, nargs, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall6	./syscall/dll_windows.go	/^func Syscall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall6	./syscall/syscall_nacl.go	/^func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno) { return 0, 0, ENOSYS }$/;"	f
Syscall6	./syscall/syscall_plan9.go	/^func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err ErrorString)$/;"	f
Syscall6	./syscall/syscall_unix.go	/^func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall9	./syscall/dll_windows.go	/^func Syscall9(trap, nargs, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall9	./syscall/syscall_darwin_386.go	/^func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno) \/\/ sic$/;"	f
Syscall9	./syscall/syscall_darwin_amd64.go	/^func Syscall9(trap, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall9	./syscall/syscall_darwin_arm.go	/^func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno) \/\/ sic$/;"	f
Syscall9	./syscall/syscall_darwin_arm64.go	/^func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno) \/\/ sic$/;"	f
Syscall9	./syscall/syscall_dragonfly_amd64.go	/^func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall9	./syscall/syscall_freebsd_386.go	/^func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno) \/\/ sic$/;"	f
Syscall9	./syscall/syscall_freebsd_amd64.go	/^func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall9	./syscall/syscall_freebsd_arm.go	/^func Syscall9(num, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno) \/\/ sic$/;"	f
Syscall9	./syscall/syscall_netbsd.go	/^func Syscall9(trap, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
Syscall9	./syscall/syscall_openbsd.go	/^func Syscall9(trap, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
SyscallArgList	./syscall/mksyscall_windows.go	/^func (p *Param) SyscallArgList() []string {$/;"	f
SyscallError	./os/error.go	/^type SyscallError struct {$/;"	t
SyscallParamCount	./syscall/mksyscall_windows.go	/^func (f *Fn) SyscallParamCount() int {$/;"	f
SyscallParamList	./syscall/mksyscall_windows.go	/^func (f *Fn) SyscallParamList() string {$/;"	f
Sysctl	./syscall/syscall_bsd.go	/^func Sysctl(name string) (value string, err error) {$/;"	f
Sysctl	./syscall/syscall_nacl.go	/^func Sysctl(key string) (string, error) {$/;"	f
SysctlUint32	./syscall/syscall_bsd.go	/^func SysctlUint32(name string) (value uint32, err error) {$/;"	f
SysctlUint32	./syscall/syscall_nacl.go	/^func SysctlUint32(name string) (value uint32, err error)          { return 0, ENOSYS }$/;"	f
Sysctlnode	./syscall/types_netbsd.go	/^type Sysctlnode C.struct_sysctlnode$/;"	t
Sysctlnode	./syscall/ztypes_netbsd_386.go	/^type Sysctlnode struct {$/;"	t
Sysctlnode	./syscall/ztypes_netbsd_amd64.go	/^type Sysctlnode struct {$/;"	t
Sysctlnode	./syscall/ztypes_netbsd_arm.go	/^type Sysctlnode struct {$/;"	t
Sysfunc	./cmd/compile/internal/gc/gen.go	/^func Sysfunc(name string) *Node {$/;"	f
Sysinfo	./syscall/zsyscall_linux_386.go	/^func Sysinfo(info *Sysinfo_t) (err error) {$/;"	f
Sysinfo	./syscall/zsyscall_linux_amd64.go	/^func Sysinfo(info *Sysinfo_t) (err error) {$/;"	f
Sysinfo	./syscall/zsyscall_linux_arm.go	/^func Sysinfo(info *Sysinfo_t) (err error) {$/;"	f
Sysinfo	./syscall/zsyscall_linux_arm64.go	/^func Sysinfo(info *Sysinfo_t) (err error) {$/;"	f
Sysinfo	./syscall/zsyscall_linux_ppc64.go	/^func Sysinfo(info *Sysinfo_t) (err error) {$/;"	f
Sysinfo	./syscall/zsyscall_linux_ppc64le.go	/^func Sysinfo(info *Sysinfo_t) (err error) {$/;"	f
Sysinfo_t	./syscall/types_linux.go	/^type Sysinfo_t C.struct_sysinfo$/;"	t
Sysinfo_t	./syscall/ztypes_linux_386.go	/^type Sysinfo_t struct {$/;"	t
Sysinfo_t	./syscall/ztypes_linux_amd64.go	/^type Sysinfo_t struct {$/;"	t
Sysinfo_t	./syscall/ztypes_linux_arm.go	/^type Sysinfo_t struct {$/;"	t
Sysinfo_t	./syscall/ztypes_linux_arm64.go	/^type Sysinfo_t struct {$/;"	t
Sysinfo_t	./syscall/ztypes_linux_ppc64.go	/^type Sysinfo_t struct {$/;"	t
Sysinfo_t	./syscall/ztypes_linux_ppc64le.go	/^type Sysinfo_t struct {$/;"	t
SystemInfo	./runtime/defs_windows.go	/^type SystemInfo C.SYSTEM_INFO$/;"	t
SystemRootsError	./crypto/x509/verify.go	/^\/\/ will be of type SystemRootsError.$/;"	t
SystemRootsError	./crypto/x509/verify.go	/^type SystemRootsError struct{}$/;"	t
SystemTime	./os/doc.go	/^func (p *ProcessState) SystemTime() time.Duration {$/;"	f
Systemtime	./syscall/ztypes_windows.go	/^type Systemtime struct {$/;"	t
T	./regexp/testdata/testregex.c	/^#define T(/;"	d	file:
T0	./encoding/gob/codec_test.go	/^type T0 struct {$/;"	t
T0	./go/doc/testdata/d2.go	/^type T0 struct{}$/;"	t
T0	./go/doc/testdata/error1.go	/^type T0 struct {$/;"	t
T0	./go/doc/testdata/error2.go	/^type T0 struct {$/;"	t
T0	./math/exp_amd64.s	/^#define T0 1.0$/;"	d
T0	./math/sincos_amd64.s	/^#define T0 1.0$/;"	d
T1	./encoding/gob/codec_test.go	/^	type T1 struct {$/;"	t
T1	./encoding/gob/codec_test.go	/^type T1 struct {$/;"	t
T1	./encoding/gob/type.go	/^			\/\/     type T1 struct { ... }$/;"	t
T1	./go/doc/testdata/c.go	/^type T1 struct{}$/;"	t
T1	./go/doc/testdata/d2.go	/^type T1 struct{}$/;"	t
T1	./go/doc/testdata/e.go	/^type T1 struct {$/;"	t
T1	./go/types/eval_test.go	/^		type T1 \/* T1 => , p.T1 *\/ struct {}$/;"	t
T1	./math/exp_amd64.s	/^#define T1 0.5$/;"	d
T1	./math/sincos_amd64.s	/^#define T1 -8.33333333333333333333333e-02 \/\/ (-1.0\/12)$/;"	d
T1	./reflect/all_test.go	/^	type T1 int$/;"	t
T1	./reflect/all_test.go	/^	type T1 struct {$/;"	t
T1	./reflect/all_test.go	/^type T1 struct {$/;"	t
T1	./runtime/runtime_test.go	/^	type T1 struct {$/;"	t
T1inner	./reflect/all_test.go	/^	type T1inner struct {$/;"	t
T2	./encoding/gob/codec_test.go	/^	type T2 struct {$/;"	t
T2	./encoding/gob/codec_test.go	/^type T2 struct {$/;"	t
T2	./encoding/gob/type_test.go	/^	type T2 struct{ A int }$/;"	t
T2	./encoding/json/decode_test.go	/^	type T2 struct {$/;"	t
T2	./go/doc/testdata/c.go	/^type T2 struct {$/;"	t
T2	./go/doc/testdata/d1.go	/^type T2 struct{}$/;"	t
T2	./go/doc/testdata/e.go	/^type T2 struct {$/;"	t
T2	./math/exp_amd64.s	/^#define T2 1.6666666666666666667e-1$/;"	d
T2	./math/sincos_amd64.s	/^#define T2 2.77777777777777777777778e-03 \/\/ (+1.0\/360)$/;"	d
T2	./reflect/all_test.go	/^	type T2 struct {$/;"	t
T2	./runtime/runtime_test.go	/^	type T2 struct {$/;"	t
T2inner	./reflect/all_test.go	/^	type T2inner struct {$/;"	t
T3	./go/doc/testdata/e.go	/^type T3 struct {$/;"	t
T3	./math/exp_amd64.s	/^#define T3 4.1666666666666666667e-2$/;"	d
T3	./math/sincos_amd64.s	/^#define T3 -4.96031746031746031746032e-05 \/\/ (-1.0\/20160)$/;"	d
T3	./runtime/runtime_test.go	/^	type T3 struct {$/;"	t
T4	./go/doc/testdata/e.go	/^type T4 struct {$/;"	t
T4	./go/doc/testdata/e.go	/^type T4 struct{}$/;"	t
T4	./math/exp_amd64.s	/^#define T4 8.3333333333333333333e-3$/;"	d
T4	./math/sincos_amd64.s	/^#define T4 5.51146384479717813051146e-07 \/\/ (+1.0\/1814400)$/;"	d
T4	./runtime/runtime_test.go	/^	type T4 struct {$/;"	t
T5	./go/doc/testdata/e.go	/^type T5 struct {$/;"	t
T5	./math/exp_amd64.s	/^#define T5 1.3888888888888888889e-3$/;"	d
T5	./runtime/runtime_test.go	/^	type T5 struct {$/;"	t
T6	./math/exp_amd64.s	/^#define T6 1.9841269841269841270e-4$/;"	d
T7	./math/exp_amd64.s	/^#define T7 2.4801587301587301587e-5$/;"	d
TABS	./regexp/testdata/testregex.c	/^#define TABS(/;"	d	file:
TAttr	./encoding/xml/read_test.go	/^type TAttr struct {$/;"	t
TB	./fmt/stringer_test.go	/^type TB bool$/;"	t
TB	./testing/testing.go	/^type TB interface {$/;"	t
TBRL	./runtime/asm_ppc64x.s	/^#define	TBRL	268$/;"	d
TBRU	./runtime/asm_ppc64x.s	/^#define	TBRU	269		\/* Time base Upper\/Lower *\/$/;"	d
TBSCertificate	./encoding/asn1/asn1_test.go	/^type TBSCertificate struct {$/;"	t
TBSCertificateList	./crypto/x509/pkix/pkix.go	/^type TBSCertificateList struct {$/;"	t
TCB_SIZE	./runtime/cgo/gcc_openbsd_386.c	/^#define TCB_SIZE /;"	d	file:
TCB_SIZE	./runtime/cgo/gcc_openbsd_amd64.c	/^#define TCB_SIZE /;"	d	file:
TCPAddr	./net/tcpsock.go	/^type TCPAddr struct {$/;"	t
TCPConn	./net/tcpsock_plan9.go	/^type TCPConn struct {$/;"	t
TCPConn	./net/tcpsock_posix.go	/^type TCPConn struct {$/;"	t
TCPInfo	./syscall/types_linux.go	/^type TCPInfo C.struct_tcp_info$/;"	t
TCPInfo	./syscall/ztypes_linux_386.go	/^type TCPInfo struct {$/;"	t
TCPInfo	./syscall/ztypes_linux_amd64.go	/^type TCPInfo struct {$/;"	t
TCPInfo	./syscall/ztypes_linux_arm.go	/^type TCPInfo struct {$/;"	t
TCPInfo	./syscall/ztypes_linux_arm64.go	/^type TCPInfo struct {$/;"	t
TCPInfo	./syscall/ztypes_linux_ppc64.go	/^type TCPInfo struct {$/;"	t
TCPInfo	./syscall/ztypes_linux_ppc64le.go	/^type TCPInfo struct {$/;"	t
TCPKeepalive	./syscall/ztypes_windows.go	/^type TCPKeepalive struct {$/;"	t
TCPListener	./net/tcpsock_plan9.go	/^type TCPListener struct {$/;"	t
TCPListener	./net/tcpsock_posix.go	/^type TCPListener struct {$/;"	t
TE	./runtime/memmove_arm.s	/^#define TE	R8$/;"	d
TEST_ACTUAL	./regexp/testdata/testregex.c	/^#define TEST_ACTUAL	/;"	d	file:
TEST_AND	./regexp/testdata/testregex.c	/^#define TEST_AND	/;"	d	file:
TEST_ARE	./regexp/testdata/testregex.c	/^#define TEST_ARE	/;"	d	file:
TEST_BASELINE	./regexp/testdata/testregex.c	/^#define TEST_BASELINE	/;"	d	file:
TEST_BRE	./regexp/testdata/testregex.c	/^#define TEST_BRE	/;"	d	file:
TEST_CATCH	./regexp/testdata/testregex.c	/^#define TEST_CATCH	/;"	d	file:
TEST_DECOMP	./regexp/testdata/testregex.c	/^#define TEST_DECOMP	/;"	d	file:
TEST_DELIMIT	./regexp/testdata/testregex.c	/^#define TEST_DELIMIT	/;"	d	file:
TEST_ERE	./regexp/testdata/testregex.c	/^#define TEST_ERE	/;"	d	file:
TEST_EXPAND	./regexp/testdata/testregex.c	/^#define TEST_EXPAND	/;"	d	file:
TEST_FAIL	./regexp/testdata/testregex.c	/^#define TEST_FAIL	/;"	d	file:
TEST_GLOBAL	./regexp/testdata/testregex.c	/^#define TEST_GLOBAL	/;"	d	file:
TEST_IGNORE_ERROR	./regexp/testdata/testregex.c	/^#define TEST_IGNORE_ERROR	/;"	d	file:
TEST_IGNORE_OVER	./regexp/testdata/testregex.c	/^#define TEST_IGNORE_OVER	/;"	d	file:
TEST_IGNORE_POSITION	./regexp/testdata/testregex.c	/^#define TEST_IGNORE_POSITION	/;"	d	file:
TEST_KRE	./regexp/testdata/testregex.c	/^#define TEST_KRE	/;"	d	file:
TEST_LENIENT	./regexp/testdata/testregex.c	/^#define TEST_LENIENT	/;"	d	file:
TEST_LRE	./regexp/testdata/testregex.c	/^#define TEST_LRE	/;"	d	file:
TEST_OK	./regexp/testdata/testregex.c	/^#define TEST_OK	/;"	d	file:
TEST_OR	./regexp/testdata/testregex.c	/^#define TEST_OR	/;"	d	file:
TEST_PASS	./regexp/testdata/testregex.c	/^#define TEST_PASS	/;"	d	file:
TEST_QUERY	./regexp/testdata/testregex.c	/^#define TEST_QUERY	/;"	d	file:
TEST_SAME	./regexp/testdata/testregex.c	/^#define TEST_SAME	/;"	d	file:
TEST_SRE	./regexp/testdata/testregex.c	/^#define TEST_SRE	/;"	d	file:
TEST_SUB	./regexp/testdata/testregex.c	/^#define TEST_SUB	/;"	d	file:
TEST_SUMMARY	./regexp/testdata/testregex.c	/^#define TEST_SUMMARY	/;"	d	file:
TEST_UNSPECIFIED	./regexp/testdata/testregex.c	/^#define TEST_UNSPECIFIED	/;"	d	file:
TEST_VERBOSE	./regexp/testdata/testregex.c	/^#define TEST_VERBOSE	/;"	d	file:
TEST_VERIFY	./regexp/testdata/testregex.c	/^#define TEST_VERIFY	/;"	d	file:
TEXT	./cmd/asm/internal/asm/testdata/386.s	/^TEXT foo(SB), 0, $0$/;"	l
TEXT	./cmd/asm/internal/asm/testdata/amd64.s	/^TEXT	foo(SB), 0, $0$/;"	l
TEXT	./cmd/asm/internal/asm/testdata/arm.s	/^TEXT	foo(SB), 0, $0$/;"	l
TEXT	./cmd/asm/internal/asm/testdata/arm64.s	/^TEXT	foo(SB), 7, $-8$/;"	l
TEXT	./cmd/asm/internal/asm/testdata/ppc64.s	/^TEXT foo(SB),0,$0$/;"	l
TEXT	./cmd/dist/cpuid_386.s	/^TEXT ·cpuid(SB),$0-8$/;"	l
TEXT	./cmd/dist/cpuid_amd64.s	/^TEXT ·cpuid(SB),$0-12$/;"	l
TEXT	./cmd/dist/cpuid_default.s	/^TEXT ·cpuid(SB),NOSPLIT,$0-0$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·arg1(SB),0,$0-2$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·arg2(SB),0,$0-4$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·arg4(SB),0,$0-2 \/\/ ERROR "arg4: wrong argument size 2; expected \\$\\.\\.\\.-8"$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·arg8(SB),7,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-16"$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·argiface(SB),0,$0-32$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·argint(SB),0,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-16"$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·argptr(SB),7,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-40"$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·argslice(SB),0,$48 \/\/ ERROR "wrong argument size 0; expected \\$\\.\\.\\.-48"$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·argstring(SB),0,$32 \/\/ ERROR "wrong argument size 0; expected \\$\\.\\.\\.-32"$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·returnbyte(SB),0,$0-9$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·returnint(SB),0,$0-8$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·returnintmissing(SB),0,$0-8$/;"	l
TEXT	./cmd/vet/testdata/asm1.s	/^TEXT ·returnnamed(SB),0,$0-41$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·arg1(SB),0,$0-2$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·arg2(SB),0,$0-4$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·arg4(SB),0,$0-2 \/\/ ERROR "arg4: wrong argument size 2; expected \\$\\.\\.\\.-8"$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·arg8(SB),7,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-16"$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·argiface(SB),0,$0-16$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·argint(SB),0,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-8"$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·argptr(SB),7,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-20"$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·argslice(SB),0,$24 \/\/ ERROR "wrong argument size 0; expected \\$\\.\\.\\.-24"$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·argstring(SB),0,$16 \/\/ ERROR "wrong argument size 0; expected \\$\\.\\.\\.-16"$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·returnbyte(SB),0,$0-5$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·returnint(SB),0,$0-4$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·returnintmissing(SB),0,$0-4$/;"	l
TEXT	./cmd/vet/testdata/asm2.s	/^TEXT ·returnnamed(SB),0,$0-21$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·arg1(SB),0,$0-2$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·arg2(SB),0,$0-4$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·arg4(SB),0,$0-2 \/\/ ERROR "arg4: wrong argument size 2; expected \\$\\.\\.\\.-8"$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·arg8(SB),7,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-16"$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·argiface(SB),0,$0-16$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·argint(SB),0,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-8"$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·argptr(SB),7,$0-2 \/\/ ERROR "wrong argument size 2; expected \\$\\.\\.\\.-20"$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·argslice(SB),0,$24 \/\/ ERROR "wrong argument size 0; expected \\$\\.\\.\\.-24"$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·argstring(SB),0,$16 \/\/ ERROR "wrong argument size 0; expected \\$\\.\\.\\.-16"$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·leaf(SB),0,$-4-12$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·returnbyte(SB),0,$0-5$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·returnint(SB),0,$0-4$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·returnintmissing(SB),0,$0-4$/;"	l
TEXT	./cmd/vet/testdata/asm3.s	/^TEXT ·returnnamed(SB),0,$0-21$/;"	l
TEXT	./cmd/vet/testdata/asm4.s	/^TEXT ·dupok(SB),DUPOK,$0-8$/;"	l
TEXT	./cmd/vet/testdata/asm4.s	/^TEXT ·noprof(SB),NOPROF,$0-8$/;"	l
TEXT	./cmd/vet/testdata/asm4.s	/^TEXT ·noptr(SB),NOPTR|NOSPLIT,$0$/;"	l
TEXT	./cmd/vet/testdata/asm4.s	/^TEXT ·nosplit(SB),NOSPLIT,$0$/;"	l
TEXT	./cmd/vet/testdata/asm4.s	/^TEXT ·rodata(SB),RODATA,$0-8$/;"	l
TEXT	./cmd/vet/testdata/asm4.s	/^TEXT ·wrapper(SB),WRAPPER,$0-8$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT _expand_key_128<>(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT _expand_key_192a<>(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT _expand_key_192b<>(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT _expand_key_256a<>(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT _expand_key_256b<>(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT ·decryptBlockAsm(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT ·encryptBlockAsm(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT ·expandKeyAsm(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/aes/asm_amd64.s	/^TEXT ·hasAsm(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/md5/md5block_386.s	/^TEXT	·block(SB),NOSPLIT,$24-16$/;"	l
TEXT	./crypto/md5/md5block_amd64.s	/^TEXT	·block(SB),NOSPLIT,$0-32$/;"	l
TEXT	./crypto/md5/md5block_amd64p32.s	/^TEXT	·block(SB),NOSPLIT,$0-32$/;"	l
TEXT	./crypto/md5/md5block_arm.s	/^TEXT	·block(SB), NOSPLIT, $84-16$/;"	l
TEXT	./crypto/rc4/rc4_386.s	/^TEXT ·xorKeyStream(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/rc4/rc4_amd64.s	/^TEXT ·xorKeyStream(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/rc4/rc4_amd64p32.s	/^TEXT ·xorKeyStream(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/rc4/rc4_arm.s	/^TEXT ·xorKeyStream(SB),NOSPLIT,$0$/;"	l
TEXT	./crypto/sha1/sha1block_386.s	/^TEXT ·block(SB),NOSPLIT,$92-16$/;"	l
TEXT	./crypto/sha1/sha1block_amd64.s	/^TEXT ·block(SB),NOSPLIT,$64-32$/;"	l
TEXT	./crypto/sha1/sha1block_amd64p32.s	/^TEXT ·block(SB),NOSPLIT,$64-32$/;"	l
TEXT	./crypto/sha1/sha1block_arm.s	/^TEXT	·block(SB), 0, $352-16$/;"	l
TEXT	./crypto/sha256/sha256block_386.s	/^TEXT ·block(SB),0,$296-12$/;"	l
TEXT	./crypto/sha256/sha256block_amd64.s	/^TEXT ·block(SB),0,$264-32$/;"	l
TEXT	./crypto/sha512/sha512block_amd64.s	/^TEXT ·block(SB),0,$648-32$/;"	l
TEXT	./debug/gosym/pclinetest.asm	/^TEXT linefrompc(SB),4,$0	\/\/ Each byte stores its line delta$/;"	l
TEXT	./debug/gosym/pclinetest.asm	/^TEXT main·init(SB),4,$0$/;"	l
TEXT	./debug/gosym/pclinetest.asm	/^TEXT main·main(SB),4,$0$/;"	l
TEXT	./debug/gosym/pclinetest.asm	/^TEXT pcfromline(SB),4,$0	\/\/ Each record stores its line delta, then n, then n more bytes$/;"	l
TEXT	./hash/crc32/crc32_amd64.s	/^TEXT ·castagnoliSSE42(SB),NOSPLIT,$0$/;"	l
TEXT	./hash/crc32/crc32_amd64.s	/^TEXT ·haveSSE42(SB),NOSPLIT,$0$/;"	l
TEXT	./hash/crc32/crc32_amd64p32.s	/^TEXT ·castagnoliSSE42(SB),NOSPLIT,$0$/;"	l
TEXT	./hash/crc32/crc32_amd64p32.s	/^TEXT ·haveSSE42(SB),NOSPLIT,$0$/;"	l
TEXT	./math/abs_386.s	/^TEXT ·Abs(SB),NOSPLIT,$0$/;"	l
TEXT	./math/abs_amd64.s	/^TEXT ·Abs(SB),NOSPLIT,$0$/;"	l
TEXT	./math/abs_arm.s	/^TEXT ·Abs(SB),NOSPLIT,$0$/;"	l
TEXT	./math/abs_arm64.s	/^TEXT ·Abs(SB),NOSPLIT,$0-16$/;"	l
TEXT	./math/abs_ppc64x.s	/^TEXT ·Abs(SB),NOSPLIT,$0-16$/;"	l
TEXT	./math/asin_386.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/asin_386.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/asin_amd64.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/asin_amd64.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/asin_arm.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/asin_arm.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/atan2_386.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/atan2_amd64.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/atan2_arm.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/atan_386.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/atan_amd64.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/atan_arm.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_386.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_amd64p32.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_arm64.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	./math/big/arith_ppc64x.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_386.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_386.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_386.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_amd64.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_amd64.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_amd64.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_arm.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_arm.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	./math/dim_arm.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
TEXT	./math/exp2_386.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/exp2_amd64.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/exp2_arm.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/exp_386.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/exp_amd64.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/exp_arm.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/expm1_386.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
TEXT	./math/expm1_amd64.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
TEXT	./math/expm1_arm.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_386.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_386.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_386.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_amd64.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_amd64.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_amd64.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_arm.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_arm.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	./math/floor_arm.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
TEXT	./math/frexp_386.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/frexp_amd64.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/frexp_arm.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/hypot_386.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
TEXT	./math/hypot_amd64.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
TEXT	./math/hypot_arm.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
TEXT	./math/ldexp_386.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/ldexp_amd64.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/ldexp_arm.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log10_386.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log10_386.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log10_amd64.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log10_amd64.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log10_arm.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log10_arm.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log1p_386.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log1p_amd64.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log1p_arm.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log_386.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log_amd64.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
TEXT	./math/log_arm.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
TEXT	./math/mod_386.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	./math/mod_amd64.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	./math/mod_arm.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	./math/modf_386.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	./math/modf_amd64.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	./math/modf_arm.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	./math/remainder_386.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	./math/remainder_amd64.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	./math/remainder_arm.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sin_386.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sin_386.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sin_amd64.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sin_amd64.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sin_arm.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sin_arm.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sincos_386.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sincos_amd64.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sincos_arm.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sqrt_386.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sqrt_amd64.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sqrt_arm.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	./math/sqrt_arm64.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_arm64.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/stubs_ppc64x.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
TEXT	./math/tan_386.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/tan_amd64.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
TEXT	./math/tan_arm.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
TEXT	./os/signal/sig.s	/^TEXT ·signal_disable(SB),NOSPLIT,$0$/;"	l
TEXT	./os/signal/sig.s	/^TEXT ·signal_enable(SB),NOSPLIT,$0$/;"	l
TEXT	./os/signal/sig.s	/^TEXT ·signal_ignore(SB),NOSPLIT,$0$/;"	l
TEXT	./os/signal/sig.s	/^TEXT ·signal_recv(SB),NOSPLIT,$0$/;"	l
TEXT	./reflect/asm_386.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	./reflect/asm_386.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	./reflect/asm_amd64.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$16$/;"	l
TEXT	./reflect/asm_amd64.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$16$/;"	l
TEXT	./reflect/asm_amd64p32.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	./reflect/asm_amd64p32.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	./reflect/asm_arm.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	./reflect/asm_arm.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	./reflect/asm_arm64.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$24$/;"	l
TEXT	./reflect/asm_arm64.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$24$/;"	l
TEXT	./reflect/asm_ppc64x.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$16$/;"	l
TEXT	./reflect/asm_ppc64x.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$16$/;"	l
TEXT	./runtime/asm.s	/^TEXT runtime·nop(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT NAME(SB), WRAPPER, $MAXSIZE-20;		\\$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT _cgo_topofstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT bytes·Compare(SB),NOSPLIT,$0-28$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-25$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT gosave<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT reflect·call(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·abort(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·aeshashbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·asminit(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicand8(SB), NOSPLIT, $0-5$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicload64(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicloaduint(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicloaduintptr(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicor8(SB), NOSPLIT, $0-5$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicstore(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicstore64(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicstorep1(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·atomicstoreuintptr(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·cas(SB), NOSPLIT, $0-13$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·cas64(SB), NOSPLIT, $0-21$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·casp1(SB), NOSPLIT, $0-13$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·casuintptr(SB), NOSPLIT, $0-13$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$12-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·cmpbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·cmpstring(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·cputicks(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·emptyfunc(SB),0,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·eqstring(SB),NOSPLIT,$0-17$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·fastrand1(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$4-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·getcallersp(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·goexit(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·gogo(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·gosave(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·ldt0setup(SB),NOSPLIT,$16-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·mcall(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·memeq(SB),NOSPLIT,$0-13$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·memeqbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·memequal_varlen(SB),NOSPLIT,$0-9$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·memhash_varlen(SB),NOSPLIT,$16-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·morestack(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·morestack_noctxt(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·prefetchnta(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·prefetcht0(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·prefetcht1(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·prefetcht2(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·procyield(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·return0(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·rt0_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$4-8$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·setg(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·stackBarrier(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·stackcheck(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·systemstack(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·systemstack_switch(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·xadd(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·xchg(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·xchgp1(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT runtime·xchguintptr(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT setg_gcc<>(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT ·asmcgocall(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT ·cgocallback_gofunc(SB),NOSPLIT,$12-12$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_386.s	/^TEXT ·reflectcall(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT NAME(SB), WRAPPER, $MAXSIZE-32;		\\$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT _cgo_topofstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT bytes·Compare(SB),NOSPLIT,$0-56$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-49$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0-40$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT gosave<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT reflect·call(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·addmoduledata(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·aeshashbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·asminit(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicand8(SB), NOSPLIT, $0-9$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicloaduint(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicloaduintptr(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicor8(SB), NOSPLIT, $0-9$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicstore(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicstore64(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicstorep1(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·atomicstoreuintptr(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·cas(SB), NOSPLIT, $0-17$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·cas64(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·casp1(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·casuintptr(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$24-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·cmpbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·cmpstring(SB),NOSPLIT,$0-40$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·cputicks(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·eqstring(SB),NOSPLIT,$0-33$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·fastrand1(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$8-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·getcallersp(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·goexit(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·gogo(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·gosave(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·indexbytebody(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·mcall(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·memeq(SB),NOSPLIT,$0-25$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·memeqbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·memequal_varlen(SB),NOSPLIT,$0-17$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·memhash_varlen(SB),NOSPLIT,$32-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·morestack(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·morestack_noctxt(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·prefetchnta(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·prefetcht0(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·prefetcht1(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·prefetcht2(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·procyield(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·return0(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·rt0_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$8-16$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·setg(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·stackBarrier(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·stackcheck(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·systemstack(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·systemstack_switch(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·xadd(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·xadd64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·xadduintptr(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·xchg(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·xchg64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·xchgp1(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT runtime·xchguintptr(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT setg_gcc<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT ·asmcgocall(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT ·cgocallback_gofunc(SB),NOSPLIT,$8-24$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64.s	/^TEXT ·reflectcall(SB), NOSPLIT, $0-32$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT NAME(SB), WRAPPER, $MAXSIZE-20;		\\$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT bytes·Compare(SB),NOSPLIT,$0-28$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-25$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT reflect·call(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·asmcgocall(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·asminit(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicand8(SB), NOSPLIT, $0-5$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicloaduint(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicloaduintptr(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicor8(SB), NOSPLIT, $0-5$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicstore(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicstore64(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicstorep1(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·atomicstoreuintptr(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·cas(SB), NOSPLIT, $0-17$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·cas64(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·casp1(SB), NOSPLIT, $0-17$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·casuintptr(SB), NOSPLIT, $0-17$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·cmpbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·cmpstring(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·cputicks(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·eqstring(SB),NOSPLIT,$0-17$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·fastrand1(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·getcallersp(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·goexit(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·gogo(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·gosave(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·indexbytebody(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·mcall(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·memeq(SB),NOSPLIT,$0-17$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·memeqbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·memequal_varlen(SB),NOSPLIT,$0-9$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·memhash_varlen(SB),NOSPLIT,$24-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·morestack(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·morestack_noctxt(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·prefetchnta(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·prefetcht0(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·prefetcht1(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·prefetcht2(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·procyield(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·return0(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·rt0_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$8-8$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·setg(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·stackBarrier(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·stackcheck(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·systemstack(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·systemstack_switch(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·xadd(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·xadd64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·xadduintptr(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·xchg(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·xchg64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·xchgp1(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT runtime·xchguintptr(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT ·cgocallback_gofunc(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_amd64p32.s	/^TEXT ·reflectcall(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT	·cgocallback_gofunc(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT NAME(SB), WRAPPER, $MAXSIZE-20;		\\$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT _cgo_topofstack(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT bytes·Compare(SB),NOSPLIT,$-4-28$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-25$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT gosave<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT reflect·call(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·abort(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·armPublicationBarrier(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·armcas(SB),NOSPLIT,$0-13$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·asminit(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·atomicloaduint(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·atomicloaduintptr(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·atomicstoreuintptr(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·casuintptr(SB),NOSPLIT,$0-13$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$12-12$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·cmpbody(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·cmpstring(SB),NOSPLIT,$-4-20$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·emptyfunc(SB),0,$0-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·eqstring(SB),NOSPLIT,$-4-17$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·fastrand1(SB),NOSPLIT,$-4-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$4-8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·getcallersp(SB),NOSPLIT,$-4-8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·goexit(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·gogo(SB),NOSPLIT,$-4-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·gosave(SB),NOSPLIT,$-4-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·jmpdefer(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·mcall(SB),NOSPLIT,$-4-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·memeq(SB),NOSPLIT,$-4-13$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·memequal_varlen(SB),NOSPLIT,$16-9$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·memhash_varlen(SB),NOSPLIT,$16-12$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·morestack(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·morestack_noctxt(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·prefetchnta(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·prefetcht0(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·prefetcht1(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·prefetcht2(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·procyield(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·return0(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·rt0_go(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$4-8$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·setg(SB),NOSPLIT,$-4-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·stackBarrier(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·systemstack(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·systemstack_switch(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·usplit(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT runtime·usplitR0(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT setg<>(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT ·asmcgocall(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/asm_arm.s	/^TEXT ·reflectcall(SB),NOSPLIT,$-4-20$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT NAME(SB), WRAPPER, $MAXSIZE-24;		\\$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT _cgo_topofstack(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT bytes·Compare(SB),NOSPLIT,$-4-56$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-49$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0-40$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT gosave<>(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT reflect·call(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·abort(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·asminit(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·atomicloaduint(SB), NOSPLIT, $-8-16$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·atomicloaduintptr(SB), NOSPLIT, $-8-16$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·atomicstoreuintptr(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·cas(SB), NOSPLIT, $0-17$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·casp1(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·casuintptr(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$24-24$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·cmpbody<>(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·cmpstring(SB),NOSPLIT,$-4-40$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·eqstring(SB),NOSPLIT,$0-33$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·fastrand1(SB),NOSPLIT,$-8-4$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$8-16$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·getcallersp(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·goexit(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·gogo(SB), NOSPLIT, $-8-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·gosave(SB), NOSPLIT, $-8-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $-8-16$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·mcall(SB), NOSPLIT, $-8-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·memeq(SB),NOSPLIT,$-8-25$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·memequal_varlen(SB),NOSPLIT,$40-17$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·memhash_varlen(SB),NOSPLIT,$40-24$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·morestack(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·morestack_noctxt(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·prefetchnta(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·prefetcht0(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·prefetcht1(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·prefetcht2(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·procyield(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·reginit(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·return0(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·rt0_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$8-16$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·setg(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·stackBarrier(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·systemstack(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT runtime·systemstack_switch(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT setg_gcc<>(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT ·asmcgocall(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT ·cgocallback_gofunc(SB),NOSPLIT,$24-24$/;"	l
TEXT	./runtime/asm_arm64.s	/^TEXT ·reflectcall(SB), NOSPLIT, $-8-32$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT NAME(SB), WRAPPER, $MAXSIZE-24;		\\$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT _cgo_reginit(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT _cgo_topofstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-49$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0-40$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT gosave<>(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT reflect·call(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·abort(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·asminit(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicand8(SB), NOSPLIT, $0-9$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicloaduint(SB), NOSPLIT, $-8-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicloaduintptr(SB), NOSPLIT, $-8-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicor8(SB), NOSPLIT, $0-9$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicstore(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicstore64(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicstorep1(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·atomicstoreuintptr(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·cas(SB), NOSPLIT, $0-17$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·cas64(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·casp1(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·casuintptr(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$24-24$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·cputicks(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·eqstring(SB),NOSPLIT,$0-33$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·fastrand1(SB), NOSPLIT, $0-4$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$8-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·getcallersp(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·goexit(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·gogo(SB), NOSPLIT, $-8-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·gosave(SB), NOSPLIT, $-8-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $-8-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·mcall(SB), NOSPLIT, $-8-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·memeq(SB),NOSPLIT,$-8-25$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·memequal_varlen(SB),NOSPLIT,$40-17$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·memhash_varlen(SB),NOSPLIT,$40-24$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·morestack(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·morestack_noctxt(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·prefetchnta(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·prefetcht0(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·prefetcht1(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·prefetcht2(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·procyield(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·reginit(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·return0(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·rt0_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$8-16$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·setg(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·stackBarrier(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·systemstack(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·systemstack_switch(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·xadd(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·xadd64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·xchg(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·xchg64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·xchgp1(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT runtime·xchguintptr(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT setg_gcc<>(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT ·asmcgocall(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT ·cgocallback_gofunc(SB),NOSPLIT,$16-24$/;"	l
TEXT	./runtime/asm_ppc64x.s	/^TEXT ·reflectcall(SB), NOSPLIT, $-8-32$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·atomicstore(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·atomicstore64(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·atomicstorep1(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·cas64(SB), NOSPLIT, $0-25$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·xadd(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·xadd64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·xchg(SB), NOSPLIT, $0-20$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·xchg64(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT runtime·xchguintptr(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT ·atomicload(SB),NOSPLIT,$-8-12$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT ·atomicload64(SB),NOSPLIT,$-8-16$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT ·atomicloadp(SB),NOSPLIT,$-8-16$/;"	l
TEXT	./runtime/atomic_arm64.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/atomic_ppc64x.s	/^TEXT ·atomicload(SB),NOSPLIT,$-8-12$/;"	l
TEXT	./runtime/atomic_ppc64x.s	/^TEXT ·atomicload64(SB),NOSPLIT,$-8-16$/;"	l
TEXT	./runtime/atomic_ppc64x.s	/^TEXT ·atomicloadp(SB),NOSPLIT,$-8-16$/;"	l
TEXT	./runtime/atomic_ppc64x.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/cgo/asm_386.s	/^TEXT crosscall2(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/cgo/asm_amd64.s	/^TEXT crosscall2(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/cgo/asm_arm.s	/^TEXT crosscall2(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/cgo/asm_arm64.s	/^TEXT crosscall2(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/cgo/asm_nacl_amd64p32.s	/^TEXT crosscall2(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/cgo/asm_ppc64x.s	/^TEXT crosscall2(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/cgo/asm_ppc64x.s	/^TEXT restoreregs2<>(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/cgo/asm_ppc64x.s	/^TEXT saveregs2<>(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/cgo/signal_darwin_arm.s	/^TEXT ·panicmem(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/cgo/signal_darwin_arm64.s	/^TEXT ·panicmem(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/debug/stubs.s	/^TEXT ·setGCPercent(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/debug/stubs.s	/^TEXT ·setMaxStack(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/debug/stubs.s	/^TEXT ·setMaxThreads(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/debug/stubs.s	/^TEXT ·setPanicOnFault(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/duff_386.s	/^TEXT runtime·duffcopy(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/duff_386.s	/^TEXT runtime·duffzero(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/duff_amd64.s	/^TEXT runtime·duffcopy(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/duff_amd64.s	/^TEXT runtime·duffzero(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/duff_arm.s	/^TEXT runtime·duffcopy(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/duff_arm.s	/^TEXT runtime·duffzero(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/duff_arm64.s	/^TEXT runtime·duffzero(SB), NOSPLIT, $-8-0$/;"	l
TEXT	./runtime/duff_ppc64x.s	/^TEXT runtime·duffzero(SB), NOSPLIT, $-8-0$/;"	l
TEXT	./runtime/memclr_386.s	/^TEXT runtime·memclr(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/memclr_amd64.s	/^TEXT runtime·memclr(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/memclr_arm.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/memclr_arm64.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/memclr_plan9_386.s	/^TEXT runtime·memclr(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/memclr_plan9_amd64.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/memclr_ppc64x.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/memmove_386.s	/^TEXT runtime·memmove(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/memmove_amd64.s	/^TEXT runtime·memmove(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/memmove_arm.s	/^TEXT runtime·memmove(SB), NOSPLIT, $4-12$/;"	l
TEXT	./runtime/memmove_arm64.s	/^TEXT runtime·memmove(SB), NOSPLIT, $-8-24$/;"	l
TEXT	./runtime/memmove_nacl_amd64p32.s	/^TEXT runtime·memmove(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/memmove_plan9_386.s	/^TEXT runtime·memmove(SB), NOSPLIT, $0-12$/;"	l
TEXT	./runtime/memmove_plan9_amd64.s	/^TEXT runtime·memmove(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/memmove_ppc64x.s	/^TEXT runtime·memmove(SB), NOSPLIT, $-8-24$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	racecall<>(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	racecalladdr<>(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	racecallatomic<>(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·RaceRead(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·RaceReadRange(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·RaceWrite(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·RaceWriteRange(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racecall(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racefuncenter(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racefuncexit(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·raceread(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racereadpc(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racereadrange(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racereadrangepc1(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racesymbolizethunk(SB), NOSPLIT, $56-8$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racewrite(SB), NOSPLIT, $0-8$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racewritepc(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racewriterange(SB), NOSPLIT, $0-16$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	runtime·racewriterangepc1(SB), NOSPLIT, $0-24$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·AddInt32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·AddInt64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·AddUint32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·AddUint64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·AddUintptr(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·CompareAndSwapInt32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·CompareAndSwapInt64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·CompareAndSwapUint32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·CompareAndSwapUint64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·CompareAndSwapUintptr(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·LoadInt32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·LoadInt64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·LoadPointer(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·LoadUint32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·LoadUint64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·LoadUintptr(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·StoreInt32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·StoreInt64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·StoreUint32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·StoreUint64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·StoreUintptr(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·SwapInt32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·SwapInt64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·SwapUint32(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·SwapUint64(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/race_amd64.s	/^TEXT	sync∕atomic·SwapUintptr(SB), NOSPLIT, $0-0$/;"	l
TEXT	./runtime/rt0_android_arm.s	/^TEXT _rt0_arm_android(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_android_arm.s	/^TEXT _rt0_arm_android_lib(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_darwin_386.s	/^TEXT _rt0_386_darwin(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/rt0_darwin_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_darwin_amd64.s	/^TEXT _rt0_amd64_darwin(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_darwin_amd64.s	/^TEXT _rt0_amd64_darwin_lib(SB),NOSPLIT,$40$/;"	l
TEXT	./runtime/rt0_darwin_amd64.s	/^TEXT _rt0_amd64_darwin_lib_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_darwin_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_darwin_arm.s	/^TEXT _rt0_arm_darwin(SB),7,$-4$/;"	l
TEXT	./runtime/rt0_darwin_arm.s	/^TEXT _rt0_arm_darwin_lib(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/rt0_darwin_arm.s	/^TEXT _rt0_arm_darwin_lib_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_darwin_arm.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_darwin_arm64.s	/^TEXT _rt0_arm64_darwin(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_darwin_arm64.s	/^TEXT _rt0_arm64_darwin_lib(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_darwin_arm64.s	/^TEXT _rt0_arm64_darwin_lib_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_darwin_arm64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_dragonfly_amd64.s	/^TEXT _rt0_amd64_dragonfly(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_dragonfly_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_freebsd_386.s	/^TEXT _rt0_386_freebsd(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/rt0_freebsd_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_freebsd_amd64.s	/^TEXT _rt0_amd64_freebsd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_freebsd_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_freebsd_arm.s	/^TEXT _rt0_arm_freebsd(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_freebsd_arm.s	/^TEXT main(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_linux_386.s	/^TEXT _fallback_vdso(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_linux_386.s	/^TEXT _rt0_386_linux(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/rt0_linux_386.s	/^TEXT _rt0_386_linux_lib(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_linux_386.s	/^TEXT _rt0_386_linux_lib_go(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/rt0_linux_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_linux_amd64.s	/^TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_linux_amd64.s	/^TEXT _rt0_amd64_linux_lib(SB),NOSPLIT,$0x48$/;"	l
TEXT	./runtime/rt0_linux_amd64.s	/^TEXT _rt0_amd64_linux_lib_go(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_linux_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_linux_arm.s	/^TEXT _rt0_arm_linux(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_linux_arm.s	/^TEXT _rt0_arm_linux1(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_linux_arm.s	/^TEXT _rt0_arm_linux_lib(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/rt0_linux_arm.s	/^TEXT _rt0_arm_linux_lib_go<>(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/rt0_linux_arm.s	/^TEXT bad_abi<>(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_linux_arm.s	/^TEXT main(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_linux_arm.s	/^TEXT oabi_syscall<>(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_linux_arm64.s	/^TEXT _rt0_arm64_linux(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_linux_arm64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_linux_ppc64.s	/^TEXT _main<>(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_linux_ppc64.s	/^TEXT _rt0_ppc64_linux(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_linux_ppc64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_linux_ppc64le.s	/^TEXT _main<>(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_linux_ppc64le.s	/^TEXT _rt0_ppc64le_linux(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_linux_ppc64le.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_nacl_386.s	/^TEXT _rt0_386_nacl(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/rt0_nacl_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_nacl_amd64p32.s	/^TEXT _rt0_amd64p32_nacl(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/rt0_nacl_amd64p32.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_nacl_arm.s	/^TEXT _rt0_arm_nacl(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_nacl_arm.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_netbsd_386.s	/^TEXT _rt0_386_netbsd(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/rt0_netbsd_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_netbsd_amd64.s	/^TEXT _rt0_amd64_netbsd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_netbsd_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_netbsd_arm.s	/^TEXT _rt0_arm_netbsd(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_openbsd_386.s	/^TEXT _rt0_386_openbsd(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/rt0_openbsd_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_openbsd_amd64.s	/^TEXT _rt0_amd64_openbsd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_openbsd_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_openbsd_arm.s	/^TEXT _rt0_arm_openbsd(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/rt0_plan9_386.s	/^TEXT _rt0_386_plan9(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/rt0_plan9_amd64.s	/^TEXT _rt0_amd64_plan9(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/rt0_solaris_amd64.s	/^TEXT _rt0_amd64_solaris(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_solaris_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_windows_386.s	/^TEXT _main(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/rt0_windows_386.s	/^TEXT _rt0_386_windows(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/rt0_windows_amd64.s	/^TEXT _rt0_amd64_windows(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/rt0_windows_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·bsdthread_create(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·bsdthread_register(SB),NOSPLIT,$40$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·bsdthread_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mach_msg_trap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mach_reply_port(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mach_semaphore_signal(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mach_semaphore_signal_all(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mach_semaphore_timedwait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mach_semaphore_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mach_task_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·now(SB),NOSPLIT,$40$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$40$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·sysenter(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_386.s	/^TEXT time·now(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT nanotime<>(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·bsdthread_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·bsdthread_register(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·bsdthread_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_msg_trap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_reply_port(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_signal(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_signal_all(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_timedwait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_task_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mach_thread_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·madvise(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$0-8$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$0-24$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·sigfwd(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·sigreturn(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_amd64.s	/^TEXT time·now(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT notok<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·bsdthread_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·bsdthread_register(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·bsdthread_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·casp1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_msg_trap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_reply_port(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_semaphore_signal(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_semaphore_signal_all(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_semaphore_timedwait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_semaphore_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_task_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mach_thread_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mincore(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·raise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT time·now(SB), 7, $32$/;"	l
TEXT	./runtime/sys_darwin_arm.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT notok<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·bsdthread_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·bsdthread_register(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·bsdthread_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_msg_trap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_reply_port(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_semaphore_signal(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_semaphore_signal_all(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_semaphore_timedwait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_semaphore_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_task_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mach_thread_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$40$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·raise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_darwin_arm64.s	/^TEXT time·now(SB),NOSPLIT,$40-12$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·lwp_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·sys_umtx_sleep(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·sys_umtx_wakeup(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_dragonfly_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·i386_set_ldt(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·sys_umtx_op(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$28$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·thr_new(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·thr_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$20$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·sys_umtx_op(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·thr_new(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·thr_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·casp1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·raise(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·sys_umtx_op(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·thr_new(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·thr_start(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_freebsd_arm.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·clone(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·futex(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·gettid(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·mincore(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·sigfwd(SB),NOSPLIT,$12-16$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·sigreturn(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·clone(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·futex(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·gettid(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·mincore(SB),NOSPLIT,$0-28$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$0-20$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$0-28$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$0-36$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$0-28$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0-24$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·sigfwd(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·sigreturn(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$0-28$/;"	l
TEXT	./runtime/sys_linux_amd64.s	/^TEXT time·now(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT	runtime·raise(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT	runtime·raiseproc(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT cas<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT publicationBarrier<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·access(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·casp1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·clone(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·connect(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·futex(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·gettid(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·mincore(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·sigfwd(SB),NOSPLIT,$0-16$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·socket(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_linux_arm.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·clone(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8-12$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8-4$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8-4$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·futex(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8-20$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·gettid(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·mincore(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$24-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8-20$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·raise(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$-8-36$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-8-24$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·sigfwd(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$24-4$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_arm64.s	/^TEXT time·now(SB),NOSPLIT,$24-12$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·_sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·clone(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8-12$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8-4$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8-4$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·futex(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8-20$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·gettid(SB),NOSPLIT,$0-4$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·mincore(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·mmap(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·open(SB),NOSPLIT,$-8-20$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·raise(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·read(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$-8-36$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-8-24$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·sigfwd(SB),NOSPLIT,$0-32$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16-4$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT runtime·write(SB),NOSPLIT,$-8-28$/;"	l
TEXT	./runtime/sys_linux_ppc64x.s	/^TEXT time·now(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·closefd(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·getRandomData(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·mstart_nacl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_clock_gettime(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_cond_broadcast(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_cond_create(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_cond_signal(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_cond_timed_wait_abs(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_cond_wait(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_exception_handler(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_exception_stack(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_mutex_create(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_mutex_lock(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_mutex_trylock(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_mutex_unlock(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_nanosleep(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_sem_create(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_sem_post(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_sem_wait(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nacl_thread_create(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$20$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·open(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·read(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT runtime·write(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT syscall·naclWrite(SB), NOSPLIT, $16-16$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT syscall·now(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_386.s	/^TEXT time·now(SB),NOSPLIT,$20$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·getRandomData(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·mmap(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·mstart_nacl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_clock_gettime(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_cond_broadcast(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_cond_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_cond_signal(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_cond_timed_wait_abs(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_cond_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_exception_handler(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_exception_stack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_mutex_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_mutex_lock(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_mutex_trylock(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_mutex_unlock(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_nanosleep(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_sem_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_sem_post(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_sem_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_sysinfo(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nacl_thread_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·settls(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$80$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT runtime·write(SB),NOSPLIT,$16-20$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT syscall·naclWrite(SB), NOSPLIT, $24-20$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT syscall·now(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_amd64p32.s	/^TEXT time·now(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·casp1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·getRandomData(SB),NOSPLIT,$0-12$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·mstart_nacl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_clock_gettime(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_cond_broadcast(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_cond_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_cond_signal(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_cond_timed_wait_abs(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_cond_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_exception_handler(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_exception_stack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_mutex_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_mutex_lock(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_mutex_trylock(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_mutex_unlock(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_nanosleep(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_sem_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_sem_post(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_sem_wait(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_sysinfo(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nacl_thread_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$80$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT syscall·naclWrite(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT syscall·now(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT time·now(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_nacl_arm.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·getcontext(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·lwp_park(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·lwp_self(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·lwp_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·lwp_unpark(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$36$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·settls(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·sigreturn_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$28$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·getcontext(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·lwp_park(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·lwp_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·lwp_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·lwp_unpark(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·sigreturn_tramp(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·casp1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·getcontext(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·kevent(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·lwp_park(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·lwp_self(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·lwp_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·lwp_unpark(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·sigreturn_tramp(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_netbsd_arm.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$36$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·settls(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$28$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·tfork(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·thrsleep(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·thrwakeup(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·tfork(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·thrsleep(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·thrwakeup(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	./runtime/sys_openbsd_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·casp1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·closefd(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·kevent(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·raiseproc(SB),NOSPLIT,$12$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·tfork(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·thrsleep(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·thrwakeup(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	./runtime/sys_openbsd_arm.s	/^TEXT ·publicationBarrier(SB),NOSPLIT,$-4-0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT _seek<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT errstr<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT nsec<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·brk_(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·errstr(SB),NOSPLIT,$8-8$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·exits(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·noted(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·notify(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·nsec(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·plan9_semacquire(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·plan9_semrelease(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·plan9_tsemacquire(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·pread(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·pwrite(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·rfork(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·seek(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·setfpmasks(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·sleep(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT runtime·tstart_plan9(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_386.s	/^TEXT time·now(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT _seek<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT errstr<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·brk_(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·closefd(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·errstr(SB),NOSPLIT,$16-16$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·exits(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·noted(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·notify(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·nsec(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·plan9_semacquire(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·plan9_semrelease(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·plan9_tsemacquire(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·pread(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·pwrite(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·rfork(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·seek(SB),NOSPLIT,$32$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·setfpmasks(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·setldt(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·sleep(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT runtime·tstart_plan9(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_plan9_amd64.s	/^TEXT time·now(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·asmsysvicall6(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·miniterrno(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·nanotime1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·osyield1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·pipe1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·tstart_sysvicall(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·usleep1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT runtime·usleep2(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_solaris_amd64.s	/^TEXT time·now(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT	runtime·badsignal2(SB),NOSPLIT,$24$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·asmstdcall(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·callbackasm1+0(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·ctrlhandler(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·exceptiontramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·externalthreadhandler(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·firstcontinuetramp(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·getlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·lastcontinuetramp(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·profileloop(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·setlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·tstart(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·tstart_stdcall(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·usleep1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT runtime·usleep2(SB),NOSPLIT,$20$/;"	l
TEXT	./runtime/sys_windows_386.s	/^TEXT time·now(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·asmstdcall(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·badsignal2(SB),NOSPLIT,$48$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·callbackasm1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·ctrlhandler(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·exceptiontramp(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·externalthreadhandler(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·firstcontinuetramp(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·getlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·lastcontinuetramp(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·profileloop(SB),NOSPLIT,$8$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·setlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0-0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·tstart_stdcall(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·usleep1(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT runtime·usleep2(SB),NOSPLIT,$16$/;"	l
TEXT	./runtime/sys_windows_amd64.s	/^TEXT time·now(SB),NOSPLIT,$8-12$/;"	l
TEXT	./runtime/tls_arm.s	/^TEXT runtime·_initcgo(SB),NOSPLIT,$4$/;"	l
TEXT	./runtime/tls_arm.s	/^TEXT runtime·load_g(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/tls_arm.s	/^TEXT runtime·save_g(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/tls_arm.s	/^TEXT setg_gcc<>(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/tls_arm64.s	/^TEXT runtime·load_g(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/tls_arm64.s	/^TEXT runtime·save_g(SB),NOSPLIT,$0$/;"	l
TEXT	./runtime/tls_ppc64x.s	/^TEXT runtime·load_g(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/tls_ppc64x.s	/^TEXT runtime·save_g(SB),NOSPLIT,$-8-0$/;"	l
TEXT	./runtime/vlop_386.s	/^TEXT runtime·_div64by32(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/vlop_386.s	/^TEXT runtime·_mul64by32(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT _div(SB),NOSPLIT,$16-0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT _divu(SB), NOSPLIT, $16-0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT _mod(SB),NOSPLIT,$16-0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT _modu(SB), NOSPLIT, $16-0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT _mulv(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT _sfloat(SB), NOSPLIT, $68-0 \/\/ 4 arg + 14*4 saved regs + cpsr + return value$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT runtime·_div64by32(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT runtime·_mul64by32(SB), NOSPLIT, $0$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT runtime·_sfloatpanic(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/vlop_arm.s	/^TEXT udiv<>(SB),NOSPLIT,$-4$/;"	l
TEXT	./runtime/zcallback_windows.s	/^TEXT runtime·callbackasm(SB),7,$0$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0-13$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0-21$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-13$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$0-21$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0-13$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_386.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_amd64p32.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT	check64<>(SB),NOSPLIT,$16-0$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT	fastCheck64<>(SB),NOSPLIT,$-4$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT slowCheck64<>(SB),NOSPLIT,$0-0$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armAddUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armAddUint64(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armCompareAndSwapUint32(SB),NOSPLIT,$0-13$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armCompareAndSwapUint64(SB),NOSPLIT,$0-21$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armLoadUint64(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armStoreUint64(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armSwapUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm.s	/^TEXT ·armSwapUint64(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_arm64.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_darwin_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_freebsd_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT cas64<>(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT cas<>(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT kernelCAS64<>(SB),NOSPLIT,$0-21$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT setupAndCallCAS64<>(SB),NOSPLIT,$-4-21$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-13$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4-21$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_linux_arm.s	/^TEXT ·generalCAS64(SB),NOSPLIT,$0-21$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_nacl_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_netbsd_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_openbsd_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-17$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0-25$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	./sync/atomic/asm_ppc64x.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0-24$/;"	l
TEXT	./syscall/asm.s	/^TEXT ·use(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_darwin_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_darwin_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_darwin_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_darwin_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_darwin_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_darwin_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_darwin_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_darwin_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_darwin_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-104$/;"	l
TEXT	./syscall/asm_darwin_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_darwin_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_darwin_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_darwin_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_darwin_arm.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_darwin_arm.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_darwin_arm64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_darwin_arm64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_darwin_arm64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_darwin_arm64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-104$/;"	l
TEXT	./syscall/asm_darwin_arm64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_dragonfly_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	./syscall/asm_dragonfly_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	./syscall/asm_dragonfly_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	./syscall/asm_dragonfly_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-112$/;"	l
TEXT	./syscall/asm_dragonfly_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	./syscall/asm_freebsd_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_freebsd_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_freebsd_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_freebsd_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_freebsd_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_freebsd_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_freebsd_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_freebsd_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_freebsd_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-104$/;"	l
TEXT	./syscall/asm_freebsd_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_freebsd_arm.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_freebsd_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_freebsd_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_freebsd_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_freebsd_arm.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_linux_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_linux_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_linux_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_linux_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_linux_386.s	/^TEXT ·rawsocketcall(SB),NOSPLIT,$0-36$/;"	l
TEXT	./syscall/asm_linux_386.s	/^TEXT ·seek(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_linux_386.s	/^TEXT ·socketcall(SB),NOSPLIT,$0-36$/;"	l
TEXT	./syscall/asm_linux_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_linux_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_linux_amd64.s	/^TEXT ·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_linux_amd64.s	/^TEXT ·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_linux_amd64.s	/^TEXT ·gettimeofday(SB),NOSPLIT,$0-16$/;"	l
TEXT	./syscall/asm_linux_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_linux_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_linux_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_linux_arm.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_linux_arm.s	/^TEXT ·seek(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_linux_arm64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_linux_arm64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_linux_arm64.s	/^TEXT ·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_linux_arm64.s	/^TEXT ·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_linux_ppc64x.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_linux_ppc64x.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_linux_ppc64x.s	/^TEXT ·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_linux_ppc64x.s	/^TEXT ·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_nacl_386.s	/^TEXT ·Syscall(SB),NOSPLIT,$12-28$/;"	l
TEXT	./syscall/asm_nacl_amd64p32.s	/^TEXT ·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_nacl_arm.s	/^TEXT ·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_netbsd_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_netbsd_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_netbsd_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_netbsd_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_netbsd_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_netbsd_amd64.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_netbsd_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_netbsd_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_netbsd_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_netbsd_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-104$/;"	l
TEXT	./syscall/asm_netbsd_arm.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_netbsd_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_netbsd_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_netbsd_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_netbsd_arm.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_openbsd_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_openbsd_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_openbsd_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_openbsd_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_openbsd_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_openbsd_amd64.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_openbsd_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_openbsd_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_openbsd_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_openbsd_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-104$/;"	l
TEXT	./syscall/asm_openbsd_arm.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_openbsd_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_openbsd_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_openbsd_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_openbsd_arm.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
TEXT	./syscall/asm_plan9_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	./syscall/asm_plan9_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	./syscall/asm_plan9_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	./syscall/asm_plan9_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	./syscall/asm_plan9_386.s	/^TEXT ·exit(SB),NOSPLIT,$4-4$/;"	l
TEXT	./syscall/asm_plan9_386.s	/^TEXT ·seek(SB),NOSPLIT,$0-36$/;"	l
TEXT	./syscall/asm_plan9_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-80$/;"	l
TEXT	./syscall/asm_plan9_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	./syscall/asm_plan9_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	./syscall/asm_plan9_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_plan9_amd64.s	/^TEXT ·exit(SB),NOSPLIT,$8-8$/;"	l
TEXT	./syscall/asm_plan9_amd64.s	/^TEXT ·seek(SB),NOSPLIT,$0-56$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·Syscall(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·chdir(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·chroot1(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·close(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·dlclose(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·dlopen(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·dlsym(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·execve(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·exit(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·fcntl1(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·forkx(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·gethostname(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·getpid(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·ioctl(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·pipe(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·rawSysvicall6(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·setgid(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·setgroups1(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·setpgid(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·setsid(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·setuid(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·sysvicall6(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·wait4(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/asm_solaris_amd64.s	/^TEXT ·write1(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/time_nacl_386.s	/^TEXT ·startTimer(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/time_nacl_386.s	/^TEXT ·stopTimer(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/time_nacl_amd64p32.s	/^TEXT ·startTimer(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/time_nacl_amd64p32.s	/^TEXT ·stopTimer(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/time_nacl_arm.s	/^TEXT ·startTimer(SB),NOSPLIT,$0$/;"	l
TEXT	./syscall/time_nacl_arm.s	/^TEXT ·stopTimer(SB),NOSPLIT,$0$/;"	l
TF	./fmt/stringer_test.go	/^type TF float64$/;"	t
TF32	./fmt/stringer_test.go	/^type TF32 float32$/;"	t
TF64	./fmt/stringer_test.go	/^type TF64 float64$/;"	t
TI	./fmt/stringer_test.go	/^type TI int$/;"	t
TI16	./fmt/stringer_test.go	/^type TI16 int16$/;"	t
TI32	./fmt/stringer_test.go	/^type TI32 int32$/;"	t
TI64	./fmt/stringer_test.go	/^type TI64 int64$/;"	t
TI8	./fmt/stringer_test.go	/^type TI8 int8$/;"	t
TL	./runtime/iface_test.go	/^type TL [2]uintptr$/;"	t
TLSConnectionState	./net/smtp/smtp.go	/^func (c *Client) TLSConnectionState() (state tls.ConnectionState, ok bool) {$/;"	f
TLSG_IS_VARIABLE	./runtime/tls_arm.s	/^#define TLSG_IS_VARIABLE$/;"	d
TLSG_IS_VARIABLE	./runtime/tls_arm64.h	/^#define TLSG_IS_VARIABLE$/;"	d
TLS_SIZE	./runtime/cgo/gcc_openbsd_386.c	/^#define TLS_SIZE /;"	d	file:
TLS_SIZE	./runtime/cgo/gcc_openbsd_amd64.c	/^#define TLS_SIZE /;"	d	file:
TM	./runtime/iface_test.go	/^type TM uintptr$/;"	t
TMP	./runtime/memclr_arm.s	/^#define TMP	R12				\/* N and TMP don't overlap *\/$/;"	d
TMP	./runtime/memmove_arm.s	/^#define TMP	R12				\/* N and TMP don't overlap *\/$/;"	d
TMP1	./runtime/memmove_arm.s	/^#define TMP1	R5$/;"	d
TO	./runtime/memclr_arm.s	/^#define TO	R8$/;"	d
TOE	./runtime/memclr_arm.s	/^#define TOE	R11$/;"	d
TPIDR	./runtime/tls_arm64.h	/^#define TPIDR /;"	d
TPtrExported	./cmd/api/testdata/src/pkg/p1/p1.go	/^type TPtrExported struct {$/;"	t
TPtrUnexported	./cmd/api/testdata/src/pkg/p1/p1.go	/^type TPtrUnexported struct {$/;"	t
TS	./fmt/stringer_test.go	/^type TS string$/;"	t
TS	./runtime/iface_test.go	/^type TS uint16$/;"	t
TS	./runtime/memmove_arm.s	/^#define TS	R0$/;"	d
TU	./fmt/stringer_test.go	/^type TU uint$/;"	t
TU16	./fmt/stringer_test.go	/^type TU16 uint16$/;"	t
TU32	./fmt/stringer_test.go	/^type TU32 uint32$/;"	t
TU64	./fmt/stringer_test.go	/^type TU64 uint64$/;"	t
TU8	./fmt/stringer_test.go	/^type TU8 uint8$/;"	t
TUI	./fmt/stringer_test.go	/^type TUI uintptr$/;"	t
TYPE	./cmd/yacc/yacc.go	/^func TYPE(i int) int { return (i >> 10) & 077 }$/;"	f
Table	./debug/gosym/symtab.go	/^type Table struct {$/;"	t
Table	./hash/crc32/crc32.go	/^type Table [256]uint32$/;"	t
Table	./hash/crc64/crc64.go	/^type Table [256]uint64$/;"	t
TableAttrs	./encoding/xml/read_test.go	/^type TableAttrs struct {$/;"	t
Tables	./encoding/xml/read_test.go	/^type Tables struct {$/;"	t
Tag	./debug/dwarf/const.go	/^type Tag uint32$/;"	t
Tag	./go/types/type.go	/^func (s *Struct) Tag(i int) string {$/;"	f
TagMatch	./cmd/pprof/internal/profile/filter.go	/^type TagMatch func(key, val string, nval int64) bool$/;"	t
TagPathError	./encoding/xml/typeinfo.go	/^type TagPathError struct {$/;"	t
TakesFunc	./cmd/api/testdata/src/pkg/p1/p1.go	/^func TakesFunc(f func(dontWantName int) int)$/;"	f
Tan	./math/cmplx/tan.go	/^func Tan(x complex128) complex128 {$/;"	f
Tan	./math/tan.go	/^func Tan(x float64) float64$/;"	f
Tanh	./math/cmplx/tan.go	/^func Tanh(x complex128) complex128 {$/;"	f
Tanh	./math/tanh.go	/^func Tanh(x float64) float64 {$/;"	f
Task	./runtime/race/testdata/chan_test.go	/^	type Task struct {$/;"	t
Task	./runtime/race/testdata/select_test.go	/^	type Task struct {$/;"	t
Tbigp	./reflect/all_test.go	/^type Tbigp [2]uintptr$/;"	t
Tbigv	./reflect/all_test.go	/^type Tbigv [2]uintptr$/;"	t
Tconv	./cmd/compile/internal/gc/fmt.go	/^func Tconv(t *Type, flag int) string {$/;"	f
Tee	./syscall/zsyscall_linux_386.go	/^func Tee(rfd int, wfd int, len int, flags int) (n int64, err error) {$/;"	f
Tee	./syscall/zsyscall_linux_amd64.go	/^func Tee(rfd int, wfd int, len int, flags int) (n int64, err error) {$/;"	f
Tee	./syscall/zsyscall_linux_arm.go	/^func Tee(rfd int, wfd int, len int, flags int) (n int64, err error) {$/;"	f
Tee	./syscall/zsyscall_linux_arm64.go	/^func Tee(rfd int, wfd int, len int, flags int) (n int64, err error) {$/;"	f
Tee	./syscall/zsyscall_linux_ppc64.go	/^func Tee(rfd int, wfd int, len int, flags int) (n int64, err error) {$/;"	f
Tee	./syscall/zsyscall_linux_ppc64le.go	/^func Tee(rfd int, wfd int, len int, flags int) (n int64, err error) {$/;"	f
TeeReader	./io/io.go	/^func TeeReader(r Reader, w Writer) Reader {$/;"	f
Tell	./debug/dwarf/line.go	/^func (r *LineReader) Tell() LineReaderPos {$/;"	f
TempDir	./io/ioutil/tempfile.go	/^func TempDir(dir, prefix string) (name string, err error) {$/;"	f
TempDir	./os/file_plan9.go	/^func TempDir() string {$/;"	f
TempDir	./os/file_unix.go	/^func TempDir() string {$/;"	f
TempDir	./os/file_windows.go	/^func TempDir() string {$/;"	f
TempFile	./io/ioutil/tempfile.go	/^func TempFile(dir, prefix string) (f *os.File, err error) {$/;"	f
TempVar	./cmd/compile/internal/gc/popt.go	/^type TempVar struct {$/;"	t
Template	./html/template/template.go	/^type Template struct {$/;"	t
Template	./text/template/template.go	/^type Template struct {$/;"	t
TemplateNode	./text/template/parse/node.go	/^type TemplateNode struct {$/;"	t
Templates	./html/template/template.go	/^func (t *Template) Templates() []*Template {$/;"	f
Templates	./text/template/template.go	/^func (t *Template) Templates() []*Template {$/;"	f
Tempname	./cmd/compile/internal/gc/gen.go	/^func Tempname(nn *Node, t *Type) {$/;"	f
Temporary	./crypto/tls/tls.go	/^func (timeoutError) Temporary() bool { return true }$/;"	f
Temporary	./net/cgo_stub.go	/^func (eai addrinfoErrno) Temporary() bool { return false }$/;"	f
Temporary	./net/cgo_unix.go	/^func (eai addrinfoErrno) Temporary() bool { return eai == C.EAI_AGAIN }$/;"	f
Temporary	./net/cgo_windows.go	/^func (eai addrinfoErrno) Temporary() bool { return false }$/;"	f
Temporary	./net/http/transport.go	/^func (e *httpError) Temporary() bool { return true }$/;"	f
Temporary	./net/http/transport.go	/^func (tlsHandshakeTimeoutError) Temporary() bool { return true }$/;"	f
Temporary	./net/net.go	/^func (e *AddrError) Temporary() bool { return false }$/;"	f
Temporary	./net/net.go	/^func (e *DNSConfigError) Temporary() bool { return false }$/;"	f
Temporary	./net/net.go	/^func (e *DNSError) Temporary() bool { return e.IsTimeout }$/;"	f
Temporary	./net/net.go	/^func (e *OpError) Temporary() bool {$/;"	f
Temporary	./net/net.go	/^func (e *timeoutError) Temporary() bool { return true }$/;"	f
Temporary	./net/net.go	/^func (e InvalidAddrError) Temporary() bool { return false }$/;"	f
Temporary	./net/net.go	/^func (e UnknownNetworkError) Temporary() bool { return false }$/;"	f
Temporary	./syscall/syscall_nacl.go	/^func (e Errno) Temporary() bool {$/;"	f
Temporary	./syscall/syscall_plan9.go	/^func (e ErrorString) Temporary() bool {$/;"	f
Temporary	./syscall/syscall_unix.go	/^func (e Errno) Temporary() bool {$/;"	f
Temporary	./syscall/syscall_windows.go	/^func (e Errno) Temporary() bool {$/;"	f
TerminateProcess	./syscall/zsyscall_windows.go	/^func TerminateProcess(handle Handle, exitcode uint32) (err error) {$/;"	f
Termios	./syscall/types_darwin.go	/^type Termios C.struct_termios$/;"	t
Termios	./syscall/types_dragonfly.go	/^type Termios C.struct_termios$/;"	t
Termios	./syscall/types_freebsd.go	/^type Termios C.struct_termios$/;"	t
Termios	./syscall/types_linux.go	/^type Termios C.struct_termios$/;"	t
Termios	./syscall/types_netbsd.go	/^type Termios C.struct_termios$/;"	t
Termios	./syscall/types_openbsd.go	/^type Termios C.struct_termios$/;"	t
Termios	./syscall/types_solaris.go	/^type Termios C.struct_termios$/;"	t
Termios	./syscall/ztypes_darwin_386.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_darwin_amd64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_darwin_arm.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_darwin_arm64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_dragonfly_amd64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_freebsd_386.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_freebsd_amd64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_freebsd_arm.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_linux_386.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_linux_amd64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_linux_arm.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_linux_arm64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_linux_ppc64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_linux_ppc64le.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_netbsd_386.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_netbsd_amd64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_netbsd_arm.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_openbsd_386.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_openbsd_amd64.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_openbsd_arm.go	/^type Termios struct {$/;"	t
Termios	./syscall/ztypes_solaris_amd64.go	/^type Termios struct {$/;"	t
Test	./cmd/go/testdata/src/testcycle/p1/p1_test.go	/^func Test(t *testing.T) {$/;"	f
Test	./cmd/go/testdata/src/testcycle/p3/p3_test.go	/^func Test(t *testing.T) {$/;"	f
Test	./cmd/go/testdata/src/testcycle/q1/q1_test.go	/^func Test(t *testing.T) {}$/;"	f
Test	./cmd/go/testdata/standalone_test.go	/^func Test(t *testing.T) {$/;"	f
Test	./container/heap/heap_test.go	/^func Test(t *testing.T) {$/;"	f
Test	./go/doc/doc_test.go	/^func Test(t *testing.T) {$/;"	f
Test	./go/printer/example_test.go	/^func Test(*testing.T) {}$/;"	f
Test	./text/tabwriter/tabwriter_test.go	/^func Test(t *testing.T) {$/;"	f
Test1	./cmd/go/testdata/src/main_test/m_test.go	/^func Test1(t *testing.T) {$/;"	f
Test12AMIsMidnight	./time/format_test.go	/^func Test12AMIsMidnight(t *testing.T) {$/;"	f
Test12PMIsNoon	./time/format_test.go	/^func Test12PMIsNoon(t *testing.T) {$/;"	f
Test16BitsPerColorChannel	./image/image_test.go	/^func Test16BitsPerColorChannel(t *testing.T) {$/;"	f
Test1MBSawtooth	./compress/bzip2/bzip2_test.go	/^func Test1MBSawtooth(t *testing.T) {$/;"	f
Test1MBZeros	./compress/bzip2/bzip2_test.go	/^func Test1MBZeros(t *testing.T) {$/;"	f
Test29ElementSlice	./encoding/gob/encoder_test.go	/^func Test29ElementSlice(t *testing.T) {$/;"	f
Test304Responses	./net/http/serve_test.go	/^func Test304Responses(t *testing.T) {$/;"	f
Test32Zeros	./compress/bzip2/bzip2_test.go	/^func Test32Zeros(t *testing.T) {$/;"	f
Test386EndToEnd	./cmd/asm/internal/asm/endtoend_test.go	/^func Test386EndToEnd(t *testing.T) {$/;"	f
Test386OperandParser	./cmd/asm/internal/asm/operand_test.go	/^func Test386OperandParser(t *testing.T) {$/;"	f
Test3PrimeKeyGeneration	./crypto/rsa/rsa_test.go	/^func Test3PrimeKeyGeneration(t *testing.T) {$/;"	f
Test4PrimeKeyGeneration	./crypto/rsa/rsa_test.go	/^func Test4PrimeKeyGeneration(t *testing.T) {$/;"	f
Test500WithEmptyHeaders	./net/http/cgi/matryoshka_test.go	/^func Test500WithEmptyHeaders(t *testing.T)  { want500Test(t, "\/empty-headers") }$/;"	f
Test500WithNoContentType	./net/http/cgi/matryoshka_test.go	/^func Test500WithNoContentType(t *testing.T) { want500Test(t, "\/no-content-type") }$/;"	f
Test500WithNoHeaders	./net/http/cgi/matryoshka_test.go	/^func Test500WithNoHeaders(t *testing.T)     { want500Test(t, "\/immediate-disconnect") }$/;"	f
Test64BitReturnStdCall	./runtime/syscall_windows_test.go	/^func Test64BitReturnStdCall(t *testing.T) {$/;"	f
TestAESGCM	./crypto/cipher/gcm_test.go	/^func TestAESGCM(t *testing.T) {$/;"	f
TestAMD64EndToEnd	./cmd/asm/internal/asm/endtoend_test.go	/^func TestAMD64EndToEnd(t *testing.T) {$/;"	f
TestAMD64OperandParser	./cmd/asm/internal/asm/operand_test.go	/^func TestAMD64OperandParser(t *testing.T) {$/;"	f
TestARM64EndToEnd	./cmd/asm/internal/asm/endtoend_test.go	/^func TestARM64EndToEnd(t *testing.T) {$/;"	f
TestARM64OperandParser	./cmd/asm/internal/asm/operand_test.go	/^func TestARM64OperandParser(t *testing.T) {$/;"	f
TestARMEndToEnd	./cmd/asm/internal/asm/endtoend_test.go	/^func TestARMEndToEnd(t *testing.T) {$/;"	f
TestARMOperandParser	./cmd/asm/internal/asm/operand_test.go	/^func TestARMOperandParser(t *testing.T) {$/;"	f
TestASN1BitLength	./crypto/x509/x509_test.go	/^func TestASN1BitLength(t *testing.T) {$/;"	f
TestAbs	./math/all_test.go	/^func TestAbs(t *testing.T) {$/;"	f
TestAbs	./math/cmplx/cmath_test.go	/^func TestAbs(t *testing.T) {$/;"	f
TestAbs	./path/filepath/path_test.go	/^func TestAbs(t *testing.T) {$/;"	f
TestAbsZ	./cmd/compile/internal/big/int_test.go	/^func TestAbsZ(t *testing.T) {$/;"	f
TestAbsZ	./math/big/int_test.go	/^func TestAbsZ(t *testing.T) {$/;"	f
TestAbsolutePath	./cmd/go/go_windows_test.go	/^func TestAbsolutePath(t *testing.T) {$/;"	f
TestAcceptError	./net/error_test.go	/^func TestAcceptError(t *testing.T) {$/;"	f
TestAcceptIgnoreSomeErrors	./net/net_windows_test.go	/^func TestAcceptIgnoreSomeErrors(t *testing.T) {$/;"	f
TestAcceptMaxFds	./net/http/serve_test.go	/^func TestAcceptMaxFds(t *testing.T) {$/;"	f
TestAcceptTimeout	./net/timeout_test.go	/^func TestAcceptTimeout(t *testing.T) {$/;"	f
TestAcceptTimeoutMustNotReturn	./net/timeout_test.go	/^func TestAcceptTimeoutMustNotReturn(t *testing.T) {$/;"	f
TestAcceptTimeoutMustReturn	./net/timeout_test.go	/^func TestAcceptTimeoutMustReturn(t *testing.T) {$/;"	f
TestAcos	./math/all_test.go	/^func TestAcos(t *testing.T) {$/;"	f
TestAcos	./math/cmplx/cmath_test.go	/^func TestAcos(t *testing.T) {$/;"	f
TestAcosh	./math/all_test.go	/^func TestAcosh(t *testing.T) {$/;"	f
TestAcosh	./math/cmplx/cmath_test.go	/^func TestAcosh(t *testing.T) {$/;"	f
TestAddCookie	./net/http/cookie_test.go	/^func TestAddCookie(t *testing.T) {$/;"	f
TestAddDate	./time/time_test.go	/^func TestAddDate(t *testing.T) {$/;"	f
TestAddInt32	./sync/atomic/atomic_test.go	/^func TestAddInt32(t *testing.T) {$/;"	f
TestAddInt64	./sync/atomic/atomic_test.go	/^func TestAddInt64(t *testing.T) {$/;"	f
TestAddParseTree	./html/template/clone_test.go	/^func TestAddParseTree(t *testing.T) {$/;"	f
TestAddParseTree	./text/template/multi_test.go	/^func TestAddParseTree(t *testing.T) {$/;"	f
TestAddParseTreeToUnparsedTemplate	./text/template/multi_test.go	/^func TestAddParseTreeToUnparsedTemplate(t *testing.T) {$/;"	f
TestAddToExactSecond	./time/time_test.go	/^func TestAddToExactSecond(t *testing.T) {$/;"	f
TestAddUint32	./sync/atomic/atomic_test.go	/^func TestAddUint32(t *testing.T) {$/;"	f
TestAddUint64	./sync/atomic/atomic_test.go	/^func TestAddUint64(t *testing.T) {$/;"	f
TestAddUintptr	./sync/atomic/atomic_test.go	/^func TestAddUintptr(t *testing.T) {$/;"	f
TestAddr	./reflect/all_test.go	/^func TestAddr(t *testing.T) {$/;"	f
TestAddr2Line	./cmd/addr2line/addr2line_test.go	/^func TestAddr2Line(t *testing.T) {$/;"	f
TestAddrList	./net/ipsock_test.go	/^func TestAddrList(t *testing.T) {$/;"	f
TestAddrListPartition	./net/ipsock_test.go	/^func TestAddrListPartition(t *testing.T) {$/;"	f
TestAddressFormatting	./net/mail/message_test.go	/^func TestAddressFormatting(t *testing.T) {$/;"	f
TestAddressParser	./net/mail/message_test.go	/^func TestAddressParser(t *testing.T) {$/;"	f
TestAddressParsing	./net/mail/message_test.go	/^func TestAddressParsing(t *testing.T) {$/;"	f
TestAddressParsingAndFormatting	./net/mail/message_test.go	/^func TestAddressParsingAndFormatting(t *testing.T) {$/;"	f
TestAddressParsingError	./net/mail/message_test.go	/^func TestAddressParsingError(t *testing.T) {$/;"	f
TestAdversary	./sort/sort_test.go	/^func TestAdversary(t *testing.T) {$/;"	f
TestAfter	./time/sleep_test.go	/^func TestAfter(t *testing.T) {$/;"	f
TestAfterFunc	./time/sleep_test.go	/^func TestAfterFunc(t *testing.T) {$/;"	f
TestAfterQueuing	./time/sleep_test.go	/^func TestAfterQueuing(t *testing.T) {$/;"	f
TestAfterStop	./time/sleep_test.go	/^func TestAfterStop(t *testing.T) {$/;"	f
TestAfterStress	./time/sleep_test.go	/^func TestAfterStress(t *testing.T) {$/;"	f
TestAfterTick	./time/sleep_test.go	/^func TestAfterTick(t *testing.T) {$/;"	f
TestAlertForwarding	./crypto/tls/handshake_server_test.go	/^func TestAlertForwarding(t *testing.T) {$/;"	f
TestAlias	./reflect/all_test.go	/^func TestAlias(t *testing.T) {$/;"	f
TestAlias	./runtime/map_test.go	/^func TestAlias(t *testing.T) {$/;"	f
TestAlignment	./reflect/all_test.go	/^func TestAlignment(t *testing.T) {$/;"	f
TestAll	./cmd/gofmt/long_test.go	/^func TestAll(t *testing.T) {$/;"	f
TestAll	./log/log_test.go	/^func TestAll(t *testing.T) {$/;"	f
TestAll	./reflect/all_test.go	/^func TestAll(t *testing.T) {$/;"	f
TestAllScalars	./encoding/xml/xml_test.go	/^func TestAllScalars(t *testing.T) {$/;"	f
TestAllocations	./reflect/all_test.go	/^func TestAllocations(t *testing.T) {$/;"	f
TestAllocsInterfaceBig	./reflect/all_test.go	/^func TestAllocsInterfaceBig(t *testing.T) {$/;"	f
TestAllocsInterfaceSmall	./reflect/all_test.go	/^func TestAllocsInterfaceSmall(t *testing.T) {$/;"	f
TestAllocsPerRun	./testing/allocs_test.go	/^func TestAllocsPerRun(t *testing.T) {$/;"	f
TestAnonymousFields	./reflect/all_test.go	/^func TestAnonymousFields(t *testing.T) {$/;"	f
TestAnonymousNonstruct	./encoding/json/encode_test.go	/^func TestAnonymousNonstruct(t *testing.T) {$/;"	f
TestAppend	./os/os_test.go	/^func TestAppend(t *testing.T) {$/;"	f
TestAppend	./reflect/all_test.go	/^func TestAppend(t *testing.T) {$/;"	f
TestAppendBool	./strconv/atob_test.go	/^func TestAppendBool(t *testing.T) {$/;"	f
TestAppendGrowth	./runtime/runtime_test.go	/^func TestAppendGrowth(t *testing.T) {$/;"	f
TestAppendOverlap	./runtime/append_test.go	/^func TestAppendOverlap(t *testing.T) {$/;"	f
TestAppendRangeCollapse	./regexp/syntax/parse_test.go	/^func TestAppendRangeCollapse(t *testing.T) {$/;"	f
TestAppendSliceGrowth	./runtime/runtime_test.go	/^func TestAppendSliceGrowth(t *testing.T) {$/;"	f
TestAppendTime	./net/http/serve_test.go	/^func TestAppendTime(t *testing.T) {$/;"	f
TestArray	./encoding/gob/encoder_test.go	/^func TestArray(t *testing.T) {$/;"	f
TestArrayAlias	./testing/quick/quick_test.go	/^type TestArrayAlias [4]byte$/;"	t
TestArrayElemSet	./reflect/all_test.go	/^func TestArrayElemSet(t *testing.T) {$/;"	f
TestArrayOf	./reflect/all_test.go	/^func TestArrayOf(t *testing.T) {$/;"	f
TestArrayOfAlg	./reflect/all_test.go	/^func TestArrayOfAlg(t *testing.T) {$/;"	f
TestArrayOfDirectIface	./reflect/all_test.go	/^func TestArrayOfDirectIface(t *testing.T) {$/;"	f
TestArrayOfGC	./reflect/all_test.go	/^func TestArrayOfGC(t *testing.T) {$/;"	f
TestArrayOfGenericAlg	./reflect/all_test.go	/^func TestArrayOfGenericAlg(t *testing.T) {$/;"	f
TestArrayType	./encoding/gob/type_test.go	/^func TestArrayType(t *testing.T) {$/;"	f
TestAsin	./math/all_test.go	/^func TestAsin(t *testing.T) {$/;"	f
TestAsin	./math/cmplx/cmath_test.go	/^func TestAsin(t *testing.T) {$/;"	f
TestAsinh	./math/all_test.go	/^func TestAsinh(t *testing.T) {$/;"	f
TestAsinh	./math/cmplx/cmath_test.go	/^func TestAsinh(t *testing.T) {$/;"	f
TestAssertE2I2Liveness	./runtime/gc_test.go	/^func TestAssertE2I2Liveness(t *testing.T) {$/;"	f
TestAssertE2T2Liveness	./runtime/gc_test.go	/^func TestAssertE2T2Liveness(t *testing.T) {$/;"	f
TestAssignOp	./go/types/token_test.go	/^func TestAssignOp(t *testing.T) {$/;"	f
TestAssignableTo	./reflect/set_test.go	/^func TestAssignableTo(t *testing.T) {$/;"	f
TestAtan	./math/all_test.go	/^func TestAtan(t *testing.T) {$/;"	f
TestAtan	./math/cmplx/cmath_test.go	/^func TestAtan(t *testing.T) {$/;"	f
TestAtan2	./math/all_test.go	/^func TestAtan2(t *testing.T) {$/;"	f
TestAtanh	./math/all_test.go	/^func TestAtanh(t *testing.T) {$/;"	f
TestAtanh	./math/cmplx/cmath_test.go	/^func TestAtanh(t *testing.T) {$/;"	f
TestAtof	./strconv/atof_test.go	/^func TestAtof(t *testing.T) { testAtof(t, true) }$/;"	f
TestAtofRandom	./strconv/atof_test.go	/^func TestAtofRandom(t *testing.T) {$/;"	f
TestAtofSlow	./strconv/atof_test.go	/^func TestAtofSlow(t *testing.T) { testAtof(t, false) }$/;"	f
TestAusZoneAbbr	./time/zoneinfo_windows_test.go	/^func TestAusZoneAbbr(t *testing.T) {$/;"	f
TestAuth	./net/smtp/smtp_test.go	/^func TestAuth(t *testing.T) {$/;"	f
TestAuthFailed	./net/smtp/smtp_test.go	/^func TestAuthFailed(t *testing.T) {$/;"	f
TestAuthPlain	./net/smtp/smtp_test.go	/^func TestAuthPlain(t *testing.T) {$/;"	f
TestAutoIndirection	./encoding/gob/codec_test.go	/^func TestAutoIndirection(t *testing.T) {$/;"	f
TestBadComments	./go/printer/printer_test.go	/^func TestBadComments(t *testing.T) {$/;"	f
TestBadCompile	./regexp/all_test.go	/^func TestBadCompile(t *testing.T) {$/;"	f
TestBadCount	./encoding/gob/encoder_test.go	/^func TestBadCount(t *testing.T) {$/;"	f
TestBadData	./encoding/gob/encoder_test.go	/^func TestBadData(t *testing.T) {$/;"	f
TestBadExpr	./cmd/asm/internal/asm/expr_test.go	/^func TestBadExpr(t *testing.T) {$/;"	f
TestBadImportsEasy	./cmd/go/go_test.go	/^func TestBadImportsEasy(t *testing.T) {$/;"	f
TestBadImportsEasySub	./cmd/go/go_test.go	/^func TestBadImportsEasySub(t *testing.T) {$/;"	f
TestBadImportsGoInstallShouldFail	./cmd/go/go_test.go	/^func TestBadImportsGoInstallShouldFail(t *testing.T) {$/;"	f
TestBadImportsHard	./cmd/go/go_test.go	/^func TestBadImportsHard(t *testing.T) {$/;"	f
TestBadNodes	./go/printer/printer_test.go	/^func TestBadNodes(t *testing.T) {$/;"	f
TestBadOpen	./runtime/runtime_test.go	/^func TestBadOpen(t *testing.T) {$/;"	f
TestBadReader	./bufio/scan_test.go	/^func TestBadReader(t *testing.T) {$/;"	f
TestBadRecursiveType	./encoding/gob/codec_test.go	/^func TestBadRecursiveType(t *testing.T) {$/;"	f
TestBadVerbRecursion	./fmt/fmt_test.go	/^func TestBadVerbRecursion(t *testing.T) {$/;"	f
TestBase	./path/filepath/path_test.go	/^func TestBase(t *testing.T) {$/;"	f
TestBase	./path/path_test.go	/^func TestBase(t *testing.T) {$/;"	f
TestBaseIndent	./go/printer/printer_test.go	/^func TestBaseIndent(t *testing.T) {$/;"	f
TestBaseMult	./crypto/elliptic/elliptic_test.go	/^func TestBaseMult(t *testing.T) {$/;"	f
TestBasic	./encoding/gob/type_test.go	/^func TestBasic(t *testing.T) {$/;"	f
TestBasic	./net/smtp/smtp_test.go	/^func TestBasic(t *testing.T) {$/;"	f
TestBasicAuth	./net/http/client_test.go	/^func TestBasicAuth(t *testing.T) {$/;"	f
TestBasicAuthHeadersPreserved	./net/http/client_test.go	/^func TestBasicAuthHeadersPreserved(t *testing.T) {$/;"	f
TestBasicEncoderDecoder	./encoding/gob/encoder_test.go	/^func TestBasicEncoderDecoder(t *testing.T) {$/;"	f
TestBasicOperations	./bytes/buffer_test.go	/^func TestBasicOperations(t *testing.T) {$/;"	f
TestBasics	./net/http/cookiejar/jar_test.go	/^func TestBasics(t *testing.T) {$/;"	f
TestBeChildCGIProcess	./net/http/cgi/matryoshka_test.go	/^func TestBeChildCGIProcess(t *testing.T) {$/;"	f
TestBenchmark	./go/types/self_test.go	/^func TestBenchmark(t *testing.T) {$/;"	f
TestBig	./encoding/ascii85/ascii85_test.go	/^func TestBig(t *testing.T) {$/;"	f
TestBig	./encoding/base32/base32_test.go	/^func TestBig(t *testing.T) {$/;"	f
TestBig	./encoding/base64/base64_test.go	/^func TestBig(t *testing.T) {$/;"	f
TestBigEndianPtrWrite	./encoding/binary/binary_test.go	/^func TestBigEndianPtrWrite(t *testing.T) { testWrite(t, BigEndian, big, &s) }$/;"	f
TestBigEndianRead	./encoding/binary/binary_test.go	/^func TestBigEndianRead(t *testing.T)     { testRead(t, BigEndian, big, s) }$/;"	f
TestBigEndianWrite	./encoding/binary/binary_test.go	/^func TestBigEndianWrite(t *testing.T)    { testWrite(t, BigEndian, big, s) }$/;"	f
TestBigInt	./encoding/asn1/asn1_test.go	/^type TestBigInt struct {$/;"	t
TestBigItems	./runtime/map_test.go	/^func TestBigItems(t *testing.T) {$/;"	f
TestBigStruct	./reflect/all_test.go	/^func TestBigStruct(t *testing.T) {$/;"	f
TestBigUnnamedStruct	./reflect/all_test.go	/^func TestBigUnnamedStruct(t *testing.T) {$/;"	f
TestBigZero	./reflect/all_test.go	/^func TestBigZero(t *testing.T) {$/;"	f
TestBinomial	./cmd/compile/internal/big/int_test.go	/^func TestBinomial(t *testing.T) {$/;"	f
TestBinomial	./math/big/int_test.go	/^func TestBinomial(t *testing.T) {$/;"	f
TestBit	./cmd/compile/internal/big/nat_test.go	/^func TestBit(t *testing.T) {$/;"	f
TestBit	./math/big/nat_test.go	/^func TestBit(t *testing.T) {$/;"	f
TestBitLen	./cmd/compile/internal/big/int_test.go	/^func TestBitLen(t *testing.T) {$/;"	f
TestBitLen	./math/big/int_test.go	/^func TestBitLen(t *testing.T) {$/;"	f
TestBitReader	./compress/bzip2/bzip2_test.go	/^func TestBitReader(t *testing.T) {$/;"	f
TestBitReaderLarge	./compress/bzip2/bzip2_test.go	/^func TestBitReaderLarge(t *testing.T) {$/;"	f
TestBitSet	./cmd/compile/internal/big/int_test.go	/^func TestBitSet(t *testing.T) {$/;"	f
TestBitSet	./math/big/int_test.go	/^func TestBitSet(t *testing.T) {$/;"	f
TestBitString	./encoding/asn1/asn1_test.go	/^func TestBitString(t *testing.T) {$/;"	f
TestBitStringAt	./encoding/asn1/asn1_test.go	/^func TestBitStringAt(t *testing.T) {$/;"	f
TestBitStringRightAlign	./encoding/asn1/asn1_test.go	/^func TestBitStringRightAlign(t *testing.T) {$/;"	f
TestBits	./cmd/compile/internal/big/int_test.go	/^func TestBits(t *testing.T) {$/;"	f
TestBits	./math/big/int_test.go	/^func TestBits(t *testing.T) {$/;"	f
TestBitwise	./cmd/compile/internal/big/int_test.go	/^func TestBitwise(t *testing.T) {$/;"	f
TestBitwise	./math/big/int_test.go	/^func TestBitwise(t *testing.T) {$/;"	f
TestBlank	./fmt/fmt_test.go	/^func TestBlank(t *testing.T) {$/;"	f
TestBlankFields	./encoding/binary/binary_test.go	/^func TestBlankFields(t *testing.T) {$/;"	f
TestBlankLines	./bufio/scan_test.go	/^func TestBlankLines(t *testing.T) {$/;"	f
TestBlankln	./fmt/fmt_test.go	/^func TestBlankln(t *testing.T) {$/;"	f
TestBlock	./crypto/rc4/rc4_test.go	/^func TestBlock(t *testing.T) {$/;"	f
TestBlockGeneric	./crypto/md5/md5_test.go	/^func TestBlockGeneric(t *testing.T) {$/;"	f
TestBlockGeneric	./crypto/rc4/rc4_test.go	/^func TestBlockGeneric(t *testing.T) {$/;"	f
TestBlockGeneric	./crypto/sha1/sha1_test.go	/^func TestBlockGeneric(t *testing.T) {$/;"	f
TestBlockLocked	./runtime/proc_test.go	/^func TestBlockLocked(t *testing.T) {$/;"	f
TestBlockProfile	./runtime/pprof/pprof_test.go	/^func TestBlockProfile(t *testing.T) {$/;"	f
TestBlockSize	./crypto/sha1/sha1_test.go	/^func TestBlockSize(t *testing.T) {$/;"	f
TestBlockSize	./crypto/sha256/sha256_test.go	/^func TestBlockSize(t *testing.T) {$/;"	f
TestBlockSize	./crypto/sha512/sha512_test.go	/^func TestBlockSize(t *testing.T) {$/;"	f
TestBlocking	./encoding/json/stream_test.go	/^func TestBlocking(t *testing.T) {$/;"	f
TestBlockingCallback	./runtime/syscall_windows_test.go	/^func TestBlockingCallback(t *testing.T) {$/;"	f
TestBlocks	./go/doc/comment_test.go	/^func TestBlocks(t *testing.T) {$/;"	f
TestBodyReadBadTrailer	./net/http/transfer_test.go	/^func TestBodyReadBadTrailer(t *testing.T) {$/;"	f
TestBogusPreboundParameters	./database/sql/sql_test.go	/^func TestBogusPreboundParameters(t *testing.T) {$/;"	f
TestBool	./reflect/all_test.go	/^func TestBool(t *testing.T) {$/;"	f
TestBoolAlias	./testing/quick/quick_test.go	/^type TestBoolAlias bool$/;"	t
TestBoundaryLine	./mime/multipart/multipart_test.go	/^func TestBoundaryLine(t *testing.T) {$/;"	f
TestBounds	./image/gif/reader_test.go	/^func TestBounds(t *testing.T) {$/;"	f
TestBreakpoint	./runtime/crash_test.go	/^func TestBreakpoint(t *testing.T) {$/;"	f
TestBrokenTestsWithoutTestFunctionsAllFail	./cmd/go/go_test.go	/^func TestBrokenTestsWithoutTestFunctionsAllFail(t *testing.T) {$/;"	f
TestBufferFull	./bufio/bufio_test.go	/^func TestBufferFull(t *testing.T) {$/;"	f
TestBufferGrowNegative	./bytes/bytes_test.go	/^func TestBufferGrowNegative(t *testing.T) {$/;"	f
TestBufferGrowth	./bytes/buffer_test.go	/^func TestBufferGrowth(t *testing.T) {$/;"	f
TestBufferOverrun	./compress/bzip2/bzip2_test.go	/^func TestBufferOverrun(t *testing.T) {$/;"	f
TestBufferTooSmall	./encoding/binary/varint_test.go	/^func TestBufferTooSmall(t *testing.T) {$/;"	f
TestBufferTruncateNegative	./bytes/bytes_test.go	/^func TestBufferTruncateNegative(t *testing.T) {$/;"	f
TestBufferTruncateOutOfRange	./bytes/bytes_test.go	/^func TestBufferTruncateOutOfRange(t *testing.T) {$/;"	f
TestBug3486	./path/filepath/path_test.go	/^func TestBug3486(t *testing.T) { \/\/ https:\/\/golang.org\/issue\/3486$/;"	f
TestBuildDashIInstallsDependencies	./cmd/go/go_test.go	/^func TestBuildDashIInstallsDependencies(t *testing.T) {$/;"	f
TestBuilt	./cmd/go/testdata/norunexample/test_test.go	/^func TestBuilt(t *testing.T) {$/;"	f
TestBuiltinSignatures	./go/types/builtins_test.go	/^func TestBuiltinSignatures(t *testing.T) {$/;"	f
TestByteKind	./encoding/json/decode_test.go	/^func TestByteKind(t *testing.T) {$/;"	f
TestByteOwnership	./database/sql/sql_test.go	/^func TestByteOwnership(t *testing.T) {$/;"	f
TestBytes	./cmd/compile/internal/big/int_test.go	/^func TestBytes(t *testing.T) {$/;"	f
TestBytes	./go/constant/value_test.go	/^func TestBytes(t *testing.T) {$/;"	f
TestBytes	./math/big/int_test.go	/^func TestBytes(t *testing.T) {$/;"	f
TestBytes	./reflect/all_test.go	/^func TestBytes(t *testing.T) {$/;"	f
TestCBCDecrypterAES	./crypto/cipher/cbc_aes_test.go	/^func TestCBCDecrypterAES(t *testing.T) {$/;"	f
TestCBCEncrypterAES	./crypto/cipher/cbc_aes_test.go	/^func TestCBCEncrypterAES(t *testing.T) {$/;"	f
TestCDecl	./runtime/syscall_windows_test.go	/^func TestCDecl(t *testing.T) {$/;"	f
TestCFBInverse	./crypto/cipher/cfb_test.go	/^func TestCFBInverse(t *testing.T) {$/;"	f
TestCFBVectors	./crypto/cipher/cfb_test.go	/^func TestCFBVectors(t *testing.T) {$/;"	f
TestCGIBasicGet	./net/http/cgi/host_test.go	/^func TestCGIBasicGet(t *testing.T) {$/;"	f
TestCGIBasicGetAbsPath	./net/http/cgi/host_test.go	/^func TestCGIBasicGetAbsPath(t *testing.T) {$/;"	f
TestCGIBasicPost	./net/http/cgi/host_test.go	/^func TestCGIBasicPost(t *testing.T) {$/;"	f
TestCGIEnvIPv6	./net/http/cgi/host_test.go	/^func TestCGIEnvIPv6(t *testing.T) {$/;"	f
TestCGIPostChunked	./net/http/cgi/host_test.go	/^func TestCGIPostChunked(t *testing.T) {$/;"	f
TestCIDRMask	./net/ip_test.go	/^func TestCIDRMask(t *testing.T) {$/;"	f
TestCMYKGray	./image/color/ycbcr_test.go	/^func TestCMYKGray(t *testing.T) {$/;"	f
TestCMYKRoundtrip	./image/color/ycbcr_test.go	/^func TestCMYKRoundtrip(t *testing.T) {$/;"	f
TestCMYKToRGBConsistency	./image/color/ycbcr_test.go	/^func TestCMYKToRGBConsistency(t *testing.T) {$/;"	f
TestCPUProfile	./runtime/pprof/pprof_test.go	/^func TestCPUProfile(t *testing.T) {$/;"	f
TestCPUProfileMultithreaded	./runtime/pprof/pprof_test.go	/^func TestCPUProfileMultithreaded(t *testing.T) {$/;"	f
TestCPUProfileWithFork	./runtime/pprof/pprof_test.go	/^func TestCPUProfileWithFork(t *testing.T) {$/;"	f
TestCRLCreation	./crypto/x509/x509_test.go	/^func TestCRLCreation(t *testing.T) {$/;"	f
TestCRLF	./cmd/gofmt/gofmt_test.go	/^func TestCRLF(t *testing.T) {$/;"	f
TestCRLWithoutExpiry	./crypto/x509/x509_test.go	/^func TestCRLWithoutExpiry(t *testing.T) {$/;"	f
TestCSSEscaper	./html/template/css_test.go	/^func TestCSSEscaper(t *testing.T) {$/;"	f
TestCSSValueFilter	./html/template/css_test.go	/^func TestCSSValueFilter(t *testing.T) {$/;"	f
TestCTR_AES	./crypto/cipher/ctr_aes_test.go	/^func TestCTR_AES(t *testing.T) {$/;"	f
TestCacheKeys	./net/http/proxy_test.go	/^func TestCacheKeys(t *testing.T) {$/;"	f
TestCalibrate	./cmd/compile/internal/big/calibrate_test.go	/^func TestCalibrate(t *testing.T) {$/;"	f
TestCalibrate	./math/big/calibrate_test.go	/^func TestCalibrate(t *testing.T) {$/;"	f
TestCalibrate	./unicode/letter_test.go	/^func TestCalibrate(t *testing.T) {$/;"	f
TestCallGC	./reflect/all_test.go	/^func TestCallGC(t *testing.T) {$/;"	f
TestCallMethodJump	./reflect/all_test.go	/^func TestCallMethodJump(t *testing.T) {$/;"	f
TestCallWithStruct	./reflect/all_test.go	/^func TestCallWithStruct(t *testing.T) {$/;"	f
TestCallback	./runtime/syscall_windows_test.go	/^func TestCallback(t *testing.T) {$/;"	f
TestCallbackGC	./runtime/syscall_windows_test.go	/^func TestCallbackGC(t *testing.T) {$/;"	f
TestCallbackInAnotherThread	./runtime/syscall_windows_test.go	/^func TestCallbackInAnotherThread(t *testing.T) {$/;"	f
TestCallbackPanic	./runtime/syscall_windows_test.go	/^func TestCallbackPanic(t *testing.T) {$/;"	f
TestCallbackPanicLocked	./runtime/syscall_windows_test.go	/^func TestCallbackPanicLocked(t *testing.T) {$/;"	f
TestCallbackPanicLoop	./runtime/syscall_windows_test.go	/^func TestCallbackPanicLoop(t *testing.T) {$/;"	f
TestCaller	./runtime/symtab_test.go	/^func TestCaller(t *testing.T) {$/;"	f
TestCanBackquote	./strconv/quote_test.go	/^func TestCanBackquote(t *testing.T) {$/;"	f
TestCancelRequestWithChannel	./net/http/transport_test.go	/^func TestCancelRequestWithChannel(t *testing.T) {$/;"	f
TestCancelRequestWithChannelBeforeDo	./net/http/transport_test.go	/^func TestCancelRequestWithChannelBeforeDo(t *testing.T) {$/;"	f
TestCanonicalHost	./net/http/cookiejar/jar_test.go	/^func TestCanonicalHost(t *testing.T) {$/;"	f
TestCanonicalMIMEHeaderKey	./net/textproto/reader_test.go	/^func TestCanonicalMIMEHeaderKey(t *testing.T) {$/;"	f
TestCapWithPreallocatedSlice	./bytes/buffer_test.go	/^func TestCapWithPreallocatedSlice(t *testing.T) {$/;"	f
TestCapWithSliceAndWrittenData	./bytes/buffer_test.go	/^func TestCapWithSliceAndWrittenData(t *testing.T) {$/;"	f
TestCase	./runtime/pprof/pprof_test.go	/^	type TestCase struct {$/;"	t
TestCaseCollisions	./cmd/go/go_test.go	/^func TestCaseCollisions(t *testing.T) {$/;"	f
TestCaseConsistency	./strings/strings_test.go	/^func TestCaseConsistency(t *testing.T) {$/;"	f
TestCaseSensitiveMethod	./net/http/serve_test.go	/^func TestCaseSensitiveMethod(t *testing.T) {$/;"	f
TestCatGoodAndBadFile	./os/exec/exec_test.go	/^func TestCatGoodAndBadFile(t *testing.T) {$/;"	f
TestCatStdin	./os/exec/exec_test.go	/^func TestCatStdin(t *testing.T) {$/;"	f
TestCategories	./unicode/script_test.go	/^func TestCategories(t *testing.T) {$/;"	f
TestCbrt	./math/all_test.go	/^func TestCbrt(t *testing.T) {$/;"	f
TestCeil	./math/all_test.go	/^func TestCeil(t *testing.T) {$/;"	f
TestCertificate	./encoding/asn1/asn1_test.go	/^func TestCertificate(t *testing.T) {$/;"	f
TestCertificateParse	./crypto/x509/x509_test.go	/^func TestCertificateParse(t *testing.T) {$/;"	f
TestCertificateRequestOverrides	./crypto/x509/x509_test.go	/^func TestCertificateRequestOverrides(t *testing.T) {$/;"	f
TestCertificateSelection	./crypto/tls/conn_test.go	/^func TestCertificateSelection(t *testing.T) {$/;"	f
TestCertificateWithNUL	./encoding/asn1/asn1_test.go	/^func TestCertificateWithNUL(t *testing.T) {$/;"	f
TestCgoCallbackGC	./runtime/crash_cgo_test.go	/^func TestCgoCallbackGC(t *testing.T) {$/;"	f
TestCgoCrashHandler	./runtime/crash_cgo_test.go	/^func TestCgoCrashHandler(t *testing.T) {$/;"	f
TestCgoDLLImports	./runtime/crash_cgo_test.go	/^func TestCgoDLLImports(t *testing.T) {$/;"	f
TestCgoDependsOnSyscall	./cmd/go/go_test.go	/^func TestCgoDependsOnSyscall(t *testing.T) {$/;"	f
TestCgoExternalThreadPanic	./runtime/crash_cgo_test.go	/^func TestCgoExternalThreadPanic(t *testing.T) {$/;"	f
TestCgoExternalThreadSIGPROF	./runtime/crash_cgo_test.go	/^func TestCgoExternalThreadSIGPROF(t *testing.T) {$/;"	f
TestCgoExternalThreadSignal	./runtime/crash_cgo_test.go	/^func TestCgoExternalThreadSignal(t *testing.T) {$/;"	f
TestCgoHandlesWlORIGIN	./cmd/go/go_test.go	/^func TestCgoHandlesWlORIGIN(t *testing.T) {$/;"	f
TestCgoLookupIP	./net/cgo_unix_test.go	/^func TestCgoLookupIP(t *testing.T) {$/;"	f
TestCgoShowsFullPathNames	./cmd/go/go_test.go	/^func TestCgoShowsFullPathNames(t *testing.T) {$/;"	f
TestCgoSignalDeadlock	./runtime/crash_cgo_test.go	/^func TestCgoSignalDeadlock(t *testing.T) {$/;"	f
TestCgoTraceback	./runtime/crash_cgo_test.go	/^func TestCgoTraceback(t *testing.T) {$/;"	f
TestChan	./reflect/all_test.go	/^func TestChan(t *testing.T) {$/;"	f
TestChan	./runtime/chan_test.go	/^func TestChan(t *testing.T) {$/;"	f
TestChanFuncIgnored	./encoding/gob/encoder_test.go	/^func TestChanFuncIgnored(t *testing.T) {$/;"	f
TestChanOf	./reflect/all_test.go	/^func TestChanOf(t *testing.T) {$/;"	f
TestChanOfDir	./reflect/all_test.go	/^func TestChanOfDir(t *testing.T) {$/;"	f
TestChanOfGC	./reflect/all_test.go	/^func TestChanOfGC(t *testing.T) {$/;"	f
TestChanSendBarrier	./runtime/chanbarrier_test.go	/^func TestChanSendBarrier(t *testing.T) {$/;"	f
TestChanSendInterface	./runtime/chan_test.go	/^func TestChanSendInterface(t *testing.T) {$/;"	f
TestChanSendSelectBarrier	./runtime/chanbarrier_test.go	/^func TestChanSendSelectBarrier(t *testing.T) {$/;"	f
TestChangingArgs	./flag/flag_test.go	/^func TestChangingArgs(t *testing.T) {$/;"	f
TestCharsetDecoder	./mime/encodedword_test.go	/^func TestCharsetDecoder(t *testing.T) {$/;"	f
TestCharsetDecoderError	./mime/encodedword_test.go	/^func TestCharsetDecoderError(t *testing.T) {$/;"	f
TestChdirAndGetwd	./os/os_test.go	/^func TestChdirAndGetwd(t *testing.T) {$/;"	f
TestCheck	./go/types/check_test.go	/^func TestCheck(t *testing.T) {$/;"	f
TestCheckEqual	./testing/quick/quick_test.go	/^func TestCheckEqual(t *testing.T) {$/;"	f
TestCheckProperty	./testing/quick/quick_test.go	/^func TestCheckProperty(t *testing.T) {$/;"	f
TestChildOnlyHeaders	./net/http/cgi/matryoshka_test.go	/^func TestChildOnlyHeaders(t *testing.T) {$/;"	f
TestChildServeCleansUp	./net/http/fcgi/fcgi_test.go	/^func TestChildServeCleansUp(t *testing.T) {$/;"	f
TestChildrenCanMatchPattern	./cmd/go/match_test.go	/^func TestChildrenCanMatchPattern(t *testing.T) {$/;"	f
TestChmod	./os/os_test.go	/^func TestChmod(t *testing.T) {$/;"	f
TestChown	./os/os_unix_test.go	/^func TestChown(t *testing.T) {$/;"	f
TestChromiumBasics	./net/http/cookiejar/jar_test.go	/^func TestChromiumBasics(t *testing.T) {$/;"	f
TestChromiumDeletion	./net/http/cookiejar/jar_test.go	/^func TestChromiumDeletion(t *testing.T) {$/;"	f
TestChromiumDomain	./net/http/cookiejar/jar_test.go	/^func TestChromiumDomain(t *testing.T) {$/;"	f
TestChtimes	./os/os_test.go	/^func TestChtimes(t *testing.T) {$/;"	f
TestChtimesDir	./os/os_test.go	/^func TestChtimesDir(t *testing.T) {$/;"	f
TestChunk	./net/http/internal/chunked_test.go	/^func TestChunk(t *testing.T) {$/;"	f
TestChunkReadMultiple	./net/http/internal/chunked_test.go	/^func TestChunkReadMultiple(t *testing.T) {$/;"	f
TestChunkReaderAllocs	./net/http/internal/chunked_test.go	/^func TestChunkReaderAllocs(t *testing.T) {$/;"	f
TestChunkedNoContent	./net/http/transport_test.go	/^func TestChunkedNoContent(t *testing.T) {$/;"	f
TestChunkedResponseHeaders	./net/http/serve_test.go	/^func TestChunkedResponseHeaders(t *testing.T) {$/;"	f
TestCipherDecrypt	./crypto/aes/aes_test.go	/^func TestCipherDecrypt(t *testing.T) {$/;"	f
TestCipherEncrypt	./crypto/aes/aes_test.go	/^func TestCipherEncrypt(t *testing.T) {$/;"	f
TestCipherSuiteCertPreferenceECDSA	./crypto/tls/handshake_server_test.go	/^func TestCipherSuiteCertPreferenceECDSA(t *testing.T) {$/;"	f
TestCipherSuitePreference	./crypto/tls/handshake_server_test.go	/^func TestCipherSuitePreference(t *testing.T) {$/;"	f
TestClean	./path/filepath/path_test.go	/^func TestClean(t *testing.T) {$/;"	f
TestClean	./path/path_test.go	/^func TestClean(t *testing.T) {$/;"	f
TestCleanHost	./net/http/http_test.go	/^func TestCleanHost(t *testing.T) {$/;"	f
TestCleanMallocs	./path/path_test.go	/^func TestCleanMallocs(t *testing.T) {$/;"	f
TestClient	./net/http/client_test.go	/^func TestClient(t *testing.T) {$/;"	f
TestClient	./net/rpc/jsonrpc/all_test.go	/^func TestClient(t *testing.T) {$/;"	f
TestClientAuth	./crypto/tls/handshake_server_test.go	/^func TestClientAuth(t *testing.T) {$/;"	f
TestClientCanClose	./net/http/serve_test.go	/^func TestClientCanClose(t *testing.T) {$/;"	f
TestClientErrorWithRequestURI	./net/http/client_test.go	/^func TestClientErrorWithRequestURI(t *testing.T) {$/;"	f
TestClientHead	./net/http/client_test.go	/^func TestClientHead(t *testing.T) {$/;"	f
TestClientHeadContentLength	./net/http/client_test.go	/^func TestClientHeadContentLength(t *testing.T) {$/;"	f
TestClientInsecureTransport	./net/http/client_test.go	/^func TestClientInsecureTransport(t *testing.T) {$/;"	f
TestClientRedirectEatsBody	./net/http/client_test.go	/^func TestClientRedirectEatsBody(t *testing.T) {$/;"	f
TestClientRedirects	./net/http/client_test.go	/^func TestClientRedirects(t *testing.T) {$/;"	f
TestClientResumption	./crypto/tls/handshake_client_test.go	/^func TestClientResumption(t *testing.T) {$/;"	f
TestClientSendsCookieFromJar	./net/http/client_test.go	/^func TestClientSendsCookieFromJar(t *testing.T) {$/;"	f
TestClientTimeout	./net/http/client_test.go	/^func TestClientTimeout(t *testing.T) {$/;"	f
TestClientTimeout_Headers	./net/http/client_test.go	/^func TestClientTimeout_Headers(t *testing.T) {$/;"	f
TestClientTrailers	./net/http/client_test.go	/^func TestClientTrailers(t *testing.T) {$/;"	f
TestClientWithCorrectTLSServerName	./net/http/client_test.go	/^func TestClientWithCorrectTLSServerName(t *testing.T) {$/;"	f
TestClientWithIncorrectTLSServerName	./net/http/client_test.go	/^func TestClientWithIncorrectTLSServerName(t *testing.T) {$/;"	f
TestClientWriteError	./net/rpc/server_test.go	/^func TestClientWriteError(t *testing.T) {$/;"	f
TestClientWriteShutdown	./net/http/serve_test.go	/^func TestClientWriteShutdown(t *testing.T) {$/;"	f
TestClientWrites	./net/http/client_test.go	/^func TestClientWrites(t *testing.T) {$/;"	f
TestClip	./image/draw/clip_test.go	/^func TestClip(t *testing.T) {$/;"	f
TestClone	./html/template/clone_test.go	/^func TestClone(t *testing.T) {$/;"	f
TestClone	./text/template/multi_test.go	/^func TestClone(t *testing.T) {$/;"	f
TestCloneCrash	./html/template/clone_test.go	/^func TestCloneCrash(t *testing.T) {$/;"	f
TestCloneNEWUSERAndRemapNoRootDisableSetgroups	./syscall/exec_linux_test.go	/^func TestCloneNEWUSERAndRemapNoRootDisableSetgroups(t *testing.T) {$/;"	f
TestCloneNEWUSERAndRemapNoRootSetgroupsEnableSetgroups	./syscall/exec_linux_test.go	/^func TestCloneNEWUSERAndRemapNoRootSetgroupsEnableSetgroups(t *testing.T) {$/;"	f
TestCloneNEWUSERAndRemapRootDisableSetgroups	./syscall/exec_linux_test.go	/^func TestCloneNEWUSERAndRemapRootDisableSetgroups(t *testing.T) {$/;"	f
TestCloneNEWUSERAndRemapRootEnableSetgroups	./syscall/exec_linux_test.go	/^func TestCloneNEWUSERAndRemapRootEnableSetgroups(t *testing.T) {$/;"	f
TestCloneThenParse	./html/template/clone_test.go	/^func TestCloneThenParse(t *testing.T) {$/;"	f
TestClose	./crypto/tls/handshake_server_test.go	/^func TestClose(t *testing.T) {$/;"	f
TestCloseCodec	./net/rpc/client_test.go	/^func TestCloseCodec(t *testing.T) {$/;"	f
TestCloseConnBeforeStmts	./database/sql/sql_test.go	/^func TestCloseConnBeforeStmts(t *testing.T) {$/;"	f
TestCloseError	./net/error_test.go	/^func TestCloseError(t *testing.T) {$/;"	f
TestCloseNotifier	./net/http/serve_test.go	/^func TestCloseNotifier(t *testing.T) {$/;"	f
TestCloseNotifierChanLeak	./net/http/serve_test.go	/^func TestCloseNotifierChanLeak(t *testing.T) {$/;"	f
TestClosePipeOnCopyError	./os/exec/exec_test.go	/^func TestClosePipeOnCopyError(t *testing.T) {$/;"	f
TestCloseRead	./net/net_test.go	/^func TestCloseRead(t *testing.T) {$/;"	f
TestCloseStmtBeforeRows	./database/sql/sql_test.go	/^func TestCloseStmtBeforeRows(t *testing.T) {$/;"	f
TestCloseWrite	./net/http/serve_test.go	/^func TestCloseWrite(t *testing.T) {$/;"	f
TestCloseWrite	./net/net_test.go	/^func TestCloseWrite(t *testing.T) {$/;"	f
TestCmp	./cmd/compile/internal/big/nat_test.go	/^func TestCmp(t *testing.T) {$/;"	f
TestCmp	./math/big/nat_test.go	/^func TestCmp(t *testing.T) {$/;"	f
TestCmpIfaceConcreteAlloc	./runtime/iface_test.go	/^func TestCmpIfaceConcreteAlloc(t *testing.T) {$/;"	f
TestCodesPreventingContentTypeAndBody	./net/http/serve_test.go	/^func TestCodesPreventingContentTypeAndBody(t *testing.T) {$/;"	f
TestColonEqualsScope	./go/parser/parser_test.go	/^func TestColonEqualsScope(t *testing.T) {$/;"	f
TestCommand	./os/exec/lp_windows_test.go	/^func TestCommand(t *testing.T) {$/;"	f
TestCommandRelativeName	./os/exec/exec_test.go	/^func TestCommandRelativeName(t *testing.T) {$/;"	f
TestCommentGroups	./go/parser/parser_test.go	/^func TestCommentGroups(t *testing.T) {$/;"	f
TestCommentMap	./go/ast/commentmap_test.go	/^func TestCommentMap(t *testing.T) {$/;"	f
TestCommentText	./go/ast/ast_test.go	/^func TestCommentText(t *testing.T) {$/;"	f
TestCommonHeaders	./net/textproto/reader_test.go	/^func TestCommonHeaders(t *testing.T) {$/;"	f
TestCompact	./encoding/json/scanner_test.go	/^func TestCompact(t *testing.T) {$/;"	f
TestCompactBig	./encoding/json/scanner_test.go	/^func TestCompactBig(t *testing.T) {$/;"	f
TestCompactSeparators	./encoding/json/scanner_test.go	/^func TestCompactSeparators(t *testing.T) {$/;"	f
TestComparable	./reflect/all_test.go	/^func TestComparable(t *testing.T) {$/;"	f
TestCompare	./bytes/compare_test.go	/^func TestCompare(t *testing.T) {$/;"	f
TestCompare	./strings/compare_test.go	/^func TestCompare(t *testing.T) {$/;"	f
TestCompareAPI	./cmd/api/goapi_test.go	/^func TestCompareAPI(t *testing.T) {$/;"	f
TestCompareAndSwapInt32	./sync/atomic/atomic_test.go	/^func TestCompareAndSwapInt32(t *testing.T) {$/;"	f
TestCompareAndSwapInt64	./sync/atomic/atomic_test.go	/^func TestCompareAndSwapInt64(t *testing.T) {$/;"	f
TestCompareAndSwapPointer	./sync/atomic/atomic_test.go	/^func TestCompareAndSwapPointer(t *testing.T) {$/;"	f
TestCompareAndSwapUint32	./sync/atomic/atomic_test.go	/^func TestCompareAndSwapUint32(t *testing.T) {$/;"	f
TestCompareAndSwapUint64	./sync/atomic/atomic_test.go	/^func TestCompareAndSwapUint64(t *testing.T) {$/;"	f
TestCompareAndSwapUintptr	./sync/atomic/atomic_test.go	/^func TestCompareAndSwapUintptr(t *testing.T) {$/;"	f
TestCompareBytes	./bytes/compare_test.go	/^func TestCompareBytes(t *testing.T) {$/;"	f
TestCompareIdenticalSlice	./bytes/compare_test.go	/^func TestCompareIdenticalSlice(t *testing.T) {$/;"	f
TestCompareIdenticalString	./strings/compare_test.go	/^func TestCompareIdenticalString(t *testing.T) {$/;"	f
TestCompareStrings	./strings/compare_test.go	/^func TestCompareStrings(t *testing.T) {$/;"	f
TestCompareTempString	./runtime/string_test.go	/^func TestCompareTempString(t *testing.T) {$/;"	f
TestComparison	./text/template/exec_test.go	/^func TestComparison(t *testing.T) {$/;"	f
TestCompile	./regexp/syntax/prog_test.go	/^func TestCompile(t *testing.T) {$/;"	f
TestCompileOnePass	./regexp/onepass_test.go	/^func TestCompileOnePass(t *testing.T) {$/;"	f
TestComplex128Alias	./testing/quick/quick_test.go	/^type TestComplex128Alias complex128$/;"	t
TestComplex64Alias	./testing/quick/quick_test.go	/^type TestComplex64Alias complex64$/;"	t
TestComplexFormatting	./fmt/fmt_test.go	/^func TestComplexFormatting(t *testing.T) {$/;"	f
TestConcat	./compress/bzip2/bzip2_test.go	/^func TestConcat(t *testing.T) {$/;"	f
TestConcat	./compress/gzip/gzip_test.go	/^func TestConcat(t *testing.T) {$/;"	f
TestConcurrency	./database/sql/sql_test.go	/^func TestConcurrency(t *testing.T) {$/;"	f
TestConcurrentReadsAfterGrowth	./runtime/map_test.go	/^func TestConcurrentReadsAfterGrowth(t *testing.T) {$/;"	f
TestConcurrentReadsAfterGrowthReflect	./runtime/map_test.go	/^func TestConcurrentReadsAfterGrowthReflect(t *testing.T) {$/;"	f
TestConcurrentReconnect	./log/syslog/syslog_test.go	/^func TestConcurrentReconnect(t *testing.T) {$/;"	f
TestConcurrentWrite	./log/syslog/syslog_test.go	/^func TestConcurrentWrite(t *testing.T) {$/;"	f
TestCondBroadcast	./sync/cond_test.go	/^func TestCondBroadcast(t *testing.T) {$/;"	f
TestCondCopy	./sync/cond_test.go	/^func TestCondCopy(t *testing.T) {$/;"	f
TestCondSignal	./sync/cond_test.go	/^func TestCondSignal(t *testing.T) {$/;"	f
TestCondSignalGenerations	./sync/cond_test.go	/^func TestCondSignalGenerations(t *testing.T) {$/;"	f
TestConfHostLookupOrder	./net/conf_test.go	/^func TestConfHostLookupOrder(t *testing.T) {$/;"	f
TestConj	./math/cmplx/cmath_test.go	/^func TestConj(t *testing.T) {$/;"	f
TestConnAndListener	./net/conn_test.go	/^func TestConnAndListener(t *testing.T) {$/;"	f
TestConnAndPacketConn	./net/packetconn_test.go	/^func TestConnAndPacketConn(t *testing.T) {$/;"	f
TestConnClose	./net/net_test.go	/^func TestConnClose(t *testing.T) {$/;"	f
TestConnReadNonzeroAndEOF	./crypto/tls/tls_test.go	/^func TestConnReadNonzeroAndEOF(t *testing.T) {$/;"	f
TestConnectionLeak	./database/sql/sql_test.go	/^func TestConnectionLeak(t *testing.T) {$/;"	f
TestConsistentEnviron	./os/env_test.go	/^func TestConsistentEnviron(t *testing.T) {$/;"	f
TestConstantTimeByteEq	./crypto/subtle/constant_time_test.go	/^func TestConstantTimeByteEq(t *testing.T) {$/;"	f
TestConstantTimeByteEqStruct	./crypto/subtle/constant_time_test.go	/^type TestConstantTimeByteEqStruct struct {$/;"	t
TestConstantTimeCompare	./crypto/subtle/constant_time_test.go	/^func TestConstantTimeCompare(t *testing.T) {$/;"	f
TestConstantTimeCompareStruct	./crypto/subtle/constant_time_test.go	/^type TestConstantTimeCompareStruct struct {$/;"	t
TestConstantTimeCopy	./crypto/subtle/constant_time_test.go	/^func TestConstantTimeCopy(t *testing.T) {$/;"	f
TestConstantTimeEq	./crypto/subtle/constant_time_test.go	/^func TestConstantTimeEq(t *testing.T) {$/;"	f
TestConstantTimeLessOrEq	./crypto/subtle/constant_time_test.go	/^func TestConstantTimeLessOrEq(t *testing.T) {$/;"	f
TestConstants	./encoding/binary/varint_test.go	/^func TestConstants(t *testing.T) {$/;"	f
TestConstants	./unicode/utf16/utf16_test.go	/^func TestConstants(t *testing.T) {$/;"	f
TestConstants	./unicode/utf8/utf8_test.go	/^func TestConstants(t *testing.T) {$/;"	f
TestConsumeMediaParam	./mime/mediatype_test.go	/^func TestConsumeMediaParam(t *testing.T) {$/;"	f
TestConsumeToken	./mime/mediatype_test.go	/^func TestConsumeToken(t *testing.T) {$/;"	f
TestConsumeValue	./mime/mediatype_test.go	/^func TestConsumeValue(t *testing.T) {$/;"	f
TestConsumingBodyOnNextConn	./net/http/serve_test.go	/^func TestConsumingBodyOnNextConn(t *testing.T) {$/;"	f
TestContains	./bytes/bytes_test.go	/^func TestContains(t *testing.T) {$/;"	f
TestContains	./strings/strings_test.go	/^func TestContains(t *testing.T) {$/;"	f
TestContainsAny	./strings/strings_test.go	/^func TestContainsAny(t *testing.T) {$/;"	f
TestContainsRune	./strings/strings_test.go	/^func TestContainsRune(t *testing.T) {$/;"	f
TestContentLengthZero	./net/http/serve_test.go	/^func TestContentLengthZero(t *testing.T) {$/;"	f
TestContentTypeOkayOn204	./net/http/serve_test.go	/^func TestContentTypeOkayOn204(t *testing.T) {$/;"	f
TestContentTypeWithCopy	./net/http/sniff_test.go	/^func TestContentTypeWithCopy(t *testing.T) {$/;"	f
TestContextSpecificTags	./encoding/asn1/asn1_test.go	/^type TestContextSpecificTags struct {$/;"	t
TestContextSpecificTags2	./encoding/asn1/asn1_test.go	/^type TestContextSpecificTags2 struct {$/;"	t
TestContextSpecificTags3	./encoding/asn1/asn1_test.go	/^type TestContextSpecificTags3 struct {$/;"	t
TestConversions	./database/sql/convert_test.go	/^func TestConversions(t *testing.T) {$/;"	f
TestConvert	./reflect/all_test.go	/^func TestConvert(t *testing.T) {$/;"	f
TestCookieSanitizePath	./net/http/cookie_test.go	/^func TestCookieSanitizePath(t *testing.T) {$/;"	f
TestCookieSanitizeValue	./net/http/cookie_test.go	/^func TestCookieSanitizeValue(t *testing.T) {$/;"	f
TestCopy	./io/io_test.go	/^func TestCopy(t *testing.T) {$/;"	f
TestCopy	./reflect/all_test.go	/^func TestCopy(t *testing.T) {$/;"	f
TestCopyArray	./reflect/all_test.go	/^func TestCopyArray(t *testing.T) {$/;"	f
TestCopyBuffer	./io/io_test.go	/^func TestCopyBuffer(t *testing.T) {$/;"	f
TestCopyBufferNil	./io/io_test.go	/^func TestCopyBufferNil(t *testing.T) {$/;"	f
TestCopyError	./net/http/cgi/host_test.go	/^func TestCopyError(t *testing.T) {$/;"	f
TestCopyN	./io/io_test.go	/^func TestCopyN(t *testing.T) {$/;"	f
TestCopyNEOF	./io/io_test.go	/^func TestCopyNEOF(t *testing.T) {$/;"	f
TestCopyNReadFrom	./io/io_test.go	/^func TestCopyNReadFrom(t *testing.T) {$/;"	f
TestCopyNWriteTo	./io/io_test.go	/^func TestCopyNWriteTo(t *testing.T) {$/;"	f
TestCopyPriority	./io/io_test.go	/^func TestCopyPriority(t *testing.T) {$/;"	f
TestCopyReadErrWriteErr	./io/io_test.go	/^func TestCopyReadErrWriteErr(t *testing.T) {$/;"	f
TestCopyReadFrom	./io/io_test.go	/^func TestCopyReadFrom(t *testing.T) {$/;"	f
TestCopyTokenCharData	./encoding/xml/xml_test.go	/^func TestCopyTokenCharData(t *testing.T) {$/;"	f
TestCopyTokenStartElement	./encoding/xml/xml_test.go	/^func TestCopyTokenStartElement(t *testing.T) {$/;"	f
TestCopyWriteTo	./io/io_test.go	/^func TestCopyWriteTo(t *testing.T) {$/;"	f
TestCopysign	./math/all_test.go	/^func TestCopysign(t *testing.T) {$/;"	f
TestCornerCases	./container/ring/ring_test.go	/^func TestCornerCases(t *testing.T) {$/;"	f
TestCorrectMethodPackage	./go/internal/gcimporter/gcimporter_test.go	/^func TestCorrectMethodPackage(t *testing.T) {$/;"	f
TestCorruptedInputs	./internal/trace/parser_test.go	/^func TestCorruptedInputs(t *testing.T) {$/;"	f
TestCos	./math/all_test.go	/^func TestCos(t *testing.T) {$/;"	f
TestCos	./math/cmplx/cmath_test.go	/^func TestCos(t *testing.T) {$/;"	f
TestCosh	./math/all_test.go	/^func TestCosh(t *testing.T) {$/;"	f
TestCosh	./math/cmplx/cmath_test.go	/^func TestCosh(t *testing.T) {$/;"	f
TestCount	./strings/strings_test.go	/^func TestCount(t *testing.T) {$/;"	f
TestCountDecodeMallocs	./encoding/gob/timing_test.go	/^func TestCountDecodeMallocs(t *testing.T) {$/;"	f
TestCountEncodeMallocs	./encoding/gob/timing_test.go	/^func TestCountEncodeMallocs(t *testing.T) {$/;"	f
TestCountMallocs	./fmt/fmt_test.go	/^func TestCountMallocs(t *testing.T) {$/;"	f
TestCountMallocs	./net/rpc/server_test.go	/^func TestCountMallocs(t *testing.T) {$/;"	f
TestCountMallocs	./strconv/strconv_test.go	/^func TestCountMallocs(t *testing.T) {$/;"	f
TestCountMallocs	./time/time_test.go	/^func TestCountMallocs(t *testing.T) {$/;"	f
TestCountMallocsOverHTTP	./net/rpc/server_test.go	/^func TestCountMallocsOverHTTP(t *testing.T) {$/;"	f
TestCountSortOps	./sort/sort_test.go	/^func TestCountSortOps(t *testing.T)   { countOps(t, Sort, "Sort  ") }$/;"	f
TestCountStableOps	./sort/sort_test.go	/^func TestCountStableOps(t *testing.T) { countOps(t, Stable, "Stable") }$/;"	f
TestCover	./cmd/cover/cover_test.go	/^func TestCover(t *testing.T) {$/;"	f
TestCoverageRuns	./cmd/go/go_test.go	/^func TestCoverageRuns(t *testing.T) {$/;"	f
TestCoverageUsesActualSettingToOverrideEvenForRace	./cmd/go/go_test.go	/^func TestCoverageUsesActualSettingToOverrideEvenForRace(t *testing.T) {$/;"	f
TestCoverageUsesAtomicModeForRace	./cmd/go/go_test.go	/^func TestCoverageUsesAtomicModeForRace(t *testing.T) {$/;"	f
TestCoverageUsesSetMode	./cmd/go/go_test.go	/^func TestCoverageUsesSetMode(t *testing.T) {$/;"	f
TestCoverageWithCgo	./cmd/go/go_test.go	/^func TestCoverageWithCgo(t *testing.T) {$/;"	f
TestCrashDumpsAllThreads	./runtime/crash_unix_test.go	/^func TestCrashDumpsAllThreads(t *testing.T) {$/;"	f
TestCrashHandler	./runtime/crash_test.go	/^func TestCrashHandler(t *testing.T) {$/;"	f
TestCreate	./cmd/pack/pack_test.go	/^func TestCreate(t *testing.T) {$/;"	f
TestCreateCertificateRequest	./crypto/x509/x509_test.go	/^func TestCreateCertificateRequest(t *testing.T) {$/;"	f
TestCreateOpenDeleteKey	./internal/syscall/windows/registry/registry_test.go	/^func TestCreateOpenDeleteKey(t *testing.T) {$/;"	f
TestCreateSelfSignedCertificate	./crypto/x509/x509_test.go	/^func TestCreateSelfSignedCertificate(t *testing.T) {$/;"	f
TestCreateTwice	./cmd/pack/pack_test.go	/^func TestCreateTwice(t *testing.T) {$/;"	f
TestCryptBlocks	./crypto/cipher/cipher_test.go	/^func TestCryptBlocks(t *testing.T) {$/;"	f
TestCtrlBreak	./os/signal/signal_windows_test.go	/^func TestCtrlBreak(t *testing.T) {$/;"	f
TestCurrent	./os/user/user_test.go	/^func TestCurrent(t *testing.T) {$/;"	f
TestDCT	./image/jpeg/dct_test.go	/^func TestDCT(t *testing.T) {$/;"	f
TestDESDecryptBlock	./crypto/des/des_test.go	/^func TestDESDecryptBlock(t *testing.T) {$/;"	f
TestDESEncryptBlock	./crypto/des/des_test.go	/^func TestDESEncryptBlock(t *testing.T) {$/;"	f
TestDNSName	./net/dnsname_test.go	/^func TestDNSName(t *testing.T) {$/;"	f
TestDNSParseCorruptSRVReply	./net/dnsmsg_test.go	/^func TestDNSParseCorruptSRVReply(t *testing.T) {$/;"	f
TestDNSParseSRVReply	./net/dnsmsg_test.go	/^func TestDNSParseSRVReply(t *testing.T) {$/;"	f
TestDNSParseTXTCorruptDataLengthReply	./net/dnsmsg_test.go	/^func TestDNSParseTXTCorruptDataLengthReply(t *testing.T) {$/;"	f
TestDNSParseTXTCorruptTXTLengthReply	./net/dnsmsg_test.go	/^func TestDNSParseTXTCorruptTXTLengthReply(t *testing.T) {$/;"	f
TestDNSParseTXTReply	./net/dnsmsg_test.go	/^func TestDNSParseTXTReply(t *testing.T) {$/;"	f
TestDNSReadConfig	./net/dnsconfig_unix_test.go	/^func TestDNSReadConfig(t *testing.T) {$/;"	f
TestDNSReadMissingFile	./net/dnsconfig_unix_test.go	/^func TestDNSReadMissingFile(t *testing.T) {$/;"	f
TestDNSSRVUniformity	./net/dnsclient_test.go	/^func TestDNSSRVUniformity(t *testing.T) {$/;"	f
TestDNSTransportFallback	./net/dnsclient_unix_test.go	/^func TestDNSTransportFallback(t *testing.T) {$/;"	f
TestDWARF	./debug/pe/file_test.go	/^func TestDWARF(t *testing.T) {$/;"	f
TestDWARFRelocations	./debug/elf/file_test.go	/^func TestDWARFRelocations(t *testing.T) {$/;"	f
TestDate	./time/time_test.go	/^func TestDate(t *testing.T) {$/;"	f
TestDateParsing	./net/mail/message_test.go	/^func TestDateParsing(t *testing.T) {$/;"	f
TestDaysIn	./time/time_test.go	/^func TestDaysIn(t *testing.T) {$/;"	f
TestDebugSingleton	./encoding/gob/codec_test.go	/^func TestDebugSingleton(t *testing.T) {$/;"	f
TestDebugStruct	./encoding/gob/codec_test.go	/^func TestDebugStruct(t *testing.T) {$/;"	f
TestDecimalInit	./cmd/compile/internal/big/decimal_test.go	/^func TestDecimalInit(t *testing.T) {$/;"	f
TestDecimalInit	./math/big/decimal_test.go	/^func TestDecimalInit(t *testing.T) {$/;"	f
TestDecimalRound	./strconv/decimal_test.go	/^func TestDecimalRound(t *testing.T) {$/;"	f
TestDecimalRoundedInteger	./strconv/decimal_test.go	/^func TestDecimalRoundedInteger(t *testing.T) {$/;"	f
TestDecimalRounding	./cmd/compile/internal/big/decimal_test.go	/^func TestDecimalRounding(t *testing.T) {$/;"	f
TestDecimalRounding	./math/big/decimal_test.go	/^func TestDecimalRounding(t *testing.T) {$/;"	f
TestDecimalShift	./strconv/decimal_test.go	/^func TestDecimalShift(t *testing.T) {$/;"	f
TestDecimalString	./cmd/compile/internal/big/decimal_test.go	/^func TestDecimalString(t *testing.T) {$/;"	f
TestDecimalString	./math/big/decimal_test.go	/^func TestDecimalString(t *testing.T) {$/;"	f
TestDeclLists	./go/printer/printer_test.go	/^func TestDeclLists(t *testing.T) {$/;"	f
TestDecode	./cmd/internal/rsc.io/arm/armasm/decode_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./cmd/internal/rsc.io/x86/x86asm/decode_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./encoding/ascii85/ascii85_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./encoding/base32/base32_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./encoding/base64/base64_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./encoding/hex/hex_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./encoding/pem/pem_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./image/decode_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./image/gif/reader_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecode	./unicode/utf16/utf16_test.go	/^func TestDecode(t *testing.T) {$/;"	f
TestDecodeCSS	./html/template/css_test.go	/^func TestDecodeCSS(t *testing.T) {$/;"	f
TestDecodeCorrupt	./encoding/ascii85/ascii85_test.go	/^func TestDecodeCorrupt(t *testing.T) {$/;"	f
TestDecodeCorrupt	./encoding/base32/base32_test.go	/^func TestDecodeCorrupt(t *testing.T) {$/;"	f
TestDecodeCorrupt	./encoding/base64/base64_test.go	/^func TestDecodeCorrupt(t *testing.T) {$/;"	f
TestDecodeEOF	./image/jpeg/reader_test.go	/^func TestDecodeEOF(t *testing.T) {$/;"	f
TestDecodeEncode	./encoding/xml/marshal_test.go	/^func TestDecodeEncode(t *testing.T) {$/;"	f
TestDecodeHeader	./mime/encodedword_test.go	/^func TestDecodeHeader(t *testing.T) {$/;"	f
TestDecodeInStream	./encoding/json/stream_test.go	/^func TestDecodeInStream(t *testing.T) {$/;"	f
TestDecodeIntoNothing	./encoding/gob/encoder_test.go	/^func TestDecodeIntoNothing(t *testing.T) {$/;"	f
TestDecodeProgressive	./image/jpeg/reader_test.go	/^func TestDecodeProgressive(t *testing.T) {$/;"	f
TestDecodeRune	./unicode/utf16/utf16_test.go	/^func TestDecodeRune(t *testing.T) {$/;"	f
TestDecodeRune	./unicode/utf8/utf8_test.go	/^func TestDecodeRune(t *testing.T) {$/;"	f
TestDecodeString	./encoding/hex/hex_test.go	/^func TestDecodeString(t *testing.T) {$/;"	f
TestDecodeSurrogateRune	./unicode/utf8/utf8_test.go	/^func TestDecodeSurrogateRune(t *testing.T) {$/;"	f
TestDecodeWord	./mime/encodedword_test.go	/^func TestDecodeWord(t *testing.T) {$/;"	f
TestDecoder	./encoding/ascii85/ascii85_test.go	/^func TestDecoder(t *testing.T) {$/;"	f
TestDecoder	./encoding/base32/base32_test.go	/^func TestDecoder(t *testing.T) {$/;"	f
TestDecoder	./encoding/base64/base64_test.go	/^func TestDecoder(t *testing.T) {$/;"	f
TestDecoder	./encoding/json/stream_test.go	/^func TestDecoder(t *testing.T) {$/;"	f
TestDecoderBuffered	./encoding/json/stream_test.go	/^func TestDecoderBuffered(t *testing.T) {$/;"	f
TestDecoderBuffering	./encoding/ascii85/ascii85_test.go	/^func TestDecoderBuffering(t *testing.T) {$/;"	f
TestDecoderBuffering	./encoding/base32/base32_test.go	/^func TestDecoderBuffering(t *testing.T) {$/;"	f
TestDecoderBuffering	./encoding/base64/base64_test.go	/^func TestDecoderBuffering(t *testing.T) {$/;"	f
TestDecoderInternalWhitespace	./encoding/ascii85/ascii85_test.go	/^func TestDecoderInternalWhitespace(t *testing.T) {$/;"	f
TestDecoderIssue3577	./encoding/base64/base64_test.go	/^func TestDecoderIssue3577(t *testing.T) {$/;"	f
TestDecoderIssue4779	./encoding/base32/base32_test.go	/^func TestDecoderIssue4779(t *testing.T) {$/;"	f
TestDecoderIssue4779	./encoding/base64/base64_test.go	/^func TestDecoderIssue4779(t *testing.T) {$/;"	f
TestDecoderIssue7733	./encoding/base64/base64_test.go	/^func TestDecoderIssue7733(t *testing.T) {$/;"	f
TestDecompressor	./compress/gzip/gunzip_test.go	/^func TestDecompressor(t *testing.T) {$/;"	f
TestDecompressor	./compress/zlib/reader_test.go	/^func TestDecompressor(t *testing.T) {$/;"	f
TestDecrypt	./crypto/x509/pem_decrypt_test.go	/^func TestDecrypt(t *testing.T) {$/;"	f
TestDecryptBlock	./crypto/aes/aes_test.go	/^func TestDecryptBlock(t *testing.T) {$/;"	f
TestDecryptOAEP	./crypto/rsa/rsa_test.go	/^func TestDecryptOAEP(t *testing.T) {$/;"	f
TestDecryptPKCS1v15	./crypto/rsa/pkcs1v15_test.go	/^func TestDecryptPKCS1v15(t *testing.T) {$/;"	f
TestDecryptTripleDES	./crypto/des/des_test.go	/^func TestDecryptTripleDES(t *testing.T) {$/;"	f
TestDeepEqual	./reflect/all_test.go	/^func TestDeepEqual(t *testing.T) {$/;"	f
TestDeepEqualComplexStruct	./reflect/all_test.go	/^func TestDeepEqualComplexStruct(t *testing.T) {$/;"	f
TestDeepEqualComplexStructInequality	./reflect/all_test.go	/^func TestDeepEqualComplexStructInequality(t *testing.T) {$/;"	f
TestDeepEqualRecursiveStruct	./reflect/all_test.go	/^func TestDeepEqualRecursiveStruct(t *testing.T) {$/;"	f
TestDeepEqualUnexportedMap	./reflect/all_test.go	/^func TestDeepEqualUnexportedMap(t *testing.T) {$/;"	f
TestDefaultPath	./net/http/cookiejar/jar_test.go	/^func TestDefaultPath(t *testing.T) {$/;"	f
TestDefaultsInArray	./encoding/gob/encoder_test.go	/^func TestDefaultsInArray(t *testing.T) {$/;"	f
TestDeferPtrs	./runtime/stack_test.go	/^func TestDeferPtrs(t *testing.T) {$/;"	f
TestDeferPtrsGoexit	./runtime/stack_test.go	/^func TestDeferPtrsGoexit(t *testing.T) {$/;"	f
TestDeferPtrsPanic	./runtime/stack_test.go	/^func TestDeferPtrsPanic(t *testing.T) {$/;"	f
TestDeflate	./compress/flate/deflate_test.go	/^func TestDeflate(t *testing.T) {$/;"	f
TestDeflateInflate	./compress/flate/deflate_test.go	/^func TestDeflateInflate(t *testing.T) {$/;"	f
TestDeflateInflateString	./compress/flate/deflate_test.go	/^func TestDeflateInflateString(t *testing.T) {$/;"	f
TestDelims	./text/template/exec_test.go	/^func TestDelims(t *testing.T) {$/;"	f
TestDelims	./text/template/parse/lex_test.go	/^func TestDelims(t *testing.T) {$/;"	f
TestDetectContentType	./net/http/sniff_test.go	/^func TestDetectContentType(t *testing.T) {$/;"	f
TestDevNullFile	./os/os_test.go	/^func TestDevNullFile(t *testing.T) {$/;"	f
TestDial	./log/syslog/syslog_test.go	/^func TestDial(t *testing.T) {$/;"	f
TestDialError	./net/error_test.go	/^func TestDialError(t *testing.T) {$/;"	f
TestDialGoogle	./net/external_test.go	/^func TestDialGoogle(t *testing.T) {$/;"	f
TestDialParallel	./net/dial_test.go	/^func TestDialParallel(t *testing.T) {$/;"	f
TestDialSerialAsyncSpuriousConnection	./net/dial_test.go	/^func TestDialSerialAsyncSpuriousConnection(t *testing.T) {$/;"	f
TestDialTimeout	./crypto/tls/tls_test.go	/^func TestDialTimeout(t *testing.T) {$/;"	f
TestDialTimeout	./net/timeout_test.go	/^func TestDialTimeout(t *testing.T) {$/;"	f
TestDialTimeoutFDLeak	./net/dial_test.go	/^func TestDialTimeoutFDLeak(t *testing.T) {$/;"	f
TestDialerDualStack	./net/dial_test.go	/^func TestDialerDualStack(t *testing.T) {$/;"	f
TestDialerDualStackFDLeak	./net/dial_test.go	/^func TestDialerDualStackFDLeak(t *testing.T) {$/;"	f
TestDialerFallbackDelay	./net/dial_test.go	/^func TestDialerFallbackDelay(t *testing.T) {$/;"	f
TestDialerKeepAlive	./net/dial_test.go	/^func TestDialerKeepAlive(t *testing.T) {$/;"	f
TestDialerLocalAddr	./net/dial_test.go	/^func TestDialerLocalAddr(t *testing.T) {$/;"	f
TestDialerPartialDeadline	./net/dial_test.go	/^func TestDialerPartialDeadline(t *testing.T) {$/;"	f
TestDigit	./unicode/digit_test.go	/^func TestDigit(t *testing.T) {$/;"	f
TestDigitOptimization	./unicode/digit_test.go	/^func TestDigitOptimization(t *testing.T) {$/;"	f
TestDim	./math/all_test.go	/^func TestDim(t *testing.T) {$/;"	f
TestDir	./path/filepath/path_test.go	/^func TestDir(t *testing.T) {$/;"	f
TestDir	./path/path_test.go	/^func TestDir(t *testing.T) {$/;"	f
TestDirJoin	./net/http/fs_test.go	/^func TestDirJoin(t *testing.T) {$/;"	f
TestDirUnix	./net/http/cgi/host_test.go	/^func TestDirUnix(t *testing.T) {$/;"	f
TestDirWindows	./net/http/cgi/host_test.go	/^func TestDirWindows(t *testing.T) {$/;"	f
TestDirectivesWithComments	./encoding/xml/xml_test.go	/^func TestDirectivesWithComments(t *testing.T) {$/;"	f
TestDirectoryIfNotModified	./net/http/fs_test.go	/^func TestDirectoryIfNotModified(t *testing.T) {$/;"	f
TestDisallowedCSourceFiles	./cmd/go/go_test.go	/^func TestDisallowedCSourceFiles(t *testing.T) {$/;"	f
TestDisallowedCharacters	./encoding/xml/xml_test.go	/^func TestDisallowedCharacters(t *testing.T) {$/;"	f
TestDisasm	./cmd/objdump/objdump_test.go	/^func TestDisasm(t *testing.T) {$/;"	f
TestDisasmExtld	./cmd/objdump/objdump_test.go	/^func TestDisasmExtld(t *testing.T) {$/;"	f
TestDivisionSigns	./cmd/compile/internal/big/int_test.go	/^func TestDivisionSigns(t *testing.T) {$/;"	f
TestDivisionSigns	./math/big/int_test.go	/^func TestDivisionSigns(t *testing.T) {$/;"	f
TestDo	./internal/singleflight/singleflight_test.go	/^func TestDo(t *testing.T) {$/;"	f
TestDoDupSuppress	./internal/singleflight/singleflight_test.go	/^func TestDoDupSuppress(t *testing.T) {$/;"	f
TestDoErr	./internal/singleflight/singleflight_test.go	/^func TestDoErr(t *testing.T) {$/;"	f
TestDoc	./cmd/doc/doc_test.go	/^func TestDoc(t *testing.T) {$/;"	f
TestDomainAndType	./net/http/cookiejar/jar_test.go	/^func TestDomainAndType(t *testing.T) {$/;"	f
TestDomainHandling	./net/http/cookiejar/jar_test.go	/^func TestDomainHandling(t *testing.T) {$/;"	f
TestDontLoopForever	./bufio/scan_test.go	/^func TestDontLoopForever(t *testing.T) {$/;"	f
TestDontSelectECDSAWithRSAKey	./crypto/tls/handshake_server_test.go	/^func TestDontSelectECDSAWithRSAKey(t *testing.T) {$/;"	f
TestDontSelectRSAWithECDSAKey	./crypto/tls/handshake_server_test.go	/^func TestDontSelectRSAWithECDSAKey(t *testing.T) {$/;"	f
TestDotWriter	./net/textproto/writer_test.go	/^func TestDotWriter(t *testing.T) {$/;"	f
TestDoubleHijack	./net/http/serve_test.go	/^func TestDoubleHijack(t *testing.T) {$/;"	f
TestDraw	./image/draw/draw_test.go	/^func TestDraw(t *testing.T) {$/;"	f
TestDrawOverlap	./image/draw/draw_test.go	/^func TestDrawOverlap(t *testing.T) {$/;"	f
TestDriveLetterInEvalSymlinks	./path/filepath/path_test.go	/^func TestDriveLetterInEvalSymlinks(t *testing.T) {$/;"	f
TestDrivers	./database/sql/fakedb_test.go	/^func TestDrivers(t *testing.T) {$/;"	f
TestDualStackTCPListener	./net/listen_test.go	/^func TestDualStackTCPListener(t *testing.T) {$/;"	f
TestDualStackUDPListener	./net/listen_test.go	/^func TestDualStackUDPListener(t *testing.T) {$/;"	f
TestDump	./encoding/hex/hex_test.go	/^func TestDump(t *testing.T) {$/;"	f
TestDumpRequest	./net/http/httputil/dump_test.go	/^func TestDumpRequest(t *testing.T) {$/;"	f
TestDumpResponse	./net/http/httputil/dump_test.go	/^func TestDumpResponse(t *testing.T) {$/;"	f
TestDumper	./encoding/hex/hex_test.go	/^func TestDumper(t *testing.T) {$/;"	f
TestDupHeaders	./net/http/cgi/host_test.go	/^func TestDupHeaders(t *testing.T) {$/;"	f
TestDuplicatedFieldDisappears	./encoding/json/encode_test.go	/^func TestDuplicatedFieldDisappears(t *testing.T) {$/;"	f
TestDurationHours	./time/time_test.go	/^func TestDurationHours(t *testing.T) {$/;"	f
TestDurationMinutes	./time/time_test.go	/^func TestDurationMinutes(t *testing.T) {$/;"	f
TestDurationNanoseconds	./time/time_test.go	/^func TestDurationNanoseconds(t *testing.T) {$/;"	f
TestDurationString	./time/time_test.go	/^func TestDurationString(t *testing.T) {$/;"	f
TestDynlink	./cmd/internal/obj/x86/obj6_test.go	/^func TestDynlink(t *testing.T) {$/;"	f
TestECDSA	./crypto/x509/x509_test.go	/^func TestECDSA(t *testing.T) {$/;"	f
TestEMSAPSS	./crypto/rsa/pss_test.go	/^func TestEMSAPSS(t *testing.T) {$/;"	f
TestEOF	./fmt/scan_test.go	/^func TestEOF(t *testing.T) {$/;"	f
TestEOFAllTypes	./fmt/scan_test.go	/^func TestEOFAllTypes(t *testing.T) {$/;"	f
TestEOFAtEndOfInput	./fmt/scan_test.go	/^func TestEOFAtEndOfInput(t *testing.T) {$/;"	f
TestEOFError	./net/fd_posix_test.go	/^func TestEOFError(t *testing.T) {$/;"	f
TestEcho	./os/exec/exec_test.go	/^func TestEcho(t *testing.T) {$/;"	f
TestElementsAfterString	./encoding/asn1/asn1_test.go	/^type TestElementsAfterString struct {$/;"	t
TestEmbed	./reflect/all_test.go	/^func TestEmbed(t *testing.T) {$/;"	f
TestEmbeddedBug	./encoding/json/encode_test.go	/^func TestEmbeddedBug(t *testing.T) {$/;"	f
TestEmbeddedMethods	./reflect/all_test.go	/^func TestEmbeddedMethods(t *testing.T) {$/;"	f
TestEmphasize	./go/doc/comment_test.go	/^func TestEmphasize(t *testing.T) {$/;"	f
TestEmpty	./compress/gzip/gzip_test.go	/^func TestEmpty(t *testing.T) {$/;"	f
TestEmptyDirOpenCWD	./net/http/fs_test.go	/^func TestEmptyDirOpenCWD(t *testing.T) {$/;"	f
TestEmptyKeyAndValue	./runtime/map_test.go	/^func TestEmptyKeyAndValue(t *testing.T) {$/;"	f
TestEmptyLinesOK	./bufio/scan_test.go	/^func TestEmptyLinesOK(t *testing.T) {$/;"	f
TestEmptyMap	./fmt/fmt_test.go	/^func TestEmptyMap(t *testing.T) {$/;"	f
TestEmptyPasswordAuth	./net/http/client_test.go	/^func TestEmptyPasswordAuth(t *testing.T) {$/;"	f
TestEmptyPrintCreatesLine	./log/log_test.go	/^func TestEmptyPrintCreatesLine(t *testing.T) {$/;"	f
TestEmptyProfile	./cmd/pprof/internal/profile/profile_test.go	/^func TestEmptyProfile(t *testing.T) {$/;"	f
TestEmptyReaderConcurrent	./bytes/reader_test.go	/^func TestEmptyReaderConcurrent(t *testing.T) {$/;"	f
TestEmptyReaderConcurrent	./strings/reader_test.go	/^func TestEmptyReaderConcurrent(t *testing.T) {$/;"	f
TestEmptySlice	./runtime/mfinal_test.go	/^func TestEmptySlice(t *testing.T) {$/;"	f
TestEmptyString	./encoding/json/decode_test.go	/^func TestEmptyString(t *testing.T) {$/;"	f
TestEmptyString	./runtime/mfinal_test.go	/^func TestEmptyString(t *testing.T) {$/;"	f
TestEmptyTemplate	./html/template/escape_test.go	/^func TestEmptyTemplate(t *testing.T) {$/;"	f
TestEmptyTemplateCloneCrash	./text/template/multi_test.go	/^func TestEmptyTemplateCloneCrash(t *testing.T) {$/;"	f
TestEmptyTokens	./bufio/scan_test.go	/^func TestEmptyTokens(t *testing.T) {$/;"	f
TestEncode	./encoding/ascii85/ascii85_test.go	/^func TestEncode(t *testing.T) {$/;"	f
TestEncode	./encoding/base32/base32_test.go	/^func TestEncode(t *testing.T) {$/;"	f
TestEncode	./encoding/base64/base64_test.go	/^func TestEncode(t *testing.T) {$/;"	f
TestEncode	./encoding/hex/hex_test.go	/^func TestEncode(t *testing.T) {$/;"	f
TestEncode	./encoding/pem/pem_test.go	/^func TestEncode(t *testing.T) {$/;"	f
TestEncode	./unicode/utf16/utf16_test.go	/^func TestEncode(t *testing.T) {$/;"	f
TestEncodeAllFramesOutOfBounds	./image/gif/writer_test.go	/^func TestEncodeAllFramesOutOfBounds(t *testing.T) {$/;"	f
TestEncodeAllGo1Dot4	./image/gif/writer_test.go	/^func TestEncodeAllGo1Dot4(t *testing.T)                 { testEncodeAll(t, false, false) }$/;"	f
TestEncodeAllGo1Dot5	./image/gif/writer_test.go	/^func TestEncodeAllGo1Dot5(t *testing.T)                 { testEncodeAll(t, true, false) }$/;"	f
TestEncodeAllGo1Dot5GlobalColorModel	./image/gif/writer_test.go	/^func TestEncodeAllGo1Dot5GlobalColorModel(t *testing.T) { testEncodeAll(t, true, true) }$/;"	f
TestEncodeImplicitConfigSize	./image/gif/writer_test.go	/^func TestEncodeImplicitConfigSize(t *testing.T) {$/;"	f
TestEncodeMismatchDelay	./image/gif/writer_test.go	/^func TestEncodeMismatchDelay(t *testing.T) {$/;"	f
TestEncodeNonZeroMinPoint	./image/gif/writer_test.go	/^func TestEncodeNonZeroMinPoint(t *testing.T) {$/;"	f
TestEncodePalettes	./image/gif/writer_test.go	/^func TestEncodePalettes(t *testing.T) {$/;"	f
TestEncodePointerString	./encoding/json/encode_test.go	/^func TestEncodePointerString(t *testing.T) {$/;"	f
TestEncodeQuery	./net/url/url_test.go	/^func TestEncodeQuery(t *testing.T) {$/;"	f
TestEncodeRenamedByteSlice	./encoding/json/encode_test.go	/^func TestEncodeRenamedByteSlice(t *testing.T) {$/;"	f
TestEncodeRune	./unicode/utf16/utf16_test.go	/^func TestEncodeRune(t *testing.T) {$/;"	f
TestEncodeRune	./unicode/utf8/utf8_test.go	/^func TestEncodeRune(t *testing.T) {$/;"	f
TestEncodeString	./encoding/json/encode_test.go	/^func TestEncodeString(t *testing.T) {$/;"	f
TestEncodeToString	./encoding/hex/hex_test.go	/^func TestEncodeToString(t *testing.T) {$/;"	f
TestEncodeToken	./encoding/xml/marshal_test.go	/^func TestEncodeToken(t *testing.T) {$/;"	f
TestEncodeWord	./mime/encodedword_test.go	/^func TestEncodeWord(t *testing.T) {$/;"	f
TestEncodeZeroGIF	./image/gif/writer_test.go	/^func TestEncodeZeroGIF(t *testing.T) {$/;"	f
TestEncoder	./encoding/ascii85/ascii85_test.go	/^func TestEncoder(t *testing.T) {$/;"	f
TestEncoder	./encoding/base32/base32_test.go	/^func TestEncoder(t *testing.T) {$/;"	f
TestEncoder	./encoding/base64/base64_test.go	/^func TestEncoder(t *testing.T) {$/;"	f
TestEncoder	./encoding/json/stream_test.go	/^func TestEncoder(t *testing.T) {$/;"	f
TestEncoderBuffering	./encoding/ascii85/ascii85_test.go	/^func TestEncoderBuffering(t *testing.T) {$/;"	f
TestEncoderBuffering	./encoding/base32/base32_test.go	/^func TestEncoderBuffering(t *testing.T) {$/;"	f
TestEncoderBuffering	./encoding/base64/base64_test.go	/^func TestEncoderBuffering(t *testing.T) {$/;"	f
TestEncoderDecoder	./encoding/gob/encoder_test.go	/^func TestEncoderDecoder(t *testing.T) {$/;"	f
TestEncrypt	./crypto/x509/pem_decrypt_test.go	/^func TestEncrypt(t *testing.T) {$/;"	f
TestEncryptBlock	./crypto/aes/aes_test.go	/^func TestEncryptBlock(t *testing.T) {$/;"	f
TestEncryptOAEP	./crypto/rsa/rsa_test.go	/^func TestEncryptOAEP(t *testing.T) {$/;"	f
TestEncryptPKCS1v15	./crypto/rsa/pkcs1v15_test.go	/^func TestEncryptPKCS1v15(t *testing.T) {$/;"	f
TestEncryptPKCS1v15DecrypterSessionKey	./crypto/rsa/pkcs1v15_test.go	/^func TestEncryptPKCS1v15DecrypterSessionKey(t *testing.T) {$/;"	f
TestEncryptPKCS1v15SessionKey	./crypto/rsa/pkcs1v15_test.go	/^func TestEncryptPKCS1v15SessionKey(t *testing.T) {$/;"	f
TestEncryptTripleDES	./crypto/des/des_test.go	/^func TestEncryptTripleDES(t *testing.T) {$/;"	f
TestEndToEnd	./encoding/gob/codec_test.go	/^func TestEndToEnd(t *testing.T) {$/;"	f
TestEndsWithCSSKeyword	./html/template/css_test.go	/^func TestEndsWithCSSKeyword(t *testing.T) {$/;"	f
TestEnsurePipelineContains	./html/template/escape_test.go	/^func TestEnsurePipelineContains(t *testing.T) {$/;"	f
TestEntityInsideCDATA	./encoding/xml/xml_test.go	/^func TestEntityInsideCDATA(t *testing.T) {$/;"	f
TestEntityLength	./html/entity_test.go	/^func TestEntityLength(t *testing.T) {$/;"	f
TestEnumWindows	./runtime/syscall_windows_test.go	/^func TestEnumWindows(t *testing.T) {$/;"	f
TestEnv	./cmd/go/go_test.go	/^		func TestEnv(t *testing.T) {$/;"	f
TestEnv	./syscall/syscall_test.go	/^func TestEnv(t *testing.T) {$/;"	f
TestEnvOverride	./net/http/cgi/host_test.go	/^func TestEnvOverride(t *testing.T) {$/;"	f
TestEqString	./runtime/runtime_test.go	/^func TestEqString(t *testing.T) {$/;"	f
TestEqual	./bytes/bytes_test.go	/^func TestEqual(t *testing.T) {$/;"	f
TestEqual	./crypto/hmac/hmac_test.go	/^func TestEqual(t *testing.T) {$/;"	f
TestEqualExhaustive	./bytes/bytes_test.go	/^func TestEqualExhaustive(t *testing.T) {$/;"	f
TestEqualFold	./bytes/bytes_test.go	/^func TestEqualFold(t *testing.T) {$/;"	f
TestEqualFold	./strings/strings_test.go	/^func TestEqualFold(t *testing.T) {$/;"	f
TestEqualNearPageBoundary	./bytes/equal_test.go	/^func TestEqualNearPageBoundary(t *testing.T) {$/;"	f
TestErf	./math/all_test.go	/^func TestErf(t *testing.T) {$/;"	f
TestErfc	./math/all_test.go	/^func TestErfc(t *testing.T) {$/;"	f
TestErrAtEOF	./bufio/scan_test.go	/^func TestErrAtEOF(t *testing.T) {$/;"	f
TestErrBadConnReconnect	./database/sql/sql_test.go	/^func TestErrBadConnReconnect(t *testing.T) {$/;"	f
TestErrIsExist	./os/error_test.go	/^func TestErrIsExist(t *testing.T) {$/;"	f
TestErrIsNotExist	./os/error_test.go	/^func TestErrIsNotExist(t *testing.T) {$/;"	f
TestErrPathNUL	./os/error_test.go	/^func TestErrPathNUL(t *testing.T) {$/;"	f
TestError	./encoding/csv/writer_test.go	/^func TestError(t *testing.T) {$/;"	f
TestError	./text/scanner/scanner_test.go	/^func TestError(t *testing.T) {$/;"	f
TestErrorAfterClientClose	./net/rpc/server_test.go	/^func TestErrorAfterClientClose(t *testing.T) {$/;"	f
TestErrorContextWithTreeCopy	./text/template/parse/parse_test.go	/^func TestErrorContextWithTreeCopy(t *testing.T) {$/;"	f
TestErrorForHugeSlice	./encoding/gob/encoder_test.go	/^func TestErrorForHugeSlice(t *testing.T) {$/;"	f
TestErrorInvalidTypeId	./encoding/gob/codec_test.go	/^func TestErrorInvalidTypeId(t *testing.T) {$/;"	f
TestErrorMessageForSyntaxErrorInTestGoFileSaysFAIL	./cmd/go/go_test.go	/^func TestErrorMessageForSyntaxErrorInTestGoFileSaysFAIL(t *testing.T) {$/;"	f
TestErrorMessageFromMisusedString	./encoding/json/decode_test.go	/^func TestErrorMessageFromMisusedString(t *testing.T) {$/;"	f
TestErrorMethod	./errors/errors_test.go	/^func TestErrorMethod(t *testing.T) {$/;"	f
TestErrorOnUndefined	./html/template/escape_test.go	/^func TestErrorOnUndefined(t *testing.T) {$/;"	f
TestErrors	./go/parser/error_test.go	/^func TestErrors(t *testing.T) {$/;"	f
TestErrors	./html/template/escape_test.go	/^func TestErrors(t *testing.T) {$/;"	f
TestErrors	./text/template/parse/parse_test.go	/^func TestErrors(t *testing.T) {$/;"	f
TestEscape	./encoding/json/decode_test.go	/^func TestEscape(t *testing.T) {$/;"	f
TestEscape	./html/template/escape_test.go	/^func TestEscape(t *testing.T) {$/;"	f
TestEscape	./net/url/url_test.go	/^func TestEscape(t *testing.T) {$/;"	f
TestEscapeErrorsNotIgnorable	./html/template/escape_test.go	/^func TestEscapeErrorsNotIgnorable(t *testing.T) {$/;"	f
TestEscapeMalformedPipelines	./html/template/escape_test.go	/^func TestEscapeMalformedPipelines(t *testing.T) {$/;"	f
TestEscapeSet	./html/template/escape_test.go	/^func TestEscapeSet(t *testing.T) {$/;"	f
TestEscapeSetErrorsNotIgnorable	./html/template/escape_test.go	/^func TestEscapeSetErrorsNotIgnorable(t *testing.T) {$/;"	f
TestEscapeText	./html/template/escape_test.go	/^func TestEscapeText(t *testing.T) {$/;"	f
TestEscapeTextIOErrors	./encoding/xml/xml_test.go	/^func TestEscapeTextIOErrors(t *testing.T) {$/;"	f
TestEscapeTextInvalidChar	./encoding/xml/xml_test.go	/^func TestEscapeTextInvalidChar(t *testing.T) {$/;"	f
TestEscapersOnLower7AndSelectHighCodepoints	./html/template/js_test.go	/^func TestEscapersOnLower7AndSelectHighCodepoints(t *testing.T) {$/;"	f
TestEscapingNilNonemptyInterfaces	./html/template/content_test.go	/^func TestEscapingNilNonemptyInterfaces(t *testing.T) {$/;"	f
TestEvalArith	./go/types/eval_test.go	/^func TestEvalArith(t *testing.T) {$/;"	f
TestEvalBasic	./go/types/eval_test.go	/^func TestEvalBasic(t *testing.T) {$/;"	f
TestEvalComposite	./go/types/eval_test.go	/^func TestEvalComposite(t *testing.T) {$/;"	f
TestEvalPos	./go/types/eval_test.go	/^func TestEvalPos(t *testing.T) {$/;"	f
TestEvalSymlinks	./path/filepath/path_test.go	/^func TestEvalSymlinks(t *testing.T) {$/;"	f
TestEverything	./flag/flag_test.go	/^func TestEverything(t *testing.T) {$/;"	f
TestExactly16Bytes	./cmd/pack/pack_test.go	/^func TestExactly16Bytes(t *testing.T) {$/;"	f
TestExamples	./go/doc/example_test.go	/^func TestExamples(t *testing.T) {$/;"	f
TestExec	./database/sql/sql_test.go	/^func TestExec(t *testing.T) {$/;"	f
TestExecError	./text/template/exec_test.go	/^func TestExecError(t *testing.T) {$/;"	f
TestExecute	./text/template/exec_test.go	/^func TestExecute(t *testing.T) {$/;"	f
TestExecuteError	./text/template/exec_test.go	/^func TestExecuteError(t *testing.T) {$/;"	f
TestExecuteOnNewTemplate	./text/template/exec_test.go	/^func TestExecuteOnNewTemplate(t *testing.T) {$/;"	f
TestExhaustive	./mime/quotedprintable/reader_test.go	/^func TestExhaustive(t *testing.T) {$/;"	f
TestExitStatus	./os/exec/exec_test.go	/^func TestExitStatus(t *testing.T) {$/;"	f
TestExp	./cmd/compile/internal/big/int_test.go	/^func TestExp(t *testing.T) {$/;"	f
TestExp	./math/all_test.go	/^func TestExp(t *testing.T) {$/;"	f
TestExp	./math/big/int_test.go	/^func TestExp(t *testing.T) {$/;"	f
TestExp	./math/cmplx/cmath_test.go	/^func TestExp(t *testing.T) {$/;"	f
TestExp2	./math/all_test.go	/^func TestExp2(t *testing.T) {$/;"	f
TestExpNN	./cmd/compile/internal/big/nat_test.go	/^func TestExpNN(t *testing.T) {$/;"	f
TestExpNN	./math/big/nat_test.go	/^func TestExpNN(t *testing.T) {$/;"	f
TestExpTables	./math/rand/rand_test.go	/^func TestExpTables(t *testing.T) {$/;"	f
TestExpand	./os/env_test.go	/^func TestExpand(t *testing.T) {$/;"	f
TestExpandBlock	./crypto/des/des_test.go	/^func TestExpandBlock(t *testing.T) {$/;"	f
TestExpandKey	./crypto/aes/aes_test.go	/^func TestExpandKey(t *testing.T) {$/;"	f
TestExpandString	./internal/syscall/windows/registry/registry_test.go	/^func TestExpandString(t *testing.T) {$/;"	f
TestExpiration	./net/http/cookiejar/jar_test.go	/^func TestExpiration(t *testing.T) {$/;"	f
TestExplicitTaggedTime	./encoding/asn1/asn1_test.go	/^func TestExplicitTaggedTime(t *testing.T) {$/;"	f
TestExplode	./bytes/bytes_test.go	/^func TestExplode(t *testing.T) {$/;"	f
TestExplode	./strings/strings_test.go	/^func TestExplode(t *testing.T) {$/;"	f
TestExpm1	./math/all_test.go	/^func TestExpm1(t *testing.T) {$/;"	f
TestExpr	./cmd/asm/internal/asm/expr_test.go	/^func TestExpr(t *testing.T) {$/;"	f
TestExprString	./go/types/exprstring_test.go	/^func TestExprString(t *testing.T) {$/;"	f
TestExt	./path/filepath/path_test.go	/^func TestExt(t *testing.T) {$/;"	f
TestExt	./path/path_test.go	/^func TestExt(t *testing.T) {$/;"	f
TestExtending	./container/list/list_test.go	/^func TestExtending(t *testing.T) {$/;"	f
TestExtensionsByType	./mime/type_test.go	/^func TestExtensionsByType(t *testing.T) {$/;"	f
TestExtraFiles	./os/exec/exec_test.go	/^func TestExtraFiles(t *testing.T) {$/;"	f
TestExtraFilesFDShuffle	./os/exec/exec_test.go	/^func TestExtraFilesFDShuffle(t *testing.T) {$/;"	f
TestExtraFilesRace	./os/exec/exec_test.go	/^func TestExtraFilesRace(t *testing.T) {$/;"	f
TestExtract	./cmd/pack/pack_test.go	/^func TestExtract(t *testing.T) {$/;"	f
TestExtraneousData	./image/jpeg/reader_test.go	/^func TestExtraneousData(t *testing.T) {$/;"	f
TestF	./cmd/go/testdata/cgocover/p_test.go	/^func TestF(t *testing.T) {$/;"	f
TestF	./cmd/go/testdata/src/xtestonly/f_test.go	/^func TestF(t *testing.T) {$/;"	f
TestF	./cmd/go/testdata/testimport/p_test.go	/^func TestF(t *testing.T) {$/;"	f
TestF1	./cmd/go/testdata/testimport/x_test.go	/^func TestF1(t *testing.T) {$/;"	f
TestFSRedirect	./net/http/fs_test.go	/^func TestFSRedirect(t *testing.T) {$/;"	f
TestFTruncate	./os/os_test.go	/^func TestFTruncate(t *testing.T) {$/;"	f
TestFail	./runtime/race/output_test.go	/^func TestFail(t *testing.T) {$/;"	f
TestFailure	./testing/quick/quick_test.go	/^func TestFailure(t *testing.T) {$/;"	f
TestFallbackSCSV	./crypto/tls/handshake_server_test.go	/^func TestFallbackSCSV(t *testing.T) {$/;"	f
TestFcntlFlock	./syscall/syscall_unix_test.go	/^func TestFcntlFlock(t *testing.T) {$/;"	f
TestFibo	./cmd/compile/internal/big/nat_test.go	/^func TestFibo(t *testing.T) {$/;"	f
TestFibo	./math/big/nat_test.go	/^func TestFibo(t *testing.T) {$/;"	f
TestFieldByIndex	./reflect/all_test.go	/^func TestFieldByIndex(t *testing.T) {$/;"	f
TestFieldByIndexNil	./reflect/all_test.go	/^func TestFieldByIndexNil(t *testing.T) {$/;"	f
TestFieldByName	./reflect/all_test.go	/^func TestFieldByName(t *testing.T) {$/;"	f
TestFields	./bytes/bytes_test.go	/^func TestFields(t *testing.T) {$/;"	f
TestFields	./strings/strings_test.go	/^func TestFields(t *testing.T) {$/;"	f
TestFieldsFunc	./bytes/bytes_test.go	/^func TestFieldsFunc(t *testing.T) {$/;"	f
TestFieldsFunc	./strings/strings_test.go	/^func TestFieldsFunc(t *testing.T) {$/;"	f
TestFileChown	./os/os_unix_test.go	/^func TestFileChown(t *testing.T) {$/;"	f
TestFileError	./net/error_test.go	/^func TestFileError(t *testing.T) {$/;"	f
TestFileHeaderRoundTrip	./archive/zip/zip_test.go	/^func TestFileHeaderRoundTrip(t *testing.T) {$/;"	f
TestFileHeaderRoundTrip64	./archive/zip/zip_test.go	/^func TestFileHeaderRoundTrip64(t *testing.T) {$/;"	f
TestFileInfoHeader	./archive/tar/tar_test.go	/^func TestFileInfoHeader(t *testing.T) {$/;"	f
TestFileInfoHeaderDir	./archive/tar/tar_test.go	/^func TestFileInfoHeaderDir(t *testing.T) {$/;"	f
TestFileInfoHeaderSymlink	./archive/tar/tar_test.go	/^func TestFileInfoHeaderSymlink(t *testing.T) {$/;"	f
TestFileLineInErrorMessages	./cmd/go/go_test.go	/^func TestFileLineInErrorMessages(t *testing.T) {$/;"	f
TestFileListener	./net/file_test.go	/^func TestFileListener(t *testing.T) {$/;"	f
TestFilePacketConn	./net/file_test.go	/^func TestFilePacketConn(t *testing.T) {$/;"	f
TestFileServerCleanPath	./net/http/fs_test.go	/^func TestFileServerCleanPath(t *testing.T) {$/;"	f
TestFileServerCleans	./net/http/fs_test.go	/^func TestFileServerCleans(t *testing.T) {$/;"	f
TestFileServerEscapesNames	./net/http/fs_test.go	/^func TestFileServerEscapesNames(t *testing.T) {$/;"	f
TestFileServerImplicitLeadingSlash	./net/http/fs_test.go	/^func TestFileServerImplicitLeadingSlash(t *testing.T) {$/;"	f
TestFileServerZeroByte	./net/http/fs_test.go	/^func TestFileServerZeroByte(t *testing.T) {$/;"	f
TestFileSetCacheUnlikely	./go/token/position_test.go	/^func TestFileSetCacheUnlikely(t *testing.T) {$/;"	f
TestFileSetPastEnd	./go/token/position_test.go	/^func TestFileSetPastEnd(t *testing.T) {$/;"	f
TestFileSetRace	./go/token/position_test.go	/^func TestFileSetRace(t *testing.T) {$/;"	f
TestFileTransport	./net/http/filetransport_test.go	/^func TestFileTransport(t *testing.T) {$/;"	f
TestFiles	./go/printer/printer_test.go	/^func TestFiles(t *testing.T) {$/;"	f
TestFiles	./go/token/position_test.go	/^func TestFiles(t *testing.T) {$/;"	f
TestFiles	./go/types/api_test.go	/^func TestFiles(t *testing.T) {$/;"	f
TestFill	./image/draw/draw_test.go	/^func TestFill(t *testing.T) {$/;"	f
TestFilterDuplicates	./go/ast/filter_test.go	/^func TestFilterDuplicates(t *testing.T) {$/;"	f
TestFinalChunkedBodyReadEOF	./net/http/transfer_test.go	/^func TestFinalChunkedBodyReadEOF(t *testing.T) {$/;"	f
TestFinalForPrintf	./text/template/exec_test.go	/^func TestFinalForPrintf(t *testing.T) {$/;"	f
TestFinalPermute	./crypto/des/des_test.go	/^func TestFinalPermute(t *testing.T) {$/;"	f
TestFinalizerInterfaceBig	./runtime/mfinal_test.go	/^func TestFinalizerInterfaceBig(t *testing.T) {$/;"	f
TestFinalizerOnGlobal	./runtime/mfinal_test.go	/^func TestFinalizerOnGlobal(t *testing.T) {$/;"	f
TestFinalizerType	./runtime/mfinal_test.go	/^func TestFinalizerType(t *testing.T) {$/;"	f
TestFinalizerZeroSizedStruct	./runtime/mfinal_test.go	/^func TestFinalizerZeroSizedStruct(t *testing.T) {$/;"	f
TestFind	./regexp/find_test.go	/^func TestFind(t *testing.T) {$/;"	f
TestFindAll	./regexp/find_test.go	/^func TestFindAll(t *testing.T) {$/;"	f
TestFindAllIndex	./regexp/find_test.go	/^func TestFindAllIndex(t *testing.T) {$/;"	f
TestFindAllString	./regexp/find_test.go	/^func TestFindAllString(t *testing.T) {$/;"	f
TestFindAllStringIndex	./regexp/find_test.go	/^func TestFindAllStringIndex(t *testing.T) {$/;"	f
TestFindAllStringSubmatch	./regexp/find_test.go	/^func TestFindAllStringSubmatch(t *testing.T) {$/;"	f
TestFindAllStringSubmatchIndex	./regexp/find_test.go	/^func TestFindAllStringSubmatchIndex(t *testing.T) {$/;"	f
TestFindAllSubmatch	./regexp/find_test.go	/^func TestFindAllSubmatch(t *testing.T) {$/;"	f
TestFindAllSubmatchIndex	./regexp/find_test.go	/^func TestFindAllSubmatchIndex(t *testing.T) {$/;"	f
TestFindEndTag	./html/template/transition_test.go	/^func TestFindEndTag(t *testing.T) {$/;"	f
TestFindIndex	./regexp/find_test.go	/^func TestFindIndex(t *testing.T) {$/;"	f
TestFindReaderIndex	./regexp/find_test.go	/^func TestFindReaderIndex(t *testing.T) {$/;"	f
TestFindReaderSubmatchIndex	./regexp/find_test.go	/^func TestFindReaderSubmatchIndex(t *testing.T) {$/;"	f
TestFindString	./regexp/find_test.go	/^func TestFindString(t *testing.T) {$/;"	f
TestFindStringIndex	./regexp/find_test.go	/^func TestFindStringIndex(t *testing.T) {$/;"	f
TestFindStringSubmatch	./regexp/find_test.go	/^func TestFindStringSubmatch(t *testing.T) {$/;"	f
TestFindStringSubmatchIndex	./regexp/find_test.go	/^func TestFindStringSubmatchIndex(t *testing.T) {$/;"	f
TestFindSubmatch	./regexp/find_test.go	/^func TestFindSubmatch(t *testing.T) {$/;"	f
TestFindSubmatchIndex	./regexp/find_test.go	/^func TestFindSubmatchIndex(t *testing.T) {$/;"	f
TestFinderCreation	./strings/search_test.go	/^func TestFinderCreation(t *testing.T) {$/;"	f
TestFinderNext	./strings/search_test.go	/^func TestFinderNext(t *testing.T) {$/;"	f
TestFirstZone	./time/zoneinfo_test.go	/^func TestFirstZone(t *testing.T) {$/;"	f
TestFix	./container/heap/heap_test.go	/^func TestFix(t *testing.T) {$/;"	f
TestFixedGOROOT	./runtime/env_test.go	/^func TestFixedGOROOT(t *testing.T) {$/;"	f
TestFlagAndPrefixSetting	./log/log_test.go	/^func TestFlagAndPrefixSetting(t *testing.T) {$/;"	f
TestFlagParser	./fmt/fmt_test.go	/^func TestFlagParser(t *testing.T) {$/;"	f
TestFlagSetParse	./flag/flag_test.go	/^func TestFlagSetParse(t *testing.T) {$/;"	f
TestFlakyDefault	./runtime/race/testdata/select_test.go	/^func TestFlakyDefault(t *testing.T) {$/;"	f
TestFlap	./log/syslog/syslog_test.go	/^func TestFlap(t *testing.T) {$/;"	f
TestFloat	./expvar/expvar_test.go	/^func TestFloat(t *testing.T) {$/;"	f
TestFloat32	./math/rand/rand_test.go	/^func TestFloat32(t *testing.T) {$/;"	f
TestFloat32Alias	./testing/quick/quick_test.go	/^type TestFloat32Alias float32$/;"	t
TestFloat32Distribution	./cmd/compile/internal/big/rat_test.go	/^func TestFloat32Distribution(t *testing.T) {$/;"	f
TestFloat32Distribution	./math/big/rat_test.go	/^func TestFloat32Distribution(t *testing.T) {$/;"	f
TestFloat32SpecialCases	./cmd/compile/internal/big/ratconv_test.go	/^func TestFloat32SpecialCases(t *testing.T) {$/;"	f
TestFloat32SpecialCases	./math/big/ratconv_test.go	/^func TestFloat32SpecialCases(t *testing.T) {$/;"	f
TestFloat64	./runtime/softfloat64_test.go	/^func TestFloat64(t *testing.T) {$/;"	f
TestFloat64Alias	./testing/quick/quick_test.go	/^type TestFloat64Alias float64$/;"	t
TestFloat64Distribution	./cmd/compile/internal/big/rat_test.go	/^func TestFloat64Distribution(t *testing.T) {$/;"	f
TestFloat64Distribution	./math/big/rat_test.go	/^func TestFloat64Distribution(t *testing.T) {$/;"	f
TestFloat64SpecialCases	./cmd/compile/internal/big/ratconv_test.go	/^func TestFloat64SpecialCases(t *testing.T) {$/;"	f
TestFloat64SpecialCases	./math/big/ratconv_test.go	/^func TestFloat64SpecialCases(t *testing.T) {$/;"	f
TestFloat64Text	./cmd/compile/internal/big/floatconv_test.go	/^func TestFloat64Text(t *testing.T) {$/;"	f
TestFloat64Text	./math/big/floatconv_test.go	/^func TestFloat64Text(t *testing.T) {$/;"	f
TestFloat64s	./sort/sort_test.go	/^func TestFloat64s(t *testing.T) {$/;"	f
TestFloatAbs	./cmd/compile/internal/big/float_test.go	/^func TestFloatAbs(t *testing.T) {$/;"	f
TestFloatAbs	./math/big/float_test.go	/^func TestFloatAbs(t *testing.T) {$/;"	f
TestFloatAdd	./cmd/compile/internal/big/float_test.go	/^func TestFloatAdd(t *testing.T) {$/;"	f
TestFloatAdd	./math/big/float_test.go	/^func TestFloatAdd(t *testing.T) {$/;"	f
TestFloatAdd32	./cmd/compile/internal/big/float_test.go	/^func TestFloatAdd32(t *testing.T) {$/;"	f
TestFloatAdd32	./math/big/float_test.go	/^func TestFloatAdd32(t *testing.T) {$/;"	f
TestFloatAdd64	./cmd/compile/internal/big/float_test.go	/^func TestFloatAdd64(t *testing.T) {$/;"	f
TestFloatAdd64	./math/big/float_test.go	/^func TestFloatAdd64(t *testing.T) {$/;"	f
TestFloatArithmeticOverflow	./cmd/compile/internal/big/float_test.go	/^func TestFloatArithmeticOverflow(t *testing.T) {$/;"	f
TestFloatArithmeticOverflow	./math/big/float_test.go	/^func TestFloatArithmeticOverflow(t *testing.T) {$/;"	f
TestFloatArithmeticRounding	./cmd/compile/internal/big/float_test.go	/^func TestFloatArithmeticRounding(t *testing.T) {$/;"	f
TestFloatArithmeticRounding	./math/big/float_test.go	/^func TestFloatArithmeticRounding(t *testing.T) {$/;"	f
TestFloatArithmeticSpecialValues	./cmd/compile/internal/big/float_test.go	/^func TestFloatArithmeticSpecialValues(t *testing.T) {$/;"	f
TestFloatArithmeticSpecialValues	./math/big/float_test.go	/^func TestFloatArithmeticSpecialValues(t *testing.T) {$/;"	f
TestFloatCmpSpecialValues	./cmd/compile/internal/big/float_test.go	/^func TestFloatCmpSpecialValues(t *testing.T) {$/;"	f
TestFloatCmpSpecialValues	./math/big/float_test.go	/^func TestFloatCmpSpecialValues(t *testing.T) {$/;"	f
TestFloatFloat32	./cmd/compile/internal/big/float_test.go	/^func TestFloatFloat32(t *testing.T) {$/;"	f
TestFloatFloat32	./math/big/float_test.go	/^func TestFloatFloat32(t *testing.T) {$/;"	f
TestFloatFloat64	./cmd/compile/internal/big/float_test.go	/^func TestFloatFloat64(t *testing.T) {$/;"	f
TestFloatFloat64	./math/big/float_test.go	/^func TestFloatFloat64(t *testing.T) {$/;"	f
TestFloatFormat	./cmd/compile/internal/big/floatconv_test.go	/^func TestFloatFormat(t *testing.T) {$/;"	f
TestFloatFormat	./math/big/floatconv_test.go	/^func TestFloatFormat(t *testing.T) {$/;"	f
TestFloatInc	./cmd/compile/internal/big/float_test.go	/^func TestFloatInc(t *testing.T) {$/;"	f
TestFloatInc	./math/big/float_test.go	/^func TestFloatInc(t *testing.T) {$/;"	f
TestFloatInt	./cmd/compile/internal/big/float_test.go	/^func TestFloatInt(t *testing.T) {$/;"	f
TestFloatInt	./math/big/float_test.go	/^func TestFloatInt(t *testing.T) {$/;"	f
TestFloatInt64	./cmd/compile/internal/big/float_test.go	/^func TestFloatInt64(t *testing.T) {$/;"	f
TestFloatInt64	./math/big/float_test.go	/^func TestFloatInt64(t *testing.T) {$/;"	f
TestFloatIsInt	./cmd/compile/internal/big/float_test.go	/^func TestFloatIsInt(t *testing.T) {$/;"	f
TestFloatIsInt	./math/big/float_test.go	/^func TestFloatIsInt(t *testing.T) {$/;"	f
TestFloatMantExp	./cmd/compile/internal/big/float_test.go	/^func TestFloatMantExp(t *testing.T) {$/;"	f
TestFloatMantExp	./math/big/float_test.go	/^func TestFloatMantExp(t *testing.T) {$/;"	f
TestFloatMantExpAliasing	./cmd/compile/internal/big/float_test.go	/^func TestFloatMantExpAliasing(t *testing.T) {$/;"	f
TestFloatMantExpAliasing	./math/big/float_test.go	/^func TestFloatMantExpAliasing(t *testing.T) {$/;"	f
TestFloatMinMax	./math/all_test.go	/^func TestFloatMinMax(t *testing.T) {$/;"	f
TestFloatMinPrec	./cmd/compile/internal/big/float_test.go	/^func TestFloatMinPrec(t *testing.T) {$/;"	f
TestFloatMinPrec	./math/big/float_test.go	/^func TestFloatMinPrec(t *testing.T) {$/;"	f
TestFloatMul	./cmd/compile/internal/big/float_test.go	/^func TestFloatMul(t *testing.T) {$/;"	f
TestFloatMul	./math/big/float_test.go	/^func TestFloatMul(t *testing.T) {$/;"	f
TestFloatMul64	./cmd/compile/internal/big/float_test.go	/^func TestFloatMul64(t *testing.T) {$/;"	f
TestFloatMul64	./math/big/float_test.go	/^func TestFloatMul64(t *testing.T) {$/;"	f
TestFloatNeg	./cmd/compile/internal/big/float_test.go	/^func TestFloatNeg(t *testing.T) {$/;"	f
TestFloatNeg	./math/big/float_test.go	/^func TestFloatNeg(t *testing.T) {$/;"	f
TestFloatPredicates	./cmd/compile/internal/big/float_test.go	/^func TestFloatPredicates(t *testing.T) {$/;"	f
TestFloatPredicates	./math/big/float_test.go	/^func TestFloatPredicates(t *testing.T) {$/;"	f
TestFloatQuo	./cmd/compile/internal/big/float_test.go	/^func TestFloatQuo(t *testing.T) {$/;"	f
TestFloatQuo	./math/big/float_test.go	/^func TestFloatQuo(t *testing.T) {$/;"	f
TestFloatQuoSmoke	./cmd/compile/internal/big/float_test.go	/^func TestFloatQuoSmoke(t *testing.T) {$/;"	f
TestFloatQuoSmoke	./math/big/float_test.go	/^func TestFloatQuoSmoke(t *testing.T) {$/;"	f
TestFloatRat	./cmd/compile/internal/big/float_test.go	/^func TestFloatRat(t *testing.T) {$/;"	f
TestFloatRat	./math/big/float_test.go	/^func TestFloatRat(t *testing.T) {$/;"	f
TestFloatRound	./cmd/compile/internal/big/float_test.go	/^func TestFloatRound(t *testing.T) {$/;"	f
TestFloatRound	./math/big/float_test.go	/^func TestFloatRound(t *testing.T) {$/;"	f
TestFloatRound24	./cmd/compile/internal/big/float_test.go	/^func TestFloatRound24(t *testing.T) {$/;"	f
TestFloatRound24	./math/big/float_test.go	/^func TestFloatRound24(t *testing.T) {$/;"	f
TestFloatSetFloat64	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetFloat64(t *testing.T) {$/;"	f
TestFloatSetFloat64	./math/big/float_test.go	/^func TestFloatSetFloat64(t *testing.T) {$/;"	f
TestFloatSetFloat64String	./cmd/compile/internal/big/floatconv_test.go	/^func TestFloatSetFloat64String(t *testing.T) {$/;"	f
TestFloatSetFloat64String	./math/big/floatconv_test.go	/^func TestFloatSetFloat64String(t *testing.T) {$/;"	f
TestFloatSetInf	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetInf(t *testing.T) {$/;"	f
TestFloatSetInf	./math/big/float_test.go	/^func TestFloatSetInf(t *testing.T) {$/;"	f
TestFloatSetInt	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetInt(t *testing.T) {$/;"	f
TestFloatSetInt	./math/big/float_test.go	/^func TestFloatSetInt(t *testing.T) {$/;"	f
TestFloatSetInt64	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetInt64(t *testing.T) {$/;"	f
TestFloatSetInt64	./math/big/float_test.go	/^func TestFloatSetInt64(t *testing.T) {$/;"	f
TestFloatSetMantExp	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetMantExp(t *testing.T) {$/;"	f
TestFloatSetMantExp	./math/big/float_test.go	/^func TestFloatSetMantExp(t *testing.T) {$/;"	f
TestFloatSetPrec	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetPrec(t *testing.T) {$/;"	f
TestFloatSetPrec	./math/big/float_test.go	/^func TestFloatSetPrec(t *testing.T) {$/;"	f
TestFloatSetRat	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetRat(t *testing.T) {$/;"	f
TestFloatSetRat	./math/big/float_test.go	/^func TestFloatSetRat(t *testing.T) {$/;"	f
TestFloatSetUint64	./cmd/compile/internal/big/float_test.go	/^func TestFloatSetUint64(t *testing.T) {$/;"	f
TestFloatSetUint64	./math/big/float_test.go	/^func TestFloatSetUint64(t *testing.T) {$/;"	f
TestFloatSign	./cmd/compile/internal/big/float_test.go	/^func TestFloatSign(t *testing.T) {$/;"	f
TestFloatSign	./math/big/float_test.go	/^func TestFloatSign(t *testing.T) {$/;"	f
TestFloatString	./cmd/compile/internal/big/ratconv_test.go	/^func TestFloatString(t *testing.T) {$/;"	f
TestFloatString	./math/big/ratconv_test.go	/^func TestFloatString(t *testing.T) {$/;"	f
TestFloatText	./cmd/compile/internal/big/floatconv_test.go	/^func TestFloatText(t *testing.T) {$/;"	f
TestFloatText	./math/big/floatconv_test.go	/^func TestFloatText(t *testing.T) {$/;"	f
TestFloatUint64	./cmd/compile/internal/big/float_test.go	/^func TestFloatUint64(t *testing.T) {$/;"	f
TestFloatUint64	./math/big/float_test.go	/^func TestFloatUint64(t *testing.T) {$/;"	f
TestFloatZeroValue	./cmd/compile/internal/big/float_test.go	/^func TestFloatZeroValue(t *testing.T) {$/;"	f
TestFloatZeroValue	./math/big/float_test.go	/^func TestFloatZeroValue(t *testing.T) {$/;"	f
TestFloor	./math/all_test.go	/^func TestFloor(t *testing.T) {$/;"	f
TestFloydSteinbergCheckerboard	./image/draw/draw_test.go	/^func TestFloydSteinbergCheckerboard(t *testing.T) {$/;"	f
TestFmtInterface	./fmt/fmt_test.go	/^func TestFmtInterface(t *testing.T) {$/;"	f
TestFold	./encoding/json/fold_test.go	/^func TestFold(t *testing.T) {$/;"	f
TestFoldAgainstUnicode	./encoding/json/fold_test.go	/^func TestFoldAgainstUnicode(t *testing.T) {$/;"	f
TestFoldConstants	./regexp/syntax/parse_test.go	/^func TestFoldConstants(t *testing.T) {$/;"	f
TestFoldDup	./cmd/go/pkg_test.go	/^func TestFoldDup(t *testing.T) {$/;"	f
TestForeachHeaderElement	./net/http/http_test.go	/^func TestForeachHeaderElement(t *testing.T) {$/;"	f
TestForeground	./syscall/exec_unix_test.go	/^func TestForeground(t *testing.T) {$/;"	f
TestFormFileCallsParseMultipartForm	./net/http/request_test.go	/^func TestFormFileCallsParseMultipartForm(t *testing.T) {$/;"	f
TestFormFileOrder	./net/http/request_test.go	/^func TestFormFileOrder(t *testing.T) {$/;"	f
TestFormValueCallsParseMultipartForm	./net/http/request_test.go	/^func TestFormValueCallsParseMultipartForm(t *testing.T) {$/;"	f
TestFormat	./cmd/compile/internal/big/intconv_test.go	/^func TestFormat(t *testing.T) {$/;"	f
TestFormat	./math/big/intconv_test.go	/^func TestFormat(t *testing.T) {$/;"	f
TestFormat	./time/format_test.go	/^func TestFormat(t *testing.T) {$/;"	f
TestFormatAndParse	./time/format_test.go	/^func TestFormatAndParse(t *testing.T) {$/;"	f
TestFormatBool	./strconv/atob_test.go	/^func TestFormatBool(t *testing.T) {$/;"	f
TestFormatMediaType	./mime/mediatype_test.go	/^func TestFormatMediaType(t *testing.T) {$/;"	f
TestFormatSecondsInTimeZone	./time/format_test.go	/^func TestFormatSecondsInTimeZone(t *testing.T) {$/;"	f
TestFormatShortYear	./time/format_test.go	/^func TestFormatShortYear(t *testing.T) {$/;"	f
TestFormatterFlags	./fmt/fmt_test.go	/^func TestFormatterFlags(t *testing.T) {$/;"	f
TestFormatterPrintln	./fmt/fmt_test.go	/^func TestFormatterPrintln(t *testing.T) {$/;"	f
TestForwardCopy	./compress/flate/copy_test.go	/^func TestForwardCopy(t *testing.T) {$/;"	f
TestFowler	./regexp/exec_test.go	/^func TestFowler(t *testing.T) {$/;"	f
TestFp	./strconv/fp_test.go	/^func TestFp(t *testing.T) {$/;"	f
TestFractions	./go/constant/value_test.go	/^func TestFractions(t *testing.T) {$/;"	f
TestFreeOSMemory	./runtime/debug/garbage_test.go	/^func TestFreeOSMemory(t *testing.T) {$/;"	f
TestFrexp	./math/all_test.go	/^func TestFrexp(t *testing.T) {$/;"	f
TestFromAndToSlash	./path/filepath/path_test.go	/^func TestFromAndToSlash(t *testing.T) {$/;"	f
TestFromBits	./cmd/compile/internal/big/bits_test.go	/^func TestFromBits(t *testing.T) {$/;"	f
TestFromBits	./math/big/bits_test.go	/^func TestFromBits(t *testing.T) {$/;"	f
TestFstat	./os/os_test.go	/^func TestFstat(t *testing.T) {$/;"	f
TestFtoa	./strconv/ftoa_test.go	/^func TestFtoa(t *testing.T) {$/;"	f
TestFtoaRandom	./strconv/ftoa_test.go	/^func TestFtoaRandom(t *testing.T) {$/;"	f
TestFullRune	./unicode/utf8/utf8_test.go	/^func TestFullRune(t *testing.T) {$/;"	f
TestFunNN	./cmd/compile/internal/big/nat_test.go	/^func TestFunNN(t *testing.T) {$/;"	f
TestFunNN	./math/big/nat_test.go	/^func TestFunNN(t *testing.T) {$/;"	f
TestFunVV	./cmd/compile/internal/big/arith_test.go	/^func TestFunVV(t *testing.T) {$/;"	f
TestFunVV	./math/big/arith_test.go	/^func TestFunVV(t *testing.T) {$/;"	f
TestFunVW	./cmd/compile/internal/big/arith_test.go	/^func TestFunVW(t *testing.T) {$/;"	f
TestFunVW	./math/big/arith_test.go	/^func TestFunVW(t *testing.T) {$/;"	f
TestFunVWW	./cmd/compile/internal/big/arith_test.go	/^func TestFunVWW(t *testing.T) {$/;"	f
TestFunVWW	./math/big/arith_test.go	/^func TestFunVWW(t *testing.T) {$/;"	f
TestFunWW	./cmd/compile/internal/big/arith_test.go	/^func TestFunWW(t *testing.T) {$/;"	f
TestFunWW	./math/big/arith_test.go	/^func TestFunWW(t *testing.T) {$/;"	f
TestFunc	./expvar/expvar_test.go	/^func TestFunc(t *testing.T) {$/;"	f
TestFunc	./reflect/all_test.go	/^func TestFunc(t *testing.T) {$/;"	f
TestFuncArg	./reflect/all_test.go	/^func TestFuncArg(t *testing.T) {$/;"	f
TestFuncLayout	./reflect/all_test.go	/^func TestFuncLayout(t *testing.T) {$/;"	f
TestFuncMapWorksAfterClone	./html/template/clone_test.go	/^func TestFuncMapWorksAfterClone(t *testing.T) {$/;"	f
TestFuncOf	./reflect/all_test.go	/^func TestFuncOf(t *testing.T) {$/;"	f
TestFuncType	./go/printer/printer_test.go	/^func TestFuncType(t *testing.T) {$/;"	f
TestFunctionValue	./reflect/all_test.go	/^func TestFunctionValue(t *testing.T) {$/;"	f
TestFutexsleep	./runtime/futex_test.go	/^func TestFutexsleep(t *testing.T) {$/;"	f
TestFuzz	./crypto/tls/handshake_messages_test.go	/^func TestFuzz(t *testing.T) {$/;"	f
TestFuzz	./encoding/gob/codec_test.go	/^func TestFuzz(t *testing.T) {$/;"	f
TestFuzz	./encoding/pem/pem_test.go	/^func TestFuzz(t *testing.T) {$/;"	f
TestFuzzOneByte	./encoding/gob/codec_test.go	/^func TestFuzzOneByte(t *testing.T) {$/;"	f
TestFuzzRegressions	./encoding/gob/codec_test.go	/^func TestFuzzRegressions(t *testing.T) {$/;"	f
TestGCBits	./reflect/all_test.go	/^func TestGCBits(t *testing.T) {$/;"	f
TestGCFairness	./runtime/proc_test.go	/^func TestGCFairness(t *testing.T) {$/;"	f
TestGCInfo	./runtime/gcinfo_test.go	/^func TestGCInfo(t *testing.T) {$/;"	f
TestGOROOTSearchFailureReporting	./cmd/go/go_test.go	/^func TestGOROOTSearchFailureReporting(t *testing.T) {$/;"	f
TestGamma	./math/all_test.go	/^func TestGamma(t *testing.T) {$/;"	f
TestGcArraySlice	./runtime/gc_test.go	/^func TestGcArraySlice(t *testing.T) {$/;"	f
TestGcDeepNesting	./runtime/gc_test.go	/^func TestGcDeepNesting(t *testing.T) {$/;"	f
TestGcHashmapIndirection	./runtime/gc_test.go	/^func TestGcHashmapIndirection(t *testing.T) {$/;"	f
TestGcLastTime	./runtime/gc_test.go	/^func TestGcLastTime(t *testing.T) {$/;"	f
TestGcRescan	./runtime/gc_test.go	/^func TestGcRescan(t *testing.T) {$/;"	f
TestGcSys	./runtime/gc_test.go	/^func TestGcSys(t *testing.T) {$/;"	f
TestGcd	./cmd/compile/internal/big/int_test.go	/^func TestGcd(t *testing.T) {$/;"	f
TestGcd	./math/big/int_test.go	/^func TestGcd(t *testing.T) {$/;"	f
TestGdbPython	./runtime/runtime-gdb_test.go	/^func TestGdbPython(t *testing.T) {$/;"	f
TestGeneralCAS64	./sync/atomic/atomic_linux_arm_test.go	/^func TestGeneralCAS64(t *testing.T) {$/;"	f
TestGeneralizedTime	./encoding/asn1/asn1_test.go	/^func TestGeneralizedTime(t *testing.T) {$/;"	f
TestGenerateCommandParse	./cmd/go/generate_test.go	/^func TestGenerateCommandParse(t *testing.T) {$/;"	f
TestGenericBaseMult	./crypto/elliptic/elliptic_test.go	/^func TestGenericBaseMult(t *testing.T) {$/;"	f
TestGenericTrieBuilding	./strings/replace_test.go	/^func TestGenericTrieBuilding(t *testing.T) {$/;"	f
TestGet	./flag/flag_test.go	/^func TestGet(t *testing.T) {$/;"	f
TestGetBasicAuth	./net/http/request_test.go	/^func TestGetBasicAuth(t *testing.T) {$/;"	f
TestGetLine	./encoding/pem/pem_test.go	/^func TestGetLine(t *testing.T) {$/;"	f
TestGetRequestFormat	./net/http/client_test.go	/^func TestGetRequestFormat(t *testing.T) {$/;"	f
TestGetString	./cmd/compile/internal/big/intconv_test.go	/^func TestGetString(t *testing.T) {$/;"	f
TestGetString	./math/big/intconv_test.go	/^func TestGetString(t *testing.T) {$/;"	f
TestGetValues	./net/http/fcgi/fcgi_test.go	/^func TestGetValues(t *testing.T) {$/;"	f
TestGetfsstat	./syscall/syscall_bsd_test.go	/^func TestGetfsstat(t *testing.T) {$/;"	f
TestGetppid	./os/os_test.go	/^func TestGetppid(t *testing.T) {$/;"	f
TestGlob	./path/filepath/match_test.go	/^func TestGlob(t *testing.T) {$/;"	f
TestGlobError	./path/filepath/match_test.go	/^func TestGlobError(t *testing.T) {$/;"	f
TestGlobSymlink	./path/filepath/match_test.go	/^func TestGlobSymlink(t *testing.T) {$/;"	f
TestGnuTLSKey	./crypto/rsa/rsa_test.go	/^func TestGnuTLSKey(t *testing.T) {$/;"	f
TestGoBuilDashAInReleaseBranch	./cmd/go/go_test.go	/^func TestGoBuilDashAInReleaseBranch(t *testing.T) {$/;"	f
TestGoBuildARM	./cmd/go/go_test.go	/^func TestGoBuildARM(t *testing.T) {$/;"	f
TestGoBuildDashAInDevBranch	./cmd/go/go_test.go	/^func TestGoBuildDashAInDevBranch(t *testing.T) {$/;"	f
TestGoBuildInTestOnlyDirectoryFailsWithAGoodError	./cmd/go/go_test.go	/^func TestGoBuildInTestOnlyDirectoryFailsWithAGoodError(t *testing.T) {$/;"	f
TestGoBuildOutput	./cmd/go/go_test.go	/^func TestGoBuildOutput(t *testing.T) {$/;"	f
TestGoDebugString	./net/parse_test.go	/^func TestGoDebugString(t *testing.T) {$/;"	f
TestGoGenerateHandlesCommandAlias	./cmd/go/go_test.go	/^func TestGoGenerateHandlesCommandAlias(t *testing.T) {$/;"	f
TestGoGenerateHandlesSimpleCommand	./cmd/go/go_test.go	/^func TestGoGenerateHandlesSimpleCommand(t *testing.T) {$/;"	f
TestGoGenerateRunFlag	./cmd/go/go_test.go	/^func TestGoGenerateRunFlag(t *testing.T) {$/;"	f
TestGoGenerateVariableSubstitution	./cmd/go/go_test.go	/^func TestGoGenerateVariableSubstitution(t *testing.T) {$/;"	f
TestGoGetCustomDomainWildcard	./cmd/go/go_test.go	/^func TestGoGetCustomDomainWildcard(t *testing.T) {$/;"	f
TestGoGetDashTIssue8181	./cmd/go/go_test.go	/^func TestGoGetDashTIssue8181(t *testing.T) {$/;"	f
TestGoGetDomainRoot	./cmd/go/go_test.go	/^func TestGoGetDomainRoot(t *testing.T) {$/;"	f
TestGoGetInsecure	./cmd/go/go_test.go	/^func TestGoGetInsecure(t *testing.T) {$/;"	f
TestGoGetInsecureCustomDomain	./cmd/go/go_test.go	/^func TestGoGetInsecureCustomDomain(t *testing.T) {$/;"	f
TestGoGetInternalWildcard	./cmd/go/go_test.go	/^func TestGoGetInternalWildcard(t *testing.T) {$/;"	f
TestGoGetNonPkg	./cmd/go/go_test.go	/^func TestGoGetNonPkg(t *testing.T) {$/;"	f
TestGoGetRscIoToolstash	./cmd/go/go_test.go	/^func TestGoGetRscIoToolstash(t *testing.T) {$/;"	f
TestGoGetUpdate	./cmd/go/go_test.go	/^func TestGoGetUpdate(t *testing.T) {$/;"	f
TestGoGetUpdateInsecure	./cmd/go/go_test.go	/^func TestGoGetUpdateInsecure(t *testing.T) {$/;"	f
TestGoInstallCleansUpAfterGoBuild	./cmd/go/go_test.go	/^func TestGoInstallCleansUpAfterGoBuild(t *testing.T) {$/;"	f
TestGoInstallDetectsRemovedFiles	./cmd/go/go_test.go	/^func TestGoInstallDetectsRemovedFiles(t *testing.T) {$/;"	f
TestGoInstallDetectsRemovedFilesInPackageMain	./cmd/go/go_test.go	/^func TestGoInstallDetectsRemovedFilesInPackageMain(t *testing.T) {$/;"	f
TestGoInstallErrorOnCrossCompileToBin	./cmd/go/go_test.go	/^func TestGoInstallErrorOnCrossCompileToBin(t *testing.T) {$/;"	f
TestGoInstallPkgdir	./cmd/go/go_test.go	/^func TestGoInstallPkgdir(t *testing.T) {$/;"	f
TestGoInstallRebuildsStalePackagesInOtherGOPATH	./cmd/go/go_test.go	/^func TestGoInstallRebuildsStalePackagesInOtherGOPATH(t *testing.T) {$/;"	f
TestGoInstallShadowedGOPATH	./cmd/go/go_test.go	/^func TestGoInstallShadowedGOPATH(t *testing.T) {$/;"	f
TestGoListCmdOnlyShowsCommands	./cmd/go/go_test.go	/^func TestGoListCmdOnlyShowsCommands(t *testing.T) {$/;"	f
TestGoListHasAConsistentOrder	./cmd/go/go_test.go	/^func TestGoListHasAConsistentOrder(t *testing.T) {$/;"	f
TestGoListStdDoesNotIncludeCommands	./cmd/go/go_test.go	/^func TestGoListStdDoesNotIncludeCommands(t *testing.T) {$/;"	f
TestGoLookupIP	./net/netgo_unix_test.go	/^func TestGoLookupIP(t *testing.T) {$/;"	f
TestGoLookupIPWithResolverConfig	./net/dnsclient_unix_test.go	/^func TestGoLookupIPWithResolverConfig(t *testing.T) {$/;"	f
TestGoNil	./runtime/crash_test.go	/^func TestGoNil(t *testing.T) {$/;"	f
TestGoRunDirs	./cmd/go/go_test.go	/^func TestGoRunDirs(t *testing.T) {$/;"	f
TestGoTestBuildsAnXtestContainingOnlyNonRunnableExamples	./cmd/go/go_test.go	/^func TestGoTestBuildsAnXtestContainingOnlyNonRunnableExamples(t *testing.T) {$/;"	f
TestGoTestCpuprofileDashOControlsBinaryLocation	./cmd/go/go_test.go	/^func TestGoTestCpuprofileDashOControlsBinaryLocation(t *testing.T) {$/;"	f
TestGoTestCpuprofileLeavesBinaryBehind	./cmd/go/go_test.go	/^func TestGoTestCpuprofileLeavesBinaryBehind(t *testing.T) {$/;"	f
TestGoTestDashCDashOControlsBinaryLocation	./cmd/go/go_test.go	/^func TestGoTestDashCDashOControlsBinaryLocation(t *testing.T) {$/;"	f
TestGoTestDashOWritesBinary	./cmd/go/go_test.go	/^func TestGoTestDashOWritesBinary(t *testing.T) {$/;"	f
TestGoTestDetectsTestOnlyImportCycles	./cmd/go/go_test.go	/^func TestGoTestDetectsTestOnlyImportCycles(t *testing.T) {$/;"	f
TestGoTestFooTestWorks	./cmd/go/go_test.go	/^func TestGoTestFooTestWorks(t *testing.T) {$/;"	f
TestGoTestImportErrorStack	./cmd/go/go_test.go	/^func TestGoTestImportErrorStack(t *testing.T) {$/;"	f
TestGoTestRaceInstallCgo	./cmd/go/go_test.go	/^func TestGoTestRaceInstallCgo(t *testing.T) {$/;"	f
TestGoTestWithPackageListedMultipleTimes	./cmd/go/go_test.go	/^func TestGoTestWithPackageListedMultipleTimes(t *testing.T) {$/;"	f
TestGoTestXtestonlyWorks	./cmd/go/go_test.go	/^func TestGoTestXtestonlyWorks(t *testing.T) {$/;"	f
TestGoVerify	./crypto/x509/verify_test.go	/^func TestGoVerify(t *testing.T) {$/;"	f
TestGoVetWithExternalTests	./cmd/go/go_test.go	/^func TestGoVetWithExternalTests(t *testing.T) {$/;"	f
TestGoVetWithTags	./cmd/go/go_test.go	/^func TestGoVetWithTags(t *testing.T) {$/;"	f
TestGobEncodeIsZero	./encoding/gob/gobencdec_test.go	/^func TestGobEncodeIsZero(t *testing.T) {$/;"	f
TestGobEncodePtrError	./encoding/gob/gobencdec_test.go	/^func TestGobEncodePtrError(t *testing.T) {$/;"	f
TestGobEncoderArrayField	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderArrayField(t *testing.T) {$/;"	f
TestGobEncoderExtraIndirect	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderExtraIndirect(t *testing.T) {$/;"	f
TestGobEncoderField	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderField(t *testing.T) {$/;"	f
TestGobEncoderFieldTypeError	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderFieldTypeError(t *testing.T) {$/;"	f
TestGobEncoderFieldsOfDifferentType	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderFieldsOfDifferentType(t *testing.T) {$/;"	f
TestGobEncoderIgnoreNilEncoder	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderIgnoreNilEncoder(t *testing.T) {$/;"	f
TestGobEncoderIgnoreNonStructField	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderIgnoreNonStructField(t *testing.T) {$/;"	f
TestGobEncoderIgnoreStructField	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderIgnoreStructField(t *testing.T) {$/;"	f
TestGobEncoderIndirectArrayField	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderIndirectArrayField(t *testing.T) {$/;"	f
TestGobEncoderIndirectField	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderIndirectField(t *testing.T) {$/;"	f
TestGobEncoderNonStructSingleton	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderNonStructSingleton(t *testing.T) {$/;"	f
TestGobEncoderPointerThenValue	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderPointerThenValue(t *testing.T) {$/;"	f
TestGobEncoderStructSingleton	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderStructSingleton(t *testing.T) {$/;"	f
TestGobEncoderValueEncoder	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderValueEncoder(t *testing.T) {$/;"	f
TestGobEncoderValueField	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderValueField(t *testing.T) {$/;"	f
TestGobEncoderValueThenPointer	./encoding/gob/gobencdec_test.go	/^func TestGobEncoderValueThenPointer(t *testing.T) {$/;"	f
TestGobEncodingNilIntInSlice	./cmd/compile/internal/big/int_test.go	/^func TestGobEncodingNilIntInSlice(t *testing.T) {$/;"	f
TestGobEncodingNilIntInSlice	./math/big/int_test.go	/^func TestGobEncodingNilIntInSlice(t *testing.T) {$/;"	f
TestGobEncodingNilRatInSlice	./cmd/compile/internal/big/rat_test.go	/^func TestGobEncodingNilRatInSlice(t *testing.T) {$/;"	f
TestGobEncodingNilRatInSlice	./math/big/rat_test.go	/^func TestGobEncodingNilRatInSlice(t *testing.T) {$/;"	f
TestGobError	./net/rpc/client_test.go	/^func TestGobError(t *testing.T) {$/;"	f
TestGobMapInterfaceEncode	./encoding/gob/encoder_test.go	/^func TestGobMapInterfaceEncode(t *testing.T) {$/;"	f
TestGobPtrSlices	./encoding/gob/encoder_test.go	/^func TestGobPtrSlices(t *testing.T) {$/;"	f
TestGodocInstalls	./cmd/go/go_test.go	/^func TestGodocInstalls(t *testing.T) {$/;"	f
TestGoexitCrash	./runtime/crash_test.go	/^func TestGoexitCrash(t *testing.T) {$/;"	f
TestGoexitDeadlock	./runtime/crash_test.go	/^func TestGoexitDeadlock(t *testing.T) {$/;"	f
TestGoexitDefer	./runtime/crash_test.go	/^func TestGoexitDefer(t *testing.T) {$/;"	f
TestGoexitInPanic	./runtime/crash_test.go	/^func TestGoexitInPanic(t *testing.T) {$/;"	f
TestGolden	./cmd/api/goapi_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./crypto/md5/md5_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./crypto/rc4/rc4_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./crypto/sha1/sha1_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./crypto/sha256/sha256_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./crypto/sha512/sha512_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./hash/adler32/adler32_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./hash/crc32/crc32_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden	./hash/crc64/crc64_test.go	/^func TestGolden(t *testing.T) {$/;"	f
TestGolden32	./hash/fnv/fnv_test.go	/^func TestGolden32(t *testing.T) {$/;"	f
TestGolden32a	./hash/fnv/fnv_test.go	/^func TestGolden32a(t *testing.T) {$/;"	f
TestGolden64	./hash/fnv/fnv_test.go	/^func TestGolden64(t *testing.T) {$/;"	f
TestGolden64a	./hash/fnv/fnv_test.go	/^func TestGolden64a(t *testing.T) {$/;"	f
TestGoodCompile	./regexp/all_test.go	/^func TestGoodCompile(t *testing.T) {$/;"	f
TestGoroutineParallelism	./runtime/proc_test.go	/^func TestGoroutineParallelism(t *testing.T) {$/;"	f
TestGoroutineProfile	./runtime/runtime_unix_test.go	/^func TestGoroutineProfile(t *testing.T) {$/;"	f
TestGoroutineSwitch	./runtime/pprof/pprof_test.go	/^func TestGoroutineSwitch(t *testing.T) {$/;"	f
TestGostringnocopy	./runtime/string_test.go	/^func TestGostringnocopy(t *testing.T) {$/;"	f
TestGoxImporter	./go/internal/gccgoimporter/importer_test.go	/^func TestGoxImporter(t *testing.T) {$/;"	f
TestGrow	./bytes/buffer_test.go	/^func TestGrow(t *testing.T) {$/;"	f
TestGrowWithNaN	./runtime/map_test.go	/^func TestGrowWithNaN(t *testing.T) {$/;"	f
TestGrowWithNegativeZero	./runtime/map_test.go	/^func TestGrowWithNegativeZero(t *testing.T) {$/;"	f
TestHMAC	./crypto/hmac/hmac_test.go	/^func TestHMAC(t *testing.T) {$/;"	f
TestHTMLEscape	./encoding/json/encode_test.go	/^func TestHTMLEscape(t *testing.T) {$/;"	f
TestHTMLNospaceEscaper	./html/template/html_test.go	/^func TestHTMLNospaceEscaper(t *testing.T) {$/;"	f
TestHTTP	./net/rpc/server_test.go	/^func TestHTTP(t *testing.T) {$/;"	f
TestHTTP10ConnectionHeader	./net/http/serve_test.go	/^func TestHTTP10ConnectionHeader(t *testing.T) {$/;"	f
TestHTTPDecoding	./encoding/json/stream_test.go	/^func TestHTTPDecoding(t *testing.T) {$/;"	f
TestHammer32	./sync/atomic/atomic_test.go	/^func TestHammer32(t *testing.T) {$/;"	f
TestHammer64	./sync/atomic/atomic_test.go	/^func TestHammer64(t *testing.T) {$/;"	f
TestHammerStoreLoad	./sync/atomic/atomic_test.go	/^func TestHammerStoreLoad(t *testing.T) {$/;"	f
TestHandler	./expvar/expvar_test.go	/^func TestHandler(t *testing.T) {$/;"	f
TestHandlerBodyClose	./net/http/serve_test.go	/^func TestHandlerBodyClose(t *testing.T) {$/;"	f
TestHandlerFinishSkipBigContentLengthRead	./net/http/serve_test.go	/^func TestHandlerFinishSkipBigContentLengthRead(t *testing.T) {$/;"	f
TestHandlerPanic	./net/http/serve_test.go	/^func TestHandlerPanic(t *testing.T) {$/;"	f
TestHandlerPanicNil	./net/http/serve_test.go	/^func TestHandlerPanicNil(t *testing.T) {$/;"	f
TestHandlerPanicWithHijack	./net/http/serve_test.go	/^func TestHandlerPanicWithHijack(t *testing.T) {$/;"	f
TestHandlersCanSetConnectionClose10	./net/http/serve_test.go	/^func TestHandlersCanSetConnectionClose10(t *testing.T) {$/;"	f
TestHandlersCanSetConnectionClose11	./net/http/serve_test.go	/^func TestHandlersCanSetConnectionClose11(t *testing.T) {$/;"	f
TestHandshakClientSCTs	./crypto/tls/handshake_client_test.go	/^func TestHandshakClientSCTs(t *testing.T) {$/;"	f
TestHandshakeClientAES256GCMSHA384	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientAES256GCMSHA384(t *testing.T) {$/;"	f
TestHandshakeClientALPNMatch	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientALPNMatch(t *testing.T) {$/;"	f
TestHandshakeClientALPNNoMatch	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientALPNNoMatch(t *testing.T) {$/;"	f
TestHandshakeClientCertECDSA	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientCertECDSA(t *testing.T) {$/;"	f
TestHandshakeClientCertRSA	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientCertRSA(t *testing.T) {$/;"	f
TestHandshakeClientECDHEECDSAAES	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientECDHEECDSAAES(t *testing.T) {$/;"	f
TestHandshakeClientECDHEECDSAAESGCM	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientECDHEECDSAAESGCM(t *testing.T) {$/;"	f
TestHandshakeClientECDHERSAAES	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientECDHERSAAES(t *testing.T) {$/;"	f
TestHandshakeClientRSARC4	./crypto/tls/handshake_client_test.go	/^func TestHandshakeClientRSARC4(t *testing.T) {$/;"	f
TestHandshakeServerAES256GCMSHA384	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerAES256GCMSHA384(t *testing.T) {$/;"	f
TestHandshakeServerAESGCM	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerAESGCM(t *testing.T) {$/;"	f
TestHandshakeServerALPN	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerALPN(t *testing.T) {$/;"	f
TestHandshakeServerALPNNoMatch	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerALPNNoMatch(t *testing.T) {$/;"	f
TestHandshakeServerECDHEECDSAAES	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerECDHEECDSAAES(t *testing.T) {$/;"	f
TestHandshakeServerEmptyCertificates	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerEmptyCertificates(t *testing.T) {$/;"	f
TestHandshakeServerRSA3DES	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerRSA3DES(t *testing.T) {$/;"	f
TestHandshakeServerRSAAES	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerRSAAES(t *testing.T) {$/;"	f
TestHandshakeServerRSARC4	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerRSARC4(t *testing.T) {$/;"	f
TestHandshakeServerSNI	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerSNI(t *testing.T) {$/;"	f
TestHandshakeServerSNIGetCertificate	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerSNIGetCertificate(t *testing.T) {$/;"	f
TestHandshakeServerSNIGetCertificateError	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerSNIGetCertificateError(t *testing.T) {$/;"	f
TestHandshakeServerSNIGetCertificateNotFound	./crypto/tls/handshake_server_test.go	/^func TestHandshakeServerSNIGetCertificateNotFound(t *testing.T) {$/;"	f
TestHardLink	./os/os_test.go	/^func TestHardLink(t *testing.T) {$/;"	f
TestHasDotSuffix	./net/http/cookiejar/jar_test.go	/^func TestHasDotSuffix(t *testing.T) {$/;"	f
TestHasPathPrefix	./cmd/go/match_test.go	/^func TestHasPathPrefix(t *testing.T) {$/;"	f
TestHasPort	./net/http/cookiejar/jar_test.go	/^func TestHasPort(t *testing.T) {$/;"	f
TestHasToken	./net/http/header_test.go	/^func TestHasToken(t *testing.T) {$/;"	f
TestHeadResponses	./net/http/serve_test.go	/^func TestHeadResponses(t *testing.T) {$/;"	f
TestHeaderInvalidTagAndSize	./archive/zip/zip_test.go	/^func TestHeaderInvalidTagAndSize(t *testing.T) {$/;"	f
TestHeaderRoundTrip	./archive/tar/tar_test.go	/^func TestHeaderRoundTrip(t *testing.T) {$/;"	f
TestHeaderToWire	./net/http/serve_test.go	/^func TestHeaderToWire(t *testing.T) {$/;"	f
TestHeaderTooShort	./archive/zip/zip_test.go	/^func TestHeaderTooShort(t *testing.T) {$/;"	f
TestHeaderValuesContainsToken	./net/http/lex_test.go	/^func TestHeaderValuesContainsToken(t *testing.T) {$/;"	f
TestHeaderWrite	./net/http/header_test.go	/^func TestHeaderWrite(t *testing.T) {$/;"	f
TestHeaderWriteSubsetAllocs	./net/http/header_test.go	/^func TestHeaderWriteSubsetAllocs(t *testing.T) {$/;"	f
TestHeapsortBM	./sort/sort_test.go	/^func TestHeapsortBM(t *testing.T) {$/;"	f
TestHello	./cmd/pack/pack_test.go	/^func TestHello(t *testing.T) {$/;"	f
TestHello	./net/smtp/smtp_test.go	/^func TestHello(t *testing.T) {$/;"	f
TestHelloWorldBZ2	./compress/bzip2/bzip2_test.go	/^func TestHelloWorldBZ2(t *testing.T) {$/;"	f
TestHelp	./flag/flag_test.go	/^func TestHelp(t *testing.T) {$/;"	f
TestHelperProcess	./os/exec/exec_test.go	/^	if !strings.Contains(body, "func TestHelperProcess(t *testing.T)") {$/;"	f
TestHelperProcess	./os/exec/exec_test.go	/^func TestHelperProcess(*testing.T) {$/;"	f
TestHexByte	./fmt/scan_test.go	/^func TestHexByte(t *testing.T) {$/;"	f
TestHexBytes	./fmt/scan_test.go	/^func TestHexBytes(t *testing.T) {$/;"	f
TestHexDecode	./html/template/css_test.go	/^func TestHexDecode(t *testing.T) {$/;"	f
TestHilbert	./cmd/compile/internal/big/hilbert_test.go	/^func TestHilbert(t *testing.T) {$/;"	f
TestHilbert	./go/types/hilbert_test.go	/^func TestHilbert(t *testing.T) {$/;"	f
TestHilbert	./math/big/hilbert_test.go	/^func TestHilbert(t *testing.T) {$/;"	f
TestHostHandlers	./net/http/serve_test.go	/^func TestHostHandlers(t *testing.T) {$/;"	f
TestHostingOurselves	./net/http/cgi/matryoshka_test.go	/^func TestHostingOurselves(t *testing.T) {$/;"	f
TestHostname	./os/os_test.go	/^func TestHostname(t *testing.T) {$/;"	f
TestHugeGCInfo	./runtime/gc_test.go	/^func TestHugeGCInfo(t *testing.T) {$/;"	f
TestHugeWriteFails	./encoding/gob/encoder_test.go	/^func TestHugeWriteFails(t *testing.T) {$/;"	f
TestHypot	./math/all_test.go	/^func TestHypot(t *testing.T) {$/;"	f
TestHypotGo	./math/all_test.go	/^func TestHypotGo(t *testing.T) {$/;"	f
TestINDCCA	./crypto/ecdsa/ecdsa_test.go	/^func TestINDCCA(t *testing.T) {$/;"	f
TestIOError	./text/scanner/scanner_test.go	/^func TestIOError(t *testing.T) {$/;"	f
TestIPAddrFamily	./net/ip_test.go	/^func TestIPAddrFamily(t *testing.T) {$/;"	f
TestIPAddrScope	./net/ip_test.go	/^func TestIPAddrScope(t *testing.T) {$/;"	f
TestIPConnLocalName	./net/ipraw_test.go	/^func TestIPConnLocalName(t *testing.T) {$/;"	f
TestIPConnRemoteName	./net/ipraw_test.go	/^func TestIPConnRemoteName(t *testing.T) {$/;"	f
TestIPConnSpecificMethods	./net/protoconn_test.go	/^func TestIPConnSpecificMethods(t *testing.T) {$/;"	f
TestIPMask	./net/ip_test.go	/^func TestIPMask(t *testing.T) {$/;"	f
TestIPMaskString	./net/ip_test.go	/^func TestIPMaskString(t *testing.T) {$/;"	f
TestIPNetContains	./net/ip_test.go	/^func TestIPNetContains(t *testing.T) {$/;"	f
TestIPNetString	./net/ip_test.go	/^func TestIPNetString(t *testing.T) {$/;"	f
TestIPString	./net/ip_test.go	/^func TestIPString(t *testing.T) {$/;"	f
TestIPv4MulticastListener	./net/listen_test.go	/^func TestIPv4MulticastListener(t *testing.T) {$/;"	f
TestIPv6LinkLocalUnicastTCP	./net/tcp_test.go	/^func TestIPv6LinkLocalUnicastTCP(t *testing.T) {$/;"	f
TestIPv6LinkLocalUnicastUDP	./net/udp_test.go	/^func TestIPv6LinkLocalUnicastUDP(t *testing.T) {$/;"	f
TestIPv6MulticastListener	./net/listen_test.go	/^func TestIPv6MulticastListener(t *testing.T) {$/;"	f
TestISOWeek	./time/time_test.go	/^func TestISOWeek(t *testing.T) {$/;"	f
TestIdentityResponse	./net/http/serve_test.go	/^func TestIdentityResponse(t *testing.T) {$/;"	f
TestIdentityResponseHeaders	./net/http/serve_test.go	/^func TestIdentityResponseHeaders(t *testing.T) {$/;"	f
TestIdleConnChannelLeak	./net/http/transport_test.go	/^func TestIdleConnChannelLeak(t *testing.T) {$/;"	f
TestIgnore	./os/signal/signal_test.go	/^func TestIgnore(t *testing.T) {$/;"	f
TestIgnoreInterface	./encoding/gob/codec_test.go	/^func TestIgnoreInterface(t *testing.T) {$/;"	f
TestIgnorePipeErrorOnSuccess	./os/exec/exec_test.go	/^func TestIgnorePipeErrorOnSuccess(t *testing.T) {$/;"	f
TestIgnoreRecursiveType	./encoding/gob/encoder_test.go	/^func TestIgnoreRecursiveType(t *testing.T) {$/;"	f
TestIgnoredFields	./encoding/gob/codec_test.go	/^func TestIgnoredFields(t *testing.T) {$/;"	f
TestIlogb	./math/all_test.go	/^func TestIlogb(t *testing.T) {$/;"	f
TestImage	./image/image_test.go	/^func TestImage(t *testing.T) {$/;"	f
TestImplements	./reflect/set_test.go	/^func TestImplements(t *testing.T) {$/;"	f
TestImplicitAppendConversion	./reflect/set_test.go	/^func TestImplicitAppendConversion(t *testing.T) {$/;"	f
TestImplicitCallConversion	./reflect/set_test.go	/^func TestImplicitCallConversion(t *testing.T) {$/;"	f
TestImplicitMapConversion	./reflect/set_test.go	/^func TestImplicitMapConversion(t *testing.T) {$/;"	f
TestImplicitSendConversion	./reflect/set_test.go	/^func TestImplicitSendConversion(t *testing.T) {$/;"	f
TestImplicitSetConversion	./reflect/set_test.go	/^func TestImplicitSetConversion(t *testing.T) {$/;"	f
TestImplicitTaggedTime	./encoding/asn1/asn1_test.go	/^func TestImplicitTaggedTime(t *testing.T) {$/;"	f
TestImport	./go/internal/gcimporter/gcimporter_test.go	/^func TestImport(t *testing.T) {$/;"	f
TestImportCommandMatch	./cmd/go/go_test.go	/^func TestImportCommandMatch(t *testing.T) {$/;"	f
TestImportCommentConflict	./cmd/go/go_test.go	/^func TestImportCommentConflict(t *testing.T) {$/;"	f
TestImportCommentMismatch	./cmd/go/go_test.go	/^func TestImportCommentMismatch(t *testing.T) {$/;"	f
TestImportCommentSyntaxError	./cmd/go/go_test.go	/^func TestImportCommentSyntaxError(t *testing.T) {$/;"	f
TestImportPath	./reflect/all_test.go	/^func TestImportPath(t *testing.T) {$/;"	f
TestImportPathToPrefix	./cmd/internal/goobj/read_test.go	/^func TestImportPathToPrefix(t *testing.T) {$/;"	f
TestImportedTypes	./go/internal/gcimporter/gcimporter_test.go	/^func TestImportedTypes(t *testing.T) {$/;"	f
TestImports	./crypto/x509/x509_test.go	/^func TestImports(t *testing.T) {$/;"	f
TestImports	./go/parser/parser_test.go	/^func TestImports(t *testing.T) {$/;"	f
TestIncompleteBlock	./crypto/x509/pem_decrypt_test.go	/^func TestIncompleteBlock(t *testing.T) {$/;"	f
TestIncompleteIDATOnRowBoundary	./image/png/reader_test.go	/^func TestIncompleteIDATOnRowBoundary(t *testing.T) {$/;"	f
TestIncompleteSelection	./go/parser/parser_test.go	/^func TestIncompleteSelection(t *testing.T) {$/;"	f
TestIncrementalRead	./archive/tar/reader_test.go	/^func TestIncrementalRead(t *testing.T) {$/;"	f
TestIndent	./encoding/json/scanner_test.go	/^func TestIndent(t *testing.T) {$/;"	f
TestIndentBig	./encoding/json/scanner_test.go	/^func TestIndentBig(t *testing.T) {$/;"	f
TestIndentErrors	./encoding/json/scanner_test.go	/^func TestIndentErrors(t *testing.T) {$/;"	f
TestIndex	./bytes/bytes_test.go	/^func TestIndex(t *testing.T)     { runIndexTests(t, Index, "Index", indexTests) }$/;"	f
TestIndex	./index/suffixarray/suffixarray_test.go	/^func TestIndex(t *testing.T) {$/;"	f
TestIndex	./reflect/all_test.go	/^func TestIndex(t *testing.T) {$/;"	f
TestIndex	./strings/strings_test.go	/^func TestIndex(t *testing.T)        { runIndexTests(t, Index, "Index", indexTests) }$/;"	f
TestIndexAny	./bytes/bytes_test.go	/^func TestIndexAny(t *testing.T)  { runIndexAnyTests(t, IndexAny, "IndexAny", indexAnyTests) }$/;"	f
TestIndexAny	./strings/strings_test.go	/^func TestIndexAny(t *testing.T)     { runIndexTests(t, IndexAny, "IndexAny", indexAnyTests) }$/;"	f
TestIndexByte	./bytes/bytes_test.go	/^func TestIndexByte(t *testing.T) {$/;"	f
TestIndexByteBig	./bytes/bytes_test.go	/^func TestIndexByteBig(t *testing.T) {$/;"	f
TestIndexFunc	./bytes/bytes_test.go	/^func TestIndexFunc(t *testing.T) {$/;"	f
TestIndexFunc	./strings/strings_test.go	/^func TestIndexFunc(t *testing.T) {$/;"	f
TestIndexRune	./bytes/bytes_test.go	/^func TestIndexRune(t *testing.T) {$/;"	f
TestIndexRune	./strings/strings_test.go	/^func TestIndexRune(t *testing.T) {$/;"	f
TestIndirectPrint	./html/template/escape_test.go	/^func TestIndirectPrint(t *testing.T) {$/;"	f
TestIndirectSliceMapArray	./encoding/gob/codec_test.go	/^func TestIndirectSliceMapArray(t *testing.T) {$/;"	f
TestInf	./fmt/scan_test.go	/^func TestInf(t *testing.T) {$/;"	f
TestInfinity	./crypto/elliptic/elliptic_test.go	/^func TestInfinity(t *testing.T) {$/;"	f
TestInit	./go/scanner/scanner_test.go	/^func TestInit(t *testing.T) {$/;"	f
TestInit0	./container/heap/heap_test.go	/^func TestInit0(t *testing.T) {$/;"	f
TestInit1	./container/heap/heap_test.go	/^func TestInit1(t *testing.T) {$/;"	f
TestInitDeadlock	./runtime/crash_test.go	/^func TestInitDeadlock(t *testing.T) {$/;"	f
TestInitOrderInfo	./go/types/api_test.go	/^func TestInitOrderInfo(t *testing.T) {$/;"	f
TestInitialPermutationKnownAnswer	./crypto/des/des_test.go	/^func TestInitialPermutationKnownAnswer(t *testing.T) {$/;"	f
TestInitialPermute	./crypto/des/des_test.go	/^func TestInitialPermute(t *testing.T) {$/;"	f
TestInitialReset	./compress/gzip/gunzip_test.go	/^func TestInitialReset(t *testing.T) {$/;"	f
TestInsertAfterUnknownMark	./container/list/list_test.go	/^func TestInsertAfterUnknownMark(t *testing.T) {$/;"	f
TestInsertBeforeUnknownMark	./container/list/list_test.go	/^func TestInsertBeforeUnknownMark(t *testing.T) {$/;"	f
TestInstallFailsWithNoBuildableFiles	./cmd/go/go_test.go	/^func TestInstallFailsWithNoBuildableFiles(t *testing.T) {$/;"	f
TestInstallIntoGOBIN	./cmd/go/go_test.go	/^func TestInstallIntoGOBIN(t *testing.T) {$/;"	f
TestInstallIntoGOPATH	./cmd/go/go_test.go	/^func TestInstallIntoGOPATH(t *testing.T) {$/;"	f
TestInstallToCurrentDirectoryCreatesExecutable	./cmd/go/go_test.go	/^func TestInstallToCurrentDirectoryCreatesExecutable(t *testing.T) {$/;"	f
TestInstallToGOBINCommandLinePackage	./cmd/go/go_test.go	/^func TestInstallToGOBINCommandLinePackage(t *testing.T) {$/;"	f
TestInstallWithTags	./cmd/go/go_test.go	/^func TestInstallWithTags(t *testing.T) {$/;"	f
TestInstallWithoutDestinationFails	./cmd/go/go_test.go	/^func TestInstallWithoutDestinationFails(t *testing.T) {$/;"	f
TestInstallationImporter	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^func TestInstallationImporter(t *testing.T) {$/;"	f
TestInstalls	./cmd/go/go_test.go	/^func TestInstalls(t *testing.T) {$/;"	f
TestInt	./crypto/rand/util_test.go	/^func TestInt(t *testing.T) {$/;"	f
TestInt	./expvar/expvar_test.go	/^func TestInt(t *testing.T) {$/;"	f
TestInt16Alias	./testing/quick/quick_test.go	/^type TestInt16Alias int16$/;"	t
TestInt32Alias	./testing/quick/quick_test.go	/^type TestInt32Alias int32$/;"	t
TestInt64	./cmd/compile/internal/big/int_test.go	/^func TestInt64(t *testing.T) {$/;"	f
TestInt64	./math/big/int_test.go	/^func TestInt64(t *testing.T) {$/;"	f
TestInt64Alias	./testing/quick/quick_test.go	/^type TestInt64Alias int64$/;"	t
TestInt8Alias	./testing/quick/quick_test.go	/^type TestInt8Alias int8$/;"	t
TestIntAlias	./testing/quick/quick_test.go	/^type TestIntAlias int$/;"	t
TestIntCodec	./encoding/gob/codec_test.go	/^func TestIntCodec(t *testing.T) {$/;"	f
TestIntConversion	./unicode/utf8/utf8_test.go	/^func TestIntConversion(t *testing.T) {$/;"	f
TestIntEmptyMaxPanics	./crypto/rand/util_test.go	/^func TestIntEmptyMaxPanics(t *testing.T) {$/;"	f
TestIntGobEncoding	./cmd/compile/internal/big/int_test.go	/^func TestIntGobEncoding(t *testing.T) {$/;"	f
TestIntGobEncoding	./math/big/int_test.go	/^func TestIntGobEncoding(t *testing.T) {$/;"	f
TestIntJSONEncoding	./cmd/compile/internal/big/int_test.go	/^func TestIntJSONEncoding(t *testing.T) {$/;"	f
TestIntJSONEncoding	./math/big/int_test.go	/^func TestIntJSONEncoding(t *testing.T) {$/;"	f
TestIntJSONEncodingTextMarshaller	./cmd/compile/internal/big/int_test.go	/^func TestIntJSONEncodingTextMarshaller(t *testing.T) {$/;"	f
TestIntJSONEncodingTextMarshaller	./math/big/int_test.go	/^func TestIntJSONEncodingTextMarshaller(t *testing.T) {$/;"	f
TestIntNegativeMaxPanics	./crypto/rand/util_test.go	/^func TestIntNegativeMaxPanics(t *testing.T) {$/;"	f
TestIntString	./runtime/string_test.go	/^func TestIntString(t *testing.T) {$/;"	f
TestIntStringAllocs	./runtime/string_test.go	/^func TestIntStringAllocs(t *testing.T) {$/;"	f
TestIntXMLEncodingTextMarshaller	./cmd/compile/internal/big/int_test.go	/^func TestIntXMLEncodingTextMarshaller(t *testing.T) {$/;"	f
TestIntXMLEncodingTextMarshaller	./math/big/int_test.go	/^func TestIntXMLEncodingTextMarshaller(t *testing.T) {$/;"	f
TestIntegrity32	./hash/fnv/fnv_test.go	/^func TestIntegrity32(t *testing.T) {$/;"	f
TestIntegrity32a	./hash/fnv/fnv_test.go	/^func TestIntegrity32a(t *testing.T) {$/;"	f
TestIntegrity64	./hash/fnv/fnv_test.go	/^func TestIntegrity64(t *testing.T) {$/;"	f
TestIntegrity64a	./hash/fnv/fnv_test.go	/^func TestIntegrity64a(t *testing.T) {$/;"	f
TestInterface	./encoding/gob/codec_test.go	/^func TestInterface(t *testing.T) {$/;"	f
TestInterfaceAddrs	./net/interface_test.go	/^func TestInterfaceAddrs(t *testing.T) {$/;"	f
TestInterfaceArrivalAndDeparture	./net/interface_unix_test.go	/^func TestInterfaceArrivalAndDeparture(t *testing.T) {$/;"	f
TestInterfaceBasic	./encoding/gob/codec_test.go	/^func TestInterfaceBasic(t *testing.T) {$/;"	f
TestInterfaceExtraction	./reflect/all_test.go	/^func TestInterfaceExtraction(t *testing.T) {$/;"	f
TestInterfaceGet	./reflect/all_test.go	/^func TestInterfaceGet(t *testing.T) {$/;"	f
TestInterfaceIndirect	./encoding/gob/encoder_test.go	/^func TestInterfaceIndirect(t *testing.T) {$/;"	f
TestInterfacePointer	./encoding/gob/codec_test.go	/^func TestInterfacePointer(t *testing.T) {$/;"	f
TestInterfaceSet	./encoding/json/decode_test.go	/^func TestInterfaceSet(t *testing.T) {$/;"	f
TestInterfaceSet	./reflect/all_test.go	/^func TestInterfaceSet(t *testing.T) {$/;"	f
TestInterfaceValue	./reflect/all_test.go	/^func TestInterfaceValue(t *testing.T) {$/;"	f
TestInterfaces	./net/interface_test.go	/^func TestInterfaces(t *testing.T) {$/;"	f
TestInterlaced	./image/png/reader_test.go	/^func TestInterlaced(t *testing.T) {$/;"	f
TestInternalCache	./cmd/go/go_test.go	/^func TestInternalCache(t *testing.T) {$/;"	f
TestInternalPackageErrorsAreHandled	./cmd/go/go_test.go	/^func TestInternalPackageErrorsAreHandled(t *testing.T) {$/;"	f
TestInternalPackagesInGOROOTAreRespected	./cmd/go/go_test.go	/^func TestInternalPackagesInGOROOTAreRespected(t *testing.T) {$/;"	f
TestInternalPackagesOutsideGOROOTAreRespected	./cmd/go/go_test.go	/^func TestInternalPackagesOutsideGOROOTAreRespected(t *testing.T) {$/;"	f
TestInternalRedirect	./net/http/cgi/host_test.go	/^func TestInternalRedirect(t *testing.T) {$/;"	f
TestInts	./sort/sort_test.go	/^func TestInts(t *testing.T) {$/;"	f
TestInvalid	./go/parser/short_test.go	/^func TestInvalid(t *testing.T) {$/;"	f
TestInvalid	./reflect/all_test.go	/^func TestInvalid(t *testing.T) {$/;"	f
TestInvalidBits	./compress/flate/flate_test.go	/^func TestInvalidBits(t *testing.T) {$/;"	f
TestInvalidEncoding	./compress/flate/flate_test.go	/^func TestInvalidEncoding(t *testing.T) {$/;"	f
TestInvalidErr	./encoding/hex/hex_test.go	/^func TestInvalidErr(t *testing.T) {$/;"	f
TestInvalidFiles	./archive/zip/reader_test.go	/^func TestInvalidFiles(t *testing.T) {$/;"	f
TestInvalidStringErr	./encoding/hex/hex_test.go	/^func TestInvalidStringErr(t *testing.T) {$/;"	f
TestInvalidStringOption	./encoding/json/decode_test.go	/^func TestInvalidStringOption(t *testing.T) {$/;"	f
TestInvalidTimeGob	./time/time_test.go	/^func TestInvalidTimeGob(t *testing.T) {$/;"	f
TestInvalidTimeJSON	./time/time_test.go	/^func TestInvalidTimeJSON(t *testing.T) {$/;"	f
TestInvalidTrailerClosesConnection	./net/http/serve_test.go	/^func TestInvalidTrailerClosesConnection(t *testing.T) {$/;"	f
TestInvalidUTF8	./encoding/asn1/marshal_test.go	/^func TestInvalidUTF8(t *testing.T) {$/;"	f
TestInvalidUnmarshal	./encoding/json/decode_test.go	/^func TestInvalidUnmarshal(t *testing.T) {$/;"	f
TestInvalidUnmarshalText	./encoding/json/decode_test.go	/^func TestInvalidUnmarshalText(t *testing.T) {$/;"	f
TestInvalidValues	./internal/syscall/windows/registry/registry_test.go	/^func TestInvalidValues(t *testing.T) {$/;"	f
TestInversePermutationKnownAnswer	./crypto/des/des_test.go	/^func TestInversePermutationKnownAnswer(t *testing.T) {$/;"	f
TestIsAbs	./path/filepath/path_test.go	/^func TestIsAbs(t *testing.T) {$/;"	f
TestIsAbs	./path/path_test.go	/^func TestIsAbs(t *testing.T) {$/;"	f
TestIsCSSNmchar	./html/template/css_test.go	/^func TestIsCSSNmchar(t *testing.T) {$/;"	f
TestIsControlLatin1	./unicode/graphic_test.go	/^func TestIsControlLatin1(t *testing.T) {$/;"	f
TestIsEmpty	./text/template/parse/parse_test.go	/^func TestIsEmpty(t *testing.T) {$/;"	f
TestIsExist	./os/error_test.go	/^func TestIsExist(t *testing.T) {$/;"	f
TestIsFinite	./cmd/compile/internal/big/rat_test.go	/^func TestIsFinite(t *testing.T) {$/;"	f
TestIsFinite	./math/big/rat_test.go	/^func TestIsFinite(t *testing.T) {$/;"	f
TestIsGraphicLatin1	./unicode/graphic_test.go	/^func TestIsGraphicLatin1(t *testing.T) {$/;"	f
TestIsHeading	./go/doc/comment_test.go	/^func TestIsHeading(t *testing.T) {$/;"	f
TestIsIP	./net/http/cookiejar/jar_test.go	/^func TestIsIP(t *testing.T) {$/;"	f
TestIsInt	./cmd/compile/internal/big/rat_test.go	/^func TestIsInt(t *testing.T) {$/;"	f
TestIsInt	./math/big/rat_test.go	/^func TestIsInt(t *testing.T) {$/;"	f
TestIsLetter	./unicode/letter_test.go	/^func TestIsLetter(t *testing.T) {$/;"	f
TestIsLetterLatin1	./unicode/graphic_test.go	/^func TestIsLetterLatin1(t *testing.T) {$/;"	f
TestIsLowerLatin1	./unicode/graphic_test.go	/^func TestIsLowerLatin1(t *testing.T) {$/;"	f
TestIsNaN	./math/cmplx/cmath_test.go	/^func TestIsNaN(t *testing.T) {$/;"	f
TestIsNil	./reflect/all_test.go	/^func TestIsNil(t *testing.T) {$/;"	f
TestIsPrint	./strconv/quote_test.go	/^func TestIsPrint(t *testing.T) {$/;"	f
TestIsPrintLatin1	./unicode/graphic_test.go	/^func TestIsPrintLatin1(t *testing.T) {$/;"	f
TestIsPunctLatin1	./unicode/graphic_test.go	/^func TestIsPunctLatin1(t *testing.T) {$/;"	f
TestIsSecure	./cmd/go/vcs_test.go	/^func TestIsSecure(t *testing.T) {$/;"	f
TestIsSpace	./fmt/fmt_test.go	/^func TestIsSpace(t *testing.T) {$/;"	f
TestIsSpace	./unicode/letter_test.go	/^func TestIsSpace(t *testing.T) {$/;"	f
TestIsSpaceLatin1	./unicode/graphic_test.go	/^func TestIsSpaceLatin1(t *testing.T) {$/;"	f
TestIsSurrogate	./unicode/utf16/utf16_test.go	/^func TestIsSurrogate(t *testing.T) {$/;"	f
TestIsSymbolLatin1	./unicode/graphic_test.go	/^func TestIsSymbolLatin1(t *testing.T) {$/;"	f
TestIsToken	./net/http/lex_test.go	/^func TestIsToken(t *testing.T) {$/;"	f
TestIsUpper	./unicode/letter_test.go	/^func TestIsUpper(t *testing.T) {$/;"	f
TestIsUpperLatin1	./unicode/graphic_test.go	/^func TestIsUpperLatin1(t *testing.T) {$/;"	f
TestIsValidDirective	./encoding/xml/marshal_test.go	/^func TestIsValidDirective(t *testing.T) {$/;"	f
TestIssue10193	./cmd/go/go_test.go	/^func TestIssue10193(t *testing.T) {$/;"	f
TestIssue10213	./go/scanner/scanner_test.go	/^func TestIssue10213(t *testing.T) {$/;"	f
TestIssue10884_MaxBytesEOF	./net/http/request_test.go	/^func TestIssue10884_MaxBytesEOF(t *testing.T) {$/;"	f
TestIssue10952	./cmd/go/go_test.go	/^func TestIssue10952(t *testing.T) {$/;"	f
TestIssue10956	./archive/zip/reader_test.go	/^func TestIssue10956(t *testing.T) {$/;"	f
TestIssue10957	./archive/zip/reader_test.go	/^func TestIssue10957(t *testing.T) {$/;"	f
TestIssue10968	./archive/tar/reader_test.go	/^func TestIssue10968(t *testing.T) {$/;"	f
TestIssue11146	./archive/zip/reader_test.go	/^func TestIssue11146(t *testing.T) {$/;"	f
TestIssue11169	./archive/tar/reader_test.go	/^func TestIssue11169(t *testing.T) {$/;"	f
TestIssue11307	./cmd/go/go_test.go	/^func TestIssue11307(t *testing.T) {$/;"	f
TestIssue11549_Expect100	./net/http/serve_test.go	/^func TestIssue11549_Expect100(t *testing.T) {$/;"	f
TestIssue11709	./cmd/go/go_test.go	/^func TestIssue11709(t *testing.T) {$/;"	f
TestIssue12096	./cmd/go/go_test.go	/^func TestIssue12096(t *testing.T) {$/;"	f
TestIssue2379	./cmd/compile/internal/big/rat_test.go	/^func TestIssue2379(t *testing.T) {$/;"	f
TestIssue2379	./math/big/rat_test.go	/^func TestIssue2379(t *testing.T) {$/;"	f
TestIssue2542Deadlock	./database/sql/sql_test.go	/^func TestIssue2542Deadlock(t *testing.T) {$/;"	f
TestIssue2607	./cmd/compile/internal/big/int_test.go	/^func TestIssue2607(t *testing.T) {$/;"	f
TestIssue2607	./math/big/int_test.go	/^func TestIssue2607(t *testing.T) {$/;"	f
TestIssue3521	./cmd/compile/internal/big/rat_test.go	/^func TestIssue3521(t *testing.T) {$/;"	f
TestIssue3521	./math/big/rat_test.go	/^func TestIssue3521(t *testing.T) {$/;"	f
TestIssue3595	./net/http/transport_test.go	/^func TestIssue3595(t *testing.T) {$/;"	f
TestIssue3644	./net/http/transport_test.go	/^func TestIssue3644(t *testing.T) {$/;"	f
TestIssue4103	./container/list/list_test.go	/^func TestIssue4103(t *testing.T) {$/;"	f
TestIssue4191_InfiniteGetTimeout	./net/http/transport_test.go	/^func TestIssue4191_InfiniteGetTimeout(t *testing.T) {$/;"	f
TestIssue4191_InfiniteGetToPutTimeout	./net/http/transport_test.go	/^func TestIssue4191_InfiniteGetToPutTimeout(t *testing.T) {$/;"	f
TestIssue4210	./cmd/go/go_test.go	/^func TestIssue4210(t *testing.T) {$/;"	f
TestIssue4902	./database/sql/sql_test.go	/^func TestIssue4902(t *testing.T) {$/;"	f
TestIssue569	./encoding/xml/xml_test.go	/^func TestIssue569(t *testing.T) {$/;"	f
TestIssue5745	./time/sleep_test.go	/^func TestIssue5745(t *testing.T) {$/;"	f
TestIssue5770	./go/types/issues_test.go	/^func TestIssue5770(t *testing.T) {$/;"	f
TestIssue5815	./go/internal/gcimporter/gcimporter_test.go	/^func TestIssue5815(t *testing.T) {$/;"	f
TestIssue5849	./go/types/issues_test.go	/^func TestIssue5849(t *testing.T) {$/;"	f
TestIssue5880	./encoding/xml/xml_test.go	/^func TestIssue5880(t *testing.T) {$/;"	f
TestIssue5915	./compress/flate/flate_test.go	/^func TestIssue5915(t *testing.T) {$/;"	f
TestIssue5962	./compress/flate/flate_test.go	/^func TestIssue5962(t *testing.T) {$/;"	f
TestIssue6081	./database/sql/sql_test.go	/^func TestIssue6081(t *testing.T) {$/;"	f
TestIssue6255	./compress/flate/flate_test.go	/^func TestIssue6255(t *testing.T) {$/;"	f
TestIssue6349	./container/list/list_test.go	/^func TestIssue6349(t *testing.T) {$/;"	f
TestIssue6413	./go/types/issues_test.go	/^func TestIssue6413(t *testing.T) {$/;"	f
TestIssue6458	./encoding/json/encode_test.go	/^func TestIssue6458(t *testing.T) {$/;"	f
TestIssue6480	./cmd/go/go_test.go	/^func TestIssue6480(t *testing.T) {$/;"	f
TestIssue6550	./compress/gzip/gunzip_test.go	/^func TestIssue6550(t *testing.T) {$/;"	f
TestIssue6651	./database/sql/sql_test.go	/^func TestIssue6651(t *testing.T) {$/;"	f
TestIssue6844	./cmd/go/go_test.go	/^func TestIssue6844(t *testing.T) {$/;"	f
TestIssue6866	./cmd/compile/internal/big/float_test.go	/^func TestIssue6866(t *testing.T) {$/;"	f
TestIssue6866	./math/big/float_test.go	/^func TestIssue6866(t *testing.T) {$/;"	f
TestIssue7108	./cmd/go/go_test.go	/^func TestIssue7108(t *testing.T) {$/;"	f
TestIssue7245	./go/types/issues_test.go	/^func TestIssue7245(t *testing.T) {$/;"	f
TestIssue7573	./cmd/go/go_test.go	/^func TestIssue7573(t *testing.T) {$/;"	f
TestIssue7827	./go/types/issues_test.go	/^func TestIssue7827(t *testing.T) {$/;"	f
TestIssue8102	./runtime/race/race_test.go	/^func TestIssue8102(t *testing.T) {$/;"	f
TestIssue8186	./archive/zip/reader_test.go	/^func TestIssue8186(t *testing.T) {$/;"	f
TestIssue820	./cmd/compile/internal/big/rat_test.go	/^func TestIssue820(t *testing.T) {$/;"	f
TestIssue820	./math/big/rat_test.go	/^func TestIssue820(t *testing.T) {$/;"	f
TestIssue8518	./go/types/api_test.go	/^func TestIssue8518(t *testing.T) {$/;"	f
TestIssue9137	./runtime/race/race_test.go	/^func TestIssue9137(t *testing.T) {$/;"	f
TestIssue9979	./go/parser/parser_test.go	/^func TestIssue9979(t *testing.T) {$/;"	f
TestIterGrowAndDelete	./runtime/map_test.go	/^func TestIterGrowAndDelete(t *testing.T) {$/;"	f
TestIterGrowWithGC	./runtime/map_test.go	/^func TestIterGrowWithGC(t *testing.T) {$/;"	f
TestItoa	./strconv/itoa_test.go	/^func TestItoa(t *testing.T) {$/;"	f
TestItoa	./syscall/syscall_test.go	/^func TestItoa(t *testing.T) {$/;"	f
TestJ0	./math/all_test.go	/^func TestJ0(t *testing.T) {$/;"	f
TestJ1	./math/all_test.go	/^func TestJ1(t *testing.T) {$/;"	f
TestJSEscaping	./text/template/exec_test.go	/^func TestJSEscaping(t *testing.T) {$/;"	f
TestJSRegexpEscaper	./html/template/js_test.go	/^func TestJSRegexpEscaper(t *testing.T) {$/;"	f
TestJSStrEscaper	./html/template/js_test.go	/^func TestJSStrEscaper(t *testing.T) {$/;"	f
TestJSValEscaper	./html/template/js_test.go	/^func TestJSValEscaper(t *testing.T) {$/;"	f
TestJacobi	./cmd/compile/internal/big/int_test.go	/^func TestJacobi(t *testing.T) {$/;"	f
TestJacobi	./math/big/int_test.go	/^func TestJacobi(t *testing.T) {$/;"	f
TestJacobiPanic	./cmd/compile/internal/big/int_test.go	/^func TestJacobiPanic(t *testing.T) {$/;"	f
TestJacobiPanic	./math/big/int_test.go	/^func TestJacobiPanic(t *testing.T) {$/;"	f
TestJar	./net/http/client_test.go	/^type TestJar struct {$/;"	t
TestJarCalls	./net/http/client_test.go	/^func TestJarCalls(t *testing.T) {$/;"	f
TestJarKey	./net/http/cookiejar/jar_test.go	/^func TestJarKey(t *testing.T) {$/;"	f
TestJarKeyNilPSL	./net/http/cookiejar/jar_test.go	/^func TestJarKeyNilPSL(t *testing.T) {$/;"	f
TestJn	./math/all_test.go	/^func TestJn(t *testing.T) {$/;"	f
TestJoin	./path/filepath/path_test.go	/^func TestJoin(t *testing.T) {$/;"	f
TestJoin	./path/path_test.go	/^func TestJoin(t *testing.T) {$/;"	f
TestJoinHostPort	./net/ip_test.go	/^func TestJoinHostPort(t *testing.T) {$/;"	f
TestKeyGeneration	./crypto/ecdsa/ecdsa_test.go	/^func TestKeyGeneration(t *testing.T) {$/;"	f
TestKeyGeneration	./crypto/rsa/rsa_test.go	/^func TestKeyGeneration(t *testing.T) {$/;"	f
TestKeysFromPreMasterSecret	./crypto/tls/prf_test.go	/^func TestKeysFromPreMasterSecret(t *testing.T) {$/;"	f
TestKillChildAfterCopyError	./net/http/cgi/matryoshka_test.go	/^func TestKillChildAfterCopyError(t *testing.T) {$/;"	f
TestKillFindProcess	./os/os_test.go	/^func TestKillFindProcess(t *testing.T) {$/;"	f
TestKillStartProcess	./os/os_test.go	/^func TestKillStartProcess(t *testing.T) {$/;"	f
TestLFStack	./runtime/lfstack_test.go	/^func TestLFStack(t *testing.T) {$/;"	f
TestLFStackStress	./runtime/lfstack_test.go	/^func TestLFStackStress(t *testing.T) {$/;"	f
TestLRUClientSessionCache	./crypto/tls/handshake_client_test.go	/^func TestLRUClientSessionCache(t *testing.T) {$/;"	f
TestLarge	./crypto/md5/md5_test.go	/^func TestLarge(t *testing.T) {$/;"	f
TestLargeByteReads	./bytes/buffer_test.go	/^func TestLargeByteReads(t *testing.T) {$/;"	f
TestLargeByteSlice	./encoding/json/decode_test.go	/^func TestLargeByteSlice(t *testing.T) {$/;"	f
TestLargeByteWrites	./bytes/buffer_test.go	/^func TestLargeByteWrites(t *testing.T) {$/;"	f
TestLargeCos	./math/all_test.go	/^func TestLargeCos(t *testing.T) {$/;"	f
TestLargeDefs	./cmd/pack/pack_test.go	/^func TestLargeDefs(t *testing.T) {$/;"	f
TestLargeGCProg	./reflect/all_test.go	/^func TestLargeGCProg(t *testing.T) {$/;"	f
TestLargeImageWithShortData	./image/jpeg/reader_test.go	/^func TestLargeImageWithShortData(t *testing.T) {$/;"	f
TestLargeReadMIMEHeader	./net/textproto/reader_test.go	/^func TestLargeReadMIMEHeader(t *testing.T) {$/;"	f
TestLargeSin	./math/all_test.go	/^func TestLargeSin(t *testing.T) {$/;"	f
TestLargeSincos	./math/all_test.go	/^func TestLargeSincos(t *testing.T) {$/;"	f
TestLargeStringConcat	./runtime/string_test.go	/^func TestLargeStringConcat(t *testing.T) {$/;"	f
TestLargeStringReads	./bytes/buffer_test.go	/^func TestLargeStringReads(t *testing.T) {$/;"	f
TestLargeStringWrites	./bytes/buffer_test.go	/^func TestLargeStringWrites(t *testing.T) {$/;"	f
TestLargeTan	./math/all_test.go	/^func TestLargeTan(t *testing.T) {$/;"	f
TestLargeWriteToConsole	./os/os_test.go	/^func TestLargeWriteToConsole(t *testing.T) {$/;"	f
TestLastIndex	./bytes/bytes_test.go	/^func TestLastIndex(t *testing.T) { runIndexTests(t, LastIndex, "LastIndex", lastIndexTests) }$/;"	f
TestLastIndex	./strings/strings_test.go	/^func TestLastIndex(t *testing.T)    { runIndexTests(t, LastIndex, "LastIndex", lastIndexTests) }$/;"	f
TestLastIndexAny	./bytes/bytes_test.go	/^func TestLastIndexAny(t *testing.T) {$/;"	f
TestLastIndexAny	./strings/strings_test.go	/^func TestLastIndexAny(t *testing.T) { runIndexTests(t, LastIndexAny, "LastIndexAny", lastIndexAnyTests) }$/;"	f
TestLastIndexByte	./bytes/bytes_test.go	/^func TestLastIndexByte(t *testing.T) {$/;"	f
TestLastIndexByte	./strings/strings_test.go	/^func TestLastIndexByte(t *testing.T) {$/;"	f
TestLatin1	./compress/gzip/gzip_test.go	/^func TestLatin1(t *testing.T) {$/;"	f
TestLatin1RoundTrip	./compress/gzip/gzip_test.go	/^func TestLatin1RoundTrip(t *testing.T) {$/;"	f
TestLatinOffset	./unicode/letter_test.go	/^func TestLatinOffset(t *testing.T) {$/;"	f
TestLchown	./os/os_unix_test.go	/^func TestLchown(t *testing.T) {$/;"	f
TestLdexp	./math/all_test.go	/^func TestLdexp(t *testing.T) {$/;"	f
TestLdflagsArgumentsWithSpacesIssue3941	./cmd/go/go_test.go	/^func TestLdflagsArgumentsWithSpacesIssue3941(t *testing.T) {$/;"	f
TestLeadAndLineComments	./go/parser/parser_test.go	/^func TestLeadAndLineComments(t *testing.T) {$/;"	f
TestLetterOptimizations	./unicode/letter_test.go	/^func TestLetterOptimizations(t *testing.T) {$/;"	f
TestLex	./cmd/asm/internal/lex/lex_test.go	/^func TestLex(t *testing.T) {$/;"	f
TestLex	./text/template/parse/lex_test.go	/^func TestLex(t *testing.T) {$/;"	f
TestLgamma	./math/all_test.go	/^func TestLgamma(t *testing.T) {$/;"	f
TestLineAline	./debug/gosym/pclntab_test.go	/^func TestLineAline(t *testing.T) {$/;"	f
TestLineBreaker	./encoding/pem/pem_test.go	/^func TestLineBreaker(t *testing.T) {$/;"	f
TestLineByLineFscanf	./fmt/scan_test.go	/^func TestLineByLineFscanf(t *testing.T) {$/;"	f
TestLineComments	./go/printer/printer_test.go	/^func TestLineComments(t *testing.T) {$/;"	f
TestLineComments	./go/scanner/scanner_test.go	/^func TestLineComments(t *testing.T) {$/;"	f
TestLineContinuation	./mime/multipart/multipart_test.go	/^func TestLineContinuation(t *testing.T) {$/;"	f
TestLineELFClang	./debug/dwarf/line_test.go	/^func TestLineELFClang(t *testing.T) {$/;"	f
TestLineELFGCC	./debug/dwarf/line_test.go	/^func TestLineELFGCC(t *testing.T) {$/;"	f
TestLineFromAline	./debug/gosym/pclntab_test.go	/^func TestLineFromAline(t *testing.T) {$/;"	f
TestLineHist	./cmd/internal/obj/line_test.go	/^func TestLineHist(t *testing.T) {$/;"	f
TestLineInfo	./go/token/position_test.go	/^func TestLineInfo(t *testing.T) {$/;"	f
TestLineLimit	./mime/multipart/multipart_test.go	/^func TestLineLimit(t *testing.T) {$/;"	f
TestLineNumber	./runtime/symtab_test.go	/^func TestLineNumber(t *testing.T) {$/;"	f
TestLineSeek	./debug/dwarf/line_test.go	/^func TestLineSeek(t *testing.T) {$/;"	f
TestLineTooLong	./bufio/bufio_test.go	/^func TestLineTooLong(t *testing.T) {$/;"	f
TestLinesAfterRead	./bufio/bufio_test.go	/^func TestLinesAfterRead(t *testing.T) {$/;"	f
TestLink1	./container/ring/ring_test.go	/^func TestLink1(t *testing.T) {$/;"	f
TestLink2	./container/ring/ring_test.go	/^func TestLink2(t *testing.T) {$/;"	f
TestLink3	./container/ring/ring_test.go	/^func TestLink3(t *testing.T) {$/;"	f
TestLinkUnlink	./container/ring/ring_test.go	/^func TestLinkUnlink(t *testing.T) {$/;"	f
TestLinuxDeathSignal	./syscall/syscall_linux_test.go	/^func TestLinuxDeathSignal(t *testing.T) {$/;"	f
TestLinuxSendfile	./net/http/fs_test.go	/^func TestLinuxSendfile(t *testing.T) {$/;"	f
TestLinuxSendfileChild	./net/http/fs_test.go	/^func TestLinuxSendfileChild(*testing.T) {$/;"	f
TestList	./container/list/list_test.go	/^func TestList(t *testing.T) {$/;"	f
TestListTemplateCanUseContextFunction	./cmd/go/go_test.go	/^func TestListTemplateCanUseContextFunction(t *testing.T) {$/;"	f
TestListenError	./net/error_test.go	/^func TestListenError(t *testing.T) {$/;"	f
TestListenPacketError	./net/error_test.go	/^func TestListenPacketError(t *testing.T) {$/;"	f
TestListenerClose	./net/net_test.go	/^func TestListenerClose(t *testing.T) {$/;"	f
TestLiteralPrefix	./regexp/all_test.go	/^func TestLiteralPrefix(t *testing.T) {$/;"	f
TestLittleEndianPtrWrite	./encoding/binary/binary_test.go	/^func TestLittleEndianPtrWrite(t *testing.T) { testWrite(t, LittleEndian, little, &s) }$/;"	f
TestLittleEndianRead	./encoding/binary/binary_test.go	/^func TestLittleEndianRead(t *testing.T)     { testRead(t, LittleEndian, little, s) }$/;"	f
TestLittleEndianWrite	./encoding/binary/binary_test.go	/^func TestLittleEndianWrite(t *testing.T)    { testWrite(t, LittleEndian, little, s) }$/;"	f
TestLoadFixed	./time/time_test.go	/^func TestLoadFixed(t *testing.T) {$/;"	f
TestLoadInt32	./sync/atomic/atomic_test.go	/^func TestLoadInt32(t *testing.T) {$/;"	f
TestLoadInt64	./sync/atomic/atomic_test.go	/^func TestLoadInt64(t *testing.T) {$/;"	f
TestLoadLocationZipFile	./time/format_test.go	/^func TestLoadLocationZipFile(t *testing.T) {$/;"	f
TestLoadPointer	./sync/atomic/atomic_test.go	/^func TestLoadPointer(t *testing.T) {$/;"	f
TestLoadUint32	./sync/atomic/atomic_test.go	/^func TestLoadUint32(t *testing.T) {$/;"	f
TestLoadUint64	./sync/atomic/atomic_test.go	/^func TestLoadUint64(t *testing.T) {$/;"	f
TestLoadUintptr	./sync/atomic/atomic_test.go	/^func TestLoadUintptr(t *testing.T) {$/;"	f
TestLocalImportsEasy	./cmd/go/go_test.go	/^func TestLocalImportsEasy(t *testing.T) {$/;"	f
TestLocalImportsEasySub	./cmd/go/go_test.go	/^func TestLocalImportsEasySub(t *testing.T) {$/;"	f
TestLocalImportsGoInstallShouldFail	./cmd/go/go_test.go	/^func TestLocalImportsGoInstallShouldFail(t *testing.T) {$/;"	f
TestLocalImportsHard	./cmd/go/go_test.go	/^func TestLocalImportsHard(t *testing.T) {$/;"	f
TestLocalZoneAbbr	./time/zoneinfo_windows_test.go	/^func TestLocalZoneAbbr(t *testing.T) {$/;"	f
TestLocationRace	./time/time_test.go	/^func TestLocationRace(t *testing.T) {$/;"	f
TestLocationResponse	./net/http/response_test.go	/^func TestLocationResponse(t *testing.T) {$/;"	f
TestLockOSThread	./runtime/runtime_linux_test.go	/^func TestLockOSThread(t *testing.T) {$/;"	f
TestLockedDeadlock	./runtime/crash_test.go	/^func TestLockedDeadlock(t *testing.T) {$/;"	f
TestLockedDeadlock2	./runtime/crash_test.go	/^func TestLockedDeadlock2(t *testing.T) {$/;"	f
TestLog	./math/all_test.go	/^func TestLog(t *testing.T) {$/;"	f
TestLog	./math/cmplx/cmath_test.go	/^func TestLog(t *testing.T) {$/;"	f
TestLog10	./math/all_test.go	/^func TestLog10(t *testing.T) {$/;"	f
TestLog10	./math/cmplx/cmath_test.go	/^func TestLog10(t *testing.T) {$/;"	f
TestLog1p	./math/all_test.go	/^func TestLog1p(t *testing.T) {$/;"	f
TestLog2	./math/all_test.go	/^func TestLog2(t *testing.T) {$/;"	f
TestLogb	./math/all_test.go	/^func TestLogb(t *testing.T) {$/;"	f
TestLongSymlink	./os/os_test.go	/^func TestLongSymlink(t *testing.T) {$/;"	f
TestLongest	./regexp/exec_test.go	/^func TestLongest(t *testing.T) {$/;"	f
TestLookPath	./os/exec/lp_windows_test.go	/^func TestLookPath(t *testing.T) {$/;"	f
TestLookPathNotFound	./os/exec/lp_test.go	/^func TestLookPathNotFound(t *testing.T) {$/;"	f
TestLookPathUnixEmptyPath	./os/exec/lp_unix_test.go	/^func TestLookPathUnixEmptyPath(t *testing.T) {$/;"	f
TestLookup	./os/user/user_test.go	/^func TestLookup(t *testing.T) {$/;"	f
TestLookupCNAME	./net/lookup_windows_test.go	/^func TestLookupCNAME(t *testing.T) {$/;"	f
TestLookupDots	./net/lookup_test.go	/^func TestLookupDots(t *testing.T) {$/;"	f
TestLookupEnv	./os/env_test.go	/^func TestLookupEnv(t *testing.T) {$/;"	f
TestLookupFieldOrMethod	./go/types/api_test.go	/^func TestLookupFieldOrMethod(t *testing.T) {$/;"	f
TestLookupGmailMX	./net/lookup_test.go	/^func TestLookupGmailMX(t *testing.T) {$/;"	f
TestLookupGmailNS	./net/lookup_test.go	/^func TestLookupGmailNS(t *testing.T) {$/;"	f
TestLookupGmailTXT	./net/lookup_test.go	/^func TestLookupGmailTXT(t *testing.T) {$/;"	f
TestLookupGoogleHost	./net/lookup_test.go	/^func TestLookupGoogleHost(t *testing.T) {$/;"	f
TestLookupGoogleIP	./net/lookup_test.go	/^func TestLookupGoogleIP(t *testing.T) {$/;"	f
TestLookupGooglePublicDNSAddr	./net/lookup_test.go	/^func TestLookupGooglePublicDNSAddr(t *testing.T) {$/;"	f
TestLookupGoogleSRV	./net/lookup_test.go	/^func TestLookupGoogleSRV(t *testing.T) {$/;"	f
TestLookupIANACNAME	./net/lookup_test.go	/^func TestLookupIANACNAME(t *testing.T) {$/;"	f
TestLookupIPDeadline	./net/lookup_test.go	/^func TestLookupIPDeadline(t *testing.T) {$/;"	f
TestLookupId	./os/user/user_test.go	/^func TestLookupId(t *testing.T) {$/;"	f
TestLookupMX	./net/lookup_windows_test.go	/^func TestLookupMX(t *testing.T) {$/;"	f
TestLookupMallocs	./mime/type_test.go	/^func TestLookupMallocs(t *testing.T) {$/;"	f
TestLookupNS	./net/lookup_windows_test.go	/^func TestLookupNS(t *testing.T) {$/;"	f
TestLookupPort	./net/port_test.go	/^func TestLookupPort(t *testing.T) {$/;"	f
TestLookupStaticAddr	./net/hosts_test.go	/^func TestLookupStaticAddr(t *testing.T) {$/;"	f
TestLookupStaticHost	./net/hosts_test.go	/^func TestLookupStaticHost(t *testing.T) {$/;"	f
TestLookupTXT	./net/lookup_windows_test.go	/^func TestLookupTXT(t *testing.T) {$/;"	f
TestLookupWithIP	./net/ip_test.go	/^func TestLookupWithIP(t *testing.T) {$/;"	f
TestLoopCount	./image/gif/reader_test.go	/^func TestLoopCount(t *testing.T) {$/;"	f
TestLsh	./cmd/compile/internal/big/int_test.go	/^func TestLsh(t *testing.T) {$/;"	f
TestLsh	./math/big/int_test.go	/^func TestLsh(t *testing.T) {$/;"	f
TestLshRsh	./cmd/compile/internal/big/int_test.go	/^func TestLshRsh(t *testing.T) {$/;"	f
TestLshRsh	./math/big/int_test.go	/^func TestLshRsh(t *testing.T) {$/;"	f
TestLshSelf	./cmd/compile/internal/big/int_test.go	/^func TestLshSelf(t *testing.T) {$/;"	f
TestLshSelf	./math/big/int_test.go	/^func TestLshSelf(t *testing.T) {$/;"	f
TestLstat	./os/os_test.go	/^func TestLstat(t *testing.T) {$/;"	f
TestMTF	./compress/bzip2/bzip2_test.go	/^func TestMTF(t *testing.T) {$/;"	f
TestMain	./cmd/go/go_test.go	/^func TestMain(m *testing.M) {$/;"	f
TestMain	./net/http/main_test.go	/^func TestMain(m *testing.M) {$/;"	f
TestMain	./net/internal/socktest/main_test.go	/^func TestMain(m *testing.M) {$/;"	f
TestMain	./net/main_test.go	/^func TestMain(m *testing.M) {$/;"	f
TestMain	./syscall/syscall_linux_test.go	/^func TestMain(m *testing.M) {$/;"	f
TestMain	./testing/testing.go	/^\/\/	func TestMain(m *testing.M) {$/;"	f
TestMain	./testing/testing.go	/^\/\/	func TestMain(m *testing.M)$/;"	f
TestMain	./testing/testing_test.go	/^func TestMain(m *testing.M) {$/;"	f
TestMainGoroutineId	./runtime/crash_test.go	/^func TestMainGoroutineId(t *testing.T) {$/;"	f
TestMakeFunc	./reflect/all_test.go	/^func TestMakeFunc(t *testing.T) {$/;"	f
TestMakeFuncInterface	./reflect/all_test.go	/^func TestMakeFuncInterface(t *testing.T) {$/;"	f
TestMakeFuncStackCopy	./reflect/all_test.go	/^func TestMakeFuncStackCopy(t *testing.T) {$/;"	f
TestMakeFuncVariadic	./reflect/all_test.go	/^func TestMakeFuncVariadic(t *testing.T) {$/;"	f
TestMalformedInput	./net/rpc/jsonrpc/all_test.go	/^func TestMalformedInput(t *testing.T) {$/;"	f
TestMalformedOutput	./net/rpc/jsonrpc/all_test.go	/^func TestMalformedOutput(t *testing.T) {$/;"	f
TestManyErrBadConn	./database/sql/sql_test.go	/^func TestManyErrBadConn(t *testing.T) {$/;"	f
TestMap	./bytes/bytes_test.go	/^func TestMap(t *testing.T) {$/;"	f
TestMap	./reflect/all_test.go	/^func TestMap(t *testing.T) {$/;"	f
TestMap	./strings/strings_test.go	/^func TestMap(t *testing.T) {$/;"	f
TestMapAlias	./testing/quick/quick_test.go	/^type TestMapAlias map[int]int$/;"	t
TestMapBug1	./encoding/gob/encoder_test.go	/^func TestMapBug1(t *testing.T) {$/;"	f
TestMapCounter	./expvar/expvar_test.go	/^func TestMapCounter(t *testing.T) {$/;"	f
TestMapIterOrder	./runtime/map_test.go	/^func TestMapIterOrder(t *testing.T) {$/;"	f
TestMapLargeKeyNoPointer	./runtime/map_test.go	/^func TestMapLargeKeyNoPointer(t *testing.T) {$/;"	f
TestMapLargeValNoPointer	./runtime/map_test.go	/^func TestMapLargeValNoPointer(t *testing.T) {$/;"	f
TestMapNanGrowIterator	./runtime/map_test.go	/^func TestMapNanGrowIterator(t *testing.T) {$/;"	f
TestMapOf	./reflect/all_test.go	/^func TestMapOf(t *testing.T) {$/;"	f
TestMapOfGCKeys	./reflect/all_test.go	/^func TestMapOfGCKeys(t *testing.T) {$/;"	f
TestMapOfGCValues	./reflect/all_test.go	/^func TestMapOfGCValues(t *testing.T) {$/;"	f
TestMapPrinter	./fmt/fmt_test.go	/^func TestMapPrinter(t *testing.T) {$/;"	f
TestMapSetNil	./reflect/all_test.go	/^func TestMapSetNil(t *testing.T) {$/;"	f
TestMapSparseIterOrder	./runtime/map_test.go	/^func TestMapSparseIterOrder(t *testing.T) {$/;"	f
TestMapStringBytesLookup	./runtime/map_test.go	/^func TestMapStringBytesLookup(t *testing.T) {$/;"	f
TestMapType	./encoding/gob/type_test.go	/^func TestMapType(t *testing.T) {$/;"	f
TestMarshal	./crypto/elliptic/elliptic_test.go	/^func TestMarshal(t *testing.T) {$/;"	f
TestMarshal	./encoding/asn1/marshal_test.go	/^func TestMarshal(t *testing.T) {$/;"	f
TestMarshal	./encoding/json/decode_test.go	/^func TestMarshal(t *testing.T) {$/;"	f
TestMarshal	./encoding/xml/marshal_test.go	/^func TestMarshal(t *testing.T) {$/;"	f
TestMarshalBadUTF8	./encoding/json/decode_test.go	/^func TestMarshalBadUTF8(t *testing.T) {$/;"	f
TestMarshalEmbeds	./encoding/json/decode_test.go	/^func TestMarshalEmbeds(t *testing.T) {$/;"	f
TestMarshalEmptyIP	./net/ip_test.go	/^func TestMarshalEmptyIP(t *testing.T) {$/;"	f
TestMarshalErrors	./encoding/xml/marshal_test.go	/^func TestMarshalErrors(t *testing.T) {$/;"	f
TestMarshalFlush	./encoding/xml/marshal_test.go	/^func TestMarshalFlush(t *testing.T) {$/;"	f
TestMarshalIndent	./encoding/xml/marshal_test.go	/^func TestMarshalIndent(t *testing.T) {$/;"	f
TestMarshalNS	./encoding/xml/read_test.go	/^func TestMarshalNS(t *testing.T) {$/;"	f
TestMarshalNSAttr	./encoding/xml/read_test.go	/^func TestMarshalNSAttr(t *testing.T) {$/;"	f
TestMarshalNumberZeroVal	./encoding/json/decode_test.go	/^func TestMarshalNumberZeroVal(t *testing.T) {$/;"	f
TestMarshalRSAPrivateKey	./crypto/x509/x509_test.go	/^func TestMarshalRSAPrivateKey(t *testing.T) {$/;"	f
TestMarshalUnmarshal	./crypto/tls/handshake_messages_test.go	/^func TestMarshalUnmarshal(t *testing.T) {$/;"	f
TestMarshalWriteErrors	./encoding/xml/marshal_test.go	/^func TestMarshalWriteErrors(t *testing.T) {$/;"	f
TestMarshalWriteIOErrors	./encoding/xml/marshal_test.go	/^func TestMarshalWriteIOErrors(t *testing.T) {$/;"	f
TestMarshalerEscaping	./encoding/json/encode_test.go	/^func TestMarshalerEscaping(t *testing.T) {$/;"	f
TestMatch	./path/filepath/match_test.go	/^func TestMatch(t *testing.T) {$/;"	f
TestMatch	./path/match_test.go	/^func TestMatch(t *testing.T) {$/;"	f
TestMatch	./regexp/all_test.go	/^func TestMatch(t *testing.T) {$/;"	f
TestMatchFunction	./regexp/all_test.go	/^func TestMatchFunction(t *testing.T) {$/;"	f
TestMatchHostnames	./crypto/x509/x509_test.go	/^func TestMatchHostnames(t *testing.T) {$/;"	f
TestMatchIP	./crypto/x509/x509_test.go	/^func TestMatchIP(t *testing.T) {$/;"	f
TestMatchPattern	./cmd/go/match_test.go	/^func TestMatchPattern(t *testing.T) {$/;"	f
TestMathBigDivide	./runtime/pprof/pprof_test.go	/^func TestMathBigDivide(t *testing.T) {$/;"	f
TestMax	./math/all_test.go	/^func TestMax(t *testing.T) {$/;"	f
TestMaxIdleConns	./database/sql/sql_test.go	/^func TestMaxIdleConns(t *testing.T) {$/;"	f
TestMaxOpenConns	./database/sql/sql_test.go	/^func TestMaxOpenConns(t *testing.T) {$/;"	f
TestMaxOpenConnsOnBusy	./database/sql/sql_test.go	/^func TestMaxOpenConnsOnBusy(t *testing.T) {$/;"	f
TestMaxPathLen	./crypto/x509/x509_test.go	/^func TestMaxPathLen(t *testing.T) {$/;"	f
TestMemStats	./runtime/malloc_test.go	/^func TestMemStats(t *testing.T) {$/;"	f
TestMemclr	./runtime/memmove_test.go	/^func TestMemclr(t *testing.T) {$/;"	f
TestMemmove	./runtime/memmove_test.go	/^func TestMemmove(t *testing.T) {$/;"	f
TestMemmoveAlias	./runtime/memmove_test.go	/^func TestMemmoveAlias(t *testing.T) {$/;"	f
TestMemmoveOverflow	./runtime/memmove_linux_amd64_test.go	/^func TestMemmoveOverflow(t *testing.T) {$/;"	f
TestMemoryProfiler	./runtime/pprof/mprof_test.go	/^func TestMemoryProfiler(t *testing.T) {$/;"	f
TestMentionGOPATHInFirstGOPATHEntry	./cmd/go/go_test.go	/^func TestMentionGOPATHInFirstGOPATHEntry(t *testing.T) {$/;"	f
TestMentionGOPATHNotOnSecondEntry	./cmd/go/go_test.go	/^func TestMentionGOPATHNotOnSecondEntry(t *testing.T) {$/;"	f
TestMergePAX	./archive/tar/reader_test.go	/^func TestMergePAX(t *testing.T) {$/;"	f
TestMergeRuneSet	./regexp/onepass_test.go	/^func TestMergeRuneSet(t *testing.T) {$/;"	f
TestMessageForExecuteEmpty	./text/template/exec_test.go	/^func TestMessageForExecuteEmpty(t *testing.T) {$/;"	f
TestMethod	./reflect/all_test.go	/^func TestMethod(t *testing.T) {$/;"	f
TestMethod5	./reflect/all_test.go	/^func TestMethod5(t *testing.T) {$/;"	f
TestMethodValue	./reflect/all_test.go	/^func TestMethodValue(t *testing.T) {$/;"	f
TestMidnightIs12AM	./time/format_test.go	/^func TestMidnightIs12AM(t *testing.T) {$/;"	f
TestMin	./math/all_test.go	/^func TestMin(t *testing.T) {$/;"	f
TestMinutesInTimeZone	./time/format_test.go	/^func TestMinutesInTimeZone(t *testing.T) {$/;"	f
TestMissingFileMultipartRequest	./net/http/request_test.go	/^func TestMissingFileMultipartRequest(t *testing.T) {$/;"	f
TestMissingGOPATHIsReported	./cmd/go/go_test.go	/^func TestMissingGOPATHIsReported(t *testing.T) {$/;"	f
TestMissingMapKey	./text/template/exec_test.go	/^func TestMissingMapKey(t *testing.T) {$/;"	f
TestMissingZone	./time/format_test.go	/^func TestMissingZone(t *testing.T) {$/;"	f
TestMixedReadsAndWrites	./bytes/buffer_test.go	/^func TestMixedReadsAndWrites(t *testing.T) {$/;"	f
TestMkdirAll	./os/path_test.go	/^func TestMkdirAll(t *testing.T) {$/;"	f
TestMkdirAllAtSlash	./os/path_test.go	/^func TestMkdirAllAtSlash(t *testing.T) {$/;"	f
TestMkdirAllWithSymlink	./os/path_test.go	/^func TestMkdirAllWithSymlink(t *testing.T) {$/;"	f
TestMmap	./syscall/mmap_unix_test.go	/^func TestMmap(t *testing.T) {$/;"	f
TestMod	./math/all_test.go	/^func TestMod(t *testing.T) {$/;"	f
TestModInverse	./cmd/compile/internal/big/int_test.go	/^func TestModInverse(t *testing.T) {$/;"	f
TestModInverse	./math/big/int_test.go	/^func TestModInverse(t *testing.T) {$/;"	f
TestModSqrt	./cmd/compile/internal/big/int_test.go	/^func TestModSqrt(t *testing.T) {$/;"	f
TestModSqrt	./math/big/int_test.go	/^func TestModSqrt(t *testing.T) {$/;"	f
TestModTime	./archive/zip/zip_test.go	/^func TestModTime(t *testing.T) {$/;"	f
TestModW	./cmd/compile/internal/big/nat_test.go	/^func TestModW(t *testing.T) {$/;"	f
TestModW	./math/big/nat_test.go	/^func TestModW(t *testing.T) {$/;"	f
TestModf	./math/all_test.go	/^func TestModf(t *testing.T) {$/;"	f
TestMontgomery	./cmd/compile/internal/big/nat_test.go	/^func TestMontgomery(t *testing.T) {$/;"	f
TestMontgomery	./math/big/nat_test.go	/^func TestMontgomery(t *testing.T) {$/;"	f
TestMove	./container/list/list_test.go	/^func TestMove(t *testing.T) {$/;"	f
TestMoveEmptyRing	./container/ring/ring_test.go	/^func TestMoveEmptyRing(t *testing.T) {$/;"	f
TestMoveGit	./cmd/go/go_test.go	/^func TestMoveGit(t *testing.T) {$/;"	f
TestMoveHG	./cmd/go/go_test.go	/^\/\/ func TestMoveHG(t *testing.T) {$/;"	f
TestMoveUnkownMark	./container/list/list_test.go	/^func TestMoveUnkownMark(t *testing.T) {$/;"	f
TestMsgExternal	./cmd/go/testdata/src/vend/hello/hellox_test.go	/^func TestMsgExternal(t *testing.T) {$/;"	f
TestMsgInternal	./cmd/go/testdata/src/vend/hello/hello_test.go	/^func TestMsgInternal(t *testing.T) {$/;"	f
TestMul	./cmd/compile/internal/big/int_test.go	/^func TestMul(t *testing.T) {$/;"	f
TestMul	./crypto/aes/aes_test.go	/^func TestMul(t *testing.T) {$/;"	f
TestMul	./math/big/int_test.go	/^func TestMul(t *testing.T) {$/;"	f
TestMulAddWWW	./cmd/compile/internal/big/arith_test.go	/^func TestMulAddWWW(t *testing.T) {$/;"	f
TestMulAddWWW	./math/big/arith_test.go	/^func TestMulAddWWW(t *testing.T) {$/;"	f
TestMulBits	./cmd/compile/internal/big/bits_test.go	/^func TestMulBits(t *testing.T) {$/;"	f
TestMulBits	./math/big/bits_test.go	/^func TestMulBits(t *testing.T) {$/;"	f
TestMulRangeN	./cmd/compile/internal/big/nat_test.go	/^func TestMulRangeN(t *testing.T) {$/;"	f
TestMulRangeN	./math/big/nat_test.go	/^func TestMulRangeN(t *testing.T) {$/;"	f
TestMulRangeZ	./cmd/compile/internal/big/int_test.go	/^func TestMulRangeZ(t *testing.T) {$/;"	f
TestMulRangeZ	./math/big/int_test.go	/^func TestMulRangeZ(t *testing.T) {$/;"	f
TestMulUnbalanced	./cmd/compile/internal/big/nat_test.go	/^func TestMulUnbalanced(t *testing.T) {$/;"	f
TestMulUnbalanced	./math/big/nat_test.go	/^func TestMulUnbalanced(t *testing.T) {$/;"	f
TestMulWW	./cmd/compile/internal/big/arith_test.go	/^func TestMulWW(t *testing.T) {$/;"	f
TestMulWW	./math/big/arith_test.go	/^func TestMulWW(t *testing.T) {$/;"	f
TestMultiConsumer	./runtime/chan_test.go	/^func TestMultiConsumer(t *testing.T) {$/;"	f
TestMultiExecute	./text/template/multi_test.go	/^func TestMultiExecute(t *testing.T) {$/;"	f
TestMultiFileInitOrder	./go/types/api_test.go	/^func TestMultiFileInitOrder(t *testing.T) {$/;"	f
TestMultiLine	./fmt/scan_test.go	/^func TestMultiLine(t *testing.T) {$/;"	f
TestMultiParse	./text/template/multi_test.go	/^func TestMultiParse(t *testing.T) {$/;"	f
TestMultiReader	./io/multi_test.go	/^func TestMultiReader(t *testing.T) {$/;"	f
TestMultiReaderCopy	./io/multi_test.go	/^func TestMultiReaderCopy(t *testing.T) {$/;"	f
TestMultiWriter	./io/multi_test.go	/^func TestMultiWriter(t *testing.T) {$/;"	f
TestMultiWriterCopy	./io/multi_test.go	/^func TestMultiWriterCopy(t *testing.T) {$/;"	f
TestMultipart	./mime/multipart/multipart_test.go	/^func TestMultipart(t *testing.T) {$/;"	f
TestMultipartOnlyNewlines	./mime/multipart/multipart_test.go	/^func TestMultipartOnlyNewlines(t *testing.T) {$/;"	f
TestMultipartReader	./net/http/request_test.go	/^func TestMultipartReader(t *testing.T) {$/;"	f
TestMultipartReaderOrder	./net/http/request_test.go	/^func TestMultipartReaderOrder(t *testing.T) {$/;"	f
TestMultipartRequest	./net/http/request_test.go	/^func TestMultipartRequest(t *testing.T) {$/;"	f
TestMultipartRequestAuto	./net/http/request_test.go	/^func TestMultipartRequestAuto(t *testing.T) {$/;"	f
TestMultipartSlowInput	./mime/multipart/multipart_test.go	/^func TestMultipartSlowInput(t *testing.T) {$/;"	f
TestMultipartTruncated	./mime/multipart/multipart_test.go	/^func TestMultipartTruncated(t *testing.T) {$/;"	f
TestMultipleGOPATHEntriesReportedSeparately	./cmd/go/go_test.go	/^func TestMultipleGOPATHEntriesReportedSeparately(t *testing.T) {$/;"	f
TestMultipletRNSChunks	./image/png/reader_test.go	/^func TestMultipletRNSChunks(t *testing.T) {$/;"	f
TestMultistreamFalse	./compress/gzip/gunzip_test.go	/^func TestMultistreamFalse(t *testing.T) {$/;"	f
TestMutex	./sync/mutex_test.go	/^func TestMutex(t *testing.T) {$/;"	f
TestMutexClose	./net/fd_mutex_test.go	/^func TestMutexClose(t *testing.T) {$/;"	f
TestMutexCloseUnblock	./net/fd_mutex_test.go	/^func TestMutexCloseUnblock(t *testing.T) {$/;"	f
TestMutexLock	./net/fd_mutex_test.go	/^func TestMutexLock(t *testing.T) {$/;"	f
TestMutexPanic	./net/fd_mutex_test.go	/^func TestMutexPanic(t *testing.T) {$/;"	f
TestMutexPanic	./sync/mutex_test.go	/^func TestMutexPanic(t *testing.T) {$/;"	f
TestMutexStress	./net/fd_mutex_test.go	/^func TestMutexStress(t *testing.T) {$/;"	f
TestMutipleEncodingsOfBadType	./encoding/gob/encoder_test.go	/^func TestMutipleEncodingsOfBadType(t *testing.T) {$/;"	f
TestMuxRedirectLeadingSlashes	./net/http/serve_test.go	/^func TestMuxRedirectLeadingSlashes(t *testing.T) {$/;"	f
TestMyReaderScan	./fmt/scan_test.go	/^func TestMyReaderScan(t *testing.T) {$/;"	f
TestMyReaderScanfMulti	./fmt/scan_test.go	/^func TestMyReaderScanfMulti(t *testing.T) {$/;"	f
TestMyReaderScanln	./fmt/scan_test.go	/^func TestMyReaderScanln(t *testing.T) {$/;"	f
TestNLZ	./cmd/compile/internal/big/nat_test.go	/^func TestNLZ(t *testing.T) {$/;"	f
TestNLZ	./math/big/nat_test.go	/^func TestNLZ(t *testing.T) {$/;"	f
TestNM	./cmd/nm/nm_test.go	/^func TestNM(t *testing.T) {$/;"	f
TestNPrimeKeyGeneration	./crypto/rsa/rsa_test.go	/^func TestNPrimeKeyGeneration(t *testing.T) {$/;"	f
TestNaN	./fmt/scan_test.go	/^func TestNaN(t *testing.T) {$/;"	f
TestNaN	./math/all_test.go	/^func TestNaN(t *testing.T) {$/;"	f
TestNameAccessors	./mime/multipart/multipart_test.go	/^func TestNameAccessors(t *testing.T) {$/;"	f
TestNames	./debug/elf/elf_test.go	/^func TestNames(t *testing.T) {$/;"	f
TestNan	./runtime/map_test.go	/^func TestNan(t *testing.T) {$/;"	f
TestNanosecondsToLocalTime	./time/time_test.go	/^func TestNanosecondsToLocalTime(t *testing.T) {$/;"	f
TestNanosecondsToUTC	./time/time_test.go	/^func TestNanosecondsToUTC(t *testing.T) {$/;"	f
TestNanosecondsToUTCAndBack	./time/time_test.go	/^func TestNanosecondsToUTCAndBack(t *testing.T) {$/;"	f
TestNeedsSniff	./net/http/response_test.go	/^func TestNeedsSniff(t *testing.T) {$/;"	f
TestNegativeHdrSize	./archive/tar/reader_test.go	/^func TestNegativeHdrSize(t *testing.T) {$/;"	f
TestNegativeRead	./bufio/bufio_test.go	/^func TestNegativeRead(t *testing.T) {$/;"	f
TestNegativeRune	./unicode/utf8/utf8_test.go	/^func TestNegativeRune(t *testing.T) {$/;"	f
TestNegativeZero	./runtime/map_test.go	/^func TestNegativeZero(t *testing.T) {$/;"	f
TestNested	./mime/multipart/multipart_test.go	/^func TestNested(t *testing.T) {$/;"	f
TestNestedDirectives	./encoding/xml/xml_test.go	/^func TestNestedDirectives(t *testing.T) {$/;"	f
TestNestedInterfaces	./encoding/gob/encoder_test.go	/^func TestNestedInterfaces(t *testing.T) {$/;"	f
TestNestedMethods	./reflect/all_test.go	/^func TestNestedMethods(t *testing.T) {$/;"	f
TestNesting	./encoding/gob/codec_test.go	/^func TestNesting(t *testing.T) {$/;"	f
TestNetIP	./encoding/gob/gobencdec_test.go	/^func TestNetIP(t *testing.T) {$/;"	f
TestNetpollDeadlock	./runtime/crash_test.go	/^func TestNetpollDeadlock(t *testing.T) {$/;"	f
TestNetworkNumberAndMask	./net/ip_test.go	/^func TestNetworkNumberAndMask(t *testing.T) {$/;"	f
TestNew	./container/ring/ring_test.go	/^func TestNew(t *testing.T) {$/;"	f
TestNew	./log/syslog/syslog_test.go	/^func TestNew(t *testing.T) {$/;"	f
TestNew	./text/template/multi_test.go	/^func TestNew(t *testing.T) {$/;"	f
TestNewBuffer	./bytes/buffer_test.go	/^func TestNewBuffer(t *testing.T) {$/;"	f
TestNewBufferString	./bytes/buffer_test.go	/^func TestNewBufferString(t *testing.T) {$/;"	f
TestNewClient	./net/smtp/smtp_test.go	/^func TestNewClient(t *testing.T) {$/;"	f
TestNewClient2	./net/smtp/smtp_test.go	/^func TestNewClient2(t *testing.T) {$/;"	f
TestNewEqual	./errors/errors_test.go	/^func TestNewEqual(t *testing.T) {$/;"	f
TestNewLineCharacters	./encoding/base32/base32_test.go	/^func TestNewLineCharacters(t *testing.T) {$/;"	f
TestNewLineCharacters	./encoding/base64/base64_test.go	/^func TestNewLineCharacters(t *testing.T) {$/;"	f
TestNewLogger	./log/syslog/syslog_test.go	/^func TestNewLogger(t *testing.T) {$/;"	f
TestNewOSProc0	./runtime/norace_linux_test.go	/^func TestNewOSProc0(t *testing.T) {$/;"	f
TestNewReaderSizeIdempotent	./bufio/bufio_test.go	/^func TestNewReaderSizeIdempotent(t *testing.T) {$/;"	f
TestNewRequestContentLength	./net/http/request_test.go	/^func TestNewRequestContentLength(t *testing.T) {$/;"	f
TestNewRequestHost	./net/http/request_test.go	/^func TestNewRequestHost(t *testing.T) {$/;"	f
TestNewTickerLtZeroDuration	./time/tick_test.go	/^func TestNewTickerLtZeroDuration(t *testing.T) {$/;"	f
TestNewWriterSizeIdempotent	./bufio/bufio_test.go	/^func TestNewWriterSizeIdempotent(t *testing.T) {$/;"	f
TestNext	./bytes/buffer_test.go	/^func TestNext(t *testing.T) {$/;"	f
TestNext	./text/scanner/scanner_test.go	/^func TestNext(t *testing.T) {$/;"	f
TestNextEOFHandling	./text/scanner/scanner_test.go	/^func TestNextEOFHandling(t *testing.T) {$/;"	f
TestNextJsCtx	./html/template/js_test.go	/^func TestNextJsCtx(t *testing.T) {$/;"	f
TestNextProtoUpgrade	./net/http/npn_test.go	/^func TestNextProtoUpgrade(t *testing.T) {$/;"	f
TestNextValueBig	./encoding/json/scanner_test.go	/^func TestNextValueBig(t *testing.T) {$/;"	f
TestNextafter32	./math/all_test.go	/^func TestNextafter32(t *testing.T) {$/;"	f
TestNextafter64	./math/all_test.go	/^func TestNextafter64(t *testing.T) {$/;"	f
TestNil	./bytes/buffer_test.go	/^func TestNil(t *testing.T) {$/;"	f
TestNilBody	./net/http/httputil/reverseproxy_test.go	/^func TestNilBody(t *testing.T) {$/;"	f
TestNilDeref	./sync/atomic/atomic_test.go	/^func TestNilDeref(t *testing.T) {$/;"	f
TestNilDoesNotBecomeTyped	./fmt/fmt_test.go	/^func TestNilDoesNotBecomeTyped(t *testing.T) {$/;"	f
TestNilFileMethods	./os/os_test.go	/^func TestNilFileMethods(t *testing.T) {$/;"	f
TestNilMap	./reflect/all_test.go	/^func TestNilMap(t *testing.T) {$/;"	f
TestNilPointerInsideInterface	./encoding/gob/encoder_test.go	/^func TestNilPointerInsideInterface(t *testing.T) {$/;"	f
TestNilPointers	./testing/quick/quick_test.go	/^func TestNilPointers(t *testing.T) {$/;"	f
TestNilProcessStateString	./os/os_test.go	/^func TestNilProcessStateString(t *testing.T) {$/;"	f
TestNilPtrValueSub	./reflect/all_test.go	/^func TestNilPtrValueSub(t *testing.T) {$/;"	f
TestNlitOutOfRange	./compress/flate/reader_test.go	/^func TestNlitOutOfRange(t *testing.T) {$/;"	f
TestNoCompressionOverlap	./crypto/tls/handshake_server_test.go	/^func TestNoCompressionOverlap(t *testing.T) {$/;"	f
TestNoContentLengthIfTransferEncoding	./net/http/serve_test.go	/^func TestNoContentLengthIfTransferEncoding(t *testing.T) {$/;"	f
TestNoExistBinary	./os/exec/exec_test.go	/^func TestNoExistBinary(t *testing.T) {$/;"	f
TestNoHelperGoroutines	./runtime/crash_test.go	/^func TestNoHelperGoroutines(t *testing.T) {$/;"	f
TestNoPalette	./image/gif/reader_test.go	/^func TestNoPalette(t *testing.T) {$/;"	f
TestNoPos	./go/token/position_test.go	/^func TestNoPos(t *testing.T) {$/;"	f
TestNoRC4ByDefault	./crypto/tls/handshake_server_test.go	/^func TestNoRC4ByDefault(t *testing.T) {$/;"	f
TestNoRaceAddrExpr	./runtime/race/testdata/mop_test.go	/^func TestNoRaceAddrExpr(t *testing.T) {$/;"	f
TestNoRaceAfterFunc1	./runtime/race/testdata/sync_test.go	/^func TestNoRaceAfterFunc1(t *testing.T) {$/;"	f
TestNoRaceAfterFunc2	./runtime/race/testdata/sync_test.go	/^func TestNoRaceAfterFunc2(t *testing.T) {$/;"	f
TestNoRaceAfterFunc3	./runtime/race/testdata/sync_test.go	/^func TestNoRaceAfterFunc3(t *testing.T) {$/;"	f
TestNoRaceAnd	./runtime/race/testdata/mop_test.go	/^func TestNoRaceAnd(t *testing.T) {$/;"	f
TestNoRaceArrayWW	./runtime/race/testdata/slice_test.go	/^func TestNoRaceArrayWW(t *testing.T) {$/;"	f
TestNoRaceAsFunc4	./runtime/race/testdata/mop_test.go	/^func TestNoRaceAsFunc4(t *testing.T) {$/;"	f
TestNoRaceAtomicAddInt32	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicAddInt32(t *testing.T) {$/;"	f
TestNoRaceAtomicAddInt64	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicAddInt64(t *testing.T) {$/;"	f
TestNoRaceAtomicCASCASInt32	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicCASCASInt32(t *testing.T) {$/;"	f
TestNoRaceAtomicCASCASInt32_2	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicCASCASInt32_2(t *testing.T) {$/;"	f
TestNoRaceAtomicCASCASUInt64	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicCASCASUInt64(t *testing.T) {$/;"	f
TestNoRaceAtomicCASLoadInt32	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicCASLoadInt32(t *testing.T) {$/;"	f
TestNoRaceAtomicCrash	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicCrash(t *testing.T) {$/;"	f
TestNoRaceAtomicLoadAddInt32	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicLoadAddInt32(t *testing.T) {$/;"	f
TestNoRaceAtomicLoadInt64	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicLoadInt64(t *testing.T) {$/;"	f
TestNoRaceAtomicLoadStoreInt32	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicLoadStoreInt32(t *testing.T) {$/;"	f
TestNoRaceAtomicLoadStorePointer	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicLoadStorePointer(t *testing.T) {$/;"	f
TestNoRaceAtomicStoreCASInt32	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicStoreCASInt32(t *testing.T) {$/;"	f
TestNoRaceAtomicStoreCASUint64	./runtime/race/testdata/atomic_test.go	/^func TestNoRaceAtomicStoreCASUint64(t *testing.T) {$/;"	f
TestNoRaceBlank	./runtime/race/testdata/mop_test.go	/^func TestNoRaceBlank(t *testing.T) {$/;"	f
TestNoRaceCase	./runtime/race/testdata/mop_test.go	/^func TestNoRaceCase(t *testing.T) {$/;"	f
TestNoRaceCaseFallthrough	./runtime/race/testdata/mop_test.go	/^func TestNoRaceCaseFallthrough(t *testing.T) {$/;"	f
TestNoRaceCgoSync	./runtime/race/testdata/cgo_test.go	/^func TestNoRaceCgoSync(t *testing.T) {$/;"	f
TestNoRaceChanAsync	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanAsync(t *testing.T) {$/;"	f
TestNoRaceChanAsyncCloseRecv	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanAsyncCloseRecv(t *testing.T) {$/;"	f
TestNoRaceChanAsyncCloseRecv2	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanAsyncCloseRecv2(t *testing.T) {$/;"	f
TestNoRaceChanAsyncCloseRecv3	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanAsyncCloseRecv3(t *testing.T) {$/;"	f
TestNoRaceChanMutex	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanMutex(t *testing.T) {$/;"	f
TestNoRaceChanPtr	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanPtr(t *testing.T) {$/;"	f
TestNoRaceChanReadWriteAsync	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanReadWriteAsync(t *testing.T) {$/;"	f
TestNoRaceChanSync	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanSync(t *testing.T) {$/;"	f
TestNoRaceChanSyncCloseRecv	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanSyncCloseRecv(t *testing.T) {$/;"	f
TestNoRaceChanSyncCloseRecv2	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanSyncCloseRecv2(t *testing.T) {$/;"	f
TestNoRaceChanSyncCloseRecv3	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanSyncCloseRecv3(t *testing.T) {$/;"	f
TestNoRaceChanSyncRev	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanSyncRev(t *testing.T) {$/;"	f
TestNoRaceChanWaitGroup	./runtime/race/testdata/chan_test.go	/^func TestNoRaceChanWaitGroup(t *testing.T) {$/;"	f
TestNoRaceComp	./runtime/race/testdata/comp_test.go	/^func TestNoRaceComp(t *testing.T) {$/;"	f
TestNoRaceComp2	./runtime/race/testdata/comp_test.go	/^func TestNoRaceComp2(t *testing.T) {$/;"	f
TestNoRaceCompPtr	./runtime/race/testdata/comp_test.go	/^func TestNoRaceCompPtr(t *testing.T) {$/;"	f
TestNoRaceCompPtr2	./runtime/race/testdata/comp_test.go	/^func TestNoRaceCompPtr2(t *testing.T) {$/;"	f
TestNoRaceCond	./runtime/race/testdata/sync_test.go	/^func TestNoRaceCond(t *testing.T) {$/;"	f
TestNoRaceEmptyStruct	./runtime/race/testdata/mop_test.go	/^func TestNoRaceEmptyStruct(t *testing.T) {$/;"	f
TestNoRaceEnoughRegisters	./runtime/race/testdata/mop_test.go	/^func TestNoRaceEnoughRegisters(t *testing.T) {$/;"	f
TestNoRaceFin	./runtime/race/testdata/finalizer_test.go	/^func TestNoRaceFin(t *testing.T) {$/;"	f
TestNoRaceFinGlobal	./runtime/race/testdata/finalizer_test.go	/^func TestNoRaceFinGlobal(t *testing.T) {$/;"	f
TestNoRaceForIncr	./runtime/race/testdata/mop_test.go	/^func TestNoRaceForIncr(t *testing.T) {$/;"	f
TestNoRaceForInfiniteLoop	./runtime/race/testdata/regression_test.go	/^func TestNoRaceForInfiniteLoop(t *testing.T) {$/;"	f
TestNoRaceForInit	./runtime/race/testdata/mop_test.go	/^func TestNoRaceForInit(t *testing.T) {$/;"	f
TestNoRaceFuncArgsRW	./runtime/race/testdata/mop_test.go	/^func TestNoRaceFuncArgsRW(t *testing.T) {$/;"	f
TestNoRaceFuncUnlock	./runtime/race/testdata/mop_test.go	/^func TestNoRaceFuncUnlock(t *testing.T) {$/;"	f
TestNoRaceHeapReallocation	./runtime/race/testdata/mop_test.go	/^func TestNoRaceHeapReallocation(t *testing.T) {$/;"	f
TestNoRaceIOFile	./runtime/race/testdata/io_test.go	/^func TestNoRaceIOFile(t *testing.T) {$/;"	f
TestNoRaceIOHttp	./runtime/race/testdata/io_test.go	/^func TestNoRaceIOHttp(t *testing.T) {$/;"	f
TestNoRaceIntRWClosures	./runtime/race/testdata/mop_test.go	/^func TestNoRaceIntRWClosures(t *testing.T) {$/;"	f
TestNoRaceMapRR	./runtime/race/testdata/map_test.go	/^func TestNoRaceMapRR(t *testing.T) {$/;"	f
TestNoRaceMapRangeRange	./runtime/race/testdata/map_test.go	/^func TestNoRaceMapRangeRange(t *testing.T) {$/;"	f
TestNoRaceMethodThunk	./runtime/race/testdata/mop_test.go	/^func TestNoRaceMethodThunk(t *testing.T) {$/;"	f
TestNoRaceMethodValue	./runtime/race/testdata/mop_test.go	/^func TestNoRaceMethodValue(t *testing.T) {$/;"	f
TestNoRaceMutex	./runtime/race/testdata/mutex_test.go	/^func TestNoRaceMutex(t *testing.T) {$/;"	f
TestNoRaceMutexExampleFromHtml	./runtime/race/testdata/mutex_test.go	/^func TestNoRaceMutexExampleFromHtml(t *testing.T) {$/;"	f
TestNoRaceMutexPureHappensBefore	./runtime/race/testdata/mutex_test.go	/^func TestNoRaceMutexPureHappensBefore(t *testing.T) {$/;"	f
TestNoRaceMutexSemaphore	./runtime/race/testdata/mutex_test.go	/^func TestNoRaceMutexSemaphore(t *testing.T) {$/;"	f
TestNoRaceNilMutexCrash	./runtime/race/testdata/sync_test.go	/^func TestNoRaceNilMutexCrash(t *testing.T) {$/;"	f
TestNoRaceOr	./runtime/race/testdata/mop_test.go	/^func TestNoRaceOr(t *testing.T) {$/;"	f
TestNoRacePlus	./runtime/race/testdata/mop_test.go	/^func TestNoRacePlus(t *testing.T) {$/;"	f
TestNoRacePointerSliceCopyRead	./runtime/race/testdata/slice_test.go	/^func TestNoRacePointerSliceCopyRead(t *testing.T) {$/;"	f
TestNoRacePointerSliceWriteCopy	./runtime/race/testdata/slice_test.go	/^func TestNoRacePointerSliceWriteCopy(t *testing.T) {$/;"	f
TestNoRaceProducerConsumerUnbuffered	./runtime/race/testdata/chan_test.go	/^func TestNoRaceProducerConsumerUnbuffered(t *testing.T) {$/;"	f
TestNoRaceRWMutex	./runtime/race/testdata/rwmutex_test.go	/^func TestNoRaceRWMutex(t *testing.T) {$/;"	f
TestNoRaceRWMutexMultipleReaders	./runtime/race/testdata/rwmutex_test.go	/^func TestNoRaceRWMutexMultipleReaders(t *testing.T) {$/;"	f
TestNoRaceRWMutexTransitive	./runtime/race/testdata/rwmutex_test.go	/^func TestNoRaceRWMutexTransitive(t *testing.T) {$/;"	f
TestNoRaceRange	./runtime/race/testdata/mop_test.go	/^func TestNoRaceRange(t *testing.T) {$/;"	f
TestNoRaceRangeIssue5446	./runtime/race/testdata/mop_test.go	/^func TestNoRaceRangeIssue5446(t *testing.T) {$/;"	f
TestNoRaceReturn	./runtime/race/testdata/regression_test.go	/^func TestNoRaceReturn(t *testing.T) {$/;"	f
TestNoRaceRpcChan	./runtime/race/testdata/regression_test.go	/^func TestNoRaceRpcChan(t *testing.T) {$/;"	f
TestNoRaceSelect1	./runtime/race/testdata/select_test.go	/^func TestNoRaceSelect1(t *testing.T) {$/;"	f
TestNoRaceSelect2	./runtime/race/testdata/select_test.go	/^func TestNoRaceSelect2(t *testing.T) {$/;"	f
TestNoRaceSelect3	./runtime/race/testdata/select_test.go	/^func TestNoRaceSelect3(t *testing.T) {$/;"	f
TestNoRaceSelect4	./runtime/race/testdata/select_test.go	/^func TestNoRaceSelect4(t *testing.T) {$/;"	f
TestNoRaceSelect5	./runtime/race/testdata/select_test.go	/^func TestNoRaceSelect5(t *testing.T) {$/;"	f
TestNoRaceSelectMutex	./runtime/race/testdata/chan_test.go	/^func TestNoRaceSelectMutex(t *testing.T) {$/;"	f
TestNoRaceSelectReadWriteAsync	./runtime/race/testdata/chan_test.go	/^func TestNoRaceSelectReadWriteAsync(t *testing.T) {$/;"	f
TestNoRaceShortCalc	./runtime/race/testdata/mop_test.go	/^func TestNoRaceShortCalc(t *testing.T) {$/;"	f
TestNoRaceShortCalc2	./runtime/race/testdata/mop_test.go	/^func TestNoRaceShortCalc2(t *testing.T) {$/;"	f
TestNoRaceSliceCopyRead	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceCopyRead(t *testing.T) {$/;"	f
TestNoRaceSliceIndexAccess	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceIndexAccess(t *testing.T) {$/;"	f
TestNoRaceSliceIndexAccess2	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceIndexAccess2(t *testing.T) {$/;"	f
TestNoRaceSliceLenCap	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceLenCap(t *testing.T) {$/;"	f
TestNoRaceSliceRW	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceRW(t *testing.T) {$/;"	f
TestNoRaceSliceRangeAppend	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceRangeAppend(t *testing.T) {$/;"	f
TestNoRaceSliceRangeWrite	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceRangeWrite(t *testing.T) {$/;"	f
TestNoRaceSliceWriteCap	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceWriteCap(t *testing.T) {$/;"	f
TestNoRaceSliceWriteCopy	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceWriteCopy(t *testing.T) {$/;"	f
TestNoRaceSliceWriteLen	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceWriteLen(t *testing.T) {$/;"	f
TestNoRaceSliceWriteSlice	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceWriteSlice(t *testing.T) {$/;"	f
TestNoRaceSliceWriteSlice2	./runtime/race/testdata/slice_test.go	/^func TestNoRaceSliceWriteSlice2(t *testing.T) {$/;"	f
TestNoRaceStackPushPop	./runtime/race/testdata/regression_test.go	/^func TestNoRaceStackPushPop(t *testing.T) {$/;"	f
TestNoRaceStructFieldRW1	./runtime/race/testdata/mop_test.go	/^func TestNoRaceStructFieldRW1(t *testing.T) {$/;"	f
TestNoRaceStructFieldRW2	./runtime/race/testdata/mop_test.go	/^func TestNoRaceStructFieldRW2(t *testing.T) {$/;"	f
TestNoRaceStructSlicesRangeWrite	./runtime/race/testdata/slice_test.go	/^func TestNoRaceStructSlicesRangeWrite(t *testing.T) {$/;"	f
TestNoRaceTinyAlloc	./runtime/race/testdata/mop_test.go	/^func TestNoRaceTinyAlloc(t *testing.T) {$/;"	f
TestNoRaceWaitGroup	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroup(t *testing.T) {$/;"	f
TestNoRaceWaitGroup2	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroup2(t *testing.T) {$/;"	f
TestNoRaceWaitGroupConcurrentAdd	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupConcurrentAdd(t *testing.T) {$/;"	f
TestNoRaceWaitGroupMultipleWait	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupMultipleWait(t *testing.T) {$/;"	f
TestNoRaceWaitGroupMultipleWait2	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupMultipleWait2(t *testing.T) {$/;"	f
TestNoRaceWaitGroupMultipleWait3	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupMultipleWait3(t *testing.T) {$/;"	f
TestNoRaceWaitGroupPanicRecover	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupPanicRecover(t *testing.T) {$/;"	f
TestNoRaceWaitGroupPanicRecover2	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupPanicRecover2(t *testing.T) {$/;"	f
TestNoRaceWaitGroupReuse	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupReuse(t *testing.T) {$/;"	f
TestNoRaceWaitGroupReuse2	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupReuse2(t *testing.T) {$/;"	f
TestNoRaceWaitGroupTransitive	./runtime/race/testdata/waitgroup_test.go	/^func TestNoRaceWaitGroupTransitive(t *testing.T) {$/;"	f
TestNoSectionOverlaps	./debug/elf/file_test.go	/^func TestNoSectionOverlaps(t *testing.T) {$/;"	f
TestNoSuiteOverlap	./crypto/tls/handshake_server_test.go	/^func TestNoSuiteOverlap(t *testing.T) {$/;"	f
TestNode	./go/format/format_test.go	/^func TestNode(t *testing.T) {$/;"	f
TestNohup	./os/signal/signal_test.go	/^func TestNohup(t *testing.T) {$/;"	f
TestNonCanonicalZero	./encoding/binary/varint_test.go	/^func TestNonCanonicalZero(t *testing.T) {$/;"	f
TestNonEOFWithEmptyRead	./bufio/scan_test.go	/^func TestNonEOFWithEmptyRead(t *testing.T) {$/;"	f
TestNonEscapingConvT2E	./runtime/iface_test.go	/^func TestNonEscapingConvT2E(t *testing.T) {$/;"	f
TestNonEscapingConvT2I	./runtime/iface_test.go	/^func TestNonEscapingConvT2I(t *testing.T) {$/;"	f
TestNonEscapingMap	./runtime/map_test.go	/^func TestNonEscapingMap(t *testing.T) {$/;"	f
TestNonGoMemory	./runtime/race/race_unix_test.go	/^func TestNonGoMemory(t *testing.T) {$/;"	f
TestNonSeekable	./archive/tar/reader_test.go	/^func TestNonSeekable(t *testing.T) {$/;"	f
TestNonStandardExponentialValues	./math/rand/rand_test.go	/^func TestNonStandardExponentialValues(t *testing.T) {$/;"	f
TestNonStandardNormalValues	./math/rand/rand_test.go	/^func TestNonStandardNormalValues(t *testing.T) {$/;"	f
TestNonStrictRawToken	./encoding/xml/xml_test.go	/^func TestNonStrictRawToken(t *testing.T) {$/;"	f
TestNonZeroRandomBytes	./crypto/rsa/pkcs1v15_test.go	/^func TestNonZeroRandomBytes(t *testing.T) {$/;"	f
TestNonZeroSrcPt	./image/draw/draw_test.go	/^func TestNonZeroSrcPt(t *testing.T) {$/;"	f
TestNonblockRecvRace	./runtime/chan_test.go	/^func TestNonblockRecvRace(t *testing.T) {$/;"	f
TestNonblockSelectRace	./runtime/chan_test.go	/^func TestNonblockSelectRace(t *testing.T) {$/;"	f
TestNonblockSelectRace2	./runtime/chan_test.go	/^func TestNonblockSelectRace2(t *testing.T) {$/;"	f
TestNonceSafety	./crypto/ecdsa/ecdsa_test.go	/^func TestNonceSafety(t *testing.T) {$/;"	f
TestNoonIs12PM	./time/format_test.go	/^func TestNoonIs12PM(t *testing.T) {$/;"	f
TestNormBits	./cmd/compile/internal/big/bits_test.go	/^func TestNormBits(t *testing.T) {$/;"	f
TestNormBits	./math/big/bits_test.go	/^func TestNormBits(t *testing.T) {$/;"	f
TestNormTables	./math/rand/rand_test.go	/^func TestNormTables(t *testing.T) {$/;"	f
TestNot	./cmd/compile/internal/big/int_test.go	/^func TestNot(t *testing.T) {$/;"	f
TestNot	./math/big/int_test.go	/^func TestNot(t *testing.T) {$/;"	f
TestNotEqual	./bytes/bytes_test.go	/^func TestNotEqual(t *testing.T) {$/;"	f
TestNotGobEncodableTime	./time/time_test.go	/^func TestNotGobEncodableTime(t *testing.T) {$/;"	f
TestNotJSONEncodableTime	./time/time_test.go	/^func TestNotJSONEncodableTime(t *testing.T) {$/;"	f
TestNoteReading	./cmd/go/note_test.go	/^func TestNoteReading(t *testing.T) {$/;"	f
TestNothing	./cmd/go/vendor_test.go	/^		func TestNothing(t *testing.T) {$/;"	f
TestNullBoolParam	./database/sql/sql_test.go	/^func TestNullBoolParam(t *testing.T) {$/;"	f
TestNullByteSlice	./database/sql/sql_test.go	/^func TestNullByteSlice(t *testing.T) {$/;"	f
TestNullFloat64Param	./database/sql/sql_test.go	/^func TestNullFloat64Param(t *testing.T) {$/;"	f
TestNullInt64Param	./database/sql/sql_test.go	/^func TestNullInt64Param(t *testing.T) {$/;"	f
TestNullRawMessage	./encoding/json/stream_test.go	/^func TestNullRawMessage(t *testing.T) {$/;"	f
TestNullString	./database/sql/convert_test.go	/^func TestNullString(t *testing.T) {$/;"	f
TestNullString	./encoding/json/decode_test.go	/^func TestNullString(t *testing.T) {$/;"	f
TestNullStringParam	./database/sql/sql_test.go	/^func TestNullStringParam(t *testing.T) {$/;"	f
TestNumError	./strconv/atoi_test.go	/^func TestNumError(t *testing.T) {$/;"	f
TestNumberAccessors	./encoding/json/decode_test.go	/^func TestNumberAccessors(t *testing.T) {$/;"	f
TestNumberLatin1	./unicode/graphic_test.go	/^func TestNumberLatin1(t *testing.T) {$/;"	f
TestNumberParse	./text/template/parse/parse_test.go	/^func TestNumberParse(t *testing.T) {$/;"	f
TestOFB	./crypto/cipher/ofb_test.go	/^func TestOFB(t *testing.T) {$/;"	f
TestObjImporter	./go/internal/gccgoimporter/importer_test.go	/^func TestObjImporter(t *testing.T) {$/;"	f
TestObjdump320F	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump320F(t *testing.T)       { testBasic(t, testObjdump32, 0x0F) }$/;"	f
TestObjdump320F38	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump320F38(t *testing.T)     { testBasic(t, testObjdump32, 0x0F, 0x38) }$/;"	f
TestObjdump320F3A	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump320F3A(t *testing.T)     { testBasic(t, testObjdump32, 0x0F, 0x3A) }$/;"	f
TestObjdump32Manual	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump32Manual(t *testing.T)   { testObjdump32(t, hexCases(t, objdumpManualTests)) }$/;"	f
TestObjdump32ModRM	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump32ModRM(t *testing.T)    { testObjdump32(t, concat(basicPrefixes, enumModRM)) }$/;"	f
TestObjdump32OneByte	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump32OneByte(t *testing.T)  { testBasic(t, testObjdump32) }$/;"	f
TestObjdump32Prefix	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump32Prefix(t *testing.T)   { testPrefix(t, testObjdump32) }$/;"	f
TestObjdump32Testdata	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump32Testdata(t *testing.T) { testObjdump32(t, concat(basicPrefixes, testdataCases(t))) }$/;"	f
TestObjdump640F	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump640F(t *testing.T)       { testBasic(t, testObjdump64, 0x0F) }$/;"	f
TestObjdump640F38	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump640F38(t *testing.T)     { testBasic(t, testObjdump64, 0x0F, 0x38) }$/;"	f
TestObjdump640F3A	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump640F3A(t *testing.T)     { testBasic(t, testObjdump64, 0x0F, 0x3A) }$/;"	f
TestObjdump64Manual	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64Manual(t *testing.T)   { testObjdump64(t, hexCases(t, objdumpManualTests)) }$/;"	f
TestObjdump64ModRM	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64ModRM(t *testing.T)    { testObjdump64(t, concat(basicPrefixes, enumModRM)) }$/;"	f
TestObjdump64OneByte	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64OneByte(t *testing.T)  { testBasic(t, testObjdump64) }$/;"	f
TestObjdump64Prefix	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64Prefix(t *testing.T)   { testPrefix(t, testObjdump64) }$/;"	f
TestObjdump64REX0F	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64REX0F(t *testing.T)      { testBasicREX(t, testObjdump64, 0x0F) }$/;"	f
TestObjdump64REX0F38	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64REX0F38(t *testing.T)    { testBasicREX(t, testObjdump64, 0x0F, 0x38) }$/;"	f
TestObjdump64REX0F3A	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64REX0F3A(t *testing.T)    { testBasicREX(t, testObjdump64, 0x0F, 0x3A) }$/;"	f
TestObjdump64REXModRM	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64REXModRM(t *testing.T) {$/;"	f
TestObjdump64REXOneByte	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64REXOneByte(t *testing.T) { testBasicREX(t, testObjdump64) }$/;"	f
TestObjdump64REXPrefix	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64REXPrefix(t *testing.T)  { testPrefixREX(t, testObjdump64) }$/;"	f
TestObjdump64REXTestdata	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64REXTestdata(t *testing.T) {$/;"	f
TestObjdump64Testdata	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func TestObjdump64Testdata(t *testing.T) { testObjdump64(t, concat(basicPrefixes, testdataCases(t))) }$/;"	f
TestObjdumpARMCond	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^func TestObjdumpARMCond(t *testing.T)     { testObjdumpARM(t, condCases(t)) }$/;"	f
TestObjdumpARMManual	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^func TestObjdumpARMManual(t *testing.T)   { testObjdumpARM(t, hexCases(t, objdumpManualTests)) }$/;"	f
TestObjdumpARMTestdata	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^func TestObjdumpARMTestdata(t *testing.T) { testObjdumpARM(t, testdataCases(t)) }$/;"	f
TestObjdumpARMUncond	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^func TestObjdumpARMUncond(t *testing.T)   { testObjdumpARM(t, uncondCases(t)) }$/;"	f
TestObjdumpARMVFP	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^func TestObjdumpARMVFP(t *testing.T)      { testObjdumpARM(t, vfpCases(t)) }$/;"	f
TestObjectIdentifier	./encoding/asn1/asn1_test.go	/^func TestObjectIdentifier(t *testing.T) {$/;"	f
TestObjectIdentifierEqual	./encoding/asn1/asn1_test.go	/^func TestObjectIdentifierEqual(t *testing.T) {$/;"	f
TestObjectIdentifierStruct	./encoding/asn1/asn1_test.go	/^type TestObjectIdentifierStruct struct {$/;"	t
TestObjects	./go/parser/parser_test.go	/^func TestObjects(t *testing.T) {$/;"	f
TestOddMultipleOfThree	./testing/quick/quick.go	/^\/\/ 	func TestOddMultipleOfThree(t *testing.T) {$/;"	f
TestOffCurve	./crypto/elliptic/elliptic_test.go	/^func TestOffCurve(t *testing.T) {$/;"	f
TestOmitEmpty	./encoding/json/encode_test.go	/^func TestOmitEmpty(t *testing.T) {$/;"	f
TestOnCurve	./crypto/elliptic/elliptic_test.go	/^func TestOnCurve(t *testing.T) {$/;"	f
TestOnce	./sync/once_test.go	/^func TestOnce(t *testing.T) {$/;"	f
TestOncePanic	./sync/once_test.go	/^func TestOncePanic(t *testing.T) {$/;"	f
TestOnePassCutoff	./regexp/all_test.go	/^func TestOnePassCutoff(t *testing.T) {$/;"	f
TestOnlyWriteTimeout	./net/http/serve_test.go	/^func TestOnlyWriteTimeout(t *testing.T) {$/;"	f
TestOpen	./debug/elf/file_test.go	/^func TestOpen(t *testing.T) {$/;"	f
TestOpen	./debug/macho/file_test.go	/^func TestOpen(t *testing.T) {$/;"	f
TestOpen	./debug/pe/file_test.go	/^func TestOpen(t *testing.T) {$/;"	f
TestOpen	./debug/plan9obj/file_test.go	/^func TestOpen(t *testing.T) {$/;"	f
TestOpenError	./os/os_test.go	/^func TestOpenError(t *testing.T) {$/;"	f
TestOpenFailure	./debug/macho/file_test.go	/^func TestOpenFailure(t *testing.T) {$/;"	f
TestOpenFailure	./debug/pe/file_test.go	/^func TestOpenFailure(t *testing.T) {$/;"	f
TestOpenFailure	./debug/plan9obj/file_test.go	/^func TestOpenFailure(t *testing.T) {$/;"	f
TestOpenFat	./debug/macho/file_test.go	/^func TestOpenFat(t *testing.T) {$/;"	f
TestOpenFatFailure	./debug/macho/file_test.go	/^func TestOpenFatFailure(t *testing.T) {$/;"	f
TestOpenNoName	./os/os_test.go	/^func TestOpenNoName(t *testing.T) {$/;"	f
TestOps	./go/constant/value_test.go	/^func TestOps(t *testing.T) {$/;"	f
TestOptions	./net/http/serve_test.go	/^func TestOptions(t *testing.T) {$/;"	f
TestOutOfRangeSelector	./compress/bzip2/bzip2_test.go	/^func TestOutOfRangeSelector(t *testing.T) {$/;"	f
TestOutput	./log/log_test.go	/^func TestOutput(t *testing.T) {$/;"	f
TestOutput	./runtime/race/output_test.go	/^func TestOutput(t *testing.T) {$/;"	f
TestOutputDebugString	./runtime/syscall_windows_test.go	/^func TestOutputDebugString(t *testing.T) {$/;"	f
TestOver65kFiles	./archive/zip/zip_test.go	/^func TestOver65kFiles(t *testing.T) {$/;"	f
TestOverflow	./encoding/binary/varint_test.go	/^func TestOverflow(t *testing.T) {$/;"	f
TestOverflow	./encoding/gob/codec_test.go	/^func TestOverflow(t *testing.T) {$/;"	f
TestOverflow	./reflect/all_test.go	/^func TestOverflow(t *testing.T) {$/;"	f
TestOverflowRuntimeTimer	./time/sleep_test.go	/^func TestOverflowRuntimeTimer(t *testing.T) {$/;"	f
TestOverflowSleep	./time/sleep_test.go	/^func TestOverflowSleep(t *testing.T) {$/;"	f
TestOverlongMessagePKCS1v15	./crypto/rsa/pkcs1v15_test.go	/^func TestOverlongMessagePKCS1v15(t *testing.T) {$/;"	f
TestP224Overflow	./crypto/elliptic/elliptic_test.go	/^func TestP224Overflow(t *testing.T) {$/;"	f
TestP256BaseMult	./crypto/elliptic/elliptic_test.go	/^func TestP256BaseMult(t *testing.T) {$/;"	f
TestP256Mult	./crypto/elliptic/elliptic_test.go	/^func TestP256Mult(t *testing.T) {$/;"	f
TestPAXHeader	./archive/tar/writer_test.go	/^func TestPAXHeader(t *testing.T) {$/;"	f
TestPCLine	./debug/gosym/pclntab_test.go	/^func TestPCLine(t *testing.T) {$/;"	f
TestPKCS8	./crypto/x509/pkcs8_test.go	/^func TestPKCS8(t *testing.T) {$/;"	f
TestPPC64EndToEnd	./cmd/asm/internal/asm/endtoend_test.go	/^func TestPPC64EndToEnd(t *testing.T) {$/;"	f
TestPPC64OperandParser	./cmd/asm/internal/asm/operand_test.go	/^func TestPPC64OperandParser(t *testing.T) {$/;"	f
TestPSSGolden	./crypto/rsa/pss_test.go	/^func TestPSSGolden(t *testing.T) {$/;"	f
TestPSSNilOpts	./crypto/rsa/pss_test.go	/^func TestPSSNilOpts(t *testing.T) {$/;"	f
TestPSSOpenSSL	./crypto/rsa/pss_test.go	/^func TestPSSOpenSSL(t *testing.T) {$/;"	f
TestPSSSigning	./crypto/rsa/pss_test.go	/^func TestPSSSigning(t *testing.T) {$/;"	f
TestPackageMainTestImportsArchiveNotBinary	./cmd/go/go_test.go	/^func TestPackageMainTestImportsArchiveNotBinary(t *testing.T) {$/;"	f
TestPacketConn	./net/packetconn_test.go	/^func TestPacketConn(t *testing.T) {$/;"	f
TestPacketConnClose	./net/net_test.go	/^func TestPacketConnClose(t *testing.T) {$/;"	f
TestPaeth	./image/png/paeth_test.go	/^func TestPaeth(t *testing.T) {$/;"	f
TestPaethDecode	./image/png/paeth_test.go	/^func TestPaethDecode(t *testing.T) {$/;"	f
TestPairedParensPrefixLen	./go/doc/comment_test.go	/^func TestPairedParensPrefixLen(t *testing.T) {$/;"	f
TestPalette	./image/color/ycbcr_test.go	/^func TestPalette(t *testing.T) {$/;"	f
TestPaletted	./image/draw/draw_test.go	/^func TestPaletted(t *testing.T) {$/;"	f
TestPalettedDecodeConfig	./image/png/reader_test.go	/^func TestPalettedDecodeConfig(t *testing.T) {$/;"	f
TestPanicAfterGoexit	./runtime/crash_test.go	/^func TestPanicAfterGoexit(t *testing.T) {$/;"	f
TestPanicDuringFlush	./text/tabwriter/tabwriter_test.go	/^func TestPanicDuringFlush(t *testing.T) {$/;"	f
TestPanicDuringWrite	./text/tabwriter/tabwriter_test.go	/^func TestPanicDuringWrite(t *testing.T) {$/;"	f
TestPanicFar	./runtime/stack_test.go	/^func TestPanicFar(t *testing.T) {$/;"	f
TestPanicUseStack	./runtime/stack_test.go	/^func TestPanicUseStack(t *testing.T) {$/;"	f
TestPanics	./fmt/fmt_test.go	/^func TestPanics(t *testing.T) {$/;"	f
TestParFor	./runtime/parfor_test.go	/^func TestParFor(t *testing.T) {$/;"	f
TestParFor2	./runtime/parfor_test.go	/^func TestParFor2(t *testing.T) {$/;"	f
TestParForParallel	./runtime/parfor_test.go	/^func TestParForParallel(t *testing.T) {$/;"	f
TestParForSetup	./runtime/parfor_test.go	/^func TestParForSetup(t *testing.T) {$/;"	f
TestParallelReaders	./sync/rwmutex_test.go	/^func TestParallelReaders(t *testing.T) {$/;"	f
TestParameterGeneration	./crypto/dsa/dsa_test.go	/^func TestParameterGeneration(t *testing.T) {$/;"	f
TestParse	./flag/flag_test.go	/^func TestParse(t *testing.T) {$/;"	f
TestParse	./go/parser/parser_test.go	/^func TestParse(t *testing.T) {$/;"	f
TestParse	./mime/multipart/multipart_test.go	/^func TestParse(t *testing.T) {$/;"	f
TestParse	./net/url/url_test.go	/^func TestParse(t *testing.T) {$/;"	f
TestParse	./text/template/multi_test.go	/^func TestParse(t *testing.T) {$/;"	f
TestParse	./text/template/parse/parse_test.go	/^func TestParse(t *testing.T) {$/;"	f
TestParse	./time/format_test.go	/^func TestParse(t *testing.T) {$/;"	f
TestParseAuthority	./net/url/url_test.go	/^func TestParseAuthority(t *testing.T) {$/;"	f
TestParseBasicAuth	./net/http/request_test.go	/^func TestParseBasicAuth(t *testing.T) {$/;"	f
TestParseBigInt	./encoding/asn1/asn1_test.go	/^func TestParseBigInt(t *testing.T) {$/;"	f
TestParseBool	./encoding/asn1/asn1_test.go	/^func TestParseBool(t *testing.T) {$/;"	f
TestParseBool	./strconv/atob_test.go	/^func TestParseBool(t *testing.T) {$/;"	f
TestParseCIDR	./net/ip_test.go	/^func TestParseCIDR(t *testing.T) {$/;"	f
TestParseCertificateRequest	./crypto/x509/x509_test.go	/^func TestParseCertificateRequest(t *testing.T) {$/;"	f
TestParseCertificateWithDSASignatureAlgorithm	./crypto/x509/x509_test.go	/^func TestParseCertificateWithDSASignatureAlgorithm(t *testing.T) {$/;"	f
TestParseCertificateWithDsaPublicKey	./crypto/x509/x509_test.go	/^func TestParseCertificateWithDsaPublicKey(t *testing.T) {$/;"	f
TestParseCopy	./text/template/parse/parse_test.go	/^func TestParseCopy(t *testing.T) {$/;"	f
TestParseDERCRL	./crypto/x509/x509_test.go	/^func TestParseDERCRL(t *testing.T) {$/;"	f
TestParseDir	./go/parser/parser_test.go	/^func TestParseDir(t *testing.T) {$/;"	f
TestParseDuration	./time/time_test.go	/^func TestParseDuration(t *testing.T) {$/;"	f
TestParseDurationRoundTrip	./time/time_test.go	/^func TestParseDurationRoundTrip(t *testing.T) {$/;"	f
TestParseECPrivateKey	./crypto/x509/sec1_test.go	/^func TestParseECPrivateKey(t *testing.T) {$/;"	f
TestParseErrors	./time/format_test.go	/^func TestParseErrors(t *testing.T) {$/;"	f
TestParseExpr	./go/parser/parser_test.go	/^func TestParseExpr(t *testing.T) {$/;"	f
TestParseFailure	./net/url/url_test.go	/^func TestParseFailure(t *testing.T) {$/;"	f
TestParseFieldParameters	./encoding/asn1/asn1_test.go	/^func TestParseFieldParameters(t *testing.T) {$/;"	f
TestParseFiles	./text/template/multi_test.go	/^func TestParseFiles(t *testing.T) {$/;"	f
TestParseFilesWithData	./text/template/multi_test.go	/^func TestParseFilesWithData(t *testing.T) {$/;"	f
TestParseFoldCase	./regexp/syntax/parse_test.go	/^func TestParseFoldCase(t *testing.T) {$/;"	f
TestParseFormInitializeOnError	./net/http/request_test.go	/^func TestParseFormInitializeOnError(t *testing.T) {$/;"	f
TestParseFormUnknownContentType	./net/http/request_test.go	/^func TestParseFormUnknownContentType(t *testing.T) {$/;"	f
TestParseGlob	./text/template/multi_test.go	/^func TestParseGlob(t *testing.T) {$/;"	f
TestParseGlobWithData	./text/template/multi_test.go	/^func TestParseGlobWithData(t *testing.T) {$/;"	f
TestParseHTTPVersion	./net/http/request_test.go	/^func TestParseHTTPVersion(t *testing.T) {$/;"	f
TestParseHexUint	./net/http/internal/chunked_test.go	/^func TestParseHexUint(t *testing.T) {$/;"	f
TestParseIP	./net/ip_test.go	/^func TestParseIP(t *testing.T) {$/;"	f
TestParseInLocation	./time/format_test.go	/^func TestParseInLocation(t *testing.T) {$/;"	f
TestParseInt	./strconv/atoi_test.go	/^func TestParseInt(t *testing.T) {$/;"	f
TestParseInt32	./encoding/asn1/asn1_test.go	/^func TestParseInt32(t *testing.T) {$/;"	f
TestParseInt64	./encoding/asn1/asn1_test.go	/^func TestParseInt64(t *testing.T) {$/;"	f
TestParseInt64	./strconv/atoi_test.go	/^func TestParseInt64(t *testing.T) {$/;"	f
TestParseInt64Base	./strconv/atoi_test.go	/^func TestParseInt64Base(t *testing.T) {$/;"	f
TestParseInvalidRegexps	./regexp/syntax/parse_test.go	/^func TestParseInvalidRegexps(t *testing.T) {$/;"	f
TestParseLiteral	./regexp/syntax/parse_test.go	/^func TestParseLiteral(t *testing.T) {$/;"	f
TestParseMAC	./net/mac_test.go	/^func TestParseMAC(t *testing.T) {$/;"	f
TestParseMatchNL	./regexp/syntax/parse_test.go	/^func TestParseMatchNL(t *testing.T) {$/;"	f
TestParseMediaType	./mime/mediatype_test.go	/^func TestParseMediaType(t *testing.T) {$/;"	f
TestParseMediaTypeBogus	./mime/mediatype_test.go	/^func TestParseMediaTypeBogus(t *testing.T) {$/;"	f
TestParseMetaGoImports	./cmd/go/pkg_test.go	/^func TestParseMetaGoImports(t *testing.T) {$/;"	f
TestParseMultipartForm	./net/http/request_test.go	/^func TestParseMultipartForm(t *testing.T) {$/;"	f
TestParseMultipartFormOrder	./net/http/request_test.go	/^func TestParseMultipartFormOrder(t *testing.T) {$/;"	f
TestParseNSSConf	./net/nss_test.go	/^func TestParseNSSConf(t *testing.T) {$/;"	f
TestParseNoMatchNL	./regexp/syntax/parse_test.go	/^func TestParseNoMatchNL(t *testing.T) {$/;"	f
TestParsePAXHeader	./archive/tar/reader_test.go	/^func TestParsePAXHeader(t *testing.T) {$/;"	f
TestParsePAXTime	./archive/tar/reader_test.go	/^func TestParsePAXTime(t *testing.T) {$/;"	f
TestParsePEMCRL	./crypto/x509/x509_test.go	/^func TestParsePEMCRL(t *testing.T) {$/;"	f
TestParsePKCS1PrivateKey	./crypto/x509/x509_test.go	/^func TestParsePKCS1PrivateKey(t *testing.T) {$/;"	f
TestParsePKIXPublicKey	./crypto/x509/x509_test.go	/^func TestParsePKIXPublicKey(t *testing.T) {$/;"	f
TestParseProcNet	./net/interface_linux_test.go	/^func TestParseProcNet(t *testing.T) {$/;"	f
TestParseQuery	./net/url/url_test.go	/^func TestParseQuery(t *testing.T) {$/;"	f
TestParseRange	./net/http/range_test.go	/^func TestParseRange(t *testing.T) {$/;"	f
TestParseRequestURI	./net/url/url_test.go	/^func TestParseRequestURI(t *testing.T) {$/;"	f
TestParseSecondsInTimeZone	./time/format_test.go	/^func TestParseSecondsInTimeZone(t *testing.T) {$/;"	f
TestParseSimple	./regexp/syntax/parse_test.go	/^func TestParseSimple(t *testing.T) {$/;"	f
TestParseTagAndLength	./encoding/asn1/asn1_test.go	/^func TestParseTagAndLength(t *testing.T) {$/;"	f
TestParseTime	./net/http/header_test.go	/^func TestParseTime(t *testing.T) {$/;"	f
TestParseTimeZone	./time/format_test.go	/^func TestParseTimeZone(t *testing.T) {$/;"	f
TestParseUint	./strconv/atoi_test.go	/^func TestParseUint(t *testing.T) {$/;"	f
TestParseUint64	./strconv/atoi_test.go	/^func TestParseUint64(t *testing.T) {$/;"	f
TestParseUint64Base	./strconv/atoi_test.go	/^func TestParseUint64Base(t *testing.T) {$/;"	f
TestParsing	./net/mail/message_test.go	/^func TestParsing(t *testing.T) {$/;"	f
TestPartial	./go/format/format_test.go	/^func TestPartial(t *testing.T) {$/;"	f
TestPartialRead	./archive/tar/reader_test.go	/^func TestPartialRead(t *testing.T) {$/;"	f
TestPassFD	./syscall/syscall_unix_test.go	/^func TestPassFD(t *testing.T) {$/;"	f
TestPatchQuery	./net/http/request_test.go	/^func TestPatchQuery(t *testing.T) {$/;"	f
TestPathInfo	./net/http/cgi/host_test.go	/^func TestPathInfo(t *testing.T) {$/;"	f
TestPathInfoDirRoot	./net/http/cgi/host_test.go	/^func TestPathInfoDirRoot(t *testing.T) {$/;"	f
TestPathInfoNoRoot	./net/http/cgi/host_test.go	/^func TestPathInfoNoRoot(t *testing.T) {$/;"	f
TestPax	./archive/tar/writer_test.go	/^func TestPax(t *testing.T) {$/;"	f
TestPaxNonAscii	./archive/tar/writer_test.go	/^func TestPaxNonAscii(t *testing.T) {$/;"	f
TestPaxSymlink	./archive/tar/writer_test.go	/^func TestPaxSymlink(t *testing.T) {$/;"	f
TestPaxXattrs	./archive/tar/writer_test.go	/^func TestPaxXattrs(t *testing.T) {$/;"	f
TestPeek	./bufio/bufio_test.go	/^func TestPeek(t *testing.T) {$/;"	f
TestPeekThenUnreadRune	./bufio/bufio_test.go	/^func TestPeekThenUnreadRune(t *testing.T) {$/;"	f
TestPermutationOperationKnownAnswerDecrypt	./crypto/des/des_test.go	/^func TestPermutationOperationKnownAnswerDecrypt(t *testing.T) {$/;"	f
TestPermutationOperationKnownAnswerEncrypt	./crypto/des/des_test.go	/^func TestPermutationOperationKnownAnswerEncrypt(t *testing.T) {$/;"	f
TestPgid	./syscall/exec_unix_test.go	/^func TestPgid(t *testing.T) {$/;"	f
TestPickAlgorithm	./strings/replace_test.go	/^func TestPickAlgorithm(t *testing.T) {$/;"	f
TestPingPongHog	./runtime/proc_test.go	/^func TestPingPongHog(t *testing.T) {$/;"	f
TestPipe	./net/pipe_test.go	/^func TestPipe(t *testing.T) {$/;"	f
TestPipe1	./io/pipe_test.go	/^func TestPipe1(t *testing.T) {$/;"	f
TestPipe2	./io/pipe_test.go	/^func TestPipe2(t *testing.T) {$/;"	f
TestPipe3	./io/pipe_test.go	/^func TestPipe3(t *testing.T) {$/;"	f
TestPipeLookPathLeak	./os/exec/exec_test.go	/^func TestPipeLookPathLeak(t *testing.T) {$/;"	f
TestPipeReadClose	./io/pipe_test.go	/^func TestPipeReadClose(t *testing.T) {$/;"	f
TestPipeReadClose2	./io/pipe_test.go	/^func TestPipeReadClose2(t *testing.T) {$/;"	f
TestPipeToMethodIsEscaped	./html/template/escape_test.go	/^func TestPipeToMethodIsEscaped(t *testing.T) {$/;"	f
TestPipeWriteClose	./io/pipe_test.go	/^func TestPipeWriteClose(t *testing.T) {$/;"	f
TestPipes	./os/exec/exec_test.go	/^func TestPipes(t *testing.T) {$/;"	f
TestPixelOutsidePaletteRange	./image/gif/reader_test.go	/^func TestPixelOutsidePaletteRange(t *testing.T) {$/;"	f
TestPlan9320F	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan9320F(t *testing.T)       { testBasic(t, testPlan932, 0x0F) }$/;"	f
TestPlan9320F38	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan9320F38(t *testing.T)     { testBasic(t, testPlan932, 0x0F, 0x38) }$/;"	f
TestPlan9320F3A	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan9320F3A(t *testing.T)     { testBasic(t, testPlan932, 0x0F, 0x3A) }$/;"	f
TestPlan932Manual	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan932Manual(t *testing.T)   { testPlan932(t, hexCases(t, plan9ManualTests)) }$/;"	f
TestPlan932ModRM	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan932ModRM(t *testing.T)    { testPlan932(t, concat(basicPrefixes, enumModRM)) }$/;"	f
TestPlan932OneByte	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan932OneByte(t *testing.T)  { testBasic(t, testPlan932) }$/;"	f
TestPlan932Prefix	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan932Prefix(t *testing.T)   { testPrefix(t, testPlan932) }$/;"	f
TestPlan932Testdata	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan932Testdata(t *testing.T) { testPlan932(t, concat(basicPrefixes, testdataCases(t))) }$/;"	f
TestPlan9640F	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan9640F(t *testing.T)       { testBasic(t, testPlan964, 0x0F) }$/;"	f
TestPlan9640F38	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan9640F38(t *testing.T)     { testBasic(t, testPlan964, 0x0F, 0x38) }$/;"	f
TestPlan9640F3A	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan9640F3A(t *testing.T)     { testBasic(t, testPlan964, 0x0F, 0x3A) }$/;"	f
TestPlan964Manual	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964Manual(t *testing.T)   { testPlan964(t, hexCases(t, plan9ManualTests)) }$/;"	f
TestPlan964ModRM	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964ModRM(t *testing.T)    { testPlan964(t, concat(basicPrefixes, enumModRM)) }$/;"	f
TestPlan964OneByte	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964OneByte(t *testing.T)  { testBasic(t, testPlan964) }$/;"	f
TestPlan964Prefix	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964Prefix(t *testing.T)   { testPrefix(t, testPlan964) }$/;"	f
TestPlan964REX0F	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964REX0F(t *testing.T)      { testBasicREX(t, testPlan964, 0x0F) }$/;"	f
TestPlan964REX0F38	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964REX0F38(t *testing.T)    { testBasicREX(t, testPlan964, 0x0F, 0x38) }$/;"	f
TestPlan964REX0F3A	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964REX0F3A(t *testing.T)    { testBasicREX(t, testPlan964, 0x0F, 0x3A) }$/;"	f
TestPlan964REXModRM	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964REXModRM(t *testing.T)   { testPlan964(t, concat3(basicPrefixes, rexPrefixes, enumModRM)) }$/;"	f
TestPlan964REXOneByte	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964REXOneByte(t *testing.T) { testBasicREX(t, testPlan964) }$/;"	f
TestPlan964REXPrefix	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964REXPrefix(t *testing.T)  { testPrefixREX(t, testPlan964) }$/;"	f
TestPlan964REXTestdata	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964REXTestdata(t *testing.T) {$/;"	f
TestPlan964Testdata	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func TestPlan964Testdata(t *testing.T) { testPlan964(t, concat(basicPrefixes, testdataCases(t))) }$/;"	f
TestPointToPointInterface	./net/interface_unix_test.go	/^func TestPointToPointInterface(t *testing.T) {$/;"	f
TestPointerParamsAndScans	./database/sql/sql_test.go	/^func TestPointerParamsAndScans(t *testing.T) {$/;"	f
TestPolar	./math/cmplx/cmath_test.go	/^func TestPolar(t *testing.T) {$/;"	f
TestPool	./sync/pool_test.go	/^func TestPool(t *testing.T) {$/;"	f
TestPoolGC	./sync/pool_test.go	/^func TestPoolGC(t *testing.T) {$/;"	f
TestPoolNew	./sync/pool_test.go	/^func TestPoolNew(t *testing.T) {$/;"	f
TestPoolRelease	./sync/pool_test.go	/^func TestPoolRelease(t *testing.T) {$/;"	f
TestPoolStress	./sync/pool_test.go	/^func TestPoolStress(t *testing.T) {$/;"	f
TestPos	./text/scanner/scanner_test.go	/^func TestPos(t *testing.T) {$/;"	f
TestPos	./text/template/parse/lex_test.go	/^func TestPos(t *testing.T) {$/;"	f
TestPosition	./text/scanner/scanner_test.go	/^func TestPosition(t *testing.T) {$/;"	f
TestPositionFor	./go/token/position_test.go	/^func TestPositionFor(t *testing.T) {$/;"	f
TestPositions	./go/token/position_test.go	/^func TestPositions(t *testing.T) {$/;"	f
TestPostFormRequestFormat	./net/http/client_test.go	/^func TestPostFormRequestFormat(t *testing.T) {$/;"	f
TestPostQuery	./net/http/request_test.go	/^func TestPostQuery(t *testing.T) {$/;"	f
TestPostRedirects	./net/http/client_test.go	/^func TestPostRedirects(t *testing.T) {$/;"	f
TestPostRequestFormat	./net/http/client_test.go	/^func TestPostRequestFormat(t *testing.T) {$/;"	f
TestPow	./math/all_test.go	/^func TestPow(t *testing.T) {$/;"	f
TestPow	./math/cmplx/cmath_test.go	/^func TestPow(t *testing.T) {$/;"	f
TestPow10	./math/all_test.go	/^func TestPow10(t *testing.T) {$/;"	f
TestPowx	./crypto/aes/aes_test.go	/^func TestPowx(t *testing.T) {$/;"	f
TestPredicatesInfo	./go/types/api_test.go	/^func TestPredicatesInfo(t *testing.T) {$/;"	f
TestPreemptSplitBig	./runtime/proc_test.go	/^func TestPreemptSplitBig(t *testing.T) {$/;"	f
TestPreemption	./runtime/proc_test.go	/^func TestPreemption(t *testing.T) {$/;"	f
TestPreemptionGC	./runtime/proc_test.go	/^func TestPreemptionGC(t *testing.T) {$/;"	f
TestPrefilled	./encoding/json/decode_test.go	/^func TestPrefilled(t *testing.T) {$/;"	f
TestPrimeBitsLt2	./crypto/rand/util_test.go	/^func TestPrimeBitsLt2(t *testing.T) {$/;"	f
TestPrimeSmall	./crypto/rand/util_test.go	/^func TestPrimeSmall(t *testing.T) {$/;"	f
TestPrint	./go/ast/print_test.go	/^func TestPrint(t *testing.T) {$/;"	f
TestPrintDefaults	./flag/flag_test.go	/^func TestPrintDefaults(t *testing.T) {$/;"	f
TestPrintGC	./runtime/gc_test.go	/^func TestPrintGC(t *testing.T) {$/;"	f
TestPrintfLine	./net/textproto/writer_test.go	/^func TestPrintfLine(t *testing.T) {$/;"	f
TestProbablyPrime	./cmd/compile/internal/big/int_test.go	/^func TestProbablyPrime(t *testing.T) {$/;"	f
TestProbablyPrime	./math/big/int_test.go	/^func TestProbablyPrime(t *testing.T) {$/;"	f
TestProcInstEncodeToken	./encoding/xml/marshal_test.go	/^func TestProcInstEncodeToken(t *testing.T) {$/;"	f
TestProcInstEncoding	./encoding/xml/xml_test.go	/^func TestProcInstEncoding(t *testing.T) {$/;"	f
TestProdZZ	./cmd/compile/internal/big/int_test.go	/^func TestProdZZ(t *testing.T) {$/;"	f
TestProdZZ	./math/big/int_test.go	/^func TestProdZZ(t *testing.T) {$/;"	f
TestProgWideChdir	./os/os_test.go	/^func TestProgWideChdir(t *testing.T) {$/;"	f
TestProgramNameInCrashMessages	./cmd/go/go_test.go	/^func TestProgramNameInCrashMessages(t *testing.T) {$/;"	f
TestProgramTooLongForBacktrack	./regexp/exec_test.go	/^func TestProgramTooLongForBacktrack(t *testing.T) {$/;"	f
TestProhibitionaryDialArg	./net/dial_test.go	/^func TestProhibitionaryDialArg(t *testing.T) {$/;"	f
TestProperties	./unicode/script_test.go	/^func TestProperties(t *testing.T) {$/;"	f
TestProtocolDialError	./net/error_test.go	/^func TestProtocolDialError(t *testing.T) {$/;"	f
TestProtocolListenError	./net/error_test.go	/^func TestProtocolListenError(t *testing.T) {$/;"	f
TestProxyFromEnvironment	./net/http/transport_test.go	/^func TestProxyFromEnvironment(t *testing.T) {$/;"	f
TestPseudoRandomSend	./runtime/chan_test.go	/^func TestPseudoRandomSend(t *testing.T) {$/;"	f
TestPtrAlias	./testing/quick/quick_test.go	/^type TestPtrAlias *int$/;"	t
TestPtrPointTo	./reflect/all_test.go	/^func TestPtrPointTo(t *testing.T) {$/;"	f
TestPtrSetNil	./reflect/all_test.go	/^func TestPtrSetNil(t *testing.T) {$/;"	f
TestPtrTo	./reflect/all_test.go	/^func TestPtrTo(t *testing.T) {$/;"	f
TestPtrToGC	./reflect/all_test.go	/^func TestPtrToGC(t *testing.T) {$/;"	f
TestPtrToMapOfMap	./encoding/gob/encoder_test.go	/^func TestPtrToMapOfMap(t *testing.T) {$/;"	f
TestPtrToMethods	./reflect/all_test.go	/^func TestPtrToMethods(t *testing.T) {$/;"	f
TestPtrTypeToType	./encoding/gob/encoder_test.go	/^func TestPtrTypeToType(t *testing.T) {$/;"	f
TestPunycode	./net/http/cookiejar/punycode_test.go	/^func TestPunycode(t *testing.T) {$/;"	f
TestQualifiedTypeString	./go/types/typestring_test.go	/^func TestQualifiedTypeString(t *testing.T) {$/;"	f
TestQuery	./database/sql/sql_test.go	/^func TestQuery(t *testing.T) {$/;"	f
TestQuery	./net/http/request_test.go	/^func TestQuery(t *testing.T) {$/;"	f
TestQueryRow	./database/sql/sql_test.go	/^func TestQueryRow(t *testing.T) {$/;"	f
TestQueryRowClosingStmt	./database/sql/sql_test.go	/^func TestQueryRowClosingStmt(t *testing.T) {$/;"	f
TestQueryRowNilScanDest	./database/sql/sql_test.go	/^func TestQueryRowNilScanDest(t *testing.T) {$/;"	f
TestQueryValues	./net/url/url_test.go	/^func TestQueryValues(t *testing.T) {$/;"	f
TestQuo	./cmd/compile/internal/big/int_test.go	/^func TestQuo(t *testing.T) {$/;"	f
TestQuo	./math/big/int_test.go	/^func TestQuo(t *testing.T) {$/;"	f
TestQuoStepD6	./cmd/compile/internal/big/int_test.go	/^func TestQuoStepD6(t *testing.T) {$/;"	f
TestQuoStepD6	./math/big/int_test.go	/^func TestQuoStepD6(t *testing.T) {$/;"	f
TestQuote	./strconv/quote_test.go	/^func TestQuote(t *testing.T) {$/;"	f
TestQuoteMeta	./regexp/all_test.go	/^func TestQuoteMeta(t *testing.T) {$/;"	f
TestQuoteRune	./strconv/quote_test.go	/^func TestQuoteRune(t *testing.T) {$/;"	f
TestQuoteRuneToASCII	./strconv/quote_test.go	/^func TestQuoteRuneToASCII(t *testing.T) {$/;"	f
TestQuoteToASCII	./strconv/quote_test.go	/^func TestQuoteToASCII(t *testing.T) {$/;"	f
TestQuotedPrintableEncoding	./mime/multipart/multipart_test.go	/^func TestQuotedPrintableEncoding(t *testing.T) {$/;"	f
TestRE2Exhaustive	./regexp/exec2_test.go	/^func TestRE2Exhaustive(t *testing.T) {$/;"	f
TestRE2Search	./regexp/exec_test.go	/^func TestRE2Search(t *testing.T) {$/;"	f
TestRFC3339Conversion	./time/format_test.go	/^func TestRFC3339Conversion(t *testing.T) {$/;"	f
TestRFC6724ClassifyScope	./net/addrselect_test.go	/^func TestRFC6724ClassifyScope(t *testing.T) {$/;"	f
TestRFC6724CommonPrefixLength	./net/addrselect_test.go	/^func TestRFC6724CommonPrefixLength(t *testing.T) {$/;"	f
TestRFC6724PolicyTableClassify	./net/addrselect_test.go	/^func TestRFC6724PolicyTableClassify(t *testing.T) {$/;"	f
TestRFC959Lines	./net/textproto/reader_test.go	/^func TestRFC959Lines(t *testing.T) {$/;"	f
TestRLEBuffer	./archive/zip/zip_test.go	/^func TestRLEBuffer(t *testing.T) {$/;"	f
TestRLocker	./sync/rwmutex_test.go	/^func TestRLocker(t *testing.T) {$/;"	f
TestRPC	./net/rpc/server_test.go	/^func TestRPC(t *testing.T) {$/;"	f
TestRUnlockPanic	./sync/rwmutex_test.go	/^func TestRUnlockPanic(t *testing.T) {$/;"	f
TestRUnlockPanic2	./sync/rwmutex_test.go	/^func TestRUnlockPanic2(t *testing.T) {$/;"	f
TestRWMutex	./sync/rwmutex_test.go	/^func TestRWMutex(t *testing.T) {$/;"	f
TestRace	./runtime/race/race_test.go	/^func TestRace(t *testing.T) {$/;"	f
TestRace	./sync/cond_test.go	/^func TestRace(t *testing.T) {$/;"	f
TestRace9796	./encoding/xml/marshal_test.go	/^func TestRace9796(t *testing.T) {$/;"	f
TestRaceAddrExpr	./runtime/race/testdata/mop_test.go	/^func TestRaceAddrExpr(t *testing.T) {$/;"	f
TestRaceAfterFunc3	./runtime/race/testdata/sync_test.go	/^func TestRaceAfterFunc3(t *testing.T) {$/;"	f
TestRaceAnd	./runtime/race/testdata/mop_test.go	/^func TestRaceAnd(t *testing.T) {$/;"	f
TestRaceAnd2	./runtime/race/testdata/mop_test.go	/^func TestRaceAnd2(t *testing.T) {$/;"	f
TestRaceAnnounceThreads	./runtime/race/testdata/sync_test.go	/^func TestRaceAnnounceThreads(t *testing.T) {$/;"	f
TestRaceAppendCapRW	./runtime/race/testdata/mop_test.go	/^func TestRaceAppendCapRW(t *testing.T) {$/;"	f
TestRaceAppendLenRW	./runtime/race/testdata/mop_test.go	/^func TestRaceAppendLenRW(t *testing.T) {$/;"	f
TestRaceAppendRW	./runtime/race/testdata/mop_test.go	/^func TestRaceAppendRW(t *testing.T) {$/;"	f
TestRaceAppendSliceStruct	./runtime/race/testdata/mop_test.go	/^func TestRaceAppendSliceStruct(t *testing.T) {$/;"	f
TestRaceArrayCopy	./runtime/race/testdata/mop_test.go	/^func TestRaceArrayCopy(t *testing.T) {$/;"	f
TestRaceArrayInit	./runtime/race/testdata/mop_test.go	/^func TestRaceArrayInit(t *testing.T) {$/;"	f
TestRaceArrayWW	./runtime/race/testdata/slice_test.go	/^func TestRaceArrayWW(t *testing.T) {$/;"	f
TestRaceAsFunc1	./runtime/race/testdata/mop_test.go	/^func TestRaceAsFunc1(t *testing.T) {$/;"	f
TestRaceAsFunc2	./runtime/race/testdata/mop_test.go	/^func TestRaceAsFunc2(t *testing.T) {$/;"	f
TestRaceAsFunc3	./runtime/race/testdata/mop_test.go	/^func TestRaceAsFunc3(t *testing.T) {$/;"	f
TestRaceAtomicAddInt64	./runtime/race/testdata/atomic_test.go	/^func TestRaceAtomicAddInt64(t *testing.T) {$/;"	f
TestRaceAtomicAddLoad	./runtime/race/testdata/atomic_test.go	/^func TestRaceAtomicAddLoad(t *testing.T) {$/;"	f
TestRaceAtomicAddStore	./runtime/race/testdata/atomic_test.go	/^func TestRaceAtomicAddStore(t *testing.T) {$/;"	f
TestRaceAtomicLoadStore	./runtime/race/testdata/atomic_test.go	/^func TestRaceAtomicLoadStore(t *testing.T) {$/;"	f
TestRaceAtomicStoreLoad	./runtime/race/testdata/atomic_test.go	/^func TestRaceAtomicStoreLoad(t *testing.T) {$/;"	f
TestRaceBlockAs	./runtime/race/testdata/mop_test.go	/^func TestRaceBlockAs(t *testing.T) {$/;"	f
TestRaceBlockCall1	./runtime/race/testdata/mop_test.go	/^func TestRaceBlockCall1(t *testing.T) {$/;"	f
TestRaceBlockCall2	./runtime/race/testdata/mop_test.go	/^func TestRaceBlockCall2(t *testing.T) {$/;"	f
TestRaceBlockCall3	./runtime/race/testdata/mop_test.go	/^func TestRaceBlockCall3(t *testing.T) {$/;"	f
TestRaceBlockCall4	./runtime/race/testdata/mop_test.go	/^func TestRaceBlockCall4(t *testing.T) {$/;"	f
TestRaceBlockCall5	./runtime/race/testdata/mop_test.go	/^func TestRaceBlockCall5(t *testing.T) {$/;"	f
TestRaceBlockCall6	./runtime/race/testdata/mop_test.go	/^func TestRaceBlockCall6(t *testing.T) {$/;"	f
TestRaceCaseBody	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseBody(t *testing.T) {$/;"	f
TestRaceCaseCondition	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseCondition(t *testing.T) {$/;"	f
TestRaceCaseCondition2	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseCondition2(t *testing.T) {$/;"	f
TestRaceCaseFallthrough	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseFallthrough(t *testing.T) {$/;"	f
TestRaceCaseIssue6418	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseIssue6418(t *testing.T) {$/;"	f
TestRaceCaseType	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseType(t *testing.T) {$/;"	f
TestRaceCaseTypeBody	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseTypeBody(t *testing.T) {$/;"	f
TestRaceCaseTypeIssue5890	./runtime/race/testdata/mop_test.go	/^func TestRaceCaseTypeIssue5890(t *testing.T) {$/;"	f
TestRaceChanAsyncCloseSend	./runtime/race/testdata/chan_test.go	/^func TestRaceChanAsyncCloseSend(t *testing.T) {$/;"	f
TestRaceChanAsyncRev	./runtime/race/testdata/chan_test.go	/^func TestRaceChanAsyncRev(t *testing.T) {$/;"	f
TestRaceChanCloseClose	./runtime/race/testdata/chan_test.go	/^func TestRaceChanCloseClose(t *testing.T) {$/;"	f
TestRaceChanCloseLen	./runtime/race/testdata/chan_test.go	/^func TestRaceChanCloseLen(t *testing.T) {$/;"	f
TestRaceChanCloseSend	./runtime/race/testdata/chan_test.go	/^func TestRaceChanCloseSend(t *testing.T) {$/;"	f
TestRaceChanItselfCap	./runtime/race/testdata/chan_test.go	/^func TestRaceChanItselfCap(t *testing.T) {$/;"	f
TestRaceChanItselfClose	./runtime/race/testdata/chan_test.go	/^func TestRaceChanItselfClose(t *testing.T) {$/;"	f
TestRaceChanItselfLen	./runtime/race/testdata/chan_test.go	/^func TestRaceChanItselfLen(t *testing.T) {$/;"	f
TestRaceChanItselfNil	./runtime/race/testdata/chan_test.go	/^func TestRaceChanItselfNil(t *testing.T) {$/;"	f
TestRaceChanItselfRecv	./runtime/race/testdata/chan_test.go	/^func TestRaceChanItselfRecv(t *testing.T) {$/;"	f
TestRaceChanItselfSend	./runtime/race/testdata/chan_test.go	/^func TestRaceChanItselfSend(t *testing.T) {$/;"	f
TestRaceChanReadWriteAsync	./runtime/race/testdata/chan_test.go	/^func TestRaceChanReadWriteAsync(t *testing.T) {$/;"	f
TestRaceChanReadWriteSync	./runtime/race/testdata/chan_test.go	/^func TestRaceChanReadWriteSync(t *testing.T) {$/;"	f
TestRaceChanRecvLen	./runtime/race/testdata/chan_test.go	/^func TestRaceChanRecvLen(t *testing.T) {$/;"	f
TestRaceChanSem	./runtime/race/testdata/chan_test.go	/^func TestRaceChanSem(t *testing.T) {$/;"	f
TestRaceChanSendClose	./runtime/race/testdata/chan_test.go	/^func TestRaceChanSendClose(t *testing.T) {$/;"	f
TestRaceChanSendLen	./runtime/race/testdata/chan_test.go	/^func TestRaceChanSendLen(t *testing.T) {$/;"	f
TestRaceChanSendSelectClose	./runtime/race/testdata/chan_test.go	/^func TestRaceChanSendSelectClose(t *testing.T) {$/;"	f
TestRaceChanSendSend	./runtime/race/testdata/chan_test.go	/^func TestRaceChanSendSend(t *testing.T) {$/;"	f
TestRaceChanSyncCloseSend	./runtime/race/testdata/chan_test.go	/^func TestRaceChanSyncCloseSend(t *testing.T) {$/;"	f
TestRaceChanWrongClose	./runtime/race/testdata/chan_test.go	/^func TestRaceChanWrongClose(t *testing.T) {$/;"	f
TestRaceChanWrongSend	./runtime/race/testdata/chan_test.go	/^func TestRaceChanWrongSend(t *testing.T) {$/;"	f
TestRaceComp	./runtime/race/testdata/comp_test.go	/^func TestRaceComp(t *testing.T) {$/;"	f
TestRaceComp2	./runtime/race/testdata/comp_test.go	/^func TestRaceComp2(t *testing.T) {$/;"	f
TestRaceComp3	./runtime/race/testdata/comp_test.go	/^func TestRaceComp3(t *testing.T) {$/;"	f
TestRaceCompArray	./runtime/race/testdata/comp_test.go	/^func TestRaceCompArray(t *testing.T) {$/;"	f
TestRaceCompPtr	./runtime/race/testdata/comp_test.go	/^func TestRaceCompPtr(t *testing.T) {$/;"	f
TestRaceCompPtr2	./runtime/race/testdata/comp_test.go	/^func TestRaceCompPtr2(t *testing.T) {$/;"	f
TestRaceCompareString	./runtime/race/testdata/slice_test.go	/^func TestRaceCompareString(t *testing.T) {$/;"	f
TestRaceComplement	./runtime/race/testdata/mop_test.go	/^func TestRaceComplement(t *testing.T) {$/;"	f
TestRaceComplex128WW	./runtime/race/testdata/mop_test.go	/^func TestRaceComplex128WW(t *testing.T) {$/;"	f
TestRaceConcatString	./runtime/race/testdata/slice_test.go	/^func TestRaceConcatString(t *testing.T) {$/;"	f
TestRaceCond	./runtime/race/testdata/sync_test.go	/^func TestRaceCond(t *testing.T) {$/;"	f
TestRaceConv1	./runtime/race/testdata/comp_test.go	/^func TestRaceConv1(t *testing.T) {$/;"	f
TestRaceConv2	./runtime/race/testdata/comp_test.go	/^func TestRaceConv2(t *testing.T) {$/;"	f
TestRaceConv3	./runtime/race/testdata/comp_test.go	/^func TestRaceConv3(t *testing.T) {$/;"	f
TestRaceConv4	./runtime/race/testdata/comp_test.go	/^func TestRaceConv4(t *testing.T) {$/;"	f
TestRaceCrawl	./runtime/race/testdata/mop_test.go	/^func TestRaceCrawl(t *testing.T) {$/;"	f
TestRaceDeferArg	./runtime/race/testdata/mop_test.go	/^func TestRaceDeferArg(t *testing.T) {$/;"	f
TestRaceDeferArg2	./runtime/race/testdata/mop_test.go	/^func TestRaceDeferArg2(t *testing.T) {$/;"	f
TestRaceDiv	./runtime/race/testdata/mop_test.go	/^func TestRaceDiv(t *testing.T) {$/;"	f
TestRaceDivConst	./runtime/race/testdata/mop_test.go	/^func TestRaceDivConst(t *testing.T) {$/;"	f
TestRaceEfaceConv	./runtime/race/testdata/mop_test.go	/^func TestRaceEfaceConv(t *testing.T) {$/;"	f
TestRaceEfaceWW	./runtime/race/testdata/mop_test.go	/^func TestRaceEfaceWW(t *testing.T) {$/;"	f
TestRaceEmptyInterface1	./runtime/race/testdata/mop_test.go	/^func TestRaceEmptyInterface1(t *testing.T) {$/;"	f
TestRaceEmptyInterface2	./runtime/race/testdata/mop_test.go	/^func TestRaceEmptyInterface2(t *testing.T) {$/;"	f
TestRaceError	./runtime/race/testdata/mop_test.go	/^func TestRaceError(t *testing.T) {$/;"	f
TestRaceFin	./runtime/race/testdata/finalizer_test.go	/^func TestRaceFin(t *testing.T) {$/;"	f
TestRaceFloat64WW	./runtime/race/testdata/mop_test.go	/^func TestRaceFloat64WW(t *testing.T) {$/;"	f
TestRaceForIncr	./runtime/race/testdata/mop_test.go	/^func TestRaceForIncr(t *testing.T) {$/;"	f
TestRaceForInit	./runtime/race/testdata/mop_test.go	/^func TestRaceForInit(t *testing.T) {$/;"	f
TestRaceForTest	./runtime/race/testdata/mop_test.go	/^func TestRaceForTest(t *testing.T) {$/;"	f
TestRaceFuncArgsRW	./runtime/race/testdata/mop_test.go	/^func TestRaceFuncArgsRW(t *testing.T) {$/;"	f
TestRaceFuncArgument	./runtime/race/testdata/mop_test.go	/^func TestRaceFuncArgument(t *testing.T) {$/;"	f
TestRaceFuncArgument2	./runtime/race/testdata/mop_test.go	/^func TestRaceFuncArgument2(t *testing.T) {$/;"	f
TestRaceFuncCall	./runtime/race/testdata/mop_test.go	/^func TestRaceFuncCall(t *testing.T) {$/;"	f
TestRaceFuncItself	./runtime/race/testdata/mop_test.go	/^func TestRaceFuncItself(t *testing.T) {$/;"	f
TestRaceFuncVariableRW	./runtime/race/testdata/mop_test.go	/^func TestRaceFuncVariableRW(t *testing.T) {$/;"	f
TestRaceFuncVariableWW	./runtime/race/testdata/mop_test.go	/^func TestRaceFuncVariableWW(t *testing.T) {$/;"	f
TestRaceGoroutineCreationStack	./runtime/race/testdata/sync_test.go	/^func TestRaceGoroutineCreationStack(t *testing.T) {$/;"	f
TestRaceHeapParam	./runtime/race/testdata/mop_test.go	/^func TestRaceHeapParam(t *testing.T) {$/;"	f
TestRaceIfaceCmp	./runtime/race/testdata/mop_test.go	/^func TestRaceIfaceCmp(t *testing.T) {$/;"	f
TestRaceIfaceCmpNil	./runtime/race/testdata/mop_test.go	/^func TestRaceIfaceCmpNil(t *testing.T) {$/;"	f
TestRaceIfaceConv	./runtime/race/testdata/mop_test.go	/^func TestRaceIfaceConv(t *testing.T) {$/;"	f
TestRaceIfaceWW	./runtime/race/testdata/mop_test.go	/^func TestRaceIfaceWW(t *testing.T) {$/;"	f
TestRaceIndirection	./runtime/race/testdata/mop_test.go	/^func TestRaceIndirection(t *testing.T) {$/;"	f
TestRaceInt32RWClosures	./runtime/race/testdata/mop_test.go	/^func TestRaceInt32RWClosures(t *testing.T) {$/;"	f
TestRaceIntRWClosures	./runtime/race/testdata/mop_test.go	/^func TestRaceIntRWClosures(t *testing.T) {$/;"	f
TestRaceIntRWGlobalFuncs	./runtime/race/testdata/mop_test.go	/^func TestRaceIntRWGlobalFuncs(t *testing.T) {$/;"	f
TestRaceInterCall	./runtime/race/testdata/mop_test.go	/^func TestRaceInterCall(t *testing.T) {$/;"	f
TestRaceInterCall2	./runtime/race/testdata/mop_test.go	/^func TestRaceInterCall2(t *testing.T) {$/;"	f
TestRaceIntptrRW	./runtime/race/testdata/mop_test.go	/^func TestRaceIntptrRW(t *testing.T) {$/;"	f
TestRaceIssue5567	./runtime/race/testdata/mop_test.go	/^func TestRaceIssue5567(t *testing.T) {$/;"	f
TestRaceIssue5654	./runtime/race/testdata/mop_test.go	/^func TestRaceIssue5654(t *testing.T) {$/;"	f
TestRaceMapAssignMultipleReturn	./runtime/race/testdata/map_test.go	/^func TestRaceMapAssignMultipleReturn(t *testing.T) {$/;"	f
TestRaceMapBigKeyAccess1	./runtime/race/testdata/map_test.go	/^func TestRaceMapBigKeyAccess1(t *testing.T) {$/;"	f
TestRaceMapBigKeyAccess2	./runtime/race/testdata/map_test.go	/^func TestRaceMapBigKeyAccess2(t *testing.T) {$/;"	f
TestRaceMapBigKeyDelete	./runtime/race/testdata/map_test.go	/^func TestRaceMapBigKeyDelete(t *testing.T) {$/;"	f
TestRaceMapBigKeyInsert	./runtime/race/testdata/map_test.go	/^func TestRaceMapBigKeyInsert(t *testing.T) {$/;"	f
TestRaceMapBigValAccess1	./runtime/race/testdata/map_test.go	/^func TestRaceMapBigValAccess1(t *testing.T) {$/;"	f
TestRaceMapBigValAccess2	./runtime/race/testdata/map_test.go	/^func TestRaceMapBigValAccess2(t *testing.T) {$/;"	f
TestRaceMapBigValInsert	./runtime/race/testdata/map_test.go	/^func TestRaceMapBigValInsert(t *testing.T) {$/;"	f
TestRaceMapDelete	./runtime/race/testdata/map_test.go	/^func TestRaceMapDelete(t *testing.T) {$/;"	f
TestRaceMapDeletePartKey	./runtime/race/testdata/map_test.go	/^func TestRaceMapDeletePartKey(t *testing.T) {$/;"	f
TestRaceMapInit	./runtime/race/testdata/mop_test.go	/^func TestRaceMapInit(t *testing.T) {$/;"	f
TestRaceMapInit2	./runtime/race/testdata/mop_test.go	/^func TestRaceMapInit2(t *testing.T) {$/;"	f
TestRaceMapInsertPartKey	./runtime/race/testdata/map_test.go	/^func TestRaceMapInsertPartKey(t *testing.T) {$/;"	f
TestRaceMapInsertPartVal	./runtime/race/testdata/map_test.go	/^func TestRaceMapInsertPartVal(t *testing.T) {$/;"	f
TestRaceMapLen	./runtime/race/testdata/map_test.go	/^func TestRaceMapLen(t *testing.T) {$/;"	f
TestRaceMapLenDelete	./runtime/race/testdata/map_test.go	/^func TestRaceMapLenDelete(t *testing.T) {$/;"	f
TestRaceMapLookupPartKey	./runtime/race/testdata/map_test.go	/^func TestRaceMapLookupPartKey(t *testing.T) {$/;"	f
TestRaceMapLookupPartKey2	./runtime/race/testdata/map_test.go	/^func TestRaceMapLookupPartKey2(t *testing.T) {$/;"	f
TestRaceMapRW	./runtime/race/testdata/map_test.go	/^func TestRaceMapRW(t *testing.T) {$/;"	f
TestRaceMapRW2	./runtime/race/testdata/map_test.go	/^func TestRaceMapRW2(t *testing.T) {$/;"	f
TestRaceMapRWArray	./runtime/race/testdata/map_test.go	/^func TestRaceMapRWArray(t *testing.T) {$/;"	f
TestRaceMapRange	./runtime/race/testdata/map_test.go	/^func TestRaceMapRange(t *testing.T) {$/;"	f
TestRaceMapRange2	./runtime/race/testdata/map_test.go	/^func TestRaceMapRange2(t *testing.T) {$/;"	f
TestRaceMapVariable	./runtime/race/testdata/map_test.go	/^func TestRaceMapVariable(t *testing.T) {$/;"	f
TestRaceMapVariable2	./runtime/race/testdata/map_test.go	/^func TestRaceMapVariable2(t *testing.T) {$/;"	f
TestRaceMapVariable3	./runtime/race/testdata/map_test.go	/^func TestRaceMapVariable3(t *testing.T) {$/;"	f
TestRaceMethodCall	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodCall(t *testing.T) {$/;"	f
TestRaceMethodCall2	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodCall2(t *testing.T) {$/;"	f
TestRaceMethodThunk	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodThunk(t *testing.T) {$/;"	f
TestRaceMethodThunk2	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodThunk2(t *testing.T) {$/;"	f
TestRaceMethodThunk3	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodThunk3(t *testing.T) {$/;"	f
TestRaceMethodThunk4	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodThunk4(t *testing.T) {$/;"	f
TestRaceMethodValue	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodValue(t *testing.T) {$/;"	f
TestRaceMethodValue2	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodValue2(t *testing.T) {$/;"	f
TestRaceMethodValue3	./runtime/race/testdata/mop_test.go	/^func TestRaceMethodValue3(t *testing.T) {$/;"	f
TestRaceMod	./runtime/race/testdata/mop_test.go	/^func TestRaceMod(t *testing.T) {$/;"	f
TestRaceModConst	./runtime/race/testdata/mop_test.go	/^func TestRaceModConst(t *testing.T) {$/;"	f
TestRaceMutex	./runtime/race/testdata/mutex_test.go	/^func TestRaceMutex(t *testing.T) {$/;"	f
TestRaceMutex2	./runtime/race/testdata/mutex_test.go	/^func TestRaceMutex2(t *testing.T) {$/;"	f
TestRaceMutexOverwrite	./runtime/race/testdata/mutex_test.go	/^func TestRaceMutexOverwrite(t *testing.T) {$/;"	f
TestRaceMutexRWMutex	./runtime/race/testdata/rwmutex_test.go	/^func TestRaceMutexRWMutex(t *testing.T) {$/;"	f
TestRaceNestedArrayCopy	./runtime/race/testdata/mop_test.go	/^func TestRaceNestedArrayCopy(t *testing.T) {$/;"	f
TestRaceNestedStruct	./runtime/race/testdata/mop_test.go	/^func TestRaceNestedStruct(t *testing.T) {$/;"	f
TestRaceOr	./runtime/race/testdata/mop_test.go	/^func TestRaceOr(t *testing.T) {$/;"	f
TestRaceOr2	./runtime/race/testdata/mop_test.go	/^func TestRaceOr2(t *testing.T) {$/;"	f
TestRacePanic	./runtime/race/testdata/mop_test.go	/^func TestRacePanic(t *testing.T) {$/;"	f
TestRacePanicArg	./runtime/race/testdata/mop_test.go	/^func TestRacePanicArg(t *testing.T) {$/;"	f
TestRacePlus	./runtime/race/testdata/mop_test.go	/^func TestRacePlus(t *testing.T) {$/;"	f
TestRacePlus2	./runtime/race/testdata/mop_test.go	/^func TestRacePlus2(t *testing.T) {$/;"	f
TestRacePointerSliceAppend	./runtime/race/testdata/slice_test.go	/^func TestRacePointerSliceAppend(t *testing.T) {$/;"	f
TestRacePointerSliceAppendSlice	./runtime/race/testdata/slice_test.go	/^func TestRacePointerSliceAppendSlice(t *testing.T) {$/;"	f
TestRacePointerSliceAppendSlice2	./runtime/race/testdata/slice_test.go	/^func TestRacePointerSliceAppendSlice2(t *testing.T) {$/;"	f
TestRacePointerSliceAppendWrite	./runtime/race/testdata/slice_test.go	/^func TestRacePointerSliceAppendWrite(t *testing.T) {$/;"	f
TestRacePointerSliceCopyRead	./runtime/race/testdata/slice_test.go	/^func TestRacePointerSliceCopyRead(t *testing.T) {$/;"	f
TestRacePointerSliceCopyWrite2	./runtime/race/testdata/slice_test.go	/^func TestRacePointerSliceCopyWrite2(t *testing.T) {$/;"	f
TestRaceRWMutexMultipleReaders	./runtime/race/testdata/rwmutex_test.go	/^func TestRaceRWMutexMultipleReaders(t *testing.T) {$/;"	f
TestRaceRange	./runtime/race/testdata/mop_test.go	/^func TestRaceRange(t *testing.T) {$/;"	f
TestRaceRotate	./runtime/race/testdata/mop_test.go	/^func TestRaceRotate(t *testing.T) {$/;"	f
TestRaceRune	./runtime/race/testdata/mop_test.go	/^func TestRaceRune(t *testing.T) {$/;"	f
TestRaceSelect1	./runtime/race/testdata/select_test.go	/^func TestRaceSelect1(t *testing.T) {$/;"	f
TestRaceSelect2	./runtime/race/testdata/select_test.go	/^func TestRaceSelect2(t *testing.T) {$/;"	f
TestRaceSelect3	./runtime/race/testdata/select_test.go	/^func TestRaceSelect3(t *testing.T) {$/;"	f
TestRaceSelect4	./runtime/race/testdata/select_test.go	/^func TestRaceSelect4(t *testing.T) {$/;"	f
TestRaceSelect5	./runtime/race/testdata/select_test.go	/^func TestRaceSelect5(t *testing.T) {$/;"	f
TestRaceSelectReadWriteAsync	./runtime/race/testdata/chan_test.go	/^func TestRaceSelectReadWriteAsync(t *testing.T) {$/;"	f
TestRaceSelectReadWriteSync	./runtime/race/testdata/chan_test.go	/^func TestRaceSelectReadWriteSync(t *testing.T) {$/;"	f
TestRaceSlice3	./runtime/race/testdata/slice_test.go	/^func TestRaceSlice3(t *testing.T) {$/;"	f
TestRaceSliceAppend	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceAppend(t *testing.T) {$/;"	f
TestRaceSliceAppendSlice	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceAppendSlice(t *testing.T) {$/;"	f
TestRaceSliceAppendSlice2	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceAppendSlice2(t *testing.T) {$/;"	f
TestRaceSliceAppendString	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceAppendString(t *testing.T) {$/;"	f
TestRaceSliceAppendWrite	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceAppendWrite(t *testing.T) {$/;"	f
TestRaceSliceByteToString	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceByteToString(t *testing.T) {$/;"	f
TestRaceSliceCopyRead	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceCopyRead(t *testing.T) {$/;"	f
TestRaceSliceCopyWrite2	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceCopyWrite2(t *testing.T) {$/;"	f
TestRaceSliceCopyWrite3	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceCopyWrite3(t *testing.T) {$/;"	f
TestRaceSliceDifferent	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceDifferent(t *testing.T) {$/;"	f
TestRaceSliceIndexAccess	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceIndexAccess(t *testing.T) {$/;"	f
TestRaceSliceIndexAccess2	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceIndexAccess2(t *testing.T) {$/;"	f
TestRaceSliceRW	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceRW(t *testing.T) {$/;"	f
TestRaceSliceRangeAppend	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceRangeAppend(t *testing.T) {$/;"	f
TestRaceSliceRangeWrite	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceRangeWrite(t *testing.T) {$/;"	f
TestRaceSliceRuneToString	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceRuneToString(t *testing.T) {$/;"	f
TestRaceSliceSlice	./runtime/race/testdata/mop_test.go	/^func TestRaceSliceSlice(t *testing.T) {$/;"	f
TestRaceSliceSlice2	./runtime/race/testdata/mop_test.go	/^func TestRaceSliceSlice2(t *testing.T) {$/;"	f
TestRaceSliceString	./runtime/race/testdata/mop_test.go	/^func TestRaceSliceString(t *testing.T) {$/;"	f
TestRaceSliceStruct	./runtime/race/testdata/mop_test.go	/^func TestRaceSliceStruct(t *testing.T) {$/;"	f
TestRaceSliceVarAppend	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceVarAppend(t *testing.T) {$/;"	f
TestRaceSliceVarCopy	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceVarCopy(t *testing.T) {$/;"	f
TestRaceSliceVarCopy2	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceVarCopy2(t *testing.T) {$/;"	f
TestRaceSliceVarRange	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceVarRange(t *testing.T) {$/;"	f
TestRaceSliceVarRead	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceVarRead(t *testing.T) {$/;"	f
TestRaceSliceVarWrite	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceVarWrite(t *testing.T) {$/;"	f
TestRaceSliceWW	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceWW(t *testing.T) {$/;"	f
TestRaceSliceWriteSlice	./runtime/race/testdata/slice_test.go	/^func TestRaceSliceWriteSlice(t *testing.T) {$/;"	f
TestRaceSprint	./runtime/race/testdata/mop_test.go	/^func TestRaceSprint(t *testing.T) {$/;"	f
TestRaceStringPtrRW	./runtime/race/testdata/mop_test.go	/^func TestRaceStringPtrRW(t *testing.T) {$/;"	f
TestRaceStringRW	./runtime/race/testdata/mop_test.go	/^func TestRaceStringRW(t *testing.T) {$/;"	f
TestRaceStructFieldRW1	./runtime/race/testdata/mop_test.go	/^func TestRaceStructFieldRW1(t *testing.T) {$/;"	f
TestRaceStructFieldRW2	./runtime/race/testdata/mop_test.go	/^func TestRaceStructFieldRW2(t *testing.T) {$/;"	f
TestRaceStructFieldRW3	./runtime/race/testdata/mop_test.go	/^func TestRaceStructFieldRW3(t *testing.T) {$/;"	f
TestRaceStructInd	./runtime/race/testdata/mop_test.go	/^func TestRaceStructInd(t *testing.T) {$/;"	f
TestRaceStructInit	./runtime/race/testdata/mop_test.go	/^func TestRaceStructInit(t *testing.T) {$/;"	f
TestRaceStructRW	./runtime/race/testdata/mop_test.go	/^func TestRaceStructRW(t *testing.T) {$/;"	f
TestRaceTLS	./runtime/race/testdata/mop_test.go	/^func TestRaceTLS(t *testing.T) {$/;"	f
TestRaceTypeAssert	./runtime/race/testdata/mop_test.go	/^func TestRaceTypeAssert(t *testing.T) {$/;"	f
TestRaceUnaddressableMapLen	./runtime/race/testdata/regression_test.go	/^func TestRaceUnaddressableMapLen(t *testing.T) {$/;"	f
TestRaceUnsafePtrRW	./runtime/race/testdata/mop_test.go	/^func TestRaceUnsafePtrRW(t *testing.T) {$/;"	f
TestRaceWaitGroup	./runtime/race/testdata/waitgroup_test.go	/^func TestRaceWaitGroup(t *testing.T) {$/;"	f
TestRaceWaitGroup2	./runtime/race/testdata/waitgroup_test.go	/^func TestRaceWaitGroup2(t *testing.T) {$/;"	f
TestRaceWaitGroupAsMutex	./runtime/race/testdata/waitgroup_test.go	/^func TestRaceWaitGroupAsMutex(t *testing.T) {$/;"	f
TestRaceWaitGroupReuse	./runtime/race/testdata/waitgroup_test.go	/^func TestRaceWaitGroupReuse(t *testing.T) {$/;"	f
TestRaceWaitGroupWrongAdd	./runtime/race/testdata/waitgroup_test.go	/^func TestRaceWaitGroupWrongAdd(t *testing.T) {$/;"	f
TestRaceWaitGroupWrongWait	./runtime/race/testdata/waitgroup_test.go	/^func TestRaceWaitGroupWrongWait(t *testing.T) {$/;"	f
TestRaiseException	./runtime/syscall_windows_test.go	/^func TestRaiseException(t *testing.T) {$/;"	f
TestRandomData1	./compress/bzip2/bzip2_test.go	/^func TestRandomData1(t *testing.T) {$/;"	f
TestRandomData2	./compress/bzip2/bzip2_test.go	/^func TestRandomData2(t *testing.T) {$/;"	f
TestRandomData3	./compress/bzip2/bzip2_test.go	/^func TestRandomData3(t *testing.T) {$/;"	f
TestRandomScheduling	./runtime/race/sched_test.go	/^func TestRandomScheduling(t *testing.T) {$/;"	f
TestRangeStringCast	./runtime/string_test.go	/^func TestRangeStringCast(t *testing.T) {$/;"	f
TestRatAbs	./cmd/compile/internal/big/rat_test.go	/^func TestRatAbs(t *testing.T) {$/;"	f
TestRatAbs	./math/big/rat_test.go	/^func TestRatAbs(t *testing.T) {$/;"	f
TestRatBin	./cmd/compile/internal/big/rat_test.go	/^func TestRatBin(t *testing.T) {$/;"	f
TestRatBin	./math/big/rat_test.go	/^func TestRatBin(t *testing.T) {$/;"	f
TestRatCmp	./cmd/compile/internal/big/rat_test.go	/^func TestRatCmp(t *testing.T) {$/;"	f
TestRatCmp	./math/big/rat_test.go	/^func TestRatCmp(t *testing.T) {$/;"	f
TestRatGobEncoding	./cmd/compile/internal/big/rat_test.go	/^func TestRatGobEncoding(t *testing.T) {$/;"	f
TestRatGobEncoding	./math/big/rat_test.go	/^func TestRatGobEncoding(t *testing.T) {$/;"	f
TestRatInv	./cmd/compile/internal/big/rat_test.go	/^func TestRatInv(t *testing.T) {$/;"	f
TestRatInv	./math/big/rat_test.go	/^func TestRatInv(t *testing.T) {$/;"	f
TestRatJSONEncoding	./cmd/compile/internal/big/rat_test.go	/^func TestRatJSONEncoding(t *testing.T) {$/;"	f
TestRatJSONEncoding	./math/big/rat_test.go	/^func TestRatJSONEncoding(t *testing.T) {$/;"	f
TestRatNeg	./cmd/compile/internal/big/rat_test.go	/^func TestRatNeg(t *testing.T) {$/;"	f
TestRatNeg	./math/big/rat_test.go	/^func TestRatNeg(t *testing.T) {$/;"	f
TestRatScan	./cmd/compile/internal/big/ratconv_test.go	/^func TestRatScan(t *testing.T) {$/;"	f
TestRatScan	./math/big/ratconv_test.go	/^func TestRatScan(t *testing.T) {$/;"	f
TestRatSetFrac64Rat	./cmd/compile/internal/big/rat_test.go	/^func TestRatSetFrac64Rat(t *testing.T) {$/;"	f
TestRatSetFrac64Rat	./math/big/rat_test.go	/^func TestRatSetFrac64Rat(t *testing.T) {$/;"	f
TestRatSetString	./cmd/compile/internal/big/ratconv_test.go	/^func TestRatSetString(t *testing.T) {$/;"	f
TestRatSetString	./math/big/ratconv_test.go	/^func TestRatSetString(t *testing.T) {$/;"	f
TestRatSign	./cmd/compile/internal/big/rat_test.go	/^func TestRatSign(t *testing.T) {$/;"	f
TestRatSign	./math/big/rat_test.go	/^func TestRatSign(t *testing.T) {$/;"	f
TestRatXMLEncoding	./cmd/compile/internal/big/rat_test.go	/^func TestRatXMLEncoding(t *testing.T) {$/;"	f
TestRatXMLEncoding	./math/big/rat_test.go	/^func TestRatXMLEncoding(t *testing.T) {$/;"	f
TestRawBytesAllocs	./database/sql/convert_test.go	/^func TestRawBytesAllocs(t *testing.T) {$/;"	f
TestRawMessage	./encoding/json/stream_test.go	/^func TestRawMessage(t *testing.T) {$/;"	f
TestRawStructs	./encoding/asn1/asn1_test.go	/^func TestRawStructs(t *testing.T) {$/;"	f
TestRawToken	./encoding/xml/xml_test.go	/^func TestRawToken(t *testing.T) {$/;"	f
TestRawTokenAltEncoding	./encoding/xml/xml_test.go	/^func TestRawTokenAltEncoding(t *testing.T) {$/;"	f
TestRawTokenAltEncodingNoConverter	./encoding/xml/xml_test.go	/^func TestRawTokenAltEncodingNoConverter(t *testing.T) {$/;"	f
TestRead	./crypto/rand/rand_test.go	/^func TestRead(t *testing.T) {$/;"	f
TestRead	./encoding/csv/reader_test.go	/^func TestRead(t *testing.T) {$/;"	f
TestRead0	./os/os_test.go	/^func TestRead0(t *testing.T) {$/;"	f
TestReadAfterBigSeek	./bytes/reader_test.go	/^func TestReadAfterBigSeek(t *testing.T) {$/;"	f
TestReadAfterBigSeek	./strings/reader_test.go	/^func TestReadAfterBigSeek(t *testing.T) {$/;"	f
TestReadAfterLines	./bufio/bufio_test.go	/^func TestReadAfterLines(t *testing.T) {$/;"	f
TestReadAt	./os/os_test.go	/^func TestReadAt(t *testing.T) {$/;"	f
TestReadAtEOF	./os/os_test.go	/^func TestReadAtEOF(t *testing.T) {$/;"	f
TestReadAtLeast	./io/io_test.go	/^func TestReadAtLeast(t *testing.T) {$/;"	f
TestReadAtLeastWithDataAndEOF	./io/io_test.go	/^func TestReadAtLeastWithDataAndEOF(t *testing.T) {$/;"	f
TestReadAtLeastWithDataAndError	./io/io_test.go	/^func TestReadAtLeastWithDataAndError(t *testing.T) {$/;"	f
TestReadByte	./strings/strings_test.go	/^func TestReadByte(t *testing.T) {$/;"	f
TestReadBytes	./bytes/buffer_test.go	/^func TestReadBytes(t *testing.T) {$/;"	f
TestReadCodeLine	./net/textproto/reader_test.go	/^func TestReadCodeLine(t *testing.T) {$/;"	f
TestReadContinuedLine	./net/textproto/reader_test.go	/^func TestReadContinuedLine(t *testing.T) {$/;"	f
TestReadCookies	./net/http/cookie_test.go	/^func TestReadCookies(t *testing.T) {$/;"	f
TestReadDir	./io/ioutil/ioutil_test.go	/^func TestReadDir(t *testing.T) {$/;"	f
TestReadDotBytes	./net/textproto/reader_test.go	/^func TestReadDotBytes(t *testing.T) {$/;"	f
TestReadDotLines	./net/textproto/reader_test.go	/^func TestReadDotLines(t *testing.T) {$/;"	f
TestReadEmpty	./crypto/rand/rand_test.go	/^func TestReadEmpty(t *testing.T) {$/;"	f
TestReadEmptyAtEOF	./bytes/buffer_test.go	/^func TestReadEmptyAtEOF(t *testing.T) {$/;"	f
TestReadEmptyBuffer	./bufio/bufio_test.go	/^func TestReadEmptyBuffer(t *testing.T) {$/;"	f
TestReadErrorMsg	./encoding/binary/binary_test.go	/^func TestReadErrorMsg(t *testing.T) {$/;"	f
TestReadFile	./io/ioutil/ioutil_test.go	/^func TestReadFile(t *testing.T) {$/;"	f
TestReadForm	./mime/multipart/formdata_test.go	/^func TestReadForm(t *testing.T) {$/;"	f
TestReadFrom	./bytes/buffer_test.go	/^func TestReadFrom(t *testing.T) {$/;"	f
TestReadFromTimeout	./net/timeout_test.go	/^func TestReadFromTimeout(t *testing.T) {$/;"	f
TestReadFromTimeoutFluctuation	./net/timeout_test.go	/^func TestReadFromTimeoutFluctuation(t *testing.T) {$/;"	f
TestReadGCStats	./runtime/debug/garbage_test.go	/^func TestReadGCStats(t *testing.T) {$/;"	f
TestReadGNUSparseMap0x1	./archive/tar/reader_test.go	/^func TestReadGNUSparseMap0x1(t *testing.T) {$/;"	f
TestReadGNUSparseMap1x0	./archive/tar/reader_test.go	/^func TestReadGNUSparseMap1x0(t *testing.T) {$/;"	f
TestReadLine	./bufio/bufio_test.go	/^func TestReadLine(t *testing.T) {$/;"	f
TestReadLine	./net/parse_test.go	/^func TestReadLine(t *testing.T) {$/;"	f
TestReadLine	./net/textproto/reader_test.go	/^func TestReadLine(t *testing.T) {$/;"	f
TestReadLineNewlines	./bufio/bufio_test.go	/^func TestReadLineNewlines(t *testing.T) {$/;"	f
TestReadLineNonNilLineOrError	./bufio/bufio_test.go	/^func TestReadLineNonNilLineOrError(t *testing.T) {$/;"	f
TestReadMIMEHeader	./net/textproto/reader_test.go	/^func TestReadMIMEHeader(t *testing.T) {$/;"	f
TestReadMIMEHeaderNoKey	./net/textproto/reader_test.go	/^func TestReadMIMEHeaderNoKey(t *testing.T) {$/;"	f
TestReadMIMEHeaderNonCompliant	./net/textproto/reader_test.go	/^func TestReadMIMEHeaderNonCompliant(t *testing.T) {$/;"	f
TestReadMIMEHeaderSingle	./net/textproto/reader_test.go	/^func TestReadMIMEHeaderSingle(t *testing.T) {$/;"	f
TestReadRequest	./net/http/readrequest_test.go	/^func TestReadRequest(t *testing.T) {$/;"	f
TestReadRequestErrors	./net/http/request_test.go	/^func TestReadRequestErrors(t *testing.T) {$/;"	f
TestReadRequest_Bad	./net/http/readrequest_test.go	/^func TestReadRequest_Bad(t *testing.T) {$/;"	f
TestReadResponse	./net/http/response_test.go	/^func TestReadResponse(t *testing.T) {$/;"	f
TestReadResponseCloseInMiddle	./net/http/response_test.go	/^func TestReadResponseCloseInMiddle(t *testing.T) {$/;"	f
TestReadResponseUnexpectedEOF	./net/http/response_test.go	/^func TestReadResponseUnexpectedEOF(t *testing.T) {$/;"	f
TestReadRune	./bufio/bufio_test.go	/^func TestReadRune(t *testing.T) {$/;"	f
TestReadRune	./strings/strings_test.go	/^func TestReadRune(t *testing.T) {$/;"	f
TestReadSetCookies	./net/http/cookie_test.go	/^func TestReadSetCookies(t *testing.T) {$/;"	f
TestReadSlice	./encoding/binary/binary_test.go	/^func TestReadSlice(t *testing.T) {$/;"	f
TestReadString	./bytes/buffer_test.go	/^func TestReadString(t *testing.T) {$/;"	f
TestReadSubKeyNames	./internal/syscall/windows/registry/registry_test.go	/^func TestReadSubKeyNames(t *testing.T) {$/;"	f
TestReadTimeout	./net/timeout_test.go	/^func TestReadTimeout(t *testing.T) {$/;"	f
TestReadTimeoutFluctuation	./net/timeout_test.go	/^func TestReadTimeoutFluctuation(t *testing.T) {$/;"	f
TestReadTimeoutMustNotReturn	./net/timeout_test.go	/^func TestReadTimeoutMustNotReturn(t *testing.T) {$/;"	f
TestReadUnixgramWithUnnamedSocket	./net/unix_test.go	/^func TestReadUnixgramWithUnnamedSocket(t *testing.T) {$/;"	f
TestReadWriteDeadlineRace	./net/timeout_test.go	/^func TestReadWriteDeadlineRace(t *testing.T) {$/;"	f
TestReadWriteProlongedTimeout	./net/timeout_test.go	/^func TestReadWriteProlongedTimeout(t *testing.T) {$/;"	f
TestReadWriteRune	./bufio/bufio_test.go	/^func TestReadWriteRune(t *testing.T) {$/;"	f
TestReaddir	./os/os_test.go	/^func TestReaddir(t *testing.T) {$/;"	f
TestReaddirNValues	./os/os_test.go	/^func TestReaddirNValues(t *testing.T) {$/;"	f
TestReaddirOfFile	./os/os_test.go	/^func TestReaddirOfFile(t *testing.T) {$/;"	f
TestReaddirStatFailures	./os/os_test.go	/^func TestReaddirStatFailures(t *testing.T) {$/;"	f
TestReaddirnames	./os/os_test.go	/^func TestReaddirnames(t *testing.T) {$/;"	f
TestReaddirnamesOneAtATime	./os/os_test.go	/^func TestReaddirnamesOneAtATime(t *testing.T) {$/;"	f
TestReader	./archive/tar/reader_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReader	./archive/zip/reader_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReader	./bufio/bufio_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReader	./bytes/reader_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReader	./compress/lzw/reader_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReader	./image/png/reader_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReader	./mime/quotedprintable/reader_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReader	./strings/reader_test.go	/^func TestReader(t *testing.T) {$/;"	f
TestReaderAt	./bytes/reader_test.go	/^func TestReaderAt(t *testing.T) {$/;"	f
TestReaderAt	./strings/reader_test.go	/^func TestReaderAt(t *testing.T) {$/;"	f
TestReaderAtConcurrent	./bytes/reader_test.go	/^func TestReaderAtConcurrent(t *testing.T) {$/;"	f
TestReaderAtConcurrent	./strings/reader_test.go	/^func TestReaderAtConcurrent(t *testing.T) {$/;"	f
TestReaderClearError	./bufio/bufio_test.go	/^func TestReaderClearError(t *testing.T) {$/;"	f
TestReaderCopyNothing	./bytes/reader_test.go	/^func TestReaderCopyNothing(t *testing.T) {$/;"	f
TestReaderDict	./compress/flate/deflate_test.go	/^func TestReaderDict(t *testing.T) {$/;"	f
TestReaderDiscard	./bufio/bufio_test.go	/^func TestReaderDiscard(t *testing.T) {$/;"	f
TestReaderDoubleUnreadRune	./bytes/reader_test.go	/^func TestReaderDoubleUnreadRune(t *testing.T) {$/;"	f
TestReaderError	./image/png/reader_test.go	/^func TestReaderError(t *testing.T) {$/;"	f
TestReaderLen	./bytes/reader_test.go	/^func TestReaderLen(t *testing.T) {$/;"	f
TestReaderLenSize	./bytes/reader_test.go	/^func TestReaderLenSize(t *testing.T) {$/;"	f
TestReaderLenSize	./strings/reader_test.go	/^func TestReaderLenSize(t *testing.T) {$/;"	f
TestReaderReset	./bufio/bufio_test.go	/^func TestReaderReset(t *testing.T) {$/;"	f
TestReaderSimple	./bufio/bufio_test.go	/^func TestReaderSimple(t *testing.T) {$/;"	f
TestReaderWriteTo	./bufio/bufio_test.go	/^func TestReaderWriteTo(t *testing.T) {$/;"	f
TestReaderWriteTo	./bytes/reader_test.go	/^func TestReaderWriteTo(t *testing.T) {$/;"	f
TestReaderWriteToErrors	./bufio/bufio_test.go	/^func TestReaderWriteToErrors(t *testing.T) {$/;"	f
TestRecorder	./net/http/httptest/recorder_test.go	/^func TestRecorder(t *testing.T) {$/;"	f
TestRecoverBeforePanicAfterGoexit	./runtime/crash_test.go	/^func TestRecoverBeforePanicAfterGoexit(t *testing.T) {$/;"	f
TestRecoveredPanicAfterGoexit	./runtime/crash_test.go	/^func TestRecoveredPanicAfterGoexit(t *testing.T) {$/;"	f
TestRect	./math/cmplx/cmath_test.go	/^func TestRect(t *testing.T) {$/;"	f
TestRectangle	./image/geom_test.go	/^func TestRectangle(t *testing.T) {$/;"	f
TestRecursiveMapType	./encoding/gob/encoder_test.go	/^func TestRecursiveMapType(t *testing.T) {$/;"	f
TestRecursivePanic	./runtime/crash_test.go	/^func TestRecursivePanic(t *testing.T) {$/;"	f
TestRecursiveSliceType	./encoding/gob/encoder_test.go	/^func TestRecursiveSliceType(t *testing.T) {$/;"	f
TestRedefinition	./text/template/multi_test.go	/^func TestRedefinition(t *testing.T) {$/;"	f
TestRedirect	./net/http/cgi/host_test.go	/^func TestRedirect(t *testing.T) {$/;"	f
TestRedirect	./net/http/request_test.go	/^func TestRedirect(t *testing.T) {$/;"	f
TestRedirectBadPath	./net/http/serve_test.go	/^func TestRedirectBadPath(t *testing.T) {$/;"	f
TestRedirectCookiesJar	./net/http/client_test.go	/^func TestRedirectCookiesJar(t *testing.T) {$/;"	f
TestRedirectMunging	./net/http/serve_test.go	/^func TestRedirectMunging(t *testing.T) {$/;"	f
TestRedundantFuncs	./html/template/escape_test.go	/^func TestRedundantFuncs(t *testing.T) {$/;"	f
TestRefUnmarshal	./encoding/json/decode_test.go	/^func TestRefUnmarshal(t *testing.T) {$/;"	f
TestRefValMarshal	./encoding/json/encode_test.go	/^func TestRefValMarshal(t *testing.T) {$/;"	f
TestReferer	./net/http/client_test.go	/^func TestReferer(t *testing.T) {$/;"	f
TestReflectFuncTraceback	./reflect/all_test.go	/^func TestReflectFuncTraceback(t *testing.T) {$/;"	f
TestReflectMethodTraceback	./reflect/all_test.go	/^func TestReflectMethodTraceback(t *testing.T) {$/;"	f
TestRegString	./cmd/internal/rsc.io/x86/x86asm/inst_test.go	/^func TestRegString(t *testing.T) {$/;"	f
TestRegisterClass	./runtime/syscall_windows_test.go	/^func TestRegisterClass(t *testing.T) {$/;"	f
TestRegistration	./encoding/gob/type_test.go	/^func TestRegistration(t *testing.T) {$/;"	f
TestRegistrationError	./net/rpc/server_test.go	/^func TestRegistrationError(t *testing.T) {$/;"	f
TestRegistrationNaming	./encoding/gob/type_test.go	/^func TestRegistrationNaming(t *testing.T) {$/;"	f
TestRegress	./math/rand/regress_test.go	/^func TestRegress(t *testing.T) {$/;"	f
TestRegression2508	./compress/flate/deflate_test.go	/^func TestRegression2508(t *testing.T) {$/;"	f
TestRejectBadProtocolVersion	./crypto/tls/handshake_server_test.go	/^func TestRejectBadProtocolVersion(t *testing.T) {$/;"	f
TestRejectRelativeDotPathInGOPATHCommandLinePackage	./cmd/go/go_test.go	/^func TestRejectRelativeDotPathInGOPATHCommandLinePackage(t *testing.T) {$/;"	f
TestRejectRelativePathsInGOPATH	./cmd/go/go_test.go	/^func TestRejectRelativePathsInGOPATH(t *testing.T) {$/;"	f
TestRejectRelativePathsInGOPATHCommandLinePackage	./cmd/go/go_test.go	/^func TestRejectRelativePathsInGOPATHCommandLinePackage(t *testing.T) {$/;"	f
TestRel	./path/filepath/path_test.go	/^func TestRel(t *testing.T) {$/;"	f
TestRelativeImportsGoTest	./cmd/go/go_test.go	/^func TestRelativeImportsGoTest(t *testing.T) {$/;"	f
TestRelativeImportsGoTestDashI	./cmd/go/go_test.go	/^func TestRelativeImportsGoTestDashI(t *testing.T) {$/;"	f
TestRelativeImportsInCommandLinePackage	./cmd/go/go_test.go	/^func TestRelativeImportsInCommandLinePackage(t *testing.T) {$/;"	f
TestRemainder	./math/all_test.go	/^func TestRemainder(t *testing.T) {$/;"	f
TestRemove	./container/list/list_test.go	/^func TestRemove(t *testing.T) {$/;"	f
TestRemove0	./container/heap/heap_test.go	/^func TestRemove0(t *testing.T) {$/;"	f
TestRemove1	./container/heap/heap_test.go	/^func TestRemove1(t *testing.T) {$/;"	f
TestRemove2	./container/heap/heap_test.go	/^func TestRemove2(t *testing.T) {$/;"	f
TestRemoveAll	./os/path_test.go	/^func TestRemoveAll(t *testing.T) {$/;"	f
TestRemoveAllRace	./os/os_test.go	/^func TestRemoveAllRace(t *testing.T) {$/;"	f
TestRemovePadding	./crypto/tls/conn_test.go	/^func TestRemovePadding(t *testing.T) {$/;"	f
TestRename	./os/os_test.go	/^func TestRename(t *testing.T) {$/;"	f
TestRenameFailed	./os/os_test.go	/^func TestRenameFailed(t *testing.T) {$/;"	f
TestRenameOverwriteDest	./os/os_test.go	/^func TestRenameOverwriteDest(t *testing.T) {$/;"	f
TestRenegotiationExtension	./crypto/tls/handshake_server_test.go	/^func TestRenegotiationExtension(t *testing.T) {$/;"	f
TestReorder	./fmt/fmt_test.go	/^func TestReorder(t *testing.T) {$/;"	f
TestReorderedFields	./encoding/gob/codec_test.go	/^func TestReorderedFields(t *testing.T) {$/;"	f
TestRepeat	./bytes/bytes_test.go	/^func TestRepeat(t *testing.T) {$/;"	f
TestRepeat	./strings/strings_test.go	/^func TestRepeat(t *testing.T) {$/;"	f
TestReplace	./bytes/bytes_test.go	/^func TestReplace(t *testing.T) {$/;"	f
TestReplace	./strings/strings_test.go	/^func TestReplace(t *testing.T) {$/;"	f
TestReplaceAll	./regexp/all_test.go	/^func TestReplaceAll(t *testing.T) {$/;"	f
TestReplaceAllFunc	./regexp/all_test.go	/^func TestReplaceAllFunc(t *testing.T) {$/;"	f
TestReplaceAllLiteral	./regexp/all_test.go	/^func TestReplaceAllLiteral(t *testing.T) {$/;"	f
TestReplacer	./strings/replace_test.go	/^func TestReplacer(t *testing.T) {$/;"	f
TestRepoRootForImportPath	./cmd/go/vcs_test.go	/^func TestRepoRootForImportPath(t *testing.T) {$/;"	f
TestRequest	./net/http/cgi/child_test.go	/^func TestRequest(t *testing.T) {$/;"	f
TestRequestBadHost	./net/http/request_test.go	/^func TestRequestBadHost(t *testing.T) {$/;"	f
TestRequestBodyCloseDoesntBlock	./net/http/serve_test.go	/^func TestRequestBodyCloseDoesntBlock(t *testing.T) {$/;"	f
TestRequestBodyLimit	./net/http/serve_test.go	/^func TestRequestBodyLimit(t *testing.T) {$/;"	f
TestRequestBodyReadErrorClosesConnection	./net/http/serve_test.go	/^func TestRequestBodyReadErrorClosesConnection(t *testing.T) {$/;"	f
TestRequestBodyTimeoutClosesConnection	./net/http/serve_test.go	/^func TestRequestBodyTimeoutClosesConnection(t *testing.T) {$/;"	f
TestRequestLimit	./net/http/serve_test.go	/^func TestRequestLimit(t *testing.T) {$/;"	f
TestRequestURI	./net/url/url_test.go	/^func TestRequestURI(t *testing.T) {$/;"	f
TestRequestWithTLS	./net/http/cgi/child_test.go	/^func TestRequestWithTLS(t *testing.T) {$/;"	f
TestRequestWithoutHost	./net/http/cgi/child_test.go	/^func TestRequestWithoutHost(t *testing.T) {$/;"	f
TestRequestWithoutRemotePort	./net/http/cgi/child_test.go	/^func TestRequestWithoutRemotePort(t *testing.T) {$/;"	f
TestRequestWithoutRequestURI	./net/http/cgi/child_test.go	/^func TestRequestWithoutRequestURI(t *testing.T) {$/;"	f
TestRequestWrite	./net/http/requestwrite_test.go	/^func TestRequestWrite(t *testing.T) {$/;"	f
TestRequestWriteBufferedWriter	./net/http/request_test.go	/^func TestRequestWriteBufferedWriter(t *testing.T) {$/;"	f
TestRequestWriteClosesBody	./net/http/requestwrite_test.go	/^func TestRequestWriteClosesBody(t *testing.T) {$/;"	f
TestRequestWriteError	./net/http/requestwrite_test.go	/^func TestRequestWriteError(t *testing.T) {$/;"	f
TestReregistration	./encoding/gob/type_test.go	/^func TestReregistration(t *testing.T) {$/;"	f
TestReset	./compress/flate/inflate_test.go	/^func TestReset(t *testing.T) {$/;"	f
TestReset	./os/signal/signal_test.go	/^func TestReset(t *testing.T) {$/;"	f
TestReset	./time/sleep_test.go	/^func TestReset(t *testing.T) {$/;"	f
TestResolveGoogle	./net/external_test.go	/^func TestResolveGoogle(t *testing.T) {$/;"	f
TestResolveIPAddr	./net/ipraw_test.go	/^func TestResolveIPAddr(t *testing.T) {$/;"	f
TestResolveIdents	./go/types/resolver_test.go	/^func TestResolveIdents(t *testing.T) {$/;"	f
TestResolvePath	./net/url/url_test.go	/^func TestResolvePath(t *testing.T) {$/;"	f
TestResolveReference	./net/url/url_test.go	/^func TestResolveReference(t *testing.T) {$/;"	f
TestResolveTCPAddr	./net/tcp_test.go	/^func TestResolveTCPAddr(t *testing.T) {$/;"	f
TestResolveUDPAddr	./net/udp_test.go	/^func TestResolveUDPAddr(t *testing.T) {$/;"	f
TestResponseContentLengthShortBody	./net/http/response_test.go	/^func TestResponseContentLengthShortBody(t *testing.T) {$/;"	f
TestResponseSetsTLSConnectionState	./net/http/client_test.go	/^func TestResponseSetsTLSConnectionState(t *testing.T) {$/;"	f
TestResponseStatusStutter	./net/http/response_test.go	/^func TestResponseStatusStutter(t *testing.T) {$/;"	f
TestResponseWrite	./net/http/responsewrite_test.go	/^func TestResponseWrite(t *testing.T) {$/;"	f
TestResponseWriterWriteString	./net/http/serve_test.go	/^func TestResponseWriterWriteString(t *testing.T) {$/;"	f
TestResumption	./crypto/tls/handshake_server_test.go	/^func TestResumption(t *testing.T) {$/;"	f
TestResumptionDisabled	./crypto/tls/handshake_server_test.go	/^func TestResumptionDisabled(t *testing.T) {$/;"	f
TestReturnAfterStackGrowInCallback	./runtime/syscall_windows_test.go	/^func TestReturnAfterStackGrowInCallback(t *testing.T) {$/;"	f
TestReverseAddress	./net/lookup_test.go	/^func TestReverseAddress(t *testing.T) {$/;"	f
TestReverseBits	./compress/flate/deflate_test.go	/^func TestReverseBits(t *testing.T) {$/;"	f
TestReverseProxy	./net/http/httputil/reverseproxy_test.go	/^func TestReverseProxy(t *testing.T) {$/;"	f
TestReverseProxyCancellation	./net/http/httputil/reverseproxy_test.go	/^func TestReverseProxyCancellation(t *testing.T) {$/;"	f
TestReverseProxyFlushInterval	./net/http/httputil/reverseproxy_test.go	/^func TestReverseProxyFlushInterval(t *testing.T) {$/;"	f
TestReverseProxyQuery	./net/http/httputil/reverseproxy_test.go	/^func TestReverseProxyQuery(t *testing.T) {$/;"	f
TestReverseSortIntSlice	./sort/sort_test.go	/^func TestReverseSortIntSlice(t *testing.T) {$/;"	f
TestRewrite	./cmd/fix/main_test.go	/^func TestRewrite(t *testing.T) {$/;"	f
TestRewrite	./cmd/gofmt/gofmt_test.go	/^func TestRewrite(t *testing.T) {$/;"	f
TestRlimit	./syscall/syscall_unix_test.go	/^func TestRlimit(t *testing.T) {$/;"	f
TestRoundDown10	./testing/benchmark_test.go	/^func TestRoundDown10(t *testing.T) {$/;"	f
TestRoundTrip	./archive/tar/tar_test.go	/^func TestRoundTrip(t *testing.T) {$/;"	f
TestRoundTrip	./compress/gzip/gzip_test.go	/^func TestRoundTrip(t *testing.T) {$/;"	f
TestRoundTrip	./mime/quotedprintable/writer_test.go	/^func TestRoundTrip(t *testing.T) {$/;"	f
TestRoundTrip	./strconv/atof_test.go	/^func TestRoundTrip(t *testing.T) {$/;"	f
TestRoundTrip32	./strconv/atof_test.go	/^func TestRoundTrip32(t *testing.T) {$/;"	f
TestRoundTripGzip	./net/http/transport_test.go	/^func TestRoundTripGzip(t *testing.T) {$/;"	f
TestRoundTripReturnsProxyError	./net/http/transport_test.go	/^func TestRoundTripReturnsProxyError(t *testing.T) {$/;"	f
TestRoundUp	./crypto/tls/conn_test.go	/^func TestRoundUp(t *testing.T) {$/;"	f
TestRoundUp	./testing/benchmark_test.go	/^func TestRoundUp(t *testing.T) {$/;"	f
TestRouteMonitor	./syscall/route_bsd_test.go	/^func TestRouteMonitor(t *testing.T) {$/;"	f
TestRouteRIB	./syscall/route_bsd_test.go	/^func TestRouteRIB(t *testing.T) {$/;"	f
TestRowsCloseOrder	./database/sql/sql_test.go	/^func TestRowsCloseOrder(t *testing.T) {$/;"	f
TestRowsColumns	./database/sql/sql_test.go	/^func TestRowsColumns(t *testing.T) {$/;"	f
TestRowsImplicitClose	./database/sql/sql_test.go	/^func TestRowsImplicitClose(t *testing.T) {$/;"	f
TestRsh	./cmd/compile/internal/big/int_test.go	/^func TestRsh(t *testing.T) {$/;"	f
TestRsh	./math/big/int_test.go	/^func TestRsh(t *testing.T) {$/;"	f
TestRshSelf	./cmd/compile/internal/big/int_test.go	/^func TestRshSelf(t *testing.T) {$/;"	f
TestRshSelf	./math/big/int_test.go	/^func TestRshSelf(t *testing.T) {$/;"	f
TestRubyParse	./time/format_test.go	/^func TestRubyParse(t *testing.T) {$/;"	f
TestRunParallel	./testing/benchmark_test.go	/^func TestRunParallel(t *testing.T) {$/;"	f
TestRunParallelFail	./testing/benchmark_test.go	/^func TestRunParallelFail(t *testing.T) {$/;"	f
TestRuneCount	./unicode/utf8/utf8_test.go	/^func TestRuneCount(t *testing.T) {$/;"	f
TestRuneIO	./bytes/buffer_test.go	/^func TestRuneIO(t *testing.T) {$/;"	f
TestRuneLen	./unicode/utf8/utf8_test.go	/^func TestRuneLen(t *testing.T) {$/;"	f
TestRunes	./bytes/bytes_test.go	/^func TestRunes(t *testing.T) {$/;"	f
TestRunes	./strings/strings_test.go	/^func TestRunes(t *testing.T) {$/;"	f
TestSCMCredentials	./syscall/creds_test.go	/^func TestSCMCredentials(t *testing.T) {$/;"	f
TestSCTHandshake	./crypto/tls/handshake_server_test.go	/^func TestSCTHandshake(t *testing.T) {$/;"	f
TestSameFile	./os/os_test.go	/^func TestSameFile(t *testing.T) {$/;"	f
TestSameWindowsFile	./os/os_windows_test.go	/^func TestSameWindowsFile(t *testing.T) {$/;"	f
TestSboxes	./crypto/aes/aes_test.go	/^func TestSboxes(t *testing.T) {$/;"	f
TestScalarDecInstructions	./encoding/gob/codec_test.go	/^func TestScalarDecInstructions(t *testing.T) {$/;"	f
TestScalarEncInstructions	./encoding/gob/codec_test.go	/^func TestScalarEncInstructions(t *testing.T) {$/;"	f
TestScan	./cmd/compile/internal/big/intconv_test.go	/^func TestScan(t *testing.T) {$/;"	f
TestScan	./fmt/scan_test.go	/^func TestScan(t *testing.T) {$/;"	f
TestScan	./go/scanner/scanner_test.go	/^func TestScan(t *testing.T) {$/;"	f
TestScan	./math/big/intconv_test.go	/^func TestScan(t *testing.T) {$/;"	f
TestScan	./text/scanner/scanner_test.go	/^func TestScan(t *testing.T) {$/;"	f
TestScanBase	./cmd/compile/internal/big/natconv_test.go	/^func TestScanBase(t *testing.T) {$/;"	f
TestScanBase	./math/big/natconv_test.go	/^func TestScanBase(t *testing.T) {$/;"	f
TestScanByte	./bufio/scan_test.go	/^func TestScanByte(t *testing.T) {$/;"	f
TestScanCustomIdent	./text/scanner/scanner_test.go	/^func TestScanCustomIdent(t *testing.T) {$/;"	f
TestScanEOFHandling	./text/scanner/scanner_test.go	/^func TestScanEOFHandling(t *testing.T) {$/;"	f
TestScanEmpty	./fmt/scan_test.go	/^func TestScanEmpty(t *testing.T) {$/;"	f
TestScanErrors	./go/scanner/scanner_test.go	/^func TestScanErrors(t *testing.T) {$/;"	f
TestScanInts	./fmt/scan_test.go	/^func TestScanInts(t *testing.T) {$/;"	f
TestScanLineEmptyFinalLine	./bufio/scan_test.go	/^func TestScanLineEmptyFinalLine(t *testing.T) {$/;"	f
TestScanLineEmptyFinalLineWithCR	./bufio/scan_test.go	/^func TestScanLineEmptyFinalLineWithCR(t *testing.T) {$/;"	f
TestScanLineNoNewline	./bufio/scan_test.go	/^func TestScanLineNoNewline(t *testing.T) {$/;"	f
TestScanLineReturnButNoNewline	./bufio/scan_test.go	/^func TestScanLineReturnButNoNewline(t *testing.T) {$/;"	f
TestScanLineTooLong	./bufio/scan_test.go	/^func TestScanLineTooLong(t *testing.T) {$/;"	f
TestScanLongLines	./bufio/scan_test.go	/^func TestScanLongLines(t *testing.T) {$/;"	f
TestScanMultiple	./fmt/scan_test.go	/^func TestScanMultiple(t *testing.T) {$/;"	f
TestScanNewlinesAreSpaces	./fmt/scan_test.go	/^func TestScanNewlinesAreSpaces(t *testing.T) {$/;"	f
TestScanNext	./text/scanner/scanner_test.go	/^func TestScanNext(t *testing.T) {$/;"	f
TestScanNotPointer	./fmt/scan_test.go	/^func TestScanNotPointer(t *testing.T) {$/;"	f
TestScanOverflow	./fmt/scan_test.go	/^func TestScanOverflow(t *testing.T) {$/;"	f
TestScanPi	./cmd/compile/internal/big/natconv_test.go	/^func TestScanPi(t *testing.T) {$/;"	f
TestScanPi	./math/big/natconv_test.go	/^func TestScanPi(t *testing.T) {$/;"	f
TestScanPiParallel	./cmd/compile/internal/big/natconv_test.go	/^func TestScanPiParallel(t *testing.T) {$/;"	f
TestScanPiParallel	./math/big/natconv_test.go	/^func TestScanPiParallel(t *testing.T) {$/;"	f
TestScanRune	./bufio/scan_test.go	/^func TestScanRune(t *testing.T) {$/;"	f
TestScanSelectedMask	./text/scanner/scanner_test.go	/^func TestScanSelectedMask(t *testing.T) {$/;"	f
TestScanStateCount	./fmt/scan_test.go	/^func TestScanStateCount(t *testing.T) {$/;"	f
TestScanWhitespace	./text/scanner/scanner_test.go	/^func TestScanWhitespace(t *testing.T) {$/;"	f
TestScanWords	./bufio/scan_test.go	/^func TestScanWords(t *testing.T) {$/;"	f
TestScanWordsExcessiveWhiteSpace	./bufio/scan_test.go	/^func TestScanWordsExcessiveWhiteSpace(t *testing.T) {$/;"	f
TestScanZeroMode	./text/scanner/scanner_test.go	/^func TestScanZeroMode(t *testing.T) {$/;"	f
TestScanf	./fmt/scan_test.go	/^func TestScanf(t *testing.T) {$/;"	f
TestScanfMulti	./fmt/scan_test.go	/^func TestScanfMulti(t *testing.T) {$/;"	f
TestScanfNewlineMatchFormat	./fmt/scan_test.go	/^func TestScanfNewlineMatchFormat(t *testing.T) {$/;"	f
TestScanln	./fmt/scan_test.go	/^func TestScanln(t *testing.T) {$/;"	f
TestScanlnNewlinesTerminate	./fmt/scan_test.go	/^func TestScanlnNewlinesTerminate(t *testing.T) {$/;"	f
TestScanlnNoNewline	./fmt/scan_test.go	/^func TestScanlnNoNewline(t *testing.T) {$/;"	f
TestScanlnWithMiddleNewline	./fmt/scan_test.go	/^func TestScanlnWithMiddleNewline(t *testing.T) {$/;"	f
TestSchedLocalQueue	./runtime/proc_test.go	/^func TestSchedLocalQueue(t *testing.T) {$/;"	f
TestSchedLocalQueueSteal	./runtime/proc_test.go	/^func TestSchedLocalQueueSteal(t *testing.T) {$/;"	f
TestScopeLookupParent	./go/types/api_test.go	/^func TestScopeLookupParent(t *testing.T) {$/;"	f
TestScopesInfo	./go/types/api_test.go	/^func TestScopesInfo(t *testing.T) {$/;"	f
TestScripts	./unicode/script_test.go	/^func TestScripts(t *testing.T) {$/;"	f
TestSearch	./sort/search_test.go	/^func TestSearch(t *testing.T) {$/;"	f
TestSearchEfficiency	./sort/search_test.go	/^func TestSearchEfficiency(t *testing.T) {$/;"	f
TestSearchExhaustive	./sort/search_test.go	/^func TestSearchExhaustive(t *testing.T) {$/;"	f
TestSearchWrappers	./sort/search_test.go	/^func TestSearchWrappers(t *testing.T) {$/;"	f
TestSearchWrappersDontAlloc	./sort/search_test.go	/^func TestSearchWrappersDontAlloc(t *testing.T) {$/;"	f
TestSecondsToLocalTime	./time/time_test.go	/^func TestSecondsToLocalTime(t *testing.T) {$/;"	f
TestSecondsToUTC	./time/time_test.go	/^func TestSecondsToUTC(t *testing.T) {$/;"	f
TestSecondsToUTCAndBack	./time/time_test.go	/^func TestSecondsToUTCAndBack(t *testing.T) {$/;"	f
TestSectionReader_ReadAt	./io/io_test.go	/^func TestSectionReader_ReadAt(t *testing.T) {$/;"	f
TestSectionReader_Seek	./io/io_test.go	/^func TestSectionReader_Seek(t *testing.T) {$/;"	f
TestSectionReader_Size	./io/io_test.go	/^func TestSectionReader_Size(t *testing.T) {$/;"	f
TestSeek	./os/os_test.go	/^func TestSeek(t *testing.T) {$/;"	f
TestSeekFailure	./syscall/syscall_unix_test.go	/^func TestSeekFailure(t *testing.T) {$/;"	f
TestSelect	./reflect/all_test.go	/^func TestSelect(t *testing.T) {$/;"	f
TestSelectDuplicateChannel	./runtime/chan_test.go	/^func TestSelectDuplicateChannel(t *testing.T) {$/;"	f
TestSelectStress	./runtime/chan_test.go	/^func TestSelectStress(t *testing.T) {$/;"	f
TestSelectTag	./cmd/go/tag_test.go	/^func TestSelectTag(t *testing.T) {$/;"	f
TestSelection	./go/types/api_test.go	/^func TestSelection(t *testing.T) {$/;"	f
TestSelf	./go/types/self_test.go	/^func TestSelf(t *testing.T) {$/;"	f
TestSelfConnect	./net/dial_test.go	/^func TestSelfConnect(t *testing.T) {$/;"	f
TestSelfSelect	./runtime/chan_test.go	/^func TestSelfSelect(t *testing.T) {$/;"	f
TestSemaphore	./sync/mutex_test.go	/^func TestSemaphore(t *testing.T) {$/;"	f
TestSemiWeakKeyPairs	./crypto/des/des_test.go	/^func TestSemiWeakKeyPairs(t *testing.T) {$/;"	f
TestSemis	./go/scanner/scanner_test.go	/^func TestSemis(t *testing.T) {$/;"	f
TestSendDeadlock	./net/rpc/server_test.go	/^func TestSendDeadlock(t *testing.T) {$/;"	f
TestSendMail	./net/smtp/smtp_test.go	/^func TestSendMail(t *testing.T) {$/;"	f
TestSequencing	./unicode/utf8/utf8_test.go	/^func TestSequencing(t *testing.T) {$/;"	f
TestSequentialDecoder	./encoding/gob/encoder_test.go	/^func TestSequentialDecoder(t *testing.T) {$/;"	f
TestSerialization	./go/token/serialize_test.go	/^func TestSerialization(t *testing.T) {$/;"	f
TestServeContent	./net/http/fs_test.go	/^func TestServeContent(t *testing.T) {$/;"	f
TestServeContentErrorMessages	./net/http/fs_test.go	/^func TestServeContentErrorMessages(t *testing.T) {$/;"	f
TestServeFile	./net/http/fs_test.go	/^func TestServeFile(t *testing.T) {$/;"	f
TestServeFileContentType	./net/http/fs_test.go	/^func TestServeFileContentType(t *testing.T) {$/;"	f
TestServeFileFromCWD	./net/http/fs_test.go	/^func TestServeFileFromCWD(t *testing.T) {$/;"	f
TestServeFileMimeType	./net/http/fs_test.go	/^func TestServeFileMimeType(t *testing.T) {$/;"	f
TestServeFileWithContentEncoding	./net/http/fs_test.go	/^func TestServeFileWithContentEncoding(t *testing.T) {$/;"	f
TestServeHTTP10Close	./net/http/serve_test.go	/^func TestServeHTTP10Close(t *testing.T) {$/;"	f
TestServeIndexHtml	./net/http/fs_test.go	/^func TestServeIndexHtml(t *testing.T) {$/;"	f
TestServeMuxHandler	./net/http/serve_test.go	/^func TestServeMuxHandler(t *testing.T) {$/;"	f
TestServeMuxHandlerRedirects	./net/http/serve_test.go	/^func TestServeMuxHandlerRedirects(t *testing.T) {$/;"	f
TestServeRequest	./net/rpc/server_test.go	/^func TestServeRequest(t *testing.T) {$/;"	f
TestServer	./net/http/httptest/server_test.go	/^func TestServer(t *testing.T) {$/;"	f
TestServer	./net/rpc/jsonrpc/all_test.go	/^func TestServer(t *testing.T) {$/;"	f
TestServerBufferedChunking	./net/http/serve_test.go	/^func TestServerBufferedChunking(t *testing.T) {$/;"	f
TestServerConnState	./net/http/serve_test.go	/^func TestServerConnState(t *testing.T) {$/;"	f
TestServerConnStateNew	./net/http/serve_test.go	/^func TestServerConnStateNew(t *testing.T) {$/;"	f
TestServerContentType	./net/http/sniff_test.go	/^func TestServerContentType(t *testing.T) {$/;"	f
TestServerEmptyBodyRace	./net/http/serve_test.go	/^func TestServerEmptyBodyRace(t *testing.T) {$/;"	f
TestServerEmptyMessage	./net/rpc/jsonrpc/all_test.go	/^func TestServerEmptyMessage(t *testing.T) {$/;"	f
TestServerErrorHasNullResult	./net/rpc/jsonrpc/all_test.go	/^func TestServerErrorHasNullResult(t *testing.T) {$/;"	f
TestServerExpect	./net/http/serve_test.go	/^func TestServerExpect(t *testing.T) {$/;"	f
TestServerFlushAndHijack	./net/http/serve_test.go	/^func TestServerFlushAndHijack(t *testing.T) {$/;"	f
TestServerGracefulClose	./net/http/serve_test.go	/^func TestServerGracefulClose(t *testing.T) {$/;"	f
TestServerIssue5953	./net/http/sniff_test.go	/^func TestServerIssue5953(t *testing.T) {$/;"	f
TestServerKeepAliveAfterWriteError	./net/http/serve_test.go	/^func TestServerKeepAliveAfterWriteError(t *testing.T) {$/;"	f
TestServerKeepAlivesEnabled	./net/http/serve_test.go	/^func TestServerKeepAlivesEnabled(t *testing.T) {$/;"	f
TestServerNoContentType	./net/http/serve_test.go	/^func TestServerNoContentType(t *testing.T) { testServerNoHeader(t, "Content-Type") }$/;"	f
TestServerNoDate	./net/http/serve_test.go	/^func TestServerNoDate(t *testing.T)        { testServerNoHeader(t, "Date") }$/;"	f
TestServerNoParams	./net/rpc/jsonrpc/all_test.go	/^func TestServerNoParams(t *testing.T) {$/;"	f
TestServerReaderFromOrder	./net/http/serve_test.go	/^func TestServerReaderFromOrder(t *testing.T) {$/;"	f
TestServerTimeouts	./net/http/serve_test.go	/^func TestServerTimeouts(t *testing.T) {$/;"	f
TestServerUnreadRequestBodyLarge	./net/http/serve_test.go	/^func TestServerUnreadRequestBodyLarge(t *testing.T) {$/;"	f
TestServerUnreadRequestBodyLittle	./net/http/serve_test.go	/^func TestServerUnreadRequestBodyLittle(t *testing.T) {$/;"	f
TestSet	./cmd/compile/internal/big/nat_test.go	/^func TestSet(t *testing.T) {$/;"	f
TestSet	./encoding/asn1/asn1_test.go	/^type TestSet struct {$/;"	t
TestSet	./math/big/nat_test.go	/^func TestSet(t *testing.T) {$/;"	f
TestSet	./reflect/all_test.go	/^func TestSet(t *testing.T) {$/;"	f
TestSetBasicAuth	./net/http/request_test.go	/^func TestSetBasicAuth(t *testing.T) {$/;"	f
TestSetBytes	./cmd/compile/internal/big/int_test.go	/^func TestSetBytes(t *testing.T) {$/;"	f
TestSetBytes	./math/big/int_test.go	/^func TestSetBytes(t *testing.T) {$/;"	f
TestSetBytes	./reflect/all_test.go	/^func TestSetBytes(t *testing.T) {$/;"	f
TestSetCookie	./net/http/cookie_test.go	/^func TestSetCookie(t *testing.T) {$/;"	f
TestSetCookieDoubleQuotes	./net/http/cookie_test.go	/^func TestSetCookieDoubleQuotes(t *testing.T) {$/;"	f
TestSetFloat64NonFinite	./cmd/compile/internal/big/rat_test.go	/^func TestSetFloat64NonFinite(t *testing.T) {$/;"	f
TestSetFloat64NonFinite	./math/big/rat_test.go	/^func TestSetFloat64NonFinite(t *testing.T) {$/;"	f
TestSetGCPercent	./runtime/debug/garbage_test.go	/^func TestSetGCPercent(t *testing.T) {$/;"	f
TestSetLenCap	./reflect/all_test.go	/^func TestSetLenCap(t *testing.T) {$/;"	f
TestSetOutput	./flag/flag_test.go	/^func TestSetOutput(t *testing.T) {$/;"	f
TestSetPanicOnFault	./runtime/runtime_test.go	/^func TestSetPanicOnFault(t *testing.T) {$/;"	f
TestSetString	./cmd/compile/internal/big/intconv_test.go	/^func TestSetString(t *testing.T) {$/;"	f
TestSetString	./math/big/intconv_test.go	/^func TestSetString(t *testing.T) {$/;"	f
TestSetValue	./reflect/all_test.go	/^func TestSetValue(t *testing.T) {$/;"	f
TestSetZ	./cmd/compile/internal/big/int_test.go	/^func TestSetZ(t *testing.T) {$/;"	f
TestSetZ	./math/big/int_test.go	/^func TestSetZ(t *testing.T) {$/;"	f
TestSetenvUnixEinval	./os/env_unix_test.go	/^func TestSetenvUnixEinval(t *testing.T) {$/;"	f
TestSetpgid	./syscall/exec_unix_test.go	/^func TestSetpgid(t *testing.T) {$/;"	f
TestSetsRemoteAddr	./net/http/serve_test.go	/^func TestSetsRemoteAddr(t *testing.T) {$/;"	f
TestShadowingLogic	./cmd/go/go_test.go	/^func TestShadowingLogic(t *testing.T) {$/;"	f
TestShiftLeft	./cmd/compile/internal/big/nat_test.go	/^func TestShiftLeft(t *testing.T) {$/;"	f
TestShiftLeft	./math/big/nat_test.go	/^func TestShiftLeft(t *testing.T) {$/;"	f
TestShiftRight	./cmd/compile/internal/big/nat_test.go	/^func TestShiftRight(t *testing.T) {$/;"	f
TestShiftRight	./math/big/nat_test.go	/^func TestShiftRight(t *testing.T) {$/;"	f
TestShortBlocks	./crypto/aes/aes_test.go	/^func TestShortBlocks(t *testing.T) {$/;"	f
TestShortSessionKey	./crypto/rsa/pkcs1v15_test.go	/^func TestShortSessionKey(t *testing.T) {$/;"	f
TestShouldEscape	./net/url/url_test.go	/^func TestShouldEscape(t *testing.T) {$/;"	f
TestShrinkStackDuringBlockedSend	./runtime/chan_test.go	/^func TestShrinkStackDuringBlockedSend(t *testing.T) {$/;"	f
TestShutdown	./text/template/parse/lex_test.go	/^func TestShutdown(t *testing.T) {$/;"	f
TestSideEffectOrder	./runtime/append_test.go	/^func TestSideEffectOrder(t *testing.T) {$/;"	f
TestSignAndVerify	./crypto/dsa/dsa_test.go	/^func TestSignAndVerify(t *testing.T) {$/;"	f
TestSignAndVerify	./crypto/ecdsa/ecdsa_test.go	/^func TestSignAndVerify(t *testing.T) {$/;"	f
TestSignPKCS1v15	./crypto/rsa/pkcs1v15_test.go	/^func TestSignPKCS1v15(t *testing.T) {$/;"	f
TestSignZ	./cmd/compile/internal/big/int_test.go	/^func TestSignZ(t *testing.T) {$/;"	f
TestSignZ	./math/big/int_test.go	/^func TestSignZ(t *testing.T) {$/;"	f
TestSignal	./os/signal/signal_plan9_test.go	/^func TestSignal(t *testing.T) {$/;"	f
TestSignal	./os/signal/signal_test.go	/^func TestSignal(t *testing.T) {$/;"	f
TestSignbit	./math/all_test.go	/^func TestSignbit(t *testing.T) {$/;"	f
TestSimpleDeadlock	./runtime/crash_test.go	/^func TestSimpleDeadlock(t *testing.T) {$/;"	f
TestSimpleError	./crypto/tls/handshake_server_test.go	/^func TestSimpleError(t *testing.T) {$/;"	f
TestSimpleFold	./unicode/letter_test.go	/^func TestSimpleFold(t *testing.T) {$/;"	f
TestSimpleUseOfEncodeToken	./encoding/xml/marshal_test.go	/^func TestSimpleUseOfEncodeToken(t *testing.T) {$/;"	f
TestSimplify	./regexp/syntax/simplify_test.go	/^func TestSimplify(t *testing.T) {$/;"	f
TestSimultaneousQueries	./database/sql/sql_test.go	/^func TestSimultaneousQueries(t *testing.T) {$/;"	f
TestSin	./math/all_test.go	/^func TestSin(t *testing.T) {$/;"	f
TestSin	./math/cmplx/cmath_test.go	/^func TestSin(t *testing.T) {$/;"	f
TestSincos	./math/all_test.go	/^func TestSincos(t *testing.T) {$/;"	f
TestSingleBucketMapStringKeys_DupLen	./runtime/map_test.go	/^func TestSingleBucketMapStringKeys_DupLen(t *testing.T) {$/;"	f
TestSingleBucketMapStringKeys_NoDupLen	./runtime/map_test.go	/^func TestSingleBucketMapStringKeys_NoDupLen(t *testing.T) {$/;"	f
TestSingleOpenConn	./database/sql/sql_test.go	/^func TestSingleOpenConn(t *testing.T) {$/;"	f
TestSingletons	./encoding/gob/encoder_test.go	/^func TestSingletons(t *testing.T) {$/;"	f
TestSinh	./math/all_test.go	/^func TestSinh(t *testing.T) {$/;"	f
TestSinh	./math/cmplx/cmath_test.go	/^func TestSinh(t *testing.T) {$/;"	f
TestSize	./crypto/sha1/sha1_test.go	/^func TestSize(t *testing.T) {$/;"	f
TestSize	./crypto/sha256/sha256_test.go	/^func TestSize(t *testing.T) {$/;"	f
TestSize	./crypto/sha512/sha512_test.go	/^func TestSize(t *testing.T) {$/;"	f
TestSize	./net/http/fcgi/fcgi_test.go	/^func TestSize(t *testing.T) {$/;"	f
TestSkipArrayObjects	./encoding/json/decode_test.go	/^func TestSkipArrayObjects(t *testing.T) {$/;"	f
TestSkipCSSSpace	./html/template/css_test.go	/^func TestSkipCSSSpace(t *testing.T) {$/;"	f
TestSkipInternal	./cmd/api/goapi_test.go	/^func TestSkipInternal(t *testing.T) {$/;"	f
TestSleep	./os/os_test.go	/^func TestSleep(t *testing.T) {$/;"	f
TestSleep	./time/sleep_test.go	/^func TestSleep(t *testing.T) {$/;"	f
TestSleepZeroDeadlock	./time/sleep_test.go	/^func TestSleepZeroDeadlock(t *testing.T) {$/;"	f
TestSlice	./encoding/gob/encoder_test.go	/^func TestSlice(t *testing.T) {$/;"	f
TestSlice	./reflect/all_test.go	/^func TestSlice(t *testing.T) {$/;"	f
TestSlice3	./reflect/all_test.go	/^func TestSlice3(t *testing.T) {$/;"	f
TestSliceAlias	./testing/quick/quick_test.go	/^type TestSliceAlias []byte$/;"	t
TestSliceIncompatibility	./encoding/gob/encoder_test.go	/^func TestSliceIncompatibility(t *testing.T) {$/;"	f
TestSliceOf	./reflect/all_test.go	/^func TestSliceOf(t *testing.T) {$/;"	f
TestSliceOfGC	./reflect/all_test.go	/^func TestSliceOfGC(t *testing.T) {$/;"	f
TestSliceOverflow	./reflect/all_test.go	/^func TestSliceOverflow(t *testing.T) {$/;"	f
TestSlicePrinter	./fmt/fmt_test.go	/^func TestSlicePrinter(t *testing.T) {$/;"	f
TestSliceReusesMemory	./encoding/gob/encoder_test.go	/^func TestSliceReusesMemory(t *testing.T) {$/;"	f
TestSliceRoundTrip	./encoding/binary/binary_test.go	/^func TestSliceRoundTrip(t *testing.T) {$/;"	f
TestSliceType	./encoding/gob/type_test.go	/^func TestSliceType(t *testing.T) {$/;"	f
TestSmallLitWidth	./compress/lzw/writer_test.go	/^func TestSmallLitWidth(t *testing.T) {$/;"	f
TestSmallNegativeInt	./reflect/all_test.go	/^func TestSmallNegativeInt(t *testing.T) {$/;"	f
TestSmhasherAppendedZeros	./runtime/hash_test.go	/^func TestSmhasherAppendedZeros(t *testing.T) {$/;"	f
TestSmhasherAvalanche	./runtime/hash_test.go	/^func TestSmhasherAvalanche(t *testing.T) {$/;"	f
TestSmhasherCyclic	./runtime/hash_test.go	/^func TestSmhasherCyclic(t *testing.T) {$/;"	f
TestSmhasherPermutation	./runtime/hash_test.go	/^func TestSmhasherPermutation(t *testing.T) {$/;"	f
TestSmhasherSanity	./runtime/hash_test.go	/^func TestSmhasherSanity(t *testing.T) {$/;"	f
TestSmhasherSeed	./runtime/hash_test.go	/^func TestSmhasherSeed(t *testing.T) {$/;"	f
TestSmhasherSmallKeys	./runtime/hash_test.go	/^func TestSmhasherSmallKeys(t *testing.T) {$/;"	f
TestSmhasherSparse	./runtime/hash_test.go	/^func TestSmhasherSparse(t *testing.T) {$/;"	f
TestSmhasherText	./runtime/hash_test.go	/^func TestSmhasherText(t *testing.T) {$/;"	f
TestSmhasherTwoNonzero	./runtime/hash_test.go	/^func TestSmhasherTwoNonzero(t *testing.T) {$/;"	f
TestSmhasherWindowed	./runtime/hash_test.go	/^func TestSmhasherWindowed(t *testing.T) {$/;"	f
TestSmhasherZeros	./runtime/hash_test.go	/^func TestSmhasherZeros(t *testing.T) {$/;"	f
TestSniffWriteSize	./net/http/sniff_test.go	/^func TestSniffWriteSize(t *testing.T) {$/;"	f
TestSocket	./net/internal/socktest/main_test.go	/^func TestSocket(t *testing.T) {$/;"	f
TestSortBM	./sort/sort_test.go	/^func TestSortBM(t *testing.T) {$/;"	f
TestSortByRFC6724	./net/addrselect_test.go	/^func TestSortByRFC6724(t *testing.T) {$/;"	f
TestSortFloat64Slice	./sort/sort_test.go	/^func TestSortFloat64Slice(t *testing.T) {$/;"	f
TestSortIntSlice	./sort/sort_test.go	/^func TestSortIntSlice(t *testing.T) {$/;"	f
TestSortLarge_Random	./sort/sort_test.go	/^func TestSortLarge_Random(t *testing.T) {$/;"	f
TestSortStringSlice	./sort/sort_test.go	/^func TestSortStringSlice(t *testing.T) {$/;"	f
TestSource	./go/format/format_test.go	/^func TestSource(t *testing.T) {$/;"	f
TestSourceFileNameOrderPreserved	./cmd/go/go_test.go	/^func TestSourceFileNameOrderPreserved(t *testing.T) {$/;"	f
TestSourcePos	./go/printer/printer_test.go	/^func TestSourcePos(t *testing.T) {$/;"	f
TestSpace	./bufio/scan_test.go	/^func TestSpace(t *testing.T) {$/;"	f
TestSparseEndToEnd	./archive/tar/reader_test.go	/^func TestSparseEndToEnd(t *testing.T) {$/;"	f
TestSparseFileReader	./archive/tar/reader_test.go	/^func TestSparseFileReader(t *testing.T) {$/;"	f
TestSparseIncrementalRead	./archive/tar/reader_test.go	/^func TestSparseIncrementalRead(t *testing.T) {$/;"	f
TestSpecialCase	./strings/strings_test.go	/^func TestSpecialCase(t *testing.T) {$/;"	f
TestSpecialDomainName	./net/dnsclient_unix_test.go	/^func TestSpecialDomainName(t *testing.T) {$/;"	f
TestSplit	./bytes/bytes_test.go	/^func TestSplit(t *testing.T) {$/;"	f
TestSplit	./path/filepath/path_test.go	/^func TestSplit(t *testing.T) {$/;"	f
TestSplit	./path/path_test.go	/^func TestSplit(t *testing.T) {$/;"	f
TestSplit	./regexp/all_test.go	/^func TestSplit(t *testing.T) {$/;"	f
TestSplit	./strings/strings_test.go	/^func TestSplit(t *testing.T) {$/;"	f
TestSplitAfter	./bytes/bytes_test.go	/^func TestSplitAfter(t *testing.T) {$/;"	f
TestSplitAfter	./strings/strings_test.go	/^func TestSplitAfter(t *testing.T) {$/;"	f
TestSplitError	./bufio/scan_test.go	/^func TestSplitError(t *testing.T) {$/;"	f
TestSplitHostPort	./net/ip_test.go	/^func TestSplitHostPort(t *testing.T) {$/;"	f
TestSplitList	./path/filepath/path_test.go	/^func TestSplitList(t *testing.T) {$/;"	f
TestSplitPreMasterSecret	./crypto/tls/prf_test.go	/^func TestSplitPreMasterSecret(t *testing.T) {$/;"	f
TestSprintf	./fmt/fmt_test.go	/^func TestSprintf(t *testing.T) {$/;"	f
TestSpuriousENOTAVAIL	./net/error_posix_test.go	/^func TestSpuriousENOTAVAIL(t *testing.T) {$/;"	f
TestSqrt	./math/all_test.go	/^func TestSqrt(t *testing.T) {$/;"	f
TestSqrt	./math/cmplx/cmath_test.go	/^func TestSqrt(t *testing.T) {$/;"	f
TestSqrt	./runtime/sqrt_test.go	/^func TestSqrt(t *testing.T) {$/;"	f
TestStability	./sort/sort_test.go	/^func TestStability(t *testing.T) {$/;"	f
TestStableBM	./sort/sort_test.go	/^func TestStableBM(t *testing.T) {$/;"	f
TestStableInts	./sort/sort_test.go	/^func TestStableInts(t *testing.T) {$/;"	f
TestStack	./runtime/debug/stack_test.go	/^func TestStack(t *testing.T) {$/;"	f
TestStackAllOutput	./runtime/stack_test.go	/^func TestStackAllOutput(t *testing.T) {$/;"	f
TestStackCache	./runtime/stack_test.go	/^func TestStackCache(t *testing.T) {$/;"	f
TestStackGrowth	./runtime/stack_test.go	/^func TestStackGrowth(t *testing.T) {$/;"	f
TestStackGrowthCallback	./runtime/stack_test.go	/^func TestStackGrowthCallback(t *testing.T) {$/;"	f
TestStackMem	./runtime/stack_test.go	/^func TestStackMem(t *testing.T) {$/;"	f
TestStackOutput	./runtime/stack_test.go	/^func TestStackOutput(t *testing.T) {$/;"	f
TestStackOverflow	./runtime/crash_test.go	/^func TestStackOverflow(t *testing.T) {$/;"	f
TestStackPanic	./runtime/stack_test.go	/^func TestStackPanic(t *testing.T) {$/;"	f
TestStandardExponentialValues	./math/rand/rand_test.go	/^func TestStandardExponentialValues(t *testing.T) {$/;"	f
TestStandardNormalValues	./math/rand/rand_test.go	/^func TestStandardNormalValues(t *testing.T) {$/;"	f
TestStarRequest	./net/http/request_test.go	/^func TestStarRequest(t *testing.T) {$/;"	f
TestStarRequest	./net/url/url_test.go	/^func TestStarRequest(t *testing.T) {$/;"	f
TestStartProcess	./os/os_test.go	/^func TestStartProcess(t *testing.T) {$/;"	f
TestStartProcessAttr	./os/os_windows_test.go	/^func TestStartProcessAttr(t *testing.T) {$/;"	f
TestStat	./os/os_test.go	/^func TestStat(t *testing.T) {$/;"	f
TestStatDirModeExec	./os/os_test.go	/^func TestStatDirModeExec(t *testing.T) {$/;"	f
TestStatDirWithTrailingSlash	./os/os_test.go	/^func TestStatDirWithTrailingSlash(t *testing.T) {$/;"	f
TestStatJunctionLink	./os/os_windows_test.go	/^func TestStatJunctionLink(t *testing.T) {$/;"	f
TestStatementErrorAfterClose	./database/sql/sql_test.go	/^func TestStatementErrorAfterClose(t *testing.T) {$/;"	f
TestStatementQueryRow	./database/sql/sql_test.go	/^func TestStatementQueryRow(t *testing.T) {$/;"	f
TestStatementQueryRowConcurrent	./database/sql/sql_test.go	/^func TestStatementQueryRowConcurrent(t *testing.T) {$/;"	f
TestStats	./database/sql/sql_test.go	/^func TestStats(t *testing.T) {$/;"	f
TestStdCall	./runtime/syscall_windows_test.go	/^func TestStdCall(t *testing.T) {$/;"	f
TestStdErrorHander	./go/scanner/scanner_test.go	/^func TestStdErrorHander(t *testing.T) {$/;"	f
TestStdFixed	./go/types/stdlib_test.go	/^func TestStdFixed(t *testing.T) {$/;"	f
TestStdKen	./go/types/stdlib_test.go	/^func TestStdKen(t *testing.T) {$/;"	f
TestStdTest	./go/types/stdlib_test.go	/^func TestStdTest(t *testing.T) {$/;"	f
TestStdcallAndCDeclCallbacks	./runtime/syscall_windows_test.go	/^func TestStdcallAndCDeclCallbacks(t *testing.T) {$/;"	f
TestStdinClose	./os/exec/exec_test.go	/^func TestStdinClose(t *testing.T) {$/;"	f
TestStdlib	./go/types/stdlib_test.go	/^func TestStdlib(t *testing.T) {$/;"	f
TestSticky	./cmd/compile/internal/big/nat_test.go	/^func TestSticky(t *testing.T) {$/;"	f
TestSticky	./math/big/nat_test.go	/^func TestSticky(t *testing.T) {$/;"	f
TestStmtCloseDeps	./database/sql/sql_test.go	/^func TestStmtCloseDeps(t *testing.T) {$/;"	f
TestStmtCloseOrder	./database/sql/sql_test.go	/^func TestStmtCloseOrder(t *testing.T) {$/;"	f
TestStmtLists	./go/printer/printer_test.go	/^func TestStmtLists(t *testing.T) {$/;"	f
TestStop	./os/signal/signal_plan9_test.go	/^func TestStop(t *testing.T) {$/;"	f
TestStop	./os/signal/signal_test.go	/^func TestStop(t *testing.T) {$/;"	f
TestStopCPUProfilingWithProfilerOff	./runtime/runtime_test.go	/^func TestStopCPUProfilingWithProfilerOff(t *testing.T) {$/;"	f
TestStopTheWorldDeadlock	./runtime/proc_test.go	/^func TestStopTheWorldDeadlock(t *testing.T) {$/;"	f
TestStoreInt32	./sync/atomic/atomic_test.go	/^func TestStoreInt32(t *testing.T) {$/;"	f
TestStoreInt64	./sync/atomic/atomic_test.go	/^func TestStoreInt64(t *testing.T) {$/;"	f
TestStoreLoadRelAcq32	./sync/atomic/atomic_test.go	/^func TestStoreLoadRelAcq32(t *testing.T) {$/;"	f
TestStoreLoadRelAcq64	./sync/atomic/atomic_test.go	/^func TestStoreLoadRelAcq64(t *testing.T) {$/;"	f
TestStoreLoadSeqCst32	./sync/atomic/atomic_test.go	/^func TestStoreLoadSeqCst32(t *testing.T) {$/;"	f
TestStoreLoadSeqCst64	./sync/atomic/atomic_test.go	/^func TestStoreLoadSeqCst64(t *testing.T) {$/;"	f
TestStorePointer	./sync/atomic/atomic_test.go	/^func TestStorePointer(t *testing.T) {$/;"	f
TestStoreUint32	./sync/atomic/atomic_test.go	/^func TestStoreUint32(t *testing.T) {$/;"	f
TestStoreUint64	./sync/atomic/atomic_test.go	/^func TestStoreUint64(t *testing.T) {$/;"	f
TestStoreUintptr	./sync/atomic/atomic_test.go	/^func TestStoreUintptr(t *testing.T) {$/;"	f
TestStreamingGet	./net/http/client_test.go	/^func TestStreamingGet(t *testing.T) {$/;"	f
TestStreams	./compress/flate/flate_test.go	/^func TestStreams(t *testing.T) {$/;"	f
TestStreams	./net/http/fcgi/fcgi_test.go	/^func TestStreams(t *testing.T) {$/;"	f
TestStress	./os/signal/signal_plan9_test.go	/^func TestStress(t *testing.T) {$/;"	f
TestStress	./os/signal/signal_test.go	/^func TestStress(t *testing.T) {$/;"	f
TestStressParallel	./encoding/gob/type_test.go	/^func TestStressParallel(t *testing.T) {$/;"	f
TestStressSurpriseServerCloses	./net/http/transport_test.go	/^func TestStressSurpriseServerCloses(t *testing.T) {$/;"	f
TestString	./cmd/compile/internal/big/natconv_test.go	/^func TestString(t *testing.T) {$/;"	f
TestString	./expvar/expvar_test.go	/^func TestString(t *testing.T) {$/;"	f
TestString	./math/big/natconv_test.go	/^func TestString(t *testing.T) {$/;"	f
TestStringAlias	./testing/quick/quick_test.go	/^type TestStringAlias string$/;"	t
TestStringBytes	./encoding/json/encode_test.go	/^func TestStringBytes(t *testing.T) {$/;"	f
TestStringConcatenationAllocs	./runtime/malloc_test.go	/^func TestStringConcatenationAllocs(t *testing.T) {$/;"	f
TestStringKind	./encoding/json/decode_test.go	/^func TestStringKind(t *testing.T) {$/;"	f
TestStringOnStack	./runtime/string_test.go	/^func TestStringOnStack(t *testing.T) {$/;"	f
TestStringPowers	./cmd/compile/internal/big/natconv_test.go	/^func TestStringPowers(t *testing.T) {$/;"	f
TestStringPowers	./math/big/natconv_test.go	/^func TestStringPowers(t *testing.T) {$/;"	f
TestStringSlice	./encoding/asn1/asn1_test.go	/^func TestStringSlice(t *testing.T) {$/;"	f
TestStringTag	./encoding/json/encode_test.go	/^func TestStringTag(t *testing.T) {$/;"	f
TestStringW	./runtime/string_test.go	/^func TestStringW(t *testing.T) {$/;"	f
TestStringer	./fmt/stringer_test.go	/^func TestStringer(t *testing.T) {$/;"	f
TestStringer	./html/template/content_test.go	/^func TestStringer(t *testing.T) {$/;"	f
TestStrings	./sort/sort_test.go	/^func TestStrings(t *testing.T) {$/;"	f
TestStripPrefix	./net/http/serve_test.go	/^func TestStripPrefix(t *testing.T) {$/;"	f
TestStripTags	./html/template/html_test.go	/^func TestStripTags(t *testing.T) {$/;"	f
TestStruct	./testing/quick/quick_test.go	/^type TestStruct struct {$/;"	t
TestStructAlias	./testing/quick/quick_test.go	/^type TestStructAlias TestStruct$/;"	t
TestStructArg	./reflect/all_test.go	/^func TestStructArg(t *testing.T) {$/;"	f
TestStructNonStruct	./encoding/gob/encoder_test.go	/^func TestStructNonStruct(t *testing.T) {$/;"	f
TestStructPointerMarshal	./encoding/xml/marshal_test.go	/^func TestStructPointerMarshal(t *testing.T) {$/;"	f
TestStructPrinter	./fmt/fmt_test.go	/^func TestStructPrinter(t *testing.T) {$/;"	f
TestStructTagObjectKey	./encoding/json/tagkey_test.go	/^func TestStructTagObjectKey(t *testing.T) {$/;"	f
TestStructType	./encoding/gob/type_test.go	/^func TestStructType(t *testing.T) {$/;"	f
TestSub	./time/time_test.go	/^func TestSub(t *testing.T) {$/;"	f
TestSubImage	./image/gif/writer_test.go	/^func TestSubImage(t *testing.T) {$/;"	f
TestSubImage	./image/png/writer_test.go	/^func TestSubImage(t *testing.T) {$/;"	f
TestSubexp	./regexp/all_test.go	/^func TestSubexp(t *testing.T) {$/;"	f
TestSubstitutionTableKnownAnswerDecrypt	./crypto/des/des_test.go	/^func TestSubstitutionTableKnownAnswerDecrypt(t *testing.T) {$/;"	f
TestSubstitutionTableKnownAnswerEncrypt	./crypto/des/des_test.go	/^func TestSubstitutionTableKnownAnswerEncrypt(t *testing.T) {$/;"	f
TestSumZZ	./cmd/compile/internal/big/int_test.go	/^func TestSumZZ(t *testing.T) {$/;"	f
TestSumZZ	./math/big/int_test.go	/^func TestSumZZ(t *testing.T) {$/;"	f
TestSwapInt32	./sync/atomic/atomic_test.go	/^func TestSwapInt32(t *testing.T) {$/;"	f
TestSwapInt64	./sync/atomic/atomic_test.go	/^func TestSwapInt64(t *testing.T) {$/;"	f
TestSwapPointer	./sync/atomic/atomic_test.go	/^func TestSwapPointer(t *testing.T) {$/;"	f
TestSwapUint32	./sync/atomic/atomic_test.go	/^func TestSwapUint32(t *testing.T) {$/;"	f
TestSwapUint64	./sync/atomic/atomic_test.go	/^func TestSwapUint64(t *testing.T) {$/;"	f
TestSwapUintptr	./sync/atomic/atomic_test.go	/^func TestSwapUintptr(t *testing.T) {$/;"	f
TestSwitch	./net/internal/socktest/main_test.go	/^func TestSwitch(t *testing.T) {$/;"	f
TestSwitchBacktrack	./regexp/all_test.go	/^func TestSwitchBacktrack(t *testing.T) {$/;"	f
TestSymbols	./debug/elf/symbols_test.go	/^func TestSymbols(t *testing.T) {$/;"	f
TestSymlink	./os/os_test.go	/^func TestSymlink(t *testing.T) {$/;"	f
TestSymlinksDoNotConfuseGoList	./cmd/go/go_test.go	/^func TestSymlinksDoNotConfuseGoList(t *testing.T) {$/;"	f
TestSynopsis	./go/doc/synopsis_test.go	/^func TestSynopsis(t *testing.T) {$/;"	f
TestSyntax	./encoding/xml/xml_test.go	/^func TestSyntax(t *testing.T) {$/;"	f
TestSyntaxErrorLineNum	./encoding/xml/xml_test.go	/^func TestSyntaxErrorLineNum(t *testing.T) {$/;"	f
TestSystemConf	./net/conf_test.go	/^func TestSystemConf(t *testing.T) {$/;"	f
TestSystemRoots	./crypto/x509/root_darwin_test.go	/^func TestSystemRoots(t *testing.T) {$/;"	f
TestSystemVerify	./crypto/x509/verify_test.go	/^func TestSystemVerify(t *testing.T) {$/;"	f
TestTCPClose	./net/rpc/server_test.go	/^func TestTCPClose(t *testing.T) {$/;"	f
TestTCPConcurrentAccept	./net/tcp_test.go	/^func TestTCPConcurrentAccept(t *testing.T) {$/;"	f
TestTCPConnSpecificMethods	./net/protoconn_test.go	/^func TestTCPConnSpecificMethods(t *testing.T) {$/;"	f
TestTCPListener	./net/listen_test.go	/^func TestTCPListener(t *testing.T) {$/;"	f
TestTCPListenerName	./net/tcp_test.go	/^func TestTCPListenerName(t *testing.T) {$/;"	f
TestTCPListenerSpecificMethods	./net/protoconn_test.go	/^func TestTCPListenerSpecificMethods(t *testing.T) {$/;"	f
TestTCPReadWriteAllocs	./net/tcp_test.go	/^func TestTCPReadWriteAllocs(t *testing.T) {$/;"	f
TestTCPServer	./net/server_test.go	/^func TestTCPServer(t *testing.T) {$/;"	f
TestTCPStress	./net/tcp_test.go	/^func TestTCPStress(t *testing.T) {$/;"	f
TestTLS12OnlyCipherSuites	./crypto/tls/handshake_server_test.go	/^func TestTLS12OnlyCipherSuites(t *testing.T) {$/;"	f
TestTLSClient	./net/smtp/smtp_test.go	/^func TestTLSClient(t *testing.T) {$/;"	f
TestTLSConnState	./net/smtp/smtp_test.go	/^func TestTLSConnState(t *testing.T) {$/;"	f
TestTLSHandshakeTimeout	./net/http/serve_test.go	/^func TestTLSHandshakeTimeout(t *testing.T) {$/;"	f
TestTLSServer	./net/http/serve_test.go	/^func TestTLSServer(t *testing.T) {$/;"	f
TestTLSServerClosesConnection	./net/http/transport_test.go	/^func TestTLSServerClosesConnection(t *testing.T) {$/;"	f
TestTLSUniqueMatches	./crypto/tls/tls_test.go	/^func TestTLSUniqueMatches(t *testing.T) {$/;"	f
TestTableOfContents	./cmd/pack/pack_test.go	/^func TestTableOfContents(t *testing.T) {$/;"	f
TestTagGet	./reflect/all_test.go	/^func TestTagGet(t *testing.T) {$/;"	f
TestTagParsing	./encoding/json/tags_test.go	/^func TestTagParsing(t *testing.T) {$/;"	f
TestTaggedFieldDominates	./encoding/json/encode_test.go	/^func TestTaggedFieldDominates(t *testing.T) {$/;"	f
TestTags	./cmd/vet/vet_test.go	/^func TestTags(t *testing.T) {$/;"	f
TestTan	./math/all_test.go	/^func TestTan(t *testing.T) {$/;"	f
TestTan	./math/cmplx/cmath_test.go	/^func TestTan(t *testing.T) {$/;"	f
TestTanh	./math/all_test.go	/^func TestTanh(t *testing.T) {$/;"	f
TestTanh	./math/cmplx/cmath_test.go	/^func TestTanh(t *testing.T) {$/;"	f
TestTd	./crypto/aes/aes_test.go	/^func TestTd(t *testing.T) {$/;"	f
TestTe	./crypto/aes/aes_test.go	/^func TestTe(t *testing.T) {$/;"	f
TestTeardown	./time/tick_test.go	/^func TestTeardown(t *testing.T) {$/;"	f
TestTeeReader	./io/io_test.go	/^func TestTeeReader(t *testing.T) {$/;"	f
TestTempDir	./io/ioutil/tempfile_test.go	/^func TestTempDir(t *testing.T) {$/;"	f
TestTempFile	./io/ioutil/tempfile_test.go	/^func TestTempFile(t *testing.T) {$/;"	f
TestTemplateLookUp	./text/template/multi_test.go	/^func TestTemplateLookUp(t *testing.T) {$/;"	f
TestTemplates	./html/template/clone_test.go	/^func TestTemplates(t *testing.T) {$/;"	f
TestThreadExhaustion	./runtime/crash_test.go	/^func TestThreadExhaustion(t *testing.T) {$/;"	f
TestThree	./encoding/xml/read_test.go	/^type TestThree struct {$/;"	t
TestTick	./time/tick_test.go	/^func TestTick(t *testing.T) {$/;"	f
TestTicker	./time/tick_test.go	/^func TestTicker(t *testing.T) {$/;"	f
TestTimeConsuming	./testing/testing.go	/^\/\/     func TestTimeConsuming(t *testing.T) {$/;"	f
TestTimeGob	./time/time_test.go	/^func TestTimeGob(t *testing.T) {$/;"	f
TestTimeJSON	./time/time_test.go	/^func TestTimeJSON(t *testing.T) {$/;"	f
TestTimeoutHandler	./net/http/serve_test.go	/^func TestTimeoutHandler(t *testing.T) {$/;"	f
TestTimeoutHandlerRace	./net/http/serve_test.go	/^func TestTimeoutHandlerRace(t *testing.T) {$/;"	f
TestTimeoutHandlerRaceHeader	./net/http/serve_test.go	/^func TestTimeoutHandlerRaceHeader(t *testing.T) {$/;"	f
TestTimerFairness	./runtime/proc_test.go	/^func TestTimerFairness(t *testing.T) {$/;"	f
TestTimerFairness2	./runtime/proc_test.go	/^func TestTimerFairness2(t *testing.T) {$/;"	f
TestTimerStopStress	./time/sleep_test.go	/^func TestTimerStopStress(t *testing.T) {$/;"	f
TestTitle	./bytes/bytes_test.go	/^func TestTitle(t *testing.T) {$/;"	f
TestTitle	./strings/strings_test.go	/^func TestTitle(t *testing.T) {$/;"	f
TestTo	./unicode/letter_test.go	/^func TestTo(t *testing.T) {$/;"	f
TestToEnglishName	./time/zoneinfo_windows_test.go	/^func TestToEnglishName(t *testing.T) {$/;"	f
TestToFromBig	./crypto/elliptic/p224_test.go	/^func TestToFromBig(t *testing.T) {$/;"	f
TestToLower	./bytes/bytes_test.go	/^func TestToLower(t *testing.T) { runStringTests(t, ToLower, "ToLower", lowerTests) }$/;"	f
TestToLower	./strings/strings_test.go	/^func TestToLower(t *testing.T) { runStringTests(t, ToLower, "ToLower", lowerTests) }$/;"	f
TestToLowerCase	./unicode/letter_test.go	/^func TestToLowerCase(t *testing.T) {$/;"	f
TestToStringEquivalentParse	./regexp/syntax/parse_test.go	/^func TestToStringEquivalentParse(t *testing.T) {$/;"	f
TestToText	./go/doc/comment_test.go	/^func TestToText(t *testing.T) {$/;"	f
TestToTitle	./bytes/bytes_test.go	/^func TestToTitle(t *testing.T) {$/;"	f
TestToTitleCase	./unicode/letter_test.go	/^func TestToTitleCase(t *testing.T) {$/;"	f
TestToUpper	./bytes/bytes_test.go	/^func TestToUpper(t *testing.T) { runStringTests(t, ToUpper, "ToUpper", upperTests) }$/;"	f
TestToUpper	./strings/strings_test.go	/^func TestToUpper(t *testing.T) { runStringTests(t, ToUpper, "ToUpper", upperTests) }$/;"	f
TestToUpperCase	./unicode/letter_test.go	/^func TestToUpperCase(t *testing.T) {$/;"	f
TestToken	./encoding/xml/xml_test.go	/^func TestToken(t *testing.T) {$/;"	f
TestTolerateCRLFBeforeRequestLine	./net/http/serve_test.go	/^func TestTolerateCRLFBeforeRequestLine(t *testing.T) {$/;"	f
TestTopLevelNilPointer	./encoding/gob/encoder_test.go	/^func TestTopLevelNilPointer(t *testing.T) {$/;"	f
TestTrace	./runtime/trace/trace_test.go	/^func TestTrace(t *testing.T) {$/;"	f
TestTraceDoubleStart	./runtime/trace/trace_test.go	/^func TestTraceDoubleStart(t *testing.T) {$/;"	f
TestTraceFutileWakeup	./runtime/trace/trace_test.go	/^func TestTraceFutileWakeup(t *testing.T) {$/;"	f
TestTraceStartStop	./runtime/trace/trace_test.go	/^func TestTraceStartStop(t *testing.T) {$/;"	f
TestTraceStress	./runtime/trace/trace_test.go	/^func TestTraceStress(t *testing.T) {$/;"	f
TestTraceStressStartStop	./runtime/trace/trace_test.go	/^func TestTraceStressStartStop(t *testing.T) {$/;"	f
TestTraceSymbolize	./runtime/trace/trace_stack_test.go	/^func TestTraceSymbolize(t *testing.T) {$/;"	f
TestTrailingRawToken	./encoding/xml/xml_test.go	/^func TestTrailingRawToken(t *testing.T) {$/;"	f
TestTrailingToken	./encoding/xml/xml_test.go	/^func TestTrailingToken(t *testing.T) {$/;"	f
TestTrailingZero	./runtime/runtime_test.go	/^func TestTrailingZero(t *testing.T) {$/;"	f
TestTrailingZeroBits	./cmd/compile/internal/big/nat_test.go	/^func TestTrailingZeroBits(t *testing.T) {$/;"	f
TestTrailingZeroBits	./math/big/nat_test.go	/^func TestTrailingZeroBits(t *testing.T) {$/;"	f
TestTransparentIndex	./image/gif/reader_test.go	/^func TestTransparentIndex(t *testing.T) {$/;"	f
TestTransportAltProto	./net/http/transport_test.go	/^func TestTransportAltProto(t *testing.T) {$/;"	f
TestTransportAndServerSharedBodyRace	./net/http/serve_test.go	/^func TestTransportAndServerSharedBodyRace(t *testing.T) {$/;"	f
TestTransportCancelBeforeResponseHeaders	./net/http/transport_test.go	/^func TestTransportCancelBeforeResponseHeaders(t *testing.T) {$/;"	f
TestTransportCancelRequest	./net/http/transport_test.go	/^func TestTransportCancelRequest(t *testing.T) {$/;"	f
TestTransportCancelRequestInDial	./net/http/transport_test.go	/^func TestTransportCancelRequestInDial(t *testing.T) {$/;"	f
TestTransportCloseIdleConnsThenReturn	./net/http/transport_test.go	/^func TestTransportCloseIdleConnsThenReturn(t *testing.T) {$/;"	f
TestTransportCloseResponseBody	./net/http/transport_test.go	/^func TestTransportCloseResponseBody(t *testing.T) {$/;"	f
TestTransportClosesBodyOnError	./net/http/transport_test.go	/^func TestTransportClosesBodyOnError(t *testing.T) {$/;"	f
TestTransportClosesRequestBody	./net/http/transport_test.go	/^func TestTransportClosesRequestBody(t *testing.T) {$/;"	f
TestTransportConcurrency	./net/http/transport_test.go	/^func TestTransportConcurrency(t *testing.T) {$/;"	f
TestTransportConnectionCloseOnRequest	./net/http/transport_test.go	/^func TestTransportConnectionCloseOnRequest(t *testing.T) {$/;"	f
TestTransportConnectionCloseOnRequestDisableKeepAlive	./net/http/transport_test.go	/^func TestTransportConnectionCloseOnRequestDisableKeepAlive(t *testing.T) {$/;"	f
TestTransportConnectionCloseOnResponse	./net/http/transport_test.go	/^func TestTransportConnectionCloseOnResponse(t *testing.T) {$/;"	f
TestTransportDialCancelRace	./net/http/transport_test.go	/^func TestTransportDialCancelRace(t *testing.T) {$/;"	f
TestTransportDialTLS	./net/http/transport_test.go	/^func TestTransportDialTLS(t *testing.T) {$/;"	f
TestTransportFlushesBodyChunks	./net/http/transport_test.go	/^func TestTransportFlushesBodyChunks(t *testing.T) {$/;"	f
TestTransportGzip	./net/http/transport_test.go	/^func TestTransportGzip(t *testing.T) {$/;"	f
TestTransportGzipRecursive	./net/http/transport_test.go	/^func TestTransportGzipRecursive(t *testing.T) {$/;"	f
TestTransportGzipShort	./net/http/transport_test.go	/^func TestTransportGzipShort(t *testing.T) {$/;"	f
TestTransportHeadChunkedResponse	./net/http/transport_test.go	/^func TestTransportHeadChunkedResponse(t *testing.T) {$/;"	f
TestTransportHeadResponses	./net/http/transport_test.go	/^func TestTransportHeadResponses(t *testing.T) {$/;"	f
TestTransportIdleCacheKeys	./net/http/transport_test.go	/^func TestTransportIdleCacheKeys(t *testing.T) {$/;"	f
TestTransportIdleConnCrash	./net/http/transport_test.go	/^func TestTransportIdleConnCrash(t *testing.T) {$/;"	f
TestTransportIssue10457	./net/http/transport_test.go	/^func TestTransportIssue10457(t *testing.T) {$/;"	f
TestTransportKeepAlives	./net/http/transport_test.go	/^func TestTransportKeepAlives(t *testing.T) {$/;"	f
TestTransportMaxPerHostIdleConns	./net/http/transport_test.go	/^func TestTransportMaxPerHostIdleConns(t *testing.T) {$/;"	f
TestTransportNoHost	./net/http/transport_test.go	/^func TestTransportNoHost(t *testing.T) {$/;"	f
TestTransportNoReuseAfterEarlyResponse	./net/http/transport_test.go	/^func TestTransportNoReuseAfterEarlyResponse(t *testing.T) {$/;"	f
TestTransportPersistConnLeak	./net/http/transport_test.go	/^func TestTransportPersistConnLeak(t *testing.T) {$/;"	f
TestTransportPersistConnLeakShortBody	./net/http/transport_test.go	/^func TestTransportPersistConnLeakShortBody(t *testing.T) {$/;"	f
TestTransportPrefersResponseOverWriteError	./net/http/transport_test.go	/^func TestTransportPrefersResponseOverWriteError(t *testing.T) {$/;"	f
TestTransportProxy	./net/http/transport_test.go	/^func TestTransportProxy(t *testing.T) {$/;"	f
TestTransportRangeAndGzip	./net/http/transport_test.go	/^func TestTransportRangeAndGzip(t *testing.T) {$/;"	f
TestTransportReadToEndReusesConn	./net/http/transport_test.go	/^func TestTransportReadToEndReusesConn(t *testing.T) {$/;"	f
TestTransportReading100Continue	./net/http/transport_test.go	/^func TestTransportReading100Continue(t *testing.T) {$/;"	f
TestTransportResponseCancelRace	./net/http/transport_test.go	/^func TestTransportResponseCancelRace(t *testing.T) {$/;"	f
TestTransportResponseCloseRace	./net/http/transport_test.go	/^func TestTransportResponseCloseRace(t *testing.T) {$/;"	f
TestTransportResponseHeaderTimeout	./net/http/transport_test.go	/^func TestTransportResponseHeaderTimeout(t *testing.T) {$/;"	f
TestTransportServerClosingUnexpectedly	./net/http/transport_test.go	/^func TestTransportServerClosingUnexpectedly(t *testing.T) {$/;"	f
TestTransportSocketLateBinding	./net/http/transport_test.go	/^func TestTransportSocketLateBinding(t *testing.T) {$/;"	f
TestTransportTLSHandshakeTimeout	./net/http/transport_test.go	/^func TestTransportTLSHandshakeTimeout(t *testing.T) {$/;"	f
TestTransportUsesTLSConfigServerName	./net/http/client_test.go	/^func TestTransportUsesTLSConfigServerName(t *testing.T) {$/;"	f
TestTree	./text/template/exec_test.go	/^func TestTree(t *testing.T) {$/;"	f
TestTrim	./bytes/bytes_test.go	/^func TestTrim(t *testing.T) {$/;"	f
TestTrim	./strings/strings_test.go	/^func TestTrim(t *testing.T) {$/;"	f
TestTrimFunc	./bytes/bytes_test.go	/^func TestTrimFunc(t *testing.T) {$/;"	f
TestTrimFunc	./strings/strings_test.go	/^func TestTrimFunc(t *testing.T) {$/;"	f
TestTrimSpace	./bytes/bytes_test.go	/^func TestTrimSpace(t *testing.T) { runStringTests(t, TrimSpace, "TrimSpace", trimSpaceTests) }$/;"	f
TestTrimSpace	./strings/strings_test.go	/^func TestTrimSpace(t *testing.T) { runStringTests(t, TrimSpace, "TrimSpace", trimSpaceTests) }$/;"	f
TestTrunc	./math/all_test.go	/^func TestTrunc(t *testing.T) {$/;"	f
TestTruncate	./os/os_test.go	/^func TestTruncate(t *testing.T) {$/;"	f
TestTruncateRound	./time/time_test.go	/^func TestTruncateRound(t *testing.T) {$/;"	f
TestTruncatedExplicitTag	./encoding/asn1/asn1_test.go	/^func TestTruncatedExplicitTag(t *testing.T) {$/;"	f
TestTruncatedSOSDataDoesntPanic	./image/jpeg/reader_test.go	/^func TestTruncatedSOSDataDoesntPanic(t *testing.T) {$/;"	f
TestTurkishCase	./unicode/letter_test.go	/^func TestTurkishCase(t *testing.T) {$/;"	f
TestTxErrBadConn	./database/sql/sql_test.go	/^func TestTxErrBadConn(t *testing.T) {$/;"	f
TestTxPrepare	./database/sql/sql_test.go	/^func TestTxPrepare(t *testing.T) {$/;"	f
TestTxQuery	./database/sql/sql_test.go	/^func TestTxQuery(t *testing.T) {$/;"	f
TestTxQueryInvalid	./database/sql/sql_test.go	/^func TestTxQueryInvalid(t *testing.T) {$/;"	f
TestTxStmt	./database/sql/sql_test.go	/^func TestTxStmt(t *testing.T) {$/;"	f
TestTypeByExtension	./mime/type_test.go	/^func TestTypeByExtension(t *testing.T) {$/;"	f
TestTypeByExtensionCase	./mime/type_test.go	/^func TestTypeByExtensionCase(t *testing.T) {$/;"	f
TestTypeByExtension_LocalData	./mime/type_test.go	/^func TestTypeByExtension_LocalData(t *testing.T) {$/;"	f
TestTypeOf	./reflect/all_test.go	/^func TestTypeOf(t *testing.T) {$/;"	f
TestTypeOfTypeOf	./reflect/all_test.go	/^func TestTypeOfTypeOf(t *testing.T) {$/;"	f
TestTypeParser	./go/internal/gccgoimporter/parser_test.go	/^func TestTypeParser(t *testing.T) {$/;"	f
TestTypeString	./go/types/typestring_test.go	/^func TestTypeString(t *testing.T) {$/;"	f
TestTypeToPtrPtrPtrPtrType	./encoding/gob/encoder_test.go	/^func TestTypeToPtrPtrPtrPtrType(t *testing.T) {$/;"	f
TestTypeToPtrType	./encoding/gob/encoder_test.go	/^func TestTypeToPtrType(t *testing.T) {$/;"	f
TestTypedContent	./html/template/content_test.go	/^func TestTypedContent(t *testing.T) {$/;"	f
TestTypedefsELF	./debug/dwarf/type_test.go	/^func TestTypedefsELF(t *testing.T) { testTypedefs(t, elfData(t, "testdata\/typedef.elf"), "elf") }$/;"	f
TestTypedefsELFDwarf4	./debug/dwarf/type_test.go	/^func TestTypedefsELFDwarf4(t *testing.T) { testTypedefs(t, elfData(t, "testdata\/typedef.elf4"), "elf") }$/;"	f
TestTypedefsMachO	./debug/dwarf/type_test.go	/^func TestTypedefsMachO(t *testing.T) {$/;"	f
TestTypelinksSorted	./reflect/all_test.go	/^func TestTypelinksSorted(t *testing.T) {$/;"	f
TestTypes	./reflect/all_test.go	/^func TestTypes(t *testing.T) {$/;"	f
TestTypesInfo	./go/types/api_test.go	/^func TestTypesInfo(t *testing.T) {$/;"	f
TestUDPConnLocalAndRemoteNames	./net/udp_test.go	/^func TestUDPConnLocalAndRemoteNames(t *testing.T) {$/;"	f
TestUDPConnLocalName	./net/udp_test.go	/^func TestUDPConnLocalName(t *testing.T) {$/;"	f
TestUDPConnSpecificMethods	./net/protoconn_test.go	/^func TestUDPConnSpecificMethods(t *testing.T) {$/;"	f
TestUDPListener	./net/listen_test.go	/^func TestUDPListener(t *testing.T) {$/;"	f
TestUDPServer	./net/server_test.go	/^func TestUDPServer(t *testing.T) {$/;"	f
TestUDPZeroByteBuffer	./net/udp_test.go	/^func TestUDPZeroByteBuffer(t *testing.T) {$/;"	f
TestUDPZeroBytePayload	./net/udp_test.go	/^func TestUDPZeroBytePayload(t *testing.T) {$/;"	f
TestURLFilters	./html/template/url_test.go	/^func TestURLFilters(t *testing.T) {$/;"	f
TestURLNormalizer	./html/template/url_test.go	/^func TestURLNormalizer(t *testing.T) {$/;"	f
TestURLString	./net/url/url_test.go	/^func TestURLString(t *testing.T) {$/;"	f
TestUSTARLongName	./archive/tar/writer_test.go	/^func TestUSTARLongName(t *testing.T) {$/;"	f
TestUTCFlag	./log/log_test.go	/^func TestUTCFlag(t *testing.T) {$/;"	f
TestUTCTime	./encoding/asn1/asn1_test.go	/^func TestUTCTime(t *testing.T) {$/;"	f
TestUint16Alias	./testing/quick/quick_test.go	/^type TestUint16Alias uint16$/;"	t
TestUint32Alias	./testing/quick/quick_test.go	/^type TestUint32Alias uint32$/;"	t
TestUint64	./cmd/compile/internal/big/int_test.go	/^func TestUint64(t *testing.T) {$/;"	f
TestUint64	./math/big/int_test.go	/^func TestUint64(t *testing.T) {$/;"	f
TestUint64Alias	./testing/quick/quick_test.go	/^type TestUint64Alias uint64$/;"	t
TestUint8Alias	./testing/quick/quick_test.go	/^type TestUint8Alias uint8$/;"	t
TestUintAlias	./testing/quick/quick_test.go	/^type TestUintAlias uint$/;"	t
TestUintCodec	./encoding/gob/codec_test.go	/^func TestUintCodec(t *testing.T) {$/;"	f
TestUintptrAlias	./testing/quick/quick_test.go	/^type TestUintptrAlias uintptr$/;"	t
TestUitoa	./strconv/itoa_test.go	/^func TestUitoa(t *testing.T) {$/;"	f
TestUnaligned64	./sync/atomic/atomic_test.go	/^func TestUnaligned64(t *testing.T) {$/;"	f
TestUnescape	./html/escape_test.go	/^func TestUnescape(t *testing.T) {$/;"	f
TestUnescape	./net/url/url_test.go	/^func TestUnescape(t *testing.T) {$/;"	f
TestUnescapeEscape	./html/escape_test.go	/^func TestUnescapeEscape(t *testing.T) {$/;"	f
TestUnexpectedError	./net/rpc/jsonrpc/all_test.go	/^func TestUnexpectedError(t *testing.T) {$/;"	f
TestUnexported	./reflect/all_test.go	/^func TestUnexported(t *testing.T) {$/;"	f
TestUnexportedFields	./encoding/gob/codec_test.go	/^func TestUnexportedFields(t *testing.T) {$/;"	f
TestUnexportedRead	./encoding/binary/binary_test.go	/^func TestUnexportedRead(t *testing.T) {$/;"	f
TestUninitializedRead	./archive/tar/reader_test.go	/^func TestUninitializedRead(t *testing.T) {$/;"	f
TestUnixAndUnixpacketServer	./net/server_test.go	/^func TestUnixAndUnixpacketServer(t *testing.T) {$/;"	f
TestUnixAutobindClose	./net/unix_test.go	/^func TestUnixAutobindClose(t *testing.T) {$/;"	f
TestUnixConnLocalAndRemoteNames	./net/unix_test.go	/^func TestUnixConnLocalAndRemoteNames(t *testing.T) {$/;"	f
TestUnixConnSpecificMethods	./net/protoconn_test.go	/^func TestUnixConnSpecificMethods(t *testing.T) {$/;"	f
TestUnixListenerSpecificMethods	./net/protoconn_test.go	/^func TestUnixListenerSpecificMethods(t *testing.T) {$/;"	f
TestUnixRightsRoundtrip	./syscall/syscall_unix_test.go	/^func TestUnixRightsRoundtrip(t *testing.T) {$/;"	f
TestUnixgramAutobind	./net/unix_test.go	/^func TestUnixgramAutobind(t *testing.T) {$/;"	f
TestUnixgramConnLocalAndRemoteNames	./net/unix_test.go	/^func TestUnixgramConnLocalAndRemoteNames(t *testing.T) {$/;"	f
TestUnixgramServer	./net/server_test.go	/^func TestUnixgramServer(t *testing.T) {$/;"	f
TestUnixgramWrite	./net/unix_test.go	/^func TestUnixgramWrite(t *testing.T) {$/;"	f
TestUnixgramZeroByteBuffer	./net/unix_test.go	/^func TestUnixgramZeroByteBuffer(t *testing.T) {$/;"	f
TestUnixgramZeroBytePayload	./net/unix_test.go	/^func TestUnixgramZeroBytePayload(t *testing.T) {$/;"	f
TestUnknown	./go/constant/value_test.go	/^func TestUnknown(t *testing.T) {$/;"	f
TestUnknownCriticalExtension	./crypto/x509/x509_test.go	/^func TestUnknownCriticalExtension(t *testing.T) {$/;"	f
TestUnlink	./container/ring/ring_test.go	/^func TestUnlink(t *testing.T) {$/;"	f
TestUnlockPanic	./sync/rwmutex_test.go	/^func TestUnlockPanic(t *testing.T) {$/;"	f
TestUnlockPanic2	./sync/rwmutex_test.go	/^func TestUnlockPanic2(t *testing.T) {$/;"	f
TestUnmarshal	./encoding/asn1/asn1_test.go	/^func TestUnmarshal(t *testing.T) {$/;"	f
TestUnmarshal	./encoding/json/decode_test.go	/^func TestUnmarshal(t *testing.T) {$/;"	f
TestUnmarshal	./encoding/xml/marshal_test.go	/^func TestUnmarshal(t *testing.T) {$/;"	f
TestUnmarshalAttr	./encoding/xml/read_test.go	/^func TestUnmarshalAttr(t *testing.T) {$/;"	f
TestUnmarshalBadPaths	./encoding/xml/read_test.go	/^func TestUnmarshalBadPaths(t *testing.T) {$/;"	f
TestUnmarshalFeed	./encoding/xml/read_test.go	/^func TestUnmarshalFeed(t *testing.T) {$/;"	f
TestUnmarshalInterface	./encoding/json/decode_test.go	/^func TestUnmarshalInterface(t *testing.T) {$/;"	f
TestUnmarshalIntoInterface	./encoding/xml/read_test.go	/^func TestUnmarshalIntoInterface(t *testing.T) {$/;"	f
TestUnmarshalInvalidUTF8	./encoding/asn1/asn1_test.go	/^func TestUnmarshalInvalidUTF8(t *testing.T) {$/;"	f
TestUnmarshalJSONLiteralError	./encoding/json/decode_test.go	/^func TestUnmarshalJSONLiteralError(t *testing.T) {$/;"	f
TestUnmarshalMarshal	./encoding/json/decode_test.go	/^func TestUnmarshalMarshal(t *testing.T) {$/;"	f
TestUnmarshalNS	./encoding/xml/read_test.go	/^func TestUnmarshalNS(t *testing.T) {$/;"	f
TestUnmarshalNSAttr	./encoding/xml/read_test.go	/^func TestUnmarshalNSAttr(t *testing.T) {$/;"	f
TestUnmarshalNulls	./encoding/json/decode_test.go	/^func TestUnmarshalNulls(t *testing.T) {$/;"	f
TestUnmarshalPaths	./encoding/xml/read_test.go	/^func TestUnmarshalPaths(t *testing.T) {$/;"	f
TestUnmarshalPtrPtr	./encoding/json/decode_test.go	/^func TestUnmarshalPtrPtr(t *testing.T) {$/;"	f
TestUnmarshalSyntax	./encoding/json/decode_test.go	/^func TestUnmarshalSyntax(t *testing.T) {$/;"	f
TestUnmarshalTypeError	./encoding/json/decode_test.go	/^func TestUnmarshalTypeError(t *testing.T) {$/;"	f
TestUnmarshalUnexported	./encoding/json/decode_test.go	/^func TestUnmarshalUnexported(t *testing.T) {$/;"	f
TestUnmarshalWithoutNameType	./encoding/xml/read_test.go	/^func TestUnmarshalWithoutNameType(t *testing.T) {$/;"	f
TestUnmarshaler	./encoding/xml/read_test.go	/^func TestUnmarshaler(t *testing.T) {$/;"	f
TestUnpaddedSignature	./crypto/rsa/pkcs1v15_test.go	/^func TestUnpaddedSignature(t *testing.T) {$/;"	f
TestUnquote	./strconv/quote_test.go	/^func TestUnquote(t *testing.T) {$/;"	f
TestUnquotedAttrs	./encoding/xml/xml_test.go	/^func TestUnquotedAttrs(t *testing.T) {$/;"	f
TestUnreadByte	./bufio/bufio_test.go	/^func TestUnreadByte(t *testing.T) {$/;"	f
TestUnreadByte	./bytes/buffer_test.go	/^func TestUnreadByte(t *testing.T) {$/;"	f
TestUnreadByteMultiple	./bufio/bufio_test.go	/^func TestUnreadByteMultiple(t *testing.T) {$/;"	f
TestUnreadByteOthers	./bufio/bufio_test.go	/^func TestUnreadByteOthers(t *testing.T) {$/;"	f
TestUnreadRune	./bufio/bufio_test.go	/^func TestUnreadRune(t *testing.T) {$/;"	f
TestUnreadRuneAtEOF	./bufio/bufio_test.go	/^func TestUnreadRuneAtEOF(t *testing.T) {$/;"	f
TestUnreadRuneError	./bufio/bufio_test.go	/^func TestUnreadRuneError(t *testing.T) {$/;"	f
TestUnreadRuneError	./bytes/reader_test.go	/^func TestUnreadRuneError(t *testing.T) {$/;"	f
TestUnreadRuneError	./strings/strings_test.go	/^func TestUnreadRuneError(t *testing.T) {$/;"	f
TestUnreadRuneWithBufio	./fmt/scan_test.go	/^func TestUnreadRuneWithBufio(t *testing.T) {$/;"	f
TestUnresolved	./go/parser/parser_test.go	/^func TestUnresolved(t *testing.T) {$/;"	f
TestUnscaledQuant	./image/jpeg/writer_test.go	/^func TestUnscaledQuant(t *testing.T) {$/;"	f
TestUnsetenv	./os/env_test.go	/^func TestUnsetenv(t *testing.T) {$/;"	f
TestUnsuccessfulGoInstallShouldMentionMissingPackage	./cmd/go/go_test.go	/^func TestUnsuccessfulGoInstallShouldMentionMissingPackage(t *testing.T) {$/;"	f
TestUnsupported	./encoding/gob/encoder_test.go	/^func TestUnsupported(t *testing.T) {$/;"	f
TestUnsupportedValues	./encoding/json/encode_test.go	/^func TestUnsupportedValues(t *testing.T) {$/;"	f
TestUnterminatedStringError	./text/template/exec_test.go	/^func TestUnterminatedStringError(t *testing.T) {$/;"	f
TestUpdateAndDelete	./net/http/cookiejar/jar_test.go	/^func TestUpdateAndDelete(t *testing.T) {$/;"	f
TestUpdateResolvConf	./net/dnsclient_unix_test.go	/^func TestUpdateResolvConf(t *testing.T) {$/;"	f
TestUsage	./flag/flag_test.go	/^func TestUsage(t *testing.T) {$/;"	f
TestUseProxy	./net/http/proxy_test.go	/^func TestUseProxy(t *testing.T) {$/;"	f
TestUserDefined	./flag/flag_test.go	/^func TestUserDefined(t *testing.T) {$/;"	f
TestUserDefinedBool	./flag/flag_test.go	/^func TestUserDefinedBool(t *testing.T) {$/;"	f
TestUserDefinedForCommandLine	./flag/flag_test.go	/^func TestUserDefinedForCommandLine(t *testing.T) {$/;"	f
TestUsplit	./runtime/vlop_arm_test.go	/^func TestUsplit(t *testing.T) {$/;"	f
TestUvarint	./encoding/binary/varint_test.go	/^func TestUvarint(t *testing.T) {$/;"	f
TestValid	./go/parser/short_test.go	/^func TestValid(t *testing.T) {$/;"	f
TestValid	./unicode/utf8/utf8_test.go	/^func TestValid(t *testing.T) {$/;"	f
TestValidRune	./unicode/utf8/utf8_test.go	/^func TestValidRune(t *testing.T) {$/;"	f
TestValidTypeflagWithPAXHeader	./archive/tar/writer_test.go	/^func TestValidTypeflagWithPAXHeader(t *testing.T) {$/;"	f
TestValue	./sync/atomic/value_test.go	/^func TestValue(t *testing.T) {$/;"	f
TestValueConcurrent	./sync/atomic/value_test.go	/^func TestValueConcurrent(t *testing.T) {$/;"	f
TestValueConverters	./database/sql/convert_test.go	/^func TestValueConverters(t *testing.T) {$/;"	f
TestValueConverters	./database/sql/driver/types_test.go	/^func TestValueConverters(t *testing.T) {$/;"	f
TestValueError	./encoding/gob/encoder_test.go	/^func TestValueError(t *testing.T) {$/;"	f
TestValueLarge	./sync/atomic/value_test.go	/^func TestValueLarge(t *testing.T) {$/;"	f
TestValuePanic	./sync/atomic/value_test.go	/^func TestValuePanic(t *testing.T) {$/;"	f
TestValueString	./reflect/all_test.go	/^func TestValueString(t *testing.T) {$/;"	f
TestValueToString	./reflect/all_test.go	/^func TestValueToString(t *testing.T) {$/;"	f
TestValuelessAttrs	./encoding/xml/xml_test.go	/^func TestValuelessAttrs(t *testing.T) {$/;"	f
TestValues	./internal/syscall/windows/registry/registry_test.go	/^func TestValues(t *testing.T) {$/;"	f
TestValuesInfo	./go/types/api_test.go	/^func TestValuesInfo(t *testing.T) {$/;"	f
TestVarScope	./go/parser/parser_test.go	/^func TestVarScope(t *testing.T) {$/;"	f
TestVariableCiphertextKnownAnswer	./crypto/des/des_test.go	/^func TestVariableCiphertextKnownAnswer(t *testing.T) {$/;"	f
TestVariableKeyKnownAnswerDecrypt	./crypto/des/des_test.go	/^func TestVariableKeyKnownAnswerDecrypt(t *testing.T) {$/;"	f
TestVariableKeyKnownAnswerEncrypt	./crypto/des/des_test.go	/^func TestVariableKeyKnownAnswerEncrypt(t *testing.T) {$/;"	f
TestVariablePlaintextKnownAnswer	./crypto/des/des_test.go	/^func TestVariablePlaintextKnownAnswer(t *testing.T) {$/;"	f
TestVariadic	./reflect/all_test.go	/^func TestVariadic(t *testing.T) {$/;"	f
TestVariadicMethodValue	./reflect/all_test.go	/^func TestVariadicMethodValue(t *testing.T) {$/;"	f
TestVariadicType	./reflect/all_test.go	/^func TestVariadicType(t *testing.T) {$/;"	f
TestVarint	./encoding/binary/varint_test.go	/^func TestVarint(t *testing.T) {$/;"	f
TestVariousDeadlines1Proc	./net/timeout_test.go	/^func TestVariousDeadlines1Proc(t *testing.T) {$/;"	f
TestVariousDeadlines4Proc	./net/timeout_test.go	/^func TestVariousDeadlines4Proc(t *testing.T) {$/;"	f
TestVariousTextLineEndings	./mime/multipart/multipart_test.go	/^func TestVariousTextLineEndings(t *testing.T) {$/;"	f
TestVectors	./crypto/ecdsa/ecdsa_test.go	/^func TestVectors(t *testing.T) {$/;"	f
TestVendor12156	./cmd/go/vendor_test.go	/^func TestVendor12156(t *testing.T) {$/;"	f
TestVendorCache	./cmd/go/vendor_test.go	/^func TestVendorCache(t *testing.T) {$/;"	f
TestVendorGOPATH	./cmd/go/vendor_test.go	/^func TestVendorGOPATH(t *testing.T) {$/;"	f
TestVendorGet	./cmd/go/vendor_test.go	/^func TestVendorGet(t *testing.T) {$/;"	f
TestVendorGetUpdate	./cmd/go/vendor_test.go	/^func TestVendorGetUpdate(t *testing.T) {$/;"	f
TestVendorImportError	./cmd/go/vendor_test.go	/^func TestVendorImportError(t *testing.T) {$/;"	f
TestVendorImports	./cmd/go/vendor_test.go	/^func TestVendorImports(t *testing.T) {$/;"	f
TestVendorInvalid	./cmd/go/vendor_test.go	/^func TestVendorInvalid(t *testing.T) {$/;"	f
TestVendorList	./cmd/go/vendor_test.go	/^func TestVendorList(t *testing.T) {$/;"	f
TestVendorRun	./cmd/go/vendor_test.go	/^func TestVendorRun(t *testing.T) {$/;"	f
TestVendorTest	./cmd/go/vendor_test.go	/^func TestVendorTest(t *testing.T) {$/;"	f
TestVendorTest2	./cmd/go/vendor_test.go	/^func TestVendorTest2(t *testing.T) {$/;"	f
TestVerifyCertificateWithDSASignature	./crypto/x509/x509_test.go	/^func TestVerifyCertificateWithDSASignature(t *testing.T) {$/;"	f
TestVerifyHostname	./crypto/tls/tls_test.go	/^func TestVerifyHostname(t *testing.T) {$/;"	f
TestVerifyHostnameResumed	./crypto/tls/tls_test.go	/^func TestVerifyHostnameResumed(t *testing.T) {$/;"	f
TestVerifyPKCS1v15	./crypto/rsa/pkcs1v15_test.go	/^func TestVerifyPKCS1v15(t *testing.T) {$/;"	f
TestVersion	./crypto/tls/handshake_server_test.go	/^func TestVersion(t *testing.T) {$/;"	f
TestVersion3	./time/zoneinfo_test.go	/^func TestVersion3(t *testing.T) {$/;"	f
TestVersionControlErrorMessageIncludesCorrectDirectory	./cmd/go/go_test.go	/^func TestVersionControlErrorMessageIncludesCorrectDirectory(t *testing.T) {$/;"	f
TestVeryLongSparseChunk	./compress/flate/deflate_test.go	/^func TestVeryLongSparseChunk(t *testing.T) {$/;"	f
TestVet	./cmd/vet/vet_test.go	/^func TestVet(t *testing.T) {$/;"	f
TestVolumeName	./path/filepath/path_test.go	/^func TestVolumeName(t *testing.T) {$/;"	f
TestWERDialogue	./runtime/syscall_windows_test.go	/^func TestWERDialogue(t *testing.T) {$/;"	f
TestWaitGroup	./sync/waitgroup_test.go	/^func TestWaitGroup(t *testing.T) {$/;"	f
TestWaitGroupAlign	./sync/waitgroup_test.go	/^func TestWaitGroupAlign(t *testing.T) {$/;"	f
TestWaitGroupMisuse	./sync/waitgroup_test.go	/^func TestWaitGroupMisuse(t *testing.T) {$/;"	f
TestWaitGroupMisuse2	./sync/waitgroup_test.go	/^func TestWaitGroupMisuse2(t *testing.T) {$/;"	f
TestWaitGroupMisuse3	./sync/waitgroup_test.go	/^func TestWaitGroupMisuse3(t *testing.T) {$/;"	f
TestWaitGroupRace	./sync/waitgroup_test.go	/^func TestWaitGroupRace(t *testing.T) {$/;"	f
TestWalk	./path/filepath/path_test.go	/^func TestWalk(t *testing.T) {$/;"	f
TestWalkFileError	./path/filepath/path_test.go	/^func TestWalkFileError(t *testing.T) {$/;"	f
TestWalkFullRegistry	./internal/syscall/windows/registry/registry_test.go	/^func TestWalkFullRegistry(t *testing.T) {$/;"	f
TestWalkSkipDirOnFile	./path/filepath/path_test.go	/^func TestWalkSkipDirOnFile(t *testing.T) {$/;"	f
TestWeakKeys	./crypto/des/des_test.go	/^func TestWeakKeys(t *testing.T) {$/;"	f
TestWeighting	./net/dnsclient_test.go	/^func TestWeighting(t *testing.T) {$/;"	f
TestWidthAndPrecision	./fmt/fmt_test.go	/^func TestWidthAndPrecision(t *testing.T) {$/;"	f
TestWildWildcardListener	./net/listen_test.go	/^func TestWildWildcardListener(t *testing.T) {$/;"	f
TestWildcardsDoNotLookInUselessDirectories	./cmd/go/go_test.go	/^func TestWildcardsDoNotLookInUselessDirectories(t *testing.T) {$/;"	f
TestWin32finddata	./syscall/syscall_windows_test.go	/^func TestWin32finddata(t *testing.T) {$/;"	f
TestWinSplitListTestsAreValid	./path/filepath/path_windows_test.go	/^func TestWinSplitListTestsAreValid(t *testing.T) {$/;"	f
TestWithGOPATHEqualsGOROOTGoGetFails	./cmd/go/go_test.go	/^func TestWithGOPATHEqualsGOROOTGoGetFails(t *testing.T) {$/;"	f
TestWithSimulated	./log/syslog/syslog_test.go	/^func TestWithSimulated(t *testing.T) {$/;"	f
TestWithoutGOPATHGoGetFails	./cmd/go/go_test.go	/^func TestWithoutGOPATHGoGetFails(t *testing.T) {$/;"	f
TestWordBitLen	./cmd/compile/internal/big/arith_test.go	/^func TestWordBitLen(t *testing.T) {$/;"	f
TestWordBitLen	./math/big/arith_test.go	/^func TestWordBitLen(t *testing.T) {$/;"	f
TestWrite	./encoding/csv/writer_test.go	/^func TestWrite(t *testing.T) {$/;"	f
TestWrite	./log/syslog/syslog_test.go	/^func TestWrite(t *testing.T) {$/;"	f
TestWriteAfterClose	./archive/tar/writer_test.go	/^func TestWriteAfterClose(t *testing.T) {$/;"	f
TestWriteAfterHijack	./net/http/serve_test.go	/^func TestWriteAfterHijack(t *testing.T) {$/;"	f
TestWriteAfterWriterClose	./io/pipe_test.go	/^func TestWriteAfterWriterClose(t *testing.T) {$/;"	f
TestWriteAt	./os/os_test.go	/^func TestWriteAt(t *testing.T) {$/;"	f
TestWriteEmpty	./io/pipe_test.go	/^func TestWriteEmpty(t *testing.T) {$/;"	f
TestWriteErrors	./bufio/bufio_test.go	/^func TestWriteErrors(t *testing.T) {$/;"	f
TestWriteFile	./io/ioutil/ioutil_test.go	/^func TestWriteFile(t *testing.T) {$/;"	f
TestWriteGrayscale	./image/jpeg/writer_test.go	/^func TestWriteGrayscale(t *testing.T) {$/;"	f
TestWriteHeapDumpFinalizers	./runtime/debug/heapdump_test.go	/^func TestWriteHeapDumpFinalizers(t *testing.T) {$/;"	f
TestWriteHeapDumpNonempty	./runtime/debug/heapdump_test.go	/^func TestWriteHeapDumpNonempty(t *testing.T) {$/;"	f
TestWriteNil	./io/pipe_test.go	/^func TestWriteNil(t *testing.T) {$/;"	f
TestWriteResponse	./net/http/response_test.go	/^func TestWriteResponse(t *testing.T) {$/;"	f
TestWriteSetCookies	./net/http/cookie_test.go	/^func TestWriteSetCookies(t *testing.T) {$/;"	f
TestWriteSlice	./encoding/binary/binary_test.go	/^func TestWriteSlice(t *testing.T) {$/;"	f
TestWriteString	./bufio/bufio_test.go	/^func TestWriteString(t *testing.T) {$/;"	f
TestWriteStringError	./strings/replace_test.go	/^func TestWriteStringError(t *testing.T) {$/;"	f
TestWriteT	./encoding/binary/binary_test.go	/^func TestWriteT(t *testing.T) {$/;"	f
TestWriteTimeout	./net/timeout_test.go	/^func TestWriteTimeout(t *testing.T) {$/;"	f
TestWriteTimeoutFluctuation	./net/timeout_test.go	/^func TestWriteTimeoutFluctuation(t *testing.T) {$/;"	f
TestWriteTimeoutMustNotReturn	./net/timeout_test.go	/^func TestWriteTimeoutMustNotReturn(t *testing.T) {$/;"	f
TestWriteTo	./bytes/buffer_test.go	/^func TestWriteTo(t *testing.T) {$/;"	f
TestWriteTo	./strings/reader_test.go	/^func TestWriteTo(t *testing.T) {$/;"	f
TestWriteToTimeout	./net/timeout_test.go	/^func TestWriteToTimeout(t *testing.T) {$/;"	f
TestWriteToUDP	./net/udp_test.go	/^func TestWriteToUDP(t *testing.T) {$/;"	f
TestWriter	./archive/tar/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./archive/zip/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./bufio/bufio_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./compress/lzw/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./compress/zlib/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./image/gif/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./image/jpeg/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./image/png/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./mime/multipart/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriter	./mime/quotedprintable/writer_test.go	/^func TestWriter(t *testing.T) {$/;"	f
TestWriterBig	./compress/zlib/writer_test.go	/^func TestWriterBig(t *testing.T) {$/;"	f
TestWriterBinary	./mime/quotedprintable/writer_test.go	/^func TestWriterBinary(t *testing.T) {$/;"	f
TestWriterBoundaryGoroutines	./mime/multipart/writer_test.go	/^func TestWriterBoundaryGoroutines(t *testing.T) {$/;"	f
TestWriterDict	./compress/flate/deflate_test.go	/^func TestWriterDict(t *testing.T) {$/;"	f
TestWriterDict	./compress/zlib/writer_test.go	/^func TestWriterDict(t *testing.T) {$/;"	f
TestWriterDictIsUsed	./compress/zlib/writer_test.go	/^func TestWriterDictIsUsed(t *testing.T) {$/;"	f
TestWriterFlush	./archive/zip/writer_test.go	/^func TestWriterFlush(t *testing.T) {$/;"	f
TestWriterFlush	./compress/gzip/gzip_test.go	/^func TestWriterFlush(t *testing.T) {$/;"	f
TestWriterLevels	./image/png/writer_test.go	/^func TestWriterLevels(t *testing.T) {$/;"	f
TestWriterOffset	./archive/zip/writer_test.go	/^func TestWriterOffset(t *testing.T) {$/;"	f
TestWriterReadFrom	./bufio/bufio_test.go	/^func TestWriterReadFrom(t *testing.T) {$/;"	f
TestWriterReadFromCounts	./bufio/bufio_test.go	/^func TestWriterReadFromCounts(t *testing.T) {$/;"	f
TestWriterReadFromErrNoProgress	./bufio/bufio_test.go	/^func TestWriterReadFromErrNoProgress(t *testing.T) {$/;"	f
TestWriterReadFromErrors	./bufio/bufio_test.go	/^func TestWriterReadFromErrors(t *testing.T) {$/;"	f
TestWriterReadFromUntilEOF	./bufio/bufio_test.go	/^func TestWriterReadFromUntilEOF(t *testing.T) {$/;"	f
TestWriterReadFromWhileFull	./bufio/bufio_test.go	/^func TestWriterReadFromWhileFull(t *testing.T) {$/;"	f
TestWriterReset	./bufio/bufio_test.go	/^func TestWriterReset(t *testing.T) {$/;"	f
TestWriterReset	./compress/flate/deflate_test.go	/^func TestWriterReset(t *testing.T) {$/;"	f
TestWriterReset	./compress/gzip/gzip_test.go	/^func TestWriterReset(t *testing.T) {$/;"	f
TestWriterReset	./compress/zlib/writer_test.go	/^func TestWriterReset(t *testing.T) {$/;"	f
TestWriterReturnValues	./compress/lzw/writer_test.go	/^func TestWriterReturnValues(t *testing.T) {$/;"	f
TestWriterSetBoundary	./mime/multipart/writer_test.go	/^func TestWriterSetBoundary(t *testing.T) {$/;"	f
TestWrongTypeDecoder	./encoding/gob/encoder_test.go	/^func TestWrongTypeDecoder(t *testing.T) {$/;"	f
TestX	./go/printer/printer_test.go	/^func TestX(t *testing.T) {$/;"	f
TestX509KeyPair	./crypto/tls/tls_test.go	/^func TestX509KeyPair(t *testing.T) {$/;"	f
TestX509MixedKeyPair	./crypto/tls/tls_test.go	/^func TestX509MixedKeyPair(t *testing.T) {$/;"	f
TestXForwardedFor	./net/http/httputil/reverseproxy_test.go	/^func TestXForwardedFor(t *testing.T) {$/;"	f
TestXOR	./crypto/cipher/xor_test.go	/^func TestXOR(t *testing.T) {$/;"	f
TestXXX	./cmd/go/alldocs.go	/^	func TestXXX(t *testing.T) { ... }$/;"	f
TestXXX	./cmd/go/test.go	/^	func TestXXX(t *testing.T) { ... }$/;"	f
TestXadduintptr	./runtime/atomic_test.go	/^func TestXadduintptr(t *testing.T) {$/;"	f
TestXadduintptrOnUint64	./runtime/atomic_test.go	/^func TestXadduintptrOnUint64(t *testing.T) {$/;"	f
TestXed320F	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed320F(t *testing.T)       { testBasic(t, testXed32, 0x0F) }$/;"	f
TestXed320F38	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed320F38(t *testing.T)     { testBasic(t, testXed32, 0x0F, 0x38) }$/;"	f
TestXed320F3A	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed320F3A(t *testing.T)     { testBasic(t, testXed32, 0x0F, 0x3A) }$/;"	f
TestXed32Manual	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed32Manual(t *testing.T)   { testXed32(t, hexCases(t, xedManualTests)) }$/;"	f
TestXed32ModRM	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed32ModRM(t *testing.T)    { testXed32(t, concat(basicPrefixes, enumModRM)) }$/;"	f
TestXed32OneByte	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed32OneByte(t *testing.T)  { testBasic(t, testXed32) }$/;"	f
TestXed32Prefix	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed32Prefix(t *testing.T)   { testPrefix(t, testXed32) }$/;"	f
TestXed32Testdata	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed32Testdata(t *testing.T) { testXed32(t, concat(basicPrefixes, testdataCases(t))) }$/;"	f
TestXed640F	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed640F(t *testing.T)       { testBasic(t, testXed64, 0x0F) }$/;"	f
TestXed640F38	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed640F38(t *testing.T)     { testBasic(t, testXed64, 0x0F, 0x38) }$/;"	f
TestXed640F3A	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed640F3A(t *testing.T)     { testBasic(t, testXed64, 0x0F, 0x3A) }$/;"	f
TestXed64Manual	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64Manual(t *testing.T)   { testXed64(t, hexCases(t, xedManualTests)) }$/;"	f
TestXed64ModRM	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64ModRM(t *testing.T)    { testXed64(t, concat(basicPrefixes, enumModRM)) }$/;"	f
TestXed64OneByte	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64OneByte(t *testing.T)  { testBasic(t, testXed64) }$/;"	f
TestXed64Prefix	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64Prefix(t *testing.T)   { testPrefix(t, testXed64) }$/;"	f
TestXed64REX0F	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64REX0F(t *testing.T)      { testBasicREX(t, testXed64, 0x0F) }$/;"	f
TestXed64REX0F38	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64REX0F38(t *testing.T)    { testBasicREX(t, testXed64, 0x0F, 0x38) }$/;"	f
TestXed64REX0F3A	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64REX0F3A(t *testing.T)    { testBasicREX(t, testXed64, 0x0F, 0x3A) }$/;"	f
TestXed64REXModRM	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64REXModRM(t *testing.T)   { testXed64(t, concat3(basicPrefixes, rexPrefixes, enumModRM)) }$/;"	f
TestXed64REXOneByte	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64REXOneByte(t *testing.T) { testBasicREX(t, testXed64) }$/;"	f
TestXed64REXPrefix	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64REXPrefix(t *testing.T)  { testPrefixREX(t, testXed64) }$/;"	f
TestXed64REXTestdata	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64REXTestdata(t *testing.T) {$/;"	f
TestXed64Testdata	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func TestXed64Testdata(t *testing.T) { testXed64(t, concat(basicPrefixes, testdataCases(t))) }$/;"	f
TestXxx	./go/doc/testdata/testing.go	/^\/\/     func TestXxx(*testing.T)$/;"	f
TestXxx	./testing/testing.go	/^\/\/     func TestXxx(*testing.T)$/;"	f
TestY0	./math/all_test.go	/^func TestY0(t *testing.T) {$/;"	f
TestY1	./math/all_test.go	/^func TestY1(t *testing.T) {$/;"	f
TestYCbCr	./image/ycbcr_test.go	/^func TestYCbCr(t *testing.T) {$/;"	f
TestYCbCrGray	./image/color/ycbcr_test.go	/^func TestYCbCrGray(t *testing.T) {$/;"	f
TestYCbCrRoundtrip	./image/color/ycbcr_test.go	/^func TestYCbCrRoundtrip(t *testing.T) {$/;"	f
TestYCbCrSlicesDontOverlap	./image/ycbcr_test.go	/^func TestYCbCrSlicesDontOverlap(t *testing.T) {$/;"	f
TestYCbCrToRGBConsistency	./image/color/ycbcr_test.go	/^func TestYCbCrToRGBConsistency(t *testing.T) {$/;"	f
TestYearDay	./time/time_test.go	/^func TestYearDay(t *testing.T) {$/;"	f
TestYieldLocked	./runtime/proc_test.go	/^func TestYieldLocked(t *testing.T) {$/;"	f
TestYieldLockedProgress	./runtime/proc_test.go	/^func TestYieldLockedProgress(t *testing.T) {$/;"	f
TestYieldProgress	./runtime/proc_test.go	/^func TestYieldProgress(t *testing.T) {$/;"	f
TestYn	./math/all_test.go	/^func TestYn(t *testing.T) {$/;"	f
TestZeroDivisionException	./runtime/syscall_windows_test.go	/^func TestZeroDivisionException(t *testing.T) {$/;"	f
TestZeroLengthHeader	./archive/zip/zip_test.go	/^func TestZeroLengthHeader(t *testing.T) {$/;"	f
TestZeroLengthPostAndResponse	./net/http/serve_test.go	/^func TestZeroLengthPostAndResponse(t *testing.T) {$/;"	f
TestZeroList	./container/list/list_test.go	/^func TestZeroList(t *testing.T) {$/;"	f
TestZeroRat	./cmd/compile/internal/big/rat_test.go	/^func TestZeroRat(t *testing.T) {$/;"	f
TestZeroRat	./math/big/rat_test.go	/^func TestZeroRat(t *testing.T) {$/;"	f
TestZeroReader	./bufio/bufio_test.go	/^func TestZeroReader(t *testing.T) {$/;"	f
TestZeroSysProcAttr	./syscall/exec_unix_test.go	/^func TestZeroSysProcAttr(t *testing.T) {$/;"	f
TestZeroTimerResetPanics	./time/sleep_test.go	/^func TestZeroTimerResetPanics(t *testing.T) {$/;"	f
TestZeroTimerStopPanics	./time/sleep_test.go	/^func TestZeroTimerStopPanics(t *testing.T) {$/;"	f
TestZeroTok	./go/types/token_test.go	/^func TestZeroTok(t *testing.T) {$/;"	f
TestZigUnzig	./image/jpeg/writer_test.go	/^func TestZigUnzig(t *testing.T) {$/;"	f
TestZip64	./archive/zip/zip_test.go	/^func TestZip64(t *testing.T) {$/;"	f
TestZoneData	./time/time_test.go	/^func TestZoneData(t *testing.T) {$/;"	f
Tested	./cmd/go/test.go	/^func (t *testFuncs) Tested() string {$/;"	f
TestingAssertE2I2GC	./runtime/export_test.go	/^var TestingAssertE2I2GC = &testingAssertE2I2GC$/;"	v
TestingAssertE2T2GC	./runtime/export_test.go	/^var TestingAssertE2T2GC = &testingAssertE2T2GC$/;"	v
TestingWER	./runtime/export_windows_test.go	/^var TestingWER = &testingWER$/;"	v
Text	./bufio/scan.go	/^func (s *Scanner) Text() string {$/;"	f
Text	./cmd/asm/internal/lex/input.go	/^func (in *Input) Text() string {$/;"	f
Text	./cmd/asm/internal/lex/slice.go	/^func (s *Slice) Text() string {$/;"	f
Text	./cmd/asm/internal/lex/stack.go	/^func (s *Stack) Text() string {$/;"	f
Text	./cmd/asm/internal/lex/tokenizer.go	/^func (t *Tokenizer) Text() string {$/;"	f
Text	./cmd/compile/internal/big/ftoa.go	/^func (x *Float) Text(format byte, prec int) string {$/;"	f
Text	./cmd/internal/objfile/objfile.go	/^func (f *File) Text() (uint64, []byte, error) {$/;"	f
Text	./encoding/xml/read_test.go	/^type Text struct {$/;"	t
Text	./go/ast/ast.go	/^func (g *CommentGroup) Text() string {$/;"	f
Text	./math/big/ftoa.go	/^func (x *Float) Text(format byte, prec int) string {$/;"	f
TextGobber	./encoding/gob/gobencdec_test.go	/^type TextGobber int$/;"	t
TextMarshaler	./encoding/encoding.go	/^type TextMarshaler interface {$/;"	t
TextNode	./text/template/parse/node.go	/^type TextNode struct {$/;"	t
TextUnmarshaler	./encoding/encoding.go	/^type TextUnmarshaler interface {$/;"	t
TextValueGobber	./encoding/gob/gobencdec_test.go	/^type TextValueGobber string$/;"	t
Tfloat	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tfloat float64; return Tfloat(i) },$/;"	t
TforkT	./runtime/defs_openbsd.go	/^type TforkT C.struct___tfork$/;"	t
Tgkill	./syscall/zsyscall_linux_386.go	/^func Tgkill(tgid int, tid int, sig Signal) (err error) {$/;"	f
Tgkill	./syscall/zsyscall_linux_amd64.go	/^func Tgkill(tgid int, tid int, sig Signal) (err error) {$/;"	f
Tgkill	./syscall/zsyscall_linux_arm.go	/^func Tgkill(tgid int, tid int, sig Signal) (err error) {$/;"	f
Tgkill	./syscall/zsyscall_linux_arm64.go	/^func Tgkill(tgid int, tid int, sig Signal) (err error) {$/;"	f
Tgkill	./syscall/zsyscall_linux_ppc64.go	/^func Tgkill(tgid int, tid int, sig Signal) (err error) {$/;"	f
Tgkill	./syscall/zsyscall_linux_ppc64le.go	/^func Tgkill(tgid int, tid int, sig Signal) (err error) {$/;"	f
Thearch	./cmd/compile/internal/gc/go.go	/^var Thearch Arch$/;"	v
ThirdBase	./cmd/api/testdata/src/pkg/p3/p3.go	/^type ThirdBase struct{}$/;"	t
This	./cmd/compile/internal/gc/dcl.go	/^		\/\/ a lone type This doesn't matter for the exported$/;"	t
ThrParam	./runtime/defs_freebsd.go	/^type ThrParam C.struct_thr_param$/;"	t
Thread	./debug/macho/macho.go	/^type Thread struct {$/;"	t
ThreadCreateProfile	./runtime/mprof.go	/^func ThreadCreateProfile(p []StackRecord) (n int, ok bool) {$/;"	f
ThreadStart	./runtime/cgo/libcgo.h	/^struct ThreadStart$/;"	s
ThreadStart	./runtime/cgo/libcgo.h	/^typedef struct ThreadStart ThreadStart;$/;"	t	typeref:struct:ThreadStart
Tick	./time/tick.go	/^func Tick(d Duration) <-chan Time {$/;"	f
Ticker	./time/tick.go	/^type Ticker struct {$/;"	t
Time	./cmd/api/testdata/src/pkg/p1/p1.go	/^type Time struct{}$/;"	t
Time	./syscall/syscall_linux_amd64.go	/^func Time(t *Time_t) (tt Time_t, err error) {$/;"	f
Time	./syscall/zsyscall_linux_386.go	/^func Time(t *Time_t) (tt Time_t, err error) {$/;"	f
Time	./syscall/zsyscall_linux_arm.go	/^func Time(t *Time_t) (tt Time_t, err error) {$/;"	f
Time	./syscall/zsyscall_linux_arm64.go	/^func Time(t *Time_t) (tt Time_t, err error) {$/;"	f
Time	./syscall/zsyscall_linux_ppc64.go	/^func Time(t *Time_t) (tt Time_t, err error) {$/;"	f
Time	./syscall/zsyscall_linux_ppc64le.go	/^func Time(t *Time_t) (tt Time_t, err error) {$/;"	f
Time	./time/time.go	/^\/\/ The zero value of type Time is January 1, year 1, 00:00:00.000000000 UTC.$/;"	t
Time	./time/time.go	/^type Time struct {$/;"	t
Time3339	./encoding/json/decode_test.go	/^type Time3339 time.Time$/;"	t
TimeFormatTest	./time/format_test.go	/^type TimeFormatTest struct {$/;"	t
TimeTest	./time/time_test.go	/^type TimeTest struct {$/;"	t
Time_t	./syscall/types_linux.go	/^type Time_t C.time_t$/;"	t
Time_t	./syscall/ztypes_linux_386.go	/^type Time_t int32$/;"	t
Time_t	./syscall/ztypes_linux_amd64.go	/^type Time_t int64$/;"	t
Time_t	./syscall/ztypes_linux_arm.go	/^type Time_t int32$/;"	t
Time_t	./syscall/ztypes_linux_arm64.go	/^type Time_t int64$/;"	t
Time_t	./syscall/ztypes_linux_ppc64.go	/^type Time_t int64$/;"	t
Time_t	./syscall/ztypes_linux_ppc64le.go	/^type Time_t int64$/;"	t
Timeout	./crypto/tls/tls.go	/^func (timeoutError) Timeout() bool   { return true }$/;"	f
Timeout	./net/cgo_stub.go	/^func (eai addrinfoErrno) Timeout() bool   { return false }$/;"	f
Timeout	./net/cgo_unix.go	/^func (eai addrinfoErrno) Timeout() bool   { return false }$/;"	f
Timeout	./net/cgo_windows.go	/^func (eai addrinfoErrno) Timeout() bool   { return false }$/;"	f
Timeout	./net/http/transport.go	/^func (e *httpError) Timeout() bool   { return e.timeout }$/;"	f
Timeout	./net/http/transport.go	/^func (tlsHandshakeTimeoutError) Timeout() bool   { return true }$/;"	f
Timeout	./net/net.go	/^func (e *AddrError) Timeout() bool   { return false }$/;"	f
Timeout	./net/net.go	/^func (e *DNSConfigError) Timeout() bool   { return false }$/;"	f
Timeout	./net/net.go	/^func (e *DNSError) Timeout() bool { return e.IsTimeout }$/;"	f
Timeout	./net/net.go	/^func (e *OpError) Timeout() bool {$/;"	f
Timeout	./net/net.go	/^func (e *timeoutError) Timeout() bool   { return true }$/;"	f
Timeout	./net/net.go	/^func (e InvalidAddrError) Timeout() bool   { return false }$/;"	f
Timeout	./net/net.go	/^func (e UnknownNetworkError) Timeout() bool   { return false }$/;"	f
Timeout	./syscall/syscall_nacl.go	/^func (e Errno) Timeout() bool {$/;"	f
Timeout	./syscall/syscall_plan9.go	/^func (e ErrorString) Timeout() bool {$/;"	f
Timeout	./syscall/syscall_unix.go	/^func (e Errno) Timeout() bool {$/;"	f
Timeout	./syscall/syscall_windows.go	/^func (e Errno) Timeout() bool {$/;"	f
TimeoutHandler	./net/http/server.go	/^func TimeoutHandler(h Handler, dt time.Duration, msg string) Handler {$/;"	f
TimeoutReader	./testing/iotest/reader.go	/^func TimeoutReader(r io.Reader) io.Reader { return &timeoutReader{r, 0} }$/;"	f
Timer	./time/sleep.go	/^type Timer struct {$/;"	t
Times	./syscall/zsyscall_linux_386.go	/^func Times(tms *Tms) (ticks uintptr, err error) {$/;"	f
Times	./syscall/zsyscall_linux_amd64.go	/^func Times(tms *Tms) (ticks uintptr, err error) {$/;"	f
Times	./syscall/zsyscall_linux_arm.go	/^func Times(tms *Tms) (ticks uintptr, err error) {$/;"	f
Times	./syscall/zsyscall_linux_arm64.go	/^func Times(tms *Tms) (ticks uintptr, err error) {$/;"	f
Times	./syscall/zsyscall_linux_ppc64.go	/^func Times(tms *Tms) (ticks uintptr, err error) {$/;"	f
Times	./syscall/zsyscall_linux_ppc64le.go	/^func Times(tms *Tms) (ticks uintptr, err error) {$/;"	f
Timespec	./runtime/defs2_linux.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_arm_linux.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_darwin.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_dragonfly.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_freebsd.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_linux.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_netbsd.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_openbsd.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./runtime/defs_solaris.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/syscall_nacl_386.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/syscall_nacl_amd64p32.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/syscall_nacl_arm.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/syscall_plan9.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/syscall_windows.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/types_darwin.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/types_dragonfly.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/types_freebsd.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/types_linux.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/types_netbsd.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/types_openbsd.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/types_solaris.go	/^type Timespec C.struct_timespec$/;"	t
Timespec	./syscall/ztypes_darwin_386.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_darwin_amd64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_darwin_arm.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_darwin_arm64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_dragonfly_amd64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_freebsd_386.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_freebsd_amd64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_freebsd_arm.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_linux_386.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_linux_amd64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_linux_arm.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_linux_arm64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_linux_ppc64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_linux_ppc64le.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_netbsd_386.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_netbsd_amd64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_netbsd_arm.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_openbsd_386.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_openbsd_amd64.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_openbsd_arm.go	/^type Timespec struct {$/;"	t
Timespec	./syscall/ztypes_solaris_amd64.go	/^type Timespec struct {$/;"	t
TimespecToNsec	./syscall/syscall_darwin_386.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_darwin_amd64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_darwin_arm.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_darwin_arm64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_dragonfly_amd64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_freebsd_386.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_freebsd_amd64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_freebsd_arm.go	/^func TimespecToNsec(ts Timespec) int64 { return ts.Sec*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_linux_386.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_linux_amd64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_linux_arm.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_linux_arm64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_linux_ppc64x.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_nacl_386.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_nacl_amd64p32.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_nacl_arm.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_netbsd_386.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_netbsd_amd64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_netbsd_arm.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_openbsd_386.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_openbsd_amd64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_openbsd_arm.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_solaris_amd64.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
TimespecToNsec	./syscall/syscall_windows.go	/^func TimespecToNsec(ts Timespec) int64 { return int64(ts.Sec)*1e9 + int64(ts.Nsec) }$/;"	f
Timeval	./runtime/defs2_linux.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_arm_linux.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_darwin.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_dragonfly.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_freebsd.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_linux.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_netbsd.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_openbsd.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./runtime/defs_solaris.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/syscall_nacl_386.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/syscall_nacl_amd64p32.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/syscall_nacl_arm.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/syscall_plan9.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/types_darwin.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/types_dragonfly.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/types_freebsd.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/types_linux.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/types_netbsd.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/types_openbsd.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/types_solaris.go	/^type Timeval C.struct_timeval$/;"	t
Timeval	./syscall/ztypes_darwin_386.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_darwin_amd64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_darwin_arm.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_darwin_arm64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_dragonfly_amd64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_freebsd_386.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_freebsd_amd64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_freebsd_arm.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_linux_386.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_linux_amd64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_linux_arm.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_linux_arm64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_linux_ppc64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_linux_ppc64le.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_netbsd_386.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_netbsd_amd64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_netbsd_arm.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_openbsd_386.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_openbsd_amd64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_openbsd_arm.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_solaris_amd64.go	/^type Timeval struct {$/;"	t
Timeval	./syscall/ztypes_windows.go	/^type Timeval struct {$/;"	t
Timeval32	./syscall/types_darwin.go	/^type Timeval32 C.struct_timeval32$/;"	t
Timeval32	./syscall/types_solaris.go	/^type Timeval32 C.struct_timeval32$/;"	t
Timeval32	./syscall/ztypes_darwin_386.go	/^type Timeval32 [0]byte$/;"	t
Timeval32	./syscall/ztypes_darwin_amd64.go	/^type Timeval32 struct {$/;"	t
Timeval32	./syscall/ztypes_darwin_arm.go	/^type Timeval32 [0]byte$/;"	t
Timeval32	./syscall/ztypes_darwin_arm64.go	/^type Timeval32 struct {$/;"	t
Timeval32	./syscall/ztypes_solaris_amd64.go	/^type Timeval32 struct {$/;"	t
TimevalToNsec	./syscall/syscall_darwin_386.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_darwin_amd64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_darwin_arm.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_darwin_arm64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_dragonfly_amd64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_freebsd_386.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_freebsd_amd64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_freebsd_arm.go	/^func TimevalToNsec(tv Timeval) int64 { return tv.Sec*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_linux_386.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_linux_amd64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_linux_arm64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_linux_ppc64x.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_nacl_386.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_nacl_amd64p32.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_nacl_arm.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_netbsd_386.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_netbsd_amd64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_netbsd_arm.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_openbsd_386.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_openbsd_amd64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_openbsd_arm.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
TimevalToNsec	./syscall/syscall_solaris_amd64.go	/^func TimevalToNsec(tv Timeval) int64 { return int64(tv.Sec)*1e9 + int64(tv.Usec)*1e3 }$/;"	f
Timex	./syscall/types_linux.go	/^type Timex C.struct_timex$/;"	t
Timex	./syscall/ztypes_linux_386.go	/^type Timex struct {$/;"	t
Timex	./syscall/ztypes_linux_amd64.go	/^type Timex struct {$/;"	t
Timex	./syscall/ztypes_linux_arm.go	/^type Timex struct {$/;"	t
Timex	./syscall/ztypes_linux_arm64.go	/^type Timex struct {$/;"	t
Timex	./syscall/ztypes_linux_ppc64.go	/^type Timex struct {$/;"	t
Timex	./syscall/ztypes_linux_ppc64le.go	/^type Timex struct {$/;"	t
Timezoneinformation	./syscall/ztypes_windows.go	/^type Timezoneinformation struct {$/;"	t
Tint	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tint int; return Tint(i) },$/;"	t
Tint	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tint int; return [1]Tint{Tint(i)} },$/;"	t
Tint	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tint int; return []Tint{Tint(i)} },$/;"	t
Tint	./runtime/mfinal_test.go	/^type Tint int     \/\/ *Tint implements Tinter, interface{}$/;"	t
Tinter	./reflect/all_test.go	/^type Tinter interface {$/;"	t
Tinter	./runtime/mfinal_test.go	/^type Tinter interface {$/;"	t
TinterType	./reflect/all_test.go	/^	var TinterType = TypeOf(new(Tinter)).Elem()$/;"	v
Tintptr	./runtime/mfinal_test.go	/^type Tintptr *int \/\/ assignable to *int$/;"	t
Title	./bytes/bytes.go	/^func Title(s []byte) []byte {$/;"	f
Title	./strings/strings.go	/^func Title(s string) string {$/;"	f
TitleTest	./bytes/bytes_test.go	/^type TitleTest struct {$/;"	t
TitleTests	./bytes/bytes_test.go	/^var TitleTests = []TitleTest{$/;"	v
TitleTests	./strings/strings_test.go	/^var TitleTests = []struct {$/;"	v
Tm1	./reflect/all_test.go	/^type Tm1 struct {$/;"	t
Tm2	./reflect/all_test.go	/^type Tm2 struct {$/;"	t
Tm3	./reflect/all_test.go	/^type Tm3 struct {$/;"	t
Tm4	./reflect/all_test.go	/^type Tm4 struct {$/;"	t
TmpVarCode	./syscall/mksyscall_windows.go	/^func (p *Param) TmpVarCode() string {$/;"	f
TmpVarHelperCode	./syscall/mksyscall_windows.go	/^func (p *Param) TmpVarHelperCode() string {$/;"	f
Tms	./syscall/types_linux.go	/^type Tms C.struct_tms$/;"	t
Tms	./syscall/ztypes_linux_386.go	/^type Tms struct {$/;"	t
Tms	./syscall/ztypes_linux_amd64.go	/^type Tms struct {$/;"	t
Tms	./syscall/ztypes_linux_arm.go	/^type Tms struct {$/;"	t
Tms	./syscall/ztypes_linux_arm64.go	/^type Tms struct {$/;"	t
Tms	./syscall/ztypes_linux_ppc64.go	/^type Tms struct {$/;"	t
Tms	./syscall/ztypes_linux_ppc64le.go	/^type Tms struct {$/;"	t
To	./unicode/letter.go	/^func To(_case int, r rune) rune {$/;"	f
To16	./net/ip.go	/^func (ip IP) To16() IP {$/;"	f
To4	./net/ip.go	/^func (ip IP) To4() IP {$/;"	f
ToEnglishName	./time/export_windows_test.go	/^func ToEnglishName(stdname, dstname string) (string, error) {$/;"	f
ToHTML	./go/doc/comment.go	/^func ToHTML(w io.Writer, text string, words map[string]string) {$/;"	f
ToLower	./bytes/bytes.go	/^func ToLower(s []byte) []byte { return Map(unicode.ToLower, s) }$/;"	f
ToLower	./strings/strings.go	/^func ToLower(s string) string { return Map(unicode.ToLower, s) }$/;"	f
ToLower	./unicode/letter.go	/^func (special SpecialCase) ToLower(r rune) rune {$/;"	f
ToLower	./unicode/letter.go	/^func ToLower(r rune) rune {$/;"	f
ToLowerSpecial	./bytes/bytes.go	/^func ToLowerSpecial(_case unicode.SpecialCase, s []byte) []byte {$/;"	f
ToLowerSpecial	./strings/strings.go	/^func ToLowerSpecial(_case unicode.SpecialCase, s string) string {$/;"	f
ToParams	./syscall/mksyscall_windows.go	/^func (r *Rets) ToParams() []*Param {$/;"	f
ToRDNSequence	./crypto/x509/pkix/pkix.go	/^func (n Name) ToRDNSequence() (ret RDNSequence) {$/;"	f
ToSlash	./path/filepath/path.go	/^func ToSlash(path string) string {$/;"	f
ToText	./go/doc/comment.go	/^func ToText(w io.Writer, text string, indent, preIndent string, width int) {$/;"	f
ToTitle	./bytes/bytes.go	/^func ToTitle(s []byte) []byte { return Map(unicode.ToTitle, s) }$/;"	f
ToTitle	./strings/strings.go	/^func ToTitle(s string) string { return Map(unicode.ToTitle, s) }$/;"	f
ToTitle	./unicode/letter.go	/^func (special SpecialCase) ToTitle(r rune) rune {$/;"	f
ToTitle	./unicode/letter.go	/^func ToTitle(r rune) rune {$/;"	f
ToTitleSpecial	./bytes/bytes.go	/^func ToTitleSpecial(_case unicode.SpecialCase, s []byte) []byte {$/;"	f
ToTitleSpecial	./strings/strings.go	/^func ToTitleSpecial(_case unicode.SpecialCase, s string) string {$/;"	f
ToTitleTests	./bytes/bytes_test.go	/^var ToTitleTests = []TitleTest{$/;"	v
ToUpper	./bytes/bytes.go	/^func ToUpper(s []byte) []byte { return Map(unicode.ToUpper, s) }$/;"	f
ToUpper	./strings/strings.go	/^func ToUpper(s string) string { return Map(unicode.ToUpper, s) }$/;"	f
ToUpper	./unicode/letter.go	/^func (special SpecialCase) ToUpper(r rune) rune {$/;"	f
ToUpper	./unicode/letter.go	/^func ToUpper(r rune) rune {$/;"	f
ToUpperSpecial	./bytes/bytes.go	/^func ToUpperSpecial(_case unicode.SpecialCase, s []byte) []byte {$/;"	f
ToUpperSpecial	./strings/strings.go	/^func ToUpperSpecial(_case unicode.SpecialCase, s string) string {$/;"	f
Token	./cmd/asm/internal/lex/lex.go	/^\/\/ A TokenReader is like a reader, but returns lex tokens of type Token. It also can tell you what$/;"	t
Token	./cmd/asm/internal/lex/lex.go	/^type Token struct {$/;"	t
Token	./encoding/json/stream.go	/^func (dec *Decoder) Token() (Token, error) {$/;"	f
Token	./encoding/json/stream.go	/^type Token interface{}$/;"	t
Token	./encoding/xml/xml.go	/^func (d *Decoder) Token() (t Token, err error) {$/;"	f
Token	./encoding/xml/xml.go	/^type Token interface{}$/;"	t
Token	./fmt/scan.go	/^func (s *ss) Token(skipSpace bool, f func(rune) bool) (tok []byte, err error) {$/;"	f
Token	./go/token/token.go	/^type Token int$/;"	t
Token	./syscall/security_windows.go	/^type Token Handle$/;"	t
TokenReader	./cmd/asm/internal/lex/lex.go	/^type TokenReader interface {$/;"	t
TokenString	./text/scanner/scanner.go	/^func TokenString(tok rune) string {$/;"	f
TokenText	./text/scanner/scanner.go	/^func (s *Scanner) TokenText() string {$/;"	f
Tokenize	./cmd/asm/internal/lex/lex.go	/^func Tokenize(str string) []Token {$/;"	f
Tokenizer	./cmd/asm/internal/lex/tokenizer.go	/^type Tokenizer struct {$/;"	t
Tokenprimarygroup	./syscall/security_windows.go	/^type Tokenprimarygroup struct {$/;"	t
Tokenuser	./syscall/security_windows.go	/^type Tokenuser struct {$/;"	t
Top	./encoding/json/decode_test.go	/^type Top struct {$/;"	t
TotalDist	./reflect/all_test.go	/^func (p Point) TotalDist(points ...Point) int {$/;"	f
Tptr	./cmd/compile/internal/gc/go.go	/^var Tptr int \/\/ either TPTR32 or TPTR64$/;"	v
Trace	./net/http/pprof/pprof.go	/^func Trace(w http.ResponseWriter, r *http.Request) {$/;"	f
TrackingWriter	./cmd/go/list.go	/^type TrackingWriter struct {$/;"	t
Translate	./cmd/cgo/gcc.go	/^func (p *Package) Translate(f *File) {$/;"	f
TranslateAccountName	./syscall/security_windows.go	/^func TranslateAccountName(username string, from, to uint32, initSize int) (string, error) {$/;"	f
TranslateName	./syscall/zsyscall_windows.go	/^func TranslateName(accName *uint16, accNameFormat uint32, desiredNameFormat uint32, translatedName *uint16, nSize *uint32) (err error) {$/;"	f
TransmitFile	./syscall/zsyscall_windows.go	/^func TransmitFile(s Handle, handle Handle, bytesToWrite uint32, bytsPerSend uint32, overlapped *Overlapped, transmitFileBuf *TransmitFileBuffers, flags uint32) (err error) {$/;"	f
TransmitFileBuffers	./syscall/ztypes_windows.go	/^type TransmitFileBuffers struct {$/;"	t
Transport	./net/http/transport.go	/^type Transport struct {$/;"	t
TrapCause	./syscall/syscall_bsd.go	/^func (w WaitStatus) TrapCause() int { return -1 }$/;"	f
TrapCause	./syscall/syscall_linux.go	/^func (w WaitStatus) TrapCause() int {$/;"	f
TrapCause	./syscall/syscall_nacl.go	/^func (w WaitStatus) TrapCause() int     { return 0 }$/;"	f
TrapCause	./syscall/syscall_solaris.go	/^func (w WaitStatus) TrapCause() int { return -1 }$/;"	f
TrapCause	./syscall/syscall_windows.go	/^func (w WaitStatus) TrapCause() int { return -1 }$/;"	f
Tree	./text/template/exec_test.go	/^type Tree struct {$/;"	t
Tree	./text/template/parse/parse.go	/^type Tree struct {$/;"	t
Trim	./bytes/bytes.go	/^func Trim(s []byte, cutset string) []byte {$/;"	f
Trim	./strings/strings.go	/^func Trim(s string, cutset string) string {$/;"	f
TrimBytes	./net/textproto/textproto.go	/^func TrimBytes(b []byte) []byte {$/;"	f
TrimFunc	./bytes/bytes.go	/^func TrimFunc(s []byte, f func(r rune) bool) []byte {$/;"	f
TrimFunc	./strings/strings.go	/^func TrimFunc(s string, f func(rune) bool) string {$/;"	f
TrimFuncTest	./bytes/bytes_test.go	/^type TrimFuncTest struct {$/;"	t
TrimLeft	./bytes/bytes.go	/^func TrimLeft(s []byte, cutset string) []byte {$/;"	f
TrimLeft	./strings/strings.go	/^func TrimLeft(s string, cutset string) string {$/;"	f
TrimLeftFunc	./bytes/bytes.go	/^func TrimLeftFunc(s []byte, f func(r rune) bool) []byte {$/;"	f
TrimLeftFunc	./strings/strings.go	/^func TrimLeftFunc(s string, f func(rune) bool) string {$/;"	f
TrimPrefix	./bytes/bytes.go	/^func TrimPrefix(s, prefix []byte) []byte {$/;"	f
TrimPrefix	./strings/strings.go	/^func TrimPrefix(s, prefix string) string {$/;"	f
TrimRight	./bytes/bytes.go	/^func TrimRight(s []byte, cutset string) []byte {$/;"	f
TrimRight	./strings/strings.go	/^func TrimRight(s string, cutset string) string {$/;"	f
TrimRightFunc	./bytes/bytes.go	/^func TrimRightFunc(s []byte, f func(r rune) bool) []byte {$/;"	f
TrimRightFunc	./strings/strings.go	/^func TrimRightFunc(s string, f func(rune) bool) string {$/;"	f
TrimSpace	./bytes/bytes.go	/^func TrimSpace(s []byte) []byte {$/;"	f
TrimSpace	./strings/strings.go	/^func TrimSpace(s string) string {$/;"	f
TrimString	./net/textproto/textproto.go	/^func TrimString(s string) string {$/;"	f
TrimSuffix	./bytes/bytes.go	/^func TrimSuffix(s, suffix []byte) []byte {$/;"	f
TrimSuffix	./strings/strings.go	/^func TrimSuffix(s, suffix string) string {$/;"	f
TrimTest	./bytes/bytes_test.go	/^type TrimTest struct {$/;"	t
TrueFalse	./text/template/exec_test.go	/^func (u *U) TrueFalse(b bool) string {$/;"	f
Trunc	./math/floor.go	/^func Trunc(x float64) float64$/;"	f
Truncate	./bytes/buffer.go	/^func (b *Buffer) Truncate(n int) {$/;"	f
Truncate	./os/file_plan9.go	/^func (f *File) Truncate(size int64) error {$/;"	f
Truncate	./os/file_plan9.go	/^func Truncate(name string, size int64) error {$/;"	f
Truncate	./os/file_posix.go	/^func (f *File) Truncate(size int64) error {$/;"	f
Truncate	./os/file_unix.go	/^func Truncate(name string, size int64) error {$/;"	f
Truncate	./os/file_windows.go	/^func Truncate(name string, size int64) error {$/;"	f
Truncate	./syscall/fs_nacl.go	/^func Truncate(path string, length int64) error {$/;"	f
Truncate	./syscall/zsyscall_darwin_386.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_darwin_amd64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_darwin_arm.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_darwin_arm64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_dragonfly_amd64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_freebsd_386.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_freebsd_amd64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_freebsd_arm.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_linux_386.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_linux_amd64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_linux_arm.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_linux_arm64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_linux_ppc64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_linux_ppc64le.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_netbsd_386.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_netbsd_amd64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_netbsd_arm.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_openbsd_386.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_openbsd_amd64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_openbsd_arm.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./syscall/zsyscall_solaris_amd64.go	/^func Truncate(path string, length int64) (err error) {$/;"	f
Truncate	./time/time.go	/^func (t Time) Truncate(d Duration) Time {$/;"	f
TruncateWriter	./testing/iotest/writer.go	/^func TruncateWriter(w io.Writer, n int64) io.Writer {$/;"	f
TryReadBit	./compress/bzip2/bit_reader.go	/^func (br *bitReader) TryReadBit() (bit byte, ok bool) {$/;"	f
TryRecv	./reflect/value.go	/^func (v Value) TryRecv() (x Value, ok bool) {$/;"	f
TrySend	./reflect/value.go	/^func (v Value) TrySend(x Value) bool {$/;"	f
Tscalar	./reflect/all_test.go	/^	var Tscalar, Tint64, Tptr, Tscalarptr, Tptrscalar, Tbigptrscalar Type$/;"	v
Tsmallp	./reflect/all_test.go	/^type Tsmallp byte$/;"	t
Tsmallv	./reflect/all_test.go	/^type Tsmallv byte$/;"	t
Tstring	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tstring string; return Tstring(strconv.Itoa(i)) },$/;"	t
Tstruct	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tstruct struct{ V [1]int }; return Tstruct{[1]int{i}} },$/;"	t
Tstruct	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tstruct struct{ V []int }; return Tstruct{[]int{i}} },$/;"	t
Tstruct	./reflect/all_test.go	/^			value:      func(i int) interface{} { type Tstruct struct{ V int }; return Tstruct{i} },$/;"	t
TstructUV	./reflect/all_test.go	/^				type TstructUV struct {$/;"	t
TstructUV	./reflect/all_test.go	/^			value:      func(i int) interface{} { type TstructUV struct{ U, V int }; return TstructUV{i, i} },$/;"	t
Tuple	./go/types/type.go	/^type Tuple struct {$/;"	t
TurkishCase	./unicode/casetables.go	/^var TurkishCase SpecialCase = _TurkishCase$/;"	v
TwoLines	./fmt/scan_test.go	/^type TwoLines string$/;"	t
Twoer	./cmd/api/testdata/src/pkg/p2/p2.go	/^type Twoer interface {$/;"	t
Twordp	./reflect/all_test.go	/^type Twordp uintptr$/;"	t
Twordv	./reflect/all_test.go	/^type Twordv uintptr$/;"	t
Tx	./database/sql/driver/driver.go	/^type Tx interface {$/;"	t
Tx	./database/sql/sql.go	/^type Tx struct {$/;"	t
Typ	./go/types/universe.go	/^var Typ = []*Basic{$/;"	v
Type	./builtin/builtin.go	/^type Type int$/;"	t
Type	./cmd/cgo/gcc.go	/^func (c *typeConv) Type(dtype dwarf.Type, pos token.Pos) *Type {$/;"	f
Type	./cmd/cgo/main.go	/^type Type struct {$/;"	t
Type	./cmd/compile/internal/gc/go.go	/^type Type struct {$/;"	t
Type	./cmd/compile/internal/gc/syntax.go	/^	OCLOSURE         \/\/ func Type { Body } (func literal)$/;"	f
Type	./cmd/fix/typecheck.go	/^type Type struct {$/;"	t
Type	./debug/dwarf/type.go	/^func (d *Data) Type(off Offset) (Type, error) {$/;"	f
Type	./debug/dwarf/type.go	/^type Type interface {$/;"	t
Type	./debug/elf/elf.go	/^type Type uint16$/;"	t
Type	./debug/macho/macho.go	/^type Type uint32$/;"	t
Type	./encoding/gob/decgen.go	/^type Type struct {$/;"	t
Type	./encoding/gob/encgen.go	/^type Type struct {$/;"	t
Type	./go/doc/doc.go	/^type Type struct {$/;"	t
Type	./go/types/object.go	/^func (obj *object) Type() Type          { return obj.typ }$/;"	f
Type	./go/types/selection.go	/^func (s *Selection) Type() Type {$/;"	f
Type	./go/types/type.go	/^type Type interface {$/;"	t
Type	./net/internal/socktest/switch.go	/^func (c Cookie) Type() int { return int(c << 16 >> 32) }$/;"	f
Type	./reflect/export_test.go	/^func FuncLayout(t Type, rcvr Type) (frametype Type, argSize, retOffset uintptr, stack []byte, gc []byte, ptrs bool) {$/;"	t
Type	./reflect/type.go	/^type Type interface {$/;"	t
Type	./reflect/value.go	/^func (v Value) Type() Type {$/;"	f
Type	./text/template/parse/node.go	/^func (d *DotNode) Type() NodeType {$/;"	f
Type	./text/template/parse/node.go	/^func (e *elseNode) Type() NodeType {$/;"	f
Type	./text/template/parse/node.go	/^func (n *NilNode) Type() NodeType {$/;"	f
Type	./text/template/parse/node.go	/^func (t NodeType) Type() NodeType {$/;"	f
Type0	./encoding/gob/encoder_test.go	/^	type Type0 struct {$/;"	t
Type1	./builtin/builtin.go	/^type Type1 int$/;"	t
Type1	./encoding/gob/encoder_test.go	/^	type Type1 struct {$/;"	t
Type2	./encoding/gob/encoder_test.go	/^	type Type2 struct {$/;"	t
Type3	./encoding/gob/encoder_test.go	/^	type Type3 struct {$/;"	t
Type4	./encoding/gob/encoder_test.go	/^	type Type4 struct {$/;"	t
Type5	./encoding/gob/encoder_test.go	/^	type Type5 struct {$/;"	t
Type6	./encoding/gob/encoder_test.go	/^	type Type6 struct {$/;"	t
Type7	./encoding/gob/encoder_test.go	/^	type Type7 struct {$/;"	t
TypeAndValue	./go/types/api.go	/^type TypeAndValue struct {$/;"	t
TypeAssertionError	./runtime/error.go	/^type TypeAssertionError struct {$/;"	t
TypeByExtension	./mime/type.go	/^func TypeByExtension(ext string) string {$/;"	f
TypeConfig	./cmd/fix/typecheck.go	/^type TypeConfig struct {$/;"	t
TypeID	./runtime/race/testdata/regression_test.go	/^type TypeID int$/;"	t
TypeLinks	./reflect/export_test.go	/^func TypeLinks() []string {$/;"	f
TypeList	./cmd/compile/internal/gc/align.go	/^type TypeList struct {$/;"	t
TypeName	./go/types/object.go	/^type TypeName struct {$/;"	t
TypeOf	./go/types/api.go	/^func (info *Info) TypeOf(e ast.Expr) Type {$/;"	f
TypeOf	./reflect/type.go	/^func TypeOf(i interface{}) Type {$/;"	f
TypePairList	./cmd/compile/internal/gc/subr.go	/^type TypePairList struct {$/;"	t
TypeRepr	./cmd/cgo/main.go	/^type TypeRepr struct {$/;"	t
TypeString	./go/types/typestring.go	/^func TypeString(typ Type, qf Qualifier) string {$/;"	f
Typedef	./cmd/compile/internal/gc/go.go	/^type Typedef struct {$/;"	t
TypedefType	./debug/dwarf/type.go	/^type TypedefType struct {$/;"	t
Types	./cmd/compile/internal/gc/go.go	/^var Types [NTYPE]*Type$/;"	v
U1	./go/doc/testdata/e.go	/^type U1 struct {$/;"	t
U1	./math/big/arith_amd64.s	/^U1:	\/\/ n >= 0$/;"	l
U2	./go/doc/testdata/e.go	/^type U2 struct {$/;"	t
U2	./math/big/arith_amd64.s	/^U2:	\/\/ n >= 0$/;"	l
U3	./go/doc/testdata/e.go	/^type U3 struct {$/;"	t
U3	./math/big/arith_amd64.s	/^U3:	\/\/ n >= 0$/;"	l
U4	./go/doc/testdata/e.go	/^type U4 struct {$/;"	t
U4	./math/big/arith_amd64.s	/^U4:	\/\/ n >= 0$/;"	l
UDPAddr	./net/udpsock.go	/^type UDPAddr struct {$/;"	t
UDPConn	./net/udpsock_plan9.go	/^type UDPConn struct {$/;"	t
UDPConn	./net/udpsock_posix.go	/^type UDPConn struct {$/;"	t
UI	./cmd/pprof/internal/plugin/plugin.go	/^type UI interface {$/;"	t
URL	./cmd/api/testdata/src/pkg/p1/p1.go	/^type URL struct{}$/;"	t
URL	./net/url/url.go	/^type URL struct {$/;"	t
URLEncoding	./encoding/base64/base64.go	/^var URLEncoding = NewEncoding(encodeURL)$/;"	v
URLQueryEscaper	./html/template/escape.go	/^func URLQueryEscaper(args ...interface{}) string {$/;"	f
URLQueryEscaper	./text/template/funcs.go	/^func URLQueryEscaper(args ...interface{}) string {$/;"	f
URLTest	./net/url/url_test.go	/^type URLTest struct {$/;"	t
USEABLE	./runtime/sys_linux_386.s	/^#define USEABLE 0x40$/;"	d
UTC	./time/time.go	/^func (t Time) UTC() Time {$/;"	f
UTC	./time/zoneinfo.go	/^var UTC *Location = &utcLoc$/;"	v
UTF16FromString	./syscall/syscall_windows.go	/^func UTF16FromString(s string) ([]uint16, error) {$/;"	f
UTF16PtrFromString	./syscall/syscall_windows.go	/^func UTF16PtrFromString(s string) (*uint16, error) {$/;"	f
UTF16ToString	./syscall/syscall_windows.go	/^func UTF16ToString(s []uint16) string {$/;"	f
UcharType	./debug/dwarf/type.go	/^type UcharType struct {$/;"	t
Ucontext	./runtime/defs1_linux.go	/^type Ucontext C.ucontext_t$/;"	t
Ucontext	./runtime/defs2_linux.go	/^type Ucontext C.struct_ucontext$/;"	t
Ucontext	./runtime/defs3_linux.go	/^type Ucontext C.struct_ucontext$/;"	t
Ucontext	./runtime/defs_arm_linux.go	/^type Ucontext C.struct_ucontext$/;"	t
Ucontext	./runtime/defs_darwin.go	/^type Ucontext C.struct_ucontext$/;"	t
Ucontext	./runtime/defs_dragonfly.go	/^type Ucontext C.ucontext_t$/;"	t
Ucontext	./runtime/defs_freebsd.go	/^type Ucontext C.ucontext_t$/;"	t
Ucontext	./runtime/defs_solaris.go	/^type Ucontext C.ucontext_t$/;"	t
UcontextT	./runtime/defs_netbsd.go	/^type UcontextT C.ucontext_t$/;"	t
Ucred	./syscall/types_linux.go	/^type Ucred C.struct_ucred$/;"	t
Ucred	./syscall/ztypes_linux_386.go	/^type Ucred struct {$/;"	t
Ucred	./syscall/ztypes_linux_amd64.go	/^type Ucred struct {$/;"	t
Ucred	./syscall/ztypes_linux_arm.go	/^type Ucred struct {$/;"	t
Ucred	./syscall/ztypes_linux_arm64.go	/^type Ucred struct {$/;"	t
Ucred	./syscall/ztypes_linux_ppc64.go	/^type Ucred struct {$/;"	t
Ucred	./syscall/ztypes_linux_ppc64le.go	/^type Ucred struct {$/;"	t
Uint	./flag/flag.go	/^func (f *FlagSet) Uint(name string, value uint, usage string) *uint {$/;"	f
Uint	./flag/flag.go	/^func Uint(name string, value uint, usage string) *uint {$/;"	f
Uint	./reflect/value.go	/^func (v Value) Uint() uint64 {$/;"	f
Uint16	./encoding/binary/binary.go	/^func (bigEndian) Uint16(b []byte) uint16 { return uint16(b[1]) | uint16(b[0])<<8 }$/;"	f
Uint16	./encoding/binary/binary.go	/^func (littleEndian) Uint16(b []byte) uint16 { return uint16(b[0]) | uint16(b[1])<<8 }$/;"	f
Uint32	./encoding/binary/binary.go	/^func (bigEndian) Uint32(b []byte) uint32 {$/;"	f
Uint32	./encoding/binary/binary.go	/^func (littleEndian) Uint32(b []byte) uint32 {$/;"	f
Uint32	./math/rand/rand.go	/^func (r *Rand) Uint32() uint32 { return uint32(r.Int63() >> 31) }$/;"	f
Uint32	./math/rand/rand.go	/^func Uint32() uint32 { return globalRand.Uint32() }$/;"	f
Uint64	./cmd/compile/internal/big/float.go	/^func (x *Float) Uint64() (uint64, Accuracy) {$/;"	f
Uint64	./cmd/compile/internal/big/int.go	/^func (x *Int) Uint64() uint64 {$/;"	f
Uint64	./encoding/binary/binary.go	/^func (bigEndian) Uint64(b []byte) uint64 {$/;"	f
Uint64	./encoding/binary/binary.go	/^func (littleEndian) Uint64(b []byte) uint64 {$/;"	f
Uint64	./flag/flag.go	/^func (f *FlagSet) Uint64(name string, value uint64, usage string) *uint64 {$/;"	f
Uint64	./flag/flag.go	/^func Uint64(name string, value uint64, usage string) *uint64 {$/;"	f
Uint64	./math/big/float.go	/^func (x *Float) Uint64() (uint64, Accuracy) {$/;"	f
Uint64	./math/big/int.go	/^func (x *Int) Uint64() uint64 {$/;"	f
Uint64	./math/rand/zipf.go	/^func (z *Zipf) Uint64() uint64 {$/;"	f
Uint64Val	./go/constant/value.go	/^func Uint64Val(x Value) (uint64, bool) {$/;"	f
Uint64Var	./flag/flag.go	/^func (f *FlagSet) Uint64Var(p *uint64, name string, value uint64, usage string) {$/;"	f
Uint64Var	./flag/flag.go	/^func Uint64Var(p *uint64, name string, value uint64, usage string) {$/;"	f
UintFactory	./go/doc/testdata/b.go	/^func UintFactory() uint {}$/;"	f
UintType	./debug/dwarf/type.go	/^type UintType struct {$/;"	t
UintVar	./flag/flag.go	/^func (f *FlagSet) UintVar(p *uint, name string, value uint, usage string) {$/;"	f
UintVar	./flag/flag.go	/^func UintVar(p *uint, name string, value uint, usage string) {$/;"	f
Uintreg	./runtime/export_test.go	/^type Uintreg uintreg$/;"	t
Umagic	./cmd/compile/internal/gc/subr.go	/^func Umagic(m *Magic) {$/;"	f
Umask	./syscall/zsyscall_darwin_386.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_darwin_amd64.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_darwin_arm.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_darwin_arm64.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_dragonfly_amd64.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_freebsd_386.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_freebsd_amd64.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_freebsd_arm.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_linux_386.go	/^func Umask(mask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_linux_amd64.go	/^func Umask(mask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_linux_arm.go	/^func Umask(mask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_linux_arm64.go	/^func Umask(mask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_linux_ppc64.go	/^func Umask(mask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_linux_ppc64le.go	/^func Umask(mask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_netbsd_386.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_netbsd_amd64.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_netbsd_arm.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_openbsd_386.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_openbsd_amd64.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_openbsd_arm.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Umask	./syscall/zsyscall_solaris_amd64.go	/^func Umask(newmask int) (oldmask int) {$/;"	f
Uname	./syscall/zsyscall_linux_386.go	/^func Uname(buf *Utsname) (err error) {$/;"	f
Uname	./syscall/zsyscall_linux_amd64.go	/^func Uname(buf *Utsname) (err error) {$/;"	f
Uname	./syscall/zsyscall_linux_arm.go	/^func Uname(buf *Utsname) (err error) {$/;"	f
Uname	./syscall/zsyscall_linux_arm64.go	/^func Uname(buf *Utsname) (err error) {$/;"	f
Uname	./syscall/zsyscall_linux_ppc64.go	/^func Uname(buf *Utsname) (err error) {$/;"	f
Uname	./syscall/zsyscall_linux_ppc64le.go	/^func Uname(buf *Utsname) (err error) {$/;"	f
Unary	./cmd/compile/internal/big/nat.go	/^\/\/   func (z *T) Unary(x *T) *T        \/\/ z = op x$/;"	f
Unary	./math/big/nat.go	/^\/\/   func (z *T) Unary(x *T) *T        \/\/ z = op x$/;"	f
UnaryOp	./go/constant/value.go	/^func UnaryOp(op token.Token, y Value, prec uint) Value {$/;"	f
Undelete	./syscall/zsyscall_darwin_386.go	/^func Undelete(path string) (err error) {$/;"	f
Undelete	./syscall/zsyscall_darwin_amd64.go	/^func Undelete(path string) (err error) {$/;"	f
Undelete	./syscall/zsyscall_darwin_arm.go	/^func Undelete(path string) (err error) {$/;"	f
Undelete	./syscall/zsyscall_darwin_arm64.go	/^func Undelete(path string) (err error) {$/;"	f
Undelete	./syscall/zsyscall_dragonfly_amd64.go	/^func Undelete(path string) (err error) {$/;"	f
Undelete	./syscall/zsyscall_freebsd_386.go	/^func Undelete(path string) (err error) {$/;"	f
Undelete	./syscall/zsyscall_freebsd_amd64.go	/^func Undelete(path string) (err error) {$/;"	f
Undelete	./syscall/zsyscall_freebsd_arm.go	/^func Undelete(path string) (err error) {$/;"	f
Underlying	./go/types/type.go	/^func (t *Array) Underlying() Type     { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Basic) Underlying() Type     { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Chan) Underlying() Type      { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Interface) Underlying() Type { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Map) Underlying() Type       { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Named) Underlying() Type     { return t.underlying }$/;"	f
Underlying	./go/types/type.go	/^func (t *Pointer) Underlying() Type   { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Signature) Underlying() Type { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Slice) Underlying() Type     { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Struct) Underlying() Type    { return t }$/;"	f
Underlying	./go/types/type.go	/^func (t *Tuple) Underlying() Type     { return t }$/;"	f
UnescapeString	./html/escape.go	/^func UnescapeString(s string) string {$/;"	f
UnexpT	./reflect/all_test.go	/^type UnexpT struct {$/;"	t
Unexported	./encoding/binary/binary_test.go	/^type Unexported struct {$/;"	t
UnexportedEncodingTagTest	./cmd/vet/testdata/structtag.go	/^type UnexportedEncodingTagTest struct {$/;"	t
UnhandledCriticalExtension	./crypto/x509/x509.go	/^type UnhandledCriticalExtension struct{}$/;"	t
UnhandledCriticalExtension	./crypto/x509/x509_test.go	/^			t.Fatalf("Error was %#v, but wanted one of type UnhandledCriticalExtension", err)$/;"	t
Uniform	./image/names.go	/^type Uniform struct {$/;"	t
Union	./image/geom.go	/^func (r Rectangle) Union(s Rectangle) Rectangle {$/;"	f
Uniqp	./cmd/compile/internal/gc/popt.go	/^func Uniqp(r *Flow) *Flow {$/;"	f
Uniqs	./cmd/compile/internal/gc/popt.go	/^func Uniqs(r *Flow) *Flow {$/;"	f
Universe	./encoding/xml/marshal_test.go	/^type Universe struct {$/;"	t
Unix	./syscall/syscall.go	/^func (ts *Timespec) Unix() (sec int64, nsec int64) {$/;"	f
Unix	./syscall/syscall.go	/^func (tv *Timeval) Unix() (sec int64, nsec int64) {$/;"	f
Unix	./time/time.go	/^func (t Time) Unix() int64 {$/;"	f
Unix	./time/time.go	/^func Unix(sec int64, nsec int64) Time {$/;"	f
UnixAddr	./net/unixsock.go	/^type UnixAddr struct {$/;"	t
UnixConn	./net/unixsock_plan9.go	/^type UnixConn struct {$/;"	t
UnixConn	./net/unixsock_posix.go	/^type UnixConn struct {$/;"	t
UnixCredentials	./syscall/sockcmsg_linux.go	/^func UnixCredentials(ucred *Ucred) []byte {$/;"	f
UnixListener	./net/unixsock_plan9.go	/^type UnixListener struct {$/;"	t
UnixListener	./net/unixsock_posix.go	/^type UnixListener struct {$/;"	t
UnixNano	./time/time.go	/^func (t Time) UnixNano() int64 {$/;"	f
UnixRights	./syscall/sockcmsg_unix.go	/^func UnixRights(fds ...int) []byte {$/;"	f
UnkeyedLiteral	./cmd/vet/whitelist/whitelist.go	/^var UnkeyedLiteral = map[string]bool{$/;"	v
UnknownAuthorityError	./crypto/x509/verify.go	/^type UnknownAuthorityError struct {$/;"	t
UnknownFileError	./debug/gosym/symtab.go	/^type UnknownFileError string$/;"	t
UnknownLineError	./debug/gosym/symtab.go	/^type UnknownLineError struct {$/;"	t
UnknownNetworkError	./net/net.go	/^type UnknownNetworkError string$/;"	t
UnknownUserError	./os/user/lookup.go	/^\/\/ returned error is of type UnknownUserError.$/;"	t
UnknownUserError	./os/user/user.go	/^type UnknownUserError string$/;"	t
UnknownUserIdError	./os/user/lookup.go	/^\/\/ returned error is of type UnknownUserIdError.$/;"	t
UnknownUserIdError	./os/user/user.go	/^type UnknownUserIdError int$/;"	t
Unlink	./container/ring/ring.go	/^func (r *Ring) Unlink(n int) *Ring {$/;"	f
Unlink	./syscall/fs_nacl.go	/^func Unlink(path string) error {$/;"	f
Unlink	./syscall/syscall_linux.go	/^func Unlink(path string) error {$/;"	f
Unlink	./syscall/syscall_windows.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_darwin_386.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_darwin_amd64.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_darwin_arm.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_darwin_arm64.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_dragonfly_amd64.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_freebsd_386.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_freebsd_amd64.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_freebsd_arm.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_netbsd_386.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_netbsd_amd64.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_netbsd_arm.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_openbsd_386.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_openbsd_amd64.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_openbsd_arm.go	/^func Unlink(path string) (err error) {$/;"	f
Unlink	./syscall/zsyscall_solaris_amd64.go	/^func Unlink(path string) (err error) {$/;"	f
Unlinkat	./syscall/syscall_linux.go	/^func Unlinkat(dirfd int, path string) error {$/;"	f
Unlock	./cmd/vet/testdata/copylock_func.go	/^func (*CustomLock) Unlock() {}$/;"	f
Unlock	./net/http/transport.go	/^func (fakeLocker) Unlock() {}$/;"	f
Unlock	./sync/mutex.go	/^func (m *Mutex) Unlock() {$/;"	f
Unlock	./sync/rwmutex.go	/^func (r *rlocker) Unlock() { (*RWMutex)(r).RUnlock() }$/;"	f
Unlock	./sync/rwmutex.go	/^func (rw *RWMutex) Unlock() {$/;"	f
UnlockOSThread	./runtime/proc1.go	/^func UnlockOSThread() {$/;"	f
UnmapViewOfFile	./syscall/zsyscall_windows.go	/^func UnmapViewOfFile(addr uintptr) (err error) {$/;"	f
Unmarshal	./crypto/elliptic/elliptic.go	/^func Unmarshal(curve Curve, data []byte) (x, y *big.Int) {$/;"	f
Unmarshal	./encoding/asn1/asn1.go	/^func Unmarshal(b []byte, val interface{}) (rest []byte, err error) {$/;"	f
Unmarshal	./encoding/json/decode.go	/^func Unmarshal(data []byte, v interface{}) error {$/;"	f
Unmarshal	./encoding/xml/read.go	/^func Unmarshal(data []byte, v interface{}) error {$/;"	f
UnmarshalBinary	./encoding/gob/example_encdec_test.go	/^func (v *Vector) UnmarshalBinary(data []byte) error {$/;"	f
UnmarshalBinary	./encoding/gob/gobencdec_test.go	/^func (g *BinaryGobber) UnmarshalBinary(data []byte) error {$/;"	f
UnmarshalBinary	./encoding/gob/gobencdec_test.go	/^func (v *BinaryValueGobber) UnmarshalBinary(data []byte) error {$/;"	f
UnmarshalBinary	./time/time.go	/^func (t *Time) UnmarshalBinary(data []byte) error {$/;"	f
UnmarshalDir	./syscall/dir_plan9.go	/^func UnmarshalDir(b []byte) (*Dir, error) {$/;"	f
UnmarshalError	./encoding/xml/read.go	/^type UnmarshalError string$/;"	t
UnmarshalFieldError	./encoding/json/decode.go	/^type UnmarshalFieldError struct {$/;"	t
UnmarshalJSON	./cmd/compile/internal/big/int.go	/^func (z *Int) UnmarshalJSON(text []byte) error {$/;"	f
UnmarshalJSON	./encoding/json/decode_test.go	/^func (t *Time3339) UnmarshalJSON(b []byte) error {$/;"	f
UnmarshalJSON	./encoding/json/decode_test.go	/^func (u *unmarshaler) UnmarshalJSON(b []byte) error {$/;"	f
UnmarshalJSON	./encoding/json/encode_test.go	/^func (r *Ref) UnmarshalJSON([]byte) error {$/;"	f
UnmarshalJSON	./encoding/json/stream.go	/^func (m *RawMessage) UnmarshalJSON(data []byte) error {$/;"	f
UnmarshalJSON	./math/big/int.go	/^func (z *Int) UnmarshalJSON(text []byte) error {$/;"	f
UnmarshalJSON	./time/time.go	/^func (t *Time) UnmarshalJSON(data []byte) (err error) {$/;"	f
UnmarshalText	./cmd/compile/internal/big/int.go	/^func (z *Int) UnmarshalText(text []byte) error {$/;"	f
UnmarshalText	./cmd/compile/internal/big/rat.go	/^func (r *Rat) UnmarshalText(text []byte) error {$/;"	f
UnmarshalText	./encoding/gob/gobencdec_test.go	/^func (g *TextGobber) UnmarshalText(data []byte) error {$/;"	f
UnmarshalText	./encoding/gob/gobencdec_test.go	/^func (v *TextValueGobber) UnmarshalText(data []byte) error {$/;"	f
UnmarshalText	./encoding/json/decode_test.go	/^func (u *unmarshalerText) UnmarshalText(b []byte) error {$/;"	f
UnmarshalText	./encoding/json/encode_test.go	/^func (r *RefText) UnmarshalText([]byte) error {$/;"	f
UnmarshalText	./math/big/int.go	/^func (z *Int) UnmarshalText(text []byte) error {$/;"	f
UnmarshalText	./math/big/rat.go	/^func (r *Rat) UnmarshalText(text []byte) error {$/;"	f
UnmarshalText	./net/ip.go	/^func (ip *IP) UnmarshalText(text []byte) error {$/;"	f
UnmarshalText	./time/time.go	/^func (t *Time) UnmarshalText(data []byte) (err error) {$/;"	f
UnmarshalTypeError	./encoding/json/decode.go	/^type UnmarshalTypeError struct {$/;"	t
UnmarshalWithParams	./encoding/asn1/asn1.go	/^func UnmarshalWithParams(b []byte, val interface{}, params string) (rest []byte, err error) {$/;"	f
UnmarshalXML	./encoding/xml/read_test.go	/^func (m *MyCharData) UnmarshalXML(d *Decoder, start StartElement) error {$/;"	f
UnmarshalXMLAttr	./encoding/xml/read_test.go	/^func (m *MyAttr) UnmarshalXMLAttr(attr Attr) error {$/;"	f
UnmarshalXMLAttr	./encoding/xml/read_test.go	/^func (m *MyCharData) UnmarshalXMLAttr(attr Attr) error {$/;"	f
Unmarshaler	./encoding/json/decode.go	/^type Unmarshaler interface {$/;"	t
Unmarshaler	./encoding/xml/read.go	/^type Unmarshaler interface {$/;"	t
UnmarshalerAttr	./encoding/xml/read.go	/^type UnmarshalerAttr interface {$/;"	t
Unmount	./syscall/syscall_plan9.go	/^func Unmount(name, old string) (err error) {$/;"	f
Unmount	./syscall/zsyscall_darwin_386.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_darwin_amd64.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_darwin_arm.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_darwin_arm64.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_dragonfly_amd64.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_freebsd_386.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_freebsd_amd64.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_freebsd_arm.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_linux_386.go	/^func Unmount(target string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_linux_amd64.go	/^func Unmount(target string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_linux_arm.go	/^func Unmount(target string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_linux_arm64.go	/^func Unmount(target string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_linux_ppc64.go	/^func Unmount(target string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_linux_ppc64le.go	/^func Unmount(target string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_netbsd_386.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_netbsd_amd64.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_netbsd_arm.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_openbsd_386.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_openbsd_amd64.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unmount	./syscall/zsyscall_openbsd_arm.go	/^func Unmount(path string, flags int) (err error) {$/;"	f
Unpack	./net/dnsmsg.go	/^func (dns *dnsMsg) Unpack(msg []byte) bool {$/;"	f
Unquote	./strconv/quote.go	/^func Unquote(s string) (t string, err error) {$/;"	f
UnquoteChar	./strconv/quote.go	/^func UnquoteChar(s string, quote byte) (value rune, multibyte bool, tail string, err error) {$/;"	f
UnquoteUsage	./flag/flag.go	/^func UnquoteUsage(flag *Flag) (name string, usage string) {$/;"	f
UnreadByte	./bufio/bufio.go	/^func (b *Reader) UnreadByte() error {$/;"	f
UnreadByte	./bytes/buffer.go	/^func (b *Buffer) UnreadByte() error {$/;"	f
UnreadByte	./bytes/reader.go	/^func (r *Reader) UnreadByte() error {$/;"	f
UnreadByte	./cmd/compile/internal/big/intconv.go	/^func (r byteReader) UnreadByte() error {$/;"	f
UnreadByte	./math/big/intconv.go	/^func (r byteReader) UnreadByte() error {$/;"	f
UnreadByte	./strings/reader.go	/^func (r *Reader) UnreadByte() error {$/;"	f
UnreadRune	./bufio/bufio.go	/^func (b *Reader) UnreadRune() error {$/;"	f
UnreadRune	./bytes/buffer.go	/^func (b *Buffer) UnreadRune() error {$/;"	f
UnreadRune	./bytes/reader.go	/^func (r *Reader) UnreadRune() error {$/;"	f
UnreadRune	./fmt/scan.go	/^func (s *ss) UnreadRune() error {$/;"	f
UnreadRune	./strings/reader.go	/^func (r *Reader) UnreadRune() error {$/;"	f
UnreadRuneErrorTests	./bytes/reader_test.go	/^var UnreadRuneErrorTests = []struct {$/;"	v
UnreadRuneErrorTests	./strings/strings_test.go	/^var UnreadRuneErrorTests = []struct {$/;"	v
UnsafeAddr	./reflect/value.go	/^func (v Value) UnsafeAddr() uintptr {$/;"	f
UnsafePointerPrintfTest	./cmd/vet/testdata/print.go	/^func UnsafePointerPrintfTest() {$/;"	f
Unsetenv	./os/env.go	/^func Unsetenv(key string) error {$/;"	f
Unsetenv	./syscall/env_plan9.go	/^func Unsetenv(key string) error {$/;"	f
Unsetenv	./syscall/env_unix.go	/^func Unsetenv(key string) error {$/;"	f
Unsetenv	./syscall/env_windows.go	/^func Unsetenv(key string) error {$/;"	f
Unshare	./syscall/zsyscall_linux_386.go	/^func Unshare(flags int) (err error) {$/;"	f
Unshare	./syscall/zsyscall_linux_amd64.go	/^func Unshare(flags int) (err error) {$/;"	f
Unshare	./syscall/zsyscall_linux_arm.go	/^func Unshare(flags int) (err error) {$/;"	f
Unshare	./syscall/zsyscall_linux_arm64.go	/^func Unshare(flags int) (err error) {$/;"	f
Unshare	./syscall/zsyscall_linux_ppc64.go	/^func Unshare(flags int) (err error) {$/;"	f
Unshare	./syscall/zsyscall_linux_ppc64le.go	/^func Unshare(flags int) (err error) {$/;"	f
UnspecifiedType	./debug/dwarf/type.go	/^type UnspecifiedType struct {$/;"	t
UnsupportedError	./image/jpeg/reader.go	/^type UnsupportedError string$/;"	t
UnsupportedError	./image/png/reader.go	/^type UnsupportedError string$/;"	t
UnsupportedTypeError	./encoding/json/encode.go	/^type UnsupportedTypeError struct {$/;"	t
UnsupportedTypeError	./encoding/xml/marshal.go	/^type UnsupportedTypeError struct {$/;"	t
UnsupportedValueError	./encoding/json/encode.go	/^type UnsupportedValueError struct {$/;"	t
Update	./cmd/internal/obj/obj.go	/^func (h *LineHist) Update(lineno int, file string, line int) {$/;"	f
Update	./go/ast/commentmap.go	/^func (cmap CommentMap) Update(old, new Node) Node {$/;"	f
Update	./hash/crc32/crc32.go	/^func Update(crc uint32, tab *Table, p []byte) uint32 {$/;"	f
Update	./hash/crc64/crc64.go	/^func Update(crc uint64, tab *Table, p []byte) uint64 {$/;"	f
Usage	./cmd/asm/internal/flags/flags.go	/^func Usage() {$/;"	f
Usage	./cmd/go/main.go	/^func (c *Command) Usage() {$/;"	f
Usage	./cmd/vet/main.go	/^func Usage() {$/;"	f
Usage	./flag/flag.go	/^var Usage = func() {$/;"	v
UseNumber	./encoding/json/stream.go	/^func (dec *Decoder) UseNumber() { dec.d.useNumber = true }$/;"	f
UseProxyTests	./net/http/proxy_test.go	/^var UseProxyTests = []struct {$/;"	v
User	./net/url/url.go	/^func User(username string) *Userinfo {$/;"	f
User	./os/user/user.go	/^type User struct {$/;"	t
UserAgent	./net/http/request.go	/^func (r *Request) UserAgent() string {$/;"	f
UserInfo10	./syscall/security_windows.go	/^type UserInfo10 struct {$/;"	t
UserPassword	./net/url/url.go	/^func UserPassword(username, password string) *Userinfo {$/;"	f
UserTime	./os/doc.go	/^func (p *ProcessState) UserTime() time.Duration {$/;"	f
Userinfo	./net/url/url.go	/^type Userinfo struct {$/;"	t
Username	./net/url/url.go	/^func (u *Userinfo) Username() string {$/;"	f
Usigset	./runtime/defs1_linux.go	/^type Usigset C.__sigset_t$/;"	t
Usigset	./runtime/defs3_linux.go	/^type Usigset C.__sigset_t$/;"	t
Usplit	./runtime/export_arm_test.go	/^var Usplit = usplit$/;"	v
Ustat	./syscall/zsyscall_linux_386.go	/^func Ustat(dev int, ubuf *Ustat_t) (err error) {$/;"	f
Ustat	./syscall/zsyscall_linux_amd64.go	/^func Ustat(dev int, ubuf *Ustat_t) (err error) {$/;"	f
Ustat	./syscall/zsyscall_linux_arm.go	/^func Ustat(dev int, ubuf *Ustat_t) (err error) {$/;"	f
Ustat	./syscall/zsyscall_linux_arm64.go	/^func Ustat(dev int, ubuf *Ustat_t) (err error) {$/;"	f
Ustat	./syscall/zsyscall_linux_ppc64.go	/^func Ustat(dev int, ubuf *Ustat_t) (err error) {$/;"	f
Ustat	./syscall/zsyscall_linux_ppc64le.go	/^func Ustat(dev int, ubuf *Ustat_t) (err error) {$/;"	f
Ustat_t	./syscall/types_linux.go	/^type Ustat_t C.struct_ustat$/;"	t
Ustat_t	./syscall/ztypes_linux_386.go	/^type Ustat_t struct {$/;"	t
Ustat_t	./syscall/ztypes_linux_amd64.go	/^type Ustat_t struct {$/;"	t
Ustat_t	./syscall/ztypes_linux_arm.go	/^type Ustat_t struct {$/;"	t
Ustat_t	./syscall/ztypes_linux_arm64.go	/^type Ustat_t struct {$/;"	t
Ustat_t	./syscall/ztypes_linux_ppc64.go	/^type Ustat_t struct {$/;"	t
Ustat_t	./syscall/ztypes_linux_ppc64le.go	/^type Ustat_t struct {$/;"	t
Utf8Map	./unicode/utf8/utf8_test.go	/^type Utf8Map struct {$/;"	t
Utimbuf	./syscall/types_linux.go	/^type Utimbuf C.struct_utimbuf$/;"	t
Utimbuf	./syscall/ztypes_linux_386.go	/^type Utimbuf struct {$/;"	t
Utimbuf	./syscall/ztypes_linux_amd64.go	/^type Utimbuf struct {$/;"	t
Utimbuf	./syscall/ztypes_linux_arm.go	/^type Utimbuf struct {$/;"	t
Utimbuf	./syscall/ztypes_linux_arm64.go	/^type Utimbuf struct {$/;"	t
Utimbuf	./syscall/ztypes_linux_ppc64.go	/^type Utimbuf struct {$/;"	t
Utimbuf	./syscall/ztypes_linux_ppc64le.go	/^type Utimbuf struct {$/;"	t
Utime	./syscall/zsyscall_linux_386.go	/^func Utime(path string, buf *Utimbuf) (err error) {$/;"	f
Utime	./syscall/zsyscall_linux_amd64.go	/^func Utime(path string, buf *Utimbuf) (err error) {$/;"	f
Utime	./syscall/zsyscall_linux_arm.go	/^func Utime(path string, buf *Utimbuf) (err error) {$/;"	f
Utime	./syscall/zsyscall_linux_arm64.go	/^func Utime(path string, buf *Utimbuf) (err error) {$/;"	f
Utime	./syscall/zsyscall_linux_ppc64.go	/^func Utime(path string, buf *Utimbuf) (err error) {$/;"	f
Utime	./syscall/zsyscall_linux_ppc64le.go	/^func Utime(path string, buf *Utimbuf) (err error) {$/;"	f
Utimes	./syscall/syscall_bsd.go	/^func Utimes(path string, tv []Timeval) (err error) {$/;"	f
Utimes	./syscall/syscall_linux.go	/^func Utimes(path string, tv []Timeval) (err error) {$/;"	f
Utimes	./syscall/syscall_windows.go	/^func Utimes(path string, tv []Timeval) (err error) {$/;"	f
Utimes	./syscall/zsyscall_solaris_amd64.go	/^func Utimes(path string, times *[2]Timeval) (err error) {$/;"	f
UtimesNano	./syscall/fs_nacl.go	/^func UtimesNano(path string, ts []Timespec) error {$/;"	f
UtimesNano	./syscall/syscall_bsd.go	/^func UtimesNano(path string, ts []Timespec) error {$/;"	f
UtimesNano	./syscall/syscall_linux.go	/^func UtimesNano(path string, ts []Timespec) (err error) {$/;"	f
UtimesNano	./syscall/syscall_solaris.go	/^func UtimesNano(path string, ts []Timespec) (err error) {$/;"	f
UtimesNano	./syscall/syscall_windows.go	/^func UtimesNano(path string, ts []Timespec) (err error) {$/;"	f
Utsname	./syscall/types_linux.go	/^type Utsname C.struct_utsname$/;"	t
Utsname	./syscall/ztypes_linux_386.go	/^type Utsname struct {$/;"	t
Utsname	./syscall/ztypes_linux_amd64.go	/^type Utsname struct {$/;"	t
Utsname	./syscall/ztypes_linux_arm.go	/^type Utsname struct {$/;"	t
Utsname	./syscall/ztypes_linux_arm64.go	/^type Utsname struct {$/;"	t
Utsname	./syscall/ztypes_linux_ppc64.go	/^type Utsname struct {$/;"	t
Utsname	./syscall/ztypes_linux_ppc64le.go	/^type Utsname struct {$/;"	t
Uvarint	./encoding/binary/varint.go	/^func Uvarint(buf []byte) (uint64, int) {$/;"	f
V0	./go/doc/testdata/d2.go	/^var V0 uintptr$/;"	v
V1	./go/doc/testdata/b.go	/^var V1, V2, v3, V4, V5 notExported$/;"	v
V1	./go/doc/testdata/d2.go	/^var V1 uint$/;"	v
V1	./go/doc/testdata/e.go	/^type V1 struct {$/;"	t
V1	./math/big/arith_amd64.s	/^V1:	ADDQ $4, DI		\/\/ n += 4$/;"	l
V2	./go/doc/testdata/d1.go	/^var V2 int$/;"	v
V2	./go/doc/testdata/e.go	/^type V2 struct {$/;"	t
V2	./math/big/arith_amd64.s	/^V2:	ADDQ $4, DI		\/\/ n += 4$/;"	l
V3	./go/doc/testdata/e.go	/^type V3 struct {$/;"	t
V3	./math/big/arith_amd64.s	/^V3:	ADDQ $4, DI		\/\/ n += 4$/;"	l
V4	./go/doc/testdata/e.go	/^type V4 struct {$/;"	t
V4	./math/big/arith_amd64.s	/^V4:	ADDQ $4, DI		\/\/ n += 4$/;"	l
V5	./go/doc/testdata/e.go	/^type V5 struct {$/;"	t
V6	./go/doc/testdata/e.go	/^type V6 struct{}$/;"	t
Val	./cmd/compile/internal/gc/go.go	/^type Val struct {$/;"	t
Val	./cmd/compile/internal/gc/syntax.go	/^func (n *Node) Val() Val {$/;"	f
Val	./debug/dwarf/entry.go	/^func (e *Entry) Val(a Attr) interface{} {$/;"	f
Val	./encoding/json/encode_test.go	/^type Val int$/;"	t
Val	./go/types/object.go	/^func (obj *Const) Val() constant.Value { return obj.val }$/;"	f
ValText	./encoding/json/encode_test.go	/^type ValText int$/;"	t
Valid	./unicode/utf8/utf8.go	/^func Valid(p []byte) bool {$/;"	f
ValidRune	./unicode/utf8/utf8.go	/^func ValidRune(r rune) bool {$/;"	f
ValidRuneTest	./unicode/utf8/utf8_test.go	/^type ValidRuneTest struct {$/;"	t
ValidString	./unicode/utf8/utf8.go	/^func ValidString(s string) bool {$/;"	f
ValidTest	./unicode/utf8/utf8_test.go	/^type ValidTest struct {$/;"	t
Validate	./crypto/rsa/rsa.go	/^func (priv *PrivateKey) Validate() error {$/;"	f
Validity	./encoding/asn1/asn1_test.go	/^type Validity struct {$/;"	t
Value	./database/sql/driver/driver.go	/^type Value interface{}$/;"	t
Value	./database/sql/sql.go	/^func (n NullBool) Value() (driver.Value, error) {$/;"	f
Value	./database/sql/sql.go	/^func (n NullFloat64) Value() (driver.Value, error) {$/;"	f
Value	./database/sql/sql.go	/^func (n NullInt64) Value() (driver.Value, error) {$/;"	f
Value	./database/sql/sql.go	/^func (ns NullString) Value() (driver.Value, error) {$/;"	f
Value	./flag/flag.go	/^\/\/ value of the flag are represented by the first argument, of type Value, which$/;"	t
Value	./flag/flag.go	/^type Value interface {$/;"	t
Value	./go/constant/value.go	/^type Value interface {$/;"	t
Value	./go/doc/doc.go	/^type Value struct {$/;"	t
Value	./reflect/value.go	/^\/\/ result is zero if and only if v is a nil func Value.$/;"	f
Value	./reflect/value.go	/^type Value struct {$/;"	t
Value	./sync/atomic/value.go	/^type Value struct {$/;"	t
Value	./testing/quick/quick.go	/^func Value(t reflect.Type, rand *rand.Rand) (value reflect.Value, ok bool) {$/;"	f
ValueConverter	./database/sql/driver/types.go	/^type ValueConverter interface {$/;"	t
ValueError	./reflect/value.go	/^type ValueError struct {$/;"	t
ValueGobber	./encoding/gob/gobencdec_test.go	/^type ValueGobber string \/\/ encodes with a value, decodes with a pointer.$/;"	t
ValueOf	./reflect/value.go	/^func ValueOf(i interface{}) Value {$/;"	f
ValueTest	./internal/syscall/windows/registry/registry_test.go	/^type ValueTest struct {$/;"	t
ValueTests	./internal/syscall/windows/registry/registry_test.go	/^var ValueTests = []ValueTest{$/;"	v
ValueType	./cmd/pprof/internal/profile/profile.go	/^type ValueType struct {$/;"	t
Valuer	./database/sql/driver/types.go	/^type Valuer interface {$/;"	t
Values	./net/url/url.go	/^type Values map[string][]string$/;"	t
Var	./cmd/compile/internal/gc/reg.go	/^type Var struct {$/;"	t
Var	./cmd/internal/goobj/read.go	/^type Var struct {$/;"	t
Var	./expvar/expvar.go	/^type Var interface {$/;"	t
Var	./flag/flag.go	/^func (f *FlagSet) Var(value Value, name string, usage string) {$/;"	f
Var	./flag/flag.go	/^func Var(value Value, name string, usage string) {$/;"	f
Var	./go/types/object.go	/^type Var struct {$/;"	t
VarOne	./cmd/doc/doc_test.go	/^			`var VarOne = 1`,                                        \/\/ First entry in variable block.$/;"	v
VariableNode	./text/template/parse/node.go	/^type VariableNode struct {$/;"	t
Variadic	./go/types/type.go	/^func (s *Signature) Variadic() bool { return s.variadic }$/;"	f
Varint	./encoding/binary/varint.go	/^func Varint(buf []byte) (int64, int) {$/;"	f
Vars	./net/http/cgi/testdata/test.cgi	/^sub Vars {$/;"	s
Vconv	./cmd/compile/internal/gc/fmt.go	/^func Vconv(v Val, flag int) string {$/;"	f
Vector	./encoding/gob/codec_test.go	/^type Vector []int$/;"	t
Vector	./encoding/gob/example_encdec_test.go	/^type Vector struct {$/;"	t
Verbose	./testing/testing.go	/^func Verbose() bool {$/;"	f
Verify	./crypto/dsa/dsa.go	/^func Verify(pub *PublicKey, hash []byte, r, s *big.Int) bool {$/;"	f
Verify	./crypto/ecdsa/ecdsa.go	/^func Verify(pub *PublicKey, hash []byte, r, s *big.Int) bool {$/;"	f
Verify	./crypto/x509/verify.go	/^func (c *Certificate) Verify(opts VerifyOptions) (chains [][]*Certificate, err error) {$/;"	f
Verify	./net/smtp/smtp.go	/^func (c *Client) Verify(addr string) error {$/;"	f
VerifyHostname	./crypto/tls/conn.go	/^func (c *Conn) VerifyHostname(host string) error {$/;"	f
VerifyHostname	./crypto/x509/verify.go	/^func (c *Certificate) VerifyHostname(h string) error {$/;"	f
VerifyOptions	./crypto/x509/verify.go	/^type VerifyOptions struct {$/;"	t
VerifyPKCS1v15	./crypto/rsa/pkcs1v15.go	/^func VerifyPKCS1v15(pub *PublicKey, hash crypto.Hash, hashed []byte, sig []byte) (err error) {$/;"	f
VerifyPSS	./crypto/rsa/pss.go	/^func VerifyPSS(pub *PublicKey, hash crypto.Hash, hashed []byte, sig []byte, opts *PSSOptions) error {$/;"	f
Version	./debug/elf/elf.go	/^type Version byte$/;"	t
Version	./runtime/extern.go	/^func Version() string {$/;"	f
ViewerData	./cmd/trace/trace.go	/^type ViewerData struct {$/;"	t
ViewerEvent	./cmd/trace/trace.go	/^type ViewerEvent struct {$/;"	t
ViewerFrame	./cmd/trace/trace.go	/^type ViewerFrame struct {$/;"	t
VirtualLock	./syscall/zsyscall_windows.go	/^func VirtualLock(addr uintptr, length uintptr) (err error) {$/;"	f
VirtualUnlock	./syscall/zsyscall_windows.go	/^func VirtualUnlock(addr uintptr, length uintptr) (err error) {$/;"	f
Visit	./cmd/cover/cover.go	/^func (f *File) Visit(node ast.Node) ast.Visitor {$/;"	f
Visit	./cmd/cover/cover.go	/^func (f *funcLitFinder) Visit(node ast.Node) (w ast.Visitor) {$/;"	f
Visit	./cmd/cover/func.go	/^func (v *FuncVisitor) Visit(node ast.Node) ast.Visitor {$/;"	f
Visit	./cmd/gofmt/simplify.go	/^func (s *simplifier) Visit(node ast.Node) ast.Visitor {$/;"	f
Visit	./cmd/vet/main.go	/^func (f *File) Visit(node ast.Node) ast.Visitor {$/;"	f
Visit	./flag/flag.go	/^func (f *FlagSet) Visit(fn func(*Flag)) {$/;"	f
Visit	./flag/flag.go	/^func Visit(fn func(*Flag)) {$/;"	f
Visit	./go/ast/walk.go	/^func (f inspector) Visit(node Node) Visitor {$/;"	f
Visit	./go/printer/printer_test.go	/^func (v visitor) Visit(n ast.Node) (w ast.Visitor) {$/;"	f
VisitAll	./flag/flag.go	/^func (f *FlagSet) VisitAll(fn func(*Flag)) {$/;"	f
VisitAll	./flag/flag.go	/^func VisitAll(fn func(*Flag)) {$/;"	f
Visitor	./go/ast/walk.go	/^type Visitor interface {$/;"	t
VoidType	./debug/dwarf/type.go	/^type VoidType struct {$/;"	t
VolumeName	./path/filepath/path.go	/^func VolumeName(path string) string {$/;"	f
VolumeNameTest	./path/filepath/path_test.go	/^type VolumeNameTest struct {$/;"	t
Vputb	./cmd/link/internal/ld/symtab.go	/^func Vputb(v uint64) {$/;"	f
Vputl	./cmd/link/internal/ld/symtab.go	/^func Vputl(v uint64) {$/;"	f
Vreg	./runtime/defs3_linux.go	/^type Vreg C.elf_vrreg_t$/;"	t
WIN32_LEAN_AND_MEAN	./runtime/cgo/gcc_windows_386.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN64_LEAN_AND_MEAN	./runtime/cgo/gcc_windows_amd64.c	/^#define WIN64_LEAN_AND_MEAN$/;"	d	file:
WRAPPER	./runtime/textflag.h	/^#define WRAPPER /;"	d
WSABuf	./syscall/ztypes_windows.go	/^type WSABuf struct {$/;"	t
WSACleanup	./syscall/zsyscall_windows.go	/^func WSACleanup() (err error) {$/;"	f
WSAData	./syscall/ztypes_windows_386.go	/^type WSAData struct {$/;"	t
WSAData	./syscall/ztypes_windows_amd64.go	/^type WSAData struct {$/;"	t
WSAEnumProtocols	./syscall/zsyscall_windows.go	/^func WSAEnumProtocols(protocols *int32, protocolBuffer *WSAProtocolInfo, bufferLength *uint32) (n int32, err error) {$/;"	f
WSAID_CONNECTEX	./syscall/ztypes_windows.go	/^var WSAID_CONNECTEX = GUID{$/;"	v
WSAIoctl	./syscall/zsyscall_windows.go	/^func WSAIoctl(s Handle, iocc uint32, inbuf *byte, cbif uint32, outbuf *byte, cbob uint32, cbbr *uint32, overlapped *Overlapped, completionRoutine uintptr) (err error) {$/;"	f
WSAProtocolChain	./syscall/ztypes_windows.go	/^type WSAProtocolChain struct {$/;"	t
WSAProtocolInfo	./syscall/ztypes_windows.go	/^type WSAProtocolInfo struct {$/;"	t
WSARecv	./syscall/zsyscall_windows.go	/^func WSARecv(s Handle, bufs *WSABuf, bufcnt uint32, recvd *uint32, flags *uint32, overlapped *Overlapped, croutine *byte) (err error) {$/;"	f
WSARecvFrom	./syscall/zsyscall_windows.go	/^func WSARecvFrom(s Handle, bufs *WSABuf, bufcnt uint32, recvd *uint32, flags *uint32, from *RawSockaddrAny, fromlen *int32, overlapped *Overlapped, croutine *byte) (err error) {$/;"	f
WSASend	./syscall/zsyscall_windows.go	/^func WSASend(s Handle, bufs *WSABuf, bufcnt uint32, sent *uint32, flags uint32, overlapped *Overlapped, croutine *byte) (err error) {$/;"	f
WSASendTo	./syscall/zsyscall_windows.go	/^func WSASendTo(s Handle, bufs *WSABuf, bufcnt uint32, sent *uint32, flags uint32, to *RawSockaddrAny, tolen int32, overlapped *Overlapped, croutine *byte) (err error) {$/;"	f
WSASendto	./syscall/syscall_windows.go	/^func WSASendto(s Handle, bufs *WSABuf, bufcnt uint32, sent *uint32, flags uint32, to Sockaddr, overlapped *Overlapped, croutine *byte) (err error) {$/;"	f
WSAStartup	./syscall/zsyscall_windows.go	/^func WSAStartup(verreq uint32, data *WSAData) (sockerr error) {$/;"	f
Wait	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func (ext *ExtDis) Wait() error {$/;"	f
Wait	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func (ext *ExtDis) Wait() error {$/;"	f
Wait	./net/fd_poll_nacl.go	/^func (pd *pollDesc) Wait(mode int) error {$/;"	f
Wait	./net/fd_poll_runtime.go	/^func (pd *pollDesc) Wait(mode int) error {$/;"	f
Wait	./os/doc.go	/^func (p *Process) Wait() (*ProcessState, error) {$/;"	f
Wait	./os/exec/exec.go	/^func (c *Cmd) Wait() error {$/;"	f
Wait	./sync/cond.go	/^func (c *Cond) Wait() {$/;"	f
Wait	./sync/waitgroup.go	/^func (wg *WaitGroup) Wait() {$/;"	f
Wait	./syscall/srpc_nacl.go	/^func (r *srpc) Wait() {$/;"	f
Wait4	./syscall/syscall_bsd.go	/^func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
Wait4	./syscall/syscall_linux.go	/^func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
Wait4	./syscall/syscall_nacl.go	/^func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
Wait4	./syscall/syscall_solaris.go	/^func Wait4(pid int, wstatus *WaitStatus, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
WaitCanceled	./net/fd_poll_nacl.go	/^func (pd *pollDesc) WaitCanceled(mode int) {}$/;"	f
WaitCanceled	./net/fd_poll_runtime.go	/^func (pd *pollDesc) WaitCanceled(mode int) {$/;"	f
WaitCanceledRead	./net/fd_poll_nacl.go	/^func (pd *pollDesc) WaitCanceledRead() {}$/;"	f
WaitCanceledRead	./net/fd_poll_runtime.go	/^func (pd *pollDesc) WaitCanceledRead() {$/;"	f
WaitCanceledWrite	./net/fd_poll_nacl.go	/^func (pd *pollDesc) WaitCanceledWrite() {}$/;"	f
WaitCanceledWrite	./net/fd_poll_runtime.go	/^func (pd *pollDesc) WaitCanceledWrite() {$/;"	f
WaitForSingleObject	./syscall/zsyscall_windows.go	/^func WaitForSingleObject(handle Handle, waitMilliseconds uint32) (event uint32, err error) {$/;"	f
WaitGroup	./sync/waitgroup.go	/^type WaitGroup struct {$/;"	t
WaitProcess	./syscall/exec_plan9.go	/^func WaitProcess(pid int, w *Waitmsg) (err error) {$/;"	f
WaitRead	./net/fd_poll_nacl.go	/^func (pd *pollDesc) WaitRead() error { return pd.Wait('r') }$/;"	f
WaitRead	./net/fd_poll_runtime.go	/^func (pd *pollDesc) WaitRead() error {$/;"	f
WaitStatus	./syscall/syscall_bsd.go	/^type WaitStatus uint32$/;"	t
WaitStatus	./syscall/syscall_linux.go	/^type WaitStatus uint32$/;"	t
WaitStatus	./syscall/syscall_nacl.go	/^type WaitStatus uint32$/;"	t
WaitStatus	./syscall/syscall_solaris.go	/^type WaitStatus uint32$/;"	t
WaitStatus	./syscall/syscall_windows.go	/^type WaitStatus struct {$/;"	t
WaitWrite	./net/fd_poll_nacl.go	/^func (pd *pollDesc) WaitWrite() error { return pd.Wait('w') }$/;"	f
WaitWrite	./net/fd_poll_runtime.go	/^func (pd *pollDesc) WaitWrite() error {$/;"	f
Waitmsg	./syscall/syscall_plan9.go	/^type Waitmsg struct {$/;"	t
Walk	./go/ast/walk.go	/^func Walk(v Visitor, node Node) {$/;"	f
Walk	./net/dnsmsg.go	/^func (h *dnsHeader) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (h *dnsMsgHdr) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (h *dnsRR_Header) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (q *dnsQuestion) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_A) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_AAAA) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_CNAME) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_HINFO) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_MB) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_MG) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_MINFO) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_MR) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_MX) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_NS) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_PTR) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_SOA) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_SRV) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./net/dnsmsg.go	/^func (rr *dnsRR_TXT) Walk(f func(v interface{}, name, tag string) bool) bool {$/;"	f
Walk	./path/filepath/path.go	/^func Walk(root string, walkFn WalkFunc) error {$/;"	f
WalkFunc	./path/filepath/path.go	/^type WalkFunc func(path string, info os.FileInfo, err error) error$/;"	t
Walker	./cmd/api/goapi.go	/^type Walker struct {$/;"	t
Warn	./cmd/compile/internal/gc/subr.go	/^func Warn(fmt_ string, args ...interface{}) {$/;"	f
Warn	./cmd/vet/main.go	/^func (f *File) Warn(pos token.Pos, args ...interface{}) {$/;"	f
Warn	./cmd/vet/testdata/print.go	/^func (*stringer) Warn(int, ...interface{}) string {$/;"	f
Warnf	./cmd/vet/main.go	/^func (f *File) Warnf(pos token.Pos, format string, args ...interface{}) {$/;"	f
Warnf	./cmd/vet/testdata/print.go	/^func (*stringer) Warnf(int, string, ...interface{}) string {$/;"	f
Warning	./log/syslog/syslog.go	/^func (w *Writer) Warning(m string) (err error) {$/;"	f
Warnl	./cmd/compile/internal/gc/subr.go	/^func Warnl(line int, fmt_ string, args ...interface{}) {$/;"	f
WebSafe	./image/color/palette/gen.go	/^	fmt.Fprintln(w, "var WebSafe = []color.Color{")$/;"	v
WebSafe	./image/color/palette/palette.go	/^var WebSafe = []color.Color{$/;"	v
Weekday	./time/time.go	/^func (t Time) Weekday() Weekday {$/;"	f
Weekday	./time/time.go	/^type Weekday int$/;"	t
Width	./fmt/print.go	/^func (p *pp) Width() (wid int, ok bool) { return p.fmt.wid, p.fmt.widPresent }$/;"	f
Width	./fmt/scan.go	/^func (s *ss) Width() (wid int, ok bool) {$/;"	f
Widthint	./cmd/compile/internal/gc/go.go	/^var Widthint int$/;"	v
Widthptr	./cmd/compile/internal/gc/go.go	/^var Widthptr int$/;"	v
Widthreg	./cmd/compile/internal/gc/go.go	/^var Widthreg int$/;"	v
Win32FileAttributeData	./syscall/ztypes_windows.go	/^type Win32FileAttributeData struct {$/;"	t
Win32finddata	./syscall/ztypes_windows.go	/^type Win32finddata struct {$/;"	t
WithNode	./text/template/parse/node.go	/^type WithNode struct {$/;"	t
WithPadding	./encoding/base64/base64.go	/^func (enc Encoding) WithPadding(padding rune) *Encoding {$/;"	f
Wndclassex	./runtime/syscall_windows_test.go	/^	type Wndclassex struct {$/;"	t
Word	./cmd/compile/internal/big/arith.go	/^type Word uintptr$/;"	t
Word	./math/big/arith.go	/^type Word uintptr$/;"	t
WordDecoder	./mime/encodedword.go	/^type WordDecoder struct {$/;"	t
WordEncoder	./mime/encodedword.go	/^type WordEncoder byte$/;"	t
Wputb	./cmd/link/internal/ld/symtab.go	/^func Wputb(w uint16) {$/;"	f
Wputl	./cmd/link/internal/ld/symtab.go	/^func Wputl(w uint16) {$/;"	f
Write	./archive/tar/writer.go	/^func (tw *Writer) Write(b []byte) (n int, err error) {$/;"	f
Write	./archive/zip/register.go	/^func (w *pooledFlateWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./archive/zip/writer.go	/^func (w *countWriter) Write(p []byte) (int, error) {$/;"	f
Write	./archive/zip/writer.go	/^func (w *fileWriter) Write(p []byte) (int, error) {$/;"	f
Write	./archive/zip/zip_test.go	/^func (fakeHash32) Write(p []byte) (int, error) { return len(p), nil }$/;"	f
Write	./archive/zip/zip_test.go	/^func (r *rleBuffer) Write(p []byte) (n int, err error) {$/;"	f
Write	./bufio/bufio.go	/^func (b *Writer) Write(p []byte) (nn int, err error) {$/;"	f
Write	./bufio/bufio_test.go	/^func (w *writeCountingDiscard) Write(p []byte) (int, error) {$/;"	f
Write	./bufio/bufio_test.go	/^func (w errorReaderFromTest) Write(p []byte) (int, error) {$/;"	f
Write	./bufio/bufio_test.go	/^func (w errorWriterTest) Write(p []byte) (int, error) {$/;"	f
Write	./bufio/bufio_test.go	/^func (w errorWriterToTest) Write(p []byte) (int, error) {$/;"	f
Write	./bytes/buffer.go	/^func (b *Buffer) Write(p []byte) (n int, err error) {$/;"	f
Write	./cmd/go/list.go	/^func (t *TrackingWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./cmd/go/main.go	/^func (w *errWriter) Write(b []byte) (int, error) {$/;"	f
Write	./cmd/internal/obj/util.go	/^func (b *Biobuf) Write(p []byte) (int, error) {$/;"	f
Write	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) Write(w io.Writer) error {$/;"	f
Write	./compress/flate/deflate.go	/^func (w *Writer) Write(data []byte) (n int, err error) {$/;"	f
Write	./compress/flate/deflate.go	/^func (w *dictWriter) Write(b []byte) (n int, err error) {$/;"	f
Write	./compress/flate/deflate_test.go	/^func (b *syncBuffer) Write(p []byte) (n int, err error) {$/;"	f
Write	./compress/gzip/gzip.go	/^func (z *Writer) Write(p []byte) (int, error) {$/;"	f
Write	./compress/lzw/writer.go	/^func (e *encoder) Write(p []byte) (n int, err error) {$/;"	f
Write	./compress/lzw/writer.go	/^func (e *errWriteCloser) Write([]byte) (int, error) {$/;"	f
Write	./compress/zlib/writer.go	/^func (z *Writer) Write(p []byte) (n int, err error) {$/;"	f
Write	./crypto/cipher/io.go	/^func (w StreamWriter) Write(src []byte) (n int, err error) {$/;"	f
Write	./crypto/hmac/hmac.go	/^func (h *hmac) Write(p []byte) (n int, err error) {$/;"	f
Write	./crypto/md5/md5.go	/^func (d *digest) Write(p []byte) (nn int, err error) {$/;"	f
Write	./crypto/sha1/sha1.go	/^func (d *digest) Write(p []byte) (nn int, err error) {$/;"	f
Write	./crypto/sha256/sha256.go	/^func (d *digest) Write(p []byte) (nn int, err error) {$/;"	f
Write	./crypto/sha512/sha512.go	/^func (d *digest) Write(p []byte) (nn int, err error) {$/;"	f
Write	./crypto/tls/conn.go	/^func (c *Conn) Write(b []byte) (int, error) {$/;"	f
Write	./crypto/tls/handshake_test.go	/^func (r *recordingConn) Write(b []byte) (n int, err error) {$/;"	f
Write	./crypto/tls/prf.go	/^func (h *finishedHash) Write(msg []byte) (n int, err error) {$/;"	f
Write	./encoding/ascii85/ascii85.go	/^func (e *encoder) Write(p []byte) (n int, err error) {$/;"	f
Write	./encoding/base32/base32.go	/^func (e *encoder) Write(p []byte) (n int, err error) {$/;"	f
Write	./encoding/base64/base64.go	/^func (e *encoder) Write(p []byte) (n int, err error) {$/;"	f
Write	./encoding/binary/binary.go	/^func Write(w io.Writer, order ByteOrder, data interface{}) error {$/;"	f
Write	./encoding/csv/writer.go	/^func (w *Writer) Write(record []string) (err error) {$/;"	f
Write	./encoding/csv/writer_test.go	/^func (e errorWriter) Write(b []byte) (int, error) {$/;"	f
Write	./encoding/gob/encode.go	/^func (e *encBuffer) Write(p []byte) (int, error) {$/;"	f
Write	./encoding/hex/hex.go	/^func (h *dumper) Write(data []byte) (n int, err error) {$/;"	f
Write	./encoding/pem/pem.go	/^func (l *lineBreaker) Write(b []byte) (n int, err error) {$/;"	f
Write	./encoding/xml/marshal_test.go	/^func (lw *limitedBytesWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./encoding/xml/xml_test.go	/^func (errWriter) Write(p []byte) (n int, err error) { return 0, fmt.Errorf("unwritable") }$/;"	f
Write	./fmt/print.go	/^func (b *buffer) Write(p []byte) (n int, err error) {$/;"	f
Write	./fmt/print.go	/^func (p *pp) Write(b []byte) (ret int, err error) {$/;"	f
Write	./go/ast/print.go	/^func (p *printer) Write(data []byte) (n int, err error) {$/;"	f
Write	./go/printer/printer.go	/^func (p *trimmer) Write(data []byte) (n int, err error) {$/;"	f
Write	./go/token/serialize.go	/^func (s *FileSet) Write(encode func(interface{}) error) error {$/;"	f
Write	./hash/adler32/adler32.go	/^func (d *digest) Write(p []byte) (nn int, err error) {$/;"	f
Write	./hash/crc32/crc32.go	/^func (d *digest) Write(p []byte) (n int, err error) {$/;"	f
Write	./hash/crc64/crc64.go	/^func (d *digest) Write(p []byte) (n int, err error) {$/;"	f
Write	./hash/fnv/fnv.go	/^func (s *sum32) Write(data []byte) (int, error) {$/;"	f
Write	./hash/fnv/fnv.go	/^func (s *sum32a) Write(data []byte) (int, error) {$/;"	f
Write	./hash/fnv/fnv.go	/^func (s *sum64) Write(data []byte) (int, error) {$/;"	f
Write	./hash/fnv/fnv.go	/^func (s *sum64a) Write(data []byte) (int, error) {$/;"	f
Write	./image/gif/writer.go	/^func (b blockWriter) Write(data []byte) (int, error) {$/;"	f
Write	./image/png/writer.go	/^func (e *encoder) Write(b []byte) (int, error) {$/;"	f
Write	./index/suffixarray/suffixarray.go	/^func (x *Index) Write(w io.Writer) error {$/;"	f
Write	./io/io_test.go	/^func (w *noReadFrom) Write(p []byte) (n int, err error) {$/;"	f
Write	./io/io_test.go	/^func (w errWriter) Write([]byte) (int, error) {$/;"	f
Write	./io/ioutil/ioutil.go	/^func (devNull) Write(p []byte) (int, error) {$/;"	f
Write	./io/multi.go	/^func (t *multiWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./io/pipe.go	/^func (w *PipeWriter) Write(data []byte) (n int, err error) {$/;"	f
Write	./log/syslog/syslog.go	/^func (w *Writer) Write(b []byte) (int, error) {$/;"	f
Write	./mime/multipart/writer.go	/^func (p *part) Write(d []byte) (n int, err error) {$/;"	f
Write	./mime/quotedprintable/writer.go	/^func (w *Writer) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/fd_plan9.go	/^func (fd *netFD) Write(b []byte) (n int, err error) {$/;"	f
Write	./net/fd_unix.go	/^func (fd *netFD) Write(p []byte) (nn int, err error) {$/;"	f
Write	./net/fd_windows.go	/^func (fd *netFD) Write(buf []byte) (int, error) {$/;"	f
Write	./net/http/cgi/child.go	/^func (r *response) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/cgi/matryoshka_test.go	/^func (r *customWriterRecorder) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/cgi/matryoshka_test.go	/^func (w *limitWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/client_test.go	/^func (c *writeCountingConn) Write(p []byte) (int, error) {$/;"	f
Write	./net/http/client_test.go	/^func (w chanWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/cookie_test.go	/^func (ho headerOnlyResponseWriter) Write([]byte) (int, error) {$/;"	f
Write	./net/http/fcgi/child.go	/^func (r *response) Write(data []byte) (int, error) {$/;"	f
Write	./net/http/fcgi/fcgi.go	/^func (w *streamWriter) Write(p []byte) (int, error) {$/;"	f
Write	./net/http/fcgi/fcgi_test.go	/^func (c *writeOnlyConn) Write(p []byte) (int, error) {$/;"	f
Write	./net/http/filetransport.go	/^func (pr *populateResponse) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/fs.go	/^func (w *countingWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/header.go	/^func (h Header) Write(w io.Writer) error {$/;"	f
Write	./net/http/httptest/recorder.go	/^func (rw *ResponseRecorder) Write(buf []byte) (int, error) {$/;"	f
Write	./net/http/httputil/persist.go	/^func (cc *ClientConn) Write(req *http.Request) (err error) {$/;"	f
Write	./net/http/httputil/persist.go	/^func (sc *ServerConn) Write(req *http.Request, resp *http.Response) error {$/;"	f
Write	./net/http/httputil/reverseproxy.go	/^func (m *maxLatencyWriter) Write(p []byte) (int, error) {$/;"	f
Write	./net/http/internal/chunked.go	/^func (cw *chunkedWriter) Write(data []byte) (n int, err error) {$/;"	f
Write	./net/http/request.go	/^func (r *Request) Write(w io.Writer) error {$/;"	f
Write	./net/http/request_test.go	/^func (l logWrites) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/requestwrite_test.go	/^func (f writerFunc) Write(p []byte) (int, error) { return f(p) }$/;"	f
Write	./net/http/response.go	/^func (r *Response) Write(w io.Writer) error {$/;"	f
Write	./net/http/serve_test.go	/^func (c *slowTestConn) Write(b []byte) (int, error) {$/;"	f
Write	./net/http/serve_test.go	/^func (c *testConn) Write(b []byte) (int, error) {$/;"	f
Write	./net/http/server.go	/^func (c *loggingConn) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/server.go	/^func (cw *chunkWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/server.go	/^func (h extraHeader) Write(w *bufio.Writer) {$/;"	f
Write	./net/http/server.go	/^func (tw *timeoutWriter) Write(p []byte) (int, error) {$/;"	f
Write	./net/http/server.go	/^func (w *response) Write(data []byte) (n int, err error) {$/;"	f
Write	./net/http/server.go	/^func (w checkConnErrorWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/http/transport_test.go	/^func (c *logWritesConn) Write(p []byte) (n int, err error) {$/;"	f
Write	./net/net.go	/^func (c *conn) Write(b []byte) (int, error) {$/;"	f
Write	./net/rpc/server_test.go	/^func (writeCrasher) Write(p []byte) (int, error) {$/;"	f
Write	./net/textproto/writer.go	/^func (d *dotWriter) Write(b []byte) (n int, err error) {$/;"	f
Write	./os/exec/exec_test.go	/^func (w *badWriter) Write(data []byte) (int, error) {$/;"	f
Write	./os/file.go	/^func (f *File) Write(b []byte) (n int, err error) {$/;"	f
Write	./runtime/export_test.go	/^var Write = write$/;"	v
Write	./runtime/race/testdata/mop_test.go	/^func (d DummyWriter) Write(p []byte) (n int) {$/;"	f
Write	./strings/replace.go	/^func (w *appendSliceWriter) Write(p []byte) (int, error) {$/;"	f
Write	./strings/replace_test.go	/^func (errWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./syscall/fd_nacl.go	/^func Write(fd int, b []byte) (int, error) {$/;"	f
Write	./syscall/syscall_plan9.go	/^func Write(fd int, p []byte) (n int, err error) {$/;"	f
Write	./syscall/syscall_unix.go	/^func Write(fd int, p []byte) (n int, err error) {$/;"	f
Write	./syscall/syscall_windows.go	/^func Write(fd Handle, p []byte) (n int, err error) {$/;"	f
Write	./testing/iotest/logger.go	/^func (l *writeLogger) Write(p []byte) (n int, err error) {$/;"	f
Write	./testing/iotest/writer.go	/^func (t *truncateWriter) Write(p []byte) (n int, err error) {$/;"	f
Write	./text/tabwriter/tabwriter.go	/^func (b *Writer) Write(buf []byte) (n int, err error) {$/;"	f
Write	./text/tabwriter/tabwriter_test.go	/^func (b *buffer) Write(buf []byte) (written int, err error) {$/;"	f
Write	./text/tabwriter/tabwriter_test.go	/^func (panicWriter) Write([]byte) (int, error) {$/;"	f
WriteAll	./encoding/csv/writer.go	/^func (w *Writer) WriteAll(records [][]string) (err error) {$/;"	f
WriteAt	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func (r loadCmdReader) WriteAt(offset int64, data interface{}) error {$/;"	f
WriteAt	./os/file.go	/^func (f *File) WriteAt(b []byte, off int64) (n int, err error) {$/;"	f
WriteBody	./net/http/transfer.go	/^func (t *transferWriter) WriteBody(w io.Writer) error {$/;"	f
WriteByte	./bufio/bufio.go	/^func (b *Writer) WriteByte(c byte) error {$/;"	f
WriteByte	./bytes/buffer.go	/^func (b *Buffer) WriteByte(c byte) error {$/;"	f
WriteByte	./encoding/gob/encode.go	/^func (e *encBuffer) WriteByte(c byte) {$/;"	f
WriteByte	./fmt/print.go	/^func (b *buffer) WriteByte(c byte) error {$/;"	f
WriteByte	./net/http/request_test.go	/^func (l logWrites) WriteByte(c byte) error {$/;"	f
WriteCloser	./io/io.go	/^type WriteCloser interface {$/;"	t
WriteConsole	./syscall/zsyscall_windows.go	/^func WriteConsole(console Handle, buf *uint16, towrite uint32, written *uint32, reserved *byte) (err error) {$/;"	f
WriteError	./compress/flate/inflate.go	/^type WriteError struct {$/;"	t
WriteExpr	./go/types/exprstring.go	/^func WriteExpr(buf *bytes.Buffer, x ast.Expr) {$/;"	f
WriteFailCodec	./net/rpc/server_test.go	/^type WriteFailCodec int$/;"	t
WriteField	./mime/multipart/writer.go	/^func (w *Writer) WriteField(fieldname, value string) error {$/;"	f
WriteFile	./io/ioutil/ioutil.go	/^func WriteFile(filename string, data []byte, perm os.FileMode) error {$/;"	f
WriteFile	./syscall/zsyscall_windows.go	/^func WriteFile(handle Handle, buf []byte, done *uint32, overlapped *Overlapped) (err error) {$/;"	f
WriteHeader	./archive/tar/writer.go	/^func (tw *Writer) WriteHeader(hdr *Header) error {$/;"	f
WriteHeader	./net/http/cgi/child.go	/^func (r *response) WriteHeader(code int) {$/;"	f
WriteHeader	./net/http/cookie_test.go	/^func (ho headerOnlyResponseWriter) WriteHeader(int) {$/;"	f
WriteHeader	./net/http/fcgi/child.go	/^func (r *response) WriteHeader(code int) {$/;"	f
WriteHeader	./net/http/filetransport.go	/^func (pr *populateResponse) WriteHeader(code int) {$/;"	f
WriteHeader	./net/http/httptest/recorder.go	/^func (rw *ResponseRecorder) WriteHeader(code int) {$/;"	f
WriteHeader	./net/http/npn_test.go	/^func (w http09Writer) WriteHeader(int) {} \/\/ no headers$/;"	f
WriteHeader	./net/http/request_test.go	/^func (responseWriterJustWriter) WriteHeader(int) { panic("should not be called") }$/;"	f
WriteHeader	./net/http/server.go	/^func (tw *timeoutWriter) WriteHeader(code int) {$/;"	f
WriteHeader	./net/http/server.go	/^func (w *response) WriteHeader(code int) {$/;"	f
WriteHeader	./net/http/transfer.go	/^func (t *transferWriter) WriteHeader(w io.Writer) error {$/;"	f
WriteHeapDump	./runtime/debug/garbage.go	/^func WriteHeapDump(fd uintptr)$/;"	f
WriteHeapProfile	./runtime/pprof/pprof.go	/^func WriteHeapProfile(w io.Writer) error {$/;"	f
WriteMode	./compress/flate/deflate_test.go	/^func (b *syncBuffer) WriteMode() {$/;"	f
WriteMsgIP	./net/iprawsock_plan9.go	/^func (c *IPConn) WriteMsgIP(b, oob []byte, addr *IPAddr) (n, oobn int, err error) {$/;"	f
WriteMsgIP	./net/iprawsock_posix.go	/^func (c *IPConn) WriteMsgIP(b, oob []byte, addr *IPAddr) (n, oobn int, err error) {$/;"	f
WriteMsgUDP	./net/udpsock_plan9.go	/^func (c *UDPConn) WriteMsgUDP(b, oob []byte, addr *UDPAddr) (n, oobn int, err error) {$/;"	f
WriteMsgUDP	./net/udpsock_posix.go	/^func (c *UDPConn) WriteMsgUDP(b, oob []byte, addr *UDPAddr) (n, oobn int, err error) {$/;"	f
WriteMsgUnix	./net/unixsock_plan9.go	/^func (c *UnixConn) WriteMsgUnix(b, oob []byte, addr *UnixAddr) (n, oobn int, err error) {$/;"	f
WriteMsgUnix	./net/unixsock_posix.go	/^func (c *UnixConn) WriteMsgUnix(b, oob []byte, addr *UnixAddr) (n, oobn int, err error) {$/;"	f
WriteProxy	./net/http/request.go	/^func (r *Request) WriteProxy(w io.Writer) error {$/;"	f
WriteRequest	./net/rpc/client.go	/^func (c *gobClientCodec) WriteRequest(r *Request, body interface{}) (err error) {$/;"	f
WriteRequest	./net/rpc/client_test.go	/^func (c *shutdownCodec) WriteRequest(*Request, interface{}) error { return nil }$/;"	f
WriteRequest	./net/rpc/jsonrpc/client.go	/^func (c *clientCodec) WriteRequest(r *rpc.Request, param interface{}) error {$/;"	f
WriteRequest	./net/rpc/server_test.go	/^func (WriteFailCodec) WriteRequest(*Request, interface{}) error {$/;"	f
WriteResponse	./net/rpc/jsonrpc/server.go	/^func (c *serverCodec) WriteResponse(r *rpc.Response, x interface{}) error {$/;"	f
WriteResponse	./net/rpc/server.go	/^func (c *gobServerCodec) WriteResponse(r *Response, body interface{}) (err error) {$/;"	f
WriteResponse	./net/rpc/server_test.go	/^func (codec *CodecEmulator) WriteResponse(resp *Response, reply interface{}) error {$/;"	f
WriteRune	./bufio/bufio.go	/^func (b *Writer) WriteRune(r rune) (size int, err error) {$/;"	f
WriteRune	./bytes/buffer.go	/^func (b *Buffer) WriteRune(r rune) (n int, err error) {$/;"	f
WriteRune	./fmt/print.go	/^func (bp *buffer) WriteRune(r rune) error {$/;"	f
WriteSeeker	./io/io.go	/^type WriteSeeker interface {$/;"	t
WriteSignature	./go/types/typestring.go	/^func WriteSignature(buf *bytes.Buffer, sig *Signature, qf Qualifier) {$/;"	f
WriteString	./bufio/bufio.go	/^func (b *Writer) WriteString(s string) (int, error) {$/;"	f
WriteString	./bytes/buffer.go	/^func (b *Buffer) WriteString(s string) (n int, err error) {$/;"	f
WriteString	./encoding/gob/encode.go	/^func (e *encBuffer) WriteString(s string) {$/;"	f
WriteString	./fmt/print.go	/^func (b *buffer) WriteString(s string) (n int, err error) {$/;"	f
WriteString	./io/io.go	/^func WriteString(w Writer, s string) (n int, err error) {$/;"	f
WriteString	./io/ioutil/ioutil.go	/^func (devNull) WriteString(s string) (int, error) {$/;"	f
WriteString	./net/http/header.go	/^func (w stringWriter) WriteString(s string) (n int, err error) {$/;"	f
WriteString	./net/http/server.go	/^func (w *response) WriteString(data string) (n int, err error) {$/;"	f
WriteString	./os/file.go	/^func (f *File) WriteString(s string) (n int, err error) {$/;"	f
WriteString	./strings/replace.go	/^func (r *Replacer) WriteString(w io.Writer, s string) (n int, err error) {$/;"	f
WriteString	./strings/replace.go	/^func (r *byteReplacer) WriteString(w io.Writer, s string) (n int, err error) {$/;"	f
WriteString	./strings/replace.go	/^func (r *byteStringReplacer) WriteString(w io.Writer, s string) (n int, err error) {$/;"	f
WriteString	./strings/replace.go	/^func (r *genericReplacer) WriteString(w io.Writer, s string) (n int, err error) {$/;"	f
WriteString	./strings/replace.go	/^func (r *singleStringReplacer) WriteString(w io.Writer, s string) (n int, err error) {$/;"	f
WriteString	./strings/replace.go	/^func (w *appendSliceWriter) WriteString(s string) (int, error) {$/;"	f
WriteString	./strings/replace.go	/^func (w stringWriter) WriteString(s string) (int, error) {$/;"	f
WriteSubset	./net/http/header.go	/^func (h Header) WriteSubset(w io.Writer, exclude map[string]bool) error {$/;"	f
WriteTest	./archive/zip/writer_test.go	/^type WriteTest struct {$/;"	t
WriteTo	./bufio/bufio.go	/^func (b *Reader) WriteTo(w io.Writer) (n int64, err error) {$/;"	f
WriteTo	./bytes/buffer.go	/^func (b *Buffer) WriteTo(w io.Writer) (n int64, err error) {$/;"	f
WriteTo	./bytes/reader.go	/^func (r *Reader) WriteTo(w io.Writer) (n int64, err error) {$/;"	f
WriteTo	./crypto/tls/handshake_test.go	/^func (r *recordingConn) WriteTo(w io.Writer) {$/;"	f
WriteTo	./go/types/scope.go	/^func (s *Scope) WriteTo(w io.Writer, n int, recurse bool) {$/;"	f
WriteTo	./io/io_test.go	/^func (wt *writeToChecker) WriteTo(w Writer) (int64, error) {$/;"	f
WriteTo	./net/http/server.go	/^func (eofReaderWithWriteTo) WriteTo(io.Writer) (int64, error) { return 0, nil }$/;"	f
WriteTo	./net/iprawsock_plan9.go	/^func (c *IPConn) WriteTo(b []byte, addr Addr) (int, error) {$/;"	f
WriteTo	./net/iprawsock_posix.go	/^func (c *IPConn) WriteTo(b []byte, addr Addr) (int, error) {$/;"	f
WriteTo	./net/udpsock_plan9.go	/^func (c *UDPConn) WriteTo(b []byte, addr Addr) (int, error) {$/;"	f
WriteTo	./net/udpsock_posix.go	/^func (c *UDPConn) WriteTo(b []byte, addr Addr) (int, error) {$/;"	f
WriteTo	./net/unixsock_plan9.go	/^func (c *UnixConn) WriteTo(b []byte, addr Addr) (int, error) {$/;"	f
WriteTo	./net/unixsock_posix.go	/^func (c *UnixConn) WriteTo(b []byte, addr Addr) (n int, err error) {$/;"	f
WriteTo	./runtime/pprof/pprof.go	/^func (p *Profile) WriteTo(w io.Writer, debug int) error {$/;"	f
WriteTo	./strings/reader.go	/^func (r *Reader) WriteTo(w io.Writer) (n int64, err error) {$/;"	f
WriteToIP	./net/iprawsock_plan9.go	/^func (c *IPConn) WriteToIP(b []byte, addr *IPAddr) (int, error) {$/;"	f
WriteToIP	./net/iprawsock_posix.go	/^func (c *IPConn) WriteToIP(b []byte, addr *IPAddr) (int, error) {$/;"	f
WriteToUDP	./net/udpsock_plan9.go	/^func (c *UDPConn) WriteToUDP(b []byte, addr *UDPAddr) (int, error) {$/;"	f
WriteToUDP	./net/udpsock_posix.go	/^func (c *UDPConn) WriteToUDP(b []byte, addr *UDPAddr) (int, error) {$/;"	f
WriteToUnix	./net/unixsock_plan9.go	/^func (c *UnixConn) WriteToUnix(b []byte, addr *UnixAddr) (int, error) {$/;"	f
WriteToUnix	./net/unixsock_posix.go	/^func (c *UnixConn) WriteToUnix(b []byte, addr *UnixAddr) (int, error) {$/;"	f
WriteType	./go/types/typestring.go	/^func WriteType(buf *bytes.Buffer, typ Type, qf Qualifier) {$/;"	f
Writeobjdirect	./cmd/internal/obj/objfile.go	/^func Writeobjdirect(ctxt *Link, b *Biobuf) {$/;"	f
Writer	./archive/tar/writer.go	/^type Writer struct {$/;"	t
Writer	./archive/zip/writer.go	/^type Writer struct {$/;"	t
Writer	./bufio/bufio.go	/^type Writer struct {$/;"	t
Writer	./cmd/internal/gcprog/gcprog.go	/^type Writer struct {$/;"	t
Writer	./compress/flate/deflate.go	/^type Writer struct {$/;"	t
Writer	./compress/gzip/gzip.go	/^type Writer struct {$/;"	t
Writer	./compress/zlib/writer.go	/^type Writer struct {$/;"	t
Writer	./encoding/csv/writer.go	/^type Writer struct {$/;"	t
Writer	./io/io.go	/^type Writer interface {$/;"	t
Writer	./log/syslog/syslog.go	/^type Writer struct {$/;"	t
Writer	./mime/multipart/writer.go	/^type Writer struct {$/;"	t
Writer	./mime/quotedprintable/writer.go	/^type Writer struct {$/;"	t
Writer	./net/textproto/writer.go	/^type Writer struct {$/;"	t
Writer	./runtime/race/testdata/mop_test.go	/^type Writer interface {$/;"	t
Writer	./text/tabwriter/tabwriter.go	/^type Writer struct {$/;"	t
WriterAt	./io/io.go	/^type WriterAt interface {$/;"	t
WriterTo	./io/io.go	/^type WriterTo interface {$/;"	t
WrongString	./encoding/json/decode_test.go	/^type WrongString struct {$/;"	t
Wset	./cmd/yacc/yacc.go	/^type Wset struct {$/;"	t
Wstat	./syscall/syscall_plan9.go	/^func Wstat(path string, edir []byte) (err error) {$/;"	f
X0	./cmd/api/testdata/src/pkg/p1/p1.go	/^var X0 int64$/;"	v
X2	./runtime/race/testdata/comp_test.go	/^type X2 X$/;"	t
X509KeyPair	./crypto/tls/tls.go	/^func X509KeyPair(certPEMBlock, keyPEMBlock []byte) (Certificate, error) {$/;"	f
X6	./math/big/arith_arm.s	/^X6:$/;"	l
X7	./math/big/arith_arm.s	/^X7:$/;"	l
X8a	./math/big/arith_386.s	/^X8a:	SHLL CX, AX		\/\/ w1<<s$/;"	l
X8a	./math/big/arith_amd64.s	/^X8a:	SHLQ CX, AX		\/\/ w1<<s$/;"	l
X8b	./math/big/arith_386.s	/^X8b:	MOVL $0, c+28(FP)$/;"	l
X8b	./math/big/arith_amd64.s	/^X8b:	MOVQ $0, c+56(FP)$/;"	l
X9a	./math/big/arith_386.s	/^X9a:	SHRL CX, AX		\/\/ w1>>s$/;"	l
X9a	./math/big/arith_amd64.s	/^X9a:	SHRQ CX, AX		\/\/ w1>>s$/;"	l
X9b	./math/big/arith_386.s	/^X9b:	MOVL $0, c+28(FP)$/;"	l
X9b	./math/big/arith_amd64.s	/^X9b:	MOVQ $0, c+56(FP)$/;"	l
XM	./reflect/all_test.go	/^type XM struct{}$/;"	t
XMLNameWithTag	./encoding/xml/marshal_test.go	/^type XMLNameWithTag struct {$/;"	t
XMLNameWithoutTag	./encoding/xml/marshal_test.go	/^type XMLNameWithoutTag struct {$/;"	t
XORKeyStream	./crypto/cipher/cfb.go	/^func (x *cfb) XORKeyStream(dst, src []byte) {$/;"	f
XORKeyStream	./crypto/cipher/ctr.go	/^func (x *ctr) XORKeyStream(dst, src []byte) {$/;"	f
XORKeyStream	./crypto/cipher/ofb.go	/^func (x *ofb) XORKeyStream(dst, src []byte) {$/;"	f
XORKeyStream	./crypto/rc4/rc4_asm.go	/^func (c *Cipher) XORKeyStream(dst, src []byte) {$/;"	f
XORKeyStream	./crypto/rc4/rc4_ref.go	/^func (c *Cipher) XORKeyStream(dst, src []byte) {$/;"	f
XORL	./crypto/md5/md5block_386.s	/^	XORL	d,		BP; \\$/;"	d
XORL	./crypto/md5/md5block_386.s	/^	XORL d, BP; \\$/;"	d
XORL	./crypto/md5/md5block_amd64.s	/^	XORL	d,		R9; \\$/;"	d
XORL	./crypto/md5/md5block_amd64.s	/^	XORL d, R9; \\$/;"	d
XORL	./crypto/md5/md5block_amd64p32.s	/^	XORL	d,		R9; \\$/;"	d
XORL	./crypto/md5/md5block_amd64p32.s	/^	XORL d, R9; \\$/;"	d
XORL	./crypto/sha1/sha1block_386.s	/^	XORL	d, DI$/;"	d
XORL	./crypto/sha1/sha1block_amd64.s	/^	XORL	d, R9$/;"	d
XORL	./crypto/sha1/sha1block_amd64p32.s	/^	XORL	d, R9$/;"	d
XYZ	./encoding/json/decode_test.go	/^type XYZ struct {$/;"	t
Xadduintptr	./runtime/export_test.go	/^var Xadduintptr = xadduintptr$/;"	v
Xbigptrscalar	./reflect/all_test.go	/^	type Xbigptrscalar struct {$/;"	t
Xint	./encoding/json/decode_test.go	/^type Xint struct {$/;"	t
Xmmreg	./runtime/defs1_linux.go	/^type Xmmreg C.struct__libc_xmmreg$/;"	t
Xmmreg	./runtime/defs2_linux.go	/^type Xmmreg C.struct__xmmreg$/;"	t
Xmmreg1	./runtime/defs1_linux.go	/^type Xmmreg1 C.struct__xmmreg$/;"	t
Xor	./cmd/compile/internal/big/int.go	/^func (z *Int) Xor(x, y *Int) *Int {$/;"	f
Xor	./math/big/int.go	/^func (z *Int) Xor(x, y *Int) *Int {$/;"	f
Xptr	./reflect/all_test.go	/^	type Xptr struct{ x *byte }$/;"	t
Xptrscalar	./reflect/all_test.go	/^	type Xptrscalar struct {$/;"	t
Xs	./fmt/scan_test.go	/^type Xs string$/;"	t
Xscalar	./reflect/all_test.go	/^	type Xscalar struct{ x uintptr }$/;"	t
Xscalarptr	./reflect/all_test.go	/^	type Xscalarptr struct {$/;"	t
Y0	./math/j0.go	/^func Y0(x float64) float64 {$/;"	f
Y1	./math/j1.go	/^func Y1(x float64) float64 {$/;"	f
Y6	./math/big/arith_arm.s	/^Y6:	\/\/ copy loop, because shift 0 == shift 32$/;"	l
Y7	./math/big/arith_arm.s	/^Y7:	\/\/ copy loop, because shift 0 == shift 32$/;"	l
YCbCr	./encoding/json/example_test.go	/^	type YCbCr struct {$/;"	t
YCbCr	./image/color/ycbcr.go	/^type YCbCr struct {$/;"	t
YCbCr	./image/ycbcr.go	/^type YCbCr struct {$/;"	t
YCbCrAt	./image/ycbcr.go	/^func (p *YCbCr) YCbCrAt(x, y int) color.YCbCr {$/;"	f
YCbCrModel	./image/color/ycbcr.go	/^var YCbCrModel Model = ModelFunc(yCbCrModel)$/;"	v
YCbCrSubsampleRatio	./image/ycbcr.go	/^type YCbCrSubsampleRatio int$/;"	t
YCbCrToRGB	./image/color/ycbcr.go	/^func YCbCrToRGB(y, cb, cr uint8) (uint8, uint8, uint8) {$/;"	f
YCbCrToRGB	./image/internal/imageutil/gen.go	/^				\/\/ This is an inline version of image\/color\/ycbcr.go's func YCbCrToRGB.$/;"	f
YCbCrToRGB	./image/internal/imageutil/impl.go	/^				\/\/ This is an inline version of image\/color\/ycbcr.go's func YCbCrToRGB.$/;"	f
YOffset	./image/ycbcr.go	/^func (p *YCbCr) YOffset(x, y int) int {$/;"	f
Yconv	./cmd/link/internal/ld/lib.go	/^func Yconv(s *LSym) string {$/;"	f
Year	./time/time.go	/^func (t Time) Year() int {$/;"	f
YearDay	./time/time.go	/^func (t Time) YearDay() int {$/;"	f
YearDayTest	./time/time_test.go	/^type YearDayTest struct {$/;"	t
Yn	./math/jn.go	/^func Yn(n int, x float64) float64 {$/;"	f
Yyerror	./cmd/compile/internal/gc/subr.go	/^func Yyerror(format string, args ...interface{}) {$/;"	f
Z1	./math/big/arith_386.s	/^Z1:	MOVL $0, n+4(FP)$/;"	l
Z1	./math/big/arith_amd64.s	/^Z1:	MOVQ $0, n+8(FP)$/;"	l
ZP	./image/geom.go	/^var ZP Point$/;"	v
ZR	./image/geom.go	/^var ZR Rectangle$/;"	v
Zero	./reflect/value.go	/^func Zero(typ Type) Value {$/;"	f
ZeroUntil	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) ZeroUntil(index int64) {$/;"	f
ZipTest	./archive/zip/reader_test.go	/^type ZipTest struct {$/;"	t
ZipTestFile	./archive/zip/reader_test.go	/^type ZipTestFile struct {$/;"	t
Zipf	./math/rand/zipf.go	/^type Zipf struct {$/;"	t
Zone	./time/time.go	/^func (t Time) Zone() (name string, offset int) {$/;"	f
_	./cmd/internal/obj/objfile.go	/^					\/\/ func _() { }$/;"	f
_	./cmd/internal/obj/objfile.go	/^				if curtext == nil { \/\/ func _() {}$/;"	f
_	./cmd/vet/testdata/deadcode.go	/^func _() int {$/;"	f
_	./cmd/vet/testdata/unused.go	/^func _() {$/;"	f
_	./go/doc/testdata/blank.go	/^func _() {}$/;"	f
_	./go/parser/short_test.go	/^	`package p; func _() { if [T{}.n]int{} {} }`,$/;"	f
_	./go/parser/short_test.go	/^	`package p; func _() { map[int]int{}[0]++; map[int]int{}[0] += 1 }`,$/;"	f
_	./go/parser/short_test.go	/^	`package p; func _(x []int) { for range x {} }`,$/;"	f
_	./go/parser/short_test.go	/^	`package p; func _(x chan int) { chan int(x) <- 0 }`,$/;"	f
_	./go/parser/short_test.go	/^	`package p; func _(x interface{f()}) { interface{f()}(x).f() }`,$/;"	f
_	./go/printer/printer_test.go	/^		file, err := parser.ParseFile(fset, "", "package p; func _() {"+src+"}", parser.ParseComments)$/;"	f
_	./go/printer/printer_test.go	/^func _() {}$/;"	f
_	./go/types/api_test.go	/^		\/\/ {`package p2; type mybool bool; var m map[string]complex128; var b mybool; func _() { _, b = m["foo"] }`,$/;"	f
_	./go/types/api_test.go	/^		{`package a5; func _(x int) { _ = x }`, `x`, `value, addressable, assignable`},$/;"	f
_	./go/types/api_test.go	/^		{`package a6; func _()(x int) { _ = x; return }`, `x`, `value, addressable, assignable`},$/;"	f
_	./go/types/api_test.go	/^		{`package a7; type T int; func (x T) _() { _ = x }`, `x`, `value, addressable, assignable`},$/;"	f
_	./go/types/api_test.go	/^		{`package m0; import "os"; func _() { _ = os.Stdout }`, `os`, `<missing>`},$/;"	f
_	./go/types/api_test.go	/^		{`package m1; import p "os"; func _() { _ = p.Stdout }`, `p`, `<missing>`},$/;"	f
_	./go/types/api_test.go	/^		{`package m6; func _()(x int) { return }`, `x`, `<missing>`},$/;"	f
_	./go/types/api_test.go	/^		{`package m6; func _(x int) {}`, `x`, `<missing>`},$/;"	f
_	./go/types/api_test.go	/^		{`package m6; type T int; func (x T) _() {}`, `x`, `<missing>`},$/;"	f
_	./go/types/api_test.go	/^		{`package p10; func _() { switch x := 0; x { case 1: y := x; _ = y; default: }}`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p11; func _(t interface{}) { switch t.(type) {} }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p12; func _(t interface{}) { switch t := t; t.(type) {} }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p13; func _(t interface{}) { switch x := t.(type) { case int: _ = x } }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p14; func _() { select{} }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p15; func _(c chan int) { select{ case <-c: } }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p16; func _(c chan int) { select{ case i := <-c: x := i; _ = x} }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p17; func _() { for{} }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p18; func _(n int) { for i := 0; i < n; i++ { _ = i } }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p19; func _(a []int) { for i := range a { _ = i} }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p1; var x interface{}; func _() { _, _ = x.(int) }`,$/;"	f
_	./go/types/api_test.go	/^		{`package p20; var s int; func _(a []int) { for i, x := range a { s += x; _ = i } }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p2; func _() {}`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p2; var m map[string]complex128; var b bool; func _() { _, b = m["foo"] }`,$/;"	f
_	./go/types/api_test.go	/^		{`package p3; func _(x, y int) {}`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p4; func _(x, y int) { x, z := 1, 2; _ = z }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p5; func _(x, y int) (u, _ int) { return }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p6; func _() { { var x int; _ = x } }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p7; func _() { if true {} }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p8; func _() { if x := 0; x < 0 { y := x; _ = y } }`, []string{$/;"	f
_	./go/types/api_test.go	/^		{`package p9; func _() { switch x := 0; x {} }`, []string{$/;"	f
_	./go/types/builtins_test.go	/^	src := fmt.Sprintf(`package p; import "unsafe"; type _ unsafe.Pointer \/* use unsafe *\/; func _() { %s }`, src0)$/;"	f
_	./go/types/issues_test.go	/^func _() {$/;"	f
_	./go/types/resolver_test.go	/^		func (T) _() {}$/;"	f
_	./go/types/resolver_test.go	/^		func _() {$/;"	f
_	./go/types/resolver_test.go	/^		func _(s []int) { for i, x := range s { _, _ = i, x } }$/;"	f
_	./go/types/resolver_test.go	/^		func _(x interface{}) {$/;"	f
_	./internal/format/format.go	/^			src = src[2*indent+len("package p\\n\\nfunc _() {"):]$/;"	f
_	./internal/format/format.go	/^	fsrc := append(append([]byte("package p; func _() {"), src...), '\\n', '\\n', '}')$/;"	f
_	./syscall/syscall_unix_test.go	/^func _() {$/;"	f
_0	./runtime/memclr_386.s	/^_0:$/;"	l
_0	./runtime/memclr_amd64.s	/^_0:$/;"	l
_0	./runtime/memclr_plan9_386.s	/^_0:$/;"	l
_0through16	./runtime/asm_amd64.s	/^_0through16:$/;"	l
_0through16	./runtime/asm_amd64p32.s	/^_0through16:$/;"	l
_0through4	./runtime/asm_386.s	/^_0through4:$/;"	l
_0through8	./runtime/asm_amd64.s	/^_0through8:$/;"	l
_0through8	./runtime/asm_amd64p32.s	/^_0through8:$/;"	l
_129through256	./runtime/memclr_386.s	/^_129through256:$/;"	l
_129through256	./runtime/memclr_amd64.s	/^_129through256:$/;"	l
_17through32	./runtime/memclr_386.s	/^_17through32:$/;"	l
_17through32	./runtime/memclr_amd64.s	/^_17through32:$/;"	l
_1or2	./runtime/memclr_386.s	/^_1or2:$/;"	l
_1or2	./runtime/memclr_amd64.s	/^_1or2:$/;"	l
_1or2	./runtime/memclr_plan9_386.s	/^_1or2:$/;"	l
_1tail	./runtime/memclr_arm.s	/^_1tail:$/;"	l
_33through64	./runtime/memclr_386.s	/^_33through64:$/;"	l
_33through64	./runtime/memclr_amd64.s	/^_33through64:$/;"	l
_3or4	./runtime/memclr_386.s	/^_3or4:$/;"	l
_3or4	./runtime/memclr_amd64.s	/^_3or4:$/;"	l
_3or4	./runtime/memclr_plan9_386.s	/^_3or4:$/;"	l
_4align	./runtime/memclr_arm.s	/^_4align:				\/* align on 4 *\/$/;"	l
_4aligned	./runtime/memclr_arm.s	/^_4aligned:$/;"	l
_4loop	./runtime/memclr_arm.s	/^_4loop:$/;"	l
_4tail	./runtime/memclr_arm.s	/^_4tail:$/;"	l
_5through8	./runtime/memclr_386.s	/^_5through8:$/;"	l
_5through8	./runtime/memclr_amd64.s	/^_5through8:$/;"	l
_5through8	./runtime/memclr_plan9_386.s	/^_5through8:$/;"	l
_65through128	./runtime/memclr_386.s	/^_65through128:$/;"	l
_65through128	./runtime/memclr_amd64.s	/^_65through128:$/;"	l
_9through16	./runtime/memclr_386.s	/^_9through16:$/;"	l
_9through16	./runtime/memclr_amd64.s	/^_9through16:$/;"	l
_9through16	./runtime/memclr_plan9_386.s	/^_9through16:$/;"	l
_ASCII_Hex_Digit	./unicode/tables.go	/^var _ASCII_Hex_Digit = &RangeTable{$/;"	v
_Accuracy_index	./cmd/compile/internal/big/accuracy_string.go	/^var _Accuracy_index = [...]uint8{0, 5, 10, 15}$/;"	v
_Accuracy_index	./math/big/accuracy_string.go	/^var _Accuracy_index = [...]uint8{0, 5, 10, 15}$/;"	v
_Ahom	./unicode/tables.go	/^var _Ahom = &RangeTable{$/;"	v
_Anatolian_Hieroglyphs	./unicode/tables.go	/^var _Anatolian_Hieroglyphs = &RangeTable{$/;"	v
_Arabic	./unicode/tables.go	/^var _Arabic = &RangeTable{$/;"	v
_Armenian	./unicode/tables.go	/^var _Armenian = &RangeTable{$/;"	v
_Avestan	./unicode/tables.go	/^var _Avestan = &RangeTable{$/;"	v
_Balinese	./unicode/tables.go	/^var _Balinese = &RangeTable{$/;"	v
_Bamum	./unicode/tables.go	/^var _Bamum = &RangeTable{$/;"	v
_Bassa_Vah	./unicode/tables.go	/^var _Bassa_Vah = &RangeTable{$/;"	v
_Batak	./unicode/tables.go	/^var _Batak = &RangeTable{$/;"	v
_Bengali	./unicode/tables.go	/^var _Bengali = &RangeTable{$/;"	v
_Bidi_Control	./unicode/tables.go	/^var _Bidi_Control = &RangeTable{$/;"	v
_Bopomofo	./unicode/tables.go	/^var _Bopomofo = &RangeTable{$/;"	v
_Brahmi	./unicode/tables.go	/^var _Brahmi = &RangeTable{$/;"	v
_Braille	./unicode/tables.go	/^var _Braille = &RangeTable{$/;"	v
_Buginese	./unicode/tables.go	/^var _Buginese = &RangeTable{$/;"	v
_Buhid	./unicode/tables.go	/^var _Buhid = &RangeTable{$/;"	v
_C	./unicode/tables.go	/^var _C = &RangeTable{$/;"	v
_Canadian_Aboriginal	./unicode/tables.go	/^var _Canadian_Aboriginal = &RangeTable{$/;"	v
_Carian	./unicode/tables.go	/^var _Carian = &RangeTable{$/;"	v
_CaseRanges	./unicode/maketables.go	/^			"var _CaseRanges = []CaseRange {\\n",$/;"	v
_CaseRanges	./unicode/tables.go	/^var _CaseRanges = []CaseRange{$/;"	v
_Caucasian_Albanian	./unicode/tables.go	/^var _Caucasian_Albanian = &RangeTable{$/;"	v
_Cc	./unicode/tables.go	/^var _Cc = &RangeTable{$/;"	v
_Cf	./unicode/tables.go	/^var _Cf = &RangeTable{$/;"	v
_Cfunc_CString	./cmd/cgo/out.go	/^func _Cfunc_CString(s string) *_Ctype_char {$/;"	f
_Cfunc_GoBytes	./cmd/cgo/out.go	/^func _Cfunc_GoBytes(p unsafe.Pointer, l _Ctype_int) []byte {$/;"	f
_Cfunc_GoString	./cmd/cgo/out.go	/^func _Cfunc_GoString(p *_Ctype_char) string {$/;"	f
_Cfunc_GoStringN	./cmd/cgo/out.go	/^func _Cfunc_GoStringN(p *_Ctype_char, l _Ctype_int) string {$/;"	f
_Cfunc__CMalloc	./cmd/cgo/out.go	/^func _Cfunc__CMalloc(n _Ctype_size_t) unsafe.Pointer {$/;"	f
_Cfunc_puts	./cmd/cgo/doc.go	/^	func _Cfunc_puts(p0 *_Ctype_char) (r1 _Ctype_int) {$/;"	f
_Cfunc_sin	./cmd/cgo/doc.go	/^	func _Cfunc_sin(p0 _Ctype_double) (r1 _Ctype_double) {$/;"	f
_Cgo_always_false	./cmd/cgo/out.go	/^		fmt.Fprintf(fgo2, "var _Cgo_always_false bool\\n")$/;"	v
_Cgo_ptr	./cmd/cgo/out.go	/^	fmt.Fprintf(fgo2, "func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }\\n\\n")$/;"	f
_Cgo_use	./cmd/cgo/out.go	/^		fmt.Fprintf(fgo2, "func _Cgo_use(interface{})\\n")$/;"	f
_Chakma	./unicode/tables.go	/^var _Chakma = &RangeTable{$/;"	v
_Cham	./unicode/tables.go	/^var _Cham = &RangeTable{$/;"	v
_Cherokee	./unicode/tables.go	/^var _Cherokee = &RangeTable{$/;"	v
_Class_index	./debug/dwarf/class_string.go	/^var _Class_index = [...]uint8{0, 12, 22, 35, 47, 56, 68, 83, 94, 111, 125, 142, 153, 170, 184}$/;"	v
_Co	./unicode/tables.go	/^var _Co = &RangeTable{$/;"	v
_Common	./unicode/tables.go	/^var _Common = &RangeTable{$/;"	v
_Complex	./reflect/all_test.go	/^type _Complex struct {$/;"	t
_Coptic	./unicode/tables.go	/^var _Coptic = &RangeTable{$/;"	v
_Cs	./unicode/tables.go	/^var _Cs = &RangeTable{$/;"	v
_Ctype_char	./cmd/cgo/doc.go	/^	type _Ctype_char int8$/;"	t
_Ctype_double	./cmd/cgo/doc.go	/^	type _Ctype_double float64$/;"	t
_Ctype_int	./cmd/cgo/doc.go	/^	type _Ctype_int int32$/;"	t
_Ctype_void	./cmd/cgo/doc.go	/^	type _Ctype_void [0]byte$/;"	t
_Ctype_void	./cmd/cgo/out.go	/^		fmt.Fprintf(fgo2, "type _Ctype_void [0]byte\\n")$/;"	t
_Ctype_void	./cmd/cgo/out.go	/^		fmt.Fprintf(fgo2, "type _Ctype_void byte\\n")$/;"	t
_Cuneiform	./unicode/tables.go	/^var _Cuneiform = &RangeTable{$/;"	v
_Cypriot	./unicode/tables.go	/^var _Cypriot = &RangeTable{$/;"	v
_Cyrillic	./unicode/tables.go	/^var _Cyrillic = &RangeTable{$/;"	v
_Dash	./unicode/tables.go	/^var _Dash = &RangeTable{$/;"	v
_Deprecated	./unicode/tables.go	/^var _Deprecated = &RangeTable{$/;"	v
_Deseret	./unicode/tables.go	/^var _Deseret = &RangeTable{$/;"	v
_Devanagari	./unicode/tables.go	/^var _Devanagari = &RangeTable{$/;"	v
_Diacritic	./unicode/tables.go	/^var _Diacritic = &RangeTable{$/;"	v
_DnsQuery	./syscall/zsyscall_windows.go	/^func _DnsQuery(name *uint16, qtype uint16, options uint32, extra *byte, qrs **DNSRecord, pr *byte) (status error) {$/;"	f
_Duployan	./unicode/tables.go	/^var _Duployan = &RangeTable{$/;"	v
_ELF64_ST_BIND	./runtime/vdso_linux_amd64.go	/^func _ELF64_ST_BIND(val byte) byte { return val >> 4 }$/;"	f
_ELF64_ST_TYPE	./runtime/vdso_linux_amd64.go	/^func _ELF64_ST_TYPE(val byte) byte { return val & 0xf }$/;"	f
_Egyptian_Hieroglyphs	./unicode/tables.go	/^var _Egyptian_Hieroglyphs = &RangeTable{$/;"	v
_Elbasan	./unicode/tables.go	/^var _Elbasan = &RangeTable{$/;"	v
_Ethiopic	./unicode/tables.go	/^var _Ethiopic = &RangeTable{$/;"	v
_Extender	./unicode/tables.go	/^var _Extender = &RangeTable{$/;"	v
_ExternalCode	./runtime/proc1.go	/^func _ExternalCode() { _ExternalCode() }$/;"	f
_GC	./runtime/proc1.go	/^func _GC()           { _GC() }$/;"	f
_Georgian	./unicode/tables.go	/^var _Georgian = &RangeTable{$/;"	v
_GetHostByName	./syscall/zsyscall_windows.go	/^func _GetHostByName(name *byte) (h *Hostent, err error) {$/;"	f
_GetProcAddress	./syscall/zsyscall_windows.go	/^func _GetProcAddress(module Handle, procname *byte) (proc uintptr, err error) {$/;"	f
_GetProtoByName	./syscall/zsyscall_windows.go	/^func _GetProtoByName(name *byte) (p *Protoent, err error) {$/;"	f
_GetServByName	./syscall/zsyscall_windows.go	/^func _GetServByName(name *byte, proto *byte) (s *Servent, err error) {$/;"	f
_Gid_t	./syscall/types_darwin.go	/^type _Gid_t C.gid_t$/;"	t
_Gid_t	./syscall/types_dragonfly.go	/^type _Gid_t C.gid_t$/;"	t
_Gid_t	./syscall/types_freebsd.go	/^type _Gid_t C.gid_t$/;"	t
_Gid_t	./syscall/types_linux.go	/^type _Gid_t C.gid_t$/;"	t
_Gid_t	./syscall/types_netbsd.go	/^type _Gid_t C.gid_t$/;"	t
_Gid_t	./syscall/types_openbsd.go	/^type _Gid_t C.gid_t$/;"	t
_Gid_t	./syscall/types_solaris.go	/^type _Gid_t C.gid_t$/;"	t
_Gid_t	./syscall/ztypes_darwin_386.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_darwin_amd64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_darwin_arm.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_darwin_arm64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_dragonfly_amd64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_freebsd_386.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_freebsd_amd64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_freebsd_arm.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_linux_386.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_linux_amd64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_linux_arm.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_linux_arm64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_linux_ppc64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_linux_ppc64le.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_netbsd_386.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_netbsd_amd64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_netbsd_arm.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_openbsd_386.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_openbsd_amd64.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_openbsd_arm.go	/^type _Gid_t uint32$/;"	t
_Gid_t	./syscall/ztypes_solaris_amd64.go	/^type _Gid_t uint32$/;"	t
_Glagolitic	./unicode/tables.go	/^var _Glagolitic = &RangeTable{$/;"	v
_Gothic	./unicode/tables.go	/^var _Gothic = &RangeTable{$/;"	v
_Grantha	./unicode/tables.go	/^var _Grantha = &RangeTable{$/;"	v
_Greek	./unicode/tables.go	/^var _Greek = &RangeTable{$/;"	v
_Gujarati	./unicode/tables.go	/^var _Gujarati = &RangeTable{$/;"	v
_Gurmukhi	./unicode/tables.go	/^var _Gurmukhi = &RangeTable{$/;"	v
_Han	./unicode/tables.go	/^var _Han = &RangeTable{$/;"	v
_Hangul	./unicode/tables.go	/^var _Hangul = &RangeTable{$/;"	v
_Hanunoo	./unicode/tables.go	/^var _Hanunoo = &RangeTable{$/;"	v
_Hatran	./unicode/tables.go	/^var _Hatran = &RangeTable{$/;"	v
_Hebrew	./unicode/tables.go	/^var _Hebrew = &RangeTable{$/;"	v
_Hex_Digit	./unicode/tables.go	/^var _Hex_Digit = &RangeTable{$/;"	v
_Hiragana	./unicode/tables.go	/^var _Hiragana = &RangeTable{$/;"	v
_Hyphen	./unicode/tables.go	/^var _Hyphen = &RangeTable{$/;"	v
_IDS_Binary_Operator	./unicode/tables.go	/^var _IDS_Binary_Operator = &RangeTable{$/;"	v
_IDS_Trinary_Operator	./unicode/tables.go	/^var _IDS_Trinary_Operator = &RangeTable{$/;"	v
_Ideographic	./unicode/tables.go	/^var _Ideographic = &RangeTable{$/;"	v
_Imperial_Aramaic	./unicode/tables.go	/^var _Imperial_Aramaic = &RangeTable{$/;"	v
_Inherited	./unicode/tables.go	/^var _Inherited = &RangeTable{$/;"	v
_Inscriptional_Pahlavi	./unicode/tables.go	/^var _Inscriptional_Pahlavi = &RangeTable{$/;"	v
_Inscriptional_Parthian	./unicode/tables.go	/^var _Inscriptional_Parthian = &RangeTable{$/;"	v
_Javanese	./unicode/tables.go	/^var _Javanese = &RangeTable{$/;"	v
_Join_Control	./unicode/tables.go	/^var _Join_Control = &RangeTable{$/;"	v
_K	./crypto/sha256/sha256block.go	/^var _K = []uint32{$/;"	v
_K	./crypto/sha512/sha512block.go	/^var _K = []uint64{$/;"	v
_KSYSTEM_TIME	./runtime/os1_windows.go	/^type _KSYSTEM_TIME struct {$/;"	t
_Kaithi	./unicode/tables.go	/^var _Kaithi = &RangeTable{$/;"	v
_Kannada	./unicode/tables.go	/^var _Kannada = &RangeTable{$/;"	v
_Katakana	./unicode/tables.go	/^var _Katakana = &RangeTable{$/;"	v
_Kayah_Li	./unicode/tables.go	/^var _Kayah_Li = &RangeTable{$/;"	v
_Kharoshthi	./unicode/tables.go	/^var _Kharoshthi = &RangeTable{$/;"	v
_Khmer	./unicode/tables.go	/^var _Khmer = &RangeTable{$/;"	v
_Khojki	./unicode/tables.go	/^var _Khojki = &RangeTable{$/;"	v
_Khudawadi	./unicode/tables.go	/^var _Khudawadi = &RangeTable{$/;"	v
_L	./unicode/tables.go	/^var _L = &RangeTable{$/;"	v
_Lao	./unicode/tables.go	/^var _Lao = &RangeTable{$/;"	v
_Latin	./unicode/tables.go	/^var _Latin = &RangeTable{$/;"	v
_Lepcha	./unicode/tables.go	/^var _Lepcha = &RangeTable{$/;"	v
_Limbu	./unicode/tables.go	/^var _Limbu = &RangeTable{$/;"	v
_Linear_A	./unicode/tables.go	/^var _Linear_A = &RangeTable{$/;"	v
_Linear_B	./unicode/tables.go	/^var _Linear_B = &RangeTable{$/;"	v
_Lisu	./unicode/tables.go	/^var _Lisu = &RangeTable{$/;"	v
_Ll	./unicode/tables.go	/^var _Ll = &RangeTable{$/;"	v
_Lm	./unicode/tables.go	/^var _Lm = &RangeTable{$/;"	v
_Lo	./unicode/tables.go	/^var _Lo = &RangeTable{$/;"	v
_LoadLibrary	./syscall/zsyscall_windows.go	/^func _LoadLibrary(libname *uint16) (handle Handle, err error) {$/;"	f
_Logical_Order_Exception	./unicode/tables.go	/^var _Logical_Order_Exception = &RangeTable{$/;"	v
_Lt	./unicode/tables.go	/^var _Lt = &RangeTable{$/;"	v
_Lu	./unicode/tables.go	/^var _Lu = &RangeTable{$/;"	v
_Lycian	./unicode/tables.go	/^var _Lycian = &RangeTable{$/;"	v
_Lydian	./unicode/tables.go	/^var _Lydian = &RangeTable{$/;"	v
_M	./unicode/tables.go	/^var _M = &RangeTable{$/;"	v
_Mahajani	./unicode/tables.go	/^var _Mahajani = &RangeTable{$/;"	v
_Malayalam	./unicode/tables.go	/^var _Malayalam = &RangeTable{$/;"	v
_Mandaic	./unicode/tables.go	/^var _Mandaic = &RangeTable{$/;"	v
_Manichaean	./unicode/tables.go	/^var _Manichaean = &RangeTable{$/;"	v
_Mc	./unicode/tables.go	/^var _Mc = &RangeTable{$/;"	v
_Me	./unicode/tables.go	/^var _Me = &RangeTable{$/;"	v
_Meetei_Mayek	./unicode/tables.go	/^var _Meetei_Mayek = &RangeTable{$/;"	v
_Mende_Kikakui	./unicode/tables.go	/^var _Mende_Kikakui = &RangeTable{$/;"	v
_Meroitic_Cursive	./unicode/tables.go	/^var _Meroitic_Cursive = &RangeTable{$/;"	v
_Meroitic_Hieroglyphs	./unicode/tables.go	/^var _Meroitic_Hieroglyphs = &RangeTable{$/;"	v
_Miao	./unicode/tables.go	/^var _Miao = &RangeTable{$/;"	v
_Mn	./unicode/tables.go	/^var _Mn = &RangeTable{$/;"	v
_Modi	./unicode/tables.go	/^var _Modi = &RangeTable{$/;"	v
_Mongolian	./unicode/tables.go	/^var _Mongolian = &RangeTable{$/;"	v
_Mro	./unicode/tables.go	/^var _Mro = &RangeTable{$/;"	v
_Multani	./unicode/tables.go	/^var _Multani = &RangeTable{$/;"	v
_Myanmar	./unicode/tables.go	/^var _Myanmar = &RangeTable{$/;"	v
_N	./unicode/tables.go	/^var _N = &RangeTable{$/;"	v
_Nabataean	./unicode/tables.go	/^var _Nabataean = &RangeTable{$/;"	v
_Nd	./unicode/tables.go	/^var _Nd = &RangeTable{$/;"	v
_New_Tai_Lue	./unicode/tables.go	/^var _New_Tai_Lue = &RangeTable{$/;"	v
_Nko	./unicode/tables.go	/^var _Nko = &RangeTable{$/;"	v
_Nl	./unicode/tables.go	/^var _Nl = &RangeTable{$/;"	v
_No	./unicode/tables.go	/^var _No = &RangeTable{$/;"	v
_Noncharacter_Code_Point	./unicode/tables.go	/^var _Noncharacter_Code_Point = &RangeTable{$/;"	v
_Ogham	./unicode/tables.go	/^var _Ogham = &RangeTable{$/;"	v
_Ol_Chiki	./unicode/tables.go	/^var _Ol_Chiki = &RangeTable{$/;"	v
_Old_Hungarian	./unicode/tables.go	/^var _Old_Hungarian = &RangeTable{$/;"	v
_Old_Italic	./unicode/tables.go	/^var _Old_Italic = &RangeTable{$/;"	v
_Old_North_Arabian	./unicode/tables.go	/^var _Old_North_Arabian = &RangeTable{$/;"	v
_Old_Permic	./unicode/tables.go	/^var _Old_Permic = &RangeTable{$/;"	v
_Old_Persian	./unicode/tables.go	/^var _Old_Persian = &RangeTable{$/;"	v
_Old_South_Arabian	./unicode/tables.go	/^var _Old_South_Arabian = &RangeTable{$/;"	v
_Old_Turkic	./unicode/tables.go	/^var _Old_Turkic = &RangeTable{$/;"	v
_Oriya	./unicode/tables.go	/^var _Oriya = &RangeTable{$/;"	v
_Osmanya	./unicode/tables.go	/^var _Osmanya = &RangeTable{$/;"	v
_Other_Alphabetic	./unicode/tables.go	/^var _Other_Alphabetic = &RangeTable{$/;"	v
_Other_Default_Ignorable_Code_Point	./unicode/tables.go	/^var _Other_Default_Ignorable_Code_Point = &RangeTable{$/;"	v
_Other_Grapheme_Extend	./unicode/tables.go	/^var _Other_Grapheme_Extend = &RangeTable{$/;"	v
_Other_ID_Continue	./unicode/tables.go	/^var _Other_ID_Continue = &RangeTable{$/;"	v
_Other_ID_Start	./unicode/tables.go	/^var _Other_ID_Start = &RangeTable{$/;"	v
_Other_Lowercase	./unicode/tables.go	/^var _Other_Lowercase = &RangeTable{$/;"	v
_Other_Math	./unicode/tables.go	/^var _Other_Math = &RangeTable{$/;"	v
_Other_Uppercase	./unicode/tables.go	/^var _Other_Uppercase = &RangeTable{$/;"	v
_P	./unicode/tables.go	/^var _P = &RangeTable{$/;"	v
_Pahawh_Hmong	./unicode/tables.go	/^var _Pahawh_Hmong = &RangeTable{$/;"	v
_Palmyrene	./unicode/tables.go	/^var _Palmyrene = &RangeTable{$/;"	v
_Pattern_Syntax	./unicode/tables.go	/^var _Pattern_Syntax = &RangeTable{$/;"	v
_Pattern_White_Space	./unicode/tables.go	/^var _Pattern_White_Space = &RangeTable{$/;"	v
_Pau_Cin_Hau	./unicode/tables.go	/^var _Pau_Cin_Hau = &RangeTable{$/;"	v
_Pc	./unicode/tables.go	/^var _Pc = &RangeTable{$/;"	v
_Pd	./unicode/tables.go	/^var _Pd = &RangeTable{$/;"	v
_Pe	./unicode/tables.go	/^var _Pe = &RangeTable{$/;"	v
_Pf	./unicode/tables.go	/^var _Pf = &RangeTable{$/;"	v
_Phags_Pa	./unicode/tables.go	/^var _Phags_Pa = &RangeTable{$/;"	v
_Phoenician	./unicode/tables.go	/^var _Phoenician = &RangeTable{$/;"	v
_Pi	./unicode/tables.go	/^var _Pi = &RangeTable{$/;"	v
_Plink	./runtime/os_plan9.go	/^type _Plink uintptr$/;"	t
_Po	./unicode/tables.go	/^var _Po = &RangeTable{$/;"	v
_Ps	./unicode/tables.go	/^var _Ps = &RangeTable{$/;"	v
_Psalter_Pahlavi	./unicode/tables.go	/^var _Psalter_Pahlavi = &RangeTable{$/;"	v
_Quotation_Mark	./unicode/tables.go	/^var _Quotation_Mark = &RangeTable{$/;"	v
_REG_subcomp	./regexp/testdata/testregex.c	/^#undef	_REG_subcomp$/;"	d	file:
_Radical	./unicode/tables.go	/^var _Radical = &RangeTable{$/;"	v
_Rejang	./unicode/tables.go	/^var _Rejang = &RangeTable{$/;"	v
_RoundingMode_index	./cmd/compile/internal/big/roundingmode_string.go	/^var _RoundingMode_index = [...]uint8{0, 13, 26, 32, 44, 57, 70}$/;"	v
_RoundingMode_index	./math/big/roundingmode_string.go	/^var _RoundingMode_index = [...]uint8{0, 13, 26, 32, 44, 57, 70}$/;"	v
_Runic	./unicode/tables.go	/^var _Runic = &RangeTable{$/;"	v
_S	./unicode/tables.go	/^var _S = &RangeTable{$/;"	v
_STerm	./unicode/tables.go	/^var _STerm = &RangeTable{$/;"	v
_Samaritan	./unicode/tables.go	/^var _Samaritan = &RangeTable{$/;"	v
_Saurashtra	./unicode/tables.go	/^var _Saurashtra = &RangeTable{$/;"	v
_Sc	./unicode/tables.go	/^var _Sc = &RangeTable{$/;"	v
_Sharada	./unicode/tables.go	/^var _Sharada = &RangeTable{$/;"	v
_Shavian	./unicode/tables.go	/^var _Shavian = &RangeTable{$/;"	v
_Siddham	./unicode/tables.go	/^var _Siddham = &RangeTable{$/;"	v
_SignWriting	./unicode/tables.go	/^var _SignWriting = &RangeTable{$/;"	v
_Sinhala	./unicode/tables.go	/^var _Sinhala = &RangeTable{$/;"	v
_Sk	./unicode/tables.go	/^var _Sk = &RangeTable{$/;"	v
_Sm	./unicode/tables.go	/^var _Sm = &RangeTable{$/;"	v
_So	./unicode/tables.go	/^var _So = &RangeTable{$/;"	v
_Socklen	./syscall/types_darwin.go	/^type _Socklen C.socklen_t$/;"	t
_Socklen	./syscall/types_dragonfly.go	/^type _Socklen C.socklen_t$/;"	t
_Socklen	./syscall/types_freebsd.go	/^type _Socklen C.socklen_t$/;"	t
_Socklen	./syscall/types_linux.go	/^type _Socklen C.socklen_t$/;"	t
_Socklen	./syscall/types_netbsd.go	/^type _Socklen C.socklen_t$/;"	t
_Socklen	./syscall/types_openbsd.go	/^type _Socklen C.socklen_t$/;"	t
_Socklen	./syscall/types_solaris.go	/^type _Socklen C.socklen_t$/;"	t
_Socklen	./syscall/ztypes_darwin_386.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_darwin_amd64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_darwin_arm.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_darwin_arm64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_dragonfly_amd64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_freebsd_386.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_freebsd_amd64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_freebsd_arm.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_linux_386.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_linux_amd64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_linux_arm.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_linux_arm64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_linux_ppc64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_linux_ppc64le.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_netbsd_386.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_netbsd_amd64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_netbsd_arm.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_openbsd_386.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_openbsd_amd64.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_openbsd_arm.go	/^type _Socklen uint32$/;"	t
_Socklen	./syscall/ztypes_solaris_amd64.go	/^type _Socklen uint32$/;"	t
_Soft_Dotted	./unicode/tables.go	/^var _Soft_Dotted = &RangeTable{$/;"	v
_Sora_Sompeng	./unicode/tables.go	/^var _Sora_Sompeng = &RangeTable{$/;"	v
_Sundanese	./unicode/tables.go	/^var _Sundanese = &RangeTable{$/;"	v
_Syloti_Nagri	./unicode/tables.go	/^var _Syloti_Nagri = &RangeTable{$/;"	v
_Syriac	./unicode/tables.go	/^var _Syriac = &RangeTable{$/;"	v
_System	./runtime/proc1.go	/^func _System()       { _System() }$/;"	f
_Tagalog	./unicode/tables.go	/^var _Tagalog = &RangeTable{$/;"	v
_Tagbanwa	./unicode/tables.go	/^var _Tagbanwa = &RangeTable{$/;"	v
_Tai_Le	./unicode/tables.go	/^var _Tai_Le = &RangeTable{$/;"	v
_Tai_Tham	./unicode/tables.go	/^var _Tai_Tham = &RangeTable{$/;"	v
_Tai_Viet	./unicode/tables.go	/^var _Tai_Viet = &RangeTable{$/;"	v
_Takri	./unicode/tables.go	/^var _Takri = &RangeTable{$/;"	v
_Tamil	./unicode/tables.go	/^var _Tamil = &RangeTable{$/;"	v
_Telugu	./unicode/tables.go	/^var _Telugu = &RangeTable{$/;"	v
_Terminal_Punctuation	./unicode/tables.go	/^var _Terminal_Punctuation = &RangeTable{$/;"	v
_Thaana	./unicode/tables.go	/^var _Thaana = &RangeTable{$/;"	v
_Thai	./unicode/tables.go	/^var _Thai = &RangeTable{$/;"	v
_Tibetan	./unicode/tables.go	/^var _Tibetan = &RangeTable{$/;"	v
_Tifinagh	./unicode/tables.go	/^var _Tifinagh = &RangeTable{$/;"	v
_Tirhuta	./unicode/tables.go	/^var _Tirhuta = &RangeTable{$/;"	v
_TurkishCase	./unicode/casetables.go	/^var _TurkishCase = SpecialCase{$/;"	v
_Ugaritic	./unicode/tables.go	/^var _Ugaritic = &RangeTable{$/;"	v
_Unified_Ideograph	./unicode/tables.go	/^var _Unified_Ideograph = &RangeTable{$/;"	v
_Vai	./unicode/tables.go	/^var _Vai = &RangeTable{$/;"	v
_Variation_Selector	./unicode/tables.go	/^var _Variation_Selector = &RangeTable{$/;"	v
_Warang_Citi	./unicode/tables.go	/^var _Warang_Citi = &RangeTable{$/;"	v
_White_Space	./unicode/tables.go	/^var _White_Space = &RangeTable{$/;"	v
_Yi	./unicode/tables.go	/^var _Yi = &RangeTable{$/;"	v
_Z	./unicode/tables.go	/^var _Z = &RangeTable{$/;"	v
_Zl	./unicode/tables.go	/^var _Zl = &RangeTable{$/;"	v
_Zp	./unicode/tables.go	/^var _Zp = &RangeTable{$/;"	v
_Zs	./unicode/tables.go	/^var _Zs = &RangeTable{$/;"	v
__cgo_	./cmd/cgo/out.go	/^				fmt.Fprintf(fgo2, "var __cgo_%s byte\\n", n.C)$/;"	v
__cgo_gcc_Cfunc_sin	./cmd/cgo/doc.go	/^	var __cgo_gcc_Cfunc_sin byte$/;"	v
__cgofn_	./cmd/cgo/out.go	/^	fmt.Fprintf(fgo2, "var __cgofn_%s byte\\n", cname)$/;"	v
__cgofn__cgo_be59f0f25121_Cfunc_puts	./cmd/cgo/doc.go	/^	var __cgofn__cgo_be59f0f25121_Cfunc_puts byte$/;"	v
__getitem__	./runtime/runtime-gdb.py	/^	def __getitem__(self, i):$/;"	m	class:SliceValue	file:
__init__	./runtime/runtime-gdb.py	/^	def __init__(self):$/;"	m	class:DTypeFunc
__init__	./runtime/runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoCapFunc
__init__	./runtime/runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoIfaceCmd
__init__	./runtime/runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoLenFunc
__init__	./runtime/runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoroutineCmd
__init__	./runtime/runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoroutinesCmd
__init__	./runtime/runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:ChanTypePrinter
__init__	./runtime/runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:IfacePrinter
__init__	./runtime/runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:MapTypePrinter
__init__	./runtime/runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:SliceTypePrinter
__init__	./runtime/runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:SliceValue
__init__	./runtime/runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:StringTypePrinter
__tsan_acquire	./runtime/race1.go	/^var __tsan_acquire byte$/;"	v
__tsan_finalizer_goroutine	./runtime/race1.go	/^var __tsan_finalizer_goroutine byte$/;"	v
__tsan_fini	./runtime/race1.go	/^var __tsan_fini byte$/;"	v
__tsan_go_end	./runtime/race1.go	/^var __tsan_go_end byte$/;"	v
__tsan_go_ignore_sync_begin	./runtime/race1.go	/^var __tsan_go_ignore_sync_begin byte$/;"	v
__tsan_go_ignore_sync_end	./runtime/race1.go	/^var __tsan_go_ignore_sync_end byte$/;"	v
__tsan_go_start	./runtime/race1.go	/^var __tsan_go_start byte$/;"	v
__tsan_init	./runtime/race1.go	/^var __tsan_init byte$/;"	v
__tsan_malloc	./runtime/race1.go	/^var __tsan_malloc byte$/;"	v
__tsan_map_shadow	./runtime/race1.go	/^var __tsan_map_shadow byte$/;"	v
__tsan_release	./runtime/race1.go	/^var __tsan_release byte$/;"	v
__tsan_release_merge	./runtime/race1.go	/^var __tsan_release_merge byte$/;"	v
_atoi	./runtime/os1_plan9.go	/^func _atoi(b []byte) int {$/;"	f
_b1tail	./runtime/memmove_arm.s	/^_b1tail:				\/* remaining bytes *\/$/;"	l
_b32loop	./runtime/memmove_arm.s	/^_b32loop:$/;"	l
_b4align	./runtime/memmove_arm.s	/^_b4align:				\/* align destination on 4 *\/$/;"	l
_b4aligned	./runtime/memmove_arm.s	/^_b4aligned:				\/* is source now aligned? *\/$/;"	l
_b4loop	./runtime/memmove_arm.s	/^_b4loop:$/;"	l
_b4tail	./runtime/memmove_arm.s	/^_b4tail:				\/* do remaining words if possible *\/$/;"	l
_back	./runtime/memmove_arm.s	/^_back:$/;"	l
_badsignal	./runtime/os1_plan9.go	/^var _badsignal = []byte("runtime: signal received on thread not created by Go.\\n")$/;"	v
_bu16loop	./runtime/memmove_arm.s	/^_bu16loop:$/;"	l
_bu1tail	./runtime/memmove_arm.s	/^_bu1tail:$/;"	l
_bunaligned	./runtime/memmove_arm.s	/^_bunaligned:$/;"	l
_cgo_be59f0f25121_Cfunc_puts	./cmd/cgo/doc.go	/^	var _cgo_be59f0f25121_Cfunc_puts = unsafe.Pointer(&__cgofn__cgo_be59f0f25121_Cfunc_puts)$/;"	v
_cgo_free	./runtime/cgo/callbacks.go	/^var _cgo_free = &x_cgo_free$/;"	v
_cgo_gcc_Cfunc_sin	./cmd/cgo/doc.go	/^	var _cgo_gcc_Cfunc_sin = unsafe.Pointer(&__cgo_gcc_Cfunc_sin)$/;"	v
_cgo_init	./runtime/cgo/callbacks.go	/^var _cgo_init = &x_cgo_init$/;"	v
_cgo_malloc	./runtime/cgo/callbacks.go	/^var _cgo_malloc = &x_cgo_malloc$/;"	v
_cgo_notify_runtime_init_done	./runtime/cgo/callbacks.go	/^var _cgo_notify_runtime_init_done = &x_cgo_notify_runtime_init_done$/;"	v
_cgo_panic	./runtime/cgo/callbacks.go	/^func _cgo_panic(a unsafe.Pointer, n int32) {$/;"	f
_cgo_panic_internal	./runtime/cgocallback.go	/^func _cgo_panic_internal(p *byte) {$/;"	f
_cgo_runtime_cgocall	./cmd/cgo/out.go	/^func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32$/;"	f
_cgo_runtime_cgocallback	./cmd/cgo/out.go	/^func _cgo_runtime_cgocallback(unsafe.Pointer, unsafe.Pointer, uintptr)$/;"	f
_cgo_runtime_cmalloc	./cmd/cgo/out.go	/^func _cgo_runtime_cmalloc(uintptr) unsafe.Pointer$/;"	f
_cgo_runtime_gobytes	./cmd/cgo/out.go	/^func _cgo_runtime_gobytes(unsafe.Pointer, int) []byte$/;"	f
_cgo_runtime_gostring	./cmd/cgo/out.go	/^func _cgo_runtime_gostring(*_Ctype_char) string$/;"	f
_cgo_runtime_gostringn	./cmd/cgo/out.go	/^func _cgo_runtime_gostringn(*_Ctype_char, int) string$/;"	f
_cgo_setenv	./runtime/cgo/setenv.go	/^var _cgo_setenv = &x_cgo_setenv$/;"	v
_cgo_setenv	./runtime/env_plan9.go	/^var _cgo_setenv unsafe.Pointer   \/\/ pointer to C function$/;"	v
_cgo_setenv	./runtime/env_posix.go	/^var _cgo_setenv unsafe.Pointer   \/\/ pointer to C function$/;"	v
_cgo_sys_thread_create	./runtime/cgo/callbacks.go	/^var _cgo_sys_thread_create = &x_cgo_sys_thread_create$/;"	v
_cgo_sys_thread_start	./runtime/cgo/gcc_darwin_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_darwin_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_darwin_arm.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_darwin_arm64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_dragonfly_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_freebsd_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_freebsd_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_freebsd_arm.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_linux_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_linux_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_linux_arm.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_linux_arm64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_linux_ppc64x.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_netbsd_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_netbsd_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_netbsd_arm.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_openbsd_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_openbsd_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_solaris_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_windows_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_sys_thread_start	./runtime/cgo/gcc_windows_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
_cgo_thread_start	./runtime/cgo/callbacks.go	/^var _cgo_thread_start = &x_cgo_thread_start$/;"	v
_cgo_unsetenv	./runtime/cgo/setenv.go	/^var _cgo_unsetenv = &x_cgo_unsetenv$/;"	v
_cgo_unsetenv	./runtime/env_plan9.go	/^var _cgo_unsetenv unsafe.Pointer \/\/ pointer to C function$/;"	v
_cgo_unsetenv	./runtime/env_posix.go	/^var _cgo_unsetenv unsafe.Pointer \/\/ pointer to C function$/;"	v
_cgo_wait_runtime_init_done	./runtime/cgo/gcc_libinit.c	/^_cgo_wait_runtime_init_done() {$/;"	f
_cgo_wait_runtime_init_done	./runtime/cgo/gcc_libinit_linux_ppc64x.c	/^_cgo_wait_runtime_init_done() {$/;"	f
_cgo_wait_runtime_init_done	./runtime/cgo/gcc_libinit_openbsd.c	/^_cgo_wait_runtime_init_done() {$/;"	f
_cgo_wait_runtime_init_done	./runtime/cgo/gcc_libinit_windows.c	/^_cgo_wait_runtime_init_done() {$/;"	f
_cgoexp	./cmd/cgo/out.go	/^		fmt.Fprintf(fgo2, "func _cgoexp%s_%s(a unsafe.Pointer, n int32) {", cPrefix, exp.ExpName)$/;"	f
_cos	./math/sin.go	/^var _cos = [...]float64{$/;"	v
_d2v	./runtime/vlrt.go	/^func _d2v(y *uint64, d float64) {$/;"	f
_defer	./runtime/runtime2.go	/^type _defer struct {$/;"	t
_div64by32	./runtime/vlrt.go	/^func _div64by32(a uint64, b uint32, r *uint32) (q uint32)$/;"	f
_environ	./runtime/cgo/dragonfly.go	/^var _environ uintptr$/;"	v
_environ	./runtime/cgo/freebsd.go	/^var _environ uintptr$/;"	v
_environ	./runtime/cgo/netbsd.go	/^var _environ uintptr$/;"	v
_environ	./runtime/cgo/openbsd.go	/^var _environ uintptr$/;"	v
_f1tail	./runtime/memmove_arm.s	/^_f1tail:$/;"	l
_f32loop	./runtime/memclr_arm.s	/^_f32loop:$/;"	l
_f32loop	./runtime/memmove_arm.s	/^_f32loop:$/;"	l
_f4align	./runtime/memmove_arm.s	/^_f4align:				\/* align destination on 4 *\/$/;"	l
_f4aligned	./runtime/memmove_arm.s	/^_f4aligned:				\/* is source now aligned? *\/$/;"	l
_f4loop	./runtime/memmove_arm.s	/^_f4loop:$/;"	l
_f4tail	./runtime/memmove_arm.s	/^_f4tail:$/;"	l
_forward	./runtime/memmove_arm.s	/^_forward:$/;"	l
_fu16loop	./runtime/memmove_arm.s	/^_fu16loop:$/;"	l
_fu1tail	./runtime/memmove_arm.s	/^_fu1tail:$/;"	l
_funaligned	./runtime/memmove_arm.s	/^_funaligned:$/;"	l
_func	./runtime/runtime2.go	/^type _func struct {$/;"	t
_gamP	./math/gamma.go	/^var _gamP = [...]float64{$/;"	v
_gamQ	./math/gamma.go	/^var _gamQ = [...]float64{$/;"	v
_gamS	./math/gamma.go	/^var _gamS = [...]float64{$/;"	v
_guard_local	./runtime/cgo/openbsd.go	/^var _guard_local uintptr$/;"	v
_i	./reflect/all_test.go	/^var _i = 7$/;"	v
_iscgo	./runtime/cgo/iscgo.go	/^var _iscgo bool = true$/;"	v
_lgamA	./math/lgamma.go	/^var _lgamA = [...]float64{$/;"	v
_lgamR	./math/lgamma.go	/^var _lgamR = [...]float64{$/;"	v
_lgamS	./math/lgamma.go	/^var _lgamS = [...]float64{$/;"	v
_lgamT	./math/lgamma.go	/^var _lgamT = [...]float64{$/;"	v
_lgamU	./math/lgamma.go	/^var _lgamU = [...]float64{$/;"	v
_lgamV	./math/lgamma.go	/^var _lgamV = [...]float64{$/;"	v
_lgamW	./math/lgamma.go	/^var _lgamW = [...]float64{$/;"	v
_lookup	./cmd/internal/obj/sym.go	/^func _lookup(ctxt *Link, symb string, v int, create bool) *LSym {$/;"	f
_lookup	./cmd/link/internal/ld/sym.go	/^func _lookup(ctxt *Link, symb string, v int, creat int) *LSym {$/;"	f
_loop	./runtime/asm_arm.s	/^_loop:$/;"	l
_memmove	./runtime/memmove_arm.s	/^_memmove:$/;"	l
_mul64by32	./runtime/vlrt.go	/^func _mul64by32(lo64 *uint64, a uint64, b uint32) (hi32 uint32)$/;"	f
_notfound	./runtime/asm_arm.s	/^_notfound:$/;"	l
_p0	./syscall/syscall_darwin.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/syscall_darwin.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/syscall_dragonfly.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/syscall_freebsd.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/syscall_openbsd.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_darwin_386.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_darwin_386.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_darwin_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_darwin_amd64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_darwin_arm.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_darwin_arm.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_darwin_arm64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_darwin_arm64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_dragonfly_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_dragonfly_amd64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_freebsd_386.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_freebsd_386.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_freebsd_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_freebsd_amd64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_freebsd_arm.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_freebsd_arm.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_linux_386.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_linux_386.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_linux_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_linux_amd64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_linux_arm.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_linux_arm.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_linux_arm64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_linux_arm64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_linux_ppc64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_linux_ppc64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_linux_ppc64le.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_linux_ppc64le.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_nacl_386.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_nacl_amd64p32.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_nacl_arm.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_netbsd_386.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_netbsd_386.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_netbsd_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_netbsd_amd64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_netbsd_arm.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_netbsd_arm.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_openbsd_386.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_openbsd_386.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_openbsd_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_openbsd_amd64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_openbsd_arm.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_openbsd_arm.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_plan9_386.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_plan9_386.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_plan9_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_plan9_amd64.go	/^	var _p0 unsafe.Pointer$/;"	v
_p0	./syscall/zsyscall_solaris_amd64.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_windows.go	/^	var _p0 *byte$/;"	v
_p0	./syscall/zsyscall_windows.go	/^	var _p0 *uint16$/;"	v
_p0	./syscall/zsyscall_windows.go	/^	var _p0 uint32$/;"	v
_p1	./syscall/zsyscall_darwin_386.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_darwin_386.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_darwin_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_darwin_amd64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_darwin_arm.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_darwin_arm.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_darwin_arm64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_darwin_arm64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_dragonfly_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_dragonfly_amd64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_freebsd_386.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_freebsd_386.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_freebsd_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_freebsd_amd64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_freebsd_arm.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_freebsd_arm.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_linux_386.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_linux_386.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_linux_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_linux_amd64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_linux_arm.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_linux_arm.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_linux_arm64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_linux_arm64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_linux_ppc64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_linux_ppc64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_linux_ppc64le.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_linux_ppc64le.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_netbsd_386.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_netbsd_386.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_netbsd_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_netbsd_amd64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_netbsd_arm.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_netbsd_arm.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_openbsd_386.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_openbsd_386.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_openbsd_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_openbsd_amd64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_openbsd_arm.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_openbsd_arm.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_plan9_386.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_plan9_386.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_plan9_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_plan9_amd64.go	/^	var _p1 unsafe.Pointer$/;"	v
_p1	./syscall/zsyscall_solaris_amd64.go	/^	var _p1 *byte$/;"	v
_p1	./syscall/zsyscall_windows.go	/^	var _p1 *byte$/;"	v
_p2	./syscall/zsyscall_linux_386.go	/^	var _p2 *byte$/;"	v
_p2	./syscall/zsyscall_linux_386.go	/^	var _p2 unsafe.Pointer$/;"	v
_p2	./syscall/zsyscall_linux_amd64.go	/^	var _p2 *byte$/;"	v
_p2	./syscall/zsyscall_linux_amd64.go	/^	var _p2 unsafe.Pointer$/;"	v
_p2	./syscall/zsyscall_linux_arm.go	/^	var _p2 *byte$/;"	v
_p2	./syscall/zsyscall_linux_arm.go	/^	var _p2 unsafe.Pointer$/;"	v
_p2	./syscall/zsyscall_linux_arm64.go	/^	var _p2 *byte$/;"	v
_p2	./syscall/zsyscall_linux_arm64.go	/^	var _p2 unsafe.Pointer$/;"	v
_p2	./syscall/zsyscall_linux_ppc64.go	/^	var _p2 *byte$/;"	v
_p2	./syscall/zsyscall_linux_ppc64.go	/^	var _p2 unsafe.Pointer$/;"	v
_p2	./syscall/zsyscall_linux_ppc64le.go	/^	var _p2 *byte$/;"	v
_p2	./syscall/zsyscall_linux_ppc64le.go	/^	var _p2 unsafe.Pointer$/;"	v
_panic	./runtime/runtime2.go	/^type _panic struct {$/;"	t
_progname	./runtime/cgo/dragonfly.go	/^var _progname uintptr$/;"	v
_progname	./runtime/cgo/freebsd.go	/^var _progname uintptr$/;"	v
_progname	./runtime/cgo/netbsd.go	/^var _progname uintptr$/;"	v
_progname	./runtime/cgo/openbsd.go	/^var _progname uintptr$/;"	v
_return	./runtime/memclr_arm.s	/^_return:$/;"	l
_return	./runtime/memmove_arm.s	/^_return:$/;"	l
_runtime_cgo_panic_internal	./runtime/cgo/callbacks.go	/^var _runtime_cgo_panic_internal byte$/;"	v
_runtime_cgocallback	./runtime/cgo/callbacks.go	/^func _runtime_cgocallback(unsafe.Pointer, unsafe.Pointer, uintptr)$/;"	f
_sfloat2	./runtime/softfloat_arm.go	/^func _sfloat2(pc uint32, regs [15]uint32) (newpc uint32) {$/;"	f
_sfloatpanic	./runtime/softfloat_arm.go	/^func _sfloatpanic()$/;"	f
_sib_loop	./runtime/asm_arm.s	/^_sib_loop:$/;"	l
_sib_notfound	./runtime/asm_arm.s	/^_sib_notfound:$/;"	l
_sin	./math/sin.go	/^var _sin = [...]float64{$/;"	v
_string	./runtime/runtime2.go	/^type _string struct {$/;"	t
_t1	./encoding/gob/codec_test.go	/^	var _t1 T1$/;"	v
_tanP	./math/tan.go	/^var _tanP = [...]float64{$/;"	v
_tanQ	./math/tan.go	/^var _tanQ = [...]float64{$/;"	v
_type	./runtime/type.go	/^type _type struct {$/;"	t
_typekind	./cmd/compile/internal/gc/typecheck.go	/^var _typekind = []string{$/;"	v
_urldecode	./net/http/cgi/testdata/test.cgi	/^sub _urldecode {$/;"	s
_vdso	./runtime/os_linux_386.go	/^var _vdso uint32$/;"	v
_yylex	./cmd/compile/internal/gc/lex.go	/^func _yylex(yylval *yySymType) int32 {$/;"	f
_yylex_lstk	./cmd/compile/internal/gc/lex.go	/^var _yylex_lstk *Loophack$/;"	v
_zero	./syscall/syscall.go	/^var _zero uintptr$/;"	v
a10	./debug/dwarf/testdata/typedef.c	/^t_func_void_of_void *a10;$/;"	v
a11	./debug/dwarf/testdata/typedef.c	/^t_func_void_of_ptr_char_dots *a11;$/;"	v
a12	./debug/dwarf/testdata/typedef.c	/^t_my_struct *a12;$/;"	v
a12a	./debug/dwarf/testdata/typedef.c	/^t_my_struct1 *a12a;$/;"	v
a12b	./debug/dwarf/testdata/typedef.c	/^t_my_union *a12b;$/;"	v
a13	./debug/dwarf/testdata/typedef.c	/^t_my_enum *a13;$/;"	v
a14	./debug/dwarf/testdata/typedef.c	/^t_my_list *a14;$/;"	v
a15	./debug/dwarf/testdata/typedef.c	/^t_my_tree *a15;$/;"	v
a16	./debug/dwarf/testdata/typedef.c	/^t_ptr_func_int_of_float_complex *a16;$/;"	v
a17	./debug/dwarf/testdata/typedef.c	/^t_ptr_func_int_of_double_complex *a17;$/;"	v
a18	./debug/dwarf/testdata/typedef.c	/^t_ptr_func_int_of_long_double_complex *a18;$/;"	v
a2	./cmd/compile/internal/big/rat.go	/^	var a2, b2 nat$/;"	v
a2	./cmd/internal/obj/arm/asm5.go	/^				var a2 *obj.Addr$/;"	v
a2	./cmd/internal/obj/arm/asm5.go	/^			var a2 *obj.Addr$/;"	v
a2	./debug/dwarf/testdata/typedef.c	/^t_ptr_volatile_int *a2;$/;"	v
a2	./math/big/rat.go	/^	var a2, b2 nat$/;"	v
a3	./encoding/gob/type_test.go	/^	var a3 [3]int$/;"	v
a3a	./debug/dwarf/testdata/typedef.c	/^t_ptr_const_char **a3a;$/;"	v
a4	./debug/dwarf/testdata/typedef.c	/^t_long *a4;$/;"	v
a4	./encoding/gob/type_test.go	/^	var a4 [4]int$/;"	v
a5	./debug/dwarf/testdata/typedef.c	/^t_ushort *a5;$/;"	v
a6	./debug/dwarf/testdata/typedef.c	/^t_func_int_of_float_double *a6;$/;"	v
a7	./debug/dwarf/testdata/typedef.c	/^t_ptr_func_int_of_float_double *a7;$/;"	v
a8	./debug/dwarf/testdata/typedef.c	/^t_func_ptr_int_of_char_schar_uchar *a8;$/;"	v
a9	./debug/dwarf/testdata/typedef.c	/^t_func_void_of_char *a9;$/;"	v
aNewline	./go/printer/printer.go	/^var aNewline = []byte("\\n")$/;"	v
aSpace	./cmd/internal/obj/util.go	/^var aSpace []opSet$/;"	v
abbr	./time/genzabbrs.go	/^type abbr struct {$/;"	t
abbr	./time/zoneinfo_abbrs_windows.go	/^type abbr struct {$/;"	t
abbrev	./debug/dwarf/entry.go	/^type abbrev struct {$/;"	t
abbrev	./time/zoneinfo_windows.go	/^func abbrev(z *syscall.Timezoneinformation) (std, dst string) {$/;"	f
abbrevTable	./debug/dwarf/entry.go	/^type abbrevTable map[uint32]abbrev$/;"	t
abbrevo	./cmd/link/internal/ld/dwarf.go	/^var abbrevo int64$/;"	v
abbrevs	./cmd/link/internal/ld/dwarf.go	/^var abbrevs = [DW_NABRV]DWAbbrev{$/;"	v
abbrevsize	./cmd/link/internal/ld/dwarf.go	/^var abbrevsize int64$/;"	v
abbrevsym	./cmd/link/internal/ld/dwarf.go	/^var abbrevsym *LSym$/;"	v
abbrevsympos	./cmd/link/internal/ld/dwarf.go	/^var abbrevsympos int64$/;"	v
abbrs	./time/genzabbrs.go	/^var abbrs = map[string]abbr{$/;"	v
abbrs	./time/zoneinfo_abbrs_windows.go	/^var abbrs = map[string]abbr{$/;"	v
abcd	./bytes/bytes_test.go	/^var abcd = "abcd"$/;"	v
abcd	./strings/strings_test.go	/^var abcd = "abcd"$/;"	v
abort	./syscall/syscall_windows_test.go	/^func abort(funcname string, err error) {$/;"	f
above	./go/types/call.go	/^				\/\/ If we created a synthetic pointer type above, we will throw$/;"	t
abs	./bytes/reader.go	/^	var abs int64$/;"	v
abs	./image/png/paeth.go	/^func abs(x int) int {$/;"	f
abs	./math/abs.go	/^func abs(x float64) float64 {$/;"	f
abs	./math/cmplx/cmath_test.go	/^var abs = []float64{$/;"	v
abs	./path/filepath/path_plan9.go	/^func abs(path string) (string, error) {$/;"	f
abs	./path/filepath/path_unix.go	/^func abs(path string) (string, error) {$/;"	f
abs	./path/filepath/path_windows.go	/^func abs(path string) (string, error) {$/;"	f
abs	./strings/reader.go	/^	var abs int64$/;"	v
abs	./time/time.go	/^func (t Time) abs() uint64 {$/;"	f
abs	./time/time_test.go	/^func abs(t Time) (sec, nsec int64) {$/;"	f
abs8	./image/png/writer.go	/^func abs8(d uint8) int {$/;"	f
absClock	./time/time.go	/^func absClock(abs uint64) (hour, min, sec int) {$/;"	f
absDate	./time/time.go	/^func absDate(abs uint64, full bool) (year int, month Month, day int, yday int) {$/;"	f
absInt32	./math/rand/normal.go	/^func absInt32(i int32) uint32 {$/;"	f
absSC	./math/cmplx/cmath_test.go	/^var absSC = []float64{$/;"	v
absString	./time/time_test.go	/^func absString(t Time) string {$/;"	f
absTestDirs	./path/filepath/path_test.go	/^var absTestDirs = []string{$/;"	v
absTests	./path/filepath/path_test.go	/^var absTests = []string{$/;"	v
absWeekday	./time/time.go	/^func absWeekday(abs uint64) Weekday {$/;"	f
ac	./cmd/compile/internal/gc/const.go	/^	var ac Mpflt$/;"	v
ac	./go/constant/value.go	/^			var ac, bd, bc, ad big.Rat$/;"	v
ac	./go/constant/value.go	/^			var ac, bd, bc, ad, s, cc, dd big.Rat$/;"	v
acc0	./sync/mutex_test.go	/^	var acc0, acc1 uint64$/;"	v
accept	./fmt/scan.go	/^func (s *ss) accept(ok string) bool {$/;"	f
accept	./net/fd_unix.go	/^func (fd *netFD) accept() (netfd *netFD, err error) {$/;"	f
accept	./net/fd_windows.go	/^func (fd *netFD) accept() (*netFD, error) {$/;"	f
accept	./net/sock_cloexec.go	/^func accept(s int) (int, syscall.Sockaddr, error) {$/;"	f
accept	./net/sys_cloexec.go	/^func accept(s int) (int, syscall.Sockaddr, error) {$/;"	f
accept	./syscall/net_nacl.go	/^func (f *netFile) accept() (fd int, sa Sockaddr, err error) {$/;"	f
accept	./syscall/syscall_linux_386.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_darwin_386.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_darwin_amd64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_darwin_arm.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_darwin_arm64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_dragonfly_amd64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_freebsd_386.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_freebsd_amd64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_freebsd_arm.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_linux_amd64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_linux_arm.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_linux_arm64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_linux_ppc64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_linux_ppc64le.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_netbsd_386.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_netbsd_amd64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_netbsd_arm.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_openbsd_386.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_openbsd_amd64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_openbsd_arm.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./syscall/zsyscall_solaris_amd64.go	/^func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {$/;"	f
accept	./text/template/parse/lex.go	/^func (l *lexer) accept(valid string) bool {$/;"	f
accept4	./syscall/syscall_linux_386.go	/^func accept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error) {$/;"	f
accept4	./syscall/zsyscall_freebsd_386.go	/^func accept4(fd int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (nfd int, err error) {$/;"	f
accept4	./syscall/zsyscall_freebsd_amd64.go	/^func accept4(fd int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (nfd int, err error) {$/;"	f
accept4	./syscall/zsyscall_freebsd_arm.go	/^func accept4(fd int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (nfd int, err error) {$/;"	f
accept4	./syscall/zsyscall_linux_amd64.go	/^func accept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error) {$/;"	f
accept4	./syscall/zsyscall_linux_arm.go	/^func accept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error) {$/;"	f
accept4	./syscall/zsyscall_linux_arm64.go	/^func accept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error) {$/;"	f
accept4	./syscall/zsyscall_linux_ppc64.go	/^func accept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error) {$/;"	f
accept4	./syscall/zsyscall_linux_ppc64le.go	/^func accept4(s int, rsa *RawSockaddrAny, addrlen *_Socklen, flags int) (fd int, err error) {$/;"	f
acceptOne	./net/fd_windows.go	/^func (fd *netFD) acceptOne(rawsa []syscall.RawSockaddrAny, o *operation) (*netFD, error) {$/;"	f
acceptPlan9	./net/ipsock_plan9.go	/^func (fd *netFD) acceptPlan9() (nfd *netFD, err error) {$/;"	f
acceptRun	./text/template/parse/lex.go	/^func (l *lexer) acceptRun(valid string) {$/;"	f
acceptTimeoutTests	./net/timeout_test.go	/^var acceptTimeoutTests = []struct {$/;"	v
access	./runtime/stubs_android.go	/^func access(name *byte, mode int32) int32$/;"	f
access	./syscall/syscall_windows.go	/^	var access uint32$/;"	v
accesses	./cmd/cgo/doc.go	/^struct with a field named "type", x._type accesses the field.$/;"	t
accidentally	./sync/atomic/value.go	/^			\/\/ GC does not see the fake type accidentally.$/;"	t
accurate	./runtime/mgc.go	/^\/\/ The GC runs concurrently with mutator threads, is type accurate (aka precise), allows multiple$/;"	t
aclass	./cmd/internal/obj/arm/asm5.go	/^func aclass(ctxt *obj.Link, a *obj.Addr) int {$/;"	f
aclass	./cmd/internal/obj/arm64/asm7.go	/^func aclass(ctxt *obj.Link, a *obj.Addr) int {$/;"	f
aclass	./cmd/internal/obj/ppc64/asm9.go	/^func aclass(ctxt *obj.Link, a *obj.Addr) int {$/;"	f
aconsize	./cmd/internal/obj/arm/asm5.go	/^func aconsize(ctxt *obj.Link) int {$/;"	f
acos	./math/all_test.go	/^var acos = []float64{$/;"	v
acos	./math/asin.go	/^func acos(x float64) float64 {$/;"	f
acos	./math/cmplx/cmath_test.go	/^var acos = []complex128{$/;"	v
acosSC	./math/all_test.go	/^var acosSC = []float64{$/;"	v
acosSC	./math/cmplx/cmath_test.go	/^var acosSC = []complex128{$/;"	v
acosh	./math/all_test.go	/^var acosh = []float64{$/;"	v
acosh	./math/cmplx/cmath_test.go	/^var acosh = []complex128{$/;"	v
acoshSC	./math/all_test.go	/^var acoshSC = []float64{$/;"	v
acoshSC	./math/cmplx/cmath_test.go	/^var acoshSC = []complex128{$/;"	v
acquireSudog	./runtime/proc.go	/^func acquireSudog() *sudog {$/;"	f
acquireThread	./net/net.go	/^func acquireThread() {$/;"	f
acquirem	./runtime/runtime1.go	/^func acquirem() *m {$/;"	f
acquirep	./runtime/proc1.go	/^func acquirep(_p_ *p) {$/;"	f
acquirep1	./runtime/proc1.go	/^func acquirep1(_p_ *p) {$/;"	f
action	./cmd/yacc/yacc.go	/^	var action int$/;"	v
action	./text/template/parse/parse.go	/^func (t *Tree) action() (n Node) {$/;"	f
active	./testing/cover.go	/^	var active, total int64$/;"	v
activity	./sync/rwmutex_test.go	/^	var activity int32$/;"	v
actual	./bytes/bytes_test.go	/^		var actual string$/;"	v
ad	./cmd/compile/internal/gc/const.go	/^	var ad Mpflt$/;"	v
adapt	./net/http/cookiejar/punycode.go	/^func adapt(delta, numPoints int32, firstTime bool) int32 {$/;"	f
adb	./cmd/yacc/yacc.go	/^var adb = 0     \/\/ debugging for callopt$/;"	v
add	./cmd/compile/internal/big/bits_test.go	/^func (x Bits) add(y Bits) Bits {$/;"	f
add	./cmd/compile/internal/big/nat.go	/^func (z nat) add(x, y nat) nat {$/;"	f
add	./cmd/compile/internal/big/rat_test.go	/^	var add = []int64{$/;"	v
add	./cmd/link/internal/ld/ldelf.go	/^	var add uint64$/;"	v
add	./fmt/print.go	/^func (p *pp) add(c rune) {$/;"	f
add	./go/doc/reader.go	/^func (mset methodSet) add(m *Func) {$/;"	f
add	./go/types/methodset.go	/^func (s fieldSet) add(f *Var, multiples bool) fieldSet {$/;"	f
add	./go/types/methodset.go	/^func (s methodSet) add(list []*Func, index []int, indirect bool, multiples bool) methodSet {$/;"	f
add	./math/big/bits_test.go	/^func (x Bits) add(y Bits) Bits {$/;"	f
add	./math/big/nat.go	/^func (z nat) add(x, y nat) nat {$/;"	f
add	./math/big/rat_test.go	/^	var add = []int64{$/;"	v
add	./regexp/exec.go	/^func (m *machine) add(q *queue, pc uint32, pos int, cap []int, cond syntax.EmptyOp, t *thread) *thread {$/;"	f
add	./runtime/cgo/signal_darwin_armx.go	/^func add(p unsafe.Pointer, x uintptr) unsafe.Pointer {$/;"	f
add	./runtime/cpuprof.go	/^func (p *cpuProfile) add(pc []uintptr) {$/;"	f
add	./runtime/hash_test.go	/^func (s *HashSet) add(h uintptr) {$/;"	f
add	./runtime/softfloat64_test.go	/^func add(x, y float64) float64 { return x + y }$/;"	f
add	./runtime/stubs.go	/^func add(p unsafe.Pointer, x uintptr) unsafe.Pointer {$/;"	f
add	./strings/replace.go	/^func (t *trieNode) add(key, val string, priority int, r *genericReplacer) {$/;"	f
add	./text/template/exec_test.go	/^func add(args ...int) int {$/;"	f
add	./text/template/parse/parse.go	/^func (t *Tree) add(treeSet map[string]*Tree) {$/;"	f
add1	./runtime/mbitmap.go	/^func add1(p *byte) *byte {$/;"	f
add64loop	./sync/atomic/asm_arm.s	/^add64loop:$/;"	l
addAt	./cmd/compile/internal/big/nat.go	/^func addAt(z, x nat, i int) {$/;"	f
addAt	./math/big/nat.go	/^func addAt(z, x nat, i int) {$/;"	f
addB	./runtime/hash_test.go	/^func (s *HashSet) addB(x []byte) {$/;"	f
addComment	./go/ast/commentmap.go	/^func (cmap CommentMap) addComment(n Node, c *CommentGroup) {$/;"	f
addCookieTests	./net/http/cookie_test.go	/^var addCookieTests = []struct {$/;"	v
addCounters	./cmd/cover/cover.go	/^func (f *File) addCounters(pos, blockEnd token.Pos, list []ast.Stmt, extendToClosingBrace bool) []ast.Stmt {$/;"	f
addDateTests	./time/time_test.go	/^var addDateTests = []struct {$/;"	v
addDeclDep	./go/types/check.go	/^func (check *Checker) addDeclDep(to Object) {$/;"	f
addDelImportFn	./cmd/fix/import_test.go	/^func addDelImportFn(p1 string, p2 string) func(*ast.File) bool {$/;"	f
addDep	./database/sql/sql.go	/^func (db *DB) addDep(x finalCloser, dep interface{}) {$/;"	f
addDep	./go/types/resolver.go	/^func (d *declInfo) addDep(obj Object) {$/;"	f
addDepLocked	./database/sql/sql.go	/^func (db *DB) addDepLocked(x finalCloser, dep interface{}) {$/;"	f
addDereference	./cmd/compile/internal/gc/esc.go	/^func (e *EscState) addDereference(n *Node) *Node {$/;"	f
addFieldInfo	./encoding/xml/typeinfo.go	/^func addFieldInfo(typ reflect.Type, tinfo *typeInfo, newf *fieldInfo) error {$/;"	f
addFile	./cmd/pack/pack.go	/^func (ar *Archive) addFile(fd FileLike) {$/;"	f
addFiles	./cmd/pack/pack.go	/^func (ar *Archive) addFiles() {$/;"	f
addFuncs	./text/template/funcs.go	/^func addFuncs(out, in FuncMap) {$/;"	f
addImport	./cmd/cover/cover.go	/^func (f *File) addImport(path string) string {$/;"	f
addImport	./cmd/fix/fix.go	/^func addImport(f *ast.File, ipath string) (added bool) {$/;"	f
addImportFn	./cmd/fix/import_test.go	/^func addImportFn(path ...string) func(*ast.File) bool {$/;"	f
addImportMap	./cmd/compile/internal/gc/lex.go	/^func addImportMap(s string) {$/;"	f
addJacobian	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) addJacobian(x1, y1, z1, x2, y2, z2 *big.Int) (*big.Int, *big.Int, *big.Int) {$/;"	f
addLegacyFrameInfo	./cmd/pprof/internal/profile/legacy_profile.go	/^func (p *Profile) addLegacyFrameInfo() {$/;"	f
addLine	./text/tabwriter/tabwriter.go	/^func (b *Writer) addLine() { b.lines = append(b.lines, []cell{}) }$/;"	f
addLocked	./net/internal/socktest/switch_unix.go	/^func (sw *Switch) addLocked(s, family, sotype, proto int) *Status {$/;"	f
addLocked	./net/internal/socktest/switch_windows.go	/^func (sw *Switch) addLocked(s syscall.Handle, family, sotype, proto int) *Status {$/;"	f
addMethodDecls	./go/types/decl.go	/^func (check *Checker) addMethodDecls(obj *TypeName) {$/;"	f
addMulVVW	./cmd/compile/internal/big/arith_decl.go	/^func addMulVVW(z, x []Word, y Word) (c Word) {$/;"	f
addMulVVW	./math/big/arith_decl.go	/^func addMulVVW(z, x []Word, y Word) (c Word)$/;"	f
addMulVVW	./math/big/arith_decl_pure.go	/^func addMulVVW(z, x []Word, y Word) (c Word) {$/;"	f
addMulVVW_g	./cmd/compile/internal/big/arith.go	/^func addMulVVW_g(z, x []Word, y Word) (c Word) {$/;"	f
addMulVVW_g	./math/big/arith.go	/^func addMulVVW_g(z, x []Word, y Word) (c Word) {$/;"	f
addOffset	./cmd/compile/internal/gc/cgen.go	/^func addOffset(res *Node, offset int64) {$/;"	f
addPkgdef	./cmd/pack/pack.go	/^func (ar *Archive) addPkgdef() {$/;"	f
addS	./runtime/hash_test.go	/^func (s *HashSet) addS(x string) {$/;"	f
addS_seed	./runtime/hash_test.go	/^func (s *HashSet) addS_seed(x string, seed uintptr) {$/;"	f
addString	./cmd/pprof/internal/profile/encode.go	/^func addString(strings map[string]int, s string) int64 {$/;"	f
addTags	./cmd/pprof/internal/report/report.go	/^func (n *node) addTags(s *profile.Sample, weight int64) {$/;"	f
addTestCases	./cmd/fix/main_test.go	/^func addTestCases(t []testCase, fn func(*ast.File) bool) {$/;"	f
addToFlag	./cmd/cgo/gcc.go	/^func (p *Package) addToFlag(flag string, args []string) {$/;"	f
addTracebackSample	./cmd/pprof/internal/profile/legacy_profile.go	/^func addTracebackSample(l []*Location, s []string, p *Profile) {$/;"	f
addTypeBits	./reflect/type.go	/^func addTypeBits(bv *bitVector, offset uintptr, t *rtype) {$/;"	f
addUint64	./sync/atomic/64bit_arm.go	/^func addUint64(val *uint64, delta uint64) (new uint64) {$/;"	f
addUnusedDotImport	./go/types/check.go	/^func (check *Checker) addUnusedDotImport(scope *Scope, pkg *Package, pos token.Pos) {$/;"	f
addVV	./cmd/compile/internal/big/arith_decl.go	/^func addVV(z, x, y []Word) (c Word) {$/;"	f
addVV	./math/big/arith_decl.go	/^func addVV(z, x, y []Word) (c Word)$/;"	f
addVV	./math/big/arith_decl_pure.go	/^func addVV(z, x, y []Word) (c Word) {$/;"	f
addVV_g	./cmd/compile/internal/big/arith.go	/^func addVV_g(z, x, y []Word) (c Word) {$/;"	f
addVV_g	./math/big/arith.go	/^func addVV_g(z, x, y []Word) (c Word) {$/;"	f
addVW	./cmd/compile/internal/big/arith_decl.go	/^func addVW(z, x []Word, y Word) (c Word) {$/;"	f
addVW	./math/big/arith_decl.go	/^func addVW(z, x []Word, y Word) (c Word)$/;"	f
addVW	./math/big/arith_decl_pure.go	/^func addVW(z, x []Word, y Word) (c Word) {$/;"	f
addVW_g	./cmd/compile/internal/big/arith.go	/^func addVW_g(z, x []Word, y Word) (c Word) {$/;"	f
addVW_g	./math/big/arith.go	/^func addVW_g(z, x []Word, y Word) (c Word) {$/;"	f
addValueFuncs	./text/template/funcs.go	/^func addValueFuncs(out map[string]reflect.Value, in FuncMap) {$/;"	f
addVariables	./cmd/cover/cover.go	/^func (f *File) addVariables(w io.Writer) {$/;"	f
addWW_g	./cmd/compile/internal/big/arith.go	/^func addWW_g(x, y, c Word) (z1, z0 Word) {$/;"	f
addWW_g	./math/big/arith.go	/^func addWW_g(x, y, c Word) (z1, z0 Word) {$/;"	f
addaddr	./cmd/internal/obj/data.go	/^func addaddr(ctxt *Link, s *LSym, t *LSym) int64 {$/;"	f
addaddrplus	./cmd/internal/obj/data.go	/^func addaddrplus(ctxt *Link, s *LSym, t *LSym, add int64) int64 {$/;"	f
addaddrplus4	./cmd/internal/obj/data.go	/^func addaddrplus4(ctxt *Link, s *LSym, t *LSym, add int64) int64 {$/;"	f
addaddrplus4	./cmd/link/internal/ld/data.go	/^func addaddrplus4(ctxt *Link, s *LSym, t *LSym, add int64) int64 {$/;"	f
addaddrreloc	./cmd/internal/obj/ppc64/asm9.go	/^func addaddrreloc(ctxt *obj.Link, s *obj.LSym, o1 *uint32, o2 *uint32) {$/;"	f
addb	./runtime/mbitmap.go	/^func addb(p *byte, n uintptr) *byte {$/;"	f
addbuildinfo	./cmd/link/internal/ld/elf.go	/^func addbuildinfo(val string) {$/;"	f
adddot	./cmd/compile/internal/gc/subr.go	/^func adddot(n *Node) *Node {$/;"	f
adddot1	./cmd/compile/internal/gc/subr.go	/^func adddot1(s *Sym, t *Type, d int, save **Type, ignorecase int) int {$/;"	f
adddwarfrel	./cmd/link/internal/ld/dwarf.go	/^func adddwarfrel(sec *LSym, sym *LSym, offsetbase int64, siz int, addend int64) {$/;"	f
adddynlib	./cmd/link/internal/ld/go.go	/^func adddynlib(lib string) {$/;"	f
adddynrel	./cmd/link/internal/amd64/asm.go	/^func adddynrel(s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrel	./cmd/link/internal/arm/asm.go	/^func adddynrel(s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrel	./cmd/link/internal/arm64/asm.go	/^func adddynrel(s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrel	./cmd/link/internal/ppc64/asm.go	/^func adddynrel(s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrel	./cmd/link/internal/x86/asm.go	/^func adddynrel(s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrela	./cmd/link/internal/amd64/asm.go	/^func adddynrela(rela *ld.LSym, s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrela	./cmd/link/internal/arm/asm.go	/^func adddynrela(rel *ld.LSym, s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrela	./cmd/link/internal/arm64/asm.go	/^func adddynrela(rel *ld.LSym, s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrela	./cmd/link/internal/ppc64/asm.go	/^func adddynrela(rel *ld.LSym, s *ld.LSym, r *ld.Reloc) {$/;"	f
adddynrela	./cmd/link/internal/x86/asm.go	/^func adddynrela(rela *ld.LSym, s *ld.LSym, r *ld.Reloc) {$/;"	f
addedge	./cmd/compile/internal/gc/plive.go	/^func addedge(from *BasicBlock, to *BasicBlock) {$/;"	f
addelflib	./cmd/link/internal/ld/elf.go	/^func addelflib(list **Elflib, file string, vers string) *Elfaux {$/;"	f
adderr	./cmd/compile/internal/gc/subr.go	/^func adderr(line int, format string, args ...interface{}) {$/;"	f
adderrorname	./cmd/compile/internal/gc/subr.go	/^func adderrorname(n *Node) {$/;"	f
addexp	./cmd/internal/obj/go.go	/^func addexp(s string) {$/;"	f
addexport	./cmd/link/internal/ld/go.go	/^func addexport() {$/;"	f
addexports	./cmd/link/internal/ld/pe.go	/^func addexports() {$/;"	f
addfinalizer	./runtime/mheap.go	/^func addfinalizer(p unsafe.Pointer, f *funcval, nret uintptr, fint *_type, ot *ptrtype) bool {$/;"	f
addgonote	./cmd/link/internal/ld/elf.go	/^func addgonote(sectionName string, tag uint32, desc []byte) {$/;"	f
addgostring	./cmd/link/internal/ld/data.go	/^func addgostring(s *LSym, symname, str string) {$/;"	f
addgotsym	./cmd/link/internal/amd64/asm.go	/^func addgotsym(s *ld.LSym) {$/;"	f
addgotsym	./cmd/link/internal/arm/asm.go	/^func addgotsym(ctxt *ld.Link, s *ld.LSym) {$/;"	f
addgotsym	./cmd/link/internal/x86/asm.go	/^func addgotsym(ctxt *ld.Link, s *ld.LSym) {$/;"	f
addgotsyminternal	./cmd/link/internal/arm/asm.go	/^func addgotsyminternal(ctxt *ld.Link, s *ld.LSym) {$/;"	f
addidir	./cmd/compile/internal/gc/lex.go	/^func addidir(dir string) {$/;"	f
addimports	./cmd/link/internal/ld/pe.go	/^func addimports(datsect *IMAGE_SECTION_HEADER) {$/;"	f
addindex	./cmd/compile/internal/amd64/ggen.go	/^func addindex(index *gc.Node, width int64, addr *gc.Node) bool {$/;"	f
addindex	./cmd/compile/internal/arm/ggen.go	/^func addindex(index *gc.Node, width int64, addr *gc.Node) bool {$/;"	f
addindex	./cmd/compile/internal/x86/ggen.go	/^func addindex(index *gc.Node, width int64, addr *gc.Node) bool {$/;"	f
addinit	./cmd/compile/internal/gc/subr.go	/^func addinit(np **Node, init *NodeList) {$/;"	f
addinitarrdata	./cmd/link/internal/ld/data.go	/^func addinitarrdata(s *LSym) {$/;"	f
additionalData	./crypto/tls/conn.go	/^			var additionalData [13]byte$/;"	v
addlib	./cmd/link/internal/ld/ld.go	/^func addlib(ctxt *Link, src string, obj string, pathname string) {$/;"	f
addlibpath	./cmd/link/internal/ld/ld.go	/^func addlibpath(ctxt *Link, srcref string, objref string, file string, pkg string, shlibnamefile string) {$/;"	f
addloop	./sync/atomic/asm_386.s	/^addloop:$/;"	l
addloop	./sync/atomic/asm_arm.s	/^addloop:$/;"	l
addloop1	./sync/atomic/asm_linux_arm.s	/^addloop1:$/;"	l
addmachodwarfsect	./cmd/link/internal/ld/dwarf.go	/^func addmachodwarfsect(prev *Section, name string) *Section {$/;"	f
addmethod	./cmd/compile/internal/gc/dcl.go	/^func addmethod(sf *Sym, t *Type, local bool, nointerface bool) {$/;"	f
addmove	./cmd/compile/internal/gc/reg.go	/^func addmove(r *Flow, bn int, rn int, f int) {$/;"	f
addpcrelplus	./cmd/internal/obj/data.go	/^func addpcrelplus(ctxt *Link, s *LSym, t *LSym, add int64) int64 {$/;"	f
addpctab	./cmd/link/internal/ld/pcln.go	/^func addpctab(ftab *LSym, off int32, d *Pcdata) int32 {$/;"	f
addpersrc	./cmd/link/internal/ld/pe.go	/^func addpersrc() {$/;"	f
addpesection	./cmd/link/internal/ld/pe.go	/^func addpesection(name string, sectsize int, filesize int) *IMAGE_SECTION_HEADER {$/;"	f
addpesym	./cmd/link/internal/ld/pe.go	/^func addpesym(s *LSym, name string, type_ int, addr int64, size int64, ver int, gotype *LSym) {$/;"	f
addpesymtable	./cmd/link/internal/ld/pe.go	/^func addpesymtable() {$/;"	f
addpltreloc	./cmd/link/internal/arm/asm.go	/^func addpltreloc(ctxt *ld.Link, plt *ld.LSym, got *ld.LSym, sym *ld.LSym, typ int) *ld.Reloc {$/;"	f
addpltsym	./cmd/link/internal/amd64/asm.go	/^func addpltsym(s *ld.LSym) {$/;"	f
addpltsym	./cmd/link/internal/arm/asm.go	/^func addpltsym(ctxt *ld.Link, s *ld.LSym) {$/;"	f
addpltsym	./cmd/link/internal/ppc64/asm.go	/^func addpltsym(ctxt *ld.Link, s *ld.LSym) {$/;"	f
addpltsym	./cmd/link/internal/x86/asm.go	/^func addpltsym(ctxt *ld.Link, s *ld.LSym) {$/;"	f
addpool	./cmd/internal/obj/arm/asm5.go	/^func addpool(ctxt *obj.Link, p *obj.Prog, a *obj.Addr) {$/;"	f
addpool	./cmd/internal/obj/arm64/asm7.go	/^func addpool(ctxt *obj.Link, p *obj.Prog, a *obj.Addr) {$/;"	f
addr	./cmd/compile/internal/gc/cgen.go	/^				var addr obj.Addr$/;"	v
addr	./cmd/compile/internal/gc/cgen.go	/^		var addr obj.Addr$/;"	v
addr	./cmd/compile/internal/gc/closure.go	/^		var addr *Node$/;"	v
addr	./cmd/fix/import_test.go	/^var addr = flag.String("addr", ":1718", "http service address") \/\/ Q=17, R=18$/;"	v
addr	./cmd/pprof/internal/report/report.go	/^		var addr uint64$/;"	v
addr	./debug/dwarf/buf.go	/^func (b *buf) addr() uint64 {$/;"	f
addr	./net/http/transport.go	/^func (cm *connectMethod) addr() string {$/;"	f
addr	./net/iprawsock_posix.go	/^	var addr *IPAddr$/;"	v
addr	./net/platform_test.go	/^	var addr Addr$/;"	v
addr	./net/udpsock_posix.go	/^	var addr *UDPAddr$/;"	v
addr	./net/unixsock_posix.go	/^	var addr *UnixAddr$/;"	v
addr	./syscall/net_nacl.go	/^type addr string$/;"	t
addr1	./runtime/closure_test.go	/^func addr1(x int) *int {$/;"	f
addr16	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var addr16 = [8]Mem{$/;"	v
addr2	./runtime/closure_test.go	/^func addr2() (x int, p *int) {$/;"	f
addrFamily	./syscall/route_bsd_test.go	/^type addrFamily byte$/;"	t
addrFlagNames	./syscall/route_bsd_test.go	/^var addrFlagNames = [...]string{$/;"	v
addrFlags	./syscall/route_bsd_test.go	/^type addrFlags uint32$/;"	t
addrFunc	./net/sock_posix.go	/^func (fd *netFD) addrFunc() func(syscall.Sockaddr) Addr {$/;"	f
addrList	./net/ipsock.go	/^type addrList []Addr$/;"	t
addrListTests	./net/ipsock_test.go	/^var addrListTests = []struct {$/;"	v
addrLock	./runtime/atomic_arm.go	/^func addrLock(addr *uint64) *mutex {$/;"	f
addrMarshalerEncoder	./encoding/json/encode.go	/^func addrMarshalerEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
addrParser	./net/mail/message.go	/^type addrParser struct {$/;"	t
addrRecordList	./net/dnsclient_unix.go	/^func addrRecordList(rrs []dnsRR) []IPAddr {$/;"	f
addrSeen	./net/http/transport_test.go	/^	var addrSeen map[string]int$/;"	v
addrTable	./net/interface_linux.go	/^func addrTable(ift []Interface, ifi *Interface, msgs []syscall.NetlinkMessage) ([]Addr, error) {$/;"	f
addrTextMarshalerEncoder	./encoding/json/encode.go	/^func addrTextMarshalerEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
addreg	./cmd/compile/internal/gc/reg.go	/^func addreg(a *obj.Addr, rn int) {$/;"	f
addrescapes	./cmd/compile/internal/gc/gen.go	/^func addrescapes(n *Node) {$/;"	f
address	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) address(operand []lex.Token) obj.Addr {$/;"	f
address	./cmd/link/internal/ld/data.go	/^func address() {$/;"	f
address	./cmd/link/internal/ld/elf.go	/^		\/\/ part of the .note.go.abihash section in data.go:func address().$/;"	f
address	./cmd/pprof/internal/report/report.go	/^	var address *uint64$/;"	v
address	./cmd/pprof/internal/report/source.go	/^	var address *uint64$/;"	v
addrinfoErrno	./net/cgo_stub.go	/^type addrinfoErrno int$/;"	t
addrinfoErrno	./net/cgo_unix.go	/^type addrinfoErrno int$/;"	t
addrinfoErrno	./net/cgo_windows.go	/^type addrinfoErrno int$/;"	t
addrput	./cmd/link/internal/ld/dwarf.go	/^func addrput(addr int64) {$/;"	f
addrs	./cmd/internal/objfile/macho.go	/^	var addrs []uint64$/;"	v
addrs	./cmd/internal/objfile/pe.go	/^	var addrs []uint64$/;"	v
addrs	./cmd/internal/objfile/plan9obj.go	/^	var addrs []uint64$/;"	v
addrs	./cmd/pprof/internal/profile/legacy_profile.go	/^		var addrs []uint64$/;"	v
addrs	./net/interface_windows.go	/^	var addrs []windows.IpAdapterAddresses$/;"	v
addrs	./net/ipsock.go	/^	var addrs addrList$/;"	v
addrsize	./debug/dwarf/buf.go	/^func (u unknownFormat) addrsize() int {$/;"	f
addrsize	./debug/dwarf/unit.go	/^func (u *unit) addrsize() int {$/;"	f
addrspace_free	./runtime/mem_linux.go	/^func addrspace_free(v unsafe.Pointer, n uintptr) bool {$/;"	f
addrspace_vec	./runtime/mem_linux.go	/^var addrspace_vec [1]byte$/;"	v
addsection	./cmd/link/internal/ld/lib.go	/^func addsection(seg *Segment, name string, rwx int) *Section {$/;"	f
addselectgosucc	./cmd/compile/internal/gc/plive.go	/^func addselectgosucc(selectgo *BasicBlock) {$/;"	f
addsize	./cmd/internal/obj/data.go	/^func addsize(ctxt *Link, s *LSym, t *LSym) int64 {$/;"	f
addsize	./cmd/link/internal/ld/data.go	/^func addsize(ctxt *Link, s *LSym, t *LSym) int64 {$/;"	f
addspecial	./runtime/mheap.go	/^func addspecial(p unsafe.Pointer, s *special) bool {$/;"	f
addstr	./cmd/compile/internal/gc/walk.go	/^func addstr(n *Node, init **NodeList) *Node {$/;"	f
addstrdata	./cmd/link/internal/ld/data.go	/^func addstrdata(name string, value string) {$/;"	f
addstrdata1	./cmd/link/internal/ld/data.go	/^func addstrdata1(arg string) {$/;"	f
addsym	./cmd/link/internal/ld/macho.go	/^func addsym(s *LSym, name string, type_ int, addr int64, size int64, ver int, gotype *LSym) {$/;"	f
addtimer	./runtime/time.go	/^func addtimer(t *timer) {$/;"	f
addtimerLocked	./runtime/time.go	/^func addtimerLocked(t *timer) {$/;"	f
adduint	./cmd/link/internal/ld/data.go	/^func adduint(ctxt *Link, s *LSym, v uint64) int64 {$/;"	f
adduint16	./cmd/internal/obj/data.go	/^func adduint16(ctxt *Link, s *LSym, v uint16) int64 {$/;"	f
adduint8	./cmd/internal/obj/data.go	/^func adduint8(ctxt *Link, s *LSym, v uint8) int64 {$/;"	f
adduintxx	./cmd/internal/obj/data.go	/^func adduintxx(ctxt *Link, s *LSym, v uint64, wid int) int64 {$/;"	f
adduintxx	./cmd/link/internal/ld/data.go	/^func adduintxx(ctxt *Link, s *LSym, v uint64, wid int) int64 {$/;"	f
addvalue	./cmd/compile/internal/gc/sinit.go	/^func addvalue(p *InitPlan, xoffset int64, key *Node, n *Node) {$/;"	f
addvar	./cmd/compile/internal/gc/dcl.go	/^func addvar(n *Node, t *Type, ctxt uint8) {$/;"	f
addvariant	./cmd/compile/internal/ppc64/prog.go	/^	var addvariant = []int{V_CC, V_V, V_CC | V_V}$/;"	v
addvarint	./cmd/internal/obj/pcln.go	/^func addvarint(ctxt *Link, d *Pcdata, val uint32) {$/;"	f
addvarint	./cmd/link/internal/ld/pcln.go	/^func addvarint(d *Pcdata, val uint32) {$/;"	f
adjBlock	./go/printer/nodes.go	/^func (p *printer) adjBlock(headerSize int, sep whiteSpace, b *ast.BlockStmt) {$/;"	f
adjChunks	./runtime/mfinal_test.go	/^func adjChunks() (*objtype, *objtype) {$/;"	f
adjStringChunk	./runtime/mfinal_test.go	/^func adjStringChunk() (string, *objtype) {$/;"	f
adjacent	./unicode/maketables.go	/^func (c *caseState) adjacent(d *caseState) bool {$/;"	f
adjinfo	./runtime/stack1.go	/^	var adjinfo adjustinfo$/;"	v
adjustLastDigit	./strconv/extfloat.go	/^func adjustLastDigit(d *decimalSlice, currentDiff, targetDiff, maxDiff, ulpDecimal, ulpBinary uint64) bool {$/;"	f
adjustLastDigitFixed	./strconv/extfloat.go	/^func adjustLastDigitFixed(d *decimalSlice, num, den uint64, shift uint, ε uint64) bool {$/;"	f
adjustSourcePath	./cmd/pprof/internal/report/source.go	/^func adjustSourcePath(path string) (*os.File, string, error) {$/;"	f
adjustURL	./cmd/pprof/internal/driver/driver.go	/^func adjustURL(source string, sec int, ui plugin.UI) (adjusted, host string, duration time.Duration) {$/;"	f
adjustargs	./cmd/compile/internal/gc/walk.go	/^func adjustargs(n *Node, adjust int) {$/;"	f
adjustctxt	./runtime/stack1.go	/^func adjustctxt(gp *g, adjinfo *adjustinfo) {$/;"	f
adjustdefers	./runtime/stack1.go	/^func adjustdefers(gp *g, adjinfo *adjustinfo) {$/;"	f
adjustframe	./runtime/stack1.go	/^func adjustframe(frame *stkframe, arg unsafe.Pointer) bool {$/;"	f
adjustinfo	./runtime/stack1.go	/^type adjustinfo struct {$/;"	t
adjustpanics	./runtime/stack1.go	/^func adjustpanics(gp *g, adjinfo *adjustinfo) {$/;"	f
adjustpointer	./runtime/stack1.go	/^func adjustpointer(adjinfo *adjustinfo, vpp unsafe.Pointer) {$/;"	f
adjustpointers	./runtime/stack1.go	/^func adjustpointers(scanp unsafe.Pointer, cbv *bitvector, adjinfo *adjustinfo, f *_func) {$/;"	f
adjuststkbar	./runtime/stack1.go	/^func adjuststkbar(gp *g, adjinfo *adjustinfo) {$/;"	f
adjustsudogs	./runtime/stack1.go	/^func adjustsudogs(gp *g, adjinfo *adjustinfo) {$/;"	f
adst	./cmd/compile/internal/gc/cgen.go	/^	var adst Node$/;"	v
advance	./bufio/scan.go	/^func (s *Scanner) advance(n int) bool {$/;"	f
advance	./fmt/scan.go	/^func (s *ss) advance(format string) (i int) {$/;"	f
advancePC	./debug/dwarf/line.go	/^func (r *LineReader) advancePC(opAdvance int) {$/;"	f
adversaryTestingData	./sort/sort_test.go	/^type adversaryTestingData struct {$/;"	t
aeadAESGCM	./crypto/tls/cipher_suites.go	/^func aeadAESGCM(key, fixedNonce []byte) cipher.AEAD {$/;"	f
aes0	./runtime/asm_386.s	/^aes0:$/;"	l
aes0	./runtime/asm_amd64.s	/^aes0:$/;"	l
aes0to15	./runtime/asm_386.s	/^aes0to15:$/;"	l
aes0to15	./runtime/asm_amd64.s	/^aes0to15:$/;"	l
aes129plus	./runtime/asm_amd64.s	/^aes129plus:$/;"	l
aes16	./runtime/asm_386.s	/^aes16:$/;"	l
aes16	./runtime/asm_amd64.s	/^aes16:$/;"	l
aes17to32	./runtime/asm_386.s	/^aes17to32:$/;"	l
aes17to32	./runtime/asm_amd64.s	/^aes17to32:$/;"	l
aes33to64	./runtime/asm_386.s	/^aes33to64:$/;"	l
aes33to64	./runtime/asm_amd64.s	/^aes33to64:$/;"	l
aes65plus	./runtime/asm_386.s	/^aes65plus:$/;"	l
aes65to128	./runtime/asm_amd64.s	/^aes65to128:$/;"	l
aesCipher	./crypto/aes/cipher.go	/^type aesCipher struct {$/;"	t
aesGCMTests	./crypto/cipher/gcm_test.go	/^var aesGCMTests = []struct {$/;"	v
aeshash	./runtime/alg.go	/^func aeshash(p unsafe.Pointer, h, s uintptr) uintptr$/;"	f
aeshash32	./runtime/alg.go	/^func aeshash32(p unsafe.Pointer, h uintptr) uintptr$/;"	f
aeshash64	./runtime/alg.go	/^func aeshash64(p unsafe.Pointer, h uintptr) uintptr$/;"	f
aeshashstr	./runtime/alg.go	/^func aeshashstr(p unsafe.Pointer, h uintptr) uintptr$/;"	f
aeskeysched	./runtime/alg.go	/^var aeskeysched [hashRandomBytes]byte$/;"	v
aesloop	./runtime/asm_386.s	/^aesloop:$/;"	l
aesloop	./runtime/asm_amd64.s	/^aesloop:$/;"	l
affineFromJacobian	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) affineFromJacobian(x, y, z *big.Int) (xOut, yOut *big.Int) {$/;"	f
afield	./debug/dwarf/entry.go	/^type afield struct {$/;"	t
after	./cmd/nm/doc.go	/^\/\/		print symbol type after name$/;"	t
after	./encoding/gob/type.go	/^	base        reflect.Type \/\/ the base type after all indirections$/;"	t
after	./go/doc/testdata/testing.go	/^func after() {$/;"	f
after	./go/types/expr.go	/^		\/\/ their type after each constant operation.$/;"	t
after	./go/types/issues_test.go	/^type T struct{} \/\/ receiver type after method declaration$/;"	t
after	./testing/testing.go	/^func after() {$/;"	f
afterResult	./time/sleep_test.go	/^type afterResult struct {$/;"	t
afterTest	./net/http/main_test.go	/^func afterTest(t testing.TB) {$/;"	f
afterTimeoutErrc	./net/http/serve_test.go	/^	var afterTimeoutErrc = make(chan error, 1)$/;"	v
afterfork	./runtime/proc1.go	/^func afterfork() {$/;"	f
afun	./cmd/compile/internal/gc/cgen.go	/^	var afun Node$/;"	v
again	./cmd/asm/internal/asm/testdata/arm64.s	/^again:$/;"	l
again	./runtime/asm_386.s	/^again:$/;"	l
again	./runtime/asm_amd64.s	/^again:$/;"	l
again	./runtime/asm_amd64p32.s	/^again:$/;"	l
again	./runtime/asm_arm64.s	/^again:$/;"	l
again	./runtime/asm_ppc64x.s	/^again:$/;"	l
again	./runtime/atomic_arm64.s	/^again:$/;"	l
again	./runtime/sys_linux_arm64.s	/^again:$/;"	l
again	./sync/atomic/asm_arm64.s	/^again:$/;"	l
against	./cmd/link/internal/ld/ldmacho.go	/^		\/\/ TODO: check sym->type against outer->type.$/;"	t
age	./database/sql/sql_test.go	/^			var age int$/;"	v
age	./database/sql/sql_test.go	/^	var age int$/;"	v
aggregate	./cmd/pprof/internal/driver/driver.go	/^func aggregate(prof *profile.Profile, f *flags) error {$/;"	f
ah	./cmd/compile/internal/arm/cgen64.go	/^		var ah gc.Node$/;"	v
ah	./cmd/compile/internal/arm/cgen64.go	/^	var ah gc.Node$/;"	v
aia	./crypto/x509/x509.go	/^			var aia []authorityInfoAccess$/;"	v
aiaValues	./crypto/x509/x509.go	/^		var aiaValues []authorityInfoAccess$/;"	v
aindex	./cmd/compile/internal/gc/subr.go	/^func aindex(b *Node, t *Type) *Type {$/;"	f
aki	./crypto/x509/x509.go	/^		var aki pkix.Extension$/;"	v
al	./cmd/compile/internal/arm/cgen64.go	/^		var al gc.Node$/;"	v
al	./cmd/compile/internal/arm/cgen64.go	/^	var al gc.Node$/;"	v
alarm	./go/doc/testdata/testing.go	/^func alarm() {$/;"	f
alert	./crypto/tls/alert.go	/^type alert uint8$/;"	t
alertErr	./crypto/tls/conn.go	/^	var alertErr error$/;"	v
alertText	./crypto/tls/alert.go	/^var alertText = map[alert]string{$/;"	v
algarray	./runtime/alg.go	/^var algarray = [alg_max]typeAlg{$/;"	v
algorithmTestCases	./strings/replace_test.go	/^var algorithmTestCases = []struct {$/;"	v
algorithms	./runtime/alg.go	/^\/\/ type algorithms - known to compiler$/;"	t
algsym	./cmd/compile/internal/gc/reflect.go	/^	var algsym *Sym$/;"	v
algtype	./cmd/compile/internal/gc/subr.go	/^func algtype(t *Type) int {$/;"	f
algtype1	./cmd/compile/internal/gc/subr.go	/^func algtype1(t *Type, bad **Type) int {$/;"	f
alias	./cmd/compile/internal/big/nat.go	/^func alias(x, y nat) bool {$/;"	f
alias	./math/big/nat.go	/^func alias(x, y nat) bool {$/;"	f
aliased	./cmd/compile/internal/gc/walk.go	/^func aliased(n *Node, all *NodeList, stop *NodeList) bool {$/;"	f
aliases	./cmd/compile/internal/amd64/galign.go	/^ * go declares several platform-specific type aliases:$/;"	t
aliases	./cmd/compile/internal/arm/galign.go	/^ * go declares several platform-specific type aliases:$/;"	t
aliases	./cmd/compile/internal/arm64/galign.go	/^ * go declares several platform-specific type aliases:$/;"	t
aliases	./cmd/compile/internal/ppc64/galign.go	/^ * go declares several platform-specific type aliases:$/;"	t
aliases	./cmd/compile/internal/x86/galign.go	/^ * go declares several platform-specific type aliases:$/;"	t
aliases	./go/types/universe.go	/^var aliases = [...]*Basic{$/;"	v
align	./cmd/link/internal/ld/data.go	/^	var align int32$/;"	v
align	./cmd/link/internal/ld/dwarf.go	/^func align(size int64) {$/;"	f
align	./cmd/vet/asmdecl.go	/^			var align, size int$/;"	v
align	./go/types/sizes.go	/^func align(x, a int64) int64 {$/;"	f
align	./reflect/value.go	/^func align(x, n uintptr) uintptr {$/;"	f
aligndatsize	./cmd/link/internal/ld/data.go	/^func aligndatsize(datsize int64, s *LSym) int64 {$/;"	f
aligned	./crypto/md5/md5block_arm.s	/^aligned:$/;"	l
aligned	./hash/crc32/crc32_amd64.s	/^aligned:$/;"	l
aligned	./hash/crc32/crc32_amd64p32.s	/^aligned:$/;"	l
aligned	./runtime/asm_amd64.s	/^aligned:$/;"	l
aligned	./runtime/asm_amd64p32.s	/^aligned:$/;"	l
alignof	./go/types/sizes.go	/^func (conf *Config) alignof(T Type) int64 {$/;"	f
alike	./cmd/compile/internal/big/float_test.go	/^func alike(x, y *Float) bool {$/;"	f
alike	./math/all_test.go	/^func alike(a, b float64) bool {$/;"	f
alike	./math/big/float_test.go	/^func alike(x, y *Float) bool {$/;"	f
alike	./math/cmplx/cmath_test.go	/^func alike(a, b float64) bool {$/;"	f
alike	./runtime/sqrt_test.go	/^func alike(a, b float64) bool {$/;"	f
alike32	./cmd/compile/internal/big/float_test.go	/^func alike32(x, y float32) bool {$/;"	f
alike32	./math/big/float_test.go	/^func alike32(x, y float32) bool {$/;"	f
alike64	./cmd/compile/internal/big/float_test.go	/^func alike64(x, y float64) bool {$/;"	f
alike64	./math/big/float_test.go	/^func alike64(x, y float64) bool {$/;"	f
alineFromLine	./debug/gosym/symtab.go	/^func (o *Obj) alineFromLine(path string, line int) (int, error) {$/;"	f
alist	./cmd/compile/internal/gc/walk.go	/^		var alist *NodeList$/;"	v
alive	./cmd/compile/internal/gc/popt.go	/^var alive interface{} = nil$/;"	v
all	./archive/zip/zip_test.go	/^	var all []byte$/;"	v
all	./cmd/compile/internal/gc/reflect.go	/^	var all *Sig$/;"	v
all	./cmd/go/pkg.go	/^	var all []string$/;"	v
all	./cmd/vet/main.go	/^var all = flag.Bool("all", true, "check everything; disabled if any explicit check is requested")$/;"	v
all	./debug/elf/file.go	/^	var all []ImportedSymbol$/;"	v
all	./debug/elf/file.go	/^	var all []string$/;"	v
all	./debug/macho/file.go	/^	var all []string$/;"	v
all	./debug/pe/file.go	/^	var all []string$/;"	v
all	./encoding/xml/xml_test.go	/^var all = allScalars{$/;"	v
all	./runtime/pprof/pprof.go	/^	var all []*Profile$/;"	v
all	./runtime/pprof/pprof.go	/^	var all [][]uintptr$/;"	v
all	./unicode/maketables.go	/^func all(scripts map[string][]Script) []string {$/;"	f
allCatFold	./unicode/maketables.go	/^func allCatFold(m map[string]map[rune]bool) []string {$/;"	f
allCategories	./unicode/maketables.go	/^func allCategories() []string {$/;"	f
allCipherSuites	./crypto/tls/handshake_server_test.go	/^func allCipherSuites() []uint16 {$/;"	f
allFF	./net/ip.go	/^func allFF(b []byte) bool {$/;"	f
allIdents	./html/template/escape.go	/^func allIdents(node parse.Node) []string {$/;"	f
allMatches	./regexp/regexp.go	/^func (re *Regexp) allMatches(s string, b []byte, n int, deliver func([]int)) {$/;"	f
allMethods	./go/types/type.go	/^	var allMethods []*Func$/;"	v
allPackages	./cmd/go/main.go	/^func allPackages(pattern string) []string {$/;"	f
allPackagesInFS	./cmd/go/main.go	/^func allPackagesInFS(pattern string) []string {$/;"	f
allRemove	./cmd/go/clean.go	/^	var allRemove []string$/;"	v
allScalars	./encoding/xml/xml_test.go	/^type allScalars struct {$/;"	t
allValue	./encoding/json/decode_test.go	/^var allValue = All{$/;"	v
allValueCompact	./encoding/json/decode_test.go	/^var allValueCompact = strings.Map(noSpace, allValueIndent)$/;"	v
allValueIndent	./encoding/json/decode_test.go	/^var allValueIndent = `{$/;"	v
allfin	./runtime/mfinal.go	/^var allfin *finblock \/\/ list of all blocks$/;"	v
allgadd	./runtime/proc.go	/^func allgadd(gp *g) {$/;"	f
allgood	./runtime/sys_solaris_amd64.s	/^allgood:$/;"	l
alloc	./regexp/exec.go	/^func (m *machine) alloc(i *syntax.Inst) *thread {$/;"	f
alloc	./runtime/netpoll.go	/^func (c *pollCache) alloc() *pollDesc {$/;"	f
alloc	./runtime/trace.go	/^func (a *traceAlloc) alloc(n uintptr) unsafe.Pointer {$/;"	f
allocBytes	./cmd/compile/internal/big/nat_test.go	/^func allocBytes(f func()) uint64 {$/;"	f
allocBytes	./math/big/nat_test.go	/^func allocBytes(f func()) uint64 {$/;"	f
allocRxStr	./cmd/pprof/internal/profile/legacy_profile.go	/^var allocRxStr = strings.Join([]string{$/;"	v
allocSkipRxStr	./cmd/pprof/internal/profile/legacy_profile.go	/^var allocSkipRxStr = strings.Join([]string{$/;"	v
allocValue	./encoding/gob/decode.go	/^func allocValue(t reflect.Type) reflect.Value {$/;"	f
allocatePersistent1K	./runtime/pprof/mprof_test.go	/^func allocatePersistent1K() {$/;"	f
allocateTransient1M	./runtime/pprof/mprof_test.go	/^func allocateTransient1M() {$/;"	f
allocateTransient2M	./runtime/pprof/mprof_test.go	/^func allocateTransient2M() {$/;"	f
allocauto	./cmd/compile/internal/gc/pgen.go	/^func allocauto(ptxt *obj.Prog) {$/;"	f
allocm	./runtime/proc1.go	/^func allocm(_p_ *p, fn func()) *m {$/;"	f
allocmcache	./runtime/mcache.go	/^func allocmcache() *mcache {$/;"	f
allocsPerRunTests	./testing/allocs_test.go	/^var allocsPerRunTests = []struct {$/;"	v
allowed	./cmd/compile/internal/gc/typecheck.go	/^				\/\/ No pushtype allowed here.  Must name fields for that.$/;"	t
allowed	./cmd/compile/internal/gc/typecheck.go	/^				\/\/ No pushtype allowed here.  Tried and rejected.$/;"	t
allowed	./cmd/fix/main.go	/^var allowed, force map[string]bool$/;"	v
allowedMismatchObjdump	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^func allowedMismatchObjdump(text string, size int, inst *Inst, dec ExtInst) bool {$/;"	f
allowedMismatchObjdump	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^func allowedMismatchObjdump(text string, size int, inst *Inst, dec ExtInst) bool {$/;"	f
allowedMismatchPlan9	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^func allowedMismatchPlan9(text string, size int, inst *Inst, dec ExtInst) bool {$/;"	f
allowedMismatchXed	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func allowedMismatchXed(text string, size int, inst *Inst, dec ExtInst) bool {$/;"	f
allowedRewrites	./cmd/fix/main.go	/^var allowedRewrites = flag.String("r", "",$/;"	v
allows	./flag/flag.go	/^	top-level functions.  The FlagSet type allows one to define$/;"	t
allreg	./cmd/compile/internal/gc/reg.go	/^func allreg(b uint64, r *Rgn) uint64 {$/;"	f
allsame	./runtime/asm_386.s	/^allsame:$/;"	l
allsame	./runtime/asm_amd64.s	/^allsame:$/;"	l
allsame	./runtime/asm_amd64p32.s	/^allsame:$/;"	l
allselect	./reflect/all_test.go	/^var allselect = flag.Bool("allselect", false, "exhaustive select test")$/;"	v
alpha	./image/jpeg/dct_test.go	/^func alpha(i int) float64 {$/;"	f
alpha16Model	./image/color/color.go	/^func alpha16Model(c Color) Color {$/;"	f
alphaModel	./image/color/color.go	/^func alphaModel(c Color) Color {$/;"	f
already	./encoding/gob/type.go	/^		panic("bootstrap type already present: " + name + ", " + rt.String())$/;"	t
already	./reflect/all_test.go	/^	\/\/ check that type already in binary is found$/;"	t
alt	./regexp/syntax/compile.go	/^func (c *compiler) alt(f1, f2 frag) frag {$/;"	f
altBit	./cmd/compile/internal/big/int_test.go	/^func altBit(x *Int, i int) uint {$/;"	f
altBit	./math/big/int_test.go	/^func altBit(x *Int, i int) uint {$/;"	f
altGetRandom	./crypto/rand/rand_unix.go	/^var altGetRandom func([]byte) (ok bool)$/;"	v
altSetBit	./cmd/compile/internal/big/int_test.go	/^func altSetBit(z *Int, x *Int, i int, b uint) *Int {$/;"	f
altSetBit	./math/big/int_test.go	/^func altSetBit(z *Int, x *Int, i int, b uint) *Int {$/;"	f
alternate	./regexp/syntax/parse.go	/^func (p *parser) alternate() *Regexp {$/;"	f
alwaysError	./bufio/scan_test.go	/^type alwaysError struct{}$/;"	t
alwaysFalse	./net/http/client.go	/^func alwaysFalse() bool { return false }$/;"	f
amd64OperandTests	./cmd/asm/internal/asm/operand_test.go	/^var amd64OperandTests = []operandTest{$/;"	v
amem	./cmd/yacc/yacc.go	/^var amem []int                   \/\/ action table storage$/;"	v
an	./go/types/expr.go	/^ensures that a client sees the actual (run-time) type an untyped value would$/;"	t
analogous	./cmd/cgo/gcc.go	/^\/\/ FuncType returns the Go type analogous to dtype.$/;"	t
analyzeGoroutines	./cmd/trace/goroutines.go	/^func analyzeGoroutines(events []*trace.Event) {$/;"	f
anchorID	./go/doc/comment.go	/^func anchorID(line string) string {$/;"	f
and	./cmd/asm/internal/asm/parse.go	/^		addr.Type = obj.TYPE_BRANCH \/\/ We set the type and leave NAME untouched. See asmJump.$/;"	t
and	./cmd/asm/internal/asm/parse.go	/^\/\/ get verifies that the next item has the expected type and returns it.$/;"	t
and	./cmd/compile/internal/big/nat.go	/^func (z nat) and(x, y nat) nat {$/;"	f
and	./cmd/compile/internal/gc/gen.go	/^\/\/ type and memory offset, assuming t starts at startOffset.$/;"	t
and	./cmd/compile/internal/gc/inl.go	/^\/\/ order will be preserved Used in return, oas2func and call$/;"	f
and	./cmd/compile/internal/gc/racewalk.go	/^	\/\/ of T(v).Field where T is a struct type and v is$/;"	t
and	./cmd/compile/internal/gc/subr.go	/^	\/\/ 3. dst is an interface type and src implements dst.$/;"	t
and	./cmd/compile/internal/gc/typecheck.go	/^	\/\/ copy new type and clear fields$/;"	t
and	./cmd/internal/obj/funcdata.go	/^\/\/ that also has a Go prototype and therefore is usually not necessary$/;"	t
and	./cmd/internal/obj/link.go	/^\/\/		If looking for specific register kind, must check type and reg value range.$/;"	t
and	./cmd/internal/obj/x86/asm6.go	/^ * possible states used to lay them down (Ztype and z pointer, assuming z$/;"	t
and	./crypto/hmac/hmac.go	/^\/\/ New returns a new HMAC hash using the given hash.Hash type and key.$/;"	t
and	./crypto/tls/conn.go	/^\/\/ writeRecord writes a TLS record with the given type and payload$/;"	t
and	./database/sql/driver/types.go	/^\/\/    into a database table's specific column type and making sure it$/;"	t
and	./debug/elf/elf.go	/^	Info   uint32 \/* Relocation type and symbol index. *\/$/;"	t
and	./debug/elf/elf.go	/^	Info   uint64 \/* Relocation type and symbol index. *\/$/;"	t
and	./debug/elf/elf.go	/^	Info uint32 \/* Relocation type and symbol index. *\/$/;"	t
and	./debug/elf/elf.go	/^	Info uint64 \/* Relocation type and symbol index. *\/$/;"	t
and	./encoding/gob/decode.go	/^\/\/ decodeIgnoredValue decodes the data stream representing a value of the specified type and discards it.$/;"	t
and	./encoding/gob/decoder.go	/^\/\/ A Decoder manages the receipt of type and data information read from the$/;"	t
and	./encoding/gob/encoder.go	/^\/\/ An Encoder manages the transmission of type and data information to the$/;"	t
and	./encoding/json/decode.go	/^	\/\/ If v is a named type and is addressable,$/;"	t
and	./flag/flag.go	/^\/\/ Var defines a flag with the specified name and usage string. The type and$/;"	t
and	./go/types/api.go	/^\/\/ TypeAndValue reports the type and value (for constants)$/;"	t
and	./go/types/conversions.go	/^	\/\/ "x's type and T are both complex types"$/;"	t
and	./go/types/conversions.go	/^	\/\/ "x's type and T are both integer or floating point types"$/;"	t
and	./go/types/conversions.go	/^	\/\/ "x's type and T are unnamed pointer types and their pointer base types have identical underlying types"$/;"	t
and	./go/types/conversions.go	/^	\/\/ "x's type and T have identical underlying types"$/;"	t
and	./go/types/eval.go	/^\/\/ Eval returns the type and, if constant, the value for the$/;"	t
and	./go/types/expr.go	/^		\/\/ delay type and value recording until we know the type$/;"	t
and	./go/types/expr.go	/^	\/\/ Everything's fine, record final type and value for x.$/;"	t
and	./go/types/expr.go	/^The updateExprType method is used to record this final type and update$/;"	t
and	./go/types/exprstring_test.go	/^	\/\/ func and composite literals$/;"	f
and	./go/types/lookup.go	/^			\/\/ In this case, we don't have a named type and$/;"	t
and	./go/types/lookup.go	/^	\/\/ it must not be a pointer or interface type and it must be declared$/;"	t
and	./go/types/methodset.go	/^			\/\/ In this case, we don't have a named type and$/;"	t
and	./go/types/operand.go	/^	\/\/ T is an interface type and x implements T$/;"	t
and	./go/types/resolver.go	/^	deps map[Object]bool \/\/ type and init dependencies; lazily allocated$/;"	t
and	./go/types/type.go	/^\/\/ SetUnderlying sets the underlying type and marks t as complete.$/;"	t
and	./go/types/typexpr.go	/^				\/\/ be a pointer or interface type and it must be declared in the same package$/;"	t
and	./image/png/reader.go	/^\/\/ A cb is a combination of color type and bit depth.$/;"	t
and	./internal/syscall/windows/registry/value.go	/^\/\/ GetValue retrieves the type and data for the specified value associated$/;"	t
and	./internal/syscall/windows/registry/value.go	/^\/\/ type and ErrUnexpectedType.$/;"	t
and	./internal/trace/parser.go	/^		\/\/ Read event type and number of arguments (1 byte).$/;"	t
and	./math/big/nat.go	/^func (z nat) and(x, y nat) nat {$/;"	f
and	./mime/mediatype.go	/^\/\/ The type and parameter names are written in lower-case.$/;"	t
and	./net/dnsmsg.go	/^	\/\/ make an rr of that type and re-unpack.$/;"	t
and	./net/dnsmsg.go	/^	\/\/ unpack just the header, to find the rr type and length$/;"	t
and	./net/dnsmsg.go	/^	\/\/ valid dnsRR_Header.Rrtype and dnsQuestion.qtype$/;"	t
and	./net/http/server.go	/^	\/\/ ConnState type and associated constants for details.$/;"	t
and	./net/internal/socktest/switch.go	/^\/\/ type and protocol number.$/;"	t
and	./reflect/example_test.go	/^		\/\/ so that we can query its type and then set the value.$/;"	t
and	./reflect/type.go	/^	\/\/ method tables for an interface type and a concrete type$/;"	t
and	./reflect/value.go	/^\/\/ If the channel is closed, x is the zero value for the channel's element type and ok is false.$/;"	t
and	./reflect/value.go	/^\/\/ MakeChan creates a new channel with the specified type and buffer size.$/;"	t
and	./reflect/value.go	/^\/\/ takes any value v of signed int type and returns the value converted$/;"	t
and	./runtime/mbitmap.go	/^\/\/ Garbage collector: type and heap bitmaps.$/;"	t
and	./runtime/mprof.go	/^\/\/ newBucket allocates a bucket with the given type and number of stack entries.$/;"	t
and	./runtime/type.go	/^\/\/ ..\/cmd\/internal\/gc\/reflect.go:\/^func.dcommontype and$/;"	t
and	./sync/atomic/value.go	/^		\/\/ First store completed. Check type and overwrite data.$/;"	t
and	./text/template/funcs.go	/^func and(arg0 interface{}, args ...interface{}) interface{} {$/;"	f
and	./unsafe/unsafe.go	/^\/\/ Alignof takes an expression x of any type and returns the alignment$/;"	t
and	./unsafe/unsafe.go	/^\/\/ Sizeof takes an expression x of any type and returns the size in bytes$/;"	t
andNot	./cmd/compile/internal/big/nat.go	/^func (z nat) andNot(x, y nat) nat {$/;"	f
andNot	./math/big/nat.go	/^func (z nat) andNot(x, y nat) nat {$/;"	f
animals	./encoding/json/example_test.go	/^	var animals []Animal$/;"	v
annotate	./cmd/cover/cover.go	/^func annotate(name string) {$/;"	f
annotateAssembly	./cmd/pprof/internal/report/report.go	/^func annotateAssembly(insns []plugin.Inst, samples nodes, base uint64) nodes {$/;"	f
anonymousFieldIdent	./go/types/typexpr.go	/^func anonymousFieldIdent(e ast.Expr) *ast.Ident {$/;"	f
answer	./database/sql/convert_test.go	/^var answer int64 = 42$/;"	v
answer	./database/sql/driver/types_test.go	/^var answer int64 = 42$/;"	v
answer	./net/dnsclient.go	/^func answer(name, server string, dns *dnsMsg, qtype uint16) (cname string, addrs []dnsRR, err error) {$/;"	f
anyMessage	./syscall/route_bsd.go	/^type anyMessage struct {$/;"	t
anyRune	./regexp/onepass.go	/^var anyRune = []rune{0, unicode.MaxRune}$/;"	v
anyRune	./regexp/syntax/compile.go	/^var anyRune = []rune{0, unicode.MaxRune}$/;"	v
anyRuneNotNL	./regexp/onepass.go	/^var anyRuneNotNL = []rune{0, '\\n' - 1, '\\n' + 1, unicode.MaxRune}$/;"	v
anyRuneNotNL	./regexp/syntax/compile.go	/^var anyRuneNotNL = []rune{0, '\\n' - 1, '\\n' + 1, unicode.MaxRune}$/;"	v
anyTable	./regexp/syntax/parse.go	/^var anyTable = &unicode.RangeTable{$/;"	v
anyToSockaddr	./syscall/syscall_bsd.go	/^func anyToSockaddr(rsa *RawSockaddrAny) (Sockaddr, error) {$/;"	f
anyToSockaddr	./syscall/syscall_linux.go	/^func anyToSockaddr(rsa *RawSockaddrAny) (Sockaddr, error) {$/;"	f
anyToSockaddr	./syscall/syscall_solaris.go	/^func anyToSockaddr(rsa *RawSockaddrAny) (Sockaddr, error) {$/;"	f
anycode	./go/scanner/scanner_test.go	/^		func anycode() {$/;"	f
anyinit	./cmd/compile/internal/gc/init.go	/^func anyinit(n *NodeList) bool {$/;"	f
anylit	./cmd/compile/internal/gc/sinit.go	/^func anylit(ctxt int, n *Node, var_ *Node, init **NodeList) {$/;"	f
anymore	./go/types/expr.go	/^\/\/ operands. Otherwise (i.e., typ is not an untyped type anymore,$/;"	t
ao	./debug/dwarf/typeunit.go	/^		var ao uint32$/;"	v
aoffset	./cmd/internal/obj/ppc64/obj9.go	/^	var aoffset int$/;"	v
aoutput	./cmd/yacc/yacc.go	/^func aoutput() {$/;"	f
apack	./cmd/yacc/yacc.go	/^func apack(p []int, n int) int {$/;"	f
apiHandler	./net/http/example_test.go	/^type apiHandler struct{}$/;"	t
appears	./go/types/typexpr.go	/^		\/\/ (it's ok to iterate forward because each named type appears at most once in path)$/;"	t
append	./builtin/builtin.go	/^func append(slice []Type, elems ...Type) []Type$/;"	f
append	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) append(prog *obj.Prog, cond string, doLabel bool) {$/;"	f
append	./path/filepath/path.go	/^func (b *lazybuf) append(c byte) {$/;"	f
append	./path/path.go	/^func (b *lazybuf) append(c byte) {$/;"	f
append	./reflect/type.go	/^func (bv *bitVector) append(bit uint8) {$/;"	f
append	./regexp/syntax/compile.go	/^func (l1 patchList) append(p *Prog, l2 patchList) patchList {$/;"	f
append	./text/tabwriter/tabwriter.go	/^func (b *Writer) append(text []byte) {$/;"	f
append	./text/template/parse/node.go	/^func (c *CommandNode) append(arg Node) {$/;"	f
append	./text/template/parse/node.go	/^func (l *ListNode) append(n Node) {$/;"	f
append	./text/template/parse/node.go	/^func (p *PipeNode) append(command *CommandNode) {$/;"	f
appendBoolTest	./strconv/atob_test.go	/^type appendBoolTest struct {$/;"	t
appendBoolTests	./strconv/atob_test.go	/^var appendBoolTests = []appendBoolTest{$/;"	v
appendClass	./regexp/syntax/parse.go	/^func appendClass(r []rune, x []rune) []rune {$/;"	f
appendCmd	./html/template/escape.go	/^func appendCmd(cmds []*parse.CommandNode, cmd *parse.CommandNode) []*parse.CommandNode {$/;"	f
appendFoldedClass	./regexp/syntax/parse.go	/^func appendFoldedClass(r []rune, x []rune) []rune {$/;"	f
appendFoldedRange	./regexp/syntax/parse.go	/^func appendFoldedRange(r []rune, lo, hi rune) []rune {$/;"	f
appendGroup	./regexp/syntax/parse.go	/^func (p *parser) appendGroup(r []rune, g charGroup) []rune {$/;"	f
appendHeadings	./go/doc/headscan.go	/^func appendHeadings(list []string, comment string) []string {$/;"	f
appendHex	./net/parse.go	/^func appendHex(dst []byte, i uint32) []byte {$/;"	f
appendInPostOrder	./go/types/ordering.go	/^func (check *Checker) appendInPostOrder(order *[]Object, obj Object) {$/;"	f
appendInt	./time/format.go	/^func appendInt(b []byte, x int, width int) []byte {$/;"	f
appendLiteral	./regexp/syntax/parse.go	/^func appendLiteral(r []rune, x rune, flags Flags) []rune {$/;"	f
appendNegatedClass	./regexp/syntax/parse.go	/^func appendNegatedClass(r []rune, x []rune) []rune {$/;"	f
appendNegatedTable	./regexp/syntax/parse.go	/^func appendNegatedTable(r []rune, x *unicode.RangeTable) []rune {$/;"	f
appendRDNs	./crypto/x509/pkix/pkix.go	/^func (n Name) appendRDNs(in RDNSequence, values []string, oid asn1.ObjectIdentifier) RDNSequence {$/;"	f
appendRange	./regexp/syntax/parse.go	/^func appendRange(r []rune, lo, hi rune) []rune {$/;"	f
appendSliceWriter	./strings/replace.go	/^type appendSliceWriter []byte$/;"	t
appendTable	./regexp/syntax/parse.go	/^func appendTable(r []rune, x *unicode.RangeTable) []rune {$/;"	f
appendTests	./reflect/all_test.go	/^var appendTests = []struct {$/;"	v
appendTime	./net/http/server.go	/^func appendTime(b []byte, t time.Time) []byte {$/;"	f
appendToFreshChain	./crypto/x509/verify.go	/^func appendToFreshChain(chain []*Certificate, cert *Certificate) []*Certificate {$/;"	f
appendVarint	./reflect/type.go	/^func appendVarint(x []byte, v uintptr) []byte {$/;"	f
appendZeros	./cmd/compile/internal/big/decimal.go	/^func appendZeros(buf []byte, n int) []byte {$/;"	f
appendZeros	./math/big/decimal.go	/^func appendZeros(buf []byte, n int) []byte {$/;"	f
appendinit	./cmd/compile/internal/gc/racewalk.go	/^func appendinit(np **Node, init *NodeList) {$/;"	f
appendpp	./cmd/compile/internal/amd64/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	f
appendpp	./cmd/compile/internal/arm/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int32, ttype int, treg int, toffset int32) *obj.Prog {$/;"	f
appendpp	./cmd/compile/internal/arm64/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	f
appendpp	./cmd/compile/internal/ppc64/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	f
appendpp	./cmd/compile/internal/x86/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	f
appendslice	./cmd/compile/internal/gc/walk.go	/^func appendslice(n *Node, init **NodeList) *Node {$/;"	f
apply	./cmd/gofmt/rewrite.go	/^func apply(f func(reflect.Value) reflect.Value, val reflect.Value) reflect.Value {$/;"	f
apply	./net/internal/socktest/switch.go	/^func (f AfterFilter) apply(st *Status) error {$/;"	f
apply	./net/internal/socktest/switch.go	/^func (f Filter) apply(st *Status) (AfterFilter, error) {$/;"	f
applyBlack	./image/jpeg/reader.go	/^func (d *decoder) applyBlack() (image.Image, error) {$/;"	f
applyRelocations	./debug/elf/file.go	/^func (f *File) applyRelocations(dst []byte, rels []byte) error {$/;"	f
applyRelocations386	./debug/elf/file.go	/^func (f *File) applyRelocations386(dst []byte, rels []byte) error {$/;"	f
applyRelocationsAMD64	./debug/elf/file.go	/^func (f *File) applyRelocationsAMD64(dst []byte, rels []byte) error {$/;"	f
applyRelocationsARM	./debug/elf/file.go	/^func (f *File) applyRelocationsARM(dst []byte, rels []byte) error {$/;"	f
applyRelocationsARM64	./debug/elf/file.go	/^func (f *File) applyRelocationsARM64(dst []byte, rels []byte) error {$/;"	f
applyRelocationsPPC	./debug/elf/file.go	/^func (f *File) applyRelocationsPPC(dst []byte, rels []byte) error {$/;"	f
applyRelocationsPPC64	./debug/elf/file.go	/^func (f *File) applyRelocationsPPC64(dst []byte, rels []byte) error {$/;"	f
applypred	./cmd/compile/internal/arm/peep.go	/^func applypred(rstart *gc.Flow, j *Joininfo, cond int, branch int) {$/;"	f
applywritebarrier	./cmd/compile/internal/gc/walk.go	/^func applywritebarrier(n *Node, init **NodeList) *Node {$/;"	f
applywritebarrier_bv	./cmd/compile/internal/gc/walk.go	/^var applywritebarrier_bv Bvec$/;"	v
ar	./cmd/compile/internal/gc/walk.go	/^	var ar *Node$/;"	v
ar	./cmd/pack/pack.go	/^	var ar *Archive$/;"	v
ar_hdr	./cmd/internal/obj/ar.go	/^type ar_hdr struct {$/;"	t
arangeso	./cmd/link/internal/ld/dwarf.go	/^var arangeso int64$/;"	v
arangesreloco	./cmd/link/internal/ld/dwarf.go	/^var arangesreloco int64$/;"	v
arangesrelocsize	./cmd/link/internal/ld/dwarf.go	/^var arangesrelocsize int64$/;"	v
arangessec	./cmd/link/internal/ld/dwarf.go	/^var arangessec *LSym$/;"	v
arangessize	./cmd/link/internal/ld/dwarf.go	/^var arangessize int64$/;"	v
arbitraryValues	./testing/quick/quick.go	/^func arbitraryValues(args []reflect.Value, f reflect.Type, config *Config, rand *rand.Rand) (err error) {$/;"	f
arch	./cmd/vet/asmdecl.go	/^		var arch string$/;"	v
archArm	./cmd/asm/internal/arch/arch.go	/^func archArm() *Arch {$/;"	f
archArm64	./cmd/asm/internal/arch/arch.go	/^func archArm64() *Arch {$/;"	f
archDef	./cmd/vet/asmdecl.go	/^		var archDef *asmArch$/;"	v
archPPC64	./cmd/asm/internal/arch/arch.go	/^func archPPC64() *Arch {$/;"	f
archX86	./cmd/asm/internal/arch/arch.go	/^func archX86(linkArch *obj.LinkArch) *Arch {$/;"	f
archinit	./cmd/link/internal/amd64/obj.go	/^func archinit() {$/;"	f
archinit	./cmd/link/internal/arm/obj.go	/^func archinit() {$/;"	f
archinit	./cmd/link/internal/arm64/obj.go	/^func archinit() {$/;"	f
archinit	./cmd/link/internal/ppc64/obj.go	/^func archinit() {$/;"	f
archinit	./cmd/link/internal/x86/obj.go	/^func archinit() {$/;"	f
archive	./cmd/link/internal/ld/lib.go	/^func archive() {$/;"	f
archive	./cmd/pack/pack.go	/^func archive(name string, mode int, files []string) *Archive {$/;"	f
archreloc	./cmd/link/internal/amd64/asm.go	/^func archreloc(r *ld.Reloc, s *ld.LSym, val *int64) int {$/;"	f
archreloc	./cmd/link/internal/arm/asm.go	/^func archreloc(r *ld.Reloc, s *ld.LSym, val *int64) int {$/;"	f
archreloc	./cmd/link/internal/arm64/asm.go	/^func archreloc(r *ld.Reloc, s *ld.LSym, val *int64) int {$/;"	f
archreloc	./cmd/link/internal/ppc64/asm.go	/^func archreloc(r *ld.Reloc, s *ld.LSym, val *int64) int {$/;"	f
archreloc	./cmd/link/internal/x86/asm.go	/^func archreloc(r *ld.Reloc, s *ld.LSym, val *int64) int {$/;"	f
archrelocvariant	./cmd/link/internal/amd64/asm.go	/^func archrelocvariant(r *ld.Reloc, s *ld.LSym, t int64) int64 {$/;"	f
archrelocvariant	./cmd/link/internal/arm/asm.go	/^func archrelocvariant(r *ld.Reloc, s *ld.LSym, t int64) int64 {$/;"	f
archrelocvariant	./cmd/link/internal/arm64/asm.go	/^func archrelocvariant(r *ld.Reloc, s *ld.LSym, t int64) int64 {$/;"	f
archrelocvariant	./cmd/link/internal/ppc64/asm.go	/^func archrelocvariant(r *ld.Reloc, s *ld.LSym, t int64) int64 {$/;"	f
archrelocvariant	./cmd/link/internal/x86/asm.go	/^func archrelocvariant(r *ld.Reloc, s *ld.LSym, t int64) int64 {$/;"	f
are	./builtin/builtin.go	/^\/\/ not nil. Values of string type are immutable.$/;"	t
are	./cmd/compile/internal/gc/gen.go	/^\/\/ elements of basic type are also supported.$/;"	t
are	./database/sql/driver/types.go	/^\/\/ IsValue(value).  Otherwise integer type are converted to$/;"	t
are	./go/types/expr.go	/^		\/\/ times the same expression and type are recorded. It is also not a$/;"	t
are	./reflect/type.go	/^	\/\/ Comparable reports whether values of this type are comparable.$/;"	t
are	./reflect/type.go	/^\/\/ type are coalesced into a single Type.$/;"	t
are	./text/template/doc.go	/^for comparison of values, except that size and exact type are$/;"	t
arg	./cmd/compile/internal/gc/cgen.go	/^	var arg Node$/;"	v
arg	./cmd/compile/internal/gc/plive.go	/^	var arg Bvec$/;"	v
arg	./cmd/compile/internal/gc/walk.go	/^	var arg *Node$/;"	v
arg	./cmd/trace/trace.go	/^	var arg interface{}$/;"	v
arg	./go/types/builtins.go	/^	var arg getter$/;"	v
arg	./runtime/cgo/gcc_openbsd_386.c	/^	void *arg;$/;"	m	struct:thread_args	file:
arg	./runtime/cgo/gcc_openbsd_amd64.c	/^	void *arg;$/;"	m	struct:thread_args	file:
arg1	./cmd/vet/testdata/asm.go	/^func arg1(x int8, y uint8)$/;"	f
arg2	./cmd/vet/testdata/asm.go	/^func arg2(x int16, y uint16)$/;"	f
arg4	./cmd/vet/testdata/asm.go	/^func arg4(x int32, y uint32)$/;"	f
arg8	./cmd/vet/testdata/asm.go	/^func arg8(x int64, y uint64)$/;"	f
argAlign	./reflect/all_test.go	/^	var argAlign uintptr = PtrSize$/;"	v
argBytes	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func argBytes(inst *Inst, arg Arg) int {$/;"	f
argCanBeChecked	./cmd/vet/print.go	/^func (f *File) argCanBeChecked(call *ast.CallExpr, formatArg int, isStar bool, state *formatState) bool {$/;"	f
argNN	./cmd/compile/internal/big/nat_test.go	/^type argNN struct {$/;"	t
argNN	./math/big/nat_test.go	/^type argNN struct {$/;"	t
argNumber	./fmt/print.go	/^func (p *pp) argNumber(argNum int, format string, i int, numArgs int) (newArgNum, newi int, found bool) {$/;"	f
argType	./text/template/funcs.go	/^		var argType reflect.Type$/;"	v
argVV	./cmd/compile/internal/big/arith_test.go	/^type argVV struct {$/;"	t
argVV	./math/big/arith_test.go	/^type argVV struct {$/;"	t
argVW	./cmd/compile/internal/big/arith_test.go	/^type argVW struct {$/;"	t
argVW	./math/big/arith_test.go	/^type argVW struct {$/;"	t
argVWW	./cmd/compile/internal/big/arith_test.go	/^type argVWW struct {$/;"	t
argVWW	./math/big/arith_test.go	/^type argVWW struct {$/;"	t
argWVW	./cmd/compile/internal/big/arith_test.go	/^type argWVW struct {$/;"	t
argWVW	./math/big/arith_test.go	/^type argWVW struct {$/;"	t
argWW	./cmd/compile/internal/big/arith_test.go	/^type argWW struct {$/;"	t
argWW	./math/big/arith_test.go	/^type argWW struct {$/;"	t
argZZ	./cmd/compile/internal/big/int_test.go	/^type argZZ struct {$/;"	t
argZZ	./math/big/int_test.go	/^type argZZ struct {$/;"	t
arg_type	./cmd/compile/internal/gc/go.y	/^arg_type:$/;"	l
arg_type_list	./cmd/compile/internal/gc/go.y	/^arg_type_list:$/;"	l
argc	./os/exec_windows.go	/^	var argc int32$/;"	v
argiface	./cmd/vet/testdata/asm.go	/^func argiface(x interface{}, y interface {$/;"	f
argint	./cmd/vet/testdata/asm.go	/^func argint(x int, y uint)$/;"	f
argjoin	./cmd/vet/method.go	/^func argjoin(x []string) string {$/;"	f
argptr	./cmd/vet/testdata/asm.go	/^func argptr(x *byte, y *byte, c chan int, m map[int]int, f func())$/;"	f
args	./cmd/asm/internal/lex/input.go	/^	var args [][]Token$/;"	v
args	./cmd/asm/internal/lex/input.go	/^	var args []string$/;"	v
args	./cmd/cgo/gcc.go	/^	var args []string$/;"	v
args	./cmd/compile/internal/gc/plive.go	/^	var args Bvec$/;"	v
args	./cmd/compile/internal/gc/subr.go	/^	var args *NodeList$/;"	v
args	./cmd/compile/internal/gc/walk.go	/^	var args *NodeList$/;"	v
args	./cmd/cover/html.go	/^	var args []string$/;"	v
args	./cmd/internal/rsc.io/arm/armasm/decode.go	/^		var args Args$/;"	v
args	./cmd/internal/rsc.io/arm/armasm/plan9x.go	/^	var args []string$/;"	v
args	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^	var args []string$/;"	v
args	./cmd/internal/rsc.io/x86/x86asm/plan9x.go	/^	var args []string$/;"	v
args	./cmd/link/internal/ld/pobj.go	/^	var args []string$/;"	v
args	./cmd/trace/main.go	/^	var args []string$/;"	v
args	./fmt/fmt_test.go	/^func args(a ...interface{}) []interface{} { return a }$/;"	f
args	./math/rand/regress_test.go	/^			var args []reflect.Value$/;"	v
args	./net/mockserver_test.go	/^	var args = []struct {$/;"	v
args	./os/exec/exec_test.go	/^					var args []string$/;"	v
args	./os/os_test.go	/^	var args []string$/;"	v
args	./reflect/value.go	/^	var args unsafe.Pointer$/;"	v
args	./runtime/cgocall.go	/^	type args struct {$/;"	t
args	./runtime/cgocall.go	/^	var args struct {$/;"	v
args	./runtime/runtime1.go	/^func args(c int32, v **byte) {$/;"	f
args	./runtime/syscall_solaris.go	/^	var args = [2]uintptr{uintptr(unsafe.Pointer(&cname[0])), _MAXHOSTNAMELEN}$/;"	v
argsFor	./cmd/asm/internal/lex/input.go	/^func (in *Input) argsFor(macro *Macro) map[string][]Token {$/;"	f
argslice	./cmd/vet/testdata/asm.go	/^func argslice(x, y []string)$/;"	f
argslice	./runtime/runtime.go	/^var argslice []string$/;"	v
argstr	./math/rand/regress_test.go	/^			var argstr string$/;"	v
argstring	./cmd/vet/testdata/asm.go	/^func argstring(x, y string)$/;"	f
argswords	./cmd/compile/internal/gc/plive.go	/^func argswords() int32 {$/;"	f
argument	./go/types/call.go	/^func (check *Checker) argument(sig *Signature, i int, x *operand, ellipsis token.Pos) {$/;"	f
arguments	./cmd/compile/internal/gc/syntax.go	/^	Noescape    bool  \/\/ func arguments do not escape; TODO(rsc): move Noescape to Func struct (see CL 7360)$/;"	f
arguments	./go/types/call.go	/^func (check *Checker) arguments(x *operand, call *ast.CallExpr, sig *Signature, arg getter, n int) {$/;"	f
arguments	./internal/trace/parser.go	/^\/\/ It does analyze and verify per-event-type arguments.$/;"	t
argv	./cmd/link/internal/ld/lib.go	/^	var argv []string$/;"	v
argv	./os/exec/exec.go	/^func (c *Cmd) argv() []string {$/;"	f
argv_index	./runtime/runtime1.go	/^func argv_index(argv **byte, i int32) *byte {$/;"	f
argvar	./cmd/compile/internal/gc/inl.go	/^func argvar(t *Type, i int) *Node {$/;"	f
argvp	./syscall/exec_windows.go	/^	var argvp *uint16$/;"	v
arhdr	./cmd/compile/internal/gc/obj.go	/^	var arhdr [ArhdrSize]byte$/;"	v
arhdr	./cmd/link/internal/ld/lib.go	/^	var arhdr ArHdr$/;"	v
arityMatch	./go/types/resolver.go	/^func (check *Checker) arityMatch(s, init *ast.ValueSpec) {$/;"	f
arm64Jump	./cmd/asm/internal/arch/arm64.go	/^var arm64Jump = map[string]bool{$/;"	v
arm64LS	./cmd/asm/internal/arch/arm64.go	/^var arm64LS = map[string]uint8{$/;"	v
arm64OperandTests	./cmd/asm/internal/asm/operand_test.go	/^var arm64OperandTests = []operandTest{$/;"	v
arm64RegisterNumber	./cmd/asm/internal/arch/arm64.go	/^func arm64RegisterNumber(name string, n int16) (int16, bool) {$/;"	f
armAddUint32	./sync/atomic/64bit_arm.go	/^func armAddUint32(addr *uint32, delta uint32) (new uint32)$/;"	f
armAddUint64	./sync/atomic/64bit_arm.go	/^func armAddUint64(addr *uint64, delta uint64) (new uint64)$/;"	f
armArch	./runtime/os_linux_arm.go	/^var armArch uint8 = 6 \/\/ we default to ARMv6$/;"	v
armCompareAndSwapUint32	./sync/atomic/64bit_arm.go	/^func armCompareAndSwapUint32(addr *uint32, old, new uint32) (swapped bool)$/;"	f
armCompareAndSwapUint64	./sync/atomic/64bit_arm.go	/^func armCompareAndSwapUint64(addr *uint64, old, new uint64) (swapped bool)$/;"	f
armCondCode	./cmd/internal/obj/util.go	/^var armCondCode = []string{$/;"	v
armJump	./cmd/asm/internal/arch/arm.go	/^var armJump = map[string]bool{$/;"	v
armLS	./cmd/asm/internal/arch/arm.go	/^var armLS = map[string]uint8{$/;"	v
armLoadUint64	./sync/atomic/64bit_arm.go	/^func armLoadUint64(addr *uint64) (val uint64)$/;"	f
armNeed	./cmd/objdump/objdump_test.go	/^var armNeed = []string{$/;"	v
armOperandTests	./cmd/asm/internal/asm/operand_test.go	/^var armOperandTests = []operandTest{$/;"	v
armRegisterNumber	./cmd/asm/internal/arch/arm.go	/^func armRegisterNumber(name string, n int16) (int16, bool) {$/;"	f
armSCOND	./cmd/asm/internal/arch/arm.go	/^var armSCOND = map[string]uint8{$/;"	v
armStoreUint64	./sync/atomic/64bit_arm.go	/^func armStoreUint64(addr *uint64, val uint64)$/;"	f
armSwapUint32	./sync/atomic/64bit_arm.go	/^func armSwapUint32(addr *uint32, new uint32) (old uint32)$/;"	f
armSwapUint64	./sync/atomic/64bit_arm.go	/^func armSwapUint64(addr *uint64, new uint64) (old uint64)$/;"	f
arout	./cmd/yacc/yacc.go	/^func arout(s string, v []int, n int) {$/;"	f
arr	./cmd/compile/internal/gc/walk.go	/^			\/\/ var arr [r]T$/;"	v
array	./debug/dwarf/testdata/typedef.c	/^	long long array[40];$/;"	m	struct:my_struct	file:
array	./debug/dwarf/testdata/typedef.c	/^	long long array[40];$/;"	m	union:my_union	file:
array	./encoding/gob/gobencdec_test.go	/^	var array ArrayStruct$/;"	v
array	./encoding/json/decode.go	/^func (d *decodeState) array(v reflect.Value) {$/;"	f
array	./fmt/fmt_test.go	/^var array = [5]int{1, 2, 3, 4, 5}$/;"	v
arrayAt	./reflect/value.go	/^func arrayAt(p unsafe.Pointer, i int, eltSize uintptr) unsafe.Pointer {$/;"	f
arrayEncoder	./encoding/json/encode.go	/^type arrayEncoder struct {$/;"	t
arrayInterface	./encoding/json/decode.go	/^func (d *decodeState) arrayInterface() []interface{} {$/;"	f
arrayLength	./go/types/typexpr.go	/^func (check *Checker) arrayLength(e ast.Expr) int64 {$/;"	f
arrayLit	./runtime/symtab_test.go	/^var arrayLit = [...]int{lineNumber(), \/\/ 20$/;"	v
arrayType	./encoding/gob/doc.go	/^	type arrayType struct {$/;"	t
arrayType	./encoding/gob/type.go	/^type arrayType struct {$/;"	t
arrayType	./reflect/type.go	/^type arrayType struct {$/;"	t
arrayValue	./encoding/gob/debug.go	/^func (deb *debugger) arrayValue(indent tab, wire *wireType) {$/;"	f
arraylit	./cmd/compile/internal/gc/sinit.go	/^func arraylit(ctxt int, pass int, n *Node, var_ *Node, init **NodeList) {$/;"	f
arrow	./go/parser/parser.go	/^	var arrow token.Pos$/;"	v
arsize	./cmd/compile/internal/gc/lex.go	/^func arsize(b *obj.Biobuf, name string) int {$/;"	f
artrim	./cmd/link/internal/ld/util.go	/^func artrim(x []byte) string {$/;"	f
aryeq	./cmd/yacc/yacc.go	/^func aryeq(a []int, b []int) int {$/;"	f
aryfil	./cmd/yacc/yacc.go	/^func aryfil(v []int, n, c int) {$/;"	f
as	./cmd/compile/internal/gc/inl.go	/^	var as *Node$/;"	v
as	./cmd/compile/internal/gc/typecheck.go	/^	\/\/ Double-check use of type as embedded type.$/;"	t
as	./cmd/compile/internal/gc/walk.go	/^		\/\/ same type as the variable on the lhs.$/;"	t
as	./cmd/compile/internal/gc/walk.go	/^	var as *Node$/;"	v
as	./cmd/vet/shadow.go	/^with the same name and type as a variable in an outer scope,$/;"	t
as	./debug/dwarf/type.go	/^				err = DecodeError{name, kid.Offset, "cannot handle enumeration type as array bound"}$/;"	t
as	./encoding/gob/type_test.go	/^		t.Errorf("registration of [3]bool creates same type as [3]int")$/;"	t
as	./encoding/gob/type_test.go	/^		t.Errorf("registration of [3]int creates same type as [4]int")$/;"	t
as	./encoding/gob/type_test.go	/^		t.Errorf("registration of []bool creates same type as []int")$/;"	t
as	./encoding/gob/type_test.go	/^		t.Errorf("registration of map[string]bool creates same type as map[string]int")$/;"	t
as	./encoding/json/encode.go	/^\/\/ that type as its name, rather than being anonymous.$/;"	t
as	./go/types/selection.go	/^		\/\/ and an additional first argument with the same type as x.$/;"	t
as	./reflect/value.go	/^\/\/ the caller must pass the argument frame type as argtype, so that$/;"	t
as	./runtime/hashmap.go	/^	\/\/ type as containing no pointers. This avoids scanning such maps.$/;"	t
as	./runtime/stubs.go	/^\/\/ the caller should pass the argument frame type as argtype, so that$/;"	t
as	./syscall/ztypes_windows.go	/^\/\/ will be fixed to change variable type as suitable.$/;"	t
as2	./cmd/compile/internal/ppc64/prog.go	/^	var as2 int$/;"	v
as2variant	./cmd/compile/internal/ppc64/prog.go	/^func as2variant(as int) int {$/;"	f
asBytes	./database/sql/convert.go	/^func asBytes(buf []byte, rv reflect.Value) (b []byte, ok bool) {$/;"	f
asReader	./image/format.go	/^func asReader(r io.Reader) reader {$/;"	f
asString	./database/sql/convert.go	/^func asString(src interface{}) string {$/;"	f
ascii	./net/http/cookiejar/punycode.go	/^func ascii(s string) bool {$/;"	f
asciiAlpha	./html/template/transition.go	/^func asciiAlpha(c byte) bool {$/;"	f
asciiAlphaNum	./html/template/transition.go	/^func asciiAlphaNum(c byte) bool {$/;"	f
asciiEqualFold	./encoding/json/fold.go	/^func asciiEqualFold(s, t []byte) bool {$/;"	f
ascompatee	./cmd/compile/internal/gc/walk.go	/^func ascompatee(op int, nl *NodeList, nr *NodeList, init **NodeList) *NodeList {$/;"	f
ascompatee1	./cmd/compile/internal/gc/walk.go	/^func ascompatee1(op int, l *Node, r *Node, init **NodeList) *Node {$/;"	f
ascompatet	./cmd/compile/internal/gc/walk.go	/^func ascompatet(op int, nl *NodeList, nr **Type, fp int, init **NodeList) *NodeList {$/;"	f
ascompatte	./cmd/compile/internal/gc/walk.go	/^func ascompatte(op int, call *Node, isddd bool, nl **Type, lr *NodeList, fp int, init **NodeList) *NodeList {$/;"	f
asin	./math/all_test.go	/^var asin = []float64{$/;"	v
asin	./math/asin.go	/^func asin(x float64) float64 {$/;"	f
asin	./math/cmplx/cmath_test.go	/^var asin = []complex128{$/;"	v
asinSC	./math/all_test.go	/^var asinSC = []float64{$/;"	v
asinSC	./math/cmplx/cmath_test.go	/^var asinSC = []complex128{$/;"	v
asinh	./math/all_test.go	/^var asinh = []float64{$/;"	v
asinh	./math/cmplx/cmath_test.go	/^var asinh = []complex128{$/;"	v
asinhSC	./math/all_test.go	/^var asinhSC = []float64{$/;"	v
asinhSC	./math/cmplx/cmath_test.go	/^var asinhSC = []complex128{$/;"	v
asm	./cmd/pprof/internal/report/report.go	/^	var asm nodes$/;"	v
asm	./cmd/pprof/internal/report/source_html.go	/^    var asm = target.nextSibling;$/;"	v
asm	./cmd/pprof/pprof.go	/^	var asm []plugin.Inst$/;"	v
asmArch	./cmd/vet/asmdecl.go	/^type asmArch struct {$/;"	t
asmCheck	./cmd/vet/asmdecl.go	/^func asmCheck(pkg *Package) {$/;"	f
asmCheckVar	./cmd/vet/asmdecl.go	/^func asmCheckVar(badf func(string, ...interface{}), fn *asmFunc, line, expr string, off int, v *asmVar) {$/;"	f
asmData	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) asmData(word string, operands [][]lex.Token) {$/;"	f
asmFunc	./cmd/vet/asmdecl.go	/^type asmFunc struct {$/;"	t
asmFuncData	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) asmFuncData(word string, operands [][]lex.Token) {$/;"	f
asmGlobl	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) asmGlobl(word string, operands [][]lex.Token) {$/;"	f
asmInstruction	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) asmInstruction(op int, cond string, a []obj.Addr) {$/;"	f
asmJump	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) asmJump(op int, cond string, a []obj.Addr) {$/;"	f
asmKind	./cmd/vet/asmdecl.go	/^type asmKind int$/;"	t
asmOutput	./cmd/internal/obj/x86/obj6_test.go	/^func asmOutput(t *testing.T, s string) []byte {$/;"	f
asmPCData	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) asmPCData(word string, operands [][]lex.Token) {$/;"	f
asmParseDecl	./cmd/vet/asmdecl.go	/^func (f *File) asmParseDecl(decl *ast.FuncDecl) map[string]*asmFunc {$/;"	f
asmText	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) asmText(word string, operands [][]lex.Token) {$/;"	f
asmVar	./cmd/vet/asmdecl.go	/^type asmVar struct {$/;"	t
asmand	./cmd/internal/obj/x86/asm6.go	/^func asmand(ctxt *obj.Link, p *obj.Prog, a *obj.Addr, ra *obj.Addr) {$/;"	f
asmando	./cmd/internal/obj/x86/asm6.go	/^func asmando(ctxt *obj.Link, p *obj.Prog, a *obj.Addr, o int) {$/;"	f
asmandsz	./cmd/internal/obj/x86/asm6.go	/^func asmandsz(ctxt *obj.Link, p *obj.Prog, a *obj.Addr, r int, rex int, m64 int) {$/;"	f
asmb	./cmd/link/internal/amd64/asm.go	/^func asmb() {$/;"	f
asmb	./cmd/link/internal/arm/asm.go	/^func asmb() {$/;"	f
asmb	./cmd/link/internal/arm64/asm.go	/^func asmb() {$/;"	f
asmb	./cmd/link/internal/ppc64/asm.go	/^func asmb() {$/;"	f
asmb	./cmd/link/internal/x86/asm.go	/^func asmb() {$/;"	f
asmcgocall	./runtime/stubs.go	/^func asmcgocall(fn, arg unsafe.Pointer) int32$/;"	f
asmhdr	./cmd/compile/internal/gc/go.go	/^var asmhdr string$/;"	v
asmidx	./cmd/internal/obj/x86/asm6.go	/^func asmidx(ctxt *obj.Link, scale int, index int, base int) {$/;"	f
asminit	./runtime/stubs.go	/^func asminit()$/;"	f
asmins	./cmd/internal/obj/x86/asm6.go	/^func asmins(ctxt *obj.Link, p *obj.Prog) {$/;"	f
asmlist	./cmd/compile/internal/gc/export.go	/^var asmlist *NodeList$/;"	v
asmout	./cmd/internal/obj/arm/asm5.go	/^func asmout(ctxt *obj.Link, p *obj.Prog, o *Optab, out []uint32) {$/;"	f
asmout	./cmd/internal/obj/arm64/asm7.go	/^func asmout(ctxt *obj.Link, p *obj.Prog, o *Optab, out []uint32) {$/;"	f
asmout	./cmd/internal/obj/ppc64/asm9.go	/^func asmout(ctxt *obj.Link, p *obj.Prog, o *Optab, out []uint32) {$/;"	f
asmoutnacl	./cmd/internal/obj/arm/asm5.go	/^func asmoutnacl(ctxt *obj.Link, origPC int32, p *obj.Prog, o *Optab, out []uint32) int {$/;"	f
asmstdcall	./runtime/os1_windows.go	/^func asmstdcall(fn unsafe.Pointer)$/;"	f
asmstdcallAddr	./runtime/os1_windows.go	/^var asmstdcallAddr unsafe.Pointer$/;"	v
asmsysvicall6	./runtime/os_solaris.go	/^var asmsysvicall6 libcFunc$/;"	v
asn1BitLength	./crypto/x509/x509.go	/^func asn1BitLength(bitString []byte) int {$/;"	f
assemblyPerSourceLine	./cmd/pprof/internal/report/source.go	/^func assemblyPerSourceLine(objSyms []*objSymbol, rs nodes, src string, obj plugin.ObjTool) map[int]nodes {$/;"	f
assert	./crypto/crypto.go	/^	\/\/ to type assert opts to other types in order to obtain algorithm$/;"	t
assert	./go/parser/parser.go	/^func assert(cond bool, msg string) {$/;"	f
assert	./go/printer/testdata/parser.go	/^func assert(cond bool, msg string) {$/;"	f
assert	./go/types/errors.go	/^func assert(p bool) {$/;"	f
assert	./reflect/all_test.go	/^func assert(t *testing.T, s, want string) {$/;"	f
assertE2E	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertE2E(typ *byte, iface any, ret *any)$/;"	f
assertE2E	./runtime/iface.go	/^func assertE2E(inter *interfacetype, e interface{}, r *interface{}) {$/;"	f
assertE2E2	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertE2E2(typ *byte, iface any, ret *any) bool$/;"	f
assertE2E2	./runtime/iface.go	/^func assertE2E2(inter *interfacetype, e interface{}, r *interface{}) bool {$/;"	f
assertE2I	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertE2I(typ *byte, iface any, ret *any)$/;"	f
assertE2I	./runtime/iface.go	/^func assertE2I(inter *interfacetype, e interface{}, r *fInterface) {$/;"	f
assertE2I2	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertE2I2(typ *byte, iface any, ret *any) bool$/;"	f
assertE2I2	./runtime/iface.go	/^func assertE2I2(inter *interfacetype, e interface{}, r *fInterface) bool {$/;"	f
assertE2T	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertE2T(typ *byte, iface any, ret *any)$/;"	f
assertE2T	./runtime/iface.go	/^func assertE2T(t *_type, e interface{}, r unsafe.Pointer) {$/;"	f
assertE2T2	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertE2T2(typ *byte, iface any, ret *any) bool$/;"	f
assertE2T2	./runtime/iface.go	/^func assertE2T2(t *_type, e interface{}, r unsafe.Pointer) bool {$/;"	f
assertI2E	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertI2E(typ *byte, iface any, ret *any)$/;"	f
assertI2E	./runtime/iface.go	/^func assertI2E(inter *interfacetype, i fInterface, r *interface{}) {$/;"	f
assertI2E2	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertI2E2(typ *byte, iface any, ret *any) bool$/;"	f
assertI2E2	./runtime/iface.go	/^func assertI2E2(inter *interfacetype, i fInterface, r *interface{}) bool {$/;"	f
assertI2I	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertI2I(typ *byte, iface any, ret *any)$/;"	f
assertI2I	./runtime/iface.go	/^func assertI2I(inter *interfacetype, i fInterface, r *fInterface) {$/;"	f
assertI2I2	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertI2I2(typ *byte, iface any, ret *any) bool$/;"	f
assertI2I2	./runtime/iface.go	/^func assertI2I2(inter *interfacetype, i fInterface, r *fInterface) bool {$/;"	f
assertI2T	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertI2T(typ *byte, iface any, ret *any)$/;"	f
assertI2T	./runtime/iface.go	/^func assertI2T(t *_type, i fInterface, r unsafe.Pointer) {$/;"	f
assertI2T2	./cmd/compile/internal/gc/builtin/runtime.go	/^func assertI2T2(typ *byte, iface any, ret *any) bool$/;"	f
assertI2T2	./runtime/iface.go	/^func assertI2T2(t *_type, i fInterface, r unsafe.Pointer) bool {$/;"	f
assertVar	./cmd/api/testdata/src/pkg/p1/p1.go	/^var assertVar = ifaceVar.(int)$/;"	v
assertableTo	./go/types/lookup.go	/^func assertableTo(V *Interface, T Type) (method *Func, wrongType bool) {$/;"	f
assertion	./cmd/compile/internal/gc/gen.go	/^		Warn("type assertion inlined")$/;"	t
assertion	./cmd/compile/internal/gc/lex.go	/^	{"typeassert", &Debug_typeassert}, \/\/ print information about type assertion inlining$/;"	t
assertion	./cmd/compile/internal/gc/subr.go	/^			*why = ": need type assertion"$/;"	t
assertion	./cmd/compile/internal/gc/typecheck.go	/^					Yyerror("impossible type assertion:\\n\\t%v does not implement %v (%v method has pointer receiver)", n.Type, t, missing.Sym)$/;"	t
assertion	./cmd/compile/internal/gc/typecheck.go	/^					Yyerror("impossible type assertion:\\n\\t%v does not implement %v (missing %v method)", n.Type, t, missing.Sym)$/;"	t
assertion	./cmd/compile/internal/gc/typecheck.go	/^					Yyerror("impossible type assertion:\\n\\t%v does not implement %v (missing %v method)\\n"+"\\t\\thave %v%v\\n\\t\\twant %v%v", n.Type, t, missing.Sym, have.Sym, Tconv(have.Type, obj.FmtShort|obj.FmtByte), missing.Sym, Tconv(missing.Type, obj.FmtShort|obj.FmtByte))$/;"	t
assertion	./cmd/compile/internal/gc/typecheck.go	/^					Yyerror("impossible type assertion:\\n\\t%v does not implement %v (wrong type for %v method)\\n"+"\\t\\thave %v%v\\n\\t\\twant %v%v", n.Type, t, missing.Sym, have.Sym, Tconv(have.Type, obj.FmtShort|obj.FmtByte), missing.Sym, Tconv(missing.Type, obj.FmtShort|obj.FmtByte))$/;"	t
assertion	./cmd/compile/internal/gc/typecheck.go	/^			Yyerror("invalid type assertion: %v (non-interface type %v on left)", n, t)$/;"	t
assertion	./cmd/compile/internal/gc/walk.go	/^					Warn("type assertion (ok only) inlined")$/;"	t
assertion	./cmd/compile/internal/gc/walk.go	/^				Warn("type assertion not inlined")$/;"	t
assertion	./cmd/compile/internal/gc/walk.go	/^			Warn("type assertion not inlined")$/;"	t
assertion	./go/ast/ast.go	/^	\/\/ type assertion.$/;"	t
assertion	./go/parser/parser.go	/^				p.errorExpected(pos, "selector or type assertion")$/;"	t
assertion	./go/parser/parser.go	/^		\/\/ If t.Type == nil we have a type assertion of the form$/;"	t
assertion	./go/parser/parser_test.go	/^		const wantErr = "expected selector or type assertion"$/;"	t
assertion	./go/printer/testdata/parser.go	/^				p.errorExpected(pos, "selector or type assertion")$/;"	t
assertion	./go/printer/testdata/parser.go	/^			return a.Type != nil \/\/ regular type assertion$/;"	t
assertion	./go/types/check.go	/^\/\/ - A type assertion x.(T) where T is an interface type$/;"	t
assertion	./go/types/lookup.go	/^\/\/ present in V have matching types (e.g., for a type assertion x.(T) where$/;"	t
assertion	./html/template/escape_test.go	/^\/\/ This is a test for issue 7379: type assertion error caused panic, and then$/;"	t
assertion	./runtime/error.go	/^\/\/ A TypeAssertionError explains a failed type assertion.$/;"	t
assertions	./cmd/compile/internal/gc/builtin/runtime.go	/^\/\/ interface type assertions  x.(T)$/;"	t
assertions	./cmd/compile/internal/gc/swt.go	/^	okname   *Node \/\/ boolean node used for comma-ok type assertions$/;"	t
assertions	./text/template/parse/node.go	/^	\/\/ To avoid type assertions, some XxxNodes also have specialized$/;"	t
assignEncodingAndSize	./compress/flate/huffman_code.go	/^func (h *huffmanEncoder) assignEncodingAndSize(bitCount []int32, list []literalNode) {$/;"	f
assignOp	./go/types/stmt.go	/^func assignOp(op token.Token) token.Token {$/;"	f
assignOps	./go/types/token_test.go	/^var assignOps = map[token.Token]token.Token{$/;"	v
assignTo	./reflect/value.go	/^func (v Value) assignTo(context string, dst *rtype, target unsafe.Pointer) Value {$/;"	f
assignVar	./go/types/assignments.go	/^func (check *Checker) assignVar(lhs ast.Expr, x *operand) Type {$/;"	f
assignVars	./go/types/assignments.go	/^func (check *Checker) assignVars(lhs, rhs []ast.Expr) {$/;"	f
assignableTests	./reflect/set_test.go	/^var assignableTests = []struct {$/;"	v
assignableTo	./go/types/operand.go	/^func (x *operand) assignableTo(conf *Config, T Type) bool {$/;"	f
assignconv	./cmd/compile/internal/gc/subr.go	/^func assignconv(n *Node, t *Type, context string) *Node {$/;"	f
assignconvfn	./cmd/compile/internal/gc/subr.go	/^func assignconvfn(n *Node, t *Type, context func() string) *Node {$/;"	f
assignment	./go/types/assignments.go	/^func (check *Checker) assignment(x *operand, T Type) bool {$/;"	f
assignop	./cmd/compile/internal/gc/subr.go	/^func assignop(src *Type, dst *Type, why *string) int {$/;"	f
assignsTo	./cmd/fix/fix.go	/^func assignsTo(x *ast.Ident, scope []ast.Stmt) bool {$/;"	f
assoc	./go/ast/commentmap.go	/^			var assoc Node$/;"	v
assocMethod	./go/types/check.go	/^func (check *Checker) assocMethod(tname string, meth *Func) {$/;"	f
associate	./text/template/template.go	/^func (t *Template) associate(new *Template, tree *parse.Tree) (bool, error) {$/;"	f
associated	./encoding/gob/type.go	/^\/\/ Name returns the name of the type associated with the typeId.$/;"	t
associated	./encoding/gob/type.go	/^\/\/ string returns the string representation of the type associated with the typeId.$/;"	t
associated	./go/internal/gcimporter/gcimporter.go	/^	\/\/ have a type associated with it. We still need to parse the type$/;"	t
associated	./mime/type.go	/^\/\/ AddExtensionType sets the MIME type associated with$/;"	t
associated	./mime/type.go	/^\/\/ TypeByExtension returns the MIME type associated with the file extension ext.$/;"	t
ast	./cmd/cgo/out.go	/^					func(i int, atype ast.Expr) {$/;"	t
ast	./cmd/cgo/out.go	/^				func(i int, atype ast.Expr) {$/;"	t
ast	./cmd/cgo/out.go	/^			func(i int, atype ast.Expr) { resultCount++ })$/;"	t
ast	./cmd/cgo/out.go	/^			func(i int, atype ast.Expr) {$/;"	t
astFiles	./cmd/vet/main.go	/^	var astFiles []*ast.File$/;"	v
async	./runtime/chanbarrier_test.go	/^	type async struct {$/;"	t
at	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) at(next ...lex.ScanToken) bool {$/;"	f
at	./cmd/compile/internal/big/hilbert_test.go	/^func (a *matrix) at(i, j int) *Rat {$/;"	f
at	./debug/dwarf/type.go	/^		return nil, DecodeError{name, off, "no type at offset"}$/;"	t
at	./debug/dwarf/type.go	/^\/\/ Type reads the type at off in the DWARF ``info'' section.$/;"	t
at	./encoding/gob/type.go	/^	\/\/ pp 539-540.  As we step through indirections, run another type at$/;"	t
at	./go/types/lookup.go	/^					\/\/ (note that multiples of this type at the current depth$/;"	t
at	./go/types/lookup.go	/^					\/\/ this same type at the current depth, so we can ignore$/;"	t
at	./go/types/lookup.go	/^					\/\/ were consolidated before). The type at that depth shadows$/;"	t
at	./go/types/methodset.go	/^					\/\/ (note that multiples of this type at the current depth$/;"	t
at	./go/types/methodset.go	/^					\/\/ this same type at the current depth, so we can ignore$/;"	t
at	./go/types/methodset.go	/^					\/\/ were consolidated before). The type at that depth shadows$/;"	t
at	./index/suffixarray/suffixarray.go	/^func (x *Index) at(i int) []byte {$/;"	f
at	./index/suffixarray/suffixarray_test.go	/^func (a *index) at(i int) []byte    { return a.data[a.sa[i]:] }$/;"	f
at	./math/big/hilbert_test.go	/^func (a *matrix) at(i, j int) *Rat {$/;"	f
at	./text/template/exec.go	/^func (s *state) at(node parse.Node) {$/;"	f
atComma	./go/parser/parser.go	/^func (p *parser) atComma(context string, follow token.Token) bool {$/;"	f
atExitFuncs	./cmd/compile/internal/gc/util.go	/^var atExitFuncs []func()$/;"	v
atExitFuncs	./cmd/link/internal/ld/util.go	/^var atExitFuncs []func()$/;"	v
atLineBegin	./go/printer/printer.go	/^func (p *printer) atLineBegin(pos token.Position) {$/;"	f
atRegisterShift	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) atRegisterShift() bool {$/;"	f
atStartOfRegister	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) atStartOfRegister(name string) bool {$/;"	f
atTerminator	./text/template/parse/lex.go	/^func (l *lexer) atTerminator() bool {$/;"	f
atan	./math/all_test.go	/^var atan = []float64{$/;"	v
atan	./math/atan.go	/^func atan(x float64) float64 {$/;"	f
atan	./math/cmplx/cmath_test.go	/^var atan = []complex128{$/;"	v
atan2	./math/all_test.go	/^var atan2 = []float64{$/;"	v
atan2	./math/atan2.go	/^func atan2(y, x float64) float64 {$/;"	f
atan2SC	./math/all_test.go	/^var atan2SC = []float64{$/;"	v
atanSC	./math/all_test.go	/^var atanSC = []float64{$/;"	v
atanSC	./math/cmplx/cmath_test.go	/^var atanSC = []complex128{$/;"	v
atanh	./math/all_test.go	/^var atanh = []float64{$/;"	v
atanh	./math/cmplx/cmath_test.go	/^var atanh = []complex128{$/;"	v
atanhSC	./math/all_test.go	/^var atanhSC = []float64{$/;"	v
atanhSC	./math/cmplx/cmath_test.go	/^var atanhSC = []complex128{$/;"	v
atexit	./cmd/go/main.go	/^func atexit(f func()) {$/;"	f
atexitFuncs	./cmd/go/main.go	/^var atexitFuncs []func()$/;"	v
atexits	./cmd/dist/util.go	/^var atexits []func()$/;"	v
atextChars	./net/mail/message.go	/^var atextChars = []byte("ABCDEFGHIJKLMNOPQRSTUVWXYZ" +$/;"	v
atime	./os/stat_darwin.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_dragonfly.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_freebsd.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_linux.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_nacl.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_netbsd.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_openbsd.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_plan9.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/stat_solaris.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./os/types_windows.go	/^func atime(fi FileInfo) time.Time {$/;"	f
atime	./syscall/fs_nacl.go	/^func (fs *fsys) atime(ip *inode) {$/;"	f
atobTest	./strconv/atob_test.go	/^type atobTest struct {$/;"	t
atobtests	./strconv/atob_test.go	/^var atobtests = []atobTest{$/;"	v
atof	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) atof(str string) float64 {$/;"	f
atof32	./strconv/atof.go	/^func atof32(s string) (f float32, err error) {$/;"	f
atof32exact	./strconv/atof.go	/^func atof32exact(mantissa uint64, exp int, neg bool) (f float32, ok bool) {$/;"	f
atof32tests	./strconv/atof_test.go	/^var atof32tests = []atofTest{$/;"	v
atof64	./strconv/atof.go	/^func atof64(s string) (f float64, err error) {$/;"	f
atof64exact	./strconv/atof.go	/^func atof64exact(mantissa uint64, exp int, neg bool) (f float64, ok bool) {$/;"	f
atofSimpleTest	./strconv/atof_test.go	/^type atofSimpleTest struct {$/;"	t
atofTest	./strconv/atof_test.go	/^type atofTest struct {$/;"	t
atoftests	./strconv/atof_test.go	/^var atoftests = []atofTest{$/;"	v
atoi	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) atoi(str string) uint64 {$/;"	f
atoi	./cmd/compile/internal/gc/util.go	/^func atoi(s string) int {$/;"	f
atoi	./runtime/string.go	/^func atoi(s string) int {$/;"	f
atoi	./syscall/syscall_plan9.go	/^func atoi(b []byte) (n uint) {$/;"	f
atoi	./time/format.go	/^func atoi(s string) (x int, err error) {$/;"	f
atoi32Test	./strconv/atoi_test.go	/^type atoi32Test struct {$/;"	t
atoi32tests	./strconv/atoi_test.go	/^var atoi32tests = []atoi32Test{$/;"	v
atoi64Test	./strconv/atoi_test.go	/^type atoi64Test struct {$/;"	t
atoi64tests	./strconv/atoi_test.go	/^var atoi64tests = []atoi64Test{$/;"	v
atoiError	./time/format.go	/^var atoiError = errors.New("time: invalid number")$/;"	v
atolwhex	./cmd/link/internal/ld/ld.go	/^func atolwhex(s string) int64 {$/;"	f
atolwhex	./runtime/os_plan9.go	/^func atolwhex(p string) int64 {$/;"	f
atomFeed	./encoding/xml/read_test.go	/^var atomFeed = Feed{$/;"	v
atomValue	./encoding/xml/atom_test.go	/^var atomValue = &Feed{$/;"	v
atomXml	./encoding/xml/atom_test.go	/^var atomXml = `` +$/;"	v
atomicCounterStmt	./cmd/cover/cover.go	/^func atomicCounterStmt(f *File, counter ast.Expr) ast.Stmt {$/;"	f
atomicWasCanceled	./net/http/client.go	/^	var atomicWasCanceled int32 \/\/ atomic bool (1 or 0)$/;"	v
atomicand8	./runtime/atomic_386.go	/^func atomicand8(ptr *uint8, val uint8)$/;"	f
atomicand8	./runtime/atomic_amd64x.go	/^func atomicand8(ptr *uint8, val uint8)$/;"	f
atomicand8	./runtime/atomic_arm.go	/^func atomicand8(addr *uint8, v uint8) {$/;"	f
atomicand8	./runtime/atomic_arm64.go	/^func atomicand8(addr *uint8, v uint8) {$/;"	f
atomicand8	./runtime/atomic_ppc64x.go	/^func atomicand8(ptr *uint8, val uint8)$/;"	f
atomicload	./runtime/atomic_386.go	/^func atomicload(ptr *uint32) uint32 {$/;"	f
atomicload	./runtime/atomic_amd64x.go	/^func atomicload(ptr *uint32) uint32 {$/;"	f
atomicload	./runtime/atomic_arm.go	/^func atomicload(addr *uint32) uint32 {$/;"	f
atomicload	./runtime/atomic_arm64.go	/^func atomicload(ptr *uint32) uint32$/;"	f
atomicload	./runtime/atomic_ppc64x.go	/^func atomicload(ptr *uint32) uint32$/;"	f
atomicload64	./runtime/atomic_386.go	/^func atomicload64(ptr *uint64) uint64$/;"	f
atomicload64	./runtime/atomic_amd64x.go	/^func atomicload64(ptr *uint64) uint64 {$/;"	f
atomicload64	./runtime/atomic_arm.go	/^func atomicload64(addr *uint64) uint64 {$/;"	f
atomicload64	./runtime/atomic_arm64.go	/^func atomicload64(ptr *uint64) uint64$/;"	f
atomicload64	./runtime/atomic_ppc64x.go	/^func atomicload64(ptr *uint64) uint64$/;"	f
atomicloadint64	./runtime/stubs.go	/^func atomicloadint64(ptr *int64) int64 {$/;"	f
atomicloadp	./runtime/atomic_386.go	/^func atomicloadp(ptr unsafe.Pointer) unsafe.Pointer {$/;"	f
atomicloadp	./runtime/atomic_amd64x.go	/^func atomicloadp(ptr unsafe.Pointer) unsafe.Pointer {$/;"	f
atomicloadp	./runtime/atomic_arm.go	/^func atomicloadp(addr unsafe.Pointer) unsafe.Pointer {$/;"	f
atomicloadp	./runtime/atomic_arm64.go	/^func atomicloadp(ptr unsafe.Pointer) unsafe.Pointer$/;"	f
atomicloadp	./runtime/atomic_ppc64x.go	/^func atomicloadp(ptr unsafe.Pointer) unsafe.Pointer$/;"	f
atomicloaduint	./runtime/stubs.go	/^func atomicloaduint(ptr *uint) uint$/;"	f
atomicloaduintptr	./runtime/stubs.go	/^func atomicloaduintptr(ptr *uintptr) uintptr$/;"	f
atomicor8	./runtime/atomic_386.go	/^func atomicor8(ptr *uint8, val uint8)$/;"	f
atomicor8	./runtime/atomic_amd64x.go	/^func atomicor8(ptr *uint8, val uint8)$/;"	f
atomicor8	./runtime/atomic_arm.go	/^func atomicor8(addr *uint8, v uint8) {$/;"	f
atomicor8	./runtime/atomic_arm64.go	/^func atomicor8(addr *uint8, v uint8) {$/;"	f
atomicor8	./runtime/atomic_ppc64x.go	/^func atomicor8(ptr *uint8, val uint8)$/;"	f
atomicstore	./runtime/atomic_386.go	/^func atomicstore(ptr *uint32, val uint32)$/;"	f
atomicstore	./runtime/atomic_amd64x.go	/^func atomicstore(ptr *uint32, val uint32)$/;"	f
atomicstore	./runtime/atomic_arm.go	/^func atomicstore(addr *uint32, v uint32) {$/;"	f
atomicstore	./runtime/atomic_arm64.go	/^func atomicstore(ptr *uint32, val uint32)$/;"	f
atomicstore	./runtime/atomic_ppc64x.go	/^func atomicstore(ptr *uint32, val uint32)$/;"	f
atomicstore64	./runtime/atomic_386.go	/^func atomicstore64(ptr *uint64, val uint64)$/;"	f
atomicstore64	./runtime/atomic_amd64x.go	/^func atomicstore64(ptr *uint64, val uint64)$/;"	f
atomicstore64	./runtime/atomic_arm.go	/^func atomicstore64(addr *uint64, v uint64) {$/;"	f
atomicstore64	./runtime/atomic_arm64.go	/^func atomicstore64(ptr *uint64, val uint64)$/;"	f
atomicstore64	./runtime/atomic_ppc64x.go	/^func atomicstore64(ptr *uint64, val uint64)$/;"	f
atomicstoreint64	./runtime/stubs.go	/^func atomicstoreint64(ptr *int64, new int64) {$/;"	f
atomicstorep	./runtime/atomic_pointer.go	/^func atomicstorep(ptr unsafe.Pointer, new unsafe.Pointer) {$/;"	f
atomicstorep1	./runtime/atomic_386.go	/^func atomicstorep1(ptr unsafe.Pointer, val unsafe.Pointer)$/;"	f
atomicstorep1	./runtime/atomic_amd64x.go	/^func atomicstorep1(ptr unsafe.Pointer, val unsafe.Pointer)$/;"	f
atomicstorep1	./runtime/atomic_arm.go	/^func atomicstorep1(addr unsafe.Pointer, v unsafe.Pointer) {$/;"	f
atomicstorep1	./runtime/atomic_arm64.go	/^func atomicstorep1(ptr unsafe.Pointer, val unsafe.Pointer)$/;"	f
atomicstorep1	./runtime/atomic_ppc64x.go	/^func atomicstorep1(ptr unsafe.Pointer, val unsafe.Pointer)$/;"	f
atomicstoreuintptr	./runtime/stubs.go	/^func atomicstoreuintptr(ptr *uintptr, new uintptr)$/;"	f
atos	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) atos(str string) string {$/;"	f
atoui32Test	./strconv/atoi_test.go	/^type atoui32Test struct {$/;"	t
atoui32tests	./strconv/atoi_test.go	/^var atoui32tests = []atoui32Test{$/;"	v
atoui64Test	./strconv/atoi_test.go	/^type atoui64Test struct {$/;"	t
atoui64tests	./strconv/atoi_test.go	/^var atoui64tests = []atoui64Test{$/;"	v
attempts	./net/dial_test.go	/^	var attempts int$/;"	v
attr	./cmd/link/internal/ld/dwarf.go	/^	DW_ABRV_BARE_PTRTYPE \/\/ only for void*, no DW_AT_type attr to please gdb 6.$/;"	t
attr	./crypto/x509/x509.go	/^		var attr pkix.AttributeTypeAndValueSET$/;"	v
attr	./html/template/context.go	/^type attr uint8$/;"	t
attrEscaper	./html/template/html.go	/^func attrEscaper(args ...interface{}) string {$/;"	f
attrIsExprloc	./debug/dwarf/entry.go	/^var attrIsExprloc = map[Attr]bool{$/;"	v
attrList	./syscall/syscall_darwin.go	/^type attrList struct {$/;"	t
attrNames	./debug/dwarf/const.go	/^var attrNames = [...]string{$/;"	v
attrNames	./html/template/context.go	/^var attrNames = [...]string{$/;"	v
attrPtrClass	./debug/dwarf/entry.go	/^var attrPtrClass = map[Attr]Class{$/;"	v
attrStartStates	./html/template/transition.go	/^var attrStartStates = [...]state{$/;"	v
attrType	./html/template/attr.go	/^func attrType(name string) contentType {$/;"	f
attrTypeMap	./html/template/attr.go	/^var attrTypeMap = map[string]contentType{$/;"	v
attrValue	./cmd/go/discovery.go	/^func attrValue(attrs []xml.Attr, name string) string {$/;"	f
attributes	./cmd/link/internal/ld/dwarf.go	/^\/\/ Go-specific type attributes.$/;"	t
attributes	./crypto/x509/x509.go	/^	var attributes []pkix.AttributeTypeAndValueSET$/;"	v
attrs	./cmd/pprof/internal/profile/legacy_profile.go	/^	var attrs []string$/;"	v
attrs	./syscall/netlink_linux.go	/^	var attrs []NetlinkRouteAttr$/;"	v
attrval	./encoding/xml/xml.go	/^func (d *Decoder) attrval() []byte {$/;"	f
au	./sort/example_keys_test.go	/^type au float64$/;"	t
aus	./time/zoneinfo_windows.go	/^var aus = syscall.Timezoneinformation{$/;"	v
auth	./crypto/cipher/gcm.go	/^func (g *gcm) auth(out, ciphertext, additionalData []byte, tagMask *[gcmTagSize]byte) {$/;"	f
authFailedClient	./net/smtp/smtp_test.go	/^var authFailedClient = `EHLO localhost$/;"	v
authFailedServer	./net/smtp/smtp_test.go	/^var authFailedServer = `220 hello world$/;"	v
authKeyId	./crypto/x509/x509.go	/^type authKeyId struct {$/;"	t
authTest	./net/smtp/smtp_test.go	/^type authTest struct {$/;"	t
authTests	./net/smtp/smtp_test.go	/^var authTests = []authTest{$/;"	v
authority	./net/url/url.go	/^		var authority string$/;"	v
authorityInfoAccess	./crypto/x509/x509.go	/^type authorityInfoAccess struct {$/;"	t
autoClose	./encoding/xml/xml.go	/^func (d *Decoder) autoClose(t Token) (Token, bool) {$/;"	f
autoclass	./cmd/internal/obj/arm64/asm7.go	/^func autoclass(l int64) int {$/;"	f
autoexport	./cmd/compile/internal/gc/export.go	/^func autoexport(n *Node, ctxt uint8) {$/;"	f
auxfound	./runtime/sys_nacl_amd64p32.s	/^auxfound:$/;"	l
auxloop	./runtime/sys_nacl_amd64p32.s	/^auxloop:$/;"	l
avalancheTest1	./runtime/hash_test.go	/^func avalancheTest1(t *testing.T, k Key) {$/;"	f
averageDelta	./image/gif/writer_test.go	/^func averageDelta(m0, m1 image.Image) int64 {$/;"	f
averageDelta	./image/jpeg/writer_test.go	/^func averageDelta(m0, m1 image.Image) int64 {$/;"	f
avoids	./runtime/proc_test.go	/^\/\/ Declaring a var avoids inlining at the call site.$/;"	v
await	./syscall/zsyscall_plan9_386.go	/^func await(s []byte) (n int, err error) {$/;"	f
await	./syscall/zsyscall_plan9_amd64.go	/^func await(s []byte) (n int, err error) {$/;"	f
await	./time/sleep_test.go	/^func await(slot int, result chan<- afterResult, ac <-chan Time) {$/;"	f
awayFromTTY	./cmd/pprof/internal/commands/commands.go	/^func awayFromTTY(format string) PostProcessor {$/;"	f
ax	./cmd/compile/internal/amd64/ggen.go	/^	var ax gc.Node$/;"	v
ax	./cmd/compile/internal/x86/cgen64.go	/^	var ax gc.Node$/;"	v
ax	./cmd/compile/internal/x86/ggen.go	/^		var ax, n2, tmp gc.Node$/;"	v
ax	./cmd/compile/internal/x86/ggen.go	/^	var ax gc.Node$/;"	v
ax	./cmd/compile/internal/x86/gsubr.go	/^		var ax gc.Node$/;"	v
b0	./compress/zlib/writer_test.go	/^	var b0 []byte$/;"	v
b0	./encoding/base32/base32.go	/^		var b0, b1, b2, b3, b4, b5, b6, b7 byte$/;"	v
b0	./encoding/xml/xml.go	/^				var b0, b1 byte$/;"	v
b0	./encoding/xml/xml.go	/^			var b0, b1 byte$/;"	v
b0	./encoding/xml/xml.go	/^		var b0 byte$/;"	v
b0	./encoding/xml/xml.go	/^	var b0, b1 byte$/;"	v
b0	./path/filepath/path.go	/^	var b0, bi, t0, ti int$/;"	v
b1	./compress/flate/deflate_test.go	/^	var b1 bytes.Buffer$/;"	v
b1	./encoding/gob/encoder_test.go	/^	var b1 Bug2$/;"	v
b1	./image/png/writer_test.go	/^	var b1, b2 bytes.Buffer$/;"	v
b2	./bytes/compare_test.go	/^	var b2 []byte$/;"	v
b2	./encoding/binary/binary_test.go	/^	var b2 BlankFields$/;"	v
b3	./encoding/gob/type_test.go	/^	var b3 [3]bool$/;"	v
back	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) back() {$/;"	f
back	./encoding/json/encode_test.go	/^	var back stringPointer$/;"	v
back	./runtime/memmove_386.s	/^back:$/;"	l
back	./runtime/memmove_amd64.s	/^back:$/;"	l
back	./runtime/memmove_nacl_amd64p32.s	/^back:$/;"	l
back	./runtime/memmove_plan9_386.s	/^back:$/;"	l
back	./runtime/memmove_plan9_amd64.s	/^back:$/;"	l
backgroundgc	./runtime/mgc.go	/^func backgroundgc() {$/;"	f
backtrack	./regexp/backtrack.go	/^func (m *machine) backtrack(i input, pos int, end int, ncap int) bool {$/;"	f
backup	./text/template/parse/lex.go	/^func (l *lexer) backup() {$/;"	f
backup	./text/template/parse/parse.go	/^func (t *Tree) backup() {$/;"	f
backup2	./text/template/parse/parse.go	/^func (t *Tree) backup2(t1 item) {$/;"	f
backup3	./text/template/parse/parse.go	/^func (t *Tree) backup3(t2, t1 item) { \/\/ Reverse order: we're pushing back.$/;"	f
backward	./runtime/memmove_arm64.s	/^backward:$/;"	l
backward	./runtime/memmove_ppc64x.s	/^backward:$/;"	l
bad	./cmd/compile/internal/gc/subr.go	/^		var bad *Type$/;"	v
bad	./net/http/main_test.go	/^	var bad string$/;"	v
bad	./regexp/testdata/testregex.c	/^bad(char* comment, char* re, char* s, int len, unsigned long test)$/;"	f	file:
badCodeTag	./encoding/json/tagkey_test.go	/^type badCodeTag struct {$/;"	t
badData	./time/zoneinfo_read.go	/^var badData = errors.New("malformed time zone information")$/;"	v
badDataTest	./encoding/gob/encoder_test.go	/^type badDataTest struct {$/;"	t
badDataTests	./encoding/gob/encoder_test.go	/^var badDataTests = []badDataTest{$/;"	v
badExprTest	./cmd/asm/internal/asm/expr_test.go	/^type badExprTest struct {$/;"	t
badExprTests	./cmd/asm/internal/asm/expr_test.go	/^var badExprTests = []badExprTest{$/;"	v
badFormatTag	./encoding/json/tagkey_test.go	/^type badFormatTag struct {$/;"	t
badMarshaler	./html/template/escape_test.go	/^type badMarshaler struct{}$/;"	t
badMediaTypeTest	./mime/mediatype_test.go	/^type badMediaTypeTest struct {$/;"	t
badMediaTypeTests	./mime/mediatype_test.go	/^var badMediaTypeTests = []badMediaTypeTest{$/;"	v
badOS	./runtime/pprof/pprof_test.go	/^var badOS = map[string]bool{$/;"	v
badPathTests	./encoding/xml/read_test.go	/^var badPathTests = []struct {$/;"	v
badProtocolVersions	./crypto/tls/handshake_server_test.go	/^var badProtocolVersions = []uint16{0x0000, 0x0005, 0x0100, 0x0105, 0x0200, 0x0205}$/;"	v
badRequestTests	./net/http/readrequest_test.go	/^var badRequestTests = []struct {$/;"	v
badSoftRx	./mime/quotedprintable/reader_test.go	/^var badSoftRx = regexp.MustCompile(`=([^\\r\\n]+?\\n)|([^\\r\\n]+$)|(\\r$)|(\\r[^\\n]+\\n)|( \\r\\n)`)$/;"	v
badStringError	./net/http/request.go	/^type badStringError struct {$/;"	t
badTypeCheck	./encoding/gob/encoder_test.go	/^func badTypeCheck(e interface{}, shouldFail bool, msg string, t *testing.T) {$/;"	f
badUTF8	./encoding/json/decode_test.go	/^var badUTF8 = []struct {$/;"	v
badVerb	./fmt/print.go	/^func (p *pp) badVerb(verb rune) {$/;"	f
badWriter	./os/exec/exec_test.go	/^type badWriter struct{}$/;"	t
bad_re	./regexp/all_test.go	/^var bad_re = []stringError{$/;"	v
badcgocallback	./runtime/cgocall.go	/^func badcgocallback() {$/;"	f
badmcall	./runtime/proc.go	/^func badmcall(fn func(*g)) {$/;"	f
badmcall2	./runtime/proc.go	/^func badmcall2(fn func(*g)) {$/;"	f
badreflectcall	./runtime/proc.go	/^func badreflectcall() {$/;"	f
badsignal	./runtime/sigqueue.go	/^func badsignal(sig uintptr) {$/;"	f
badsignal1	./runtime/os1_nacl.go	/^var badsignal1 = []byte("runtime: signal received on thread not created by Go.\\n")$/;"	v
badsignal2	./runtime/os1_nacl.go	/^func badsignal2() {$/;"	f
badsignal2	./runtime/os1_plan9.go	/^func badsignal2() {$/;"	f
badsignal2	./runtime/signal_windows.go	/^func badsignal2()$/;"	f
badsignalgo	./runtime/sigqueue.go	/^func badsignalgo(sig uintptr) {$/;"	f
badsystemstack	./runtime/stubs.go	/^func badsystemstack() {$/;"	f
badtype	./cmd/compile/internal/gc/subr.go	/^func badtype(o int, tl *Type, tr *Type) {$/;"	f
badtype	./cmd/compile/internal/gc/swt.go	/^			var badtype *Type$/;"	v
badtype	./cmd/compile/internal/gc/typecheck.go	/^		var badtype *Type$/;"	v
badunlockosthread	./runtime/proc1.go	/^func badunlockosthread() {$/;"	f
bailout	./go/parser/parser.go	/^type bailout struct{}$/;"	t
bailout	./go/types/check.go	/^type bailout struct{}$/;"	t
balance	./runtime/mgcwork.go	/^func (w *gcWork) balance() {$/;"	f
bany	./cmd/compile/internal/gc/reg.go	/^func bany(a *Bits) bool {$/;"	f
bare_complitexpr	./cmd/compile/internal/gc/go.y	/^bare_complitexpr:$/;"	l
barray	./fmt/fmt_test.go	/^var barray = [5]renamedUint8{1, 2, 3, 4, 5}$/;"	v
base	./cmd/cgo/gcc.go	/^func base(dt dwarf.Type) dwarf.Type {$/;"	f
base	./cmd/internal/obj/x86/asm6.go	/^	var base int$/;"	v
base	./cmd/internal/objfile/disasm.go	/^func base(path string) string {$/;"	f
base	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^	var base, plus, scale, index, disp string$/;"	v
base	./cmd/link/internal/ld/pcln.go	/^	var base int32$/;"	v
base	./debug/pe/file.go	/^	var base int64$/;"	v
base	./go/scanner/scanner.go	/^	var base, max uint32$/;"	v
base	./go/types/methodset.go	/^	var base methodSet$/;"	v
base	./net/http/client.go	/^	var base *url.URL$/;"	v
base	./runtime/mbitmap.go	/^	var base uintptr$/;"	v
base	./runtime/mheap.go	/^func (s *mspan) base() uintptr {$/;"	f
base	./syscall/syscall_bsd.go	/^	var base = (*uintptr)(unsafe.Pointer(new(uint64)))$/;"	v
base	./syscall/syscall_linux_386.go	/^	var base uintptr$/;"	v
baseHelloClient	./net/smtp/smtp_test.go	/^var baseHelloClient = `EHLO customhost$/;"	v
baseHelloServer	./net/smtp/smtp_test.go	/^var baseHelloServer = `220 hello world$/;"	v
baseMultTest	./crypto/elliptic/elliptic_test.go	/^type baseMultTest struct {$/;"	t
baseReg	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var baseReg = [...]Reg{$/;"	v
baseRegForBits	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^func baseRegForBits(bits int) Reg {$/;"	f
baseTypeName	./go/doc/reader.go	/^func baseTypeName(x ast.Expr) (name string, imported bool) {$/;"	f
basefds	./os/exec/exec_test.go	/^func basefds() uintptr {$/;"	f
basename	./os/file_unix.go	/^func basename(name string) string {$/;"	f
basename	./os/stat_windows.go	/^func basename(name string) string {$/;"	f
basetests	./path/filepath/path_test.go	/^var basetests = []PathTest{$/;"	v
basetests	./path/path_test.go	/^var basetests = []PathTest{$/;"	v
basicAuth	./net/http/client.go	/^func basicAuth(username, password string) string {$/;"	f
basicAuthCredentialsTest	./net/http/request_test.go	/^type basicAuthCredentialsTest struct {$/;"	t
basicClient	./net/smtp/smtp_test.go	/^var basicClient = `HELO localhost$/;"	v
basicConstraints	./crypto/x509/x509.go	/^type basicConstraints struct {$/;"	t
basicKind	./text/template/funcs.go	/^func basicKind(v reflect.Value) (kind, error) {$/;"	f
basicLatin2xTag	./encoding/json/tagkey_test.go	/^type basicLatin2xTag struct {$/;"	t
basicLatin3xTag	./encoding/json/tagkey_test.go	/^type basicLatin3xTag struct {$/;"	t
basicLatin4xTag	./encoding/json/tagkey_test.go	/^type basicLatin4xTag struct {$/;"	t
basicLatin5xTag	./encoding/json/tagkey_test.go	/^type basicLatin5xTag struct {$/;"	t
basicLatin6xTag	./encoding/json/tagkey_test.go	/^type basicLatin6xTag struct {$/;"	t
basicLatin7xTag	./encoding/json/tagkey_test.go	/^type basicLatin7xTag struct {$/;"	t
basicMul	./cmd/compile/internal/big/nat.go	/^func basicMul(z, x, y nat) {$/;"	f
basicMul	./math/big/nat.go	/^func basicMul(z, x, y nat) {$/;"	f
basicPrefixes	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func basicPrefixes(try func([]byte)) {$/;"	f
basicServer	./net/smtp/smtp_test.go	/^var basicServer = `250 mx.google.com at your service$/;"	v
basicSizes	./go/types/sizes.go	/^var basicSizes = [...]byte{$/;"	v
basicTypes	./encoding/gob/type_test.go	/^var basicTypes = []typeT{$/;"	v
basicnames	./cmd/compile/internal/gc/fmt.go	/^var basicnames = []string{$/;"	v
basicsTests	./net/http/cookiejar/jar_test.go	/^var basicsTests = [...]jarTest{$/;"	v
batch	./runtime/proc1.go	/^	var batch [len(_p_.runq)\/2 + 1]*g$/;"	v
bc	./cmd/compile/internal/gc/const.go	/^	var bc Mpflt$/;"	v
bcode	./cmd/asm/internal/arch/arm.go	/^var bcode = []int{$/;"	v
bd	./cmd/compile/internal/gc/const.go	/^	var bd Mpflt$/;"	v
be	./cmd/compile/internal/gc/subr.go	/^ * Can this type be stored directly in an interface word?$/;"	t
becomes	./go/types/call.go	/^		\/\/ the receiver type becomes the type of the first function$/;"	t
before	./cmd/compile/internal/gc/walk.go	/^		\/\/ check itable\/type before full compare.$/;"	t
before	./encoding/gob/type.go	/^	\/\/ Install the top-level type before the subtypes (e.g. struct before$/;"	t
before	./encoding/json/encode.go	/^	\/\/ indirect func before we build it. This type waits on the$/;"	f
before	./go/doc/testdata/testing.go	/^func before() {$/;"	f
before	./go/types/lookup.go	/^					\/\/ We have seen this type before, at a more shallow depth$/;"	t
before	./go/types/methodset.go	/^					\/\/ We have seen this type before, at a more shallow depth$/;"	t
before	./reflect/type.go	/^				\/\/ We've looked through this type before, at a higher level.$/;"	t
before	./reflect/type.go	/^\/\/ Use the Kind method to find out the kind of type before$/;"	t
before	./runtime/heapdump.go	/^	\/\/ If we've definitely serialized the type before,$/;"	t
before	./testing/testing.go	/^func before() {$/;"	f
beforefork	./runtime/proc1.go	/^func beforefork() {$/;"	f
begin	./database/sql/sql.go	/^func (db *DB) begin(strategy connReuseStrategy) (tx *Tx, err error) {$/;"	f
begin	./runtime/parfor.go	/^			var begin, end uint32$/;"	v
begin	./time/time.go	/^	var begin int$/;"	v
beginChunk	./net/http/internal/chunked.go	/^func (cr *chunkedReader) beginChunk() {$/;"	f
beginRequest	./net/http/fcgi/fcgi.go	/^type beginRequest struct {$/;"	t
begins	./cmd/compile/internal/gc/fmt.go	/^			\/\/ Need parens when type begins with what might$/;"	t
being	./cmd/compile/internal/gc/dcl.go	/^ * new type being defined with name s.$/;"	t
being	./cmd/fix/typecheck.go	/^	i := 0 \/\/ current type being scanned is s[i:j].$/;"	t
being	./crypto/tls/key_agreement.go	/^\/\/ ServerKeyExchange given the signature type being used and the client's$/;"	t
being	./encoding/gob/doc.go	/^are transmitted as a string identifying the concrete type being sent (a name$/;"	t
bench	./crypto/md5/md5_test.go	/^var bench = New()$/;"	v
bench	./crypto/sha1/sha1_test.go	/^var bench = New()$/;"	v
bench	./crypto/sha256/sha256_test.go	/^var bench = New()$/;"	v
bench	./crypto/sha512/sha512_test.go	/^var bench = New()$/;"	v
bench	./image/draw/bench_test.go	/^func bench(b *testing.B, dcm, scm, mcm color.Model, op Op) {$/;"	f
bench	./sort/sort_test.go	/^func bench(b *testing.B, size int, algo func(Interface), name string) {$/;"	f
benchHelper	./runtime/malloc_test.go	/^func benchHelper(b *testing.B, n int, read func(chan struct{})) {$/;"	f
benchInputHard	./strings/strings_test.go	/^var benchInputHard = makeBenchInputHard()$/;"	v
benchInputTorture	./strings/strings_test.go	/^var benchInputTorture = Repeat("ABC", 1<<10) + "123" + Repeat("ABC", 1<<10)$/;"	v
benchNeedleTorture	./strings/strings_test.go	/^var benchNeedleTorture = Repeat("ABC", 1<<10+1)$/;"	v
benchScan	./encoding/json/scanner_test.go	/^var benchScan scanner$/;"	v
benchSetType	./runtime/gc_test.go	/^func benchSetType(b *testing.B, x interface{}) {$/;"	f
benchTime	./go/doc/testdata/benchmark.go	/^var benchTime = flag.Duration("test.benchtime", 1*time.Second, "approximate run time for each benchmark")$/;"	v
benchTime	./testing/benchmark.go	/^var benchTime = flag.Duration("test.benchtime", 1*time.Second, "approximate run time for each benchmark")$/;"	v
benchmark	./crypto/rc4/rc4_test.go	/^func benchmark(b *testing.B, size int64) {$/;"	f
benchmark	./go/types/self_test.go	/^var benchmark = flag.Bool("b", false, "run benchmarks")$/;"	v
benchmark	./regexp/exec_test.go	/^func benchmark(b *testing.B, re string, n int) {$/;"	f
benchmark	./time/sleep_test.go	/^func benchmark(b *testing.B, bench func(n int)) {$/;"	f
benchmarkAddMulVVW	./cmd/compile/internal/big/arith_test.go	/^func benchmarkAddMulVVW(b *testing.B, n int) {$/;"	f
benchmarkAddMulVVW	./math/big/arith_test.go	/^func benchmarkAddMulVVW(b *testing.B, n int) {$/;"	f
benchmarkAppendBytes	./runtime/append_test.go	/^func benchmarkAppendBytes(b *testing.B, length int) {$/;"	f
benchmarkAppendFloat	./strconv/ftoa_test.go	/^func benchmarkAppendFloat(b *testing.B, f float64, fmt byte, prec, bitSize int) {$/;"	f
benchmarkAppendStr	./runtime/append_test.go	/^func benchmarkAppendStr(b *testing.B, str string) {$/;"	f
benchmarkBitLenN	./cmd/compile/internal/big/arith_test.go	/^func benchmarkBitLenN(b *testing.B, nbits uint) {$/;"	f
benchmarkBitLenN	./math/big/arith_test.go	/^func benchmarkBitLenN(b *testing.B, nbits uint) {$/;"	f
benchmarkBuf	./encoding/gob/timing_test.go	/^type benchmarkBuf struct {$/;"	t
benchmarkChanProdCons	./runtime/chan_test.go	/^func benchmarkChanProdCons(b *testing.B, chanSize, localWork int) {$/;"	f
benchmarkClientServerParallel	./net/http/serve_test.go	/^func benchmarkClientServerParallel(b *testing.B, parallelism int, useTLS bool) {$/;"	f
benchmarkCond	./sync/cond_test.go	/^func benchmarkCond(b *testing.B, waiters int) {$/;"	f
benchmarkCopySlice	./runtime/append_test.go	/^func benchmarkCopySlice(b *testing.B, l int) {$/;"	f
benchmarkCopyStr	./runtime/append_test.go	/^func benchmarkCopyStr(b *testing.B, l int) {$/;"	f
benchmarkCountHard	./strings/strings_test.go	/^func benchmarkCountHard(b *testing.B, sep string) {$/;"	f
benchmarkCreateGoroutines	./runtime/proc_test.go	/^func benchmarkCreateGoroutines(b *testing.B, procs int) {$/;"	f
benchmarkDCT	./image/jpeg/dct_test.go	/^func benchmarkDCT(b *testing.B, f func(*block)) {$/;"	f
benchmarkDecode	./compress/bzip2/bzip2_test.go	/^func benchmarkDecode(b *testing.B, testfile int) {$/;"	f
benchmarkDecode	./compress/flate/reader_test.go	/^func benchmarkDecode(b *testing.B, testfile, level, n int) {$/;"	f
benchmarkDecode	./image/jpeg/reader_test.go	/^func benchmarkDecode(b *testing.B, filename string) {$/;"	f
benchmarkDecode	./image/png/reader_test.go	/^func benchmarkDecode(b *testing.B, filename string, bytesPerPixel int) {$/;"	f
benchmarkDecoder	./compress/lzw/reader_test.go	/^func benchmarkDecoder(b *testing.B, n int) {$/;"	f
benchmarkEncoder	./compress/flate/writer_test.go	/^func benchmarkEncoder(b *testing.B, testfile, level, n int) {$/;"	f
benchmarkEncoder	./compress/lzw/writer_test.go	/^func benchmarkEncoder(b *testing.B, n int) {$/;"	f
benchmarkEndToEnd	./encoding/gob/timing_test.go	/^func benchmarkEndToEnd(b *testing.B, ctor func() interface{}, pipe func() (r io.Reader, w io.Writer, err error)) {$/;"	f
benchmarkEndToEnd	./net/rpc/server_test.go	/^func benchmarkEndToEnd(dial func() (*Client, error), b *testing.B) {$/;"	f
benchmarkEndToEndAsync	./net/rpc/server_test.go	/^func benchmarkEndToEndAsync(dial func() (*Client, error), b *testing.B) {$/;"	f
benchmarkFunVV	./cmd/compile/internal/big/arith_test.go	/^func benchmarkFunVV(b *testing.B, f funVV, n int) {$/;"	f
benchmarkFunVV	./math/big/arith_test.go	/^func benchmarkFunVV(b *testing.B, f funVV, n int) {$/;"	f
benchmarkFunVW	./cmd/compile/internal/big/arith_test.go	/^func benchmarkFunVW(b *testing.B, f funVW, n int) {$/;"	f
benchmarkFunVW	./math/big/arith_test.go	/^func benchmarkFunVW(b *testing.B, f funVW, n int) {$/;"	f
benchmarkHandler	./net/http/serve_test.go	/^func benchmarkHandler(b *testing.B, h Handler) {$/;"	f
benchmarkHash	./runtime/hash_test.go	/^func benchmarkHash(b *testing.B, n int) {$/;"	f
benchmarkIndexHard	./strings/strings_test.go	/^func benchmarkIndexHard(b *testing.B, sep string) {$/;"	f
benchmarkKB	./hash/fnv/fnv_test.go	/^func benchmarkKB(b *testing.B, h hash.Hash) {$/;"	f
benchmarkLastIndexHard	./strings/strings_test.go	/^func benchmarkLastIndexHard(b *testing.B, sep string) {$/;"	f
benchmarkLock	./testing/benchmark.go	/^var benchmarkLock sync.Mutex$/;"	v
benchmarkMapPop	./runtime/map_test.go	/^func benchmarkMapPop(b *testing.B, n int) {$/;"	f
benchmarkMapStringKeysEight	./runtime/mapspeed_test.go	/^func benchmarkMapStringKeysEight(b *testing.B, keySize int) {$/;"	f
benchmarkMemory	./testing/benchmark.go	/^var benchmarkMemory = flag.Bool("test.benchmem", false, "print memory allocations for benchmarks")$/;"	v
benchmarkMutex	./sync/mutex_test.go	/^func benchmarkMutex(b *testing.B, slack, work bool) {$/;"	f
benchmarkName	./testing/benchmark.go	/^func benchmarkName(name string, n int) string {$/;"	f
benchmarkNew	./index/suffixarray/suffixarray_test.go	/^func benchmarkNew(b *testing.B, random bool) {$/;"	f
benchmarkRWMutex	./sync/rwmutex_test.go	/^func benchmarkRWMutex(b *testing.B, localWork, writeRatio int) {$/;"	f
benchmarkReadRequest	./net/http/request_test.go	/^func benchmarkReadRequest(b *testing.B, request string) {$/;"	f
benchmarkRepeatedLookup	./runtime/mapspeed_test.go	/^func benchmarkRepeatedLookup(b *testing.B, lookupKeySize int) {$/;"	f
benchmarkSema	./sync/runtime_sema_test.go	/^func benchmarkSema(b *testing.B, block, work bool) {$/;"	f
benchmarkSingleString	./strings/replace_test.go	/^func benchmarkSingleString(b *testing.B, pattern, text string) {$/;"	f
benchmarkSize	./crypto/md5/md5_test.go	/^func benchmarkSize(b *testing.B, size int, unaligned bool) {$/;"	f
benchmarkSize	./crypto/sha1/sha1_test.go	/^func benchmarkSize(b *testing.B, size int) {$/;"	f
benchmarkSize	./crypto/sha256/sha256_test.go	/^func benchmarkSize(b *testing.B, size int) {$/;"	f
benchmarkSize	./crypto/sha512/sha512_test.go	/^func benchmarkSize(b *testing.B, size int) {$/;"	f
benchmarkStackGrowth	./runtime/proc_test.go	/^func benchmarkStackGrowth(b *testing.B, rec int) {$/;"	f
benchmarkSyscall	./runtime/norace_test.go	/^func benchmarkSyscall(b *testing.B, work, excess int) {$/;"	f
benchmarkTCP	./net/tcp_test.go	/^func benchmarkTCP(b *testing.B, persistent, timeout bool, laddr string) {$/;"	f
benchmarkTCPConcurrentReadWrite	./net/tcp_test.go	/^func benchmarkTCPConcurrentReadWrite(b *testing.B, laddr string) {$/;"	f
benchmarkWaitGroupAddDone	./sync/waitgroup_test.go	/^func benchmarkWaitGroupAddDone(b *testing.B, localWork int) {$/;"	f
benchmarkWaitGroupWait	./sync/waitgroup_test.go	/^func benchmarkWaitGroupWait(b *testing.B, localWork int) {$/;"	f
benchmarks	./cmd/go/test.go	/^var benchmarks = []testing.InternalBenchmark{$/;"	v
bestFit	./runtime/mheap.go	/^func bestFit(list *mspan, npage uintptr, best *mspan) *mspan {$/;"	f
betypeinit	./cmd/compile/internal/amd64/galign.go	/^func betypeinit() {$/;"	f
betypeinit	./cmd/compile/internal/arm/galign.go	/^func betypeinit() {$/;"	f
betypeinit	./cmd/compile/internal/arm64/galign.go	/^func betypeinit() {$/;"	f
betypeinit	./cmd/compile/internal/ppc64/galign.go	/^func betypeinit() {$/;"	f
betypeinit	./cmd/compile/internal/x86/galign.go	/^func betypeinit() {$/;"	f
bflag	./cmd/internal/obj/arm/asm5.go	/^	var bflag int$/;"	v
bgMarkSignal	./runtime/mgc.go	/^type bgMarkSignal struct {$/;"	t
bgenNonZero	./cmd/compile/internal/gc/cgen.go	/^func bgenNonZero(n, res *Node, wantTrue bool, likely int, to *obj.Prog) {$/;"	f
bgen_float	./cmd/compile/internal/x86/ggen.go	/^func bgen_float(n *gc.Node, wantTrue bool, likely int, to *obj.Prog) {$/;"	f
bgenx	./cmd/compile/internal/gc/cgen.go	/^func bgenx(n, res *Node, wantTrue bool, likely int, to *obj.Prog) {$/;"	f
bggc	./runtime/mgc.go	/^var bggc struct {$/;"	v
bghelper	./cmd/dist/util.go	/^func bghelper() {$/;"	f
bginit	./cmd/dist/util.go	/^func bginit() {$/;"	f
bgrun	./cmd/dist/util.go	/^func bgrun(dir string, cmd ...string) {$/;"	f
bgsweep	./runtime/mgcsweep.go	/^func bgsweep(c chan int) {$/;"	f
bgwait	./cmd/dist/util.go	/^func bgwait() {$/;"	f
bh	./cmd/compile/internal/arm/cgen64.go	/^		var bh gc.Node$/;"	v
biclr	./cmd/compile/internal/gc/reg.go	/^func biclr(a *Bits, n uint) {$/;"	f
big	./encoding/binary/binary_test.go	/^var big = []byte{$/;"	v
big	./reflect/all_test.go	/^type big struct {$/;"	t
big	./runtime/debug/garbage_test.go	/^var big = make([]byte, 1<<20)$/;"	v
big	./runtime/proc_test.go	/^func big(stop chan int) int {$/;"	f
big4	./time/zoneinfo_read.go	/^func (d *data) big4() (n uint32, ok bool) {$/;"	f
bigBuf	./runtime/stack_test.go	/^type bigBuf [4 * 1024]byte$/;"	t
bigEndian	./encoding/binary/binary.go	/^type bigEndian struct{}$/;"	t
bigFromHex	./crypto/rsa/pss_test.go	/^func bigFromHex(hex string) *big.Int {$/;"	f
bigFromHexString	./crypto/x509/x509_test.go	/^func bigFromHexString(s string) *big.Int {$/;"	f
bigFromString	./crypto/tls/handshake_server_test.go	/^func bigFromString(s string) *big.Int {$/;"	f
bigFromString	./crypto/x509/x509_test.go	/^func bigFromString(s string) *big.Int {$/;"	f
bigFtoa	./strconv/ftoa.go	/^func bigFtoa(dst []byte, prec int, fmt byte, neg bool, mant uint64, exp int, flt *floatInfo) []byte {$/;"	f
bigIntStruct	./encoding/asn1/marshal_test.go	/^type bigIntStruct struct {$/;"	t
bigIntTests	./encoding/asn1/asn1_test.go	/^var bigIntTests = []struct {$/;"	v
bigOne	./crypto/rsa/rsa.go	/^var bigOne = big.NewInt(1)$/;"	v
bigOne	./encoding/asn1/asn1.go	/^var bigOne = big.NewInt(1)$/;"	v
bigValue	./runtime/mfinal_test.go	/^type bigValue struct {$/;"	t
bigZero	./crypto/rsa/rsa.go	/^var bigZero = big.NewInt(0)$/;"	v
bigframe	./runtime/proc_test.go	/^func bigframe(stop chan int) int {$/;"	f
bigi	./cmd/compile/internal/x86/gsubr.go	/^	var bigi gc.Node$/;"	v
bigloop	./runtime/asm_386.s	/^bigloop:$/;"	l
bigloop	./runtime/asm_amd64.s	/^bigloop:$/;"	l
bigloop	./runtime/asm_amd64p32.s	/^bigloop:$/;"	l
bignodes	./cmd/compile/internal/amd64/gsubr.go	/^func bignodes() {$/;"	f
bignodes	./cmd/compile/internal/ppc64/gsubr.go	/^func bignodes() {$/;"	f
bignodes	./cmd/compile/internal/x86/gsubr.go	/^func bignodes() {$/;"	f
bigtest	./encoding/ascii85/ascii85_test.go	/^var bigtest = pairs[len(pairs)-1]$/;"	v
bigtest	./encoding/base32/base32_test.go	/^var bigtest = testpair{$/;"	v
bigtest	./encoding/base64/base64_test.go	/^var bigtest = testpair{$/;"	v
binary	./go/types/expr.go	/^func (check *Checker) binary(x *operand, e *ast.BinaryExpr, lhs, rhs ast.Expr, op token.Token) {$/;"	f
binary	./unicode/letter_test.go	/^func binary(ranges []Range16, r uint16) bool {$/;"	f
binaryExpr	./go/printer/nodes.go	/^func (p *printer) binaryExpr(x *ast.BinaryExpr, prec1, cutoff, depth int) {$/;"	f
binaryGCD	./cmd/compile/internal/big/int.go	/^func (z *Int) binaryGCD(a, b *Int) *Int {$/;"	f
binaryGCD	./math/big/int.go	/^func (z *Int) binaryGCD(a, b *Int) *Int {$/;"	f
binaryOpPredicates	./go/types/expr.go	/^var binaryOpPredicates = opPredicates{$/;"	v
bind	./syscall/net_nacl.go	/^func (f *netFile) bind(sa Sockaddr) error {$/;"	f
bind	./syscall/syscall_linux_386.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_darwin_386.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_darwin_amd64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_darwin_arm.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_darwin_arm64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_dragonfly_amd64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_freebsd_386.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_freebsd_amd64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_freebsd_arm.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_linux_amd64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_linux_arm.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_linux_arm64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_linux_ppc64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_linux_ppc64le.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_netbsd_386.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_netbsd_amd64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_netbsd_arm.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_openbsd_386.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_openbsd_amd64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_openbsd_arm.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_plan9_386.go	/^func bind(name string, old string, flag int) (err error) {$/;"	f
bind	./syscall/zsyscall_plan9_amd64.go	/^func bind(name string, old string, flag int) (err error) {$/;"	f
bind	./syscall/zsyscall_solaris_amd64.go	/^func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
bind	./syscall/zsyscall_windows.go	/^func bind(s Handle, name unsafe.Pointer, namelen int32) (err error) {$/;"	f
binomials	./go/types/hilbert_test.go	/^func (g *gen) binomials(n int) {$/;"	f
bins	./cmd/compile/internal/gc/cgen.go	/^func bins(typ *Type, res *Node, a, likely int, to *obj.Prog) {$/;"	f
birthday	./database/sql/sql_test.go	/^	var birthday time.Time$/;"	v
biset	./cmd/compile/internal/gc/reg.go	/^func biset(a *Bits, n uint) {$/;"	f
bit	./cmd/compile/internal/big/nat.go	/^func (x nat) bit(i uint) uint {$/;"	f
bit	./cmd/compile/internal/gc/reg.go	/^		var bit Bits$/;"	v
bit	./cmd/compile/internal/gc/reg.go	/^	var bit Bits$/;"	v
bit	./math/big/nat.go	/^func (x nat) bit(i uint) uint {$/;"	f
bit	./runtime/mbitmap.go	/^		\/\/ Checkmark bit is type bit, bottom bit of every 2-bit entry.$/;"	t
bit	./runtime/mbitmap.go	/^		\/\/ Must clear type bit (checkmark bit) of every word.$/;"	t
bit	./runtime/mbitmap.go	/^		\/\/ The type bit is the lower of every two-bit pair.$/;"	t
bit	./runtime/mbitmap.go	/^\/\/ It is still used in general, except in checkmark the type bit is repurposed$/;"	t
bit	./runtime/mbitmap.go	/^\/\/ as the checkmark bit and then reinitialized (to 1) as the type bit when$/;"	t
bit	./runtime/mbitmap.go	/^\/\/ must be a pointer, so the type bit in the first word is not actually needed.$/;"	t
bit	./runtime/mgcmark.go	/^		\/\/ in the type bit for the one word. The only one-word objects$/;"	t
bit0	./cmd/compile/internal/big/bits_test.go	/^	var bit0, rbit, sbit uint$/;"	v
bit0	./math/big/bits_test.go	/^	var bit0, rbit, sbit uint$/;"	v
bitCount	./image/jpeg/writer.go	/^var bitCount = [256]byte{$/;"	v
bitCounts	./compress/flate/huffman_code.go	/^func (h *huffmanEncoder) bitCounts(list []literalNode, maxBits int32) []int32 {$/;"	f
bitFun	./cmd/compile/internal/big/int_test.go	/^type bitFun func(z, x, y *Int) *Int$/;"	t
bitFun	./math/big/int_test.go	/^type bitFun func(z, x, y *Int) *Int$/;"	t
bitLen	./cmd/compile/internal/big/arith_decl.go	/^func bitLen(x Word) (n int) {$/;"	f
bitLen	./cmd/compile/internal/big/nat.go	/^func (x nat) bitLen() int {$/;"	f
bitLen	./math/big/arith_decl.go	/^func bitLen(x Word) (n int)$/;"	f
bitLen	./math/big/arith_decl_pure.go	/^func bitLen(x Word) (n int) {$/;"	f
bitLen	./math/big/nat.go	/^func (x nat) bitLen() int {$/;"	f
bitLenTests	./cmd/compile/internal/big/int_test.go	/^var bitLenTests = []struct {$/;"	v
bitLenTests	./math/big/int_test.go	/^var bitLenTests = []struct {$/;"	v
bitLen_g	./cmd/compile/internal/big/arith.go	/^func bitLen_g(x Word) (n int) {$/;"	f
bitLen_g	./math/big/arith.go	/^func bitLen_g(x Word) (n int) {$/;"	f
bitLength	./compress/flate/huffman_code.go	/^func (h *huffmanEncoder) bitLength(freq []int32) int64 {$/;"	f
bitReader	./compress/bzip2/bit_reader.go	/^type bitReader struct {$/;"	t
bitState	./regexp/backtrack.go	/^type bitState struct {$/;"	t
bitStringRightAlignTest	./encoding/asn1/asn1_test.go	/^type bitStringRightAlignTest struct {$/;"	t
bitStringRightAlignTests	./encoding/asn1/asn1_test.go	/^var bitStringRightAlignTests = []bitStringRightAlignTest{$/;"	v
bitStringTest	./encoding/asn1/asn1_test.go	/^type bitStringTest struct {$/;"	t
bitStringTestData	./encoding/asn1/asn1_test.go	/^var bitStringTestData = []bitStringTest{$/;"	v
bitTests	./cmd/compile/internal/big/nat_test.go	/^var bitTests = []struct {$/;"	v
bitTests	./math/big/nat_test.go	/^var bitTests = []struct {$/;"	v
bitVector	./reflect/type.go	/^type bitVector struct {$/;"	t
bitbucketVCS	./cmd/go/vcs.go	/^func bitbucketVCS(match map[string]string) error {$/;"	f
bitdepth	./image/png/reader_test.go	/^	var bitdepth int$/;"	v
bitmap	./runtime/mbitmap.go	/^\/\/ using the type bitmap to locate those pointer slots.$/;"	t
bits	./cmd/asm/internal/asm/parse.go	/^	var bits uint16$/;"	v
bits	./cmd/internal/gcprog/gcprog.go	/^	var bits uint8$/;"	v
bits	./compress/flate/gen.go	/^	var bits [288]int$/;"	v
bits	./compress/flate/huffman_code.go	/^		var bits uint16$/;"	v
bits	./image/jpeg/reader.go	/^type bits struct {$/;"	t
bits	./os/types.go	/^	\/\/ Mask for the type bits. For regular files, none will be set.$/;"	t
bits	./os/types.go	/^\/\/ That is, it tests that no mode type bits are set.$/;"	t
bits	./runtime/hash_test.go	/^func (k *BytesKey) bits() int {$/;"	f
bits	./runtime/hash_test.go	/^func (k *EfaceKey) bits() int {$/;"	f
bits	./runtime/hash_test.go	/^func (k *IfaceKey) bits() int {$/;"	f
bits	./runtime/hash_test.go	/^func (k *Int32Key) bits() int {$/;"	f
bits	./runtime/hash_test.go	/^func (k *Int64Key) bits() int {$/;"	f
bits	./runtime/mbitmap.go	/^		\/\/ are shared only with the type bits of another object,$/;"	t
bits	./runtime/mbitmap.go	/^	var bits uint32$/;"	v
bits	./runtime/mbitmap.go	/^	var bits uintptr$/;"	v
bits	./runtime/mbitmap.go	/^func (h heapBits) bits() uint32 {$/;"	f
bits	./strconv/ftoa.go	/^	var bits uint64$/;"	v
bitsList	./cmd/compile/internal/big/float_test.go	/^var bitsList = [...]Bits{$/;"	v
bitsList	./math/big/float_test.go	/^var bitsList = [...]Bits{$/;"	v
bitsPerPixel	./image/png/reader.go	/^	var bitsPerPixel int = 0$/;"	v
bitset	./cmd/yacc/yacc.go	/^func bitset(set Lkset, bit int) int { return set[bit>>5] & (1 << uint(bit&31)) }$/;"	f
bitsetTests	./cmd/compile/internal/big/int_test.go	/^var bitsetTests = []struct {$/;"	v
bitsetTests	./math/big/int_test.go	/^var bitsetTests = []struct {$/;"	v
bitvector	./runtime/stack1.go	/^type bitvector struct {$/;"	t
bitwiseTests	./cmd/compile/internal/big/int_test.go	/^var bitwiseTests = []struct {$/;"	v
bitwiseTests	./math/big/int_test.go	/^var bitwiseTests = []struct {$/;"	v
bl	./cmd/compile/internal/arm/cgen64.go	/^		var bl gc.Node$/;"	v
blackHolePool	./io/ioutil/ioutil.go	/^var blackHolePool = sync.Pool{$/;"	v
blankImports	./go/doc/example.go	/^	var blankImports []ast.Spec             \/\/ _ imports$/;"	v
blk	./cmd/link/internal/ld/data.go	/^func blk(start *LSym, addr int64, size int64) {$/;"	f
bloc	./runtime/mem_plan9.go	/^var bloc uintptr$/;"	v
block	./cmd/compile/internal/gc/builtin/runtime.go	/^func block()$/;"	f
block	./cmd/compile/internal/gc/gen.go	/^		var block *Sym$/;"	v
block	./cmd/compile/internal/gc/go.go	/^var block int32 \/\/ current block number$/;"	v
block	./cmd/cover/testdata/main.go	/^type block struct {$/;"	t
block	./cmd/link/internal/ld/dwarf.go	/^	var block [20]byte$/;"	v
block	./crypto/md5/md5block_decl.go	/^func block(dig *digest, p []byte)$/;"	f
block	./crypto/md5/md5block_generic.go	/^var block = blockGeneric$/;"	v
block	./crypto/sha1/sha1block_decl.go	/^func block(dig *digest, p []byte)$/;"	f
block	./crypto/sha1/sha1block_generic.go	/^var block = blockGeneric$/;"	v
block	./crypto/sha256/sha256block.go	/^func block(dig *digest, p []byte) {$/;"	f
block	./crypto/sha256/sha256block_decl.go	/^func block(dig *digest, p []byte)$/;"	f
block	./crypto/sha512/sha512block.go	/^func block(dig *digest, p []byte) {$/;"	f
block	./crypto/sha512/sha512block_decl.go	/^func block(dig *digest, p []byte)$/;"	f
block	./crypto/tls/conn.go	/^type block struct {$/;"	t
block	./crypto/x509/cert_pool.go	/^		var block *pem.Block$/;"	v
block	./crypto/x509/root_darwin_arm_gen.go	/^		var block *pem.Block$/;"	v
block	./go/doc/comment.go	/^type block struct {$/;"	t
block	./go/printer/nodes.go	/^func (p *printer) block(b *ast.BlockStmt, nindent int) {$/;"	f
block	./go/types/labels.go	/^type block struct {$/;"	t
block	./image/jpeg/idct.go	/^type block [blockSize]int32$/;"	t
block	./runtime/select.go	/^func block() {$/;"	f
block1	./cmd/cover/cover.go	/^type block1 struct {$/;"	t
blockBranches	./go/types/labels.go	/^func (check *Checker) blockBranches(all *Scope, parent *block, lstmt *ast.LabeledStmt, list []ast.Stmt) []*ast.BranchStmt {$/;"	f
blockChanClose	./runtime/pprof/pprof_test.go	/^func blockChanClose() {$/;"	f
blockChanRecv	./runtime/pprof/pprof_test.go	/^func blockChanRecv() {$/;"	f
blockChanSend	./runtime/pprof/pprof_test.go	/^func blockChanSend() {$/;"	f
blockCommentEnd	./html/template/transition.go	/^var blockCommentEnd = []byte("*\/")$/;"	v
blockCond	./runtime/pprof/pprof_test.go	/^func blockCond() {$/;"	f
blockGeneric	./crypto/md5/gen.go	/^func blockGeneric(dig *digest, p []byte) {$/;"	f
blockGeneric	./crypto/md5/md5block.go	/^func blockGeneric(dig *digest, p []byte) {$/;"	f
blockGeneric	./crypto/sha1/sha1block.go	/^func blockGeneric(dig *digest, p []byte) {$/;"	f
blockLen	./image/gif/reader.go	/^		var blockLen uint8$/;"	v
blockMutex	./runtime/pprof/pprof_test.go	/^func blockMutex() {$/;"	f
blockProfile	./runtime/mprof.go	/^\/\/ A blockRecord is the bucket data for a bucket of type blockProfile,$/;"	t
blockProfile	./runtime/pprof/pprof.go	/^var blockProfile = &Profile{$/;"	v
blockReader	./image/gif/reader.go	/^type blockReader struct {$/;"	t
blockRecord	./runtime/mprof.go	/^type blockRecord struct {$/;"	t
blockSelectRecvAsync	./runtime/pprof/pprof_test.go	/^func blockSelectRecvAsync() {$/;"	f
blockSelectSendSync	./runtime/pprof/pprof_test.go	/^func blockSelectSendSync() {$/;"	f
blockSlice	./cmd/cover/cover.go	/^type blockSlice []block1$/;"	t
blockWriter	./image/gif/writer.go	/^type blockWriter struct {$/;"	t
blockany	./cmd/compile/internal/gc/plive.go	/^func blockany(bb *BasicBlock, f func(*obj.Prog) bool) bool {$/;"	f
blockcopy	./cmd/compile/internal/amd64/cgen.go	/^func blockcopy(n, ns *gc.Node, osrc, odst, w int64) {$/;"	f
blockcopy	./cmd/compile/internal/arm/cgen.go	/^func blockcopy(n, res *gc.Node, osrc, odst, w int64) {$/;"	f
blockcopy	./cmd/compile/internal/arm64/cgen.go	/^func blockcopy(n, res *gc.Node, osrc, odst, w int64) {$/;"	f
blockcopy	./cmd/compile/internal/ppc64/cgen.go	/^func blockcopy(n, res *gc.Node, osrc, odst, w int64) {$/;"	f
blockcopy	./cmd/compile/internal/x86/cgen.go	/^func blockcopy(n, res *gc.Node, osrc, odst, w int64) {$/;"	f
blockevent	./runtime/mprof.go	/^func blockevent(cycles int64, skip int) {$/;"	f
blockgen	./cmd/compile/internal/gc/go.go	/^var blockgen int32 \/\/ max block number$/;"	v
blockingSource	./crypto/tls/handshake_client_test.go	/^type blockingSource chan bool$/;"	t
blockingTests	./encoding/json/stream_test.go	/^var blockingTests = []string{$/;"	v
blockprofilerate	./runtime/mprof.go	/^var blockprofilerate uint64 \/\/ in CPU ticks$/;"	v
blockrpocmp	./cmd/compile/internal/gc/plive.go	/^type blockrpocmp []*BasicBlock$/;"	t
blocks	./go/doc/comment.go	/^func blocks(text string) []block {$/;"	f
blocksByStart	./cmd/cover/profile.go	/^type blocksByStart []ProfileBlock$/;"	t
blocksTests	./go/doc/comment_test.go	/^var blocksTests = []struct {$/;"	v
blsh	./cmd/compile/internal/gc/reg.go	/^func blsh(n uint) Bits {$/;"	f
bmCount	./bytes/bytes_test.go	/^func bmCount(b *testing.B, count func([]byte, []byte) int, n int) {$/;"	f
bmCountEasy	./bytes/bytes_test.go	/^func bmCountEasy(b *testing.B, count func([]byte, []byte) int, n int) {$/;"	f
bmEqual	./bytes/bytes_test.go	/^func bmEqual(b *testing.B, equal func([]byte, []byte) bool, n int) {$/;"	f
bmGoMemclr	./runtime/memmove_test.go	/^func bmGoMemclr(b *testing.B, n int) {$/;"	f
bmIndex	./bytes/bytes_test.go	/^func bmIndex(b *testing.B, index func([]byte, []byte) int, n int) {$/;"	f
bmIndexByte	./bytes/bytes_test.go	/^func bmIndexByte(b *testing.B, index func([]byte, byte) int, n int) {$/;"	f
bmIndexEasy	./bytes/bytes_test.go	/^func bmIndexEasy(b *testing.B, index func([]byte, []byte) int, n int) {$/;"	f
bmMemclr	./runtime/memmove_test.go	/^func bmMemclr(b *testing.B, n int) {$/;"	f
bmMemmove	./runtime/memmove_test.go	/^func bmMemmove(b *testing.B, n int) {$/;"	f
bmUint32Div	./runtime/vlop_arm_test.go	/^func bmUint32Div(divisor uint32, b *testing.B) {$/;"	f
bmUint32Mod	./runtime/vlop_arm_test.go	/^func bmUint32Mod(divisor uint32, b *testing.B) {$/;"	f
bmap	./runtime/hashmap.go	/^type bmap struct {$/;"	t
bmbuf	./bytes/bytes_test.go	/^var bmbuf []byte$/;"	v
bn	./cmd/compile/internal/gc/reg.go	/^	var bn int$/;"	v
bnum	./cmd/compile/internal/gc/reg.go	/^func bnum(a Bits) int {$/;"	f
body	./cmd/compile/internal/gc/closure.go	/^		var body *NodeList$/;"	v
body	./cmd/compile/internal/gc/closure.go	/^	var body *NodeList$/;"	v
body	./cmd/compile/internal/gc/range.go	/^	var body *NodeList$/;"	v
body	./cmd/vet/deadcode.go	/^	var body *ast.BlockStmt$/;"	v
body	./go/parser/parser.go	/^	var body *ast.BlockStmt$/;"	v
body	./go/printer/testdata/parser.go	/^	var body *ast.BlockStmt$/;"	v
body	./net/http/fcgi/child.go	/^			var body io.ReadCloser$/;"	v
body	./net/http/transfer.go	/^type body struct {$/;"	t
body	./net/http/transport_test.go	/^		var body []byte$/;"	v
bodyAllowed	./net/http/server.go	/^func (w *response) bodyAllowed() bool {$/;"	f
bodyAllowedForStatus	./net/http/transfer.go	/^func bodyAllowedForStatus(status int) bool {$/;"	f
bodyEOFSignal	./net/http/transport.go	/^type bodyEOFSignal struct {$/;"	t
bodyLocked	./net/http/transfer.go	/^type bodyLocked struct {$/;"	t
bodySize	./go/printer/nodes.go	/^func (p *printer) bodySize(b *ast.BlockStmt, maxSize int) int {$/;"	f
boff	./cmd/compile/internal/arm64/ggen.go	/^	var boff uint64$/;"	v
boff	./cmd/compile/internal/ppc64/ggen.go	/^	var boff uint64$/;"	v
bool	./builtin/builtin.go	/^type bool bool$/;"	t
bool	./database/sql/convert_test.go	/^	{s: "yup", d: &scanbool, wanterr: `sql\/driver: couldn't convert "yup" into type bool`},$/;"	t
bool	./database/sql/convert_test.go	/^	{s: 2, d: &scanbool, wanterr: `sql\/driver: couldn't convert 2 into type bool`},$/;"	t
bool	./database/sql/driver/types.go	/^			return nil, fmt.Errorf("sql\/driver: couldn't convert %q into type bool", s)$/;"	t
bool	./database/sql/driver/types.go	/^		return nil, fmt.Errorf("sql\/driver: couldn't convert %d into type bool", iv)$/;"	t
bool	./database/sql/driver/types.go	/^		return nil, fmt.Errorf("sql\/driver: couldn't convert %d into type bool", uv)$/;"	t
bool	./database/sql/driver/types.go	/^	return nil, fmt.Errorf("sql\/driver: couldn't convert %v (%T) into type bool", src, src)$/;"	t
bool	./database/sql/driver/types_test.go	/^	{c: Bool, in: "foo", err: "sql\/driver: couldn't convert \\"foo\\" into type bool"},$/;"	t
bool	./database/sql/driver/types_test.go	/^	{c: Bool, in: 2, err: "sql\/driver: couldn't convert 2 into type bool"},$/;"	t
bool	./debug/dwarf/entry.go	/^	\/\/ ClassFlag represents values of type bool.$/;"	t
bool	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind bool but not type bool. TODO: We can handle this unsafely.$/;"	t
bool	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind bool but not type bool. TODO: We can handle this unsafely.$/;"	t
boolEncoder	./encoding/json/encode.go	/^func boolEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
boolError	./fmt/scan.go	/^var boolError = errors.New("syntax error scanning boolean")$/;"	v
boolFlag	./flag/flag.go	/^type boolFlag interface {$/;"	t
boolFlagString	./cmd/pprof/internal/driver/driver.go	/^func boolFlagString(label string) string {$/;"	f
boolFlagVar	./flag/flag_test.go	/^type boolFlagVar struct {$/;"	t
boolOp	./cmd/vet/bool.go	/^type boolOp struct {$/;"	t
boolResult	./encoding/gob/codec_test.go	/^var boolResult = []byte{0x07, 0x01}$/;"	v
boolString	./flag/flag_test.go	/^func boolString(s string) string {$/;"	f
boolString	./strconv/atob_test.go	/^var boolString = map[bool]string{$/;"	v
boolTest	./encoding/asn1/asn1_test.go	/^type boolTest struct {$/;"	t
boolTestData	./encoding/asn1/asn1_test.go	/^var boolTestData = []boolTest{$/;"	v
boolType	./database/sql/driver/types.go	/^type boolType struct{}$/;"	t
boolValue	./flag/flag.go	/^type boolValue bool$/;"	t
booleanflag	./net/http/triv.go	/^var booleanflag = flag.Bool("boolean", true, "another flag for testing")$/;"	v
boolint	./net/sockopt_posix.go	/^func boolint(b bool) int {$/;"	f
bootstrapType	./encoding/gob/type.go	/^func bootstrapType(name string, e interface{}, expect typeId) typeId {$/;"	f
bootstrapfail	./make.bat	/^:bootstrapfail$/;"	l
both	./go/types/resolver_test.go	/^	var both []string$/;"	v
bothInf	./math/dim_amd64.s	/^bothInf: \/\/ Dim(-Inf, -Inf) or Dim(+Inf, +Inf)$/;"	l
bottomUpVisitor	./cmd/compile/internal/gc/esc.go	/^type bottomUpVisitor struct {$/;"	t
bound	./cmd/compile/internal/gc/cgen.go	/^	var bound int64 = -1$/;"	v
boundariesByPos	./cmd/cover/profile.go	/^type boundariesByPos []Boundary$/;"	t
boundary	./regexp/syntax/prog.go	/^	var boundary byte$/;"	v
bounded	./cmd/compile/internal/gc/walk.go	/^func bounded(n *Node, max int64) bool {$/;"	f
bout	./cmd/cgo/util.go	/^	var bout, berr bytes.Buffer$/;"	v
bout	./cmd/compile/internal/gc/go.go	/^var bout *obj.Biobuf$/;"	v
bout	./net/http/readrequest_test.go	/^		var bout bytes.Buffer$/;"	v
bout	./net/http/response_test.go	/^		var bout bytes.Buffer$/;"	v
bp	./cmd/internal/obj/x86/asm6.go	/^	var bp []byte$/;"	v
bp	./runtime/mprof.go	/^func (b *bucket) bp() *blockRecord {$/;"	f
bpduff1	./cmd/internal/obj/x86/asm6.go	/^var bpduff1 = []byte{$/;"	v
bpduff2	./cmd/internal/obj/x86/asm6.go	/^var bpduff2 = []byte{$/;"	v
bpsize	./cmd/internal/obj/x86/obj6.go	/^	var bpsize int$/;"	v
br	./cmd/compile/internal/arm/cgen64.go	/^	var br *obj.Prog$/;"	v
br	./cmd/compile/internal/gc/walk.go	/^	var br *Node$/;"	v
br	./cmd/compile/internal/x86/cgen64.go	/^	var br *obj.Prog$/;"	v
br	./net/http/fcgi/child.go	/^		var br beginRequest$/;"	v
braced_keyval_list	./cmd/compile/internal/gc/go.y	/^braced_keyval_list:$/;"	l
braddoff	./cmd/link/internal/arm/asm.go	/^func braddoff(a int32, b int32) int32 {$/;"	f
branch	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) branch(jmp, target *obj.Prog) {$/;"	f
braw	./net/http/requestwrite_test.go	/^		var braw bytes.Buffer$/;"	v
braw	./net/http/responsewrite_test.go	/^		var braw bytes.Buffer$/;"	v
brdist	./cmd/internal/obj/arm64/asm7.go	/^func brdist(ctxt *obj.Link, p *obj.Prog, preshift int, flen int, shift int) int64 {$/;"	f
breaker	./encoding/pem/pem.go	/^	var breaker lineBreaker$/;"	v
breaker	./encoding/pem/pem_test.go	/^		var breaker lineBreaker$/;"	v
breakpc	./cmd/compile/internal/gc/go.go	/^var breakpc *obj.Prog$/;"	v
breakpoint	./runtime/stubs.go	/^func breakpoint()$/;"	f
brk_	./runtime/os_plan9.go	/^func brk_(addr unsafe.Pointer) int32$/;"	f
brloop	./cmd/internal/obj/pass.go	/^func brloop(ctxt *Link, p *Prog) *Prog {$/;"	f
browsers	./cmd/pprof/internal/commands/commands.go	/^func browsers() []string {$/;"	f
bs	./encoding/binary/binary.go	/^		var bs []byte$/;"	v
bs	./testing/benchmark.go	/^	var bs []InternalBenchmark$/;"	v
bsdthread_create	./runtime/os_darwin.go	/^func bsdthread_create(stk, arg unsafe.Pointer, fn uintptr) int32$/;"	f
bsdthread_register	./runtime/os_darwin.go	/^func bsdthread_register() int32$/;"	f
bsearch16	./strconv/makeisprint.go	/^func bsearch16(a []uint16, x uint16) int {$/;"	f
bsearch16	./strconv/quote.go	/^func bsearch16(a []uint16, x uint16) int {$/;"	f
bsearch32	./strconv/makeisprint.go	/^func bsearch32(a []uint32, x uint32) int {$/;"	f
bsearch32	./strconv/quote.go	/^func bsearch32(a []uint32, x uint32) int {$/;"	f
bslice	./fmt/fmt_test.go	/^var bslice = barray[:]$/;"	v
bss	./cmd/link/internal/ld/data.go	/^	var bss *Section$/;"	v
bsssect	./cmd/link/internal/ld/pe.go	/^var bsssect int$/;"	v
bstdout	./cmd/compile/internal/gc/go.go	/^var bstdout obj.Biobuf$/;"	v
btest	./cmd/compile/internal/gc/reg.go	/^func btest(a *Bits, n uint) bool {$/;"	f
btoi64Test	./strconv/atoi_test.go	/^type btoi64Test struct {$/;"	t
btoi64tests	./strconv/atoi_test.go	/^var btoi64tests = []btoi64Test{$/;"	v
btoui64tests	./strconv/atoi_test.go	/^var btoui64tests = []atoui64Test{$/;"	v
bucket	./cmd/link/internal/ld/pcln.go	/^				Diag("too many functions in a findfunc bucket! %d\/%d %d %d", i, nbuckets, j, idx-base)$/;"	f
bucket	./runtime/mprof.go	/^type bucket struct {$/;"	t
bucketOf	./reflect/type.go	/^func bucketOf(ktyp, etyp *rtype) *rtype {$/;"	f
bucketType	./runtime/mprof.go	/^type bucketType int$/;"	t
buf	./archive/tar/common.go	/^	var buf bytes.Buffer$/;"	v
buf	./archive/tar/writer.go	/^	var buf bytes.Buffer$/;"	v
buf	./archive/tar/writer_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./archive/zip/reader.go	/^	var buf []byte$/;"	v
buf	./archive/zip/reader.go	/^	var buf [dataDescriptorLen]byte$/;"	v
buf	./archive/zip/reader.go	/^	var buf [directoryHeaderLen]byte$/;"	v
buf	./archive/zip/reader.go	/^	var buf [fileHeaderLen]byte$/;"	v
buf	./archive/zip/writer.go	/^			var buf [28]byte \/\/ 2x uint16 + 3x uint64$/;"	v
buf	./archive/zip/writer.go	/^		var buf [directory64EndLen + directory64LocLen]byte$/;"	v
buf	./archive/zip/writer.go	/^		var buf [directoryHeaderLen]byte$/;"	v
buf	./archive/zip/writer.go	/^	var buf []byte$/;"	v
buf	./archive/zip/writer.go	/^	var buf [directoryEndLen]byte$/;"	v
buf	./archive/zip/writer.go	/^	var buf [fileHeaderLen]byte$/;"	v
buf	./archive/zip/writer_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./archive/zip/zip_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./bufio/bufio_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./bytes/buffer.go	/^		var buf []byte$/;"	v
buf	./bytes/buffer_test.go	/^	var buf Buffer$/;"	v
buf	./bytes/bytes_test.go	/^	var buf [4]byte$/;"	v
buf	./bytes/reader_test.go	/^			var buf [1]byte$/;"	v
buf	./cmd/api/goapi.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/asm/internal/lex/lex_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/cgo/gcc.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/cgo/godefs.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/cgo/out.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/compile/internal/big/decimal.go	/^	var buf []byte$/;"	v
buf	./cmd/compile/internal/big/ftoa.go	/^	var buf []byte$/;"	v
buf	./cmd/compile/internal/big/intconv_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/compile/internal/big/ratconv_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/compile/internal/gc/fmt.go	/^		var buf bytes.Buffer$/;"	v
buf	./cmd/compile/internal/gc/fmt.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/compile/internal/gc/lex.go	/^	var buf [ArhdrSize]byte$/;"	v
buf	./cmd/compile/internal/gc/lex.go	/^	var buf [utf8.UTFMax]byte$/;"	v
buf	./cmd/compile/internal/gc/reg.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/compile/internal/gc/subr.go	/^			var buf bytes.Buffer$/;"	v
buf	./cmd/compile/internal/gc/subr.go	/^	var buf string$/;"	v
buf	./cmd/compile/internal/gc/walk.go	/^	var buf string$/;"	v
buf	./cmd/cover/html.go	/^		var buf bytes.Buffer$/;"	v
buf	./cmd/cover/html.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/fix/main.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/go/generate.go	/^		var buf []byte$/;"	v
buf	./cmd/go/main.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/go/pkg.go	/^		var buf bytes.Buffer$/;"	v
buf	./cmd/go/test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/go/vcs.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/gofmt/gofmt_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/internal/obj/sym.go	/^	var buf string$/;"	v
buf	./cmd/internal/obj/util.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/internal/rsc.io/arm/armasm/gnu.go	/^		var buf bytes.Buffer$/;"	v
buf	./cmd/internal/rsc.io/arm/armasm/gnu.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/internal/rsc.io/arm/armasm/inst.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/internal/rsc.io/arm/armasm/plan9x.go	/^		var buf bytes.Buffer$/;"	v
buf	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/link/internal/ld/dwarf.go	/^	var buf string$/;"	v
buf	./cmd/link/internal/ld/go.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/link/internal/ld/lib.go	/^			var buf bytes.Buffer$/;"	v
buf	./cmd/link/internal/ld/objfile.go	/^	var buf [8]uint8$/;"	v
buf	./cmd/link/internal/ld/sym.go	/^	var buf string$/;"	v
buf	./cmd/link/internal/ld/util.go	/^			var buf []byte$/;"	v
buf	./cmd/link/internal/ld/util.go	/^		var buf [4]byte$/;"	v
buf	./cmd/pack/pack_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/pprof/internal/commands/commands.go	/^		var buf bytes.Buffer$/;"	v
buf	./cmd/pprof/internal/profile/profile_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/vet/copylock.go	/^	var buf bytes.Buffer$/;"	v
buf	./cmd/vet/testdata/unused.go	/^	var buf bytes.Buffer$/;"	v
buf	./compress/flate/deflate_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./compress/flate/gen.go	/^	var buf bytes.Buffer$/;"	v
buf	./compress/gzip/gunzip_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./compress/gzip/gzip_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./compress/zlib/writer_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./crypto/elliptic/p224.go	/^	var buf [28]byte$/;"	v
buf	./crypto/md5/gen.go	/^	var buf bytes.Buffer$/;"	v
buf	./crypto/md5/md5_test.go	/^var buf = make([]byte, 8192+1)$/;"	v
buf	./crypto/md5/md5block_arm.s	/^#define buf	buffer-(8+4*16)(SP)	\/\/16 words temporary buffer$/;"	d
buf	./crypto/rand/rand_linux.go	/^	var buf [1]byte$/;"	v
buf	./crypto/sha1/sha1_test.go	/^var buf = make([]byte, 8192)$/;"	v
buf	./crypto/sha256/sha256_test.go	/^var buf = make([]byte, 8192)$/;"	v
buf	./crypto/sha512/sha512_test.go	/^var buf = make([]byte, 8192)$/;"	v
buf	./crypto/tls/handshake_server_test.go	/^	var buf []byte$/;"	v
buf	./database/sql/sql.go	/^	var buf [2 << 10]byte$/;"	v
buf	./debug/dwarf/buf.go	/^type buf struct {$/;"	t
buf	./debug/macho/fat.go	/^		var buf [4]byte$/;"	v
buf	./encoding/binary/binary_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/gob/encoder_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/gob/timing_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./encoding/gob/timing_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/hex/hex.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/json/bench_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/json/encode.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/json/scanner_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./encoding/json/scanner_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/json/stream_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./encoding/pem/pem.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/pem/pem_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./encoding/xml/marshal_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./encoding/xml/marshal_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./encoding/xml/read.go	/^	var buf []byte$/;"	v
buf	./expvar/expvar_test.go	/^			var buf [1]byte$/;"	v
buf	./flag/flag_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./fmt/fmt_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./fmt/fmt_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./fmt/format.go	/^	var buf []byte = f.intbuf[0:]$/;"	v
buf	./fmt/format.go	/^	var buf []byte$/;"	v
buf	./fmt/scan_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/ast/commentmap.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/ast/commentmap_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/ast/example_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/ast/filter_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/ast/print_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/ast/scope.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/doc/comment_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./go/doc/comment_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/doc/doc_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./go/doc/doc_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/doc/example_test.go	/^				var buf bytes.Buffer$/;"	v
buf	./go/doc/headscan.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/format/format.go	/^		var buf bytes.Buffer$/;"	v
buf	./go/format/format_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/internal/gccgoimporter/parser.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/internal/gccgoimporter/parser_test.go	/^			var buf bytes.Buffer$/;"	v
buf	./go/parser/interface.go	/^			var buf bytes.Buffer$/;"	v
buf	./go/parser/parser_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/printer/example_test.go	/^	\/\/ var buf bytes.Buffer$/;"	v
buf	./go/printer/example_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/printer/nodes.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/printer/performance_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/printer/printer_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./go/printer/printer_test.go	/^	var buf bytes.Buffer \/\/ holding long error message$/;"	v
buf	./go/printer/printer_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/token/serialize_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/api.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/api_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/example_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./go/types/example_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/exprstring.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/methodset.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/object.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/operand.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/scope.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/selection.go	/^	var buf bytes.Buffer$/;"	v
buf	./go/types/typestring.go	/^	var buf bytes.Buffer$/;"	v
buf	./html/template/escape_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./html/template/js.go	/^	var buf bytes.Buffer$/;"	v
buf	./html/template/js_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./html/template/transition_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./image/color/palette/gen.go	/^	var buf bytes.Buffer$/;"	v
buf	./image/gif/writer_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./image/gif/writer_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./image/jpeg/writer_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./image/jpeg/writer_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./index/suffixarray/suffixarray_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./internal/format/format.go	/^		var buf bytes.Buffer$/;"	v
buf	./internal/format/format.go	/^	var buf bytes.Buffer$/;"	v
buf	./internal/trace/parser.go	/^		var buf [1]byte$/;"	v
buf	./internal/trace/parser.go	/^	var buf [16]byte$/;"	v
buf	./io/multi_test.go	/^	var buf []byte$/;"	v
buf	./io/multi_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./io/pipe_test.go	/^		var buf = make([]byte, 64)$/;"	v
buf	./io/pipe_test.go	/^	var buf = make([]byte, 64)$/;"	v
buf	./log/example_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./log/log_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./log/syslog/syslog_test.go	/^	var buf [4096]byte$/;"	v
buf	./math/big/decimal.go	/^	var buf []byte$/;"	v
buf	./math/big/ftoa.go	/^	var buf []byte$/;"	v
buf	./math/big/intconv_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./math/big/ratconv_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./mime/mediatype.go	/^	var buf bytes.Buffer$/;"	v
buf	./mime/multipart/multipart_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./mime/multipart/multipart_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./mime/multipart/writer.go	/^	var buf [30]byte$/;"	v
buf	./mime/quotedprintable/reader_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./mime/quotedprintable/reader_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./mime/type.go	/^	var buf [10]byte$/;"	v
buf	./net/fd_windows.go	/^		var buf [32]syscall.WSAProtocolInfo$/;"	v
buf	./net/file_plan9.go	/^		var buf [16]byte$/;"	v
buf	./net/http/cgi/host_test.go	/^	var buf [5000]byte$/;"	v
buf	./net/http/client_test.go	/^	var buf [10]byte$/;"	v
buf	./net/http/fs.go	/^			var buf [sniffLen]byte$/;"	v
buf	./net/http/fs_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/http/header_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/http/header_test.go	/^var buf bytes.Buffer$/;"	v
buf	./net/http/httputil/dump.go	/^	var buf bytes.Buffer \/\/ records the output$/;"	v
buf	./net/http/httputil/dump.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/http/internal/chunked_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/http/npn_test.go	/^			var buf bytes.Buffer$/;"	v
buf	./net/http/pprof/pprof.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/http/response.go	/^		var buf [1]byte$/;"	v
buf	./net/http/response_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./net/http/response_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/http/serve_test.go	/^		var buf [1]byte$/;"	v
buf	./net/http/serve_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/http/transfer.go	/^				var buf [1]byte$/;"	v
buf	./net/http/transport_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./net/http/transport_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/ipsock_plan9.go	/^	var buf [128]byte$/;"	v
buf	./net/ipsock_plan9.go	/^	var buf [16]byte$/;"	v
buf	./net/lookup_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/mail/message.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/parse.go	/^	var buf [20]byte \/\/ big enough for 64bit value base 10$/;"	v
buf	./net/tcp_test.go	/^				var buf [msgLen]byte$/;"	v
buf	./net/tcp_test.go	/^			var buf [1]byte$/;"	v
buf	./net/tcp_test.go	/^			var buf [msgLen]byte$/;"	v
buf	./net/tcp_test.go	/^	var buf [128]byte$/;"	v
buf	./net/textproto/reader_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/textproto/writer_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./net/url/url.go	/^	var buf bytes.Buffer$/;"	v
buf	./os/file_plan9.go	/^	var buf [syscall.STATFIXLEN]byte$/;"	v
buf	./os/os_test.go	/^	var buf [100]byte$/;"	v
buf	./os/signal/signal_plan9_test.go	/^	var buf [32]byte \/\/ big enough for int64$/;"	v
buf	./os/str.go	/^	var buf [20]byte \/\/ big enough for 64bit value base 10$/;"	v
buf	./os/sys_linux.go	/^	var buf [512]byte \/\/ Enough for a DNS name.$/;"	v
buf	./os/sys_plan9.go	/^	var buf [128]byte$/;"	v
buf	./os/types.go	/^	var buf [32]byte \/\/ Mode is uint32.$/;"	v
buf	./reflect/all_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./regexp/onepass.go	/^	var buf bytes.Buffer$/;"	v
buf	./regexp/regexp.go	/^	var buf []byte$/;"	v
buf	./regexp/syntax/prog.go	/^	var buf bytes.Buffer$/;"	v
buf	./runtime/crash_test.go	/^	var buf [64<<10]byte$/;"	v
buf	./runtime/gengoos.go	/^		var buf bytes.Buffer$/;"	v
buf	./runtime/heapdump.go	/^			var buf [64]byte$/;"	v
buf	./runtime/heapdump.go	/^	var buf [10]byte$/;"	v
buf	./runtime/heapdump.go	/^var buf [bufSize]byte$/;"	v
buf	./runtime/mkduff.go	/^	var buf bytes.Buffer$/;"	v
buf	./runtime/os1_linux.go	/^	var buf [maxCPUs \/ (ptrSize * 8)]uintptr$/;"	v
buf	./runtime/os1_plan9.go	/^	var buf [128]byte$/;"	v
buf	./runtime/os1_plan9.go	/^	var buf [2048]byte$/;"	v
buf	./runtime/os1_plan9.go	/^	var buf [_ERRMAX]byte$/;"	v
buf	./runtime/os1_windows.go	/^	var buf [50]byte \/\/ large enough for longest string$/;"	v
buf	./runtime/pprof/mprof_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./runtime/pprof/pprof.go	/^	var buf bytes.Buffer$/;"	v
buf	./runtime/pprof/pprof_test.go	/^				var buf bytes.Buffer$/;"	v
buf	./runtime/print1.go	/^	var buf [100]byte$/;"	v
buf	./runtime/print1.go	/^	var buf [n + 7]byte$/;"	v
buf	./runtime/proc_test.go	/^			var buf [1]byte$/;"	v
buf	./runtime/race/sched_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./runtime/runtime_test.go	/^	var buf [32]byte$/;"	v
buf	./runtime/string1.go	/^	var buf [8]byte$/;"	v
buf	./runtime/syscall_windows_test.go	/^		var buf [256]byte$/;"	v
buf	./runtime/syscall_windows_test.go	/^	var buf [50]byte$/;"	v
buf	./runtime/trace/trace_test.go	/^			var buf [1]byte$/;"	v
buf	./runtime/trace/trace_test.go	/^		var buf [1]byte$/;"	v
buf	./runtime/wincallback.go	/^	var buf bytes.Buffer$/;"	v
buf	./strconv/decimal.go	/^	var buf [24]byte$/;"	v
buf	./strconv/extfloat.go	/^		var buf [24]byte$/;"	v
buf	./strconv/extfloat.go	/^	var buf [32]byte$/;"	v
buf	./strconv/ftoa.go	/^			var buf [24]byte$/;"	v
buf	./strconv/ftoa.go	/^		var buf [32]byte$/;"	v
buf	./strconv/makeisprint.go	/^	var buf bytes.Buffer$/;"	v
buf	./strings/reader_test.go	/^			var buf [1]byte$/;"	v
buf	./strings/replace.go	/^	var buf []byte \/\/ lazily allocated$/;"	v
buf	./strings/replace.go	/^	var buf []byte$/;"	v
buf	./strings/replace_test.go	/^		var buf bytes.Buffer$/;"	v
buf	./syscall/exec_plan9.go	/^	var buf [STATMAX]byte$/;"	v
buf	./syscall/mksyscall_windows.go	/^	var buf bytes.Buffer$/;"	v
buf	./syscall/str.go	/^	var buf [32]byte \/\/ big enough for int64$/;"	v
buf	./syscall/syscall_darwin.go	/^	var buf [CTL_MAXNAME + 2]_C_int$/;"	v
buf	./syscall/syscall_dragonfly.go	/^	var buf [CTL_MAXNAME + 2]_C_int$/;"	v
buf	./syscall/syscall_freebsd.go	/^	var buf [CTL_MAXNAME + 2]_C_int$/;"	v
buf	./syscall/syscall_linux.go	/^		var buf [sizeofPtr]byte$/;"	v
buf	./syscall/syscall_linux.go	/^	var buf [PathMax]byte$/;"	v
buf	./syscall/syscall_linux.go	/^	var buf [sizeofPtr]byte$/;"	v
buf	./syscall/syscall_plan9.go	/^	var buf [512]byte$/;"	v
buf	./syscall/syscall_plan9.go	/^	var buf [ERRMAX]byte$/;"	v
buf	./testing/benchmark_test.go	/^			var buf bytes.Buffer$/;"	v
buf	./testing/example.go	/^		var buf bytes.Buffer$/;"	v
buf	./testing/testing.go	/^\/\/             var buf bytes.Buffer$/;"	v
buf	./text/scanner/scanner_test.go	/^	var buf bytes.Buffer$/;"	v
buf	./time/format.go	/^		var buf [bufSize]byte$/;"	v
buf	./time/format.go	/^	var buf [20]byte$/;"	v
buf	./time/format.go	/^	var buf [9]byte$/;"	v
buf	./time/genzabbrs.go	/^	var buf bytes.Buffer$/;"	v
buf	./time/time.go	/^	var buf [32]byte$/;"	v
buf	./unicode/utf8/utf8_test.go	/^		var buf [10]byte$/;"	v
buf1	./bufio/bufio_test.go	/^	var buf1, buf2 bytes.Buffer$/;"	v
buf1	./encoding/json/scanner_test.go	/^	var buf1 bytes.Buffer$/;"	v
bufPool	./mime/encodedword.go	/^var bufPool = sync.Pool{$/;"	v
bufReader	./bufio/bufio_test.go	/^type bufReader struct {$/;"	t
bufSize	./os/user/lookup_unix.go	/^	var bufSize C.long$/;"	v
bufWriter	./net/http/fcgi/fcgi.go	/^type bufWriter struct {$/;"	t
bufa	./net/http/client_test.go	/^	var bufa [64]byte$/;"	v
buffer	./archive/tar/writer_test.go	/^	var buffer bytes.Buffer$/;"	v
buffer	./cmd/pprof/internal/profile/proto.go	/^type buffer struct {$/;"	t
buffer	./compress/flate/deflate_test.go	/^	var buffer bytes.Buffer$/;"	v
buffer	./crypto/tls/prf.go	/^	var buffer []byte$/;"	v
buffer	./fmt/print.go	/^type buffer []byte$/;"	t
buffer	./text/tabwriter/tabwriter_test.go	/^type buffer struct {$/;"	t
bufferOverrunBase64	./compress/bzip2/bzip2_test.go	/^var bufferOverrunBase64 string = `$/;"	v
bufioWriterPool	./net/http/server.go	/^func bufioWriterPool(size int) *sync.Pool {$/;"	f
bufreaders	./bufio/bufio_test.go	/^var bufreaders = []bufReader{$/;"	v
bufsize	./syscall/syscall_darwin.go	/^	var bufsize uintptr$/;"	v
bufsize	./syscall/syscall_dragonfly.go	/^	var bufsize uintptr$/;"	v
bufsize	./syscall/syscall_freebsd.go	/^	var bufsize uintptr$/;"	v
bufsize	./syscall/syscall_openbsd.go	/^	var bufsize uintptr$/;"	v
bufsizes	./bufio/bufio_test.go	/^var bufsizes = []int{$/;"	v
bug1EncDec	./encoding/gob/encoder_test.go	/^func bug1EncDec(in Bug1StructMap, out *Bug1StructMap) error {$/;"	f
bugs	./cmd/doc/pkg.go	/^func (pkg *Package) bugs() {$/;"	f
build	./regexp/find_test.go	/^func build(n int, x ...int) [][]int {$/;"	f
build	./runtime/syscall_windows_test.go	/^func (d *cbDLL) build(t *testing.T, dir string) string {$/;"	f
build	./runtime/syscall_windows_test.go	/^func (f cbDLLFunc) build() string {$/;"	f
buildBranch	./cmd/trace/trace.go	/^func (ctx *traceContext) buildBranch(parent frameNode, stk []*trace.Frame) int {$/;"	f
buildChains	./crypto/x509/verify.go	/^func (c *Certificate) buildChains(cache map[int][][]*Certificate, currentChain []*Certificate, opts *VerifyOptions) (chains [][]*Certificate, err error) {$/;"	f
buildEncEngine	./encoding/gob/encode.go	/^func buildEncEngine(info *typeInfo, ut *userTypeInfo, building map[*typeInfo]bool) *encEngine {$/;"	f
buildExtensions	./crypto/x509/x509.go	/^func buildExtensions(template *Certificate) (ret []pkix.Extension, err error) {$/;"	f
buildHuffmanNode	./compress/bzip2/huffman.go	/^func buildHuffmanNode(t *huffmanTree, codes []huffmanCode, level uint32) (nodeIndex uint16, err error) {$/;"	f
buildObjdump	./cmd/objdump/objdump_test.go	/^func buildObjdump(t *testing.T) (tmp, exe string) {$/;"	f
buildOne	./runtime/syscall_windows_test.go	/^func (f cbDLLFunc) buildOne(stdcall bool) string {$/;"	f
buildPrintPathExe	./os/exec/lp_windows_test.go	/^func buildPrintPathExe(t *testing.T, dir string) string {$/;"	f
buildSrc	./runtime/syscall_windows_test.go	/^func (d *cbDLL) buildSrc(t *testing.T, path string) {$/;"	f
buildTypeInfo	./encoding/gob/type.go	/^func buildTypeInfo(ut *userTypeInfo, rt reflect.Type) (*typeInfo, error) {$/;"	f
buildVersion	./runtime/zversion.go	/^var buildVersion = theVersion$/;"	v
build_sysctl	./syscall/mksysctl_openbsd.pl	/^sub build_sysctl() {$/;"	s
buildall	./make.bat	/^if x%1==x--no-clean set buildall=$/;"	v
buildall	./make.bat	/^set buildall=-a$/;"	v
buildinfo	./cmd/link/internal/ld/elf.go	/^var buildinfo []byte$/;"	v
buildop	./cmd/internal/obj/arm/asm5.go	/^func buildop(ctxt *obj.Link) {$/;"	f
buildop	./cmd/internal/obj/arm64/asm7.go	/^func buildop(ctxt *obj.Link) {$/;"	f
buildop	./cmd/internal/obj/ppc64/asm9.go	/^func buildop(ctxt *obj.Link) {$/;"	f
builds	./cmd/go/test.go	/^	var builds, runs, prints []*action$/;"	v
buildup	./net/mockserver_test.go	/^func (dss *dualStackServer) buildup(handler func(*dualStackServer, Listener)) error {$/;"	f
buildup	./net/mockserver_test.go	/^func (ls *localPacketServer) buildup(handler func(*localPacketServer, PacketConn)) error {$/;"	f
buildup	./net/mockserver_test.go	/^func (ls *localServer) buildup(handler func(*localServer, Listener)) error {$/;"	f
builtin	./go/types/builtins.go	/^func (check *Checker) builtin(x *operand, call *ast.CallExpr, id builtinId) (_ bool) {$/;"	f
builtinCalls	./go/types/builtins_test.go	/^var builtinCalls = []struct {$/;"	v
builtinDefs	./cmd/cgo/out.go	/^var builtinDefs = map[string]string{$/;"	v
builtinFuncs	./text/template/funcs.go	/^var builtinFuncs = createValueFuncs(builtins)$/;"	v
builtinId	./go/types/universe.go	/^type builtinId int$/;"	t
builtinIdToType	./encoding/gob/type.go	/^var builtinIdToType map[typeId]gobType \/\/ set in init() after builtins are established$/;"	v
builtinTypesLower	./mime/type.go	/^var builtinTypesLower = map[string]string{$/;"	v
builtinpkg	./cmd/compile/internal/gc/go.go	/^var builtinpkg *Pkg \/\/ fake package for builtins$/;"	v
builtins	./text/template/funcs.go	/^var builtins = FuncMap{$/;"	v
builtins	./text/template/parse/parse_test.go	/^var builtins = map[string]interface{}{$/;"	v
bulkBvec	./cmd/compile/internal/gc/bv.go	/^type bulkBvec struct {$/;"	t
bumpWeight	./cmd/pprof/internal/report/report.go	/^func bumpWeight(from, to *node, w int64, residual bool) {$/;"	f
bundle	./go/doc/doc_test.go	/^type bundle struct {$/;"	t
but	./cmd/doc/pkg.go	/^	\/\/ time.Weekday, so it is defined in the type but not in the$/;"	t
but	./go/doc/testdata/benchmark.go	/^\/\/ An internal type but exported because it is cross-package; part of the implementation$/;"	t
but	./go/doc/testdata/testing.go	/^\/\/ An internal type but exported because it is cross-package; part of the implementation$/;"	t
but	./go/types/eval_test.go	/^		t.Errorf("Eval(%q) got nil type but no error", expr)$/;"	t
but	./go/types/lookup.go	/^	\/\/ pointer type but discard the result if it is a method since we would$/;"	t
but	./testing/benchmark.go	/^\/\/ An internal type but exported because it is cross-package; part of the implementation$/;"	t
but	./testing/testing.go	/^\/\/ An internal type but exported because it is cross-package; part of the implementation$/;"	t
bv	./cmd/pprof/internal/driver/interactive.go	/^	var bv bool$/;"	v
bv	./runtime/heapdump.go	/^	var bv bitvector$/;"	v
bv	./runtime/mgcmark.go	/^		var bv bitvector$/;"	v
bv	./runtime/stack1.go	/^		var bv bitvector$/;"	v
bvalloc	./cmd/compile/internal/gc/bv.go	/^func bvalloc(n int32) Bvec {$/;"	f
bvand	./cmd/compile/internal/gc/bv.go	/^func bvand(dst Bvec, src1 Bvec, src2 Bvec) {$/;"	f
bvandnot	./cmd/compile/internal/gc/bv.go	/^func bvandnot(dst Bvec, src1 Bvec, src2 Bvec) {$/;"	f
bvbits	./cmd/compile/internal/gc/bv.go	/^func bvbits(bv Bvec) int32 {$/;"	f
bvbulkalloc	./cmd/compile/internal/gc/bv.go	/^func bvbulkalloc(nbit int32, count int32) bulkBvec {$/;"	f
bvcmp	./cmd/compile/internal/gc/bv.go	/^func bvcmp(bv1 Bvec, bv2 Bvec) int {$/;"	f
bvconcat	./cmd/compile/internal/gc/bv.go	/^func bvconcat(src1 Bvec, src2 Bvec) Bvec {$/;"	f
bvcopy	./cmd/compile/internal/gc/bv.go	/^func bvcopy(dst Bvec, src Bvec) {$/;"	f
bvgenjump	./cmd/compile/internal/gc/cgen.go	/^func bvgenjump(n, res *Node, wantTrue, geninit bool) {$/;"	f
bvget	./cmd/compile/internal/gc/bv.go	/^func bvget(bv Bvec, i int32) int {$/;"	f
bvisempty	./cmd/compile/internal/gc/bv.go	/^func bvisempty(bv Bvec) bool {$/;"	f
bvnext	./cmd/compile/internal/gc/bv.go	/^func bvnext(bv Bvec, i int32) int {$/;"	f
bvnot	./cmd/compile/internal/gc/bv.go	/^func bvnot(bv Bvec) {$/;"	f
bvor	./cmd/compile/internal/gc/bv.go	/^func bvor(dst Bvec, src1 Bvec, src2 Bvec) {$/;"	f
bvprint	./cmd/compile/internal/gc/bv.go	/^func bvprint(bv Bvec) {$/;"	f
bvreset	./cmd/compile/internal/gc/bv.go	/^func bvreset(bv Bvec, i int32) {$/;"	f
bvresetall	./cmd/compile/internal/gc/bv.go	/^func bvresetall(bv Bvec) {$/;"	f
bvset	./cmd/compile/internal/gc/bv.go	/^func bvset(bv Bvec, i int32) {$/;"	f
bvsize	./cmd/compile/internal/gc/bv.go	/^func bvsize(n uint32) uint32 {$/;"	f
bvwords	./cmd/compile/internal/gc/bv.go	/^func bvwords(bv Bvec) int32 {$/;"	f
bw	./image/png/writer.go	/^	var bw *bufio.Writer$/;"	v
bw	./net/http/request.go	/^	var bw *bufio.Writer$/;"	v
bw	./regexp/syntax/prog.go	/^func bw(b *bytes.Buffer, args ...string) {$/;"	f
by	./go/types/decl.go	/^	\/\/ Determine the (final, unnamed) underlying type by resolving$/;"	t
byAddr	./cmd/internal/objfile/objfile.go	/^type byAddr []Sym$/;"	t
byAddr	./cmd/nm/nm.go	/^type byAddr []objfile.Sym$/;"	t
byCommentPos	./go/ast/import.go	/^type byCommentPos []*CommentGroup$/;"	t
byCycles	./runtime/pprof/pprof.go	/^type byCycles []runtime.BlockProfileRecord$/;"	t
byDate	./cmd/fix/fix.go	/^type byDate []fix$/;"	t
byDuration	./runtime/debug/garbage.go	/^type byDuration []time.Duration$/;"	t
byFileName	./cmd/cover/profile.go	/^type byFileName []*Profile$/;"	t
byHost	./net/lookup_windows_test.go	/^type byHost []*NS$/;"	t
byImportSpec	./go/ast/import.go	/^type byImportSpec []Spec \/\/ slice of *ImportSpec$/;"	t
byInUseBytes	./runtime/pprof/pprof.go	/^type byInUseBytes []runtime.MemProfileRecord$/;"	t
byIndex	./encoding/json/encode.go	/^type byIndex []field$/;"	t
byInterval	./go/ast/commentmap.go	/^type byInterval []Node$/;"	t
byMaskLength	./net/addrselect.go	/^type byMaskLength []policyTableEntry$/;"	t
byName	./cmd/fix/fix.go	/^type byName []fix$/;"	t
byName	./cmd/nm/nm.go	/^type byName []objfile.Sym$/;"	t
byName	./encoding/json/encode.go	/^type byName []field$/;"	t
byName	./io/ioutil/ioutil.go	/^type byName []os.FileInfo$/;"	t
byName	./runtime/pprof/pprof.go	/^type byName []*Profile$/;"	t
byOrder	./cmd/go/test.go	/^type byOrder []*doc.Example$/;"	t
byPath	./go/internal/gcimporter/gcimporter.go	/^type byPath []*types.Package$/;"	t
byPathLength	./net/http/cookiejar/jar.go	/^type byPathLength []entry$/;"	t
byPkg	./cmd/link/internal/ld/symtab.go	/^type byPkg []*Library$/;"	t
byPos	./go/ast/commentmap.go	/^type byPos []*CommentGroup$/;"	t
byPref	./net/dnsclient.go	/^type byPref []*MX$/;"	t
byPrefAndHost	./net/lookup_windows_test.go	/^type byPrefAndHost []*MX$/;"	t
byPriorityWeight	./net/dnsclient.go	/^type byPriorityWeight []*SRV$/;"	t
byRFC6724	./net/addrselect.go	/^type byRFC6724 struct {$/;"	t
bySize	./cmd/nm/nm.go	/^type bySize []objfile.Sym$/;"	t
byUniqueMethodName	./go/types/typexpr.go	/^type byUniqueMethodName []*Func$/;"	t
byUniqueName	./go/types/methodset.go	/^type byUniqueName []*Selection$/;"	t
byUniqueTypeName	./go/types/typexpr.go	/^type byUniqueTypeName []*Named$/;"	t
byte	./builtin/builtin.go	/^type byte byte$/;"	t
byte	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) byte(x byte) {$/;"	f
byte	./image/png/reader.go	/^		\/\/ shouldn't even read a per-row filter type byte, so return early.$/;"	t
byte	./time/zoneinfo_read.go	/^func (d *data) byte() (n byte, ok bool) {$/;"	f
byteEq	./crypto/subtle/constant_time_test.go	/^func byteEq(a, b uint8) int {$/;"	f
byteFormatter	./fmt/fmt_test.go	/^type byteFormatter byte$/;"	t
byteFormatterSlice	./fmt/fmt_test.go	/^var byteFormatterSlice = []byteFormatter{97, 98, 99, 100}$/;"	v
byteFromChanReader	./net/http/transport_test.go	/^type byteFromChanReader chan byte$/;"	t
byteIndex	./net/parse.go	/^func byteIndex(s string, c byte) int {$/;"	f
byteIndex	./syscall/srpc_nacl.go	/^func byteIndex(b []byte, c byte) int {$/;"	f
byteKind	./encoding/json/decode_test.go	/^	type byteKind []byte$/;"	t
byteOrders	./cmd/internal/objfile/disasm.go	/^var byteOrders = map[string]binary.ByteOrder{$/;"	v
byteReader	./cmd/compile/internal/big/intconv.go	/^type byteReader struct {$/;"	t
byteReader	./math/big/intconv.go	/^type byteReader struct {$/;"	t
byteReplacer	./strings/replace.go	/^type byteReplacer [256]byte$/;"	t
byteSizeSuffix	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func byteSizeSuffix(b int) string {$/;"	f
byteSliceReader	./encoding/binary/binary_test.go	/^type byteSliceReader struct {$/;"	t
byteString	./time/zoneinfo_read.go	/^func byteString(p []byte) string {$/;"	f
byteStringReplacer	./strings/replace.go	/^type byteStringReplacer [256][]byte$/;"	t
byteStringer	./fmt/fmt_test.go	/^type byteStringer byte$/;"	t
byteStringerSlice	./fmt/fmt_test.go	/^var byteStringerSlice = []byteStringer{97, 98, 99, 100}$/;"	v
byteType	./fmt/print.go	/^var byteType = reflect.TypeOf(byte(0))$/;"	v
bytediff	./archive/tar/writer_test.go	/^func bytediff(a []byte, b []byte) string {$/;"	f
byteq	./syscall/net_nacl.go	/^type byteq struct {$/;"	t
bytereg	./cmd/internal/obj/x86/asm6.go	/^func bytereg(a *obj.Addr, t *uint8) {$/;"	f
bytes	./bytes/buffer_test.go	/^			var bytes []byte$/;"	v
bytes	./cmd/compile/internal/big/nat.go	/^func (z nat) bytes(buf []byte) (i int) {$/;"	f
bytes	./debug/dwarf/buf.go	/^func (b *buf) bytes(n int) []byte {$/;"	f
bytes	./encoding/asn1/marshal.go	/^	var bytes [4]byte$/;"	v
bytes	./encoding/xml/marshal.go	/^		var bytes []byte$/;"	v
bytes	./fmt/print.go	/^			var bytes []byte$/;"	v
bytes	./math/big/nat.go	/^func (z nat) bytes(buf []byte) (i int) {$/;"	f
bytes	./runtime/print1.go	/^func bytes(s string) (ret []byte) {$/;"	f
bytes	./syscall/srpc_nacl.go	/^func (m *msg) bytes(n int) []byte {$/;"	f
bytesEqual	./net/ip.go	/^func bytesEqual(x, y []byte) bool {$/;"	f
bytesEqualIP	./net/interface_windows.go	/^func bytesEqualIP(a []byte, b []int8) bool {$/;"	f
bytesHash	./runtime/alg.go	/^func bytesHash(b []byte, seed uintptr) uintptr {$/;"	f
bytesIndexByte	./net/parse.go	/^func bytesIndexByte(s []byte, c byte) int {$/;"	f
bytesPerHeader	./net/http/serve_test.go	/^	var bytesPerHeader = len("header12345: val12345\\r\\n")$/;"	v
bytesResult	./encoding/gob/codec_test.go	/^var bytesResult = []byte{0x07, 0x05, 'h', 'e', 'l', 'l', 'o'}$/;"	v
bytesReturned	./syscall/syscall_windows.go	/^	var bytesReturned uint32$/;"	v
bytesTests	./go/constant/value_test.go	/^var bytesTests = []string{$/;"	v
bytes_Compare	./runtime/noasm.go	/^func bytes_Compare(s1, s2 []byte) int {$/;"	f
bytestr	./archive/tar/writer_test.go	/^func bytestr(offset int, b []byte) string {$/;"	f
byteswapreg	./cmd/internal/obj/x86/asm6.go	/^func byteswapreg(ctxt *obj.Link, a *obj.Addr) int {$/;"	f
bytetype	./cmd/compile/internal/gc/go.go	/^var bytetype *Type$/;"	v
bzeroes	./compress/flate/deflate.go	/^var bzeroes [256]byte$/;"	v
bzrRemoteRepo	./cmd/go/vcs.go	/^func bzrRemoteRepo(vcsBzr *vcsCmd, rootDir string) (remoteRepo string, err error) {$/;"	f
bzrResolveRepo	./cmd/go/vcs.go	/^func bzrResolveRepo(vcsBzr *vcsCmd, rootDir, remoteRepo string) (realRepo string, err error) {$/;"	f
c	./cmd/cgo/out.go	/^func c(repr string, args ...interface{}) *TypeRepr {$/;"	f
c1	./cmd/compile/internal/big/nat.go	/^	var c1, c2 Word$/;"	v
c1	./cmd/compile/internal/gc/lex.go	/^	var c1 int$/;"	v
c1	./cmd/internal/goobj/read.go	/^	var c1, c2, c3 byte$/;"	v
c1	./math/big/nat.go	/^	var c1, c2 Word$/;"	v
c1	./net/listen_test.go	/^			var c1 PacketConn$/;"	v
c128equal	./runtime/alg.go	/^func c128equal(p, q unsafe.Pointer) bool {$/;"	f
c128hash	./runtime/alg.go	/^func c128hash(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
c64equal	./runtime/alg.go	/^func c64equal(p, q unsafe.Pointer) bool {$/;"	f
c64hash	./runtime/alg.go	/^func c64hash(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
cAlike	./math/cmplx/cmath_test.go	/^func cAlike(a, b complex128) bool {$/;"	f
cPrefix	./cmd/cgo/main.go	/^var cPrefix string$/;"	v
cPrologGccgo	./cmd/cgo/out.go	/^func (p *Package) cPrologGccgo() string {$/;"	f
cSoclose	./math/cmplx/cmath_test.go	/^func cSoclose(a, b complex128, e float64) bool { return cTolerance(a, b, e) }$/;"	f
cString	./archive/tar/reader.go	/^func cString(b []byte) string {$/;"	f
cString	./archive/tar/writer.go	/^func (tw *Writer) cString(b []byte, s string, allowPax bool, paxKeyword string, paxHeaders map[string]string) {$/;"	f
cTolerance	./math/cmplx/cmath_test.go	/^func cTolerance(a, b complex128, e float64) bool {$/;"	f
cVeryclose	./math/cmplx/cmath_test.go	/^func cVeryclose(a, b complex128) bool          { return cTolerance(a, b, 4e-16) }$/;"	f
cache	./debug/dwarf/type.go	/^\/\/ type cache.$/;"	t
cacheBase10	./cmd/compile/internal/big/natconv.go	/^var cacheBase10 struct {$/;"	v
cacheBase10	./math/big/natconv.go	/^var cacheBase10 struct {$/;"	v
cacheGet	./reflect/type.go	/^func cacheGet(k cacheKey) Type {$/;"	f
cacheKey	./crypto/tls/handshake_client.go	/^	var cacheKey string$/;"	v
cacheKey	./reflect/type.go	/^type cacheKey struct {$/;"	t
cacheKeysTests	./net/http/proxy_test.go	/^var cacheKeysTests = []struct {$/;"	v
cachePut	./reflect/type.go	/^func cachePut(k cacheKey, t *rtype) Type {$/;"	f
cachedCtxt	./cmd/go/list.go	/^		var cachedCtxt *Context$/;"	v
cachedDisasm	./cmd/pprof/pprof.go	/^func (t *objTool) cachedDisasm(file string) (*objfile.Disasm, error) {$/;"	f
cachedTypeFields	./encoding/json/encode.go	/^func cachedTypeFields(t reflect.Type) []field {$/;"	f
cachedWriteError	./encoding/xml/marshal.go	/^func (p *printer) cachedWriteError() error {$/;"	f
cachestats	./runtime/mstats.go	/^func cachestats() {$/;"	f
cadable	./cmd/compile/internal/gc/gen.go	/^func cadable(n *Node) bool {$/;"	f
calibrate	./cmd/compile/internal/big/calibrate_test.go	/^var calibrate = flag.Bool("calibrate", false, "run calibration test")$/;"	v
calibrate	./math/big/calibrate_test.go	/^var calibrate = flag.Bool("calibrate", false, "run calibration test")$/;"	v
calibrate	./unicode/letter_test.go	/^var calibrate = flag.Bool("calibrate", false, "compute crossover for linear vs. binary search")$/;"	v
call	./cmd/compile/internal/gc/order.go	/^		\/\/ Special: avoid copy of func call n->rlist->n.$/;"	f
call	./cmd/compile/internal/gc/subr.go	/^		var call *Node$/;"	v
call	./go/types/call.go	/^func (check *Checker) call(x *operand, e *ast.CallExpr) exprKind {$/;"	f
call	./internal/singleflight/singleflight.go	/^type call struct {$/;"	t
call	./net/rpc/server.go	/^func (s *service) call(server *Server, sending *sync.Mutex, mtype *methodType, req *Request, argv, replyv reflect.Value, codec ServerCodec) {$/;"	f
call	./reflect/value.go	/^func (v Value) call(op string, in []Value) []Value {$/;"	f
call	./reflect/value.go	/^func call(argtype *rtype, fn, arg unsafe.Pointer, n uint32, retoffset uint32)$/;"	f
call	./runtime/race/testdata/regression_test.go	/^func call() bool {$/;"	f
call	./runtime/race_amd64.s	/^call:$/;"	l
call	./text/template/funcs.go	/^func call(fn interface{}, args ...interface{}) (interface{}, error) {$/;"	f
call1024	./runtime/stubs.go	/^func call1024(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call1048576	./runtime/stubs.go	/^func call1048576(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call1073741824	./runtime/stubs.go	/^func call1073741824(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call128	./runtime/stubs.go	/^func call128(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call131072	./runtime/stubs.go	/^func call131072(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call134217728	./runtime/stubs.go	/^func call134217728(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call16	./runtime/stubs32.go	/^func call16(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call16384	./runtime/stubs.go	/^func call16384(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call16777216	./runtime/stubs.go	/^func call16777216(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call2048	./runtime/stubs.go	/^func call2048(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call2097152	./runtime/stubs.go	/^func call2097152(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call256	./runtime/stubs.go	/^func call256(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call262144	./runtime/stubs.go	/^func call262144(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call268435456	./runtime/stubs.go	/^func call268435456(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call32	./runtime/stubs.go	/^func call32(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call32768	./runtime/stubs.go	/^func call32768(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call33554432	./runtime/stubs.go	/^func call33554432(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call4096	./runtime/stubs.go	/^func call4096(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call4194304	./runtime/stubs.go	/^func call4194304(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call512	./runtime/stubs.go	/^func call512(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call524288	./runtime/stubs.go	/^func call524288(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call536870912	./runtime/stubs.go	/^func call536870912(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call64	./runtime/stubs.go	/^func call64(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call65536	./runtime/stubs.go	/^func call65536(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call67108864	./runtime/stubs.go	/^func call67108864(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call8192	./runtime/stubs.go	/^func call8192(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
call8388608	./runtime/stubs.go	/^func call8388608(fn, arg unsafe.Pointer, n, retoffset uint32)$/;"	f
callGC	./reflect/value.go	/^var callGC bool \/\/ for testing; see TestCallMethodJump$/;"	v
callMethod	./reflect/value.go	/^func callMethod(ctxt *methodValue, frame unsafe.Pointer) {$/;"	f
callReflect	./reflect/value.go	/^func callReflect(ctxt *makeFuncImpl, frame unsafe.Pointer) {$/;"	f
callargs	./cmd/compile/internal/gc/closure.go	/^	var callargs *NodeList$/;"	v
callback	./runtime/syscall_windows_test.go	/^func callback(hwnd syscall.Handle, lparam uintptr) uintptr {$/;"	f
callbackasmAddr	./runtime/syscall_windows.go	/^func callbackasmAddr(i int) uintptr {$/;"	f
callbacks	./runtime/syscall_windows.go	/^type callbacks struct {$/;"	t
caller	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func caller(skip int) string {$/;"	f
caller	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func caller(skip int) string {$/;"	f
callers	./runtime/traceback.go	/^func callers(skip int, pcbuf []uintptr) int {$/;"	f
callgraph	./cmd/link/internal/ld/lib.go	/^func callgraph() {$/;"	f
callgrindName	./cmd/pprof/internal/report/report.go	/^func callgrindName(names map[string]int, name string) string {$/;"	f
callinstr	./cmd/compile/internal/gc/racewalk.go	/^func callinstr(np **Node, init **NodeList, wr int, skip int) bool {$/;"	f
callnew	./cmd/compile/internal/gc/walk.go	/^func callnew(t *Type) *Node {$/;"	f
callopt	./cmd/yacc/yacc.go	/^func callopt() {$/;"	f
callrecv	./cmd/compile/internal/gc/typecheck.go	/^func callrecv(n *Node) bool {$/;"	f
callrecvlist	./cmd/compile/internal/gc/typecheck.go	/^func callrecvlist(l *NodeList) bool {$/;"	f
calls	./cmd/compile/internal/gc/walk.go	/^	var calls *NodeList$/;"	v
calls	./internal/singleflight/singleflight_test.go	/^	var calls int32$/;"	v
callsize	./cmd/link/internal/ld/lib.go	/^func callsize() int {$/;"	f
callwritebarrier	./runtime/mbarrier.go	/^func callwritebarrier(typ *_type, frame unsafe.Pointer, framesize, retoffset uintptr) {$/;"	f
can	./cmd/compile/internal/gc/closure.go	/^	\/\/ same struct type can share the descriptor.$/;"	t
can	./cmd/compile/internal/gc/subr.go	/^		\/\/ Array of 1 direct iface type can be direct.$/;"	t
can	./cmd/compile/internal/gc/subr.go	/^		\/\/ Struct with 1 field of direct iface type can be direct.$/;"	t
can	./cmd/compile/internal/gc/typecheck.go	/^			Yyerror("invalid operation: %v (func can only be compared to nil)", n)$/;"	f
can	./reflect/type.go	/^		\/\/ array of 1 direct iface type can be direct$/;"	t
can	./runtime/mfinal.go	/^\/\/ to which x's type can be assigned, and can have arbitrary ignored return$/;"	t
can	./unsafe/unsafe.go	/^\/\/	1) A pointer value of any type can be converted to a Pointer.$/;"	t
canAccessFile	./cmd/pprof/internal/report/report.go	/^func canAccessFile(path string) bool {$/;"	f
canBackquoteTest	./strconv/quote_test.go	/^type canBackquoteTest struct {$/;"	t
canBeNil	./text/template/exec.go	/^func canBeNil(typ reflect.Type) bool {$/;"	f
canCheckPrefix	./regexp/regexp.go	/^func (i *inputBytes) canCheckPrefix() bool {$/;"	f
canCheckPrefix	./regexp/regexp.go	/^func (i *inputReader) canCheckPrefix() bool {$/;"	f
canCheckPrefix	./regexp/regexp.go	/^func (i *inputString) canCheckPrefix() bool {$/;"	f
canHaveDefaultValue	./encoding/asn1/asn1.go	/^func canHaveDefaultValue(k reflect.Kind) bool {$/;"	f
canUseCgo	./net/conf.go	/^func (c *conf) canUseCgo() bool {$/;"	f
canUseConnectEx	./net/fd_windows.go	/^func canUseConnectEx(net string) bool {$/;"	f
canbackquotetests	./strconv/quote_test.go	/^var canbackquotetests = []canBackquoteTest{$/;"	v
cancel	./os/signal/signal.go	/^func cancel(sigs []os.Signal, action func(int)) {$/;"	f
cancelRequest	./net/http/transport.go	/^func (pc *persistConn) cancelRequest() {$/;"	f
cancelTimerBody	./net/http/client.go	/^type cancelTimerBody struct {$/;"	t
canceler	./net/http/client.go	/^		type canceler interface {$/;"	t
candidate	./crypto/tls/handshake_server.go	/^			var candidate *cipherSuite$/;"	v
candidates	./crypto/x509/cert_pool.go	/^	var candidates []int$/;"	v
candiscard	./cmd/compile/internal/gc/walk.go	/^func candiscard(n *Node) bool {$/;"	f
candiscardlist	./cmd/compile/internal/gc/walk.go	/^func candiscardlist(l *NodeList) bool {$/;"	f
caninl	./cmd/compile/internal/gc/inl.go	/^func caninl(fn *Node) {$/;"	f
canmerge	./cmd/compile/internal/gc/popt.go	/^func canmerge(n *Node) bool {$/;"	f
cannedimports	./cmd/compile/internal/gc/lex.go	/^func cannedimports(file string, cp string) {$/;"	f
cannot	./cmd/compile/internal/gc/dcl.go	/^			Yyerror("embedded type cannot be a pointer to interface")$/;"	t
cannot	./cmd/compile/internal/gc/dcl.go	/^		Yyerror("embedded type cannot be a pointer")$/;"	t
cannot	./cmd/compile/internal/gc/typecheck.go	/^			Yyerror("embedded type cannot be a pointer")$/;"	t
cannot	./cmd/compile/internal/gc/walk.go	/^		\/\/ if range of type cannot exceed static array bound,$/;"	t
cannot	./encoding/binary/binary.go	/^\/\/ It returns zero if the type cannot be implemented by the fast path in Read or Write.$/;"	t
cannot	./go/parser/parser.go	/^		assert(!isIdent, "type cannot be identifier")$/;"	t
cannot	./go/printer/testdata/parser.go	/^			assert(!isIdent, "type cannot be identifier")$/;"	t
cannot	./go/types/typexpr.go	/^						check.errorf(pos, "anonymous field type cannot be a pointer to an interface")$/;"	t
cannot	./go/types/typexpr.go	/^						check.errorf(pos, "anonymous field type cannot be unsafe.Pointer")$/;"	t
cannot	./go/types/typexpr.go	/^					check.errorf(pos, "anonymous field type cannot be a pointer")$/;"	t
cannot	./go/types/typexpr.go	/^					check.errorf(pos, "anonymous field type cannot be unsafe.Pointer")$/;"	t
canonicalAddr	./net/http/transport.go	/^func canonicalAddr(url *url.URL) string {$/;"	f
canonicalHeaderKeyTest	./net/textproto/reader_test.go	/^type canonicalHeaderKeyTest struct {$/;"	t
canonicalHeaderKeyTests	./net/textproto/reader_test.go	/^var canonicalHeaderKeyTests = []canonicalHeaderKeyTest{$/;"	v
canonicalHost	./net/http/cookiejar/jar.go	/^func canonicalHost(host string) (string, error) {$/;"	f
canonicalHostTests	./net/http/cookiejar/jar_test.go	/^var canonicalHostTests = map[string]string{$/;"	v
canonicalMIMEHeaderKey	./net/textproto/reader.go	/^func canonicalMIMEHeaderKey(a []byte) string {$/;"	f
canonicalMethod	./cmd/vet/method.go	/^func canonicalMethod(f *File, id *ast.Ident, t *ast.FuncType) {$/;"	f
canonicalMethods	./cmd/vet/method.go	/^var canonicalMethods = map[string]MethodSig{$/;"	v
canpanic	./runtime/panic1.go	/^func canpanic(gp *g) bool {$/;"	f
cansemacquire	./runtime/sema.go	/^func cansemacquire(addr *uint32) bool {$/;"	f
cansse2	./cmd/dist/util_gc.go	/^func cansse2() bool {$/;"	f
cansse2	./cmd/dist/util_gccgo.go	/^func cansse2() bool { return C.supports_sse2() != 0 }$/;"	f
canuse1insntls	./cmd/internal/obj/x86/obj6.go	/^func canuse1insntls(ctxt *obj.Link) bool {$/;"	f
cap	./builtin/builtin.go	/^func cap(v Type) int$/;"	f
cap	./regexp/syntax/compile.go	/^func (c *compiler) cap(arg uint32) frag {$/;"	f
cap	./runtime/runtime-gdb.py	/^	def cap(self):$/;"	m	class:SliceValue
cap0	./bytes/buffer_test.go	/^	var cap0 int$/;"	v
capNames	./regexp/syntax/regexp.go	/^func (re *Regexp) capNames(names []string) {$/;"	f
capitalLetters	./strings/replace_test.go	/^var capitalLetters = NewReplacer("a", "A", "b", "B")$/;"	v
capitalize	./cmd/go/main.go	/^func capitalize(s string) string {$/;"	f
capturevars	./cmd/compile/internal/gc/closure.go	/^func capturevars(xfunc *Node) {$/;"	f
carry	./crypto/elliptic/p256.go	/^	var carry uint32$/;"	v
carry	./crypto/elliptic/p256.go	/^	var carry, nextCarry uint32$/;"	v
carry	./crypto/elliptic/p256.go	/^	var carry, x, xMask uint32$/;"	v
cas	./cmd/compile/internal/gc/select.go	/^		var cas *Node$/;"	v
cas	./cmd/compile/internal/gc/select.go	/^	var cas *Node$/;"	v
cas	./cmd/compile/internal/gc/swt.go	/^		var cas *NodeList$/;"	v
cas	./cmd/compile/internal/gc/swt.go	/^	var cas *NodeList  \/\/ cases$/;"	v
cas	./cmd/compile/internal/gc/swt.go	/^	var cas *NodeList$/;"	v
cas	./runtime/runtime2.go	/^func (gp *guintptr) cas(old, new guintptr) bool {$/;"	f
cas	./runtime/select.go	/^	var cas *scase$/;"	v
cas	./runtime/stubs.go	/^func cas(ptr *uint32, old, new uint32) bool$/;"	f
cas64	./runtime/atomic_386.go	/^func cas64(ptr *uint64, old, new uint64) bool$/;"	f
cas64	./runtime/atomic_amd64x.go	/^func cas64(ptr *uint64, old, new uint64) bool$/;"	f
cas64	./runtime/atomic_arm.go	/^func cas64(addr *uint64, old, new uint64) bool {$/;"	f
cas64	./runtime/atomic_arm64.go	/^func cas64(ptr *uint64, old, new uint64) bool$/;"	f
cas64	./runtime/atomic_ppc64x.go	/^func cas64(ptr *uint64, old, new uint64) bool$/;"	f
cas64_again	./runtime/asm_ppc64x.s	/^cas64_again:$/;"	l
cas64_fail	./runtime/asm_ppc64x.s	/^cas64_fail:$/;"	l
cas64fail	./sync/atomic/asm_arm.s	/^cas64fail:$/;"	l
cas64loop	./sync/atomic/asm_arm.s	/^cas64loop:$/;"	l
cas_again	./runtime/asm_ppc64x.s	/^cas_again:$/;"	l
cas_fail	./runtime/asm_ppc64x.s	/^cas_fail:$/;"	l
casagain	./sync/atomic/asm_linux_arm.s	/^casagain:$/;"	l
cascheck	./sync/atomic/asm_linux_arm.s	/^cascheck:$/;"	l
case	./cmd/compile/internal/gc/go.y	/^case:$/;"	l
caseClause	./cmd/compile/internal/gc/swt.go	/^type caseClause struct {$/;"	t
caseClauseByExpr	./cmd/compile/internal/gc/swt.go	/^type caseClauseByExpr []*caseClause$/;"	t
caseClauseByOrd	./cmd/compile/internal/gc/swt.go	/^type caseClauseByOrd []*caseClause$/;"	t
caseClauseByType	./cmd/compile/internal/gc/swt.go	/^type caseClauseByType []*caseClause$/;"	t
caseClauses	./cmd/compile/internal/gc/swt.go	/^func caseClauses(sw *Node, kind int) []*caseClause {$/;"	f
caseInfo	./reflect/all_test.go	/^type caseInfo struct {$/;"	t
caseIt	./unicode/maketables.go	/^func caseIt(r, cased rune) rune {$/;"	f
caseOrbit	./unicode/maketables.go	/^	printf("var caseOrbit = []foldPair{\\n")$/;"	v
caseOrbit	./unicode/maketables.go	/^	var caseOrbit = make([][]rune, MaxChar+1)$/;"	v
caseOrbit	./unicode/tables.go	/^var caseOrbit = []foldPair{$/;"	v
caseState	./unicode/maketables.go	/^type caseState struct {$/;"	t
caseString	./unicode/letter_test.go	/^func caseString(c int) string {$/;"	f
caseT	./unicode/letter_test.go	/^type caseT struct {$/;"	t
caseTest	./unicode/letter_test.go	/^var caseTest = []caseT{$/;"	v
caseTypes	./go/types/stmt.go	/^func (check *Checker) caseTypes(x *operand, xtyp *Interface, types []ast.Expr, seen map[Type]token.Pos) (T Type) {$/;"	f
caseValues	./go/types/stmt.go	/^func (check *Checker) caseValues(x operand \/* copy argument (not *operand!) *\/, values []ast.Expr) {$/;"	f
caseblock	./cmd/compile/internal/gc/go.y	/^caseblock:$/;"	l
caseblock_list	./cmd/compile/internal/gc/go.y	/^caseblock_list:$/;"	l
casebody	./cmd/compile/internal/gc/swt.go	/^func casebody(sw *Node, typeswvar *Node) {$/;"	f
casefoldingURL	./unicode/maketables.go	/^var casefoldingURL = flag.String("casefolding", "", "full URL for CaseFolding.txt; defaults to --url\/CaseFolding.txt")$/;"	v
cases	./reflect/all_test.go	/^		var cases []SelectCase$/;"	v
cases	./unicode/maketables.go	/^var cases = flag.Bool("cases",$/;"	v
casesz	./cmd/internal/obj/arm/asm5.go	/^func casesz(ctxt *obj.Link, p *obj.Prog) int32 {$/;"	f
casfail	./runtime/asm_arm.s	/^casfail:$/;"	l
casfail	./sync/atomic/asm_arm.s	/^casfail:$/;"	l
casfrom_Gscanstatus	./runtime/proc1.go	/^func casfrom_Gscanstatus(gp *g, oldval, newval uint32) {$/;"	f
casgcopystack	./runtime/proc1.go	/^func casgcopystack(gp *g) uint32 {$/;"	f
casgstatus	./runtime/proc1.go	/^func casgstatus(gp *g, oldval, newval uint32) {$/;"	f
casl	./runtime/asm_arm.s	/^casl:$/;"	l
casloop	./sync/atomic/asm_arm.s	/^casloop:$/;"	l
casp	./runtime/atomic_pointer.go	/^func casp(ptr *unsafe.Pointer, old, new unsafe.Pointer) bool {$/;"	f
casp1	./runtime/stubs.go	/^func casp1(ptr *unsafe.Pointer, old, new unsafe.Pointer) bool$/;"	f
casret	./sync/atomic/asm_linux_arm.s	/^casret:$/;"	l
cast	./cmd/compile/internal/gc/reflect.go	/^	\/\/ 2-arg type cast) declares the size of the zerovalue it needs.$/;"	t
castagnoliInit	./hash/crc32/crc32.go	/^func castagnoliInit() {$/;"	f
castagnoliOnce	./hash/crc32/crc32.go	/^var castagnoliOnce sync.Once$/;"	v
castagnoliSSE42	./hash/crc32/crc32_amd64x.go	/^func castagnoliSSE42(crc uint32, p []byte) uint32$/;"	f
castagnoliTable	./hash/crc32/crc32.go	/^var castagnoliTable *Table$/;"	v
castogscanstatus	./runtime/proc1.go	/^func castogscanstatus(gp *g, oldval, newval uint32) bool {$/;"	f
casuintptr	./runtime/stubs.go	/^func casuintptr(ptr *uintptr, old, new uintptr) bool$/;"	f
cat	./regexp/syntax/compile.go	/^func (c *compiler) cat(f1, f2 frag) frag {$/;"	f
catRegex	./cmd/pprof/internal/driver/interactive.go	/^func catRegex(a, b string) string {$/;"	f
catchError	./encoding/gob/error.go	/^func catchError(err *error) {$/;"	f
catchPanic	./fmt/print.go	/^func (p *pp) catchPanic(arg interface{}, verb rune) {$/;"	f
catch_exception_raise	./runtime/cgo/gcc_signal_darwin_armx.c	/^catch_exception_raise($/;"	f
catchfree	./regexp/testdata/testregex.c	/^catchfree(regex_t* preg, int flags, int* tabs, char* spec, char* re, char* s, char* ans, char* msg, char* accept, regmatch_t* match, int nmatch, int nsub, unsigned long skip, unsigned long level, unsigned long test)$/;"	f	file:
category	./unicode/maketables.go	/^var category = map[string]bool{$/;"	v
categoryOp	./unicode/maketables.go	/^func categoryOp(code rune, class uint8) bool {$/;"	f
causes	./reflect/type.go	/^\/\/ inappropriate to the kind of type causes a run-time panic.$/;"	t
causes	./reflect/value.go	/^\/\/ inappropriate to the kind of type causes a run time panic.$/;"	t
cb	./runtime/cgocall.go	/^	var cb *args$/;"	v
cbDLL	./runtime/syscall_windows_test.go	/^type cbDLL struct {$/;"	t
cbDLLFunc	./runtime/syscall_windows_test.go	/^type cbDLLFunc int \/\/ int determines number of callback parameters$/;"	t
cbDLLs	./runtime/syscall_windows_test.go	/^var cbDLLs = []cbDLL{$/;"	v
cbFuncs	./runtime/syscall_windows_test.go	/^var cbFuncs = [...]interface{}{$/;"	v
cbPaletted	./image/png/reader.go	/^func cbPaletted(cb int) bool {$/;"	f
cbTest	./runtime/syscall_windows_test.go	/^type cbTest struct {$/;"	t
cbTests	./runtime/syscall_windows_test.go	/^var cbTests = []cbTest{$/;"	v
cbc	./crypto/cipher/cbc.go	/^type cbc struct {$/;"	t
cbc	./crypto/tls/conn.go	/^		var cbc cbcMode$/;"	v
cbcAESTests	./crypto/cipher/cbc_aes_test.go	/^var cbcAESTests = []struct {$/;"	v
cbcDecrypter	./crypto/cipher/cbc.go	/^type cbcDecrypter cbc$/;"	t
cbcEncrypter	./crypto/cipher/cbc.go	/^type cbcEncrypter cbc$/;"	t
cbcMode	./crypto/tls/conn.go	/^type cbcMode interface {$/;"	t
cbrt	./math/all_test.go	/^var cbrt = []float64{$/;"	v
cbrtSC	./math/all_test.go	/^var cbrtSC = []float64{$/;"	v
cc	./cmd/compile/internal/gc/swt.go	/^	var cc []*caseClause$/;"	v
cc_plus_dd	./cmd/compile/internal/gc/const.go	/^	var cc_plus_dd Mpflt$/;"	v
ccr	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) ccr() uint64   { return c.regs().ccr }$/;"	f
cd	./cmd/go/go_test.go	/^func (tg *testgoData) cd(dir string) {$/;"	f
cdeclName	./runtime/syscall_windows_test.go	/^func (f cbDLLFunc) cdeclName() string {$/;"	f
cdp	./crypto/x509/x509.go	/^				var cdp []distributionPoint$/;"	v
ceil	./math/all_test.go	/^var ceil = []float64{$/;"	v
ceil	./math/floor.go	/^func ceil(x float64) float64 {$/;"	f
ceilSC	./math/all_test.go	/^var ceilSC = []float64{$/;"	v
cell	./text/tabwriter/tabwriter.go	/^type cell struct {$/;"	t
cempty	./cmd/yacc/yacc.go	/^func cempty() {$/;"	f
cert	./crypto/tls/tls.go	/^	var cert Certificate$/;"	v
cert	./crypto/x509/x509.go	/^	var cert certificate$/;"	v
cert	./encoding/asn1/asn1_test.go	/^	var cert Certificate$/;"	v
certBytes	./crypto/x509/x509_test.go	/^var certBytes = "308203223082028ba00302010202106edf0d9499fd4533dd1297fc42a93be1300d06092a864886" +$/;"	v
certDERBlock	./crypto/tls/tls.go	/^	var certDERBlock *pem.Block$/;"	v
certDirectories	./crypto/x509/root_unix.go	/^var certDirectories = []string{$/;"	v
certDoubleWildcardExampleCom	./crypto/tls/conn_test.go	/^var certDoubleWildcardExampleCom = `308201443081f1a003020102020101300b06092a864886f70d010105301e311c301a060355040a131354657374696e67204365727469666963617465301e170d3131313030313139303134315a170d3132303933303139303134315a301e311c301a060355040a131354657374696e67204365727469666963617465305a300b06092a864886f70d010101034b003048024100bced6e32368599eeddf18796bfd03958a154f87e5b084f96e85136a56b886733592f493f0fc68b0d6b3551781cb95e13c5de458b28d6fb60d20a9129313261410203010001a31e301c301a0603551d1104133011820f2a2e2a2e6578616d706c652e636f6d300b06092a864886f70d0101050341001c3de267975f56ef57771c6218ef95ecc65102e57bd1defe6f7efea90d9b26cf40de5bd7ad75e46201c7f2a92aaa3e907451e9409f65e28ddb6db80d726290f6`$/;"	v
certExampleCom	./crypto/tls/conn_test.go	/^var certExampleCom = `308201403081eda003020102020101300b06092a864886f70d010105301e311c301a060355040a131354657374696e67204365727469666963617465301e170d3131313030313138353835325a170d3132303933303138353835325a301e311c301a060355040a131354657374696e67204365727469666963617465305a300b06092a864886f70d010101034b003048024100bced6e32368599eeddf18796bfd03958a154f87e5b084f96e85136a56b886733592f493f0fc68b0d6b3551781cb95e13c5de458b28d6fb60d20a9129313261410203010001a31a301830160603551d11040f300d820b6578616d706c652e636f6d300b06092a864886f70d0101050341001a0b419d2c74474c6450654e5f10b32bf426ffdf55cad1c52602e7a9151513a3424c70f5960dcd682db0c33769cc1daa3fcdd3db10809d2392ed4a1bf50ced18`$/;"	v
certFiles	./crypto/x509/root_bsd.go	/^var certFiles = []string{$/;"	v
certFiles	./crypto/x509/root_linux.go	/^var certFiles = []string{$/;"	v
certFiles	./crypto/x509/root_nacl.go	/^var certFiles = []string{}$/;"	v
certFiles	./crypto/x509/root_plan9.go	/^var certFiles = []string{$/;"	v
certFiles	./crypto/x509/root_solaris.go	/^var certFiles = []string{$/;"	v
certFooExampleCom	./crypto/tls/conn_test.go	/^var certFooExampleCom = `308201443081f1a003020102020101300b06092a864886f70d010105301e311c301a060355040a131354657374696e67204365727469666963617465301e170d3131313030313139303131345a170d3132303933303139303131345a301e311c301a060355040a131354657374696e67204365727469666963617465305a300b06092a864886f70d010101034b003048024100bced6e32368599eeddf18796bfd03958a154f87e5b084f96e85136a56b886733592f493f0fc68b0d6b3551781cb95e13c5de458b28d6fb60d20a9129313261410203010001a31e301c301a0603551d1104133011820f666f6f2e6578616d706c652e636f6d300b06092a864886f70d010105034100646a2a51f2aa2477add854b462cf5207ba16d3213ffb5d3d0eed473fbf09935019192d1d5b8ca6a2407b424cf04d97c4cd9197c83ecf81f0eab9464a1109d09f`$/;"	v
certID	./crypto/x509/root_darwin_arm_gen.go	/^type certID struct {$/;"	t
certPath	./crypto/tls/handshake_server_test.go	/^	var certPath, keyPath, ecdsaCertPath, ecdsaKeyPath string$/;"	v
certRequested	./crypto/tls/handshake_client.go	/^	var certRequested bool$/;"	v
certWildcardExampleCom	./crypto/tls/conn_test.go	/^var certWildcardExampleCom = `308201423081efa003020102020101300b06092a864886f70d010105301e311c301a060355040a131354657374696e67204365727469666963617465301e170d3131313030313139303034365a170d3132303933303139303034365a301e311c301a060355040a131354657374696e67204365727469666963617465305a300b06092a864886f70d010101034b003048024100bced6e32368599eeddf18796bfd03958a154f87e5b084f96e85136a56b886733592f493f0fc68b0d6b3551781cb95e13c5de458b28d6fb60d20a9129313261410203010001a31c301a30180603551d110411300f820d2a2e6578616d706c652e636f6d300b06092a864886f70d0101050341001676f0c9e7c33c1b656ed5a6476c4e2ee9ec8e62df7407accb1875272b2edd0a22096cb2c22598d11604104d604f810eb4b5987ca6bb319c7e6ce48725c54059`$/;"	v
certificate	./crypto/x509/x509.go	/^type certificate struct {$/;"	t
certificate	./encoding/pem/pem_test.go	/^var certificate = &Block{Type: "CERTIFICATE",$/;"	v
certificateFromPEM	./crypto/x509/verify_test.go	/^func certificateFromPEM(pemBytes string) (*Certificate, error) {$/;"	f
certificateMsg	./crypto/tls/handshake_messages.go	/^type certificateMsg struct {$/;"	t
certificateRequest	./crypto/x509/x509.go	/^type certificateRequest struct {$/;"	t
certificateRequestMsg	./crypto/tls/handshake_messages.go	/^type certificateRequestMsg struct {$/;"	t
certificateStatusMsg	./crypto/tls/handshake_messages.go	/^type certificateStatusMsg struct {$/;"	t
certificateVerifyMsg	./crypto/tls/handshake_messages.go	/^type certificateVerifyMsg struct {$/;"	t
certs	./crypto/x509/root_darwin_arm_gen.go	/^	var certs []*x509.Certificate$/;"	v
cexecPipe	./syscall/exec_plan9.go	/^func cexecPipe(p []int) error {$/;"	f
cfb	./crypto/cipher/cfb.go	/^type cfb struct {$/;"	t
cfbTests	./crypto/cipher/cfb_test.go	/^var cfbTests = []struct {$/;"	v
cfree	./runtime/cgocall.go	/^func cfree(p unsafe.Pointer) {$/;"	f
cfuncname	./runtime/symtab.go	/^func cfuncname(f *_func) *byte {$/;"	f
cgen64	./cmd/compile/internal/arm/cgen64.go	/^func cgen64(n *gc.Node, res *gc.Node) {$/;"	f
cgen64	./cmd/compile/internal/x86/cgen64.go	/^func cgen64(n *gc.Node, res *gc.Node) {$/;"	f
cgen_append	./cmd/compile/internal/gc/cgen.go	/^func cgen_append(n, res *Node) {$/;"	f
cgen_aret	./cmd/compile/internal/gc/cgen.go	/^func cgen_aret(n *Node, res *Node) {$/;"	f
cgen_bmul	./cmd/compile/internal/amd64/ggen.go	/^func cgen_bmul(op int, nl *gc.Node, nr *gc.Node, res *gc.Node) bool {$/;"	f
cgen_bmul	./cmd/compile/internal/x86/ggen.go	/^func cgen_bmul(op int, nl *gc.Node, nr *gc.Node, res *gc.Node) bool {$/;"	f
cgen_call	./cmd/compile/internal/gc/cgen.go	/^func cgen_call(n *Node, proc int) {$/;"	f
cgen_callinter	./cmd/compile/internal/gc/cgen.go	/^func cgen_callinter(n *Node, res *Node, proc int) {$/;"	f
cgen_callmeth	./cmd/compile/internal/gc/gen.go	/^func cgen_callmeth(n *Node, proc int) {$/;"	f
cgen_callret	./cmd/compile/internal/gc/cgen.go	/^func cgen_callret(n *Node, res *Node) {$/;"	f
cgen_dcl	./cmd/compile/internal/gc/gen.go	/^func cgen_dcl(n *Node) {$/;"	f
cgen_discard	./cmd/compile/internal/gc/gen.go	/^func cgen_discard(nr *Node) {$/;"	f
cgen_div	./cmd/compile/internal/gc/cgen.go	/^func cgen_div(op int, nl *Node, nr *Node, res *Node) {$/;"	f
cgen_div	./cmd/compile/internal/x86/ggen.go	/^func cgen_div(op int, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_dottype	./cmd/compile/internal/gc/gen.go	/^func cgen_dottype(n *Node, res, resok *Node, wb bool) {$/;"	f
cgen_float	./cmd/compile/internal/x86/ggen.go	/^func cgen_float(n *gc.Node, res *gc.Node) {$/;"	f
cgen_float387	./cmd/compile/internal/x86/ggen.go	/^func cgen_float387(n *gc.Node, res *gc.Node) {$/;"	f
cgen_floatsse	./cmd/compile/internal/x86/ggen.go	/^func cgen_floatsse(n *gc.Node, res *gc.Node) {$/;"	f
cgen_hmul	./cmd/compile/internal/amd64/ggen.go	/^func cgen_hmul(nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_hmul	./cmd/compile/internal/arm/ggen.go	/^func cgen_hmul(nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_hmul	./cmd/compile/internal/arm64/ggen.go	/^func cgen_hmul(nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_hmul	./cmd/compile/internal/ppc64/ggen.go	/^func cgen_hmul(nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_hmul	./cmd/compile/internal/x86/ggen.go	/^func cgen_hmul(nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_norm	./cmd/compile/internal/gc/cgen.go	/^func cgen_norm(n, n1, res *Node) {$/;"	f
cgen_proc	./cmd/compile/internal/gc/gen.go	/^func cgen_proc(n *Node, proc int) {$/;"	f
cgen_ret	./cmd/compile/internal/gc/cgen.go	/^func cgen_ret(n *Node) {$/;"	f
cgen_shift	./cmd/compile/internal/amd64/ggen.go	/^func cgen_shift(op int, bounded bool, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_shift	./cmd/compile/internal/arm/ggen.go	/^func cgen_shift(op int, bounded bool, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_shift	./cmd/compile/internal/arm64/ggen.go	/^func cgen_shift(op int, bounded bool, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_shift	./cmd/compile/internal/ppc64/ggen.go	/^func cgen_shift(op int, bounded bool, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_shift	./cmd/compile/internal/x86/ggen.go	/^func cgen_shift(op int, bounded bool, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
cgen_slice	./cmd/compile/internal/gc/cgen.go	/^func cgen_slice(n, res *Node, wb bool) {$/;"	f
cgen_wb	./cmd/compile/internal/gc/cgen.go	/^func cgen_wb(n, res *Node, wb bool) {$/;"	f
cgen_wbfat	./cmd/compile/internal/gc/cgen.go	/^func cgen_wbfat(n, res *Node) {$/;"	f
cgen_wbptr	./cmd/compile/internal/gc/cgen.go	/^func cgen_wbptr(n, res *Node) {$/;"	f
cgenindex	./cmd/compile/internal/arm/cgen.go	/^func cgenindex(n *gc.Node, res *gc.Node, bounded bool) *obj.Prog {$/;"	f
cgiTested	./net/http/cgi/host_test.go	/^var cgiTested, cgiWorks bool$/;"	v
cgoAlwaysFalse	./runtime/cgo.go	/^var cgoAlwaysFalse bool$/;"	v
cgoExclude	./cmd/go/pkg.go	/^var cgoExclude = map[string]bool{$/;"	v
cgoHasExtraM	./runtime/cgo.go	/^var cgoHasExtraM bool$/;"	v
cgoLookupCNAME	./net/cgo_stub.go	/^func cgoLookupCNAME(name string) (cname string, err error, completed bool) {$/;"	f
cgoLookupCNAME	./net/cgo_unix.go	/^func cgoLookupCNAME(name string) (cname string, err error, completed bool) {$/;"	f
cgoLookupHost	./net/cgo_stub.go	/^func cgoLookupHost(name string) (addrs []string, err error, completed bool) {$/;"	f
cgoLookupHost	./net/cgo_unix.go	/^func cgoLookupHost(name string) (hosts []string, err error, completed bool) {$/;"	f
cgoLookupIP	./net/cgo_stub.go	/^func cgoLookupIP(name string) (addrs []IPAddr, err error, completed bool) {$/;"	f
cgoLookupIP	./net/cgo_unix.go	/^func cgoLookupIP(name string) (addrs []IPAddr, err error, completed bool) {$/;"	f
cgoLookupIPCNAME	./net/cgo_unix.go	/^func cgoLookupIPCNAME(name string) (addrs []IPAddr, cname string, err error, completed bool) {$/;"	f
cgoLookupPTR	./net/cgo_stub.go	/^func cgoLookupPTR(addr string) (ptrs []string, err error, completed bool) {$/;"	f
cgoLookupPTR	./net/cgo_unix.go	/^func cgoLookupPTR(addr string) ([]string, error, bool) {$/;"	f
cgoLookupPort	./net/cgo_stub.go	/^func cgoLookupPort(network, service string) (port int, err error, completed bool) {$/;"	f
cgoLookupPort	./net/cgo_unix.go	/^func cgoLookupPort(network, service string) (port int, err error, completed bool) {$/;"	f
cgoNameinfoPTR	./net/cgo_resnew.go	/^func cgoNameinfoPTR(b []byte, sa *C.struct_sockaddr, salen C.socklen_t) (int, error) {$/;"	f
cgoNameinfoPTR	./net/cgo_resold.go	/^func cgoNameinfoPTR(b []byte, sa *C.struct_sockaddr, salen C.socklen_t) (int, error) {$/;"	f
cgoSockaddr	./net/cgo_unix.go	/^func cgoSockaddr(ip IP) (*C.struct_sockaddr, C.socklen_t) {$/;"	f
cgoSockaddrInet4	./net/cgo_socknew.go	/^func cgoSockaddrInet4(ip IP) *C.struct_sockaddr {$/;"	f
cgoSockaddrInet4	./net/cgo_sockold.go	/^func cgoSockaddrInet4(ip IP) *C.struct_sockaddr {$/;"	f
cgoSockaddrInet6	./net/cgo_socknew.go	/^func cgoSockaddrInet6(ip IP) *C.struct_sockaddr {$/;"	f
cgoSockaddrInet6	./net/cgo_sockold.go	/^func cgoSockaddrInet6(ip IP) *C.struct_sockaddr {$/;"	f
cgoSyscallExclude	./cmd/go/pkg.go	/^var cgoSyscallExclude = map[string]bool{$/;"	v
cgoTest	./cmd/dist/test.go	/^func (t *tester) cgoTest() error {$/;"	f
cgoTestSO	./cmd/dist/test.go	/^func (t *tester) cgoTestSO(testpath string) error {$/;"	f
cgoTestSOSupported	./cmd/dist/test.go	/^func (t *tester) cgoTestSOSupported() bool {$/;"	f
cgoThreadStart	./runtime/proc1.go	/^var cgoThreadStart unsafe.Pointer$/;"	v
cgoType	./cmd/cgo/out.go	/^func (p *Package) cgoType(e ast.Expr) *Type {$/;"	f
cgoUse	./runtime/cgo.go	/^func cgoUse(interface{}) { throw("cgoUse should not be called") }$/;"	f
cgocall	./runtime/cgocall.go	/^func cgocall(fn, arg unsafe.Pointer) int32 {$/;"	f
cgocallback	./runtime/stubs.go	/^func cgocallback(fn, frame unsafe.Pointer, framesize uintptr)$/;"	f
cgocallback_gofunc	./runtime/stubs.go	/^func cgocallback_gofunc(fv uintptr, frame uintptr, framesize uintptr)$/;"	f
cgocallbackg	./runtime/cgocall.go	/^func cgocallbackg() {$/;"	f
cgocallbackg1	./runtime/cgocall.go	/^func cgocallbackg1() {$/;"	f
cgothreadstart	./runtime/proc1.go	/^type cgothreadstart struct {$/;"	t
cgounimpl	./runtime/cgocall.go	/^func cgounimpl() {$/;"	f
ch	./cmd/compile/internal/arm/cgen64.go	/^			var ch gc.Node$/;"	v
ch	./cmd/compile/internal/arm/cgen64.go	/^		var ch gc.Node$/;"	v
ch	./cmd/compile/internal/big/intconv.go	/^	var ch byte$/;"	v
ch	./cmd/compile/internal/big/ratconv.go	/^	var ch byte$/;"	v
ch	./cmd/compile/internal/gc/select.go	/^			var ch *Node$/;"	v
ch	./cmd/link/internal/ld/lib.go	/^	var ch Chain$/;"	v
ch	./compress/flate/huffman_code.go	/^	var ch uint16$/;"	v
ch	./go/types/stmt.go	/^		var ch, x operand$/;"	v
ch	./math/big/intconv.go	/^	var ch byte$/;"	v
ch	./math/big/ratconv.go	/^	var ch byte$/;"	v
ch	./runtime/race/testdata/sync_test.go	/^	var ch = make(chan bool, 1)$/;"	v
ch	./strings/strings.go	/^	var ch rune$/;"	v
ch1	./cmd/link/internal/ld/lib.go	/^	var ch1 Chain$/;"	v
chainCtx	./crypto/x509/root_windows.go	/^	var chainCtx *syscall.CertChainContext$/;"	v
chainStr	./crypto/x509/verify_test.go	/^	var chainStr string$/;"	v
chainToDebugString	./crypto/x509/verify_test.go	/^func chainToDebugString(chain []*Certificate) string {$/;"	f
chainToSend	./crypto/tls/handshake_client.go	/^	var chainToSend *Certificate$/;"	v
chanType	./reflect/type.go	/^type chanType struct {$/;"	t
chanVar	./cmd/api/testdata/src/pkg/p1/p1.go	/^var chanVar chan int$/;"	v
chanWriter	./net/http/client_test.go	/^type chanWriter chan string$/;"	t
chanbuf	./runtime/chan.go	/^func chanbuf(c *hchan, i uint) unsafe.Pointer {$/;"	f
chancap	./reflect/value.go	/^func chancap(ch unsafe.Pointer) int$/;"	f
chanclose	./reflect/value.go	/^func chanclose(ch unsafe.Pointer)$/;"	f
chanfn	./cmd/compile/internal/gc/walk.go	/^func chanfn(name string, n int, t *Type) *Node {$/;"	f
change	./cmd/compile/internal/gc/reg.go	/^var change int$/;"	v
change	./syscall/syscall_bsd.go	/^	var change, event unsafe.Pointer$/;"	v
changeCipherSpec	./crypto/tls/conn.go	/^func (hc *halfConn) changeCipherSpec() error {$/;"	f
changed	./cmd/link/internal/ld/lib.go	/^	var changed int$/;"	v
changes	./sort/example_multi_test.go	/^var changes = []Change{$/;"	v
chanlen	./reflect/value.go	/^func chanlen(ch unsafe.Pointer) int$/;"	f
chanrecv	./reflect/value.go	/^func chanrecv(t *rtype, ch unsafe.Pointer, nb bool, val unsafe.Pointer) (selected, received bool)$/;"	f
chanrecv	./runtime/chan.go	/^func chanrecv(t *chantype, c *hchan, ep unsafe.Pointer, block bool) (selected, received bool) {$/;"	f
chanrecv1	./cmd/compile/internal/gc/builtin/runtime.go	/^func chanrecv1(chanType *byte, hchan <-chan any, elem *any)$/;"	f
chanrecv1	./runtime/chan.go	/^func chanrecv1(t *chantype, c *hchan, elem unsafe.Pointer) {$/;"	f
chanrecv2	./cmd/compile/internal/gc/builtin/runtime.go	/^func chanrecv2(chanType *byte, hchan <-chan any, elem *any) bool$/;"	f
chanrecv2	./runtime/chan.go	/^func chanrecv2(t *chantype, c *hchan, elem unsafe.Pointer) (received bool) {$/;"	f
chansend	./reflect/value.go	/^func chansend(t *rtype, ch unsafe.Pointer, val unsafe.Pointer, nb bool) bool$/;"	f
chansend	./runtime/chan.go	/^func chansend(t *chantype, c *hchan, ep unsafe.Pointer, block bool, callerpc uintptr) bool {$/;"	f
chansend1	./cmd/compile/internal/gc/builtin/runtime.go	/^func chansend1(chanType *byte, hchan chan<- any, elem *any)$/;"	f
chansend1	./runtime/chan.go	/^func chansend1(t *chantype, c *hchan, elem unsafe.Pointer) {$/;"	f
chantype	./runtime/type.go	/^type chantype struct {$/;"	t
char59	./net/dnsname_test.go	/^	var char59 = ""$/;"	v
char63	./net/dnsname_test.go	/^	var char63 = ""$/;"	v
char64	./net/dnsname_test.go	/^	var char64 = ""$/;"	v
charGroup	./regexp/syntax/parse.go	/^type charGroup struct {$/;"	t
characterTests	./encoding/xml/xml_test.go	/^var characterTests = []struct {$/;"	v
charntorune	./runtime/rune.go	/^func charntorune(s string) (rune, int) {$/;"	f
chars	./syscall/srpc_nacl.go	/^	\/\/ the right type chars.  We'll take most any size.$/;"	t
chars	./unicode/maketables.go	/^var chars = make([]Char, MaxChar+1)$/;"	v
charset	./cmd/compile/internal/big/intconv.go	/^func charset(ch rune) string {$/;"	f
charset	./math/big/intconv.go	/^func charset(ch rune) string {$/;"	f
charsetError	./net/mail/message.go	/^type charsetError string$/;"	t
charsetReader	./cmd/go/discovery.go	/^func charsetReader(charset string, input io.Reader) (io.Reader, error) {$/;"	f
chasejmp	./cmd/compile/internal/gc/popt.go	/^func chasejmp(p *obj.Prog, jmploop *int) *obj.Prog {$/;"	f
chcopy	./cmd/yacc/yacc.go	/^func chcopy(q string) string {$/;"	f
chdir	./syscall/exec_solaris.go	/^func chdir(path uintptr) (err Errno)$/;"	f
chdir	./syscall/fs_nacl.go	/^func chdir(path string) error {$/;"	f
chdir	./syscall/zsyscall_plan9_386.go	/^func chdir(path string) (err error) {$/;"	f
chdir	./syscall/zsyscall_plan9_amd64.go	/^func chdir(path string) (err error) {$/;"	f
chdirEnv	./syscall/fs_nacl.go	/^func chdirEnv() {$/;"	f
cheapexpr	./cmd/compile/internal/gc/subr.go	/^func cheapexpr(n *Node, init **NodeList) *Node {$/;"	f
check	./bytes/buffer_test.go	/^func check(t *testing.T, testname string, buf *Buffer, s string) {$/;"	f
check	./cmd/compile/internal/gc/closure.go	/^		\/\/ type check the & of closed variables outside the closure,$/;"	t
check	./cmd/compile/internal/gc/closure.go	/^	\/\/ ready to type check code yet; we'll check it later, because the$/;"	t
check	./cmd/compile/internal/gc/typecheck.go	/^		\/\/ type check failed; leave empty func$/;"	t
check	./cmd/compile/internal/gc/typecheck.go	/^	\/\/ cannot type check until all the source has been parsed$/;"	t
check	./cmd/compile/internal/gc/typecheck.go	/^ * type check assignment.$/;"	t
check	./cmd/compile/internal/gc/typecheck.go	/^ * type check composite$/;"	t
check	./cmd/compile/internal/gc/typecheck.go	/^ * type check function definition$/;"	t
check	./cmd/compile/internal/gc/typecheck.go	/^ * type check node *np.$/;"	t
check	./cmd/compile/internal/gc/typecheck.go	/^ * type check the whole tree of an expression.$/;"	t
check	./cmd/compile/internal/gc/walk.go	/^	\/\/ is handled during type check (OCMPSTR etc).$/;"	t
check	./cmd/cover/testdata/main.go	/^func check(line, count uint32) {$/;"	f
check	./cmd/fix/typecheck.go	/^			\/\/ Repeat type check for each case with more precise$/;"	t
check	./cmd/fix/typecheck.go	/^	\/\/ The main type check is a recursive algorithm implemented$/;"	t
check	./cmd/fix/typecheck.go	/^\/\/ a full type check, but the type checker is expected to$/;"	t
check	./cmd/go/go_test.go	/^func (tg *testgoData) check(err error) {$/;"	f
check	./cmd/vet/types.go	/^			return true \/\/ Probably a type check problem.$/;"	t
check	./cmd/vet/types.go	/^			return true \/\/ probably a type check problem$/;"	t
check	./cmd/vet/types.go	/^func (pkg *Package) check(fs *token.FileSet, astFiles []*ast.File) error {$/;"	f
check	./fmt/stringer_test.go	/^func check(t *testing.T, got, want string) {$/;"	f
check	./go/printer/printer_test.go	/^func check(t *testing.T, source, golden string, mode checkMode) {$/;"	f
check	./go/types/expr.go	/^		\/\/ will be processed at the end of the type check.$/;"	t
check	./image/jpeg/reader_test.go	/^func check(bounds image.Rectangle, pix0, pix1 []byte, stride0, stride1 int) error {$/;"	f
check	./log/syslog/syslog_test.go	/^func check(t *testing.T, in, out string) {$/;"	f
check	./net/http/cgi/host_test.go	/^func check(t *testing.T) {$/;"	f
check	./net/http/transport_test.go	/^func (tcs *testConnSet) check(t *testing.T) {$/;"	f
check	./os/user/user_test.go	/^func check(t *testing.T) {$/;"	f
check	./runtime/debug/stack_test.go	/^func check(t *testing.T, line, has string) {$/;"	f
check	./runtime/hash_test.go	/^func (s *HashSet) check(t *testing.T) {$/;"	f
check	./runtime/memmove_arm64.s	/^check:$/;"	l
check	./runtime/memmove_ppc64x.s	/^check:$/;"	l
check	./runtime/runtime1.go	/^func check() {$/;"	f
check	./runtime/sys_linux_arm.s	/^check:$/;"	l
check	./sync/cond.go	/^func (c *copyChecker) check() {$/;"	f
check	./text/tabwriter/tabwriter_test.go	/^func check(t *testing.T, testname string, minwidth, tabwidth, padding int, padchar byte, flags uint, src, expected string) {$/;"	f
check2ndField	./reflect/all_test.go	/^func check2ndField(x interface{}, offs uintptr, t *testing.T) {$/;"	f
checkAssignStmt	./cmd/vet/assign.go	/^func checkAssignStmt(f *File, node ast.Node) {$/;"	f
checkAtomicAddAssignment	./cmd/vet/atomic.go	/^func (f *File) checkAtomicAddAssignment(left ast.Expr, call *ast.CallExpr) {$/;"	f
checkAtomicAssignment	./cmd/vet/atomic.go	/^func checkAtomicAssignment(f *File, node ast.Node) {$/;"	f
checkBool	./cmd/vet/bool.go	/^func checkBool(f *File, n ast.Node) {$/;"	f
checkBytes	./cmd/compile/internal/big/int_test.go	/^func checkBytes(b []byte) bool {$/;"	f
checkBytes	./math/big/int_test.go	/^func checkBytes(b []byte) bool {$/;"	f
checkCanonicalFieldTag	./cmd/vet/structtag.go	/^func checkCanonicalFieldTag(f *File, node ast.Node) {$/;"	f
checkCanonicalMethod	./cmd/vet/method.go	/^func checkCanonicalMethod(f *File, node ast.Node) {$/;"	f
checkChainForKeyUsage	./crypto/x509/verify.go	/^func checkChainForKeyUsage(chain []*Certificate, keyUsages []ExtKeyUsage) bool {$/;"	f
checkChainSSLServerPolicy	./crypto/x509/root_windows.go	/^func checkChainSSLServerPolicy(c *Certificate, chainCtx *syscall.CertChainContext, opts *VerifyOptions) error {$/;"	f
checkChainTrustStatus	./crypto/x509/root_windows.go	/^func checkChainTrustStatus(c *Certificate, chainCtx *syscall.CertChainContext) error {$/;"	f
checkConnErrorWriter	./net/http/server.go	/^type checkConnErrorWriter struct {$/;"	t
checkCopyLocks	./cmd/vet/copylock.go	/^func checkCopyLocks(f *File, node ast.Node) {$/;"	f
checkCopyLocksFunc	./cmd/vet/copylock.go	/^func checkCopyLocksFunc(f *File, name string, recv *ast.FieldList, typ *ast.FuncType) {$/;"	f
checkCopyLocksRange	./cmd/vet/copylock.go	/^func checkCopyLocksRange(f *File, r *ast.RangeStmt) {$/;"	f
checkCopyLocksRangeVar	./cmd/vet/copylock.go	/^func checkCopyLocksRangeVar(f *File, rtok token.Token, e ast.Expr) {$/;"	f
checkCoverage	./cmd/go/go_test.go	/^func checkCoverage(tg *testgoData, data string) {$/;"	f
checkDistribution	./net/dnsclient_test.go	/^func checkDistribution(t *testing.T, data []*SRV, margin float64) {$/;"	f
checkDualStackAddrFamily	./net/listen_test.go	/^func checkDualStackAddrFamily(fd *netFD) error {$/;"	f
checkDualStackSecondListener	./net/listen_test.go	/^func checkDualStackSecondListener(network, address string, err, xerr error) error {$/;"	f
checkETag	./net/http/fs.go	/^func checkETag(w ResponseWriter, r *Request, modtime time.Time) (rangeReq string, done bool) {$/;"	f
checkErr	./net/http/client_test.go	/^	var checkErr error$/;"	v
checkError	./go/scanner/scanner_test.go	/^func checkError(t *testing.T, src string, tok token.Token, pos int, lit, err string) {$/;"	f
checkErrorPredicate	./os/error_test.go	/^func checkErrorPredicate(predName string, pred func(error) bool, err error) string {$/;"	f
checkErrors	./go/parser/error_test.go	/^func checkErrors(t *testing.T, filename string, input interface{}) {$/;"	f
checkExpr	./go/parser/parser.go	/^func (p *parser) checkExpr(x ast.Expr) ast.Expr {$/;"	f
checkExpr	./go/printer/testdata/parser.go	/^func (p *parser) checkExpr(x ast.Expr) ast.Expr {$/;"	f
checkExprOrType	./go/parser/parser.go	/^func (p *parser) checkExprOrType(x ast.Expr) ast.Expr {$/;"	f
checkExprOrType	./go/printer/testdata/parser.go	/^func (p *parser) checkExprOrType(x ast.Expr) ast.Expr {$/;"	f
checkFieldComments	./go/parser/parser_test.go	/^func checkFieldComments(t *testing.T, file *ast.File, fieldname, lead, line string) {$/;"	f
checkFiles	./go/types/check_test.go	/^func checkFiles(t *testing.T, testfiles []string) {$/;"	f
checkFirstListener	./net/listen_test.go	/^func checkFirstListener(network string, ln interface{}) error {$/;"	f
checkFmtPrintfCall	./cmd/vet/print.go	/^func checkFmtPrintfCall(f *File, node ast.Node) {$/;"	f
checkForGNUSparsePAXHeaders	./archive/tar/reader.go	/^func (tr *Reader) checkForGNUSparsePAXHeaders(hdr *Header, headers map[string]string) ([]sparseEntry, error) {$/;"	f
checkForResumption	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) checkForResumption() bool {$/;"	f
checkFunc	./net/http/httptest/recorder_test.go	/^	type checkFunc func(*ResponseRecorder) error$/;"	t
checkGcd	./cmd/compile/internal/big/int_test.go	/^func checkGcd(aBytes, bBytes []byte) bool {$/;"	f
checkGcd	./math/big/int_test.go	/^func checkGcd(aBytes, bBytes []byte) bool {$/;"	f
checkGdbPython	./runtime/runtime-gdb_test.go	/^func checkGdbPython(t *testing.T) {$/;"	f
checkHeader	./cmd/pack/pack.go	/^func checkHeader(fd *os.File) {$/;"	f
checkHeader	./image/png/reader.go	/^func (d *decoder) checkHeader() error {$/;"	f
checkId	./encoding/gob/type.go	/^func checkId(want, got typeId) {$/;"	f
checkIsBestApprox32	./cmd/compile/internal/big/rat_test.go	/^func checkIsBestApprox32(t *testing.T, f float32, r *Rat) bool {$/;"	f
checkIsBestApprox32	./math/big/rat_test.go	/^func checkIsBestApprox32(t *testing.T, f float32, r *Rat) bool {$/;"	f
checkIsBestApprox64	./cmd/compile/internal/big/rat_test.go	/^func checkIsBestApprox64(t *testing.T, f float64, r *Rat) bool {$/;"	f
checkIsBestApprox64	./math/big/rat_test.go	/^func checkIsBestApprox64(t *testing.T, f float64, r *Rat) bool {$/;"	f
checkLastByte	./mime/quotedprintable/writer.go	/^func (w *Writer) checkLastByte() error {$/;"	f
checkLastModified	./net/http/fs.go	/^func checkLastModified(w ResponseWriter, r *Request, modtime time.Time) bool {$/;"	f
checkList	./container/list/list_test.go	/^func checkList(t *testing.T, l *List, es []interface{}) {$/;"	f
checkListLen	./container/list/list_test.go	/^func checkListLen(t *testing.T, l *List, len int) bool {$/;"	f
checkListPointers	./container/list/list_test.go	/^func checkListPointers(t *testing.T, l *List, es []*Element) {$/;"	f
checkLongShift	./cmd/vet/shift.go	/^func checkLongShift(f *File, node ast.Node, x, y ast.Expr) {$/;"	f
checkMarks	./path/filepath/path_test.go	/^func checkMarks(t *testing.T, report bool) {$/;"	f
checkMediaTypeDisposition	./mime/mediatype.go	/^func checkMediaTypeDisposition(s string) error {$/;"	f
checkMode	./go/printer/printer_test.go	/^type checkMode uint$/;"	t
checkMode	./os/os_test.go	/^func checkMode(t *testing.T, path string, mode FileMode) {$/;"	f
checkMul	./cmd/compile/internal/big/int_test.go	/^func checkMul(a, b []byte) bool {$/;"	f
checkMul	./math/big/int_test.go	/^func checkMul(a, b []byte) bool {$/;"	f
checkMulticastListener	./net/listen_test.go	/^func checkMulticastListener(c *UDPConn, ip IP) error {$/;"	f
checkNextPos	./text/scanner/scanner_test.go	/^func checkNextPos(t *testing.T, s *Scanner, offset, line, column int, char rune) {$/;"	f
checkNilFuncComparison	./cmd/vet/nilfunc.go	/^func checkNilFuncComparison(f *File, node ast.Node) {$/;"	f
checkNonLossyRoundtrip32	./cmd/compile/internal/big/rat_test.go	/^func checkNonLossyRoundtrip32(t *testing.T, f float32) {$/;"	f
checkNonLossyRoundtrip32	./math/big/rat_test.go	/^func checkNonLossyRoundtrip32(t *testing.T, f float32) {$/;"	f
checkNonLossyRoundtrip64	./cmd/compile/internal/big/rat_test.go	/^func checkNonLossyRoundtrip64(t *testing.T, f float64) {$/;"	f
checkNonLossyRoundtrip64	./math/big/rat_test.go	/^func checkNonLossyRoundtrip64(t *testing.T, f float64) {$/;"	f
checkPipeRead	./net/pipe_test.go	/^func checkPipeRead(t *testing.T, r io.Reader, data []byte, wantErr error) {$/;"	f
checkPipeWrite	./net/pipe_test.go	/^func checkPipeWrite(t *testing.T, w io.Writer, data []byte, c chan int) {$/;"	f
checkPipeline	./text/template/parse/parse.go	/^func (t *Tree) checkPipeline(pipe *PipeNode, context string) {$/;"	f
checkPos	./go/scanner/scanner_test.go	/^func checkPos(t *testing.T, lit string, p token.Pos, expected token.Position) {$/;"	f
checkPos	./go/token/position_test.go	/^func checkPos(t *testing.T, msg string, got, want Position) {$/;"	f
checkPos	./text/scanner/scanner_test.go	/^func checkPos(t *testing.T, got, want Position) {$/;"	f
checkPrint	./cmd/vet/print.go	/^func (f *File) checkPrint(call *ast.CallExpr, name string, firstArg int) {$/;"	f
checkPrintf	./cmd/vet/print.go	/^func (f *File) checkPrintf(call *ast.CallExpr, name string, formatIndex int) {$/;"	f
checkPub	./crypto/rsa/rsa.go	/^func checkPub(pub *PublicKey) error {$/;"	f
checkQueryStringHandler	./net/http/serve_test.go	/^func checkQueryStringHandler(w ResponseWriter, r *Request) {$/;"	f
checkQuo	./cmd/compile/internal/big/int_test.go	/^func checkQuo(x, y []byte) bool {$/;"	f
checkQuo	./math/big/int_test.go	/^func checkQuo(x, y []byte) bool {$/;"	f
checkRangeLoop	./cmd/vet/rangeloop.go	/^func checkRangeLoop(f *File, node ast.Node) {$/;"	f
checkRedundant	./cmd/vet/bool.go	/^func (op boolOp) checkRedundant(f *File, exprs []ast.Expr) {$/;"	f
checkResult	./encoding/binary/binary_test.go	/^func checkResult(t *testing.T, dir string, order ByteOrder, err error, have, want interface{}) {$/;"	f
checkSameType	./reflect/all_test.go	/^func checkSameType(t *testing.T, x, y interface{}) {$/;"	f
checkSampleDistribution	./math/rand/rand_test.go	/^func checkSampleDistribution(t *testing.T, samples []float64, expected *statsResults) {$/;"	f
checkSampleSliceDistributions	./math/rand/rand_test.go	/^func checkSampleSliceDistributions(t *testing.T, samples []float64, nslices int, expected *statsResults) {$/;"	f
checkScanPos	./text/scanner/scanner_test.go	/^func checkScanPos(t *testing.T, s *Scanner, offset, line, column int, char rune) {$/;"	f
checkSecondListener	./net/listen_test.go	/^func checkSecondListener(network, address string, err error) error {$/;"	f
checkSemi	./go/scanner/scanner_test.go	/^func checkSemi(t *testing.T, line string, mode Mode) {$/;"	f
checkSerialize	./go/token/serialize_test.go	/^func checkSerialize(t *testing.T, p *FileSet) {$/;"	f
checkSetBytes	./cmd/compile/internal/big/int_test.go	/^func checkSetBytes(b []byte) bool {$/;"	f
checkSetBytes	./math/big/int_test.go	/^func checkSetBytes(b []byte) bool {$/;"	f
checkShadow	./cmd/vet/shadow.go	/^func checkShadow(f *File, node ast.Node) {$/;"	f
checkShadowAssignment	./cmd/vet/shadow.go	/^func checkShadowAssignment(f *File, a *ast.AssignStmt) {$/;"	f
checkShadowDecl	./cmd/vet/shadow.go	/^func checkShadowDecl(f *File, d *ast.GenDecl) {$/;"	f
checkShadowing	./cmd/vet/shadow.go	/^func checkShadowing(f *File, ident *ast.Ident) {$/;"	f
checkShift	./cmd/vet/shift.go	/^func checkShift(f *File, node ast.Node) {$/;"	f
checkSignature	./crypto/x509/x509.go	/^func checkSignature(algo SignatureAlgorithm, signed, signature []byte, publicKey crypto.PublicKey) (err error) {$/;"	f
checkSimilarDistribution	./math/rand/rand_test.go	/^func (this *statsResults) checkSimilarDistribution(expected *statsResults) error {$/;"	f
checkSize	./io/ioutil/ioutil_test.go	/^func checkSize(t *testing.T, path string, size int64) {$/;"	f
checkSize	./os/os_test.go	/^func checkSize(t *testing.T, f *File, size int64) {$/;"	f
checkStaleRuntime	./runtime/crash_test.go	/^func checkStaleRuntime(t *testing.T) {$/;"	f
checkSubsetTypes	./database/sql/fakedb_test.go	/^func checkSubsetTypes(args []driver.Value) error {$/;"	f
checkSum	./crypto/md5/md5.go	/^func (d *digest) checkSum() [Size]byte {$/;"	f
checkSum	./crypto/sha1/sha1.go	/^func (d *digest) checkSum() [Size]byte {$/;"	f
checkSum	./crypto/sha256/sha256.go	/^func (d *digest) checkSum() [Size]byte {$/;"	f
checkSum	./crypto/sha512/sha512.go	/^func (d *digest) checkSum() [Size]byte {$/;"	f
checkSuspect	./cmd/vet/bool.go	/^func (op boolOp) checkSuspect(f *File, exprs []ast.Expr) {$/;"	f
checkSymbols	./cmd/nm/nm_test.go	/^func checkSymbols(t *testing.T, nmoutput []byte) {$/;"	f
checkSymbolsFound	./cmd/nm/nm_test.go	/^	var checkSymbolsFound, testDataFound bool$/;"	v
checkTime	./time/format_test.go	/^func checkTime(time Time, test *ParseTest, t *testing.T) {$/;"	f
checkTok	./text/scanner/scanner_test.go	/^func checkTok(t *testing.T, s *Scanner, line int, got, want rune, text string) {$/;"	f
checkType	./cmd/pprof/internal/profile/proto.go	/^func checkType(b *buffer, typ int) error {$/;"	f
checkUTF8	./regexp/syntax/parse.go	/^func checkUTF8(s string) error {$/;"	f
checkUidGid	./os/os_unix_test.go	/^func checkUidGid(t *testing.T, path string, uid, gid int) {$/;"	f
checkUnkeyedLiteral	./cmd/vet/composite.go	/^func checkUnkeyedLiteral(f *File, node ast.Node) {$/;"	f
checkUnreachable	./cmd/vet/deadcode.go	/^func checkUnreachable(f *File, node ast.Node) {$/;"	f
checkUnsafePointer	./cmd/vet/unsafeptr.go	/^func checkUnsafePointer(f *File, node ast.Node) {$/;"	f
checkUnusedResult	./cmd/vet/unused.go	/^func checkUnusedResult(f *File, n ast.Node) {$/;"	f
checkVal	./cmd/cover/testdata/main.go	/^func checkVal(line, count uint32, val int) int {$/;"	f
checkValid	./encoding/json/scanner.go	/^func checkValid(data []byte, scan *scanner) error {$/;"	f
checkWrite	./io/pipe_test.go	/^func checkWrite(t *testing.T, w Writer, data []byte, c chan int) {$/;"	f
checkZeroPanicString	./time/sleep_test.go	/^func checkZeroPanicString(t *testing.T) {$/;"	f
checkaddr	./cmd/internal/obj/pass.go	/^func checkaddr(ctxt *Link, p *Prog, a *Addr) {$/;"	f
checkarglist	./cmd/compile/internal/gc/dcl.go	/^func checkarglist(all *NodeList, input int) *NodeList {$/;"	f
checkassign	./cmd/compile/internal/gc/typecheck.go	/^func checkassign(stmt *Node, n *Node) {$/;"	f
checkassignlist	./cmd/compile/internal/gc/typecheck.go	/^func checkassignlist(stmt *Node, l *NodeList) {$/;"	f
checkassignto	./cmd/compile/internal/gc/typecheck.go	/^func checkassignto(src *Type, dst *Node) {$/;"	f
checkauto	./cmd/compile/internal/gc/plive.go	/^func checkauto(fn *Node, p *obj.Prog, n *Node) {$/;"	f
checkdead	./runtime/proc1.go	/^func checkdead() {$/;"	f
checkdefergo	./cmd/compile/internal/gc/typecheck.go	/^func checkdefergo(n *Node) {$/;"	f
checkdupfields	./cmd/compile/internal/gc/dcl.go	/^func checkdupfields(t *Type, what string) {$/;"	f
checked	./go/types/api.go	/^\/\/ Alternatively, create a new type checked with NewChecker$/;"	t
checkembeddedtype	./cmd/compile/internal/gc/dcl.go	/^func checkembeddedtype(t *Type) {$/;"	f
checkempty	./runtime/mgcwork.go	/^func (b *workbuf) checkempty() {$/;"	f
checker	./cmd/cgo/doc.go	/^a full C parser and type checker that was also aware of any extensions$/;"	t
checker	./cmd/fix/typecheck.go	/^		\/\/ struct fields.  The real type checker will be$/;"	t
checker	./cmd/fix/typecheck.go	/^	\/\/ After is the real type checker.$/;"	t
checker	./cmd/fix/typecheck.go	/^\/\/ Partial type checker.$/;"	t
checker	./go/internal/gcimporter/gcimporter.go	/^	\/\/ package "unsafe" is handled by the type checker$/;"	t
checker	./go/parser/parser.go	/^	\/\/ care because the type checker will do a separate field lookup.$/;"	t
checker	./go/types/api.go	/^\/\/ Config.Check to invoke the type checker for a package.$/;"	t
checker	./go/types/check.go	/^\/\/ A Checker maintains the state of the type checker.$/;"	t
checker	./go/types/example_test.go	/^\/\/ ExampleInfo prints various facts recorded by the type checker in a$/;"	t
checker	./go/types/expr.go	/^on the way down in updateExprType, or at the end of the type checker run,$/;"	t
checker	./go/types/type.go	/^	\/\/ literal we call the general type checker which returns a general Type.$/;"	t
checker	./net/http/filetransport_test.go	/^func checker(t *testing.T) func(string, error) {$/;"	f
checkgo	./cmd/link/internal/ld/lib.go	/^func checkgo() {$/;"	f
checkgoarm	./runtime/os_darwin_arm.go	/^func checkgoarm() {$/;"	f
checkgoarm	./runtime/os_freebsd_arm.go	/^func checkgoarm() {$/;"	f
checkgoarm	./runtime/os_linux_arm.go	/^func checkgoarm() {$/;"	f
checkgoarm	./runtime/os_nacl_arm.go	/^func checkgoarm() {$/;"	f
checkgoarm	./runtime/os_netbsd_arm.go	/^func checkgoarm() {$/;"	f
checkgoarm	./runtime/os_openbsd_arm.go	/^func checkgoarm() {$/;"	f
checkgoto	./cmd/compile/internal/gc/gen.go	/^func checkgoto(from *Node, to *Node) {$/;"	f
checking	./cmd/compile/internal/gc/dcl.go	/^	\/\/ no n->defn because type checking of func header$/;"	t
checking	./cmd/compile/internal/gc/lex.go	/^	obj.Flagcount("W", "debug parse tree after type checking", &Debug['W'])$/;"	t
checking	./cmd/compile/internal/gc/lex.go	/^	obj.Flagcount("w", "debug type checking", &Debug['w'])$/;"	t
checking	./cmd/compile/internal/gc/syntax.go	/^	OMAKE      \/\/ make(List) (before type checking converts to one of the following)$/;"	t
checking	./cmd/cover/cover.go	/^		\/\/ but without type checking we can't and the likelihood of it being$/;"	t
checking	./cmd/vet/types.go	/^	\/\/ There must be no arguments. Already verified by type checking, but be thorough.$/;"	t
checking	./go/ast/scope.go	/^\/\/	Typ     *Scope            (used as method scope during type checking - transient)$/;"	t
checking	./go/types/api.go	/^	\/\/ during type checking; err has dynamic type Error.$/;"	t
checking	./go/types/api.go	/^\/\/ A Config specifies the configuration for type checking.$/;"	t
checking	./go/types/expr.go	/^		\/\/ or until the end of type checking$/;"	t
checking	./go/types/expr.go	/^\/\/ exprInternal contains the core of type checking of expressions.$/;"	t
checking	./go/types/operand.go	/^\/\/ An operand represents an intermediate value during type checking.$/;"	t
checking	./go/types/typexpr.go	/^\/\/ typExprInternal drives type checking of types.$/;"	t
checklabels	./cmd/compile/internal/gc/gen.go	/^func checklabels() {$/;"	f
checklvalue	./cmd/compile/internal/gc/typecheck.go	/^func checklvalue(n *Node, verb string) {$/;"	f
checkmake	./cmd/compile/internal/gc/typecheck.go	/^func checkmake(t *Type, arg string, n *Node) int {$/;"	f
checkmcount	./runtime/proc1.go	/^func checkmcount() {$/;"	f
checknil	./cmd/compile/internal/gc/subr.go	/^func checknil(x *Node, init **NodeList) {$/;"	f
checknonempty	./runtime/mgcwork.go	/^func (b *workbuf) checknonempty() {$/;"	f
checkparam	./cmd/compile/internal/gc/plive.go	/^func checkparam(fn *Node, p *obj.Prog, n *Node) {$/;"	f
checkpool	./cmd/internal/obj/arm/asm5.go	/^func checkpool(ctxt *obj.Link, p *obj.Prog, sz int) bool {$/;"	f
checkpool	./cmd/internal/obj/arm64/asm7.go	/^func checkpool(ctxt *obj.Link, p *obj.Prog, skip int) {$/;"	f
checkprog	./cmd/compile/internal/gc/plive.go	/^func checkprog(fn *Node, p *obj.Prog) {$/;"	f
checkptxt	./cmd/compile/internal/gc/plive.go	/^func checkptxt(fn *Node, firstp *obj.Prog) {$/;"	f
checkreturn	./cmd/compile/internal/gc/typecheck.go	/^func checkreturn(fn *Node) {$/;"	f
checks	./cmd/fix/typecheck.go	/^\/\/ typecheck type checks the AST f assuming the information in cfg.$/;"	t
checksliceconst	./cmd/compile/internal/gc/typecheck.go	/^func checksliceconst(lo *Node, hi *Node) int {$/;"	f
checksliceindex	./cmd/compile/internal/gc/typecheck.go	/^func checksliceindex(l *Node, r *Node, tp *Type) int {$/;"	f
checkstrdata	./cmd/link/internal/ld/data.go	/^func checkstrdata() {$/;"	f
checksum	./archive/tar/common.go	/^func checksum(header []byte) (unsigned int64, signed int64) {$/;"	f
checksum	./hash/adler32/adler32_test.go	/^func checksum(p []byte) uint32 {$/;"	f
checksumReader	./archive/zip/reader.go	/^type checksumReader struct {$/;"	t
checkwidth	./cmd/compile/internal/gc/align.go	/^func checkwidth(t *Type) {$/;"	f
chfind	./cmd/yacc/yacc.go	/^func chfind(t int, s string) int {$/;"	f
child	./net/http/fcgi/child.go	/^type child struct {$/;"	t
child	./runtime/heapdump.go	/^	var child childInfo$/;"	v
child	./runtime/sys_linux_arm64.s	/^child:$/;"	l
childChains	./crypto/x509/verify.go	/^		var childChains [][]*Certificate$/;"	v
childInfo	./runtime/heapdump.go	/^type childInfo struct {$/;"	t
childProcess	./crypto/tls/handshake_client_test.go	/^	var childProcess *exec.Cmd$/;"	v
childProcess	./crypto/tls/handshake_server_test.go	/^	var childProcess *exec.Cmd$/;"	v
children	./runtime/runtime-gdb.py	/^	def children(self):$/;"	m	class:ChanTypePrinter
children	./runtime/runtime-gdb.py	/^	def children(self):$/;"	m	class:MapTypePrinter
children	./runtime/runtime-gdb.py	/^	def children(self):$/;"	m	class:SliceTypePrinter
chipfloat5	./cmd/internal/obj/arm/asm5.go	/^func chipfloat5(ctxt *obj.Link, e float64) int {$/;"	f
chipfloat7	./cmd/internal/obj/arm64/asm7.go	/^func chipfloat7(ctxt *obj.Link, e float64) int {$/;"	f
chipzero5	./cmd/internal/obj/arm/asm5.go	/^func chipzero5(ctxt *obj.Link, e float64) int {$/;"	f
chkStat	./os/exec/lp_windows.go	/^func chkStat(file string) error {$/;"	f
chksectoff	./cmd/link/internal/ld/pe.go	/^func chksectoff(h *IMAGE_SECTION_HEADER, off int64) {$/;"	f
chksectseg	./cmd/link/internal/ld/pe.go	/^func chksectseg(h *IMAGE_SECTION_HEADER, s *Segment) {$/;"	f
choice	./reflect/all_test.go	/^type choice struct {$/;"	t
chrisBirthday	./database/sql/sql_test.go	/^var chrisBirthday = time.Unix(123456789, 0)$/;"	v
chromiumBasicsTests	./net/http/cookiejar/jar_test.go	/^var chromiumBasicsTests = [...]jarTest{$/;"	v
chromiumDeletionTests	./net/http/cookiejar/jar_test.go	/^var chromiumDeletionTests = [...]jarTest{$/;"	v
chromiumDomainTests	./net/http/cookiejar/jar_test.go	/^var chromiumDomainTests = [...]jarTest{$/;"	v
chroot	./syscall/exec_unix.go	/^	var chroot *byte$/;"	v
chroot1	./syscall/exec_solaris.go	/^func chroot1(path uintptr) (err Errno)$/;"	f
chtmpdir	./os/os_test.go	/^func chtmpdir(t *testing.T) func() {$/;"	f
chtmpdir	./path/filepath/path_test.go	/^func chtmpdir(t *testing.T) (restore func()) {$/;"	f
chunk	./net/http/cgi/host_test.go	/^func chunk(s string) string {$/;"	f
chunk	./net/http/httputil/dump_test.go	/^func chunk(s string) string {$/;"	f
chunk	./net/http/requestwrite_test.go	/^func chunk(s string) string {$/;"	f
chunk	./path/filepath/match.go	/^		var chunk string$/;"	v
chunk	./path/match.go	/^		var chunk string$/;"	v
chunk	./runtime/mapspeed_test.go	/^type chunk [17]byte$/;"	t
chunk	./runtime/mem_linux.go	/^	var chunk uintptr$/;"	v
chunkHeaderAvailable	./net/http/internal/chunked.go	/^func (cr *chunkedReader) chunkHeaderAvailable() bool {$/;"	f
chunkOrderError	./image/png/reader.go	/^var chunkOrderError = FormatError("chunk out of order")$/;"	v
chunkWriter	./net/http/server.go	/^type chunkWriter struct {$/;"	t
chunked	./net/http/transfer.go	/^func chunked(te []string) bool { return len(te) > 0 && te[0] == "chunked" }$/;"	f
chunkedReader	./net/http/internal/chunked.go	/^type chunkedReader struct {$/;"	t
chunkedWriter	./net/http/internal/chunked.go	/^type chunkedWriter struct {$/;"	t
chunks	./runtime/mapspeed_test.go	/^	var chunks [size]chunk$/;"	v
ci	./reflect/all_test.go	/^	var ci struct {$/;"	v
cidrMaskTests	./net/ip_test.go	/^var cidrMaskTests = []struct {$/;"	v
cipher3DES	./crypto/tls/cipher_suites.go	/^func cipher3DES(key, iv []byte, isRead bool) interface{} {$/;"	f
cipherAES	./crypto/tls/cipher_suites.go	/^func cipherAES(key, iv []byte, isRead bool) interface{} {$/;"	f
cipherByKey	./crypto/x509/pem_decrypt.go	/^func cipherByKey(key PEMCipher) *rfc1423Algo {$/;"	f
cipherByName	./crypto/x509/pem_decrypt.go	/^func cipherByName(name string) *rfc1423Algo {$/;"	f
cipherRC4	./crypto/tls/cipher_suites.go	/^func cipherRC4(key, iv []byte, isRead bool) interface{} {$/;"	f
cipherSuite	./crypto/tls/cipher_suites.go	/^type cipherSuite struct {$/;"	t
cipherSuiteById	./crypto/tls/prf_test.go	/^func cipherSuiteById(id uint16) *cipherSuite {$/;"	f
cipherSuites	./crypto/tls/cipher_suites.go	/^var cipherSuites = []*cipherSuite{$/;"	v
cipherSuites	./crypto/tls/common.go	/^func (c *Config) cipherSuites() []uint16 {$/;"	f
cl	./cmd/compile/internal/arm/cgen64.go	/^			var cl gc.Node$/;"	v
cl	./cmd/compile/internal/arm/cgen64.go	/^		var cl gc.Node$/;"	v
cl	./cmd/compile/internal/gc/walk.go	/^			var cl uint8$/;"	v
cl	./net/http/transfer.go	/^	var cl string$/;"	v
clamp	./image/draw/draw.go	/^func clamp(i int32) int32 {$/;"	f
clash	./cmd/yacc/yacc.go	/^				lerrorf(ruleline, "default action causes potential type clash")$/;"	t
class	./cmd/compile/internal/gc/plive.go	/^	var class uint8$/;"	v
classStrings	./debug/elf/elf.go	/^var classStrings = []intName{$/;"	v
class_to_allocnpages	./runtime/msize.go	/^var class_to_allocnpages [_NumSizeClasses]int32$/;"	v
class_to_divmagic	./runtime/msize.go	/^var class_to_divmagic [_NumSizeClasses]divMagic$/;"	v
class_to_size	./runtime/msize.go	/^var class_to_size [_NumSizeClasses]int32$/;"	v
classifyScope	./net/addrselect.go	/^func classifyScope(ip IP) scope {$/;"	f
classnames	./cmd/compile/internal/gc/fmt.go	/^var classnames = []string{$/;"	v
cldebug	./cmd/yacc/yacc.go	/^var cldebug = 0 \/\/ debugging flag for closure$/;"	v
clean	./cmd/compile/internal/amd64/gsubr.go	/^var clean [20]gc.Node$/;"	v
clean	./cmd/compile/internal/arm/gsubr.go	/^var clean [20]gc.Node$/;"	v
clean	./cmd/go/clean.go	/^func clean(p *Package) {$/;"	f
clean	./go/doc/synopsis.go	/^func clean(s string, flags int) string {$/;"	f
cleanAlt	./regexp/syntax/parse.go	/^func cleanAlt(re *Regexp) {$/;"	f
cleanClass	./regexp/syntax/parse.go	/^func cleanClass(rp *[]rune) []rune {$/;"	f
cleanDir	./cmd/go/clean.go	/^var cleanDir = map[string]bool{$/;"	v
cleanExt	./cmd/go/clean.go	/^var cleanExt = map[string]bool{$/;"	v
cleanFile	./cmd/go/clean.go	/^var cleanFile = map[string]bool{$/;"	v
cleanHost	./net/http/request.go	/^func cleanHost(in string) string {$/;"	f
cleanI	./cmd/go/clean.go	/^var cleanI bool \/\/ clean -i flag$/;"	v
cleanPath	./net/http/server.go	/^func cleanPath(p string) string {$/;"	f
cleanR	./cmd/go/clean.go	/^var cleanR bool \/\/ clean -r flag$/;"	v
cleanTest	./cmd/go/test.go	/^func (b *builder) cleanTest(a *action) error {$/;"	f
cleanUp	./net/http/fcgi/child.go	/^func (c *child) cleanUp() {$/;"	f
cleanUpTests	./net/http/fcgi/fcgi_test.go	/^var cleanUpTests = []struct {$/;"	v
cleaned	./cmd/go/clean.go	/^var cleaned = map[*Package]bool{}$/;"	v
cleani	./cmd/compile/internal/amd64/gsubr.go	/^var cleani int = 0$/;"	v
cleani	./cmd/compile/internal/arm/gsubr.go	/^var cleani int = 0$/;"	v
cleantemp	./cmd/compile/internal/gc/order.go	/^func cleantemp(top *NodeList, order *Order) {$/;"	f
cleantempnopop	./cmd/compile/internal/gc/order.go	/^func cleantempnopop(mark *NodeList, order *Order, out **NodeList) {$/;"	f
cleantests	./path/filepath/path_test.go	/^var cleantests = []PathTest{$/;"	v
cleantests	./path/path_test.go	/^var cleantests = []PathTest{$/;"	v
cleanup	./androidtest.bash	/^function cleanup() {$/;"	f
cleanup	./cmd/go/go_test.go	/^func (tg *testgoData) cleanup() {$/;"	f
cleanup	./hash/crc32/crc32_amd64.s	/^cleanup:$/;"	l
cleanup	./hash/crc32/crc32_amd64p32.s	/^cleanup:$/;"	l
cleanupOnePass	./regexp/onepass.go	/^func cleanupOnePass(prog *onePassProg, original *syntax.Prog) {$/;"	f
cleanupTypes	./go/doc/reader.go	/^func (r *reader) cleanupTypes() {$/;"	f
clear	./cmd/compile/internal/big/nat.go	/^func (z nat) clear() {$/;"	f
clear	./math/big/nat.go	/^func (z nat) clear() {$/;"	f
clear	./os/signal/signal.go	/^func (h *handler) clear(sig int) {$/;"	f
clear	./regexp/exec.go	/^func (m *machine) clear(q *queue) {$/;"	f
clear	./regexp/onepass.go	/^func (q *queueOnePass) clear() {$/;"	f
clear	./runtime/hash_test.go	/^func (k *BytesKey) clear() {$/;"	f
clear	./runtime/hash_test.go	/^func (k *EfaceKey) clear() {$/;"	f
clear	./runtime/hash_test.go	/^func (k *IfaceKey) clear() {$/;"	f
clear	./runtime/hash_test.go	/^func (k *Int32Key) clear() {$/;"	f
clear	./runtime/hash_test.go	/^func (k *Int64Key) clear() {$/;"	f
clear	./runtime/mgc.go	/^func (s *bgMarkSignal) clear() {$/;"	f
clear	./text/tabwriter/tabwriter_test.go	/^func (b *buffer) clear() { b.a = b.a[0:0] }$/;"	f
clearCheckmarkSpan	./runtime/mbitmap.go	/^func (h heapBits) clearCheckmarkSpan(size, n, total uintptr) {$/;"	f
clearCheckmarks	./runtime/mgcmark.go	/^func clearCheckmarks() {$/;"	f
clearMimeTypes	./mime/type_test.go	/^func clearMimeTypes() {$/;"	f
clearOffset	./encoding/json/stream.go	/^func clearOffset(err error) {$/;"	f
clearSpecialFlags	./fmt/print.go	/^func (p *pp) clearSpecialFlags() (plusV, sharpV bool) {$/;"	f
clearfat	./cmd/compile/internal/amd64/ggen.go	/^func clearfat(nl *gc.Node) {$/;"	f
clearfat	./cmd/compile/internal/arm/ggen.go	/^func clearfat(nl *gc.Node) {$/;"	f
clearfat	./cmd/compile/internal/arm64/ggen.go	/^func clearfat(nl *gc.Node) {$/;"	f
clearfat	./cmd/compile/internal/ppc64/ggen.go	/^func clearfat(nl *gc.Node) {$/;"	f
clearfat	./cmd/compile/internal/x86/ggen.go	/^func clearfat(nl *gc.Node) {$/;"	f
clearflags	./fmt/format.go	/^func (f *fmt) clearflags() {$/;"	f
clearlabels	./cmd/compile/internal/gc/gen.go	/^func clearlabels() {$/;"	f
clearpools	./runtime/mgc.go	/^func clearpools() {$/;"	f
clen	./syscall/syscall_linux.go	/^func clen(n []byte) int {$/;"	f
clen	./syscall/syscall_nacl.go	/^func clen(n []byte) int {$/;"	f
clen	./syscall/syscall_solaris.go	/^func clen(n []byte) int {$/;"	f
client	./net/rpc/server_test.go	/^	var client *Client$/;"	v
clientCipher	./crypto/tls/handshake_client.go	/^	var clientCipher, serverCipher interface{}$/;"	v
clientCipher	./crypto/tls/handshake_server.go	/^	var clientCipher, serverCipher interface{}$/;"	v
clientCodec	./net/rpc/jsonrpc/client.go	/^type clientCodec struct {$/;"	t
clientConn	./crypto/tls/handshake_client_test.go	/^	var clientConn, serverConn net.Conn$/;"	v
clientConn	./crypto/tls/handshake_server_test.go	/^	var clientConn, serverConn net.Conn$/;"	v
clientErr	./crypto/tls/handshake_server_test.go	/^	var clientErr error$/;"	v
clientFinishedLabel	./crypto/tls/prf.go	/^var clientFinishedLabel = []byte("client finished")$/;"	v
clientHandshake	./crypto/tls/handshake_client.go	/^func (c *Conn) clientHandshake() error {$/;"	f
clientHandshakeState	./crypto/tls/handshake_client.go	/^type clientHandshakeState struct {$/;"	t
clientHash	./crypto/tls/handshake_client.go	/^	var clientHash, serverHash macFunction$/;"	v
clientHash	./crypto/tls/handshake_server.go	/^	var clientHash, serverHash macFunction$/;"	v
clientHeaders	./net/textproto/reader_test.go	/^var clientHeaders = strings.Replace(`Host: golang.org$/;"	v
clientHelloMsg	./crypto/tls/handshake_messages.go	/^type clientHelloMsg struct {$/;"	t
clientKeyExchangeMsg	./crypto/tls/handshake_messages.go	/^type clientKeyExchangeMsg struct {$/;"	t
clientRequest	./net/rpc/jsonrpc/client.go	/^type clientRequest struct {$/;"	t
clientResponse	./net/rpc/jsonrpc/client.go	/^type clientResponse struct {$/;"	t
clientSessionCacheKey	./crypto/tls/handshake_client.go	/^func clientSessionCacheKey(serverAddr net.Addr, config *Config) string {$/;"	f
clientSum	./crypto/tls/prf.go	/^func (h finishedHash) clientSum(masterSecret []byte) []byte {$/;"	f
clientTest	./crypto/tls/handshake_client_test.go	/^type clientTest struct {$/;"	t
clip	./image/draw/draw.go	/^func clip(dst Image, r *image.Rectangle, src image.Image, sp *image.Point, mask image.Image, mp *image.Point) {$/;"	f
clipTest	./image/draw/clip_test.go	/^type clipTest struct {$/;"	t
clipTests	./image/draw/clip_test.go	/^var clipTests = []clipTest{$/;"	v
clone	./database/sql/fakedb_test.go	/^func (r *row) clone() *row {$/;"	f
clone	./debug/dwarf/entry.go	/^func (r *Reader) clone() typeReader {$/;"	f
clone	./debug/dwarf/typeunit.go	/^func (tur *typeUnitReader) clone() typeReader {$/;"	f
clone	./mime/type.go	/^func clone(m map[string]string) map[string]string {$/;"	f
clone	./net/http/header.go	/^func (h Header) clone() Header {$/;"	f
clone	./runtime/os_linux.go	/^func clone(flags int32, stk, mm, gg, fn unsafe.Pointer) int32$/;"	f
cloneBytes	./database/sql/convert.go	/^func cloneBytes(b []byte) []byte {$/;"	f
cloneTLSClientConfig	./net/http/transport.go	/^func cloneTLSClientConfig(cfg *tls.Config) *tls.Config {$/;"	f
cloneTLSConfig	./net/http/transport.go	/^func cloneTLSConfig(cfg *tls.Config) *tls.Config {$/;"	f
close	./archive/zip/writer.go	/^func (w *fileWriter) close() error {$/;"	f
close	./builtin/builtin.go	/^func close(c chan<- Type)$/;"	f
close	./cmd/pprof/internal/symbolizer/symbolizer.go	/^func (mt *mappingTable) close() {$/;"	f
close	./compress/flate/deflate.go	/^func (d *compressor) close() error {$/;"	f
close	./database/sql/sql.go	/^func (tx *Tx) close() {$/;"	f
close	./log/syslog/syslog.go	/^func (n *netConn) close() error {$/;"	f
close	./math/all_test.go	/^func close(a, b float64) bool      { return tolerance(a, b, 1e-14) }$/;"	f
close	./mime/multipart/writer.go	/^func (p *part) close() error {$/;"	f
close	./net/http/server.go	/^func (c *conn) close() {$/;"	f
close	./net/http/server.go	/^func (cw *chunkWriter) close() {$/;"	f
close	./net/http/transport.go	/^func (pc *persistConn) close() {$/;"	f
close	./net/parse.go	/^func (f *file) close() { f.file.Close() }$/;"	f
close	./os/exec/exec.go	/^func (c *closeOnce) close() {$/;"	f
close	./os/file_plan9.go	/^func (file *file) close() error {$/;"	f
close	./os/file_unix.go	/^func (file *file) close() error {$/;"	f
close	./os/file_windows.go	/^func (file *file) close() error {$/;"	f
close	./syscall/exec_solaris.go	/^func close(fd uintptr) (err Errno)$/;"	f
close	./syscall/fd_nacl.go	/^func (*defaultFileImpl) close() error                      { return nil }$/;"	f
close	./syscall/fd_nacl.go	/^func (f *naclFile) close() error {$/;"	f
close	./syscall/fd_nacl.go	/^func (f *pipeFile) close() error {$/;"	f
close	./syscall/fs_nacl.go	/^func (f *nullFile) close() error                               { return nil }$/;"	f
close	./syscall/fs_nacl.go	/^func (f *zeroFile) close() error                               { return nil }$/;"	f
close	./syscall/fs_nacl.go	/^func (f randomFile) close() error {$/;"	f
close	./syscall/net_nacl.go	/^func (f *netFile) close() error {$/;"	f
close	./syscall/net_nacl.go	/^func (q *queue) close() {$/;"	f
close	./unicode/maketables.go	/^func (r *reader) close() {$/;"	f
closeBody	./net/http/request.go	/^func (r *Request) closeBody() {$/;"	f
closeChecker	./net/http/requestwrite_test.go	/^type closeChecker struct {$/;"	t
closeDB	./database/sql/sql_test.go	/^func closeDB(t testing.TB, db *DB) {$/;"	f
closeDBLocked	./database/sql/sql.go	/^func (dc *driverConn) closeDBLocked() func() error {$/;"	f
closeDescriptors	./os/exec/exec.go	/^func (c *Cmd) closeDescriptors(closers []io.Closer) {$/;"	f
closeDot	./net/textproto/reader.go	/^func (r *Reader) closeDot() {$/;"	f
closeDot	./net/textproto/writer.go	/^func (w *Writer) closeDot() {$/;"	f
closeLabelScope	./go/parser/parser.go	/^func (p *parser) closeLabelScope() {$/;"	f
closeLabelScope	./go/printer/testdata/parser.go	/^func (p *parser) closeLabelScope() {$/;"	f
closeLocked	./net/http/transport.go	/^func (pc *persistConn) closeLocked() {$/;"	f
closeNotify	./net/http/server.go	/^func (c *conn) closeNotify() <-chan bool {$/;"	f
closeOnce	./os/exec/exec.go	/^type closeOnce struct {$/;"	t
closePrepared	./database/sql/sql.go	/^func (tx *Tx) closePrepared() {$/;"	f
closeRead	./net/fd_plan9.go	/^func (fd *netFD) closeRead() error {$/;"	f
closeRead	./net/fd_unix.go	/^func (fd *netFD) closeRead() error {$/;"	f
closeRead	./net/fd_windows.go	/^func (fd *netFD) closeRead() error {$/;"	f
closeScope	./go/parser/parser.go	/^func (p *parser) closeScope() {$/;"	f
closeScope	./go/printer/testdata/parser.go	/^func (p *parser) closeScope() {$/;"	f
closeScope	./go/types/stmt.go	/^func (check *Checker) closeScope() {$/;"	f
closeUnexpectedFds	./os/exec/exec_test.go	/^func closeUnexpectedFds(t *testing.T, m string) {$/;"	f
closeWrite	./net/fd_plan9.go	/^func (fd *netFD) closeWrite() error {$/;"	f
closeWrite	./net/fd_unix.go	/^func (fd *netFD) closeWrite() error {$/;"	f
closeWrite	./net/fd_windows.go	/^func (fd *netFD) closeWrite() error {$/;"	f
closeWriteAndWait	./net/http/server.go	/^func (c *conn) closeWriteAndWait() {$/;"	f
closeWriteTestConn	./net/http/serve_test.go	/^type closeWriteTestConn struct {$/;"	t
closeWriter	./net/http/server.go	/^type closeWriter interface {$/;"	t
closechan	./cmd/compile/internal/gc/builtin/runtime.go	/^func closechan(hchan any)$/;"	f
closechan	./runtime/chan.go	/^func closechan(c *hchan) {$/;"	f
closedPortOrFallbackDelay	./net/dial_test.go	/^	var closedPortOrFallbackDelay time.Duration$/;"	v
closedRequestBodyEarly	./net/http/server.go	/^func (w *response) closedRequestBodyEarly() bool {$/;"	f
closefd	./runtime/os3_solaris.go	/^func closefd(fd int32) int32 {$/;"	f
closefd	./runtime/os_nacl.go	/^func closefd(fd int32) int32$/;"	f
closefd	./runtime/os_plan9.go	/^func closefd(fd int32) int32$/;"	f
closefd	./runtime/os_windows.go	/^func closefd(fd int32) int32 {$/;"	f
closefd	./runtime/stubs2.go	/^func closefd(fd int32) int32$/;"	f
closefd	./time/sys_plan9.go	/^func closefd(fd uintptr) {$/;"	f
closefd	./time/sys_unix.go	/^func closefd(fd uintptr) {$/;"	f
closefd	./time/sys_windows.go	/^func closefd(fd uintptr) {$/;"	f
closeonexec	./runtime/netpoll_epoll.go	/^func closeonexec(fd int32)$/;"	f
closeonexec	./runtime/netpoll_kqueue.go	/^func closeonexec(fd int32)$/;"	f
closeonexec	./runtime/os1_nacl.go	/^func closeonexec(int32)                                   {}$/;"	f
closer	./io/pipe_test.go	/^type closer interface {$/;"	t
closerFunc	./net/http/transport_test.go	/^type closerFunc func() error$/;"	t
closing	./database/sql/sql.go	/^	var closing []*driverConn$/;"	v
closure	./cmd/yacc/yacc.go	/^func closure(i int) {$/;"	f
closurebody	./cmd/compile/internal/gc/closure.go	/^func closurebody(body *NodeList) *Node {$/;"	f
closurehdr	./cmd/compile/internal/gc/closure.go	/^func closurehdr(ntype *Node) {$/;"	f
closurename	./cmd/compile/internal/gc/closure.go	/^func closurename(n *Node) *Sym {$/;"	f
closurename_closgen	./cmd/compile/internal/gc/closure.go	/^var closurename_closgen int$/;"	v
clset	./cmd/yacc/yacc.go	/^var clset Lkset \/\/ temporary storage for lookahead computations$/;"	v
cm	./image/png/reader.go	/^	var cm color.Model$/;"	v
cmalloc	./runtime/cgocall.go	/^func cmalloc(n uintptr) unsafe.Pointer {$/;"	f
cmd	./cmd/compile/internal/gc/lex.go	/^	var cmd, verb, name string$/;"	v
cmd	./cmd/go/testflag.go	/^	var cmd Command$/;"	v
cmd	./net/smtp/smtp.go	/^func (c *Client) cmd(expectCode int, format string, args ...interface{}) (int, string, error) {$/;"	f
cmdCache	./cmd/go/pkg.go	/^var cmdCache = map[string]*Package{}$/;"	v
cmdClean	./cmd/go/clean.go	/^var cmdClean = &Command{$/;"	v
cmdDoc	./cmd/go/doc.go	/^var cmdDoc = &Command{$/;"	v
cmdEnv	./cmd/go/env.go	/^var cmdEnv = &Command{$/;"	v
cmdFix	./cmd/go/fix.go	/^var cmdFix = &Command{$/;"	v
cmdFlags	./cmd/pprof/internal/driver/interactive.go	/^func cmdFlags(prof *profile.Profile, input []string, ui plugin.UI, f *flags) (*flags, error) {$/;"	f
cmdFmt	./cmd/go/fmt.go	/^var cmdFmt = &Command{$/;"	v
cmdGenerate	./cmd/go/generate.go	/^var cmdGenerate = &Command{$/;"	v
cmdGet	./cmd/go/get.go	/^var cmdGet = &Command{$/;"	v
cmdList	./cmd/go/list.go	/^var cmdList = &Command{$/;"	v
cmdRun	./cmd/go/run.go	/^var cmdRun = &Command{$/;"	v
cmdStrings	./debug/macho/macho.go	/^var cmdStrings = []intName{$/;"	v
cmdTest	./cmd/go/test.go	/^var cmdTest = &Command{$/;"	v
cmdTool	./cmd/go/tool.go	/^var cmdTool = &Command{$/;"	v
cmdVersion	./cmd/go/version.go	/^var cmdVersion = &Command{$/;"	v
cmdVet	./cmd/go/vet.go	/^var cmdVet = &Command{$/;"	v
cmdbuf	./net/smtp/smtp_test.go	/^		var cmdbuf bytes.Buffer$/;"	v
cmdbuf	./net/smtp/smtp_test.go	/^	var cmdbuf bytes.Buffer$/;"	v
cmddat	./debug/macho/file.go	/^		var cmddat []byte$/;"	v
cmdline	./expvar/expvar.go	/^func cmdline() interface{} {$/;"	f
cmdline	./syscall/exec_windows.go	/^	var cmdline string$/;"	v
cmdp	./cmd/link/internal/ld/ldmacho.go	/^	var cmdp []byte$/;"	v
cmds	./cmd/pprof/internal/commands/commands.go	/^	var cmds []string$/;"	v
cmdsz	./cmd/link/internal/ld/ldmacho.go	/^	var cmdsz uint32$/;"	v
cmdtab	./cmd/dist/main.go	/^var cmdtab = []struct {$/;"	v
cmdtest	./cmd/dist/test.go	/^func cmdtest() {$/;"	f
cmp	./cmd/compile/internal/big/nat.go	/^func (x nat) cmp(y nat) (r int) {$/;"	f
cmp	./cmd/compile/internal/gc/typecheck.go	/^	var cmp Node$/;"	v
cmp	./cmd/internal/obj/arm/asm5.go	/^func cmp(a int, b int) bool {$/;"	f
cmp	./cmd/internal/obj/arm64/asm7.go	/^func cmp(a int, b int) bool {$/;"	f
cmp	./cmd/internal/obj/ppc64/asm9.go	/^func cmp(a int, b int) bool {$/;"	f
cmp	./image/image_test.go	/^func cmp(t *testing.T, cm color.Model, c0, c1 color.Color) bool {$/;"	f
cmp	./math/big/nat.go	/^func (x nat) cmp(y nat) (r int) {$/;"	f
cmp64	./cmd/compile/internal/arm/cgen64.go	/^func cmp64(nl *gc.Node, nr *gc.Node, op int, likely int, to *obj.Prog) {$/;"	f
cmp64	./cmd/compile/internal/x86/cgen64.go	/^func cmp64(nl *gc.Node, nr *gc.Node, op int, likely int, to *obj.Prog) {$/;"	f
cmpGoVersion	./cmd/go/get.go	/^func cmpGoVersion(x, y string) int {$/;"	f
cmpStruct	./text/template/exec_test.go	/^	var cmpStruct = struct {$/;"	v
cmpTest	./text/template/exec_test.go	/^type cmpTest struct {$/;"	t
cmpTests	./cmd/compile/internal/big/nat_test.go	/^var cmpTests = []struct {$/;"	v
cmpTests	./math/big/nat_test.go	/^var cmpTests = []struct {$/;"	v
cmpTests	./text/template/exec_test.go	/^var cmpTests = []cmpTest{$/;"	v
cmpZero	./go/constant/value.go	/^func cmpZero(x int, op token.Token) bool {$/;"	f
cmplxdiv	./cmd/compile/internal/gc/const.go	/^func cmplxdiv(v *Mpcplx, rv *Mpcplx) {$/;"	f
cmplxmpy	./cmd/compile/internal/gc/const.go	/^func cmplxmpy(v *Mpcplx, rv *Mpcplx) {$/;"	f
cmppsOps	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^var cmppsOps = []string{$/;"	v
cmpslit	./cmd/compile/internal/gc/const.go	/^func cmpslit(l, r *Node) int {$/;"	f
cmpstackvar	./cmd/compile/internal/gc/pgen.go	/^func cmpstackvar(a *Node, b *Node) int {$/;"	f
cmpstring	./cmd/compile/internal/gc/builtin/runtime.go	/^func cmpstring(string, string) int$/;"	f
cmpstring	./runtime/noasm.go	/^func cmpstring(s1, s2 string) int {$/;"	f
cmsgAlignOf	./syscall/sockcmsg_unix.go	/^func cmsgAlignOf(salen int) int {$/;"	f
cmsgData	./syscall/sockcmsg_unix.go	/^func cmsgData(h *Cmsghdr) unsafe.Pointer {$/;"	f
cmykModel	./image/color/ycbcr.go	/^func cmykModel(c Color) Color {$/;"	f
cname	./cmd/cgo/gcc.go	/^func cname(s string) string {$/;"	f
cnames5	./cmd/internal/obj/arm/anames5.go	/^var cnames5 = []string{$/;"	v
cnames7	./cmd/internal/obj/arm64/anames7.go	/^var cnames7 = []string{$/;"	v
cnames9	./cmd/internal/obj/ppc64/anames9.go	/^var cnames9 = []string{$/;"	v
cnode	./go/format/format.go	/^	var cnode *printer.CommentedNode$/;"	v
cnt	./cmd/internal/obj/ld.go	/^	var cnt [LOG]int32$/;"	v
cnt	./runtime/crash_cgo_test.go	/^var cnt int$/;"	v
code	./regexp/testdata/testregex.c	/^static const struct { int code; char* name; } codes[] =$/;"	m	struct:__anon1	file:
code1	./regexp/syntax/perl_groups.go	/^var code1 = []rune{ \/* \\d *\/$/;"	v
code10	./regexp/syntax/perl_groups.go	/^var code10 = []rune{ \/* [:graph:] *\/$/;"	v
code11	./regexp/syntax/perl_groups.go	/^var code11 = []rune{ \/* [:lower:] *\/$/;"	v
code12	./regexp/syntax/perl_groups.go	/^var code12 = []rune{ \/* [:print:] *\/$/;"	v
code13	./regexp/syntax/perl_groups.go	/^var code13 = []rune{ \/* [:punct:] *\/$/;"	v
code14	./regexp/syntax/perl_groups.go	/^var code14 = []rune{ \/* [:space:] *\/$/;"	v
code15	./regexp/syntax/perl_groups.go	/^var code15 = []rune{ \/* [:upper:] *\/$/;"	v
code16	./regexp/syntax/perl_groups.go	/^var code16 = []rune{ \/* [:word:] *\/$/;"	v
code17	./regexp/syntax/perl_groups.go	/^var code17 = []rune{ \/* [:xdigit:] *\/$/;"	v
code2	./net/textproto/reader.go	/^		var code2 int$/;"	v
code2	./regexp/syntax/perl_groups.go	/^var code2 = []rune{ \/* \\s *\/$/;"	v
code3	./regexp/syntax/perl_groups.go	/^var code3 = []rune{ \/* \\w *\/$/;"	v
code4	./regexp/syntax/perl_groups.go	/^var code4 = []rune{ \/* [:alnum:] *\/$/;"	v
code5	./regexp/syntax/perl_groups.go	/^var code5 = []rune{ \/* [:alpha:] *\/$/;"	v
code6	./regexp/syntax/perl_groups.go	/^var code6 = []rune{ \/* [:ascii:] *\/$/;"	v
code7	./regexp/syntax/perl_groups.go	/^var code7 = []rune{ \/* [:blank:] *\/$/;"	v
code8	./regexp/syntax/perl_groups.go	/^var code8 = []rune{ \/* [:cntrl:] *\/$/;"	v
code9	./regexp/syntax/perl_groups.go	/^var code9 = []rune{ \/* [:digit:] *\/$/;"	v
codeInit	./encoding/json/bench_test.go	/^func codeInit() {$/;"	f
codeJSON	./encoding/json/bench_test.go	/^var codeJSON []byte$/;"	v
codeNode	./encoding/json/bench_test.go	/^type codeNode struct {$/;"	t
codeOrder	./compress/flate/inflate.go	/^var codeOrder = [...]int{16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15}$/;"	v
codeOrder	./syscall/unzip_nacl.go	/^var codeOrder = [...]int{16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15}$/;"	v
codeResponse	./encoding/json/bench_test.go	/^type codeResponse struct {$/;"	t
codeStruct	./encoding/json/bench_test.go	/^var codeStruct codeResponse$/;"	v
codeWord	./compress/flate/huffman_bit_writer.go	/^		var codeWord int = int(w.codegen[i])$/;"	v
codegenOrder	./compress/flate/huffman_bit_writer.go	/^var codegenOrder = []uint32{16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15}$/;"	v
codemsg	./runtime/os1_darwin.go	/^type codemsg struct {$/;"	t
coder	./encoding/binary/binary.go	/^type coder struct {$/;"	t
codes	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^	var codes [][]byte$/;"	v
codes	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^	var codes [][]byte$/;"	v
codes	./regexp/testdata/testregex.c	/^static const struct { int code; char* name; } codes[] =$/;"	v	typeref:struct:__anon1	file:
coffsym	./cmd/link/internal/ld/pe.go	/^var coffsym []COFFSym$/;"	v
colas	./cmd/compile/internal/gc/dcl.go	/^func colas(left *NodeList, right *NodeList, lno int32) *Node {$/;"	f
colasdefn	./cmd/compile/internal/gc/dcl.go	/^func colasdefn(left *NodeList, defn *Node) {$/;"	f
colasname	./cmd/compile/internal/gc/dcl.go	/^func colasname(n *Node) bool {$/;"	f
collapse	./go/ast/import.go	/^func collapse(prev, next Spec) bool {$/;"	f
collapse	./regexp/syntax/parse.go	/^func (p *parser) collapse(subs []*Regexp, op Op) *Regexp {$/;"	f
collapseTags	./cmd/pprof/internal/report/report.go	/^func collapseTags(ts tags, count int) tags {$/;"	f
collect	./text/template/parse/lex_test.go	/^func collect(t *lexTest, left, right string) (items []item) {$/;"	f
collectArgument	./cmd/asm/internal/lex/input.go	/^func (in *Input) collectArgument(macro *Macro) ([]Token, ScanToken) {$/;"	f
collectEmbeddedMethods	./go/doc/reader.go	/^func (r *reader) collectEmbeddedMethods(mset methodSet, typ *namedType, recvTypeName string, embeddedIsPtr bool, level int, visited embeddedSet) {$/;"	f
collectObjects	./go/types/resolver.go	/^func (check *Checker) collectObjects() {$/;"	f
collectParams	./go/types/typexpr.go	/^func (check *Checker) collectParams(scope *Scope, list *ast.FieldList, variadicOk bool) (params []*Var, variadic bool) {$/;"	f
collector	./go/doc/testdata/testing.go	/^		var collector = make(chan interface{})$/;"	v
collector	./testing/testing.go	/^		var collector = make(chan interface{})$/;"	v
colons	./go/parser/parser.go	/^	var colons [N - 1]token.Pos$/;"	v
colors	./cmd/cover/html.go	/^func colors() template.CSS {$/;"	f
colors	./encoding/json/example_test.go	/^	var colors []Color$/;"	v
cols	./database/sql/fakedb_test.go	/^	var cols []interface{}$/;"	v
column	./go/printer/nodes.go	/^				\/\/ determine if the type column must be kept$/;"	t
column	./go/printer/nodes.go	/^\/\/ The keepTypeColumn function determines if the type column of a series of$/;"	t
column	./go/printer/nodes.go	/^\/\/ be moved into the type column if there is no type for any of the values$/;"	t
column	./go/printer/nodes.go	/^\/\/ in the result slice is true if the type column in spec[i] must be kept.$/;"	t
column	./go/printer/nodes.go	/^\/\/ values (V) can be placed in the type column (T) instead. The i'th entry$/;"	t
columnIndex	./database/sql/fakedb_test.go	/^func (t *table) columnIndex(name string) int {$/;"	f
columnType	./database/sql/fakedb_test.go	/^func (db *fakeDB) columnType(table, column string) (typ string, ok bool) {$/;"	f
comm	./go/parser/parser.go	/^	var comm ast.Stmt$/;"	v
comm	./go/printer/testdata/parser.go	/^	var comm ast.Stmt$/;"	v
commaSplit	./bufio/scan_test.go	/^func commaSplit(data []byte, atEOF bool) (advance int, token []byte, err error) {$/;"	f
command	./crypto/tls/handshake_client_test.go	/^	var command []string$/;"	v
command	./crypto/tls/handshake_server_test.go	/^	var command []string$/;"	v
command	./syscall/exec_unix_test.go	/^type command struct {$/;"	t
command	./text/template/parse/parse.go	/^func (t *Tree) command() *CommandNode {$/;"	f
commandHelp	./cmd/pprof/internal/driver/interactive.go	/^func commandHelp(_ []string, ui plugin.UI, f *flags) error {$/;"	f
commandMsg	./cmd/pprof/internal/driver/driver.go	/^	var commandMsg []string$/;"	v
commandTest	./os/exec/lp_windows_test.go	/^type commandTest struct {$/;"	t
commandTests	./os/exec/lp_windows_test.go	/^var commandTests = []commandTest{$/;"	v
commands	./cmd/go/main.go	/^var commands = []*Command{$/;"	v
commands	./cmd/pprof/internal/driver/interactive.go	/^	var commands []string$/;"	v
commas	./bytes/bytes_test.go	/^var commas = "1,2,3,4"$/;"	v
commas	./strings/strings_test.go	/^var commas = "1,2,3,4"$/;"	v
comment	./go/parser/parser.go	/^		var comment *ast.Comment$/;"	v
comment	./go/parser/parser.go	/^		var comment *ast.CommentGroup$/;"	v
comment	./go/printer/testdata/parser.go	/^		var comment *ast.Comment$/;"	v
comment	./go/printer/testdata/parser.go	/^		var comment *ast.CommentGroup$/;"	v
comment	./unicode/maketables.go	/^var comment = map[string]string{$/;"	v
commentBefore	./go/printer/printer.go	/^func (p *printer) commentBefore(next token.Position) bool {$/;"	f
commentEnd	./html/template/transition.go	/^var commentEnd = []byte("-->")$/;"	v
commentEscape	./go/doc/comment.go	/^func commentEscape(w io.Writer, text string, nice bool) {$/;"	f
commentEscaper	./html/template/html.go	/^func commentEscaper(args ...interface{}) string {$/;"	f
commentInfo	./go/printer/printer.go	/^type commentInfo struct {$/;"	t
commentListReader	./go/ast/commentmap.go	/^type commentListReader struct {$/;"	t
commentSizeBefore	./go/printer/printer.go	/^func (p *printer) commentSizeBefore(next token.Position) int {$/;"	f
commentStart	./html/template/transition.go	/^var commentStart = []byte("<!--")$/;"	v
commentText	./cmd/cgo/ast.go	/^func commentText(g *ast.CommentGroup) string {$/;"	f
commentText	./go/parser/parser_test.go	/^func commentText(c *ast.CommentGroup) string {$/;"	f
comments	./cmd/cover/cover.go	/^	var comments []*ast.CommentGroup$/;"	v
comments	./go/ast/ast_test.go	/^var comments = []struct {$/;"	v
comments	./go/ast/filter.go	/^	var comments []*CommentGroup$/;"	v
comments	./go/doc/example.go	/^	var comments []*ast.CommentGroup$/;"	v
comments	./go/printer/printer.go	/^	var comments []*ast.CommentGroup$/;"	v
commentsHaveNewline	./go/printer/printer.go	/^func (p *printer) commentsHaveNewline(list []*ast.Comment) bool {$/;"	f
commit	./html/template/escape.go	/^func (e *escaper) commit() {$/;"	f
common	./cmd/api/testdata/src/pkg/p1/p1.go	/^type common struct {$/;"	t
common	./encoding/gob/debug.go	/^func (deb *debugger) common() CommonType {$/;"	f
common	./go/doc/testdata/testing.go	/^type common struct {$/;"	t
common	./reflect/type.go	/^func (t *rtype) common() *rtype { return t }$/;"	f
common	./testing/testing.go	/^type common struct {$/;"	t
common	./text/template/template.go	/^type common struct {$/;"	t
commonCounter	./crypto/cipher/ctr_aes_test.go	/^var commonCounter = []byte{0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff}$/;"	v
commonHeader	./net/textproto/reader.go	/^var commonHeader = make(map[string]string)$/;"	v
commonIV	./crypto/cipher/common_test.go	/^var commonIV = []byte{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f}$/;"	v
commonInput	./crypto/cipher/common_test.go	/^var commonInput = []byte{$/;"	v
commonKey128	./crypto/cipher/common_test.go	/^var commonKey128 = []byte{0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c}$/;"	v
commonKey192	./crypto/cipher/common_test.go	/^var commonKey192 = []byte{$/;"	v
commonKey256	./crypto/cipher/common_test.go	/^var commonKey256 = []byte{$/;"	v
commonPrefix	./go/doc/comment.go	/^func commonPrefix(a, b string) string {$/;"	f
commonPrefix	./go/printer/printer.go	/^func commonPrefix(a, b string) string {$/;"	f
commonPrefixLen	./net/addrselect.go	/^func commonPrefixLen(a, b IP) (cpl int) {$/;"	f
commonType	./cmd/compile/internal/gc/reflect.go	/^	\/\/	type commonType struct {$/;"	t
common_dcl	./cmd/compile/internal/gc/go.y	/^common_dcl:$/;"	l
commonsize	./cmd/link/internal/ld/decodesym.go	/^func commonsize() int {$/;"	f
commutativeSets	./cmd/vet/bool.go	/^func (op boolOp) commutativeSets(e *ast.BinaryExpr) [][]ast.Expr {$/;"	f
comodoIntermediate1	./crypto/x509/verify_test.go	/^var comodoIntermediate1 = `-----BEGIN CERTIFICATE-----$/;"	v
comodoIntermediateSHA384	./crypto/x509/verify_test.go	/^var comodoIntermediateSHA384 = `-----BEGIN CERTIFICATE-----$/;"	v
comodoRoot	./crypto/x509/verify_test.go	/^var comodoRoot = `-----BEGIN CERTIFICATE-----$/;"	v
compLit	./runtime/symtab_test.go	/^var compLit = []struct { \/\/ 5$/;"	v
compact	./encoding/json/indent.go	/^func compact(dst *bytes.Buffer, src []byte, escape bool) error {$/;"	f
comparableTests	./reflect/all_test.go	/^var comparableTests = []struct {$/;"	v
compare	./os/user/user_test.go	/^func compare(t *testing.T, want, got *User) {$/;"	f
compareAPI	./cmd/api/goapi.go	/^func compareAPI(w io.Writer, features, required, optional, exception []string, allowAdd bool) (ok bool) {$/;"	f
compareErrors	./go/parser/error_test.go	/^func compareErrors(t *testing.T, fset *token.FileSet, expected map[token.Pos]string, found scanner.ErrorList) {$/;"	f
compareFloat32Slices	./math/rand/rand_test.go	/^func compareFloat32Slices(s1, s2 []float32) int {$/;"	f
compareLines	./debug/dwarf/line_test.go	/^func compareLines(a, b []LineEntry) bool {$/;"	f
compareTests	./bytes/compare_test.go	/^var compareTests = []struct {$/;"	v
compareTests	./strings/compare_test.go	/^var compareTests = []struct {$/;"	v
compareUint32Slices	./math/rand/rand_test.go	/^func compareUint32Slices(s1, s2 []uint32) int {$/;"	f
comparison	./go/types/expr.go	/^func (check *Checker) comparison(x, y *operand, op token.Token) {$/;"	f
compatibleType	./encoding/gob/decode.go	/^func (dec *Decoder) compatibleType(fr reflect.Type, fw typeId, inProgress map[reflect.Type]typeId) bool {$/;"	f
compatibleValueTypes	./cmd/pprof/internal/profile/profile.go	/^func compatibleValueTypes(v1, v2 *ValueType) bool {$/;"	f
compf	./regexp/testdata/testregex.c	/^compf(const regex_t* re, const char* xstr, size_t xlen, regdisc_t* disc)$/;"	f	file:
compile	./cmd/compile/internal/gc/pgen.go	/^func compile(fn *Node) {$/;"	f
compile	./go/internal/gcimporter/gcimporter_test.go	/^func compile(t *testing.T, dirname, filename string) string {$/;"	f
compile	./regexp/regexp.go	/^func compile(expr string, mode syntax.Flags, longest bool) (*Regexp, error) {$/;"	f
compile	./regexp/syntax/compile.go	/^func (c *compiler) compile(re *Regexp) frag {$/;"	f
compileCallback	./runtime/syscall_windows.go	/^func compileCallback(fn eface, cleanstack bool) (code uintptr) {$/;"	f
compileCallback	./syscall/syscall_windows.go	/^func compileCallback(fn interface{}, cleanstack bool) uintptr$/;"	f
compileDec	./encoding/gob/decode.go	/^func (dec *Decoder) compileDec(remoteId typeId, ut *userTypeInfo) (engine *decEngine, err error) {$/;"	f
compileEnc	./encoding/gob/encode.go	/^func compileEnc(ut *userTypeInfo, building map[*typeInfo]bool) *encEngine {$/;"	f
compileFocusIgnore	./cmd/pprof/internal/driver/driver.go	/^func compileFocusIgnore(focus, ignore, hide string) (f, i, h *regexp.Regexp, err error) {$/;"	f
compileIgnoreSingle	./encoding/gob/decode.go	/^func (dec *Decoder) compileIgnoreSingle(remoteId typeId) (engine *decEngine, err error) {$/;"	f
compileOnePass	./regexp/onepass.go	/^func compileOnePass(prog *syntax.Prog) (p *onePassProg) {$/;"	f
compileSingle	./encoding/gob/decode.go	/^func (dec *Decoder) compileSingle(remoteId typeId, ut *userTypeInfo) (engine *decEngine, err error) {$/;"	f
compileTagFilter	./cmd/pprof/internal/driver/driver.go	/^func compileTagFilter(filter string, ui plugin.UI) (f func(string, string, int64) bool, err error) {$/;"	f
compileTest	./regexp/all_test.go	/^func compileTest(t *testing.T, expr string, error string) *Regexp {$/;"	f
compileTests	./regexp/syntax/prog_test.go	/^var compileTests = []struct {$/;"	v
compiler	./regexp/syntax/compile.go	/^type compiler struct {$/;"	t
compiling_runtime	./cmd/compile/internal/gc/go.go	/^var compiling_runtime int$/;"	v
compiling_wrappers	./cmd/compile/internal/gc/go.go	/^var compiling_wrappers int$/;"	v
complements	./cmd/internal/obj/arm64/obj7.go	/^var complements = []int16{$/;"	v
complete	./runtime/mgc.go	/^func (s *bgMarkSignal) complete() bool {$/;"	f
complex	./builtin/builtin.go	/^func complex(r, i FloatType) ComplexType$/;"	f
complex128	./builtin/builtin.go	/^type complex128 complex128$/;"	t
complex128	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind complex128 but not type complex128. TODO: We can handle this unsafely.$/;"	t
complex128	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind complex128 but not type complex128. TODO: We can handle this unsafely.$/;"	t
complex128div	./cmd/compile/internal/gc/builtin/runtime.go	/^func complex128div(num complex128, den complex128) (quo complex128)$/;"	f
complex128div	./runtime/complex.go	/^func complex128div(n complex128, d complex128) complex128 {$/;"	f
complex64	./builtin/builtin.go	/^type complex64 complex64$/;"	t
complex64	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind complex64 but not type complex64. TODO: We can handle this unsafely.$/;"	t
complex64	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind complex64 but not type complex64. TODO: We can handle this unsafely.$/;"	t
complexArg	./go/types/builtins.go	/^func (check *Checker) complexArg(x *operand) bool {$/;"	f
complexError	./fmt/scan.go	/^var complexError = errors.New("syntax error scanning complex number")$/;"	v
complexResult	./encoding/gob/codec_test.go	/^var complexResult = []byte{0x07, 0xFE, 0x31, 0x40, 0xFE, 0x33, 0x40}$/;"	v
complexTokens	./fmt/scan.go	/^func (s *ss) complexTokens() (real, imag string) {$/;"	f
complexadd	./cmd/compile/internal/gc/cplx.go	/^func complexadd(op int, nl *Node, nr *Node, res *Node) {$/;"	f
complexbool	./cmd/compile/internal/gc/cplx.go	/^func complexbool(op int, nl, nr, res *Node, wantTrue bool, likely int, to *obj.Prog) {$/;"	f
complexminus	./cmd/compile/internal/gc/cplx.go	/^func complexminus(nl *Node, res *Node) {$/;"	f
complexmul	./cmd/compile/internal/gc/cplx.go	/^func complexmul(nl *Node, nr *Node, res *Node) {$/;"	f
complitexpr	./cmd/compile/internal/gc/go.y	/^complitexpr:$/;"	l
component	./image/jpeg/reader.go	/^type component struct {$/;"	t
componentgen_wb	./cmd/compile/internal/gc/gen.go	/^func componentgen_wb(nr, nl *Node, wb bool) bool {$/;"	f
compositeWhiteList	./cmd/vet/composite.go	/^var compositeWhiteList = flag.Bool("compositewhitelist", true, "use composite white list; for testing only")$/;"	v
composites	./cmd/compile/internal/big/int_test.go	/^var composites = []string{$/;"	v
composites	./math/big/int_test.go	/^var composites = []string{$/;"	v
compound_stmt	./cmd/compile/internal/gc/go.y	/^compound_stmt:$/;"	l
compressionLevel	./compress/flate/deflate.go	/^type compressionLevel struct {$/;"	t
compressor	./archive/zip/register.go	/^func compressor(method uint16) Compressor {$/;"	f
compressor	./compress/flate/deflate.go	/^type compressor struct {$/;"	t
comptype	./cmd/compile/internal/gc/go.y	/^comptype:$/;"	l
computeBuildID	./cmd/go/pkg.go	/^func computeBuildID(p *Package) {$/;"	f
computeDivMagic	./runtime/msize.go	/^func computeDivMagic(d uint32) divMagic {$/;"	f
computeMethodSets	./go/doc/reader.go	/^func (r *reader) computeMethodSets() {$/;"	f
computeOutCtx	./html/template/escape.go	/^func (e *escaper) computeOutCtx(c context, t *template.Template) context {$/;"	f
computePadding	./fmt/format.go	/^func (f *fmt) computePadding(width int) (padding []byte, leftWidth, rightWidth int) {$/;"	f
computeStale	./cmd/go/pkg.go	/^func computeStale(pkgs ...*Package) {$/;"	f
computeThresholds	./cmd/compile/internal/big/calibrate_test.go	/^func computeThresholds() {$/;"	f
computeThresholds	./math/big/calibrate_test.go	/^func computeThresholds() {$/;"	f
computeTotal	./cmd/pprof/internal/report/report.go	/^func computeTotal(prof *profile.Profile, value func(s *profile.Sample) int64) int64 {$/;"	f
con	./cmd/compile/internal/amd64/gsubr.go	/^		var con gc.Node$/;"	v
con	./cmd/compile/internal/arm/gsubr.go	/^			var con gc.Node$/;"	v
con	./cmd/compile/internal/arm/gsubr.go	/^		var con gc.Node$/;"	v
con	./cmd/compile/internal/arm64/ggen.go	/^	var con gc.Node$/;"	v
con	./cmd/compile/internal/arm64/gsubr.go	/^			var con gc.Node$/;"	v
con	./cmd/compile/internal/arm64/gsubr.go	/^		var con gc.Node$/;"	v
con	./cmd/compile/internal/ppc64/gsubr.go	/^			var con gc.Node$/;"	v
con	./cmd/compile/internal/ppc64/gsubr.go	/^		var con gc.Node$/;"	v
con	./cmd/compile/internal/x86/gsubr.go	/^		var con gc.Node$/;"	v
concat	./cmd/compile/internal/gc/syntax.go	/^func concat(a *NodeList, b *NodeList) *NodeList {$/;"	f
concat	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func concat(gen1, gen2 func(func([]byte))) func(func([]byte)) {$/;"	f
concat	./go/types/lookup.go	/^func concat(list []int, i int) []int {$/;"	f
concat	./regexp/syntax/parse.go	/^func (p *parser) concat() *Regexp {$/;"	f
concat3	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func concat3(gen1, gen2, gen3 func(func([]byte))) func(func([]byte)) {$/;"	f
concat4	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func concat4(gen1, gen2, gen3, gen4 func(func([]byte))) func(func([]byte)) {$/;"	f
concatstring2	./cmd/compile/internal/gc/builtin/runtime.go	/^func concatstring2(*[32]byte, string, string) string$/;"	f
concatstring2	./runtime/string.go	/^func concatstring2(buf *tmpBuf, a [2]string) string {$/;"	f
concatstring3	./cmd/compile/internal/gc/builtin/runtime.go	/^func concatstring3(*[32]byte, string, string, string) string$/;"	f
concatstring3	./runtime/string.go	/^func concatstring3(buf *tmpBuf, a [3]string) string {$/;"	f
concatstring4	./cmd/compile/internal/gc/builtin/runtime.go	/^func concatstring4(*[32]byte, string, string, string, string) string$/;"	f
concatstring4	./runtime/string.go	/^func concatstring4(buf *tmpBuf, a [4]string) string {$/;"	f
concatstring5	./cmd/compile/internal/gc/builtin/runtime.go	/^func concatstring5(*[32]byte, string, string, string, string, string) string$/;"	f
concatstring5	./runtime/string.go	/^func concatstring5(buf *tmpBuf, a [5]string) string {$/;"	f
concatstrings	./cmd/compile/internal/gc/builtin/runtime.go	/^func concatstrings(*[32]byte, []string) string$/;"	f
concatstrings	./runtime/string.go	/^func concatstrings(buf *tmpBuf, a []string) string {$/;"	f
concrete	./reflect/all_test.go	/^	var concrete func(*int, int) int$/;"	v
concurrentDBExecTest	./database/sql/sql_test.go	/^type concurrentDBExecTest struct {$/;"	t
concurrentDBQueryTest	./database/sql/sql_test.go	/^type concurrentDBQueryTest struct {$/;"	t
concurrentRandomTest	./database/sql/sql_test.go	/^type concurrentRandomTest struct {$/;"	t
concurrentStmtExecTest	./database/sql/sql_test.go	/^type concurrentStmtExecTest struct {$/;"	t
concurrentStmtQueryTest	./database/sql/sql_test.go	/^type concurrentStmtQueryTest struct {$/;"	t
concurrentTest	./database/sql/sql_test.go	/^type concurrentTest interface {$/;"	t
concurrentTxExecTest	./database/sql/sql_test.go	/^type concurrentTxExecTest struct {$/;"	t
concurrentTxQueryTest	./database/sql/sql_test.go	/^type concurrentTxQueryTest struct {$/;"	t
concurrentTxStmtExecTest	./database/sql/sql_test.go	/^type concurrentTxStmtExecTest struct {$/;"	t
concurrentTxStmtQueryTest	./database/sql/sql_test.go	/^type concurrentTxStmtQueryTest struct {$/;"	t
cond	./cmd/asm/internal/asm/parse.go	/^	var cond string$/;"	v
cond	./runtime/os1_nacl.go	/^	var cond uintptr$/;"	v
condAddrEncoder	./encoding/json/encode.go	/^type condAddrEncoder struct {$/;"	t
condCases	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func condCases(t *testing.T) func(func([]byte)) {$/;"	f
condFatalf	./net/platform_test.go	/^var condFatalf = func() func(*testing.T, string, ...interface{}) {$/;"	v
condfn	./net/http/transport.go	/^func (es *bodyEOFSignal) condfn(err error) error {$/;"	f
condition	./runtime/asm_amd64.s	/^condition:$/;"	l
condition	./runtime/asm_amd64p32.s	/^condition:$/;"	l
conditions	./runtime/softfloat_arm.go	/^var conditions = [10 \/ 2]uint32{$/;"	v
conf	./cmd/cgo/out.go	/^var conf = printer.Config{Mode: printer.SourcePos, Tabwidth: 8}$/;"	v
conf	./go/types/api_test.go	/^	var conf Config$/;"	v
conf	./go/types/check_test.go	/^	var conf Config$/;"	v
conf	./go/types/example_test.go	/^	var conf types.Config$/;"	v
conf	./go/types/issues_test.go	/^	var conf Config$/;"	v
conf	./net/conf.go	/^type conf struct {$/;"	t
config	./go/format/format.go	/^var config = printer.Config{Mode: printer.UseSpaces | printer.TabIndent, Tabwidth: 8}$/;"	v
config	./sync/atomic/value_test.go	/^	var config Value \/\/ holds current server configuration$/;"	v
conflicts	./encoding/xml/typeinfo.go	/^	var conflicts []int$/;"	v
conforming	./mime/mediatype.go	/^\/\/ param as a media type conforming to RFC 2045 and RFC 2616.$/;"	t
conj	./math/cmplx/cmath_test.go	/^var conj = []complex128{$/;"	v
conjSC	./math/cmplx/cmath_test.go	/^var conjSC = []complex128{$/;"	v
conn	./database/sql/sql.go	/^func (db *DB) conn(strategy connReuseStrategy) (*driverConn, error) {$/;"	f
conn	./net/http/fcgi/fcgi.go	/^type conn struct {$/;"	t
conn	./net/http/serve_test.go	/^	var conn net.Conn$/;"	v
conn	./net/http/server.go	/^type conn struct {$/;"	t
conn	./net/net.go	/^type conn struct {$/;"	t
conn	./syscall/net_nacl.go	/^type conn struct {$/;"	t
connAddrs	./net/udp_test.go	/^		var connAddrs = [4]struct {$/;"	v
connAddrs	./net/unix_test.go	/^		var connAddrs = [3]struct{ got, want Addr }{$/;"	v
connAddrs	./net/unix_test.go	/^		var connAddrs = [4]struct{ got, want Addr }{$/;"	v
connFile	./net/file_test.go	/^type connFile interface {$/;"	t
connFromCommand	./crypto/tls/handshake_client_test.go	/^func (test *clientTest) connFromCommand() (conn *recordingConn, child *exec.Cmd, stdin blockingSource, err error) {$/;"	f
connFromCommand	./crypto/tls/handshake_server_test.go	/^func (test *serverTest) connFromCommand() (conn *recordingConn, child *exec.Cmd, err error) {$/;"	f
connID	./net/http/serve_test.go	/^	var connID = map[net.Conn]int{}$/;"	v
connRequest	./database/sql/sql.go	/^type connRequest struct {$/;"	t
connReuseStrategy	./database/sql/sql.go	/^type connReuseStrategy uint8$/;"	t
connStmt	./database/sql/sql.go	/^func (s *Stmt) connStmt() (ci *driverConn, releaseConn func(error), si driver.Stmt, err error) {$/;"	f
connStmt	./database/sql/sql.go	/^type connStmt struct {$/;"	t
connect	./log/syslog/syslog.go	/^func (w *Writer) connect() (err error) {$/;"	f
connect	./net/fd_unix.go	/^func (fd *netFD) connect(la, ra syscall.Sockaddr, deadline time.Time) error {$/;"	f
connect	./net/fd_windows.go	/^func (fd *netFD) connect(la, ra syscall.Sockaddr, deadline time.Time) error {$/;"	f
connect	./runtime/stubs_android.go	/^func connect(fd uintptr, addr unsafe.Pointer, len int32) int32$/;"	f
connect	./syscall/net_nacl.go	/^func (f *netFile) connect(sa Sockaddr) error {$/;"	f
connect	./syscall/syscall_linux_386.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_darwin_386.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_darwin_amd64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_darwin_arm.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_darwin_arm64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_dragonfly_amd64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_freebsd_386.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_freebsd_amd64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_freebsd_arm.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_linux_amd64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_linux_arm.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_linux_arm64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_linux_ppc64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_linux_ppc64le.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_netbsd_386.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_netbsd_amd64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_netbsd_arm.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_openbsd_386.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_openbsd_amd64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_openbsd_arm.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_solaris_amd64.go	/^func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
connect	./syscall/zsyscall_windows.go	/^func connect(s Handle, name unsafe.Pointer, namelen int32) (err error) {$/;"	f
connectEx	./syscall/syscall_windows.go	/^func connectEx(s Handle, name unsafe.Pointer, namelen int32, sendBuf *byte, sendDataLen uint32, bytesSent *uint32, overlapped *Overlapped) (err error) {$/;"	f
connectExFunc	./syscall/syscall_windows.go	/^var connectExFunc struct {$/;"	v
connectMethod	./net/http/transport.go	/^type connectMethod struct {$/;"	t
connectMethodForRequest	./net/http/transport.go	/^func (t *Transport) connectMethodForRequest(treq *transportRequest) (cm connectMethod, err error) {$/;"	f
connectMethodKey	./net/http/transport.go	/^type connectMethodKey struct {$/;"	t
connected	./net/rpc/server.go	/^var connected = "200 Connected to Go RPC"$/;"	v
connectionHeader	./net/http/serve_test.go	/^func (t handlerBodyCloseTest) connectionHeader() string {$/;"	f
connectionOpener	./database/sql/sql.go	/^func (db *DB) connectionOpener() {$/;"	f
connectionRequestQueueSize	./database/sql/sql.go	/^var connectionRequestQueueSize = 1000000$/;"	v
conprop	./cmd/compile/internal/amd64/peep.go	/^func conprop(r0 *gc.Flow) {$/;"	f
conprop	./cmd/compile/internal/x86/peep.go	/^func conprop(r0 *gc.Flow) {$/;"	f
considers	./cmd/link/internal/ld/dwarf.go	/^\/\/ ispubtype considers >= NULLTYPE public$/;"	t
consolidateMultiples	./go/types/lookup.go	/^func consolidateMultiples(list []embeddedType) []embeddedType {$/;"	f
consolidation	./go/types/lookup.go	/^\/\/ TODO(gri) The named type consolidation and seen maps below must be$/;"	t
constDecl	./go/types/decl.go	/^func (check *Checker) constDecl(obj *Const, typ, init ast.Expr) {$/;"	f
constant	./cmd/fix/gotypes_test.go	/^var constant = 23 \/\/ Use of new package name.$/;"	v
constantTimeCopyWrapper	./crypto/subtle/constant_time_test.go	/^func constantTimeCopyWrapper(v int, x, y []byte) []byte {$/;"	f
constdcl	./cmd/compile/internal/gc/go.y	/^constdcl:$/;"	l
constdcl1	./cmd/compile/internal/gc/go.y	/^constdcl1:$/;"	l
constdcl_list	./cmd/compile/internal/gc/go.y	/^constdcl_list:$/;"	l
constiter	./cmd/compile/internal/gc/dcl.go	/^func constiter(vl *NodeList, t *Node, cl *NodeList) *NodeList {$/;"	f
constprop	./cmd/compile/internal/arm/peep.go	/^func constprop(c1 *obj.Addr, v1 *obj.Addr, r *gc.Flow) {$/;"	f
constraints	./crypto/x509/x509.go	/^				var constraints basicConstraints$/;"	v
constraints	./crypto/x509/x509.go	/^				var constraints nameConstraints$/;"	v
constructors	./reflect/all_test.go	/^	\/\/ Check that all the type constructors return concrete *rtype implementations.$/;"	t
consttype	./cmd/compile/internal/gc/const.go	/^func consttype(n *Node) int {$/;"	f
consume	./fmt/scan.go	/^func (s *ss) consume(ok string, accept bool) bool {$/;"	f
consume	./net/mail/message.go	/^func (p *addrParser) consume(c byte) bool {$/;"	f
consumeAddrSpec	./net/mail/message.go	/^func (p *addrParser) consumeAddrSpec() (spec string, err error) {$/;"	f
consumeAtom	./net/mail/message.go	/^func (p *addrParser) consumeAtom(dot bool, permissive bool) (atom string, err error) {$/;"	f
consumeComment	./go/parser/parser.go	/^func (p *parser) consumeComment() (comment *ast.Comment, endline int) {$/;"	f
consumeComment	./go/printer/testdata/parser.go	/^func (p *parser) consumeComment() (comment *ast.Comment, endline int) {$/;"	f
consumeCommentGroup	./go/parser/parser.go	/^func (p *parser) consumeCommentGroup(n int) (comments *ast.CommentGroup, endline int) {$/;"	f
consumeCommentGroup	./go/printer/testdata/parser.go	/^func (p *parser) consumeCommentGroup() (comments *ast.CommentGroup, endline int) {$/;"	f
consumeMediaParam	./mime/mediatype.go	/^func consumeMediaParam(v string) (param, value, rest string) {$/;"	f
consumePhrase	./net/mail/message.go	/^func (p *addrParser) consumePhrase() (phrase string, err error) {$/;"	f
consumeQuotedString	./net/mail/message.go	/^func (p *addrParser) consumeQuotedString() (qs string, err error) {$/;"	f
consumeToken	./mime/mediatype.go	/^func consumeToken(v string) (token, rest string) {$/;"	f
consumeValue	./mime/mediatype.go	/^func consumeValue(v string) (value, rest string) {$/;"	f
consumed	./encoding/gob/debug.go	/^func (deb *debugger) consumed(n int) {$/;"	f
cont	./runtime/sys_darwin_arm.s	/^cont:$/;"	l
cont	./runtime/sys_darwin_arm64.s	/^cont:$/;"	l
container	./cmd/link/internal/ld/pcln.go	/^func container(s *LSym) int {$/;"	f
contains	./cmd/api/goapi.go	/^func contains(list []string, s string) bool {$/;"	f
contains	./cmd/go/test.go	/^func contains(x []string, s string) bool {$/;"	f
contains	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func contains(s string, substrings ...string) bool {$/;"	f
contains	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func contains(s string, substrings ...string) bool {$/;"	f
contains	./cmd/vet/shadow.go	/^func (s Span) contains(pos token.Pos) bool {$/;"	f
contains	./cmd/vet/types.go	/^\/\/ hasMethod reports whether the type contains a method with the given name.$/;"	t
contains	./database/sql/fakedb_test.go	/^func contains(list []string, y string) bool {$/;"	f
contains	./go/ast/filter.go	/^			\/\/ If the type contains filtered elements,$/;"	t
contains	./os/error_plan9.go	/^func contains(s, sep string) bool {$/;"	f
contains	./path/filepath/match_test.go	/^func contains(vector []string, s string) bool {$/;"	f
contains	./regexp/onepass.go	/^func (q *queueOnePass) contains(u uint32) bool {$/;"	f
contains	./runtime/string.go	/^func contains(s, t string) bool {$/;"	f
contains	./strconv/quote.go	/^func contains(s string, c byte) bool {$/;"	f
containsTests	./bytes/bytes_test.go	/^var containsTests = []struct {$/;"	v
content	./net/http/fcgi/fcgi.go	/^func (r *record) content() []byte {$/;"	f
content	./net/http/fcgi/fcgi_test.go	/^		var content []byte$/;"	v
content	./net/http/fs_test.go	/^		var content io.ReadSeeker$/;"	v
contentRange	./net/http/fs.go	/^func (r httpRange) contentRange(size int64) string {$/;"	f
contentType	./html/template/content.go	/^type contentType uint8$/;"	t
contentionzSampleTypes	./cmd/pprof/internal/profile/legacy_profile.go	/^var contentionzSampleTypes = []string{"contentions", "delay"}$/;"	v
context	./encoding/json/stream.go	/^	var context string$/;"	v
context	./go/types/check.go	/^type context struct {$/;"	t
context	./html/template/context.go	/^\/\/ The zero value of type context is the start context for a template that$/;"	t
context	./html/template/context.go	/^type context struct {$/;"	t
context	./regexp/regexp.go	/^func (i *inputBytes) context(pos int) syntax.EmptyOp {$/;"	f
context	./regexp/regexp.go	/^func (i *inputReader) context(pos int) syntax.EmptyOp {$/;"	f
context	./regexp/regexp.go	/^func (i *inputString) context(pos int) syntax.EmptyOp {$/;"	f
context	./runtime/defs_windows_386.go	/^type context struct {$/;"	t
context	./runtime/defs_windows_amd64.go	/^type context struct {$/;"	t
contextAfterText	./html/template/escape.go	/^func contextAfterText(c context, s []byte) (context, int) {$/;"	f
contextName	./cmd/api/goapi.go	/^func contextName(c *build.Context) string {$/;"	f
contexts	./cmd/api/goapi.go	/^var contexts = []*build.Context{$/;"	v
continpc	./cmd/compile/internal/gc/go.go	/^var continpc *obj.Prog$/;"	v
continuation	./mime/mediatype.go	/^	var continuation map[string]map[string]string$/;"	v
continue	./race.bat	/^:continue$/;"	l
controlClause	./go/printer/nodes.go	/^func (p *printer) controlClause(isForStmt bool, init ast.Stmt, expr ast.Expr, post ast.Stmt) {$/;"	f
conv	./cmd/cgo/gcc.go	/^	var conv typeConv$/;"	v
conv	./cmd/compile/internal/gc/walk.go	/^func conv(n *Node, t *Type) *Node {$/;"	f
convI2E	./cmd/compile/internal/gc/builtin/runtime.go	/^func convI2E(elem any) (ret any)$/;"	f
convI2E	./runtime/iface.go	/^func convI2E(i fInterface) (r interface{}) {$/;"	f
convI2I	./cmd/compile/internal/gc/builtin/runtime.go	/^func convI2I(typ *byte, elem any) (ret any)$/;"	f
convI2I	./runtime/iface.go	/^func convI2I(inter *interfacetype, i fInterface) (r fInterface) {$/;"	f
convT2E	./cmd/compile/internal/gc/builtin/runtime.go	/^func convT2E(typ *byte, elem, buf *any) (ret any)$/;"	f
convT2E	./runtime/iface.go	/^func convT2E(t *_type, elem unsafe.Pointer, x unsafe.Pointer) (e interface{}) {$/;"	f
convT2I	./cmd/compile/internal/gc/builtin/runtime.go	/^func convT2I(typ *byte, typ2 *byte, cache **byte, elem, buf *any) (ret any)$/;"	f
convT2I	./runtime/iface.go	/^func convT2I(t *_type, inter *interfacetype, cache **itab, elem unsafe.Pointer, x unsafe.Pointer) (i fInterface) {$/;"	f
convas	./cmd/compile/internal/gc/walk.go	/^func convas(n *Node, init **NodeList) *Node {$/;"	f
conversion	./cmd/cgo/gcc.go	/^			fatalf("%s: type conversion loop at %s", lineno(pos), dtype)$/;"	t
conversion	./cmd/compile/internal/gc/closure.go	/^	\/\/ Force type conversion from *struct to the func type.$/;"	t
conversion	./cmd/compile/internal/gc/syntax.go	/^	OCALL            \/\/ Left(List) (function call, method call or type conversion)$/;"	t
conversion	./cmd/compile/internal/gc/syntax.go	/^	OCONV            \/\/ Type(Left) (type conversion)$/;"	t
conversion	./cmd/compile/internal/gc/syntax.go	/^	OCONVIFACE       \/\/ Type(Left) (type conversion, to interface)$/;"	t
conversion	./cmd/compile/internal/gc/syntax.go	/^	OCONVNOP         \/\/ Type(Left) (type conversion, no effect)$/;"	t
conversion	./cmd/compile/internal/gc/typecheck.go	/^					Yyerror("invalid use of ... in type conversion to %v", l.Type)$/;"	t
conversion	./go/types/conversions.go	/^func (check *Checker) conversion(x *operand, T Type) {$/;"	f
conversionTest	./database/sql/convert_test.go	/^type conversionTest struct {$/;"	t
conversionTests	./database/sql/convert_test.go	/^var conversionTests = []conversionTest{$/;"	v
conversions	./cmd/cgo/gcc.go	/^		\/\/ implicit type conversions.  When the parameter$/;"	t
conversions	./compress/lzw/writer.go	/^	\/\/ type conversions when shifting bits.$/;"	t
convert	./mime/encodedword.go	/^func (d *WordDecoder) convert(buf *bytes.Buffer, charset string, content []byte) error {$/;"	f
convertAssign	./database/sql/convert.go	/^func convertAssign(dest, src interface{}) error {$/;"	f
convertErr	./net/fd_poll_runtime.go	/^func convertErr(res int) error {$/;"	f
convertFloat	./fmt/scan.go	/^func (s *ss) convertFloat(str string, n int) float64 {$/;"	f
convertNumber	./encoding/json/decode.go	/^func (d *decodeState) convertNumber(s string) (interface{}, error) {$/;"	f
convertOp	./reflect/value.go	/^func convertOp(dst, src *rtype) func(Value, Type) Value {$/;"	f
convertString	./fmt/scan.go	/^func (s *ss) convertString(verb rune) (str string) {$/;"	f
convertTests	./reflect/all_test.go	/^var convertTests = []struct {$/;"	v
convertToRGB	./image/jpeg/reader.go	/^func (d *decoder) convertToRGB() (image.Image, error) {$/;"	f
convertUntyped	./go/types/expr.go	/^func (check *Checker) convertUntyped(x *operand, target Type) {$/;"	f
convertWords	./cmd/compile/internal/big/natconv.go	/^func (q nat) convertWords(s []byte, charset string, b Word, ndigits int, bb Word, table []divisor) {$/;"	f
convertWords	./math/big/natconv.go	/^func (q nat) convertWords(s []byte, charset string, b Word, ndigits int, bb Word, table []divisor) {$/;"	f
converted	./mime/mediatype.go	/^\/\/ On success, ParseMediaType returns the media type converted$/;"	t
converterForType	./database/sql/fakedb_test.go	/^func converterForType(typ string) driver.ValueConverter {$/;"	f
convertibleTo	./go/types/conversions.go	/^func (x *operand) convertibleTo(conf *Config, T Type) bool {$/;"	f
convertop	./cmd/compile/internal/gc/subr.go	/^func convertop(src *Type, dst *Type, why *string) int {$/;"	f
convlit1	./cmd/compile/internal/gc/const.go	/^func convlit1(np **Node, t *Type, explicit bool) {$/;"	f
convtype	./cmd/compile/internal/gc/go.y	/^convtype:$/;"	l
cookedTokens	./encoding/xml/xml_test.go	/^var cookedTokens = []Token{$/;"	v
cookie	./net/internal/socktest/switch.go	/^func cookie(family, sotype, proto int) Cookie {$/;"	f
cookieNameSanitizer	./net/http/cookie.go	/^var cookieNameSanitizer = strings.NewReplacer("\\n", "-", "\\r", "-")$/;"	v
cookies	./net/http/cookiejar/jar.go	/^func (j *Jar) cookies(u *url.URL, now time.Time) (cookies []*http.Cookie) {$/;"	f
cool	./runtime/sys_linux_arm64.s	/^cool:$/;"	l
copy	./builtin/builtin.go	/^func copy(dst, src []Type) int$/;"	f
copy	./cmd/compile/internal/gc/esc.go	/^func (l Level) copy() Level {$/;"	f
copy	./cmd/go/pkg.go	/^func (s *importStack) copy() []string {$/;"	f
copy	./syscall/net_nacl.go	/^func (sa *SockaddrDatalink) copy() Sockaddr {$/;"	f
copy	./syscall/net_nacl.go	/^func (sa *SockaddrInet4) copy() Sockaddr {$/;"	f
copy	./syscall/net_nacl.go	/^func (sa *SockaddrInet6) copy() Sockaddr {$/;"	f
copy	./syscall/net_nacl.go	/^func (sa *SockaddrUnix) copy() Sockaddr {$/;"	f
copy	./text/template/template.go	/^func (t *Template) copy(c *common) *Template {$/;"	f
copy1	./cmd/compile/internal/amd64/peep.go	/^func copy1(v1 *obj.Addr, v2 *obj.Addr, r *gc.Flow, f int) bool {$/;"	f
copy1	./cmd/compile/internal/arm/peep.go	/^func copy1(v1 *obj.Addr, v2 *obj.Addr, r *gc.Flow, f int) bool {$/;"	f
copy1	./cmd/compile/internal/arm64/peep.go	/^func copy1(v1 *obj.Addr, v2 *obj.Addr, r *gc.Flow, f int) bool {$/;"	f
copy1	./cmd/compile/internal/ppc64/peep.go	/^func copy1(v1 *obj.Addr, v2 *obj.Addr, r *gc.Flow, f int) bool {$/;"	f
copy1	./cmd/compile/internal/x86/peep.go	/^func copy1(v1 *obj.Addr, v2 *obj.Addr, r *gc.Flow, f int) bool {$/;"	f
copy386	./runtime/mkduff.go	/^func copy386(w io.Writer) {$/;"	f
copyAMD64	./runtime/mkduff.go	/^func copyAMD64(w io.Writer) {$/;"	f
copyARM	./runtime/mkduff.go	/^func copyARM(w io.Writer) {$/;"	f
copyARM64	./runtime/mkduff.go	/^func copyARM64(w io.Writer) {$/;"	f
copyBad	./cmd/go/go_test.go	/^func copyBad(tg *testgoData) {$/;"	f
copyBuffer	./io/io.go	/^func copyBuffer(dst Writer, src Reader, buf []byte) (written int64, err error) {$/;"	f
copyBuild	./cmd/go/pkg.go	/^func (p *Package) copyBuild(pp *build.Package) {$/;"	f
copyChecker	./sync/cond.go	/^type copyChecker uintptr$/;"	t
copyConstType	./go/doc/exports.go	/^func copyConstType(typ ast.Expr, pos token.Pos) ast.Expr {$/;"	f
copyData	./compress/flate/inflate.go	/^func (f *decompressor) copyData() {$/;"	f
copyError	./os/exec/exec.go	/^	var copyError error$/;"	v
copyFindData	./syscall/ztypes_windows.go	/^func copyFindData(dst *Win32finddata, src *win32finddata1) {$/;"	f
copyHeader	./net/http/httputil/reverseproxy.go	/^func copyHeader(dst, src http.Header) {$/;"	f
copyHist	./compress/flate/inflate.go	/^func (f *decompressor) copyHist() bool {$/;"	f
copyHuff	./compress/flate/inflate.go	/^func (f *decompressor) copyHuff() {$/;"	f
copyIP	./net/cgo_unix.go	/^func copyIP(x IP) IP {$/;"	f
copyPPC64x	./runtime/mkduff.go	/^func copyPPC64x(w io.Writer) {$/;"	f
copyResponse	./net/http/httputil/reverseproxy.go	/^func (p *ReverseProxy) copyResponse(dst io.Writer, src io.Reader) {$/;"	f
copyValue	./encoding/xml/read.go	/^func copyValue(dst reflect.Value, src []byte) (err error) {$/;"	f
copyValues	./net/http/request.go	/^func copyValues(dst, src url.Values) {$/;"	f
copyWithLeftPad	./crypto/rsa/pkcs1v15.go	/^func copyWithLeftPad(dest, src []byte) {$/;"	f
copyany	./cmd/compile/internal/gc/walk.go	/^func copyany(n *Node, init **NodeList, runtimecall int) *Node {$/;"	f
copyas	./cmd/compile/internal/amd64/peep.go	/^func copyas(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyas	./cmd/compile/internal/arm/peep.go	/^func copyas(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyas	./cmd/compile/internal/arm64/peep.go	/^func copyas(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyas	./cmd/compile/internal/ppc64/peep.go	/^func copyas(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyas	./cmd/compile/internal/x86/peep.go	/^func copyas(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyau	./cmd/compile/internal/amd64/peep.go	/^func copyau(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyau	./cmd/compile/internal/arm/peep.go	/^func copyau(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyau	./cmd/compile/internal/arm64/peep.go	/^func copyau(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyau	./cmd/compile/internal/ppc64/peep.go	/^func copyau(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyau	./cmd/compile/internal/x86/peep.go	/^func copyau(a *obj.Addr, v *obj.Addr) bool {$/;"	f
copyau1	./cmd/compile/internal/arm/peep.go	/^func copyau1(p *obj.Prog, v *obj.Addr) bool {$/;"	f
copyau1	./cmd/compile/internal/arm64/peep.go	/^func copyau1(p *obj.Prog, v *obj.Addr) bool {$/;"	f
copyau1	./cmd/compile/internal/ppc64/peep.go	/^func copyau1(p *obj.Prog, v *obj.Addr) bool {$/;"	f
copychildren	./cmd/link/internal/ld/dwarf.go	/^func copychildren(dst *DWDie, src *DWDie) {$/;"	f
copychildrenexcept	./cmd/link/internal/ld/dwarf.go	/^func copychildrenexcept(dst *DWDie, src *DWDie, except *DWDie) {$/;"	f
copydist	./make.bat	/^:copydist$/;"	l
copyenv	./syscall/env_unix.go	/^func copyenv() {$/;"	f
copyexpr	./cmd/compile/internal/gc/subr.go	/^func copyexpr(n *Node, t *Type, init **NodeList) *Node {$/;"	f
copyprop	./cmd/compile/internal/amd64/peep.go	/^func copyprop(g *gc.Graph, r0 *gc.Flow) bool {$/;"	f
copyprop	./cmd/compile/internal/arm/peep.go	/^func copyprop(g *gc.Graph, r0 *gc.Flow) bool {$/;"	f
copyprop	./cmd/compile/internal/arm64/peep.go	/^func copyprop(r0 *gc.Flow) bool {$/;"	f
copyprop	./cmd/compile/internal/ppc64/peep.go	/^func copyprop(r0 *gc.Flow) bool {$/;"	f
copyprop	./cmd/compile/internal/x86/peep.go	/^func copyprop(g *gc.Graph, r0 *gc.Flow) bool {$/;"	f
copyresult3	./syscall/asm_plan9_386.s	/^copyresult3:$/;"	l
copyresult3	./syscall/asm_plan9_amd64.s	/^copyresult3:$/;"	l
copyresult4	./syscall/asm_plan9_386.s	/^copyresult4:$/;"	l
copyresult4	./syscall/asm_plan9_amd64.s	/^copyresult4:$/;"	l
copyresult6	./syscall/asm_plan9_386.s	/^copyresult6:$/;"	l
copyresult6	./syscall/asm_plan9_amd64.s	/^copyresult6:$/;"	l
copyret	./cmd/compile/internal/gc/order.go	/^func copyret(n *Node, order *Order) *NodeList {$/;"	f
copysign	./math/all_test.go	/^var copysign = []float64{$/;"	v
copysignSC	./math/all_test.go	/^var copysignSC = []float64{$/;"	v
copystack	./runtime/stack1.go	/^func copystack(gp *g, newsize uintptr) {$/;"	f
copysub	./cmd/compile/internal/amd64/peep.go	/^func copysub(a *obj.Addr, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copysub	./cmd/compile/internal/arm/peep.go	/^func copysub(a *obj.Addr, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copysub	./cmd/compile/internal/arm64/peep.go	/^func copysub(a *obj.Addr, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copysub	./cmd/compile/internal/ppc64/peep.go	/^func copysub(a *obj.Addr, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copysub	./cmd/compile/internal/x86/peep.go	/^func copysub(a *obj.Addr, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copysub1	./cmd/compile/internal/arm/peep.go	/^func copysub1(p1 *obj.Prog, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copysub1	./cmd/compile/internal/arm64/peep.go	/^func copysub1(p1 *obj.Prog, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copysub1	./cmd/compile/internal/ppc64/peep.go	/^func copysub1(p1 *obj.Prog, v *obj.Addr, s *obj.Addr, f int) int {$/;"	f
copytype	./cmd/compile/internal/gc/typecheck.go	/^func copytype(n *Node, t *Type) {$/;"	f
copyu	./cmd/compile/internal/amd64/peep.go	/^func copyu(p *obj.Prog, v *obj.Addr, s *obj.Addr) int {$/;"	f
copyu	./cmd/compile/internal/arm/peep.go	/^func copyu(p *obj.Prog, v *obj.Addr, s *obj.Addr) int {$/;"	f
copyu	./cmd/compile/internal/arm64/peep.go	/^func copyu(p *obj.Prog, v *obj.Addr, s *obj.Addr) int {$/;"	f
copyu	./cmd/compile/internal/ppc64/peep.go	/^func copyu(p *obj.Prog, v *obj.Addr, s *obj.Addr) int {$/;"	f
copyu	./cmd/compile/internal/x86/peep.go	/^func copyu(p *obj.Prog, v *obj.Addr, s *obj.Addr) int {$/;"	f
copyval	./cmd/compile/internal/gc/const.go	/^func copyval(v Val) Val {$/;"	f
corresponding	./builtin/builtin.go	/^\/\/ The return value will be floating point type corresponding to the type of c.$/;"	t
corresponding	./builtin/builtin.go	/^\/\/ number c. The return value will be floating point type corresponding to$/;"	t
corresponding	./debug/gosym/pclntab.go	/^\/\/ findFunc returns the func corresponding to the given program counter.$/;"	f
corrupt	./encoding/ascii85/ascii85_test.go	/^	type corrupt struct {$/;"	t
cos	./math/all_test.go	/^var cos = []float64{$/;"	v
cos	./math/cmplx/cmath_test.go	/^var cos = []complex128{$/;"	v
cos	./math/sin.go	/^func cos(x float64) float64 {$/;"	f
cosLarge	./math/all_test.go	/^var cosLarge = []float64{$/;"	v
cosSC	./math/all_test.go	/^var cosSC = []float64{$/;"	v
cosSC	./math/cmplx/cmath_test.go	/^var cosSC = []complex128{$/;"	v
cosh	./math/all_test.go	/^var cosh = []float64{$/;"	v
cosh	./math/cmplx/cmath_test.go	/^var cosh = []complex128{$/;"	v
coshSC	./math/all_test.go	/^var coshSC = []float64{$/;"	v
coshSC	./math/cmplx/cmath_test.go	/^var coshSC = []complex128{$/;"	v
cosines	./image/jpeg/dct_test.go	/^var cosines [32]float64 \/\/ cosines[k] = cos(π\/2 * k\/8)$/;"	v
could	./encoding/json/decode_test.go	/^\/\/ Custom types with []byte as underlying type could not be marshalled$/;"	t
count	./cmd/asm/internal/asm/parse.go	/^	var count int16$/;"	v
count	./cmd/compile/internal/gc/syntax.go	/^func count(l *NodeList) int {$/;"	f
count	./cmd/cover/testdata/main.go	/^func count(line uint32) (uint32, int) {$/;"	f
count	./cmd/dist/main.go	/^type count int$/;"	t
count	./cmd/internal/gcprog/gcprog.go	/^		var count int64$/;"	v
count	./cmd/internal/obj/flag.go	/^type count int$/;"	t
count	./cmd/pprof/internal/profile/legacy_profile.go	/^		var count, nstk uint64$/;"	v
count	./compress/flate/gen.go	/^	var count [maxCodeLen]int$/;"	v
count	./compress/flate/inflate.go	/^	var count [maxCodeLen]int$/;"	v
count	./index/suffixarray/qsufsort.go	/^	var count [256]int$/;"	v
count	./net/parse.go	/^func count(s string, b byte) int {$/;"	f
count	./runtime/stack_test.go	/^func count(n int) int {$/;"	f
count	./syscall/unzip_nacl.go	/^	var count [maxCodeLen + 1]int$/;"	v
count	./testing/cover.go	/^	var count uint32$/;"	v
count	./text/template/exec_test.go	/^func count(n int) chan string {$/;"	f
countAnyByte	./net/parse.go	/^func countAnyByte(s string, t string) int {$/;"	f
countBits	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func countBits(x uint32) int {$/;"	f
countBlock	./runtime/pprof/pprof.go	/^func countBlock() int {$/;"	f
countCloseReader	./net/http/transport_test.go	/^type countCloseReader struct {$/;"	t
countEdges	./cmd/pprof/internal/report/report.go	/^func countEdges(el edgeMap, cutoff int64) int {$/;"	f
countExactPrefix	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func countExactPrefix(inst *Inst, target Prefix) int {$/;"	f
countFlagMap	./cmd/pprof/internal/driver/driver.go	/^func countFlagMap(bms map[string]*bool, bmrxs map[string]*string) int {$/;"	f
countFlags	./cmd/pprof/internal/driver/driver.go	/^func countFlags(bs []*bool) int {$/;"	f
countGoroutine	./runtime/pprof/pprof.go	/^func countGoroutine() int {$/;"	f
countHeap	./runtime/pprof/pprof.go	/^func countHeap() int {$/;"	f
countMallocs	./net/rpc/server_test.go	/^func countMallocs(dial func() (*Client, error), t *testing.T) float64 {$/;"	f
countNewlines	./text/scanner/scanner_test.go	/^func countNewlines(s string) int {$/;"	f
countOps	./sort/sort_test.go	/^func countOps(t *testing.T, algo func(Interface), name string) {$/;"	f
countOpsSizes	./sort/sort_test.go	/^var countOpsSizes = []int{1e2, 3e2, 1e3, 3e3, 1e4, 3e4, 1e5, 3e5, 1e6}$/;"	v
countPrefix	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func countPrefix(inst *Inst, target Prefix) int {$/;"	f
countProfile	./runtime/pprof/pprof.go	/^type countProfile interface {$/;"	t
countReader	./net/http/serve_test.go	/^type countReader struct {$/;"	t
countReader	./text/scanner/scanner_test.go	/^type countReader int$/;"	t
countThreadCreate	./runtime/pprof/pprof.go	/^func countThreadCreate() int {$/;"	f
countUses	./cmd/fix/fix.go	/^func countUses(x *ast.Ident, scope []ast.Stmt) int {$/;"	f
countWriter	./archive/zip/writer.go	/^type countWriter struct {$/;"	t
countdown	./bufio/scan_test.go	/^type countdown int$/;"	t
counter	./crypto/cipher/gcm.go	/^	var counter, tagMask [gcmBlockSize]byte$/;"	v
counter	./crypto/rsa/rsa.go	/^	var counter [4]byte$/;"	v
counter	./go/types/api_test.go	/^		var counter int$/;"	v
counterCrypt	./crypto/cipher/gcm.go	/^func (g *gcm) counterCrypt(out, in []byte, counter *[gcmBlockSize]byte) {$/;"	f
counterStmt	./cmd/cover/cover.go	/^var counterStmt func(*File, ast.Expr) ast.Stmt$/;"	v
counters	./cmd/cover/testdata/main.go	/^var counters = make(map[block]bool)$/;"	v
countfield	./cmd/compile/internal/gc/walk.go	/^func countfield(t *Type) int {$/;"	f
countingWriter	./net/http/fs.go	/^type countingWriter int64$/;"	t
coutbuf	./cmd/link/internal/ld/lib.go	/^var coutbuf struct {$/;"	v
cover	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^	var cover float64$/;"	v
cover	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^	var cover float64$/;"	v
cover	./testing/cover.go	/^var cover Cover$/;"	v
coverFiles	./cmd/go/test.go	/^			var coverFiles []string$/;"	v
coverIndex	./cmd/go/test.go	/^var coverIndex = 0$/;"	v
coverInfo	./cmd/go/test.go	/^type coverInfo struct {$/;"	t
coverRegisterFile	./cmd/go/test.go	/^func coverRegisterFile(fileName string, counter []uint32, pos []uint32, numStmts []uint16) {$/;"	f
coverReport	./testing/cover.go	/^func coverReport() {$/;"	f
coverage	./cmd/cover/func.go	/^func (f *FuncExtent) coverage(profile *Profile) (num, den int64) {$/;"	f
coverage	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func coverage() float64 {$/;"	f
coverage	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func coverage() float64 {$/;"	f
coveragePercentage	./cmd/go/test.go	/^func coveragePercentage(out []byte) string {$/;"	f
covered	./cmd/cover/func.go	/^	var covered, total int64$/;"	v
cp	./cmd/compile/internal/gc/lex.go	/^	var cp *bytes.Buffer$/;"	v
cpfir	./cmd/yacc/yacc.go	/^func cpfir() {$/;"	f
cplxsubtype	./cmd/compile/internal/gc/subr.go	/^func cplxsubtype(et int) int {$/;"	f
cpres	./cmd/yacc/yacc.go	/^func cpres() {$/;"	f
cpsr	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) cpsr() uint32    { return c.regs().cpsr }$/;"	f
cpsr	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) cpsr() uint32    { return c.regs().__gregs[16] }$/;"	f
cpsr	./runtime/signal_linux_arm.go	/^func (c *sigctxt) cpsr() uint32      { return c.regs().cpsr }$/;"	f
cpsr	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) cpsr() uint32    { return c.regs().cpsr }$/;"	f
cpsr	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) cpsr() uint32     { return c.regs().__gregs[_REG_CPSR] }$/;"	f
cpsr	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) cpsr() uint32    { return c.regs().sc_spsr }$/;"	f
cpu	./runtime/pprof/pprof.go	/^var cpu struct {$/;"	v
cpuHog1	./runtime/pprof/pprof_test.go	/^func cpuHog1() {$/;"	f
cpuHog2	./runtime/pprof/pprof_test.go	/^func cpuHog2() {$/;"	f
cpuHogger	./runtime/pprof/pprof_test.go	/^func cpuHogger(f func()) {$/;"	f
cpuHz	./cmd/pprof/internal/profile/legacy_profile.go	/^	var cpuHz int64$/;"	v
cpuInts	./cmd/pprof/internal/profile/legacy_profile.go	/^var cpuInts = []func([]byte) (uint64, []byte){$/;"	v
cpuProfile	./cmd/pprof/internal/profile/legacy_profile.go	/^func cpuProfile(b []byte, period int64, parse func(b []byte) (uint64, []byte)) (*Profile, error) {$/;"	f
cpuProfile	./runtime/cpuprof.go	/^type cpuProfile struct {$/;"	t
cpuProfilerRxStr	./cmd/pprof/internal/profile/legacy_profile.go	/^var cpuProfilerRxStr = strings.Join([]string{$/;"	v
cpuStrings	./debug/macho/macho.go	/^var cpuStrings = []intName{$/;"	v
cpu_capabilities	./runtime/sys_darwin_386.s	/^#define	cpu_capabilities	0x20$/;"	d
cpuid	./cmd/dist/util_gc.go	/^func cpuid(info *[4]uint32, ax uint32)$/;"	f
cpuprofEntry	./runtime/cpuprof.go	/^type cpuprofEntry struct {$/;"	t
cpuprofilerlock	./runtime/os1_windows.go	/^var cpuprofilerlock mutex$/;"	v
cputicks	./runtime/cputicks.go	/^func cputicks() int64$/;"	f
cputicks	./runtime/os_darwin_arm.go	/^func cputicks() int64 {$/;"	f
cputicks	./runtime/os_darwin_arm64.go	/^func cputicks() int64 {$/;"	f
cputicks	./runtime/os_freebsd_arm.go	/^func cputicks() int64 {$/;"	f
cputicks	./runtime/os_linux_arm.go	/^func cputicks() int64 {$/;"	f
cputicks	./runtime/os_linux_arm64.go	/^func cputicks() int64 {$/;"	f
cputicks	./runtime/os_nacl_arm.go	/^func cputicks() int64 {$/;"	f
cputicks	./runtime/os_netbsd_arm.go	/^func cputicks() int64 {$/;"	f
cputicks	./runtime/os_openbsd_arm.go	/^func cputicks() int64 {$/;"	f
cpyact	./cmd/yacc/yacc.go	/^func cpyact(curprod []int, max int) {$/;"	f
cpycode	./cmd/yacc/yacc.go	/^func cpycode() {$/;"	f
cpyunion	./cmd/yacc/yacc.go	/^func cpyunion() {$/;"	f
cr	./image/png/writer.go	/^	var cr [nFilter][]uint8$/;"	v
crack	./debug/gosym/pclntab_test.go	/^func crack(file string, t *testing.T) (*elf.File, *Table) {$/;"	f
cramMD5Auth	./net/smtp/auth.go	/^type cramMD5Auth struct {$/;"	t
crash	./runtime/os1_nacl.go	/^func crash() {$/;"	f
crash	./runtime/os1_plan9.go	/^func crash() {$/;"	f
crash	./runtime/signal1_unix.go	/^func crash() {$/;"	f
crash	./runtime/signal_windows.go	/^func crash() {$/;"	f
crashTest	./runtime/crash_test.go	/^	type crashTest struct {$/;"	t
crashing	./runtime/signal_386.go	/^var crashing int32$/;"	v
crashing	./runtime/signal_amd64x.go	/^var crashing int32$/;"	v
crashing	./runtime/signal_arm.go	/^var crashing int32$/;"	v
crashing	./runtime/signal_arm64.go	/^var crashing int32$/;"	v
crashing	./runtime/signal_ppc64x.go	/^var crashing int32$/;"	v
crashy	./log/syslog/syslog_test.go	/^var crashy = false$/;"	v
crawl	./runtime/race/testdata/mop_test.go	/^	var crawl func(string, int)$/;"	v
crctab	./compress/bzip2/bzip2.go	/^var crctab [256]uint32$/;"	v
creat	./cmd/cgo/util.go	/^func creat(name string) *os.File {$/;"	f
create	./cmd/go/vcs.go	/^func (v *vcsCmd) create(dir, repo string) error {$/;"	f
create	./cmd/pack/pack.go	/^func create(name string) {$/;"	f
create	./cmd/yacc/yacc.go	/^func create(s string) *bufio.Writer {$/;"	f
create	./syscall/exec_unix_test.go	/^func create(t *testing.T) *command {$/;"	f
create	./syscall/fs_nacl.go	/^func create(name string, mode uint32, sec int64, data []byte) error {$/;"	f
create	./syscall/zsyscall_plan9_386.go	/^func create(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
create	./syscall/zsyscall_plan9_amd64.go	/^func create(path string, mode int, perm uint32) (fd int, err error) {$/;"	f
createAttrPrefix	./encoding/xml/marshal.go	/^func (p *printer) createAttrPrefix(url string) string {$/;"	f
createEnv	./os/exec/lp_windows_test.go	/^func createEnv(dir, PATH, PATHEXT string) []string {$/;"	f
createEnvBlock	./syscall/exec_windows.go	/^func createEnvBlock(envv []string) *uint16 {$/;"	f
createFiles	./os/exec/lp_windows_test.go	/^func createFiles(t *testing.T, dir string, files []string, srcPath string) {$/;"	f
createOverflow	./runtime/hashmap.go	/^func (h *hmap) createOverflow() {$/;"	f
createStoreContext	./crypto/x509/root_windows.go	/^func createStoreContext(leaf *Certificate, opts *VerifyOptions) (*syscall.CertContext, error) {$/;"	f
createTable	./database/sql/fakedb_test.go	/^func (db *fakeDB) createTable(name string, columnNames, columnTypes []string) error {$/;"	f
createTestDir	./text/template/examplefiles_test.go	/^func createTestDir(files []templateFile) string {$/;"	f
createTestInput	./bufio/bufio_test.go	/^func createTestInput(n int) []byte {$/;"	f
createValueFuncs	./text/template/funcs.go	/^func createValueFuncs(funcMap FuncMap) map[string]reflect.Value {$/;"	f
create_ret	./runtime/sys_darwin_arm.s	/^create_ret:$/;"	l
createfing	./runtime/mfinal.go	/^func createfing() {$/;"	f
createmode	./syscall/syscall_windows.go	/^	var createmode uint32$/;"	v
creatingTemp	./cmd/go/go_test.go	/^func (tg *testgoData) creatingTemp(path string) {$/;"	f
creg	./cmd/compile/internal/arm/cgen64.go	/^		var creg gc.Node$/;"	v
criteria	./net/nss.go	/^			var criteria []nssCriterion$/;"	v
crlDp	./crypto/x509/x509.go	/^		var crlDp []distributionPoint$/;"	v
crnl	./net/textproto/writer.go	/^var crnl = []byte{'\\r', '\\n'}$/;"	v
crossPlatform	./archive/zip/reader_test.go	/^var crossPlatform = []ZipTestFile{$/;"	v
cryptBlock	./crypto/des/block.go	/^func cryptBlock(subkeys []uint64, dst, src []byte, decrypt bool) {$/;"	f
cs	./net/http/cookiejar/jar_test.go	/^	var cs []string$/;"	v
cs	./net/mockserver_test.go	/^		var cs []*UDPConn$/;"	v
cs	./runtime/signal_darwin_386.go	/^func (c *sigctxt) cs() uint32      { return c.regs().cs }$/;"	f
cs	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) cs() uint64      { return c.regs().cs }$/;"	f
cs	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) cs() uint64      { return uint64(c.regs().mc_cs) }$/;"	f
cs	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) cs() uint32      { return uint32(c.regs().mc_cs) }$/;"	f
cs	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) cs() uint64      { return uint64(c.regs().mc_cs) }$/;"	f
cs	./runtime/signal_linux_386.go	/^func (c *sigctxt) cs() uint32        { return uint32(c.regs().cs) }$/;"	f
cs	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) cs() uint64      { return uint64(c.regs().cs) }$/;"	f
cs	./runtime/signal_nacl_386.go	/^func (c *sigctxt) cs() uint32        { return ^uint32(0) }$/;"	f
cs	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) cs() uint64      { return ^uint64(0) }$/;"	f
cs	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) cs() uint32       { return uint32(c.regs().__gregs[_REG_CS]) }$/;"	f
cs	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) cs() uint64      { return c.regs().__gregs[_REG_CS] }$/;"	f
cs	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) cs() uint32      { return c.regs().sc_cs }$/;"	f
cs	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) cs() uint64      { return c.regs().sc_cs }$/;"	f
cs	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) cs() uint64      { return uint64(c.regs().gregs[_REG_CS]) }$/;"	f
csr	./crypto/x509/x509.go	/^	var csr certificateRequest$/;"	v
csrBase64Array	./crypto/x509/x509_test.go	/^var csrBase64Array = [...]string{$/;"	v
cssEscaper	./html/template/css.go	/^func cssEscaper(args ...interface{}) string {$/;"	f
cssReplacementTable	./html/template/css.go	/^var cssReplacementTable = []string{$/;"	v
cssValueFilter	./html/template/css.go	/^func cssValueFilter(args ...interface{}) string {$/;"	f
cstring	./cmd/link/internal/ld/util.go	/^func cstring(x []byte) string {$/;"	f
cstring	./debug/macho/file.go	/^func cstring(b []byte) string {$/;"	f
cstring	./debug/pe/file.go	/^func cstring(b []byte) string {$/;"	f
cstring	./runtime/env_posix.go	/^func cstring(s string) unsafe.Pointer {$/;"	f
cstring	./syscall/syscall_plan9.go	/^func cstring(s []byte) string {$/;"	f
ct	./encoding/json/encode_test.go	/^	var ct CText$/;"	v
ctext	./go/ast/commentmap_test.go	/^func ctext(list []*CommentGroup) string {$/;"	f
ctl	./net/file_plan9.go	/^	var ctl *os.File$/;"	v
ctr	./crypto/cipher/ctr.go	/^type ctr struct {$/;"	t
ctr	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) ctr() uint64   { return c.regs().ctr }$/;"	f
ctrAESTests	./crypto/cipher/ctr_aes_test.go	/^var ctrAESTests = []struct {$/;"	v
ctrlhandler	./runtime/os2_windows.go	/^func ctrlhandler(_type uint32) uint32$/;"	f
ctrlhandler1	./runtime/os1_windows.go	/^func ctrlhandler1(_type uint32) uint32 {$/;"	f
ctype	./net/http/fs.go	/^	var ctype string$/;"	v
curfn	./cmd/fix/typecheck.go	/^	var curfn []*ast.FuncType$/;"	v
curfnSym	./cmd/compile/internal/gc/esc.go	/^func (e *EscState) curfnSym(n *Node) *Sym {$/;"	f
curio	./cmd/compile/internal/gc/go.go	/^var curio Io$/;"	v
current	./os/user/lookup_plan9.go	/^func current() (*User, error) {$/;"	f
current	./os/user/lookup_stubs.go	/^func current() (*User, error) {$/;"	f
current	./os/user/lookup_unix.go	/^func current() (*User, error) {$/;"	f
current	./os/user/lookup_windows.go	/^func current() (*User, error) {$/;"	f
currentFlow	./crypto/tls/handshake_test.go	/^	var currentFlow []byte$/;"	v
curres	./cmd/yacc/yacc.go	/^	var curres [][]int$/;"	v
curtext	./cmd/internal/obj/objfile.go	/^	var curtext *LSym$/;"	v
curve	./crypto/x509/sec1.go	/^	var curve elliptic.Curve$/;"	v
curveForCurveID	./crypto/tls/key_agreement.go	/^func curveForCurveID(id CurveID) (elliptic.Curve, bool) {$/;"	f
curvePreferences	./crypto/tls/common.go	/^func (c *Config) curvePreferences() []CurveID {$/;"	f
curveid	./crypto/tls/key_agreement.go	/^	var curveid CurveID$/;"	v
customWriterRecorder	./net/http/cgi/matryoshka_test.go	/^type customWriterRecorder struct {$/;"	t
customizeRecv	./go/doc/reader.go	/^func customizeRecv(f *Func, recvTypeName string, embeddedIsPtr bool, level int) *Func {$/;"	f
cutStringAtNUL	./cmd/link/internal/ld/util.go	/^func cutStringAtNUL(s string) string {$/;"	f
cutoff	./go/printer/nodes.go	/^func cutoff(e *ast.BinaryExpr, depth int) int {$/;"	f
cutoff	./strconv/atoi.go	/^	var cutoff, maxVal uint64$/;"	v
cutspace	./time/format.go	/^func cutspace(s string) string {$/;"	f
cv	./cmd/compile/internal/gc/closure.go	/^		var cv *Node$/;"	v
cv	./reflect/all_test.go	/^		var cv Value$/;"	v
cvt	./cmd/compile/internal/x86/gsubr.go	/^	var cvt *gc.Type$/;"	v
cvtBytesString	./reflect/value.go	/^func cvtBytesString(v Value, t Type) Value {$/;"	f
cvtComplex	./reflect/value.go	/^func cvtComplex(v Value, t Type) Value {$/;"	f
cvtDirect	./reflect/value.go	/^func cvtDirect(v Value, typ Type) Value {$/;"	f
cvtFloat	./reflect/value.go	/^func cvtFloat(v Value, t Type) Value {$/;"	f
cvtFloatInt	./reflect/value.go	/^func cvtFloatInt(v Value, t Type) Value {$/;"	f
cvtFloatUint	./reflect/value.go	/^func cvtFloatUint(v Value, t Type) Value {$/;"	f
cvtI2I	./reflect/value.go	/^func cvtI2I(v Value, typ Type) Value {$/;"	f
cvtInt	./reflect/value.go	/^func cvtInt(v Value, t Type) Value {$/;"	f
cvtIntFloat	./reflect/value.go	/^func cvtIntFloat(v Value, t Type) Value {$/;"	f
cvtIntString	./reflect/value.go	/^func cvtIntString(v Value, t Type) Value {$/;"	f
cvtRunesString	./reflect/value.go	/^func cvtRunesString(v Value, t Type) Value {$/;"	f
cvtStringBytes	./reflect/value.go	/^func cvtStringBytes(v Value, t Type) Value {$/;"	f
cvtStringRunes	./reflect/value.go	/^func cvtStringRunes(v Value, t Type) Value {$/;"	f
cvtT2I	./reflect/value.go	/^func cvtT2I(v Value, typ Type) Value {$/;"	f
cvtUint	./reflect/value.go	/^func cvtUint(v Value, t Type) Value {$/;"	f
cvtUintFloat	./reflect/value.go	/^func cvtUintFloat(v Value, t Type) Value {$/;"	f
cvtUintString	./reflect/value.go	/^func cvtUintString(v Value, t Type) Value {$/;"	f
cwd	./cmd/go/pkg.go	/^var cwd, _ = os.Getwd()$/;"	v
cwd	./net/http/cgi/host.go	/^	var cwd, path string$/;"	v
cwp	./cmd/yacc/yacc.go	/^var cwp int$/;"	v
cx	./cmd/compile/internal/amd64/cgen.go	/^	var cx gc.Node$/;"	v
cx	./cmd/compile/internal/amd64/ggen.go	/^	var cx gc.Node$/;"	v
cx	./cmd/compile/internal/x86/cgen.go	/^			var cx gc.Node$/;"	v
cx	./cmd/compile/internal/x86/cgen64.go	/^	var cx gc.Node$/;"	v
cx	./cmd/compile/internal/x86/ggen.go	/^	var cx gc.Node$/;"	v
cx	./cmd/compile/internal/x86/gsubr.go	/^		var cx gc.Node$/;"	v
cycle	./cmd/link/internal/ld/go.go	/^func (p *Pkg) cycle() *Pkg {$/;"	f
cycles	./go/types/ordering.go	/^\/\/ in the process check _and_ report type cycles. This may simplify$/;"	t
d0	./runtime/vlop_arm.s	/^d0:$/;"	l
d1	./cmd/compile/internal/big/natconv.go	/^		var d1 Word$/;"	v
d1	./go/types/resolver.go	/^							var d1 *declInfo$/;"	v
d1	./math/big/natconv.go	/^		var d1 Word$/;"	v
d1	./runtime/vlop_arm.s	/^d1:$/;"	l
d2	./runtime/vlop_arm.s	/^d2:$/;"	l
da	./cmd/link/internal/ld/dwarf.go	/^	var da int$/;"	v
dalgsym	./cmd/compile/internal/gc/reflect.go	/^func dalgsym(t *Type) *Sym {$/;"	f
darwin	./cmd/compile/internal/arm64/ggen.go	/^var darwin = obj.Getgoos() == "darwin"$/;"	v
darwin_arm_init_mach_exception_handler	./runtime/cgo/gcc_signal_darwin_armx.c	/^darwin_arm_init_mach_exception_handler()$/;"	f
darwin_arm_init_mach_exception_handler	./runtime/cgo/gcc_signal_darwin_lldb.c	/^void darwin_arm_init_mach_exception_handler() {}$/;"	f
darwin_arm_init_thread_exception_port	./runtime/cgo/gcc_signal_darwin_armx.c	/^darwin_arm_init_thread_exception_port()$/;"	f
darwin_arm_init_thread_exception_port	./runtime/cgo/gcc_signal_darwin_lldb.c	/^void darwin_arm_init_thread_exception_port() {}$/;"	f
dash	./runtime/race.go	/^var dash = [...]byte{'-', 0}$/;"	v
dat	./cmd/link/internal/ld/ldmacho.go	/^	var dat []byte$/;"	v
dat	./debug/elf/file.go	/^	var dat = map[string][]byte{"abbrev": nil, "info": nil, "str": nil, "line": nil}$/;"	v
dat	./debug/macho/file.go	/^	var dat [len(names)][]byte$/;"	v
dat	./debug/pe/file.go	/^	var dat [len(names)][]byte$/;"	v
data	./bufio/bufio_test.go	/^	var data [8192]byte$/;"	v
data	./bytes/buffer_test.go	/^var data string      \/\/ test data for write tests$/;"	v
data	./cmd/cgo/gcc.go	/^		var data []byte$/;"	v
data	./cmd/compile/internal/gc/reflect.go	/^			\/\/ .PtrTo() on the reflect.Type for T returns this type data and$/;"	t
data	./cmd/compile/internal/gc/reflect.go	/^			\/\/ The ptrto field of the type data cannot be relied on when$/;"	t
data	./cmd/compile/internal/gc/reflect.go	/^			\/\/ The second module will end up defining type data for *T and a$/;"	t
data	./cmd/dist/util.go	/^	var data []byte$/;"	v
data	./cmd/go/go_test.go	/^			var data []byte$/;"	v
data	./cmd/internal/obj/objfile.go	/^	var data *LSym$/;"	v
data	./cmd/internal/obj/pcln.go	/^	\/\/ tabulate which pc and func data we have.$/;"	f
data	./cmd/link/internal/ld/data.go	/^	var data *Section$/;"	v
data	./cmd/link/internal/ld/lib.go	/^			\/\/ the type data.$/;"	t
data	./cmd/link/internal/ld/symtab.go	/^	\/\/ compiler-provided size, so read it from the type data.$/;"	t
data	./compress/zlib/writer_test.go	/^var data = []string{$/;"	v
data	./crypto/md5/gen.go	/^var data = Data{$/;"	v
data	./crypto/x509/root_cgo_darwin.go	/^	var data C.CFDataRef = nil$/;"	v
data	./encoding/binary/example_test.go	/^	var data = []interface{}{$/;"	v
data	./encoding/gob/codec_test.go	/^		var data []byte$/;"	v
data	./encoding/gob/codec_test.go	/^		var data bool = true$/;"	v
data	./encoding/gob/codec_test.go	/^		var data bool$/;"	v
data	./encoding/gob/codec_test.go	/^		var data complex128$/;"	v
data	./encoding/gob/codec_test.go	/^		var data complex64$/;"	v
data	./encoding/gob/codec_test.go	/^		var data float32 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data float32$/;"	v
data	./encoding/gob/codec_test.go	/^		var data float64 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data float64$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int16 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int16$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int32 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int32$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int64 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int64$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int8 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data int8$/;"	v
data	./encoding/gob/codec_test.go	/^		var data string = "hello"$/;"	v
data	./encoding/gob/codec_test.go	/^		var data string$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint16 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint16$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint32 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint32$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint64 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint64$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint8 = 17$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uint8$/;"	v
data	./encoding/gob/codec_test.go	/^		var data uintptr$/;"	v
data	./encoding/gob/encode.go	/^	var data []byte$/;"	v
data	./encoding/json/stream_test.go	/^	var data struct {$/;"	v
data	./go/doc/reader.go	/^type data struct {$/;"	t
data	./go/internal/gccgoimporter/importer.go	/^		\/\/ 	var data []byte$/;"	v
data	./go/printer/printer.go	/^		var data string$/;"	v
data	./go/printer/printer_test.go	/^var data = []entry{$/;"	v
data	./net/http/serve_test.go	/^	var data = []byte("Hello world.\\n")$/;"	v
data	./runtime/mfinal_test.go	/^		var data [Batch]*int$/;"	v
data	./runtime/race/testdata/waitgroup_test.go	/^		var data [P]int$/;"	v
data	./runtime/race/testdata/waitgroup_test.go	/^	var data [P]int$/;"	v
data	./runtime/race_amd64.s	/^data:$/;"	l
data	./runtime/trace.go	/^		var data []byte$/;"	v
data	./runtime/trace/trace_stack_test.go	/^		var data [1]byte$/;"	v
data	./runtime/trace/trace_stack_test.go	/^	var data [1]byte$/;"	v
data	./runtime/type.go	/^	\/\/ gcdata stores the GC type data for the garbage collector.$/;"	t
data	./sort/search_test.go	/^var data = []int{0: -10, 1: -5, 2: 0, 3: 1, 4: 2, 5: 3, 6: 5, 7: 7, 8: 11, 9: 100, 10: 100, 11: 100, 12: 1000, 13: 10000}$/;"	v
data	./sync/mutex_test.go	/^		var data [16 << 10]uint64$/;"	v
data	./sync/mutex_test.go	/^		var data [4 << 10]uint64$/;"	v
data	./syscall/exec_linux.go	/^	var data []byte$/;"	v
data	./syscall/syscall_linux.go	/^	var data _C_long$/;"	v
data	./time/zoneinfo_read.go	/^type data struct {$/;"	t
data1	./syscall/syscall_windows.go	/^	var data1 win32finddata1$/;"	v
dataAndEOFReader	./bufio/bufio_test.go	/^type dataAndEOFReader string$/;"	t
dataAndErrorBuffer	./io/io_test.go	/^type dataAndErrorBuffer struct {$/;"	t
dataBlock	./compress/flate/inflate.go	/^func (f *decompressor) dataBlock() {$/;"	f
dataBlock	./syscall/unzip_nacl.go	/^func (f *decompressor) dataBlock() {$/;"	f
dataCloser	./net/smtp/smtp.go	/^type dataCloser struct {$/;"	t
dataErrReader	./testing/iotest/reader.go	/^type dataErrReader struct {$/;"	t
dataFormat	./debug/dwarf/buf.go	/^type dataFormat interface {$/;"	t
dataItem	./html/template/escape_test.go	/^	type dataItem struct {$/;"	t
dataPath	./crypto/tls/handshake_client_test.go	/^func (test *clientTest) dataPath() string {$/;"	f
dataPath	./crypto/tls/handshake_server_test.go	/^func (test *serverTest) dataPath() string {$/;"	f
dataSize	./encoding/binary/binary.go	/^func dataSize(v reflect.Value) int {$/;"	f
dataStrings	./debug/elf/elf.go	/^var dataStrings = []intName{$/;"	v
dataURL	./unicode/maketables.go	/^var dataURL = flag.String("data", "", "full URL for UnicodeData.txt; defaults to --url\/UnicodeData.txt")$/;"	v
datagostring	./cmd/compile/internal/gc/obj.go	/^func datagostring(sval string, a *obj.Addr) {$/;"	f
datasect	./cmd/link/internal/ld/pe.go	/^var datasect int$/;"	v
datcmp	./cmd/link/internal/ld/data.go	/^func datcmp(s1 *LSym, s2 *LSym) int {$/;"	f
date	./time/time.go	/^func (t Time) date(full bool) (year int, month Month, day int, yday int) {$/;"	f
dateLayouts	./net/mail/message.go	/^var dateLayouts []string$/;"	v
dateTests	./time/time_test.go	/^var dateTests = []struct {$/;"	v
datoff	./cmd/link/internal/ld/lib.go	/^func datoff(addr int64) int64 {$/;"	f
days	./time/time.go	/^var days = [...]string{$/;"	v
daysBefore	./time/time.go	/^var daysBefore = [...]int32{$/;"	v
daysBeforeMonth	./syscall/unzip_nacl.go	/^var daysBeforeMonth = [...]int32{$/;"	v
daysIn	./time/time.go	/^func daysIn(m Month, year int) int {$/;"	f
daysInTests	./time/time_test.go	/^var daysInTests = []struct {$/;"	v
db	./database/sql/example_test.go	/^var db *sql.DB$/;"	v
dbConn	./database/sql/sql_test.go	/^	type dbConn struct {$/;"	t
dbgVar	./runtime/runtime1.go	/^type dbgVar struct {$/;"	t
dbgvars	./runtime/runtime1.go	/^var dbgvars = []dbgVar{$/;"	v
dbuf	./encoding/base32/base32.go	/^		var dbuf [8]byte$/;"	v
dbuf	./encoding/base64/base64.go	/^		var dbuf [4]byte$/;"	v
dcl	./cmd/compile/internal/gc/gen.go	/^		var dcl *Sym$/;"	v
dcl	./cmd/compile/internal/gc/inl.go	/^	var dcl *NodeList$/;"	v
dcl_name	./cmd/compile/internal/gc/go.y	/^dcl_name:$/;"	l
dcl_name_list	./cmd/compile/internal/gc/go.y	/^dcl_name_list:$/;"	l
dclcontext	./cmd/compile/internal/gc/go.go	/^var dclcontext uint8 \/\/ PEXTERN\/PAUTO$/;"	v
dclname	./cmd/compile/internal/gc/dcl.go	/^func dclname(s *Sym) *Node {$/;"	f
dclstack	./cmd/compile/internal/gc/go.go	/^var dclstack *Sym$/;"	v
dcommontype	./cmd/compile/internal/gc/reflect.go	/^func dcommontype(s *Sym, ot int, t *Type) int {$/;"	f
dcommontype_algarray	./cmd/compile/internal/gc/reflect.go	/^var dcommontype_algarray *Sym$/;"	v
dcopy	./cmd/compile/internal/gc/dcl.go	/^func dcopy(a *Sym, b *Sym) {$/;"	f
dd	./cmd/link/internal/ld/pe.go	/^var dd []IMAGE_DATA_DIRECTORY$/;"	v
ddBytes	./encoding/xml/marshal.go	/^var ddBytes = []byte("--")$/;"	v
dddArg	./text/template/exec_test.go	/^func dddArg(a int, b ...string) string {$/;"	f
dddType	./text/template/funcs.go	/^	var dddType reflect.Type$/;"	v
ddelta	./image/draw/draw.go	/^	var ddelta, sdelta int$/;"	v
ddumped	./cmd/compile/internal/gc/gsubr.go	/^var ddumped int$/;"	v
deBruijn32Lookup	./cmd/compile/internal/big/nat.go	/^var deBruijn32Lookup = []byte{$/;"	v
deBruijn32Lookup	./math/big/nat.go	/^var deBruijn32Lookup = []byte{$/;"	v
deBruijn64Lookup	./cmd/compile/internal/big/nat.go	/^var deBruijn64Lookup = []byte{$/;"	v
deBruijn64Lookup	./math/big/nat.go	/^var deBruijn64Lookup = []byte{$/;"	v
dead	./cmd/compile/internal/gc/popt.go	/^var dead interface{} = 1$/;"	v
deadState	./cmd/vet/deadcode.go	/^type deadState struct {$/;"	t
deadcode	./cmd/link/internal/ld/go.go	/^func deadcode() {$/;"	f
deadline	./net/dial.go	/^func (d *Dialer) deadline(now time.Time) time.Time {$/;"	f
deadlock	./runtime/panic1.go	/^var deadlock mutex$/;"	v
deathSignalChild	./syscall/syscall_linux_test.go	/^func deathSignalChild() {$/;"	f
deathSignalParent	./syscall/syscall_linux_test.go	/^func deathSignalParent() {$/;"	f
debug	./cmd/cover/cover_test.go	/^var debug = false \/\/ Keeps the rewritten files around if set.$/;"	v
debug	./encoding/gob/debug.go	/^func debug(r io.Reader) (err error) {$/;"	f
debug	./image/internal/imageutil/gen.go	/^var debug = flag.Bool("debug", false, "")$/;"	v
debug	./net/mail/message.go	/^var debug = debugT(false)$/;"	v
debug	./net/rpc/debug.go	/^var debug = template.Must(template.New("RPC debug").Parse(debugText))$/;"	v
debug	./regexp/regexp.go	/^var debug = false$/;"	v
debug	./runtime/runtime1.go	/^var debug struct {$/;"	v
debug	./syscall/mksysctl_openbsd.pl	/^sub debug() {$/;"	s
debug	./text/template/exec_test.go	/^var debug = flag.Bool("debug", false, "show the errors produced by the tests")$/;"	v
debug	./text/template/parse/parse_test.go	/^var debug = flag.Bool("debug", false, "show the errors produced by the main tests")$/;"	v
debugDefine	./cmd/cgo/gcc.go	/^var debugDefine = flag.Bool("debug-define", false, "print relevant #defines")$/;"	v
debugFunc	./encoding/gob/decoder.go	/^var debugFunc func(io.Reader)$/;"	v
debugGcc	./cmd/cgo/gcc.go	/^var debugGcc = flag.Bool("debug-gcc", false, "print gcc invocations")$/;"	v
debugHTTP	./net/rpc/debug.go	/^type debugHTTP struct {$/;"	t
debugLog	./net/rpc/debug.go	/^var debugLog = false$/;"	v
debugMethod	./net/rpc/debug.go	/^type debugMethod struct {$/;"	t
debugPtrmask	./runtime/mbitmap.go	/^var debugPtrmask struct {$/;"	v
debugService	./net/rpc/debug.go	/^type debugService struct {$/;"	t
debugT	./net/mail/message.go	/^type debugT bool$/;"	t
debugger	./encoding/gob/debug.go	/^type debugger struct {$/;"	t
debughandler	./runtime/sys_nacl_amd64p32.s	/^debughandler:$/;"	l
debuglive	./cmd/compile/internal/gc/go.go	/^var debuglive int$/;"	v
debuglock	./runtime/print1.go	/^var debuglock mutex$/;"	v
debugstr	./cmd/compile/internal/gc/go.go	/^var debugstr string$/;"	v
debugtab	./cmd/compile/internal/gc/lex.go	/^var debugtab = []struct {$/;"	v
dec	./cmd/compile/internal/gc/esc.go	/^func (l Level) dec() Level {$/;"	f
dec	./crypto/aes/aes_test.go	/^		var dec []uint32$/;"	v
dec	./encoding/gob/decgen.go	/^	fmt.Fprintf(b, "var dec%sHelper = map[reflect.Kind]decHelper{\\n", upperClass)$/;"	v
dec	./encoding/gob/decgen.go	/^func dec%[2]sArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
dec	./encoding/gob/decgen.go	/^func dec%[2]sSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decAlloc	./encoding/gob/decode.go	/^func decAlloc(v reflect.Value) reflect.Value {$/;"	f
decArrayHelper	./encoding/gob/dec_helpers.go	/^var decArrayHelper = map[reflect.Kind]decHelper{$/;"	v
decBool	./encoding/gob/decode.go	/^func decBool(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decBoolArray	./encoding/gob/dec_helpers.go	/^func decBoolArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decBoolSlice	./encoding/gob/dec_helpers.go	/^func decBoolSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decBuffer	./encoding/gob/decode.go	/^type decBuffer struct {$/;"	t
decComplex128	./encoding/gob/decode.go	/^func decComplex128(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decComplex128Array	./encoding/gob/dec_helpers.go	/^func decComplex128Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decComplex128Slice	./encoding/gob/dec_helpers.go	/^func decComplex128Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decComplex64	./encoding/gob/decode.go	/^func decComplex64(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decComplex64Array	./encoding/gob/dec_helpers.go	/^func decComplex64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decComplex64Slice	./encoding/gob/dec_helpers.go	/^func decComplex64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decEngine	./encoding/gob/decode.go	/^type decEngine struct {$/;"	t
decFloat32	./encoding/gob/decode.go	/^func decFloat32(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decFloat32Array	./encoding/gob/dec_helpers.go	/^func decFloat32Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decFloat32Slice	./encoding/gob/dec_helpers.go	/^func decFloat32Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decFloat64	./encoding/gob/decode.go	/^func decFloat64(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decFloat64Array	./encoding/gob/dec_helpers.go	/^func decFloat64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decFloat64Slice	./encoding/gob/dec_helpers.go	/^func decFloat64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decHelper	./encoding/gob/decode.go	/^type decHelper func(state *decoderState, v reflect.Value, length int, ovfl error) bool$/;"	t
decIgnoreOpFor	./encoding/gob/decode.go	/^func (dec *Decoder) decIgnoreOpFor(wireId typeId, inProgress map[typeId]*decOp) *decOp {$/;"	f
decIgnoreOpMap	./encoding/gob/decode.go	/^var decIgnoreOpMap = map[typeId]decOp{$/;"	v
decInstr	./encoding/gob/decode.go	/^type decInstr struct {$/;"	t
decInt16	./encoding/gob/decode.go	/^func decInt16(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decInt16Array	./encoding/gob/dec_helpers.go	/^func decInt16Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decInt16Slice	./encoding/gob/dec_helpers.go	/^func decInt16Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decInt32	./encoding/gob/decode.go	/^func decInt32(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decInt32Array	./encoding/gob/dec_helpers.go	/^func decInt32Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decInt32Slice	./encoding/gob/dec_helpers.go	/^func decInt32Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decInt64	./encoding/gob/decode.go	/^func decInt64(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decInt64Array	./encoding/gob/dec_helpers.go	/^func decInt64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decInt64Slice	./encoding/gob/dec_helpers.go	/^func decInt64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decInt8	./encoding/gob/decode.go	/^func decInt8(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decInt8Array	./encoding/gob/dec_helpers.go	/^func decInt8Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decInt8Slice	./encoding/gob/dec_helpers.go	/^func decInt8Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decIntArray	./encoding/gob/dec_helpers.go	/^func decIntArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decIntSlice	./encoding/gob/dec_helpers.go	/^func decIntSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decOp	./encoding/gob/decode.go	/^type decOp func(i *decInstr, state *decoderState, v reflect.Value)$/;"	t
decOpFor	./encoding/gob/decode.go	/^func (dec *Decoder) decOpFor(wireId typeId, rt reflect.Type, name string, inProgress map[reflect.Type]*decOp) *decOp {$/;"	f
decOpTable	./encoding/gob/decode.go	/^var decOpTable = [...]decOp{$/;"	v
decSliceHelper	./encoding/gob/dec_helpers.go	/^var decSliceHelper = map[reflect.Kind]decHelper{$/;"	v
decString	./encoding/gob/decode.go	/^func decString(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decStringArray	./encoding/gob/dec_helpers.go	/^func decStringArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decStringSlice	./encoding/gob/dec_helpers.go	/^func decStringSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUint16	./encoding/gob/decode.go	/^func decUint16(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decUint16Array	./encoding/gob/dec_helpers.go	/^func decUint16Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUint16Slice	./encoding/gob/dec_helpers.go	/^func decUint16Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUint32	./encoding/gob/decode.go	/^func decUint32(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decUint32Array	./encoding/gob/dec_helpers.go	/^func decUint32Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUint32Slice	./encoding/gob/dec_helpers.go	/^func decUint32Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUint64	./encoding/gob/decode.go	/^func decUint64(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decUint64Array	./encoding/gob/dec_helpers.go	/^func decUint64Array(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUint64Slice	./encoding/gob/dec_helpers.go	/^func decUint64Slice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUint8	./encoding/gob/decode.go	/^func decUint8(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decUint8Slice	./encoding/gob/decode.go	/^func decUint8Slice(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
decUintArray	./encoding/gob/dec_helpers.go	/^func decUintArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUintSlice	./encoding/gob/dec_helpers.go	/^func decUintSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUintptrArray	./encoding/gob/dec_helpers.go	/^func decUintptrArray(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decUintptrSlice	./encoding/gob/dec_helpers.go	/^func decUintptrSlice(state *decoderState, v reflect.Value, length int, ovfl error) bool {$/;"	f
decimal	./cmd/compile/internal/big/decimal.go	/^type decimal struct {$/;"	t
decimal	./math/big/decimal.go	/^type decimal struct {$/;"	t
decimal	./strconv/decimal.go	/^type decimal struct {$/;"	t
decimalSlice	./strconv/ftoa.go	/^type decimalSlice struct {$/;"	t
decimalString	./cmd/compile/internal/big/natconv.go	/^func (x nat) decimalString() string {$/;"	f
decimalString	./math/big/natconv.go	/^func (x nat) decimalString() string {$/;"	f
decl	./go/printer/nodes.go	/^func (p *printer) decl(decl ast.Decl) {$/;"	f
decl	./go/types/decl.go	/^		check.decl = d \/\/ new package-level var decl$/;"	v
decl	./go/types/resolver.go	/^		\/\/ var decl w\/o init expr$/;"	v
decl	./go/types/resolver.go	/^\/\/ arityMatch checks that the lhs and rhs of a const or var decl$/;"	v
decl	./net/http/client_test.go	/^		var decl []string$/;"	v
decl	./text/template/parse/node.go	/^	var decl []*VariableNode$/;"	v
decl	./text/template/parse/parse.go	/^	var decl []*VariableNode$/;"	v
declImports	./cmd/fix/fix.go	/^func declImports(gen *ast.GenDecl, path string) bool {$/;"	f
declInfo	./go/types/resolver.go	/^type declInfo struct {$/;"	t
declList	./go/printer/nodes.go	/^func (p *printer) declList(list []ast.Decl) {$/;"	f
declNode	./go/ast/ast.go	/^func (*BadDecl) declNode()  {}$/;"	f
declNode	./go/ast/ast.go	/^func (*FuncDecl) declNode() {}$/;"	f
declNode	./go/ast/ast.go	/^func (*GenDecl) declNode()  {}$/;"	f
declStmt	./go/types/decl.go	/^func (check *Checker) declStmt(decl ast.Decl) {$/;"	f
declToken	./go/printer/nodes.go	/^func declToken(decl ast.Decl) (tok token.Token) {$/;"	f
declTypeName	./go/internal/gcimporter/gcimporter.go	/^func declTypeName(pkg *types.Package, name string) *types.TypeName {$/;"	f
declaration	./cmd/cgo/out.go	/^	\/\/ Go func declaration.$/;"	f
declaration	./cmd/compile/internal/gc/dcl.go	/^				Yyerror("missing expression in var declaration")$/;"	v
declaration	./cmd/compile/internal/gc/dcl.go	/^		Yyerror("extra expression in var declaration")$/;"	v
declaration	./cmd/compile/internal/gc/go.go	/^\/\/ Pending annotations for next func declaration.$/;"	f
declaration	./cmd/compile/internal/gc/y.go	/^	{111, 63, "unexpected semicolon or newline in type declaration"},$/;"	t
declaration	./cmd/compile/internal/gc/y.go	/^	{279, 33, "var declaration not allowed in for initializer"},$/;"	v
declaration	./cmd/doc/pkg.go	/^\/\/ oneLineTypeDecl prints a type declaration as a single line.$/;"	t
declaration	./cmd/fix/typecheck.go	/^			\/\/ var declaration.  Use type if present.$/;"	v
declaration	./cmd/internal/obj/arm/asm5.go	/^			\/\/ its type declaration if necessary.$/;"	t
declaration	./go/ast/ast.go	/^	\/\/ A TypeSpec node represents a type declaration (TypeSpec production).$/;"	t
declaration	./go/doc/doc.go	/^\/\/ Func is the documentation for a func declaration.$/;"	f
declaration	./go/doc/doc.go	/^\/\/ Type is the documentation for a type declaration.$/;"	t
declaration	./go/doc/reader.go	/^\/\/ readType processes a type declaration.$/;"	t
declaration	./go/doc/reader.go	/^\/\/ readValue processes a const or var declaration.$/;"	v
declaration	./go/internal/gcimporter/gcimporter.go	/^	\/\/ a given type declaration.$/;"	t
declaration	./go/types/api.go	/^	\/\/ involved in an invalid recursive type declaration) have$/;"	t
declaration	./go/types/decl.go	/^				check.invalidAST(s.Pos(), "const, type, or var declaration expected")$/;"	v
declaration	./go/types/expr.go	/^			\/\/ init expression\/func declaration which contains$/;"	f
declaration	./go/types/predicates.go	/^		\/\/ in the same type declaration.$/;"	t
declaration	./go/types/resolver.go	/^							\/\/ rhs initializer (n:1 var declaration).$/;"	v
declaration	./go/types/resolver.go	/^	\/\/ pre-allocate space for type declaration paths so that the underlying array is reused$/;"	t
declaration	./go/types/resolver.go	/^	fdecl *ast.FuncDecl \/\/ func declaration, or nil$/;"	f
declaration	./go/types/resolver.go	/^\/\/ A declInfo describes a package-level const, type, var, or func declaration.$/;"	f
declaration	./go/types/typexpr.go	/^\/\/ in a type declaration, and def.underlying will be set to the type of e before$/;"	t
declarations	./cmd/vet/asmdecl.go	/^\/\/ Identify mismatches between assembly files and Go func declarations.$/;"	f
declarations	./go/doc/reader.go	/^					\/\/ go\/doc type declarations always appear w\/o$/;"	t
declarations	./go/doc/reader.go	/^	\/\/ support for package-local error type declarations$/;"	t
declarations	./go/doc/testdata/d1.go	/^	\/\/ Single var declarations inside ()'s are considered ungrouped$/;"	v
declarations	./go/doc/testdata/e.go	/^\/\/ Recursive type declarations must not lead to endless recursion.$/;"	t
declarations	./go/printer/nodes.go	/^				\/\/ two or more grouped const\/var declarations:$/;"	v
declarations	./go/printer/nodes.go	/^\/\/ consecutive const or var declarations must be kept, or if initialization$/;"	v
declarations	./go/printer/testdata/parser.go	/^			\/\/ short var declarations cannot have redeclaration errors$/;"	v
declarations	./go/types/decl.go	/^	\/\/ Const and var declarations must not have initialization$/;"	v
declarations	./go/types/decl.go	/^	\/\/ func declarations cannot use iota$/;"	f
declarations	./go/types/decl.go	/^	\/\/ type declarations cannot use iota$/;"	t
declarations	./go/types/decl.go	/^	\/\/ var declarations cannot use iota$/;"	v
declarations	./go/types/decl.go	/^	obj.typ = named \/\/ make sure recursive type declarations terminate$/;"	t
declarations	./go/types/predicates.go	/^				\/\/ type declarations that recur via parameter types, an extremely$/;"	t
declarations	./go/types/typestring_test.go	/^\/\/ types that depend on other type declarations (src in TestTypes)$/;"	t
declarations	./go/types/typestring_test.go	/^\/\/ types that don't depend on any other type declarations$/;"	t
declarations	./syscall/mksyscall_windows.go	/^like func declarations if \/\/sys is replaced by func, but:$/;"	f
declare	./cmd/compile/internal/gc/dcl.go	/^func declare(n *Node, ctxt uint8) {$/;"	f
declare	./go/ast/resolve.go	/^func (p *pkgBuilder) declare(scope, altScope *Scope, obj *Object) {$/;"	f
declare	./go/parser/parser.go	/^func (p *parser) declare(decl, data interface{}, scope *ast.Scope, kind ast.ObjKind, idents ...*ast.Ident) {$/;"	f
declare	./go/printer/testdata/parser.go	/^func (p *parser) declare(decl interface{}, scope *ast.Scope, kind ast.ObjKind, idents ...*ast.Ident) {$/;"	f
declare	./go/types/decl.go	/^func (check *Checker) declare(scope *Scope, id *ast.Ident, obj Object, pos token.Pos) {$/;"	f
declareCoverVars	./cmd/go/test.go	/^func declareCoverVars(importPath string, files ...string) map[string]*CoverVar {$/;"	f
declareInSet	./go/types/typexpr.go	/^func (check *Checker) declareInSet(oset *objset, pos token.Pos, obj Object) bool {$/;"	f
declarePkgObj	./go/types/resolver.go	/^func (check *Checker) declarePkgObj(ident *ast.Ident, obj Object, d *declInfo) {$/;"	f
declareTrailer	./net/http/server.go	/^func (w *response) declareTrailer(k string) {$/;"	f
declare_typegen	./cmd/compile/internal/gc/dcl.go	/^var declare_typegen int$/;"	v
declaring	./go/types/selection.go	/^\/\/ The last index entry is the field or method index of the type declaring f;$/;"	t
decldepth	./cmd/compile/internal/gc/go.go	/^var decldepth int32$/;"	v
decls	./go/ast/filter.go	/^	var decls []Decl$/;"	v
decls	./go/doc/example.go	/^	var decls []ast.Decl$/;"	v
decls	./go/parser/parser.go	/^	var decls []ast.Decl$/;"	v
decls	./go/printer/printer_test.go	/^var decls = []string{$/;"	v
decls	./go/printer/testdata/parser.go	/^	var decls []ast.Decl$/;"	v
decls	./go/types/resolver.go	/^\/\/ var decls, init is nil (the init exprs are in s in this case).$/;"	v
decode	./compress/lzw/reader.go	/^func (d *decoder) decode() {$/;"	f
decode	./encoding/base32/base32.go	/^func (enc *Encoding) decode(dst, src []byte) (n int, end bool, err error) {$/;"	f
decode	./encoding/base64/base64.go	/^func (enc *Encoding) decode(dst, src []byte) (n int, end bool, err error) {$/;"	f
decode	./image/decode_test.go	/^func decode(filename string) (image.Image, string, error) {$/;"	f
decode	./image/gif/reader.go	/^func (d *decoder) decode(r io.Reader, configOnly bool) error {$/;"	f
decode	./image/jpeg/reader.go	/^func (d *decoder) decode(r io.Reader, configOnly bool) (image.Image, error) {$/;"	f
decode	./image/png/reader.go	/^func (d *decoder) decode() (image.Image, error) {$/;"	f
decode	./mime/encodedword.go	/^func decode(encoding byte, text string) ([]byte, error) {$/;"	f
decode1	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^func decode1(src []byte, mode int, gnuCompat bool) (Inst, error) {$/;"	f
decode2231Enc	./mime/mediatype.go	/^func decode2231Enc(v string) string {$/;"	f
decodeArg	./cmd/internal/rsc.io/arm/armasm/decode.go	/^func decodeArg(aop instArg, x uint32) Arg {$/;"	f
decodeArray	./encoding/gob/decode.go	/^func (dec *Decoder) decodeArray(atyp reflect.Type, state *decoderState, value reflect.Value, elemOp decOp, length int, ovfl error, helper decHelper) {$/;"	f
decodeArrayHelper	./encoding/gob/decode.go	/^func (dec *Decoder) decodeArrayHelper(state *decoderState, value reflect.Value, elemOp decOp, length int, ovfl error, helper decHelper) {$/;"	f
decodeBase64	./crypto/rsa/pkcs1v15_test.go	/^func decodeBase64(in string) []byte {$/;"	f
decodeBit	./image/jpeg/huffman.go	/^func (d *decoder) decodeBit() (bool, error) {$/;"	f
decodeBits	./image/jpeg/huffman.go	/^func (d *decoder) decodeBits(n int32) (uint32, error) {$/;"	f
decodeBool	./cmd/pprof/internal/profile/proto.go	/^func decodeBool(b *buffer, x *bool) error {$/;"	f
decodeCSS	./html/template/css.go	/^func decodeCSS(s []byte) []byte {$/;"	f
decodeConfig	./image/decode_test.go	/^func decodeConfig(filename string) (image.Config, string, error) {$/;"	f
decodeCoverage	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func decodeCoverage() float64 {$/;"	f
decodeCoverage	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func decodeCoverage() float64 {$/;"	f
decodeError	./encoding/pem/pem.go	/^func decodeError(data, rest []byte) (*Block, []byte) {$/;"	f
decodeField	./cmd/pprof/internal/profile/proto.go	/^func decodeField(b *buffer, data []byte) ([]byte, error) {$/;"	f
decodeFile	./image/jpeg/reader_test.go	/^func decodeFile(filename string) (image.Image, error) {$/;"	f
decodeGobDecoder	./encoding/gob/decode.go	/^func (dec *Decoder) decodeGobDecoder(ut *userTypeInfo, state *decoderState, value reflect.Value) {$/;"	f
decodeHuffman	./image/jpeg/huffman.go	/^func (d *decoder) decodeHuffman(h *huffman) (uint8, error) {$/;"	f
decodeIgnoredValue	./encoding/gob/decode.go	/^func (dec *Decoder) decodeIgnoredValue(wireId typeId) {$/;"	f
decodeInt	./encoding/gob/decode.go	/^func (state *decoderState) decodeInt() int64 {$/;"	f
decodeInt64	./cmd/pprof/internal/profile/proto.go	/^func decodeInt64(b *buffer, x *int64) error {$/;"	f
decodeInt64s	./cmd/pprof/internal/profile/proto.go	/^func decodeInt64s(b *buffer, x *[]int64) error {$/;"	f
decodeInterface	./encoding/gob/decode.go	/^func (dec *Decoder) decodeInterface(ityp reflect.Type, state *decoderState, value reflect.Value) {$/;"	f
decodeIntoValue	./encoding/gob/decode.go	/^func decodeIntoValue(state *decoderState, op decOp, isPtr bool, value reflect.Value, ovfl error) reflect.Value {$/;"	f
decodeMap	./encoding/gob/decode.go	/^func (dec *Decoder) decodeMap(mtyp reflect.Type, state *decoderState, value reflect.Value, keyOp, elemOp decOp, ovfl error) {$/;"	f
decodeMessage	./cmd/pprof/internal/profile/proto.go	/^func decodeMessage(b *buffer, m message) error {$/;"	f
decodeOp	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^type decodeOp uint16$/;"	t
decodeRFC2047Word	./net/mail/message.go	/^func (p *addrParser) decodeRFC2047Word(s string) (string, error) {$/;"	f
decodeRuneInStringInternal	./unicode/utf8/utf8.go	/^func decodeRuneInStringInternal(s string) (r rune, size int, short bool) {$/;"	f
decodeRuneInternal	./unicode/utf8/utf8.go	/^func decodeRuneInternal(p []byte) (r rune, size int, short bool) {$/;"	f
decodeRuneTests	./unicode/utf16/utf16_test.go	/^var decodeRuneTests = []struct {$/;"	v
decodeShift	./cmd/internal/rsc.io/arm/armasm/decode.go	/^func decodeShift(x uint32) (Shift, uint8) {$/;"	f
decodeSingle	./encoding/gob/decode.go	/^func (dec *Decoder) decodeSingle(engine *decEngine, ut *userTypeInfo, value reflect.Value) {$/;"	f
decodeSlice	./encoding/gob/decode.go	/^func (dec *Decoder) decodeSlice(state *decoderState, value reflect.Value, elemOp decOp, ovfl error, helper decHelper) {$/;"	f
decodeState	./encoding/json/decode.go	/^type decodeState struct {$/;"	t
decodeString	./cmd/pprof/internal/profile/proto.go	/^func decodeString(b *buffer, x *string) error {$/;"	f
decodeStrings	./cmd/pprof/internal/profile/proto.go	/^func decodeStrings(b *buffer, x *[]string) error {$/;"	f
decodeStruct	./encoding/gob/decode.go	/^func (dec *Decoder) decodeStruct(engine *decEngine, ut *userTypeInfo, value reflect.Value) {$/;"	f
decodeTest	./unicode/utf16/utf16_test.go	/^type decodeTest struct {$/;"	t
decodeTests	./unicode/utf16/utf16_test.go	/^var decodeTests = []decodeTest{$/;"	v
decodeThis	./encoding/json/stream_test.go	/^type decodeThis struct {$/;"	t
decodeTypeErrorTests	./encoding/json/decode_test.go	/^var decodeTypeErrorTests = []struct {$/;"	v
decodeTypeSequence	./encoding/gob/decoder.go	/^func (dec *Decoder) decodeTypeSequence(isInterface bool) typeId {$/;"	f
decodeUint	./encoding/gob/decode.go	/^func (state *decoderState) decodeUint() (x uint64) {$/;"	f
decodeUint64	./cmd/pprof/internal/profile/proto.go	/^func decodeUint64(b *buffer, x *uint64) error {$/;"	f
decodeUint64s	./cmd/pprof/internal/profile/proto.go	/^func decodeUint64s(b *buffer, x *[]uint64) error {$/;"	f
decodeUintReader	./encoding/gob/decode.go	/^func decodeUintReader(r io.Reader, buf []byte) (x uint64, width int, err error) {$/;"	f
decodeValue	./encoding/gob/decode.go	/^func (dec *Decoder) decodeValue(wireId typeId, value reflect.Value) {$/;"	f
decodeVarint	./cmd/pprof/internal/profile/proto.go	/^func decodeVarint(data []byte) (uint64, []byte, error) {$/;"	f
decode_inuxi	./cmd/link/internal/ld/decodesym.go	/^func decode_inuxi(p []byte, sz int) uint64 {$/;"	f
decode_reloc	./cmd/link/internal/ld/decodesym.go	/^func decode_reloc(s *LSym, off int32) *Reloc {$/;"	f
decode_reloc_sym	./cmd/link/internal/ld/decodesym.go	/^func decode_reloc_sym(s *LSym, off int32) *LSym {$/;"	f
decoder	./cmd/internal/rsc.io/x86/x86asm/tables.go	/^var decoder = [...]uint16{$/;"	v
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p *Function) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p *Line) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p *Location) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p *Mapping) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p *Profile) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p *Sample) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p *ValueType) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/encode.go	/^func (p Label) decoder() []decoder {$/;"	f
decoder	./cmd/pprof/internal/profile/proto.go	/^type decoder func(*buffer, message) error$/;"	t
decoder	./compress/lzw/reader.go	/^type decoder struct {$/;"	t
decoder	./encoding/ascii85/ascii85.go	/^type decoder struct {$/;"	t
decoder	./encoding/base32/base32.go	/^type decoder struct {$/;"	t
decoder	./encoding/base64/base64.go	/^type decoder struct {$/;"	t
decoder	./encoding/binary/binary.go	/^type decoder coder$/;"	t
decoder	./image/gif/reader.go	/^type decoder struct {$/;"	t
decoder	./image/jpeg/reader.go	/^type decoder struct {$/;"	t
decoder	./image/png/reader.go	/^type decoder struct {$/;"	t
decoderCover	./cmd/internal/rsc.io/arm/armasm/decode.go	/^var decoderCover []bool$/;"	v
decoderCover	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var decoderCover []bool$/;"	v
decoderState	./encoding/gob/decode.go	/^type decoderState struct {$/;"	t
decodetype_arrayelem	./cmd/link/internal/ld/decodesym.go	/^func decodetype_arrayelem(s *LSym) *LSym {$/;"	f
decodetype_arraylen	./cmd/link/internal/ld/decodesym.go	/^func decodetype_arraylen(s *LSym) int64 {$/;"	f
decodetype_chanelem	./cmd/link/internal/ld/decodesym.go	/^func decodetype_chanelem(s *LSym) *LSym {$/;"	f
decodetype_funcdotdotdot	./cmd/link/internal/ld/decodesym.go	/^func decodetype_funcdotdotdot(s *LSym) int {$/;"	f
decodetype_funcincount	./cmd/link/internal/ld/decodesym.go	/^func decodetype_funcincount(s *LSym) int {$/;"	f
decodetype_funcintype	./cmd/link/internal/ld/decodesym.go	/^func decodetype_funcintype(s *LSym, i int) *LSym {$/;"	f
decodetype_funcoutcount	./cmd/link/internal/ld/decodesym.go	/^func decodetype_funcoutcount(s *LSym) int {$/;"	f
decodetype_funcouttype	./cmd/link/internal/ld/decodesym.go	/^func decodetype_funcouttype(s *LSym, i int) *LSym {$/;"	f
decodetype_gcmask	./cmd/link/internal/ld/decodesym.go	/^func decodetype_gcmask(s *LSym) []byte {$/;"	f
decodetype_gcprog	./cmd/link/internal/ld/decodesym.go	/^func decodetype_gcprog(s *LSym) []byte {$/;"	f
decodetype_gcprog_shlib	./cmd/link/internal/ld/decodesym.go	/^func decodetype_gcprog_shlib(s *LSym) uint64 {$/;"	f
decodetype_ifacemethodcount	./cmd/link/internal/ld/decodesym.go	/^func decodetype_ifacemethodcount(s *LSym) int64 {$/;"	f
decodetype_kind	./cmd/link/internal/ld/decodesym.go	/^func decodetype_kind(s *LSym) uint8 {$/;"	f
decodetype_mapkey	./cmd/link/internal/ld/decodesym.go	/^func decodetype_mapkey(s *LSym) *LSym {$/;"	f
decodetype_mapvalue	./cmd/link/internal/ld/decodesym.go	/^func decodetype_mapvalue(s *LSym) *LSym {$/;"	f
decodetype_noptr	./cmd/link/internal/ld/decodesym.go	/^func decodetype_noptr(s *LSym) uint8 {$/;"	f
decodetype_ptrdata	./cmd/link/internal/ld/decodesym.go	/^func decodetype_ptrdata(s *LSym) int64 {$/;"	f
decodetype_ptrelem	./cmd/link/internal/ld/decodesym.go	/^func decodetype_ptrelem(s *LSym) *LSym {$/;"	f
decodetype_size	./cmd/link/internal/ld/decodesym.go	/^func decodetype_size(s *LSym) int64 {$/;"	f
decodetype_structfieldcount	./cmd/link/internal/ld/decodesym.go	/^func decodetype_structfieldcount(s *LSym) int {$/;"	f
decodetype_structfieldname	./cmd/link/internal/ld/decodesym.go	/^func decodetype_structfieldname(s *LSym, i int) string {$/;"	f
decodetype_structfieldoffs	./cmd/link/internal/ld/decodesym.go	/^func decodetype_structfieldoffs(s *LSym, i int) int64 {$/;"	f
decodetype_structfieldtype	./cmd/link/internal/ld/decodesym.go	/^func decodetype_structfieldtype(s *LSym, i int) *LSym {$/;"	f
decodetype_usegcprog	./cmd/link/internal/ld/decodesym.go	/^func decodetype_usegcprog(s *LSym) uint8 {$/;"	f
decompress	./debug/elf/file_test.go	/^func decompress(gz string) (io.ReaderAt, error) {$/;"	f
decompressHex	./compress/bzip2/bzip2_test.go	/^func decompressHex(s string) (out []byte, err error) {$/;"	f
decompressor	./archive/zip/register.go	/^func decompressor(method uint16) Decompressor {$/;"	f
decompressor	./compress/flate/inflate.go	/^type decompressor struct {$/;"	t
decompressor	./syscall/unzip_nacl.go	/^type decompressor struct {$/;"	t
decorate	./go/doc/testdata/testing.go	/^func decorate(s string, addFileLine bool) string {$/;"	f
decorate	./testing/testing.go	/^func decorate(s string) string {$/;"	f
decref	./net/fd_plan9.go	/^func (fd *netFD) decref() {$/;"	f
decref	./net/fd_unix.go	/^func (fd *netFD) decref() {$/;"	f
decref	./net/fd_windows.go	/^func (fd *netFD) decref() {$/;"	f
decrypt	./crypto/rsa/rsa.go	/^func decrypt(random io.Reader, priv *PrivateKey, c *big.Int) (m *big.Int, err error) {$/;"	f
decrypt	./crypto/tls/conn.go	/^func (hc *halfConn) decrypt(b *block) (ok bool, prefixLen int, alertValue alert) {$/;"	f
decryptBlock	./crypto/aes/cipher_asm.go	/^func decryptBlock(xk []uint32, dst, src []byte) {$/;"	f
decryptBlock	./crypto/aes/cipher_generic.go	/^func decryptBlock(xk []uint32, dst, src []byte) {$/;"	f
decryptBlock	./crypto/des/block.go	/^func decryptBlock(subkeys []uint64, dst, src []byte) {$/;"	f
decryptBlockAsm	./crypto/aes/cipher_asm.go	/^func decryptBlockAsm(nr int, xk *uint32, dst, src *byte)$/;"	f
decryptBlockGo	./crypto/aes/block.go	/^func decryptBlockGo(xk []uint32, dst, src []byte) {$/;"	f
decryptPKCS1v15	./crypto/rsa/pkcs1v15.go	/^func decryptPKCS1v15(rand io.Reader, priv *PrivateKey, ciphertext []byte) (valid int, em []byte, index int, err error) {$/;"	f
decryptPKCS1v15SessionKeyTests	./crypto/rsa/pkcs1v15_test.go	/^var decryptPKCS1v15SessionKeyTests = []DecryptPKCS1v15Test{$/;"	v
decryptPKCS1v15Tests	./crypto/rsa/pkcs1v15_test.go	/^var decryptPKCS1v15Tests = []DecryptPKCS1v15Test{$/;"	v
decryptTicket	./crypto/tls/ticket.go	/^func (c *Conn) decryptTicket(encrypted []byte) (*sessionState, bool) {$/;"	f
deductSweepCredit	./runtime/mgcsweep.go	/^func deductSweepCredit(spanBytes uintptr, callerSweepPages uintptr) {$/;"	f
deep	./cmd/compile/internal/gc/subr.go	/^func deep(t *Type) *Type {$/;"	f
deepEqualTests	./reflect/all_test.go	/^var deepEqualTests = []DeepEqualTest{$/;"	v
deepValueEqual	./reflect/deepequal.go	/^func deepValueEqual(v1, v2 Value, visited map[visit]bool, depth int) bool {$/;"	f
def	./cmd/compile/internal/gc/select.go	/^	var def *Node$/;"	v
def	./cmd/compile/internal/gc/swt.go	/^	var def *Node      \/\/ defaults$/;"	v
def	./cmd/compile/internal/gc/swt.go	/^	var def *Node$/;"	v
def	./cmd/link/internal/ld/go.go	/^	var def string$/;"	v
def	./go/types/universe.go	/^func def(obj Object) {$/;"	f
def	./net/nss.go	/^	var def string$/;"	v
defPredeclaredConsts	./go/types/universe.go	/^func defPredeclaredConsts() {$/;"	f
defPredeclaredFuncs	./go/types/universe.go	/^func defPredeclaredFuncs() {$/;"	f
defPredeclaredNil	./go/types/universe.go	/^func defPredeclaredNil() {$/;"	f
defPredeclaredTypes	./go/types/universe.go	/^func defPredeclaredTypes() {$/;"	f
defact	./cmd/yacc/yacc.go	/^var defact = make([]int, NSTATES)  \/\/ default actions of states$/;"	v
defaultCheckRedirect	./net/http/client.go	/^func defaultCheckRedirect(req *Request, via []*Request) error {$/;"	f
defaultCipherSuites	./crypto/tls/common.go	/^func defaultCipherSuites() []uint16 {$/;"	f
defaultClientCommand	./crypto/tls/handshake_server_test.go	/^var defaultClientCommand = []string{"openssl", "s_client", "-no_ticket"}$/;"	v
defaultConfig	./crypto/tls/common.go	/^func defaultConfig() *Config {$/;"	f
defaultConfig	./testing/quick/quick.go	/^var defaultConfig Config$/;"	v
defaultConverter	./database/sql/driver/types.go	/^type defaultConverter struct{}$/;"	t
defaultCurvePreferences	./crypto/tls/common.go	/^var defaultCurvePreferences = []CurveID{CurveP256, CurveP384, CurveP521}$/;"	v
defaultFileImpl	./syscall/fd_nacl.go	/^type defaultFileImpl struct{}$/;"	t
defaultMaxCount	./testing/quick/quick.go	/^var defaultMaxCount *int = flag.Int("quickchecks", 100, "The default number of iterations for each check")$/;"	v
defaultNS	./net/dnsconfig_unix.go	/^var defaultNS = []string{"127.0.0.1", "::1"}$/;"	v
defaultPath	./net/http/cookiejar/jar.go	/^func defaultPath(path string) string {$/;"	f
defaultPathTests	./net/http/cookiejar/jar_test.go	/^var defaultPathTests = map[string]string{$/;"	v
defaultResolvConf	./net/conf_test.go	/^var defaultResolvConf = &dnsConfig{$/;"	v
defaultServerCommand	./crypto/tls/handshake_client_test.go	/^var defaultServerCommand = []string{"openssl", "s_server"}$/;"	v
defaultStart	./encoding/xml/marshal.go	/^func defaultStart(typ reflect.Type, finfo *fieldInfo, startTemplate *StartElement) StartElement {$/;"	f
defaultTest	./encoding/asn1/marshal_test.go	/^type defaultTest struct {$/;"	t
defaultType	./go/types/predicates.go	/^func defaultType(typ Type) Type {$/;"	f
defaultUsage	./flag/flag.go	/^func defaultUsage(f *FlagSet) {$/;"	f
defaultlit	./cmd/compile/internal/gc/const.go	/^func defaultlit(np **Node, t *Type) {$/;"	f
defaultlit2	./cmd/compile/internal/gc/const.go	/^func defaultlit2(lp **Node, rp **Node, force int) {$/;"	f
defbuf	./cmd/link/internal/ld/go.go	/^	var defbuf *bytes.Buffer$/;"	v
defdwsymb	./cmd/link/internal/ld/dwarf.go	/^func defdwsymb(sym *LSym, s string, t int, v int64, size int64, ver int, gotype *LSym) {$/;"	f
defer1	./runtime/runtime_test.go	/^func defer1() {$/;"	f
defer2	./runtime/runtime_test.go	/^func defer2() {$/;"	f
deferArgs	./runtime/panic.go	/^func deferArgs(d *_defer) unsafe.Pointer {$/;"	f
deferType	./runtime/panic.go	/^var deferType *_type \/\/ type of _defer struct$/;"	v
defercalc	./cmd/compile/internal/gc/align.go	/^var defercalc int$/;"	v
defercheckwidth	./cmd/compile/internal/gc/align.go	/^func defercheckwidth() {$/;"	f
deferclass	./runtime/panic.go	/^func deferclass(siz uintptr) uintptr {$/;"	f
deferproc	./runtime/panic.go	/^func deferproc(siz int32, fn *funcval) { \/\/ arguments of fn follow fn$/;"	f
deferreturn	./cmd/internal/obj/arm/asm5.go	/^var deferreturn *obj.LSym$/;"	v
deferreturn	./cmd/internal/obj/x86/asm6.go	/^				var deferreturn *obj.LSym$/;"	v
deferreturn	./runtime/panic.go	/^func deferreturn(arg0 uintptr) {$/;"	f
defframe	./cmd/compile/internal/amd64/ggen.go	/^func defframe(ptxt *obj.Prog) {$/;"	f
defframe	./cmd/compile/internal/arm/ggen.go	/^func defframe(ptxt *obj.Prog) {$/;"	f
defframe	./cmd/compile/internal/arm64/ggen.go	/^func defframe(ptxt *obj.Prog) {$/;"	f
defframe	./cmd/compile/internal/ppc64/ggen.go	/^func defframe(ptxt *obj.Prog) {$/;"	f
defframe	./cmd/compile/internal/x86/ggen.go	/^func defframe(ptxt *obj.Prog) {$/;"	f
defgotype	./cmd/link/internal/ld/dwarf.go	/^func defgotype(gotype *LSym) *DWDie {$/;"	f
defin	./cmd/yacc/yacc.go	/^func defin(nt int, s string) int {$/;"	f
define	./cmd/asm/internal/lex/input.go	/^func (in *Input) define() {$/;"	f
defineMacro	./cmd/asm/internal/lex/input.go	/^func (in *Input) defineMacro(name string, args []string, tokens []Token) {$/;"	f
defined	./cmd/yacc/yacc.go	/^			\/\/ there is a type defined$/;"	t
definition	./cmd/compile/internal/gc/fmt.go	/^\/\/	%#lT		type definition instead of name$/;"	t
definition	./cmd/compile/internal/gc/go.go	/^	Broke       uint8 \/\/ broken type definition.$/;"	t
definition	./debug/dwarf/type.go	/^		\/\/	AttrType: type definition [required]$/;"	t
definition	./encoding/gob/debug.go	/^	deb.dump("type definition for id %d", id)$/;"	t
definition	./encoding/gob/debug.go	/^	fmt.Fprintf(os.Stderr, "%stype definition {\\n", indent)$/;"	t
definition	./encoding/gob/encoder_test.go	/^	\/\/ type definition {$/;"	t
definition	./encoding/gob/encoder_test.go	/^	src := make([]interface{}, 100) \/\/ Size needs to be bigger than size of type definition.$/;"	t
definition	./encoding/gob/encoder_test.go	/^\/\/ thing in the input might be a type definition, which would lead to$/;"	t
definition	./encoding/gob/type.go	/^\/\/ Each value we send is preceded by its type definition: an encoded int.$/;"	t
definition	./regexp/syntax/parse.go	/^\/\/ The choice of receiver type definition is strange$/;"	t
definitions	./cmd/compile/internal/gc/typecheck.go	/^	\/\/ if there are no type definitions going on, it's safe to$/;"	t
definitions	./encoding/gob/encode.go	/^	\/\/ Encode the value into a new buffer.  Any nested type definitions$/;"	t
definitions	./encoding/gob/encoder_test.go	/^\/\/ encoder and decoder don't skew with respect to type definitions.$/;"	t
definitions	./encoding/gob/gobencdec_test.go	/^	\/\/ pointer would cause duplicate type definitions to be sent.$/;"	t
definitions	./sort/example_keys_test.go	/^\/\/ A couple of type definitions to make the units clear.$/;"	t
deflate	./compress/flate/deflate.go	/^func (d *compressor) deflate() {$/;"	f
deflateInflateStringTest	./compress/flate/deflate_test.go	/^type deflateInflateStringTest struct {$/;"	t
deflateInflateStringTests	./compress/flate/deflate_test.go	/^var deflateInflateStringTests = []deflateInflateStringTest{$/;"	v
deflateInflateTest	./compress/flate/deflate_test.go	/^type deflateInflateTest struct {$/;"	t
deflateInflateTests	./compress/flate/deflate_test.go	/^var deflateInflateTests = []*deflateInflateTest{$/;"	v
deflateTest	./compress/flate/deflate_test.go	/^type deflateTest struct {$/;"	t
deflateTests	./compress/flate/deflate_test.go	/^var deflateTests = []*deflateTest{$/;"	v
defptrto	./cmd/link/internal/ld/dwarf.go	/^func defptrto(dwtype *DWDie) *DWDie {$/;"	f
delay	./go/types/check.go	/^func (check *Checker) delay(f func()) {$/;"	f
delayClose	./io/pipe_test.go	/^func delayClose(t *testing.T, cl closer, ch chan int, tt pipeTest) {$/;"	f
delayedEOFReader	./net/http/request_test.go	/^type delayedEOFReader struct {$/;"	t
delegateReader	./net/http/httputil/dump.go	/^type delegateReader struct {$/;"	t
delete	./builtin/builtin.go	/^func delete(m map[Type]Type1, key Type)$/;"	f
deleteAttrPrefix	./encoding/xml/marshal.go	/^func (p *printer) deleteAttrPrefix(prefix string) {$/;"	f
deleteImport	./cmd/fix/fix.go	/^func deleteImport(f *ast.File, path string) (deleted bool) {$/;"	f
deleteImportFn	./cmd/fix/import_test.go	/^func deleteImportFn(path string) func(*ast.File) bool {$/;"	f
deleteValues	./internal/syscall/windows/registry/registry_test.go	/^func deleteValues(t *testing.T, k registry.Key) {$/;"	f
delim	./html/template/context.go	/^type delim uint8$/;"	t
delimEnds	./html/template/escape.go	/^var delimEnds = [...]string{$/;"	v
delimNames	./html/template/context.go	/^var delimNames = [...]string{$/;"	v
delimPairs	./text/template/exec_test.go	/^var delimPairs = []string{$/;"	v
delimitedMessage	./encoding/gob/debug.go	/^func (deb *debugger) delimitedMessage(indent tab) bool {$/;"	f
delta	./cmd/compile/internal/big/rat_test.go	/^func delta(r *Rat, f float64) *Rat {$/;"	f
delta	./cmd/compile/internal/gc/subr.go	/^	var delta uint64$/;"	v
delta	./cmd/internal/obj/pcln.go	/^	var delta uint32$/;"	v
delta	./cmd/pprof/internal/svg/svgpan.go	/^	var delta;$/;"	v
delta	./crypto/elliptic/p224.go	/^	var delta, gamma, beta, alpha, t p224FieldElement$/;"	v
delta	./crypto/elliptic/p256.go	/^	var delta, gamma, alpha, beta, tmp, tmp2 [p256Limbs]uint32$/;"	v
delta	./encoding/gob/debug.go	/^func (deb *debugger) delta(expect int) int {$/;"	f
delta	./image/color/ycbcr_test.go	/^func delta(x, y uint8) uint8 {$/;"	f
delta	./image/decode_test.go	/^func delta(u0, u1 uint32) int {$/;"	f
delta	./image/gif/writer_test.go	/^func delta(u0, u1 uint32) int64 {$/;"	f
delta	./image/jpeg/writer_test.go	/^func delta(u0, u1 uint32) int64 {$/;"	f
delta	./math/big/rat_test.go	/^func delta(r *Rat, f float64) *Rat {$/;"	f
deltaOld	./cmd/compile/internal/big/calibrate_test.go	/^	var deltaOld time.Duration$/;"	v
deltaOld	./math/big/calibrate_test.go	/^	var deltaOld time.Duration$/;"	v
deltimer	./runtime/time.go	/^func deltimer(t *timer) bool {$/;"	f
den	./runtime/vlop_arm_test.go	/^	var den uint32 = 1000000$/;"	v
denoted	./cmd/vet/types.go	/^\/\/ importType returns the type denoted by the qualified identifier$/;"	t
denoted	./go/types/lookup.go	/^	\/\/ (spec: "The type denoted by T is called the receiver base type;$/;"	t
denoted	./go/types/typexpr.go	/^				\/\/ spec: "The type denoted by T is called the receiver base type; it must not$/;"	t
depSet	./database/sql/sql.go	/^type depSet map[interface{}]bool \/\/ set of true bools$/;"	t
dependencyGraph	./go/types/initorder.go	/^func dependencyGraph(objMap map[Object]*declInfo) []*objNode {$/;"	f
dependentTestTypes	./go/types/typestring_test.go	/^var dependentTestTypes = []testEntry{$/;"	v
depends	./go/types/expr.go	/^			\/\/ The result type depends only on lhs operand.$/;"	t
deplist	./cmd/link/internal/ld/elf.go	/^		var deplist []string$/;"	v
depth	./go/printer/nodes.go	/^		var depth = 1$/;"	v
dequeue	./runtime/chan.go	/^func (q *waitq) dequeue() *sudog {$/;"	f
dequeue	./runtime/sema.go	/^func (root *semaRoot) dequeue(s *sudog) {$/;"	f
dequeueSudoG	./runtime/select.go	/^func (q *waitq) dequeueSudoG(sgp *sudog) {$/;"	f
derBytes	./crypto/tls/handshake_client_test.go	/^	var derBytes []byte$/;"	v
derEncodedPaypalNULCertBytes	./encoding/asn1/asn1_test.go	/^var derEncodedPaypalNULCertBytes = []byte{$/;"	v
derEncodedSelfSignedCert	./encoding/asn1/asn1_test.go	/^var derEncodedSelfSignedCert = Certificate{$/;"	v
derEncodedSelfSignedCertBytes	./encoding/asn1/asn1_test.go	/^var derEncodedSelfSignedCertBytes = []byte{$/;"	v
deref	./go/internal/gccgoimporter/parser.go	/^func deref(typ types.Type) types.Type {$/;"	f
deref	./go/internal/gcimporter/gcimporter.go	/^func deref(typ types.Type) types.Type {$/;"	f
deref	./go/parser/parser.go	/^func deref(x ast.Expr) ast.Expr {$/;"	f
deref	./go/printer/testdata/parser.go	/^func deref(x ast.Expr) ast.Expr {$/;"	f
deref	./go/types/lookup.go	/^func deref(typ Type) (Type, bool) {$/;"	f
derefStructPtr	./go/types/lookup.go	/^func derefStructPtr(typ Type) Type {$/;"	f
derefall	./cmd/compile/internal/gc/typecheck.go	/^func derefall(t *Type) *Type {$/;"	f
deriveCounter	./crypto/cipher/gcm.go	/^func (g *gcm) deriveCounter(counter *[gcmBlockSize]byte, nonce []byte) {$/;"	f
deriveKey	./crypto/x509/pem_decrypt.go	/^func (c rfc1423Algo) deriveKey(password, salt []byte) []byte {$/;"	f
desCipher	./crypto/des/cipher.go	/^type desCipher struct {$/;"	t
desc	./runtime/export_test.go	/^	var desc *ParFor$/;"	v
describeEscape	./cmd/compile/internal/gc/esc.go	/^func describeEscape(em uint16) string {$/;"	f
described	./cmd/cgo/gcc.go	/^\/\/ isStructUnionClass reports whether the type described by the Go syntax x$/;"	t
describes	./cmd/trace/goroutines.go	/^\/\/ gtype describes a group of goroutines grouped by start PC.$/;"	t
describing	./encoding/gob/type.go	/^\/\/ getBaseType returns the Gob type describing the given reflect.Type's base type.$/;"	t
describing	./encoding/gob/type.go	/^\/\/ getType returns the Gob type describing the given reflect.Type.$/;"	t
description	./cmd/go/alldocs.go	/^	testfunc    description of testing functions$/;"	f
description	./cmd/vet/asmdecl.go	/^	\/\/ Gather declarations. knownFunc[name][arch] is func description.$/;"	f
description	./cmd/yacc/yacc.go	/^			\/\/ type description$/;"	t
descriptor	./debug/dwarf/entry.go	/^\/\/ just a type descriptor: it's an array of attribute tag\/value format pairs.$/;"	t
descriptor	./encoding/gob/debug.go	/^\/\/ Helper methods to make it easy to scan a type descriptor.$/;"	t
descriptor	./encoding/gob/doc.go	/^	1f	\/\/ This item (a type descriptor) is 31 bytes long.$/;"	t
descriptor	./encoding/gob/doc.go	/^	\/\/ Now we send a type descriptor, which is itself a struct (wireType).$/;"	t
descriptors	./cmd/compile/internal/gc/closure.go	/^	\/\/ The information appears in the binary in the form of type descriptors;$/;"	t
descriptors	./encoding/gob/type.go	/^\/\/ only for the benefit of the package's encoding of type descriptors. It is$/;"	t
desr	./archive/zip/reader.go	/^	var desr io.Reader$/;"	v
dest	./encoding/json/decode_test.go	/^	var dest [0]interface{}$/;"	v
dest	./net/http/httputil/dump.go	/^		var dest io.Writer = &b$/;"	v
destroy	./net/fd_plan9.go	/^func (fd *netFD) destroy() {$/;"	f
destroy	./net/fd_unix.go	/^func (fd *netFD) destroy() {$/;"	f
destroy	./net/fd_windows.go	/^func (fd *netFD) destroy() {$/;"	f
detachexpr	./cmd/compile/internal/gc/racewalk.go	/^func detachexpr(n *Node, init **NodeList) *Node {$/;"	f
devFile	./syscall/fs_nacl.go	/^type devFile interface {$/;"	t
devNull	./io/ioutil/ioutil.go	/^type devNull int$/;"	t
devNullStat	./os/types_windows.go	/^var devNullStat = fileStat{$/;"	v
devReader	./crypto/rand/rand_unix.go	/^type devReader struct {$/;"	t
dexport	./cmd/link/internal/ld/pe.go	/^var dexport [1024]*LSym$/;"	v
dextratype	./cmd/compile/internal/gc/reflect.go	/^func dextratype(sym *Sym, off int, t *Type, ptroff int) int {$/;"	f
dfirst	./cmd/compile/internal/gc/gsubr.go	/^var dfirst *obj.Prog$/;"	v
dfl	./runtime/select.go	/^	var dfl *scase$/;"	v
dflag	./cmd/compile/internal/gc/dcl.go	/^func dflag() bool {$/;"	f
dflagStrings	./debug/elf/elf.go	/^var dflagStrings = []intName{$/;"	v
dflt	./cmd/compile/internal/gc/select.go	/^		var dflt *Node$/;"	v
dgcprog	./cmd/compile/internal/gc/reflect.go	/^func dgcprog(t *Type) (*Sym, int64) {$/;"	f
dgcptrmask	./cmd/compile/internal/gc/reflect.go	/^func dgcptrmask(t *Type) *Sym {$/;"	f
dgcsym	./cmd/compile/internal/gc/reflect.go	/^func dgcsym(t *Type) (sym *Sym, useGCProg bool, ptrdata int64) {$/;"	f
dgopkgpath	./cmd/compile/internal/gc/reflect.go	/^func dgopkgpath(s *Sym, ot int, pkg *Pkg) int {$/;"	f
dgostringptr	./cmd/compile/internal/gc/obj.go	/^func dgostringptr(s *Sym, off int, str string) int {$/;"	f
dgostrlitptr	./cmd/compile/internal/gc/obj.go	/^func dgostrlitptr(s *Sym, off int, lit *string) int {$/;"	f
dh	./net/dnsmsg.go	/^	var dh dnsHeader$/;"	v
di_finish	./runtime/asm_386.s	/^di_finish:$/;"	l
di_finish	./runtime/asm_amd64.s	/^di_finish:$/;"	l
di_finish	./runtime/asm_amd64p32.s	/^di_finish:$/;"	l
di_high	./runtime/asm_386.s	/^di_high:$/;"	l
di_high	./runtime/asm_amd64.s	/^di_high:$/;"	l
di_high	./runtime/asm_amd64p32.s	/^di_high:$/;"	l
dial	./net/fd_plan9.go	/^func dial(net string, ra Addr, dialer func(time.Time) (Conn, error), deadline time.Time) (Conn, error) {$/;"	f
dial	./net/fd_unix.go	/^func dial(network string, ra Addr, dialer func(time.Time) (Conn, error), deadline time.Time) (Conn, error) {$/;"	f
dial	./net/fd_windows.go	/^func dial(net string, ra Addr, dialer func(time.Time) (Conn, error), deadline time.Time) (Conn, error) {$/;"	f
dial	./net/http/transport.go	/^func (t *Transport) dial(network, addr string) (c net.Conn, err error) {$/;"	f
dial	./net/sock_posix.go	/^func (fd *netFD) dial(laddr, raddr sockaddr, deadline time.Time) error {$/;"	f
dialChannel	./net/dial_gen.go	/^func dialChannel(net string, ra Addr, dialer func(time.Time) (Conn, error), deadline time.Time) (Conn, error) {$/;"	f
dialClosedPort	./net/dial_test.go	/^func dialClosedPort() (actual, expected time.Duration) {$/;"	f
dialConn	./net/http/transport.go	/^func (t *Transport) dialConn(cm connectMethod) (*persistConn, error) {$/;"	f
dialContext	./net/dial.go	/^type dialContext struct {$/;"	t
dialDNS	./net/dnsclient_unix.go	/^func (d *Dialer) dialDNS(network, server string) (dnsConn, error) {$/;"	f
dialDirect	./net/rpc/server_test.go	/^func dialDirect() (*Client, error) {$/;"	f
dialErrorTests	./net/error_test.go	/^var dialErrorTests = []struct {$/;"	v
dialGoogleTests	./net/external_test.go	/^var dialGoogleTests = []struct {$/;"	v
dialHTTP	./net/rpc/server_test.go	/^func dialHTTP() (*Client, error) {$/;"	f
dialIP	./net/iprawsock_plan9.go	/^func dialIP(netProto string, laddr, raddr *IPAddr, deadline time.Time) (*IPConn, error) {$/;"	f
dialIP	./net/iprawsock_posix.go	/^func dialIP(netProto string, laddr, raddr *IPAddr, deadline time.Time) (*IPConn, error) {$/;"	f
dialParallel	./net/dial.go	/^func dialParallel(ctx *dialContext, primaries, fallbacks addrList) (Conn, error) {$/;"	f
dialPlan9	./net/ipsock_plan9.go	/^func dialPlan9(net string, laddr, raddr Addr) (fd *netFD, err error) {$/;"	f
dialRes	./net/http/transport.go	/^	type dialRes struct {$/;"	t
dialResult	./net/dial.go	/^type dialResult struct {$/;"	t
dialSerial	./net/dial.go	/^func dialSerial(ctx *dialContext, ras addrList, cancel <-chan struct{}) (Conn, error) {$/;"	f
dialSerialAsync	./net/dial.go	/^func dialSerialAsync(ctx *dialContext, ras addrList, timer *time.Timer, cancel <-chan struct{}, results chan<- dialResult) {$/;"	f
dialSingle	./net/dial.go	/^func dialSingle(ctx *dialContext, ra Addr, deadline time.Time) (c Conn, err error) {$/;"	f
dialTCP	./net/tcpsock_plan9.go	/^func dialTCP(net string, laddr, raddr *TCPAddr, deadline time.Time) (*TCPConn, error) {$/;"	f
dialTCP	./net/tcpsock_posix.go	/^func dialTCP(net string, laddr, raddr *TCPAddr, deadline time.Time) (*TCPConn, error) {$/;"	f
dialTimeoutTests	./net/timeout_test.go	/^var dialTimeoutTests = []struct {$/;"	v
dialUDP	./net/udpsock_plan9.go	/^func dialUDP(net string, laddr, raddr *UDPAddr, deadline time.Time) (*UDPConn, error) {$/;"	f
dialUDP	./net/udpsock_posix.go	/^func dialUDP(net string, laddr, raddr *UDPAddr, deadline time.Time) (*UDPConn, error) {$/;"	f
dialUnix	./net/unixsock_plan9.go	/^func dialUnix(net string, laddr, raddr *UnixAddr, deadline time.Time) (*UnixConn, error) {$/;"	f
dialUnix	./net/unixsock_posix.go	/^func dialUnix(net string, laddr, raddr *UnixAddr, deadline time.Time) (*UnixConn, error) {$/;"	f
dict	./compress/zlib/writer_test.go	/^	var dict []byte$/;"	v
dictWriter	./compress/flate/deflate.go	/^type dictWriter struct {$/;"	t
didEarlyClose	./net/http/transfer.go	/^func (b *body) didEarlyClose() bool {$/;"	f
didothers	./runtime/panic1.go	/^var didothers bool$/;"	v
die	./cmd/link/internal/ld/dwarf.go	/^	var die *DWDie$/;"	v
die2	./cmd/link/internal/ld/dwarf.go	/^	var die2 *DWDie$/;"	v
dief	./cmd/trace/main.go	/^func dief(msg string, args ...interface{}) {$/;"	f
diff	./cmd/fix/main.go	/^func diff(b1, b2 []byte) (data []byte, err error) {$/;"	f
diff	./cmd/go/vendor_test.go	/^	var diff bytes.Buffer$/;"	v
diff	./cmd/gofmt/gofmt.go	/^func diff(b1, b2 []byte) (data []byte, err error) {$/;"	f
diff	./encoding/json/scanner_test.go	/^func diff(t *testing.T, a, b []byte) {$/;"	f
diff	./go/format/format_test.go	/^func diff(t *testing.T, dst, src []byte) {$/;"	f
diff	./go/printer/printer_test.go	/^func diff(aname, bname string, a, b []byte) error {$/;"	f
diff	./image/png/writer_test.go	/^func diff(m0, m1 image.Image) error {$/;"	f
diff	./net/http/response_test.go	/^func diff(t *testing.T, prefix string, have, want interface{}) {$/;"	f
diff16	./runtime/asm_386.s	/^diff16:$/;"	l
diff16	./runtime/asm_amd64.s	/^diff16:$/;"	l
diff16	./runtime/asm_amd64p32.s	/^diff16:$/;"	l
diff4	./runtime/asm_386.s	/^diff4:$/;"	l
diff8	./runtime/asm_amd64.s	/^diff8:$/;"	l
diff8	./runtime/asm_amd64p32.s	/^diff8:$/;"	l
diffPrec	./go/printer/nodes.go	/^func diffPrec(expr ast.Expr, prec int) int {$/;"	f
diffSortedOutputs	./cmd/go/vendor_test.go	/^func diffSortedOutputs(haveText, wantText string) string {$/;"	f
differ	./image/jpeg/dct_test.go	/^func differ(b0, b1 *block) bool {$/;"	f
differences	./runtime/rune.go	/^ * This code is copied, with slight editing due to type differences,$/;"	t
differentWildcardAddr	./net/listen_test.go	/^func differentWildcardAddr(i, j string) bool {$/;"	f
digest	./crypto/md5/md5.go	/^	var digest [Size]byte$/;"	v
digest	./crypto/md5/md5.go	/^type digest struct {$/;"	t
digest	./crypto/rsa/rsa.go	/^	var digest []byte$/;"	v
digest	./crypto/sha1/sha1.go	/^	var digest [Size]byte$/;"	v
digest	./crypto/sha1/sha1.go	/^type digest struct {$/;"	t
digest	./crypto/sha256/sha256.go	/^	var digest [Size]byte$/;"	v
digest	./crypto/sha256/sha256.go	/^type digest struct {$/;"	t
digest	./crypto/sha512/sha512.go	/^	var digest [Size]byte$/;"	v
digest	./crypto/sha512/sha512.go	/^type digest struct {$/;"	t
digest	./crypto/tls/handshake_server.go	/^			var digest []byte$/;"	v
digest	./crypto/x509/pem_decrypt.go	/^	var digest []byte$/;"	v
digest	./hash/adler32/adler32.go	/^type digest uint32$/;"	t
digest	./hash/crc32/crc32.go	/^type digest struct {$/;"	t
digest	./hash/crc64/crc64.go	/^type digest struct {$/;"	t
digestSizes	./crypto/crypto.go	/^var digestSizes = []uint8{$/;"	v
digit	./strconv/extfloat.go	/^	var digit int$/;"	v
digitVal	./go/scanner/scanner.go	/^func digitVal(ch rune) int {$/;"	f
digitVal	./text/scanner/scanner.go	/^func digitVal(ch rune) int {$/;"	f
digitZero	./strconv/decimal.go	/^func digitZero(dst []byte) int {$/;"	f
digits	./cmd/compile/internal/big/ratconv.go	/^	var digits []byte$/;"	v
digits	./math/big/ratconv.go	/^	var digits []byte$/;"	v
digs	./strconv/ftoa.go	/^	var digs decimalSlice$/;"	v
dim	./math/dim.go	/^func dim(x, y float64) float64 {$/;"	f
dim2	./math/dim_amd64.s	/^dim2:	\/\/ (-Inf, -Inf) special case$/;"	l
dim3	./math/dim_amd64.s	/^dim3:	\/\/ (NaN, x) or (x, NaN)$/;"	l
dimportpath	./cmd/compile/internal/gc/reflect.go	/^func dimportpath(p *Pkg) {$/;"	f
dimportpath_gopkg	./cmd/compile/internal/gc/reflect.go	/^var dimportpath_gopkg *Pkg$/;"	v
dims	./debug/dwarf/type.go	/^		var dims []int64$/;"	v
dir	./cmd/cover/html.go	/^		var dir string$/;"	v
dir	./os/os_test.go	/^	var dir, cmd string$/;"	v
dir	./syscall/exec_plan9.go	/^	var dir *byte$/;"	v
dir	./syscall/exec_unix.go	/^	var dir *byte$/;"	v
dirCmd	./cmd/dist/test.go	/^func (t *tester) dirCmd(dir string, bin string, args ...string) *exec.Cmd {$/;"	f
dirFilter	./go/parser/parser_test.go	/^func dirFilter(f os.FileInfo) bool { return nameFilter(f.Name()) }$/;"	f
dirInfo	./os/file_plan9.go	/^type dirInfo struct {$/;"	t
dirInfo	./os/file_unix.go	/^type dirInfo struct {$/;"	t
dirInfo	./os/file_windows.go	/^type dirInfo struct {$/;"	t
dirList	./net/http/fs.go	/^func dirList(w ResponseWriter, f File) {$/;"	f
dirSize	./syscall/fs_nacl.go	/^func (dp *inode) dirSize() {$/;"	f
dirToImportPath	./cmd/go/pkg.go	/^func dirToImportPath(dir string) string {$/;"	f
directivesWithCommentsInput	./encoding/xml/xml_test.go	/^var directivesWithCommentsInput = `$/;"	v
directivesWithCommentsTokens	./encoding/xml/xml_test.go	/^var directivesWithCommentsTokens = []Token{$/;"	v
directly	./cmd/cgo/doc.go	/^To access a struct, union, or enum type directly, prefix it with$/;"	t
directly	./cmd/compile/internal/gc/const.go	/^ * (if n is a named constant, can't edit n->type directly).$/;"	t
directly	./cmd/compile/internal/gc/dcl.go	/^ * used functype directly to parse the function's type.$/;"	t
directly	./encoding/json/scanner.go	/^	\/\/ with a switch, but using the func directly was 10% faster$/;"	f
directlyAssignable	./reflect/type.go	/^func directlyAssignable(T, V *rtype) bool {$/;"	f
directoryEnd	./archive/zip/struct.go	/^type directoryEnd struct {$/;"	t
directoryEndOffset	./archive/zip/reader.go	/^	var directoryEndOffset int64$/;"	v
dirent	./syscall/fs_nacl.go	/^type dirent struct {$/;"	t
dirlink	./syscall/fs_nacl.go	/^func (fs *fsys) dirlink(dp *inode, name string, ip *inode) {$/;"	f
dirlookup	./syscall/fs_nacl.go	/^func (fs *fsys) dirlookup(dp *inode, name string) (de *dirent, index int, err error) {$/;"	f
dirname	./os/file_windows.go	/^func dirname(path string) string {$/;"	f
dirp	./syscall/exec_windows.go	/^	var dirp *uint16$/;"	v
dirstat	./os/stat_plan9.go	/^func dirstat(arg interface{}) (*syscall.Dir, error) {$/;"	f
dirtests	./path/filepath/path_test.go	/^var dirtests = []PathTest{$/;"	v
dirtests	./path/path_test.go	/^var dirtests = []PathTest{$/;"	v
disableSignal	./os/signal/signal_plan9.go	/^func disableSignal(sig int) {$/;"	f
disableSignal	./os/signal/signal_unix.go	/^func disableSignal(sig int) {$/;"	f
disableSocketConnect	./net/main_plan9_test.go	/^func disableSocketConnect(network string) {}$/;"	f
disableSocketConnect	./net/main_posix_test.go	/^func disableSocketConnect(network string) {$/;"	f
disableWER	./runtime/signal_windows.go	/^func disableWER() {$/;"	f
disallowInternal	./cmd/go/pkg.go	/^func disallowInternal(srcDir string, p *Package, stk *importStack) *Package {$/;"	f
disallowVendor	./cmd/go/pkg.go	/^func disallowVendor(srcDir, path string, p *Package, stk *importStack) *Package {$/;"	f
disallowVendorVisibility	./cmd/go/pkg.go	/^func disallowVendorVisibility(srcDir string, p *Package, stk *importStack) *Package {$/;"	f
disasm	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func disasm(syntax string, mode Mode, src []byte) (inst Inst, text string) {$/;"	f
disasm	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func disasm(syntax string, mode int, src []byte) (inst Inst, text string) {$/;"	f
disasmFunc	./cmd/internal/objfile/disasm.go	/^type disasmFunc func(code []byte, pc uint64, lookup lookupFunc) (text string, size int)$/;"	t
disasmFunc	./cmd/objdump/main.go	/^type disasmFunc func(code []byte, pc uint64, lookup lookupFunc) (text string, size int)$/;"	t
disasm_386	./cmd/internal/objfile/disasm.go	/^func disasm_386(code []byte, pc uint64, lookup lookupFunc) (string, int) {$/;"	f
disasm_amd64	./cmd/internal/objfile/disasm.go	/^func disasm_amd64(code []byte, pc uint64, lookup lookupFunc) (string, int) {$/;"	f
disasm_arm	./cmd/internal/objfile/disasm.go	/^func disasm_arm(code []byte, pc uint64, lookup lookupFunc) (string, int) {$/;"	f
disasm_x86	./cmd/internal/objfile/disasm.go	/^func disasm_x86(code []byte, pc uint64, lookup lookupFunc, arch int) (string, int) {$/;"	f
disasms	./cmd/internal/objfile/disasm.go	/^var disasms = map[string]disasmFunc{$/;"	v
disc	./regexp/testdata/testregex.c	/^	Disc_t		disc;$/;"	m	struct:__anon2	file:
disc	./regexp/testdata/testregex.c	/^	regdisc_t	disc;$/;"	m	struct:Disc_s	file:
discard	./net/http/server.go	/^		var discard, tooBig bool$/;"	v
discardDirectiveWhileParsingTypes	./go/internal/gccgoimporter/parser.go	/^func (p *parser) discardDirectiveWhileParsingTypes(pkg *types.Package) {$/;"	f
discardHandshakeBuffer	./crypto/tls/prf.go	/^func (h *finishedHash) discardHandshakeBuffer() {$/;"	f
displayName	./net/mail/message.go	/^	var displayName string$/;"	v
display_hint	./runtime/runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:ChanTypePrinter
display_hint	./runtime/runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:IfacePrinter
display_hint	./runtime/runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:MapTypePrinter
display_hint	./runtime/runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:SliceTypePrinter
display_hint	./runtime/runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:StringTypePrinter
dispose	./runtime/mgcwork.go	/^func (w *gcWork) dispose() {$/;"	f
dist	./compress/flate/inflate.go	/^		var dist int$/;"	v
dist	./syscall/unzip_nacl.go	/^		var dist int$/;"	v
distTest	./cmd/dist/test.go	/^type distTest struct {$/;"	t
distanceFrom	./go/printer/nodes.go	/^func (p *printer) distanceFrom(from token.Pos) int {$/;"	f
distok	./clean.bat	/^:distok$/;"	l
distributionPoint	./crypto/x509/x509.go	/^type distributionPoint struct {$/;"	t
distributionPointName	./crypto/x509/x509.go	/^type distributionPointName struct {$/;"	t
div	./cmd/compile/internal/big/nat.go	/^func (z nat) div(z2, u, v nat) (q, r nat) {$/;"	f
div	./html/template/escape.go	/^	\/\/ var div = document.createElement("DIV");$/;"	v
div	./image/jpeg/writer.go	/^func div(a, b int32) int32 {$/;"	f
div	./math/big/nat.go	/^func (z nat) div(z2, u, v nat) (q, r nat) {$/;"	f
div	./runtime/softfloat64_test.go	/^func div(x, y float64) float64 { return x \/ y }$/;"	f
div	./time/time.go	/^func div(t Time, d Duration) (qmod2 int, r Duration) {$/;"	f
divInSlice	./runtime/race/testdata/regression_test.go	/^func divInSlice() {$/;"	f
divLarge	./cmd/compile/internal/big/nat.go	/^func (z nat) divLarge(u, uIn, v nat) (q, r nat) {$/;"	f
divLarge	./math/big/nat.go	/^func (z nat) divLarge(u, uIn, v nat) (q, r nat) {$/;"	f
divMagic	./runtime/msize.go	/^type divMagic struct {$/;"	t
divW	./cmd/compile/internal/big/nat.go	/^func (z nat) divW(x nat, y Word) (q nat, r Word) {$/;"	f
divW	./math/big/nat.go	/^func (z nat) divW(x nat, y Word) (q nat, r Word) {$/;"	f
divWVW	./cmd/compile/internal/big/arith_decl.go	/^func divWVW(z []Word, xn Word, x []Word, y Word) (r Word) {$/;"	f
divWVW	./math/big/arith_decl.go	/^func divWVW(z []Word, xn Word, x []Word, y Word) (r Word)$/;"	f
divWVW	./math/big/arith_decl_pure.go	/^func divWVW(z []Word, xn Word, x []Word, y Word) (r Word) {$/;"	f
divWVW_g	./cmd/compile/internal/big/arith.go	/^func divWVW_g(z []Word, xn Word, x []Word, y Word) (r Word) {$/;"	f
divWVW_g	./math/big/arith.go	/^func divWVW_g(z []Word, xn Word, x []Word, y Word) (r Word) {$/;"	f
divWW	./cmd/compile/internal/big/arith_decl.go	/^func divWW(x1, x0, y Word) (q, r Word) {$/;"	f
divWW	./math/big/arith_decl.go	/^func divWW(x1, x0, y Word) (q, r Word)$/;"	f
divWW	./math/big/arith_decl_pure.go	/^func divWW(x1, x0, y Word) (q, r Word) {$/;"	f
divWW_g	./cmd/compile/internal/big/arith.go	/^func divWW_g(u1, u0, v Word) (q, r Word) {$/;"	f
divWW_g	./math/big/arith.go	/^func divWW_g(u1, u0, v Word) (q, r Word) {$/;"	f
divideError	./runtime/panic.go	/^var divideError = error(errorString("integer divide by zero"))$/;"	v
divisionSignsTests	./cmd/compile/internal/big/int_test.go	/^var divisionSignsTests = []struct {$/;"	v
divisionSignsTests	./math/big/int_test.go	/^var divisionSignsTests = []struct {$/;"	v
divisor	./cmd/compile/internal/big/natconv.go	/^type divisor struct {$/;"	t
divisor	./math/big/natconv.go	/^type divisor struct {$/;"	t
divisors	./cmd/compile/internal/big/natconv.go	/^func divisors(m int, b Word, ndigits int, bb Word) []divisor {$/;"	f
divisors	./math/big/natconv.go	/^func divisors(m int, b Word, ndigits int, bb Word) []divisor {$/;"	f
divlu	./runtime/softfloat64.go	/^func divlu(u1, u0, v uint64) (q, r uint64) {$/;"	f
dlink	./runtime/rt0_linux_ppc64le.s	/^dlink:$/;"	l
dlls	./cmd/link/internal/ld/pe.go	/^	var dlls []string$/;"	v
dnsConfig	./net/dnsconfig_unix.go	/^type dnsConfig struct {$/;"	t
dnsConn	./net/dnsclient_unix.go	/^type dnsConn interface {$/;"	t
dnsHeader	./net/dnsmsg.go	/^type dnsHeader struct {$/;"	t
dnsMsg	./net/dnsmsg.go	/^type dnsMsg struct {$/;"	t
dnsMsgHdr	./net/dnsmsg.go	/^type dnsMsgHdr struct {$/;"	t
dnsNameTest	./net/dnsname_test.go	/^type dnsNameTest struct {$/;"	t
dnsNameTests	./net/dnsname_test.go	/^var dnsNameTests = []dnsNameTest{$/;"	v
dnsQuestion	./net/dnsmsg.go	/^type dnsQuestion struct {$/;"	t
dnsRR	./net/dnsmsg.go	/^type dnsRR interface {$/;"	t
dnsRR_A	./net/dnsmsg.go	/^type dnsRR_A struct {$/;"	t
dnsRR_AAAA	./net/dnsmsg.go	/^type dnsRR_AAAA struct {$/;"	t
dnsRR_CNAME	./net/dnsmsg.go	/^type dnsRR_CNAME struct {$/;"	t
dnsRR_HINFO	./net/dnsmsg.go	/^type dnsRR_HINFO struct {$/;"	t
dnsRR_Header	./net/dnsmsg.go	/^type dnsRR_Header struct {$/;"	t
dnsRR_MB	./net/dnsmsg.go	/^type dnsRR_MB struct {$/;"	t
dnsRR_MG	./net/dnsmsg.go	/^type dnsRR_MG struct {$/;"	t
dnsRR_MINFO	./net/dnsmsg.go	/^type dnsRR_MINFO struct {$/;"	t
dnsRR_MR	./net/dnsmsg.go	/^type dnsRR_MR struct {$/;"	t
dnsRR_MX	./net/dnsmsg.go	/^type dnsRR_MX struct {$/;"	t
dnsRR_NS	./net/dnsmsg.go	/^type dnsRR_NS struct {$/;"	t
dnsRR_PTR	./net/dnsmsg.go	/^type dnsRR_PTR struct {$/;"	t
dnsRR_SOA	./net/dnsmsg.go	/^type dnsRR_SOA struct {$/;"	t
dnsRR_SRV	./net/dnsmsg.go	/^type dnsRR_SRV struct {$/;"	t
dnsRR_TXT	./net/dnsmsg.go	/^type dnsRR_TXT struct {$/;"	t
dnsReadConfig	./net/dnsconfig_unix.go	/^func dnsReadConfig(filename string) *dnsConfig {$/;"	f
dnsReadConfigTests	./net/dnsconfig_unix_test.go	/^var dnsReadConfigTests = []struct {$/;"	v
dnsStruct	./net/dnsmsg.go	/^type dnsStruct interface {$/;"	t
dnsTransportFallbackTests	./net/dnsclient_unix_test.go	/^var dnsTransportFallbackTests = []struct {$/;"	v
do	./cmd/doc/main.go	/^func do(writer io.Writer, flagSet *flag.FlagSet, args []string) (err error) {$/;"	f
do	./cmd/go/list.go	/^	var do func(*Package)$/;"	v
doCall	./internal/singleflight/singleflight.go	/^func (g *Group) doCall(c *call, key string, fn func() (interface{}, error)) {$/;"	f
doConcurrentTest	./database/sql/sql_test.go	/^func doConcurrentTest(t testing.TB, ct concurrentTest) {$/;"	f
doDiff	./cmd/fix/main.go	/^var doDiff = flag.Bool("diff", false, "display diffs instead of rewriting files")$/;"	v
doExecute	./regexp/exec.go	/^func (re *Regexp) doExecute(r io.RuneReader, b []byte, s string, pos int, ncap int) []int {$/;"	f
doFollowingRedirects	./net/http/client.go	/^func (c *Client) doFollowingRedirects(ireq *Request, shouldRedirect func(int) bool) (resp *Response, err error) {$/;"	f
doFullHandshake	./crypto/tls/handshake_client.go	/^func (hs *clientHandshakeState) doFullHandshake() error {$/;"	f
doFullHandshake	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) doFullHandshake() error {$/;"	f
doFuzzTests	./encoding/gob/codec_test.go	/^var doFuzzTests = flag.Bool("gob.fuzz", false, "run the fuzz tests, which are large and very slow")$/;"	v
doGrep	./cmd/go/go_test.go	/^func (tg *testgoData) doGrep(match string, b *bytes.Buffer, name, msg string) {$/;"	f
doGrepCount	./cmd/go/go_test.go	/^func (tg *testgoData) doGrepCount(match string, b *bytes.Buffer) int {$/;"	f
doGrepMatch	./cmd/go/go_test.go	/^func (tg *testgoData) doGrepMatch(match string, b *bytes.Buffer) bool {$/;"	f
doGrepNot	./cmd/go/go_test.go	/^func (tg *testgoData) doGrepNot(match string, b *bytes.Buffer, name, msg string) {$/;"	f
doHilbert	./cmd/compile/internal/big/hilbert_test.go	/^func doHilbert(t *testing.T, n int) {$/;"	f
doHilbert	./math/big/hilbert_test.go	/^func doHilbert(t *testing.T, n int) {$/;"	f
doKeepAlives	./net/http/server.go	/^func (s *Server) doKeepAlives() bool {$/;"	f
doLocked	./expvar/expvar.go	/^func (v *Map) doLocked(f func(KeyValue)) {$/;"	f
doOp	./go/constant/value_test.go	/^func doOp(x Value, op token.Token, y Value) (z Value) {$/;"	f
doPackage	./cmd/vet/main.go	/^func doPackage(directory string, names []string) bool {$/;"	f
doPackageDir	./cmd/vet/main.go	/^func doPackageDir(directory string) {$/;"	f
doPivot	./sort/sort.go	/^func doPivot(data Interface, lo, hi int) (midlo, midhi int) {$/;"	f
doPrec	./fmt/format.go	/^func doPrec(f *fmt, def int) int {$/;"	f
doPrint	./fmt/print.go	/^func (p *pp) doPrint(a []interface{}, addspace, addnewline bool) {$/;"	f
doPrintf	./fmt/print.go	/^func (p *pp) doPrintf(format string, a []interface{}) {$/;"	f
doRequest	./runtime/chanbarrier_test.go	/^func doRequest(useSelect bool) (*response, error) {$/;"	f
doResumeHandshake	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) doResumeHandshake() error {$/;"	f
doRun	./cmd/go/go_test.go	/^func (tg *testgoData) doRun(args []string) error {$/;"	f
doRun	./cmd/pack/pack_test.go	/^func doRun(t *testing.T, dir string, args ...string) string {$/;"	f
doScan	./fmt/scan.go	/^func (s *ss) doScan(a []interface{}) (numProcessed int, err error) {$/;"	f
doScanf	./fmt/scan.go	/^func (s *ss) doScanf(format string, a []interface{}) (numProcessed int, err error) {$/;"	f
doTestParallelReaders	./sync/rwmutex_test.go	/^func doTestParallelReaders(numReaders, gomaxprocs int) {$/;"	f
doasm	./cmd/internal/obj/x86/asm6.go	/^func doasm(ctxt *obj.Link, p *obj.Prog) {$/;"	f
doc	./go/ast/filter.go	/^	var doc *CommentGroup$/;"	v
doc	./go/doc/example.go	/^			var doc string$/;"	v
docrash	./runtime/os3_plan9.go	/^	var docrash bool$/;"	v
docrash	./runtime/panic1.go	/^	var docrash bool$/;"	v
docrash	./runtime/signal_386.go	/^	var docrash bool$/;"	v
docrash	./runtime/signal_amd64x.go	/^	var docrash bool$/;"	v
docrash	./runtime/signal_arm.go	/^	var docrash bool$/;"	v
docrash	./runtime/signal_arm64.go	/^	var docrash bool$/;"	v
docrash	./runtime/signal_ppc64x.go	/^	var docrash bool$/;"	v
docrash	./runtime/signal_windows.go	/^	var docrash bool$/;"	v
docs	./go/doc/reader.go	/^		return nil \/\/ no type docs for anonymous types$/;"	t
doctypeBytes	./html/template/escape.go	/^var doctypeBytes = []byte("<!DOCTYPE")$/;"	v
documentationTemplate	./cmd/go/main.go	/^var documentationTemplate = `\/\/ Copyright 2011 The Go Authors.  All rights reserved.$/;"	v
dodata	./cmd/link/internal/ld/data.go	/^func dodata() {$/;"	f
dodiv	./cmd/compile/internal/amd64/ggen.go	/^func dodiv(op int, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
dodiv	./cmd/compile/internal/arm64/ggen.go	/^func dodiv(op int, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
dodiv	./cmd/compile/internal/ppc64/ggen.go	/^func dodiv(op int, nl *gc.Node, nr *gc.Node, res *gc.Node) {$/;"	f
dodiv	./cmd/compile/internal/x86/ggen.go	/^func dodiv(op int, nl *gc.Node, nr *gc.Node, res *gc.Node, ax *gc.Node, dx *gc.Node) {$/;"	f
dodiv	./runtime/vlrt.go	/^func dodiv(n, d uint64) (q, r uint64) {$/;"	f
doelf	./cmd/link/internal/ld/elf.go	/^func doelf() {$/;"	f
does	./cmd/vet/composite.go	/^		return \/\/ a literal struct type does not need to use keys$/;"	t
does	./crypto/tls/tls.go	/^			return fail(errors.New("crypto\/tls: private key type does not match public key type"))$/;"	t
doesn	./runtime/mgcmark.go	/^		\/\/ cgocallback_gofunc doesn't return to its LR;$/;"	f
doesoverflow	./cmd/compile/internal/gc/const.go	/^func doesoverflow(v Val, t *Type) bool {$/;"	f
dolockOSThread	./runtime/proc1.go	/^func dolockOSThread() {$/;"	f
domacho	./cmd/link/internal/ld/macho.go	/^func domacho() {$/;"	f
domain	./net/mail/message.go	/^	var domain string$/;"	v
domain	./os/user/lookup_windows.go	/^	var domain *uint16$/;"	v
domainAndType	./net/http/cookiejar/jar.go	/^func (j *Jar) domainAndType(host, domain string) (string, bool, error) {$/;"	f
domainAndTypeTests	./net/http/cookiejar/jar_test.go	/^var domainAndTypeTests = [...]struct {$/;"	v
domainHandlingTests	./net/http/cookiejar/jar_test.go	/^var domainHandlingTests = [...]jarTest{$/;"	v
domainMatch	./net/http/cookiejar/jar.go	/^func (e *entry) domainMatch(host string) bool {$/;"	f
domethod	./cmd/compile/internal/gc/typecheck.go	/^func domethod(n *Node) {$/;"	f
dominantField	./encoding/json/encode.go	/^func dominantField(fields []field) (field, bool) {$/;"	f
doms	./cmd/compile/internal/gc/popt.go	/^func doms(idom []int32, r int32, s int32) bool {$/;"	f
done	./crypto/rc4/rc4_386.s	/^done:$/;"	l
done	./crypto/rc4/rc4_arm.s	/^done:$/;"	l
done	./hash/crc32/crc32_amd64.s	/^done:$/;"	l
done	./hash/crc32/crc32_amd64p32.s	/^done:$/;"	l
done	./math/big/arith_arm64.s	/^done:$/;"	l
done	./net/rpc/client.go	/^func (call *Call) done() {$/;"	f
done	./net/smtp/smtp_test.go	/^	var done = make(chan struct{})$/;"	v
done	./os/exec.go	/^func (p *Process) done() bool {$/;"	f
done	./os/file_windows.go	/^	var done uint32$/;"	v
done	./runtime/asm_386.s	/^done:$/;"	l
done	./runtime/asm_amd64.s	/^done:$/;"	l
done	./runtime/asm_arm64.s	/^done:$/;"	l
done	./runtime/memclr_arm64.s	/^done:$/;"	l
done	./runtime/memclr_ppc64x.s	/^done:$/;"	l
done	./runtime/sys_linux_arm64.s	/^done:$/;"	l
done	./runtime/sys_windows_386.s	/^done:$/;"	l
done	./runtime/sys_windows_amd64.s	/^done:$/;"	l
done	./runtime/trace/trace_test.go	/^	var done sync.WaitGroup$/;"	v
done	./syscall/syscall_windows.go	/^	var done uint32$/;"	v
dopanic	./runtime/panic.go	/^func dopanic(unused int) {$/;"	f
dopanic_m	./runtime/panic1.go	/^func dopanic_m(gp *g, pc, sp uintptr) {$/;"	f
dope	./cmd/link/internal/ld/pe.go	/^func dope() {$/;"	f
doregbits	./cmd/compile/internal/amd64/reg.go	/^func doregbits(r int) uint64 {$/;"	f
doregbits	./cmd/compile/internal/arm/reg.go	/^func doregbits(r int) uint64 {$/;"	f
doregbits	./cmd/compile/internal/arm64/reg.go	/^func doregbits(r int) uint64 {$/;"	f
doregbits	./cmd/compile/internal/ppc64/reg.go	/^func doregbits(r int) uint64 {$/;"	f
doregbits	./cmd/compile/internal/x86/reg.go	/^func doregbits(r int) uint64 {$/;"	f
dosheader	./debug/pe/file.go	/^	var dosheader [96]byte$/;"	v
dosstub	./cmd/link/internal/ld/pe.go	/^var dosstub = []uint8{$/;"	v
dostkcheck	./cmd/link/internal/ld/lib.go	/^func dostkcheck() {$/;"	f
dosymtype	./cmd/link/internal/ld/data.go	/^func dosymtype() {$/;"	f
dot	./cmd/fix/typecheck.go	/^func (typ *Type) dot(cfg *TypeConfig, name string) string {$/;"	f
dot	./cmd/pprof/internal/driver/driver.go	/^	var dot bytes.Buffer$/;"	v
dot	./os/os_test.go	/^var dot = []string{$/;"	v
dotEdge	./cmd/pprof/internal/report/report.go	/^func dotEdge(rpt *Report, from, to int, e *edgeInfo) string {$/;"	f
dotField	./cmd/compile/internal/gc/typecheck.go	/^var dotField = map[typeSym]*Type{}$/;"	v
dotLegend	./cmd/pprof/internal/report/report.go	/^func dotLegend(rpt *Report, g graph, origCount, droppedNodes, droppedEdges int) string {$/;"	f
dotNode	./cmd/pprof/internal/report/report.go	/^func dotNode(rpt *Report, maxFlat float64, rIndex int, n *node) string {$/;"	f
dotNodelets	./cmd/pprof/internal/report/report.go	/^func dotNodelets(rpt *Report, rIndex int, n *node) (dot string) {$/;"	f
dotReader	./net/textproto/reader.go	/^type dotReader struct {$/;"	t
dotWriter	./net/textproto/writer.go	/^type dotWriter struct {$/;"	t
dotaddable	./cmd/compile/internal/arm/gsubr.go	/^func dotaddable(n *gc.Node, n1 *gc.Node) bool {$/;"	f
dotaddable	./cmd/compile/internal/x86/gsubr.go	/^func dotaddable(n *gc.Node, n1 *gc.Node) bool {$/;"	f
dotcrnl	./net/textproto/writer.go	/^var dotcrnl = []byte{'.', '\\r', '\\n'}$/;"	v
dotdotdot	./cmd/compile/internal/gc/go.y	/^dotdotdot:$/;"	l
dotest	./debug/gosym/pclntab_test.go	/^func dotest(self bool) bool {$/;"	f
dotlist	./cmd/compile/internal/gc/go.go	/^var dotlist [10]Dlist \/\/ size is max depth of embeddeds$/;"	v
dotname	./cmd/compile/internal/gc/go.y	/^dotname:$/;"	l
dots	./bytes/bytes_test.go	/^var dots = "1....2....3....4"$/;"	v
dots	./strings/strings_test.go	/^var dots = "1....2....3....4"$/;"	v
dotypedef	./cmd/link/internal/ld/dwarf.go	/^func dotypedef(parent *DWDie, name string, def *DWDie) {$/;"	f
doubleJacobian	./crypto/elliptic/elliptic.go	/^func (curve *CurveParams) doubleJacobian(x, y, z *big.Int) (*big.Int, *big.Int, *big.Int) {$/;"	f
doublePercent	./text/template/exec.go	/^func doublePercent(str string) string {$/;"	f
dounlockOSThread	./runtime/proc1.go	/^func dounlockOSThread() {$/;"	f
doversion	./cmd/compile/internal/gc/lex.go	/^func doversion() {$/;"	f
doversion	./cmd/link/internal/ld/lib.go	/^func doversion() {$/;"	f
doweak	./cmd/link/internal/ld/go.go	/^func doweak() {$/;"	f
dowidth	./cmd/compile/internal/gc/align.go	/^func dowidth(t *Type) {$/;"	f
down	./cmd/link/internal/ld/dwarf.go	/^			\/\/ push dwvar down dwfunc->child to preserve order$/;"	v
down	./container/heap/heap.go	/^func down(h Interface, i, n int) {$/;"	f
downCaser	./encoding/xml/xml_test.go	/^type downCaser struct {$/;"	t
downcount	./cmd/compile/internal/gc/typecheck.go	/^func downcount(t *Type) int {$/;"	f
download	./cmd/go/get.go	/^func download(arg string, parent *Package, stk *importStack, mode int) {$/;"	f
download	./cmd/go/vcs.go	/^func (v *vcsCmd) download(dir string) error {$/;"	f
downloadCache	./cmd/go/get.go	/^var downloadCache = map[string]bool{}$/;"	v
downloadPackage	./cmd/go/get.go	/^func downloadPackage(p *Package) error {$/;"	f
downloadPaths	./cmd/go/get.go	/^func downloadPaths(args []string) []string {$/;"	f
downloadRootCache	./cmd/go/get.go	/^var downloadRootCache = map[string]bool{}$/;"	v
dpc	./cmd/compile/internal/gc/gsubr.go	/^var dpc *obj.Prog$/;"	v
dr	./cmd/link/internal/ld/pe.go	/^var dr *Dll$/;"	v
dr	./image/draw/draw_test.go	/^			var dr, dg, db, da uint32$/;"	v
drain	./cmd/asm/internal/lex/lex_test.go	/^func drain(input *Input) string {$/;"	f
drain	./text/template/parse/lex.go	/^func (l *lexer) drain() {$/;"	f
drainBody	./net/http/httputil/dump.go	/^func drainBody(b io.ReadCloser) (r1, r2 io.ReadCloser, err error) {$/;"	f
drawCMYK	./image/draw/draw.go	/^func drawCMYK(dst *image.RGBA, r image.Rectangle, src *image.CMYK, sp image.Point) {$/;"	f
drawCopyOver	./image/draw/draw.go	/^func drawCopyOver(dst *image.RGBA, r image.Rectangle, src *image.RGBA, sp image.Point) {$/;"	f
drawCopySrc	./image/draw/draw.go	/^func drawCopySrc(dst *image.RGBA, r image.Rectangle, src *image.RGBA, sp image.Point) {$/;"	f
drawFillOver	./image/draw/draw.go	/^func drawFillOver(dst *image.RGBA, r image.Rectangle, src *image.Uniform) {$/;"	f
drawFillSrc	./image/draw/draw.go	/^func drawFillSrc(dst *image.RGBA, r image.Rectangle, src *image.Uniform) {$/;"	f
drawGlyphOver	./image/draw/draw.go	/^func drawGlyphOver(dst *image.RGBA, r image.Rectangle, src *image.Uniform, mask *image.Alpha, mp image.Point) {$/;"	f
drawGray	./image/draw/draw.go	/^func drawGray(dst *image.RGBA, r image.Rectangle, src *image.Gray, sp image.Point) {$/;"	f
drawNRGBAOver	./image/draw/draw.go	/^func drawNRGBAOver(dst *image.RGBA, r image.Rectangle, src *image.NRGBA, sp image.Point) {$/;"	f
drawNRGBASrc	./image/draw/draw.go	/^func drawNRGBASrc(dst *image.RGBA, r image.Rectangle, src *image.NRGBA, sp image.Point) {$/;"	f
drawPaletted	./image/draw/draw.go	/^func drawPaletted(dst Image, r image.Rectangle, src image.Image, sp image.Point, floydSteinberg bool) {$/;"	f
drawRGBA	./image/draw/draw.go	/^func drawRGBA(dst *image.RGBA, r image.Rectangle, src image.Image, sp image.Point, mask image.Image, mp image.Point, op Op) {$/;"	f
drawTest	./image/draw/draw_test.go	/^type drawTest struct {$/;"	t
drawTests	./image/draw/draw_test.go	/^var drawTests = []drawTest{$/;"	v
driverArgs	./database/sql/convert.go	/^func driverArgs(ds *driverStmt, args []interface{}) ([]driver.Value, error) {$/;"	f
driverConn	./database/sql/sql.go	/^type driverConn struct {$/;"	t
driverResult	./database/sql/sql.go	/^type driverResult struct {$/;"	t
driverStmt	./database/sql/sql.go	/^type driverStmt struct {$/;"	t
drop	./runtime/trace.go	/^func (a *traceAlloc) drop() {$/;"	f
dropCR	./bufio/scan.go	/^func dropCR(data []byte) []byte {$/;"	f
dropg	./runtime/proc1.go	/^func dropg() {$/;"	f
dropm	./runtime/proc1.go	/^func dropm() {$/;"	f
droppedm	./runtime/asm_arm64.s	/^droppedm:$/;"	l
droppedm	./runtime/asm_ppc64x.s	/^droppedm:$/;"	l
drt	./encoding/gob/codec_test.go	/^	var drt RT$/;"	v
ds	./reflect/value.go	/^	var ds, ss sliceHeader$/;"	v
dsaAlgorithmParameters	./crypto/x509/x509.go	/^type dsaAlgorithmParameters struct {$/;"	t
dsaCertPem	./crypto/x509/x509_test.go	/^var dsaCertPem = `-----BEGIN CERTIFICATE-----$/;"	v
dsaSignature	./crypto/tls/common.go	/^type dsaSignature struct {$/;"	t
dsaSignature	./crypto/x509/x509.go	/^type dsaSignature struct {$/;"	t
dsname	./cmd/compile/internal/gc/obj.go	/^func dsname(s *Sym, off int, t string) int {$/;"	f
dst	./cmd/compile/internal/arm/cgen.go	/^		var dst gc.Node$/;"	v
dst	./cmd/compile/internal/arm/cgen.go	/^	var dst gc.Node$/;"	v
dst	./cmd/compile/internal/arm/ggen.go	/^	var dst gc.Node$/;"	v
dst	./cmd/compile/internal/arm64/cgen.go	/^	var dst gc.Node$/;"	v
dst	./cmd/compile/internal/arm64/ggen.go	/^	var dst gc.Node$/;"	v
dst	./cmd/compile/internal/gc/cgen.go	/^	var dst, r1 Node$/;"	v
dst	./cmd/compile/internal/gc/cgen.go	/^	var dst, src Node$/;"	v
dst	./cmd/compile/internal/ppc64/cgen.go	/^	var dst gc.Node$/;"	v
dst	./cmd/compile/internal/ppc64/ggen.go	/^	var dst gc.Node$/;"	v
dst	./cmd/compile/internal/x86/cgen.go	/^	var dst gc.Node$/;"	v
dst	./encoding/gob/encoder_test.go	/^	var dst []interface{}$/;"	v
dst	./encoding/json/example_test.go	/^		var dst interface{}$/;"	v
dst	./encoding/xml/read_test.go	/^		var dst TableAttrs$/;"	v
dst	./encoding/xml/read_test.go	/^		var dst Tables$/;"	v
dst	./encoding/xml/read_test.go	/^	var dst TableAttrs$/;"	v
dst	./go/types/builtins.go	/^		var dst Type$/;"	v
dst	./go/types/builtins_test.go	/^	{"copy", `var dst []byte; copy(dst, "hello")`, `func([]byte, string) int`},$/;"	v
dst	./image/draw/bench_test.go	/^	var dst Image$/;"	v
dst	./image/jpeg/dct_test.go	/^	var dst [blockSize]float64$/;"	v
dst	./net/packetconn_test.go	/^		var dst Addr$/;"	v
dst	./net/url/url.go	/^	var dst []string$/;"	v
dst	./reflect/value.go	/^\/\/ to a value of type dst. If the conversion is illegal, convertOp returns nil.$/;"	t
dstringptr	./cmd/compile/internal/gc/obj.go	/^func dstringptr(s *Sym, off int, str string) int {$/;"	f
dsymptr	./cmd/compile/internal/gc/obj.go	/^func dsymptr(s *Sym, off int, x *Sym, xoff int) int {$/;"	f
dsymtab	./cmd/link/internal/ld/ldmacho.go	/^	var dsymtab *LdMachoDysymtab$/;"	v
dt	./cmd/link/internal/ld/dwarf.go	/^	var dt *DWDie$/;"	v
dt	./cmd/link/internal/ld/dwarf.go	/^	var dt int$/;"	v
dt	./debug/pe/file.go	/^		var dt ImportDirectory$/;"	v
dt	./encoding/gob/codec_test.go	/^	var dt DT$/;"	v
dtStrings	./debug/elf/elf.go	/^var dtStrings = []intName{$/;"	v
dtoi	./net/parse.go	/^func dtoi(s string, i0 int) (n int, i int, ok bool) {$/;"	f
dtypesym	./cmd/compile/internal/gc/reflect.go	/^func dtypesym(t *Type) *Sym {$/;"	f
dualStackServer	./net/mockserver_test.go	/^type dualStackServer struct {$/;"	t
dualStackTCPListenerTests	./net/listen_test.go	/^var dualStackTCPListenerTests = []struct {$/;"	v
dualStackUDPListenerTests	./net/listen_test.go	/^var dualStackUDPListenerTests = []struct {$/;"	v
duint16	./cmd/compile/internal/gc/obj.go	/^func duint16(s *Sym, off int, v uint16) int {$/;"	f
duint32	./cmd/compile/internal/gc/obj.go	/^func duint32(s *Sym, off int, v uint32) int {$/;"	f
duint64	./cmd/compile/internal/gc/obj.go	/^func duint64(s *Sym, off int, v uint64) int {$/;"	f
duint8	./cmd/compile/internal/gc/obj.go	/^func duint8(s *Sym, off int, v uint8) int {$/;"	f
duintptr	./cmd/compile/internal/gc/obj.go	/^func duintptr(s *Sym, off int, v uint64) int {$/;"	f
duintxx	./cmd/compile/internal/gc/obj.go	/^func duintxx(s *Sym, off int, v uint64, wid int) int {$/;"	f
dum	./runtime/string.go	/^	var dum [4]byte$/;"	v
dummy	./reflect/all_test.go	/^func dummy(b byte, c int, d byte, e two, f byte, g float32, h byte) (i byte, j int, k byte, l two, m byte, n float32, o byte) {$/;"	f
dummy	./reflect/value.go	/^var dummy struct {$/;"	v
dummy	./syscall/lsf_linux.go	/^	var dummy int$/;"	v
dummy	./syscall/syscall_bsd.go	/^	var dummy byte$/;"	v
dummy	./syscall/syscall_linux.go	/^	var dummy byte$/;"	v
dummy	./syscall/syscall_solaris.go	/^	var dummy int8$/;"	v
dummyAddr	./net/http/serve_test.go	/^type dummyAddr string$/;"	t
dummyReq	./net/http/response_test.go	/^func dummyReq(method string) *Request {$/;"	f
dummyReq11	./net/http/response_test.go	/^func dummyReq11(method string) *Request {$/;"	f
dump	./cmd/gofmt/rewrite.go	/^func dump(msg string, val reflect.Value) {$/;"	f
dump	./container/ring/ring_test.go	/^func dump(r *Ring) {$/;"	f
dump	./encoding/gob/debug.go	/^func (deb *debugger) dump(format string, args ...interface{}) {$/;"	f
dump	./go/types/errors.go	/^func (check *Checker) dump(format string, args ...interface{}) {$/;"	f
dump	./regexp/syntax/parse_test.go	/^func dump(re *Regexp) string {$/;"	f
dump	./runtime/trace.go	/^func (tab *traceStackTable) dump() {$/;"	f
dump	./text/tabwriter/tabwriter.go	/^func (b *Writer) dump() {$/;"	f
dump	./unicode/maketables.go	/^func (char *Char) dump(s string) {$/;"	f
dumpAsReceived	./net/http/httputil/dump.go	/^func dumpAsReceived(req *http.Request, w io.Writer) error {$/;"	f
dumpBytes	./encoding/gob/debug.go	/^var dumpBytes = false \/\/ If true, print the remaining bytes in the input buffer at each item.$/;"	v
dumpConn	./net/http/httputil/dump.go	/^type dumpConn struct {$/;"	t
dumpDep	./database/sql/sql_test.go	/^func (db *DB) dumpDep(t *testing.T, depth int, dep finalCloser, seen map[finalCloser]bool) {$/;"	f
dumpDeps	./database/sql/sql_test.go	/^func (db *DB) dumpDeps(t *testing.T) {$/;"	f
dumpFreeList	./runtime/mgcsweep.go	/^func dumpFreeList(s *mspan) {$/;"	f
dumpGCProg	./runtime/mbitmap.go	/^func dumpGCProg(p *byte) {$/;"	f
dumpInst	./regexp/syntax/prog.go	/^func dumpInst(b *bytes.Buffer, i *Inst) {$/;"	f
dumpLines	./debug/dwarf/line_test.go	/^func dumpLines(t *testing.T, lines []LineEntry) {$/;"	f
dumpProg	./regexp/syntax/prog.go	/^func dumpProg(b *bytes.Buffer, p *Prog) {$/;"	f
dumpRange	./unicode/maketables.go	/^func dumpRange(header string, inCategory Op) {$/;"	f
dumpRegexp	./regexp/syntax/parse_test.go	/^func dumpRegexp(b *bytes.Buffer, re *Regexp) {$/;"	f
dumpResTests	./net/http/httputil/dump_test.go	/^var dumpResTests = []struct {$/;"	v
dumpTest	./net/http/httputil/dump_test.go	/^type dumpTest struct {$/;"	t
dumpTests	./net/http/httputil/dump_test.go	/^var dumpTests = []dumpTest{$/;"	v
dumpasmhdr	./cmd/compile/internal/gc/export.go	/^func dumpasmhdr() {$/;"	f
dumpbool	./runtime/heapdump.go	/^func dumpbool(b bool) {$/;"	f
dumpbv	./runtime/heapdump.go	/^func dumpbv(cbv *bitvector, offset uintptr) {$/;"	f
dumpbvtypes	./runtime/heapdump.go	/^func dumpbvtypes(bv *bitvector, base unsafe.Pointer) {$/;"	f
dumpcase	./cmd/compile/internal/gc/swt.go	/^func dumpcase(cc []*caseClause) {$/;"	f
dumpdata	./cmd/compile/internal/gc/gsubr.go	/^func dumpdata() {$/;"	f
dumpdcl	./cmd/compile/internal/gc/dcl.go	/^func dumpdcl(st string) {$/;"	f
dumpdepth	./cmd/compile/internal/gc/fmt.go	/^var dumpdepth int$/;"	v
dumpempty	./cmd/yacc/yacc.go	/^func dumpempty() {$/;"	f
dumper	./encoding/hex/hex.go	/^type dumper struct {$/;"	t
dumpexport	./cmd/compile/internal/gc/export.go	/^func dumpexport() {$/;"	f
dumpexportconst	./cmd/compile/internal/gc/export.go	/^func dumpexportconst(s *Sym) {$/;"	f
dumpexporttype	./cmd/compile/internal/gc/export.go	/^func dumpexporttype(t *Type) {$/;"	f
dumpexportvar	./cmd/compile/internal/gc/export.go	/^func dumpexportvar(s *Sym) {$/;"	f
dumpfd	./runtime/heapdump.go	/^var dumpfd uintptr \/\/ fd to write the dump to.$/;"	v
dumpfields	./runtime/heapdump.go	/^func dumpfields(bv bitvector) {$/;"	f
dumpfinalizer	./runtime/heapdump.go	/^func dumpfinalizer(obj unsafe.Pointer, fn *funcval, fint *_type, ot *ptrtype) {$/;"	f
dumpframe	./runtime/heapdump.go	/^func dumpframe(s *stkframe, arg unsafe.Pointer) bool {$/;"	f
dumpglobls	./cmd/compile/internal/gc/obj.go	/^func dumpglobls() {$/;"	f
dumpgoroutine	./runtime/heapdump.go	/^func dumpgoroutine(gp *g) {$/;"	f
dumpgs	./runtime/heapdump.go	/^func dumpgs() {$/;"	f
dumpgstatus	./runtime/proc1.go	/^func dumpgstatus(gp *g) {$/;"	f
dumphdr	./runtime/heapdump.go	/^var dumphdr = []byte("go1.5 heap dump\\n")$/;"	v
dumpint	./runtime/heapdump.go	/^func dumpint(v uint64) {$/;"	f
dumpitabs	./runtime/heapdump.go	/^func dumpitabs() {$/;"	f
dumplist	./cmd/compile/internal/gc/fmt.go	/^func dumplist(s string, l *NodeList) {$/;"	f
dumpmemprof	./runtime/heapdump.go	/^func dumpmemprof() {$/;"	f
dumpmemprof_callback	./runtime/heapdump.go	/^func dumpmemprof_callback(b *bucket, nstk uintptr, pstk *uintptr, size, allocs, frees uintptr) {$/;"	f
dumpmemrange	./runtime/heapdump.go	/^func dumpmemrange(data unsafe.Pointer, len uintptr) {$/;"	f
dumpmemstats	./runtime/heapdump.go	/^func dumpmemstats() {$/;"	f
dumpms	./runtime/heapdump.go	/^func dumpms() {$/;"	f
dumpnodetypes	./cmd/compile/internal/gc/walk.go	/^func dumpnodetypes(l *NodeList, what string) string {$/;"	f
dumpobj	./cmd/compile/internal/gc/obj.go	/^func dumpobj() {$/;"	f
dumpobj	./runtime/heapdump.go	/^func dumpobj(obj unsafe.Pointer, size uintptr, bv bitvector) {$/;"	f
dumpobjs	./runtime/heapdump.go	/^func dumpobjs() {$/;"	f
dumpone	./cmd/compile/internal/gc/reg.go	/^func dumpone(f *Flow, isreg int) {$/;"	f
dumpotherroot	./runtime/heapdump.go	/^func dumpotherroot(description string, to unsafe.Pointer) {$/;"	f
dumpparams	./runtime/heapdump.go	/^func dumpparams() {$/;"	f
dumppkg	./cmd/compile/internal/gc/export.go	/^func dumppkg(p *Pkg) {$/;"	f
dumppres	./cmd/yacc/yacc.go	/^func dumppres() {$/;"	f
dumpprod	./cmd/yacc/yacc.go	/^func dumpprod(curprod []int, max int) {$/;"	f
dumpregs	./runtime/defs_plan9_386.go	/^func dumpregs(u *ureg) {$/;"	f
dumpregs	./runtime/defs_plan9_amd64.go	/^func dumpregs(u *ureg) {$/;"	f
dumpregs	./runtime/defs_windows_386.go	/^func dumpregs(r *context) {$/;"	f
dumpregs	./runtime/defs_windows_amd64.go	/^func dumpregs(r *context) {$/;"	f
dumpregs	./runtime/signal_386.go	/^func dumpregs(c *sigctxt) {$/;"	f
dumpregs	./runtime/signal_amd64x.go	/^func dumpregs(c *sigctxt) {$/;"	f
dumpregs	./runtime/signal_arm.go	/^func dumpregs(c *sigctxt) {$/;"	f
dumpregs	./runtime/signal_arm64.go	/^func dumpregs(c *sigctxt) {$/;"	f
dumpregs	./runtime/signal_ppc64x.go	/^func dumpregs(c *sigctxt) {$/;"	f
dumproots	./runtime/heapdump.go	/^func dumproots() {$/;"	f
dumpslice	./runtime/heapdump.go	/^func dumpslice(b []byte) {$/;"	f
dumpstr	./runtime/heapdump.go	/^func dumpstr(s string) {$/;"	f
dumpsym	./cmd/compile/internal/gc/export.go	/^func dumpsym(s *Sym) {$/;"	f
dumptype	./runtime/heapdump.go	/^func dumptype(t *_type) {$/;"	f
dumptypes	./cmd/compile/internal/gc/walk.go	/^func dumptypes(nl **Type, what string) string {$/;"	f
dumptypestructs	./cmd/compile/internal/gc/reflect.go	/^func dumptypestructs() {$/;"	f
dup	./cmd/link/internal/ld/objfile.go	/^	var dup *LSym$/;"	v
dup	./crypto/cipher/cipher.go	/^func dup(p []byte) []byte {$/;"	f
dup	./crypto/md5/gen.go	/^func dup(count int, x []int) []int {$/;"	f
dup	./go/types/typestring_test.go	/^func dup(s string) testEntry {$/;"	f
dup	./net/fd_plan9.go	/^func (fd *netFD) dup() (*os.File, error) {$/;"	f
dup	./net/fd_plan9.go	/^func (l *TCPListener) dup() (*os.File, error) {$/;"	f
dup	./net/fd_unix.go	/^func (fd *netFD) dup() (f *os.File, err error) {$/;"	f
dup	./net/fd_windows.go	/^func (fd *netFD) dup() (*os.File, error) {$/;"	f
dupCloseOnExec	./net/fd_unix.go	/^func dupCloseOnExec(fd int) (newfd int, err error) {$/;"	f
dupCloseOnExecOld	./net/fd_unix.go	/^func dupCloseOnExecOld(fd int) (newfd int, err error) {$/;"	f
dupSocket	./net/file_unix.go	/^func dupSocket(f *os.File) (int, error) {$/;"	f
dupok	./cmd/vet/testdata/asm.go	/^func dupok(x int)$/;"	f
durationTests	./time/time_test.go	/^var durationTests = []struct {$/;"	v
durationValue	./flag/flag.go	/^type durationValue time.Duration$/;"	t
during	./encoding/gob/decode.go	/^	\/\/ if we load a type during decode (when reading an interface value).$/;"	t
dv	./cmd/link/internal/ld/dwarf.go	/^	var dv *DWDie$/;"	v
dv	./cmd/link/internal/ld/pcln.go	/^	var dv int32$/;"	v
dw	./compress/flate/deflate.go	/^	var dw Writer$/;"	v
dwa	./cmd/link/internal/ld/dwarf.go	/^	var dwa *DWAttr$/;"	v
dwarf	./cmd/cgo/gcc.go	/^func (c *typeConv) FuncArg(dtype dwarf.Type, pos token.Pos) *Type {$/;"	t
dwarf	./cmd/cgo/gcc.go	/^func (c *typeConv) Type(dtype dwarf.Type, pos token.Pos) *Type {$/;"	t
dwarf64	./debug/dwarf/buf.go	/^func (u unknownFormat) dwarf64() (bool, bool) {$/;"	f
dwarf64	./debug/dwarf/unit.go	/^func (u *unit) dwarf64() (bool, bool) {$/;"	f
dwarfToName	./cmd/cgo/gcc.go	/^var dwarfToName = map[string]string{$/;"	v
dwarfaddelfheaders	./cmd/link/internal/ld/dwarf.go	/^func dwarfaddelfheaders() {$/;"	f
dwarfaddelfrelocheader	./cmd/link/internal/ld/dwarf.go	/^func dwarfaddelfrelocheader(elfstr int, shdata *ElfShdr, off int64, size int64) {$/;"	f
dwarfaddelfsectionsyms	./cmd/link/internal/ld/dwarf.go	/^func dwarfaddelfsectionsyms() {$/;"	f
dwarfaddmachoheaders	./cmd/link/internal/ld/dwarf.go	/^func dwarfaddmachoheaders(ms *MachoSeg) {$/;"	f
dwarfaddpeheaders	./cmd/link/internal/ld/dwarf.go	/^func dwarfaddpeheaders() {$/;"	f
dwarfaddshstrings	./cmd/link/internal/ld/dwarf.go	/^func dwarfaddshstrings(shstrtab *LSym) {$/;"	f
dwarfemitreloc	./cmd/link/internal/ld/dwarf.go	/^func dwarfemitreloc() {$/;"	f
dwarfhashstr	./cmd/link/internal/ld/dwarf.go	/^func dwarfhashstr(s string) uint32 {$/;"	f
dwarfstart	./cmd/link/internal/ld/macho_combine_dwarf.go	/^var dwarfstart, linkstart int64$/;"	v
dwfunc	./cmd/link/internal/ld/dwarf.go	/^	var dwfunc *DWDie$/;"	v
dwglobals	./cmd/link/internal/ld/dwarf.go	/^var dwglobals DWDie$/;"	v
dwh	./cmd/link/internal/ld/dwarf.go	/^	var dwh *DWDie$/;"	v
dwhb	./cmd/link/internal/ld/dwarf.go	/^	var dwhb *DWDie$/;"	v
dwhk	./cmd/link/internal/ld/dwarf.go	/^	var dwhk *DWDie$/;"	v
dwhv	./cmd/link/internal/ld/dwarf.go	/^	var dwhv *DWDie$/;"	v
dwinfo	./cmd/link/internal/ld/dwarf.go	/^	var dwinfo *DWDie$/;"	v
dwn	./cmd/internal/obj/ld.go	/^	var dwn [LOG]int32$/;"	v
dwrite	./runtime/heapdump.go	/^func dwrite(data unsafe.Pointer, len uintptr) {$/;"	f
dwritebyte	./runtime/heapdump.go	/^func dwritebyte(b byte) {$/;"	f
dwroot	./cmd/link/internal/ld/dwarf.go	/^var dwroot DWDie$/;"	v
dws	./cmd/link/internal/ld/dwarf.go	/^	var dws **DWDie$/;"	v
dws	./cmd/link/internal/ld/dwarf.go	/^	var dws *DWDie$/;"	v
dwtypes	./cmd/link/internal/ld/dwarf.go	/^var dwtypes DWDie$/;"	v
dwvar	./cmd/link/internal/ld/dwarf.go	/^	var dwvar *DWDie$/;"	v
dww	./cmd/link/internal/ld/dwarf.go	/^	var dww *DWDie$/;"	v
dx	./cmd/compile/internal/amd64/ggen.go	/^	var dx gc.Node$/;"	v
dx	./cmd/compile/internal/x86/cgen64.go	/^	var dx gc.Node$/;"	v
dx	./cmd/compile/internal/x86/ggen.go	/^	var dx gc.Node$/;"	v
dx	./cmd/compile/internal/x86/gsubr.go	/^		var dx gc.Node$/;"	v
dyldInfoCmd	./cmd/link/internal/ld/macho_combine_dwarf.go	/^type dyldInfoCmd struct {$/;"	t
dylib	./cmd/link/internal/ld/macho.go	/^var dylib []string$/;"	v
dyn	./runtime/vdso_linux_amd64.go	/^	var dyn *[1 << 20]elf64Dyn$/;"	v
dynamicSymbolsGolden	./debug/elf/symbols_test.go	/^var dynamicSymbolsGolden = map[string][]Symbol{$/;"	v
dynimport	./cmd/cgo/out.go	/^func dynimport(obj string) {$/;"	f
dynlinker	./cmd/cgo/main.go	/^var dynlinker = flag.Bool("dynlinker", false, "record dynamic linker information in -dynimport mode")$/;"	v
dynobj	./cmd/cgo/main.go	/^var dynobj = flag.String("dynimport", "", "if non-empty, print dynamic import data for that file")$/;"	v
dynout	./cmd/cgo/main.go	/^var dynout = flag.String("dynout", "", "write -dynimport output to this file")$/;"	v
dynpackage	./cmd/cgo/main.go	/^var dynpackage = flag.String("dynpackage", "main", "set Go package for -dynimport output")$/;"	v
dynreloc	./cmd/link/internal/ld/data.go	/^func dynreloc() {$/;"	f
dynrelocsym	./cmd/link/internal/ld/data.go	/^func dynrelocsym(s *LSym) {$/;"	f
dzDI	./cmd/compile/internal/amd64/ggen.go	/^func dzDI(q int64) int64 {$/;"	f
dzOff	./cmd/compile/internal/amd64/ggen.go	/^func dzOff(q int64) int64 {$/;"	f
e1	./debug/dwarf/testdata/typedef.c	/^	e1 = 1,$/;"	e	enum:my_enum	file:
e1	./os/file_plan9.go	/^			var e1 error$/;"	v
e2	./cmd/vet/nilfunc.go	/^	var e2 ast.Expr$/;"	v
e2	./crypto/elliptic/p256.go	/^	var e2, e4, e8, e16, e32, e64 [p256Limbs]uint32$/;"	v
e2	./debug/dwarf/testdata/typedef.c	/^	e2 = 2,$/;"	e	enum:my_enum	file:
e3	./debug/dwarf/testdata/typedef.c	/^	e3 = -5,$/;"	e	enum:my_enum	file:
e4	./debug/dwarf/testdata/typedef.c	/^	e4 = 1000000000000000LL,$/;"	e	enum:my_enum	file:
early	./cmd/compile/internal/gc/walk.go	/^	var early *NodeList$/;"	v
earlycgocallback	./runtime/proc1.go	/^var earlycgocallback = []byte("fatal error: cgo callback before cgo call\\n")$/;"	v
earthMass	./sort/example_keys_test.go	/^type earthMass float64$/;"	t
eatAttrName	./html/template/transition.go	/^func eatAttrName(s []byte, i int) (int, *Error) {$/;"	f
eatTagName	./html/template/transition.go	/^func eatTagName(s []byte, i int) (int, element) {$/;"	f
eatWhiteSpace	./html/template/transition.go	/^func eatWhiteSpace(s []byte, i int) int {$/;"	f
eax	./runtime/signal_darwin_386.go	/^func (c *sigctxt) eax() uint32     { return c.regs().eax }$/;"	f
eax	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) eax() uint32     { return c.regs().mc_eax }$/;"	f
eax	./runtime/signal_linux_386.go	/^func (c *sigctxt) eax() uint32       { return c.regs().eax }$/;"	f
eax	./runtime/signal_nacl_386.go	/^func (c *sigctxt) eax() uint32       { return c.regs().eax }$/;"	f
eax	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) eax() uint32      { return c.regs().__gregs[_REG_EAX] }$/;"	f
eax	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) eax() uint32     { return c.regs().sc_eax }$/;"	f
ebase	./cmd/compile/internal/big/floatconv.go	/^	var ebase int$/;"	v
ebase	./math/big/floatconv.go	/^	var ebase int$/;"	v
ebp	./runtime/signal_darwin_386.go	/^func (c *sigctxt) ebp() uint32     { return c.regs().ebp }$/;"	f
ebp	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) ebp() uint32     { return c.regs().mc_ebp }$/;"	f
ebp	./runtime/signal_linux_386.go	/^func (c *sigctxt) ebp() uint32       { return c.regs().ebp }$/;"	f
ebp	./runtime/signal_nacl_386.go	/^func (c *sigctxt) ebp() uint32       { return c.regs().ebp }$/;"	f
ebp	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) ebp() uint32      { return c.regs().__gregs[_REG_EBP] }$/;"	f
ebp	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) ebp() uint32     { return c.regs().sc_ebp }$/;"	f
ebx	./runtime/signal_darwin_386.go	/^func (c *sigctxt) ebx() uint32     { return c.regs().ebx }$/;"	f
ebx	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) ebx() uint32     { return c.regs().mc_ebx }$/;"	f
ebx	./runtime/signal_linux_386.go	/^func (c *sigctxt) ebx() uint32       { return c.regs().ebx }$/;"	f
ebx	./runtime/signal_nacl_386.go	/^func (c *sigctxt) ebx() uint32       { return c.regs().ebx }$/;"	f
ebx	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) ebx() uint32      { return c.regs().__gregs[_REG_EBX] }$/;"	f
ebx	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) ebx() uint32     { return c.regs().sc_ebx }$/;"	f
ec	./os/exec_windows.go	/^	var ec uint32$/;"	v
ecPrivateKey	./crypto/x509/sec1.go	/^type ecPrivateKey struct {$/;"	t
ecPrivateKeyHex	./crypto/x509/sec1_test.go	/^var ecPrivateKeyHex = `3081a40201010430bdb9839c08ee793d1157886a7a758a3c8b2a17a4df48f17ace57c72c56b4723cf21dcda21d4e1ad57ff034f19fcfd98ea00706052b81040022a16403620004feea808b5ee2429cfcce13c32160e1c960990bd050bb0fdf7222f3decd0a55008e32a6aa3c9062051c4cba92a7a3b178b24567412d43cdd2f882fa5addddd726fe3e208d2c26d733a773a597abb749714df7256ead5105fa6e7b3650de236b50`$/;"	v
ecdheECDSAKA	./crypto/tls/cipher_suites.go	/^func ecdheECDSAKA(version uint16) keyAgreement {$/;"	f
ecdheKeyAgreement	./crypto/tls/key_agreement.go	/^type ecdheKeyAgreement struct {$/;"	t
ecdheRSAKA	./crypto/tls/cipher_suites.go	/^func ecdheRSAKA(version uint16) keyAgreement {$/;"	f
ecdsaCertPEM	./crypto/tls/tls_test.go	/^var ecdsaCertPEM = `-----BEGIN CERTIFICATE-----$/;"	v
ecdsaKeyPEM	./crypto/tls/tls_test.go	/^var ecdsaKeyPEM = `-----BEGIN EC PARAMETERS-----$/;"	v
ecdsaSHA1CertPem	./crypto/x509/x509_test.go	/^var ecdsaSHA1CertPem = `$/;"	v
ecdsaSHA256p256CertPem	./crypto/x509/x509_test.go	/^var ecdsaSHA256p256CertPem = `$/;"	v
ecdsaSHA256p384CertPem	./crypto/x509/x509_test.go	/^var ecdsaSHA256p384CertPem = `$/;"	v
ecdsaSHA384p521CertPem	./crypto/x509/x509_test.go	/^var ecdsaSHA384p521CertPem = `$/;"	v
ecdsaSignature	./crypto/ecdsa/ecdsa.go	/^type ecdsaSignature struct {$/;"	t
ecdsaSignature	./crypto/tls/common.go	/^type ecdsaSignature dsaSignature$/;"	t
ecdsaSignature	./crypto/x509/x509.go	/^type ecdsaSignature dsaSignature$/;"	t
ecdsaTests	./crypto/x509/x509_test.go	/^var ecdsaTests = []struct {$/;"	v
echo	./text/template/exec_test.go	/^func echo(arg interface{}) interface{} {$/;"	f
echoCookiesRedirectHandler	./net/http/client_test.go	/^var echoCookiesRedirectHandler = HandlerFunc(func(w ResponseWriter, r *Request) {$/;"	v
ecorr	./cmd/compile/internal/big/ratconv.go	/^	var ecorr int$/;"	v
ecorr	./math/big/ratconv.go	/^	var ecorr int$/;"	v
ecx	./runtime/signal_darwin_386.go	/^func (c *sigctxt) ecx() uint32     { return c.regs().ecx }$/;"	f
ecx	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) ecx() uint32     { return c.regs().mc_ecx }$/;"	f
ecx	./runtime/signal_linux_386.go	/^func (c *sigctxt) ecx() uint32       { return c.regs().ecx }$/;"	f
ecx	./runtime/signal_nacl_386.go	/^func (c *sigctxt) ecx() uint32       { return c.regs().ecx }$/;"	f
ecx	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) ecx() uint32      { return c.regs().__gregs[_REG_ECX] }$/;"	f
ecx	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) ecx() uint32     { return c.regs().sc_ecx }$/;"	f
edata	./cmd/internal/obj/objfile.go	/^	var edata *LSym$/;"	v
edgeInfo	./cmd/pprof/internal/report/report.go	/^type edgeInfo struct {$/;"	t
edgeList	./cmd/pprof/internal/report/report.go	/^type edgeList []*edgeInfo$/;"	t
edgeMap	./cmd/pprof/internal/report/report.go	/^type edgeMap map[*node]*edgeInfo$/;"	t
edges	./cmd/pprof/internal/report/report.go	/^	var edges edgeList$/;"	v
edi	./runtime/signal_darwin_386.go	/^func (c *sigctxt) edi() uint32     { return c.regs().edi }$/;"	f
edi	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) edi() uint32     { return c.regs().mc_edi }$/;"	f
edi	./runtime/signal_linux_386.go	/^func (c *sigctxt) edi() uint32       { return c.regs().edi }$/;"	f
edi	./runtime/signal_nacl_386.go	/^func (c *sigctxt) edi() uint32       { return c.regs().edi }$/;"	f
edi	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) edi() uint32      { return c.regs().__gregs[_REG_EDI] }$/;"	f
edi	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) edi() uint32     { return c.regs().sc_edi }$/;"	f
editActionNode	./html/template/escape.go	/^func (e *escaper) editActionNode(n *parse.ActionNode, cmds []string) {$/;"	f
editTemplateNode	./html/template/escape.go	/^func (e *escaper) editTemplateNode(n *parse.TemplateNode, callee string) {$/;"	f
editTextNode	./html/template/escape.go	/^func (e *escaper) editTextNode(n *parse.TextNode, text []byte) {$/;"	f
edx	./runtime/signal_darwin_386.go	/^func (c *sigctxt) edx() uint32     { return c.regs().edx }$/;"	f
edx	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) edx() uint32     { return c.regs().mc_edx }$/;"	f
edx	./runtime/signal_linux_386.go	/^func (c *sigctxt) edx() uint32       { return c.regs().edx }$/;"	f
edx	./runtime/signal_nacl_386.go	/^func (c *sigctxt) edx() uint32       { return c.regs().edx }$/;"	f
edx	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) edx() uint32      { return c.regs().__gregs[_REG_EDX] }$/;"	f
edx	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) edx() uint32     { return c.regs().sc_edx }$/;"	f
eface	./reflect/value.go	/^		var eface interface{}$/;"	v
eface	./runtime/runtime2.go	/^type eface struct {$/;"	t
efaceHash	./runtime/alg.go	/^func efaceHash(i interface{}, seed uintptr) uintptr {$/;"	f
efaceeq	./cmd/compile/internal/gc/builtin/runtime.go	/^func efaceeq(i1 any, i2 any) (ret bool)$/;"	f
efaceeq	./runtime/alg.go	/^func efaceeq(p, q interface{}) bool {$/;"	f
efacethash	./cmd/compile/internal/gc/builtin/runtime.go	/^func efacethash(i1 any) (ret uint32)$/;"	f
efacethash	./runtime/iface.go	/^func efacethash(e interface{}) uint32 {$/;"	f
eflags	./runtime/signal_darwin_386.go	/^func (c *sigctxt) eflags() uint32  { return c.regs().eflags }$/;"	f
eflags	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) eflags() uint32  { return c.regs().mc_eflags }$/;"	f
eflags	./runtime/signal_linux_386.go	/^func (c *sigctxt) eflags() uint32    { return c.regs().eflags }$/;"	f
eflags	./runtime/signal_nacl_386.go	/^func (c *sigctxt) eflags() uint32    { return c.regs().eflags }$/;"	f
eflags	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) eflags() uint32   { return c.regs().__gregs[_REG_EFL] }$/;"	f
eflags	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) eflags() uint32  { return c.regs().sc_eflags }$/;"	f
eg	./go/doc/testdata/example.go	/^	var eg InternalExample$/;"	v
eg	./testing/example.go	/^	var eg InternalExample$/;"	v
ehdr	./cmd/link/internal/ld/elf.go	/^var ehdr ElfEhdr$/;"	v
ehlo	./net/smtp/smtp.go	/^func (c *Client) ehlo() error {$/;"	f
eip	./runtime/signal_darwin_386.go	/^func (c *sigctxt) eip() uint32     { return c.regs().eip }$/;"	f
eip	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) eip() uint32     { return c.regs().mc_eip }$/;"	f
eip	./runtime/signal_linux_386.go	/^func (c *sigctxt) eip() uint32       { return c.regs().eip }$/;"	f
eip	./runtime/signal_nacl_386.go	/^func (c *sigctxt) eip() uint32       { return c.regs().eip }$/;"	f
eip	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) eip() uint32      { return c.regs().__gregs[_REG_EIP] }$/;"	f
eip	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) eip() uint32     { return c.regs().sc_eip }$/;"	f
elapsed	./cmd/link/internal/ld/util.go	/^func elapsed() float64 {$/;"	f
elem	./cmd/go/test.go	/^	var elem string$/;"	v
elem	./cmd/link/internal/ld/dwarf.go	/^	var elem *DWDie$/;"	v
elemId	./encoding/gob/decode.go	/^			var elemId typeId$/;"	v
element	./cmd/compile/internal/big/int_test.go	/^	var element, modulus, gcd, inverse Int$/;"	v
element	./html/template/context.go	/^type element uint8$/;"	t
element	./math/big/int_test.go	/^	var element, modulus, gcd, inverse Int$/;"	v
elementContentType	./html/template/transition.go	/^var elementContentType = [...]state{$/;"	v
elementNameMap	./html/template/transition.go	/^var elementNameMap = map[string]element{$/;"	v
elementNames	./html/template/context.go	/^var elementNames = [...]string{$/;"	v
elementsof	./regexp/testdata/testregex.c	/^#define elementsof(/;"	d	file:
elemsize	./cmd/link/internal/ld/dwarf.go	/^	var elemsize int$/;"	v
elemtype	./cmd/link/internal/ld/dwarf.go	/^	var elemtype *DWDie$/;"	v
elf32phdr	./cmd/link/internal/ld/elf.go	/^func elf32phdr(e *ElfPhdr) {$/;"	f
elf32shdr	./cmd/link/internal/ld/elf.go	/^func elf32shdr(e *ElfShdr) {$/;"	f
elf32writehdr	./cmd/link/internal/ld/elf.go	/^func elf32writehdr() uint32 {$/;"	f
elf64	./cmd/link/internal/ld/elf.go	/^var elf64 bool$/;"	v
elf64Auxv	./runtime/vdso_linux_amd64.go	/^type elf64Auxv struct {$/;"	t
elf64Dyn	./runtime/vdso_linux_amd64.go	/^type elf64Dyn struct {$/;"	t
elf64Ehdr	./runtime/vdso_linux_amd64.go	/^type elf64Ehdr struct {$/;"	t
elf64Phdr	./runtime/vdso_linux_amd64.go	/^type elf64Phdr struct {$/;"	t
elf64Shdr	./runtime/vdso_linux_amd64.go	/^type elf64Shdr struct {$/;"	t
elf64Sym	./runtime/vdso_linux_amd64.go	/^type elf64Sym struct {$/;"	t
elf64Verdaux	./runtime/vdso_linux_amd64.go	/^type elf64Verdaux struct {$/;"	t
elf64Verdef	./runtime/vdso_linux_amd64.go	/^type elf64Verdef struct {$/;"	t
elf64phdr	./cmd/link/internal/ld/elf.go	/^func elf64phdr(e *ElfPhdr) {$/;"	f
elf64shdr	./cmd/link/internal/ld/elf.go	/^func elf64shdr(e *ElfShdr) {$/;"	f
elf64writehdr	./cmd/link/internal/ld/elf.go	/^func elf64writehdr() uint32 {$/;"	f
elfData	./debug/dwarf/type_test.go	/^func elfData(t *testing.T, name string) *Data {$/;"	f
elfFile	./cmd/internal/objfile/elf.go	/^type elfFile struct {$/;"	t
elfGoNote	./cmd/go/note.go	/^var elfGoNote = []byte("Go\\x00\\x00")$/;"	v
elfbind	./cmd/link/internal/ld/symtab.go	/^var elfbind int$/;"	v
elfbuildinfo	./cmd/link/internal/ld/elf.go	/^func elfbuildinfo(sh *ElfShdr, startva uint64, resoff uint64) int {$/;"	f
elfdynhash	./cmd/link/internal/ld/elf.go	/^func elfdynhash() {$/;"	f
elfgobuildid	./cmd/link/internal/ld/elf.go	/^func elfgobuildid(sh *ElfShdr, startva uint64, resoff uint64) int {$/;"	f
elfhash	./cmd/link/internal/ld/elf.go	/^func elfhash(name []byte) uint32 {$/;"	f
elfinterp	./cmd/link/internal/ld/elf.go	/^func elfinterp(sh *ElfShdr, startva uint64, resoff uint64, p string) int {$/;"	f
elfmap	./cmd/link/internal/ld/ldelf.go	/^func elfmap(elfobj *ElfObj, sect *ElfSect) (err error) {$/;"	f
elfnetbsdsig	./cmd/link/internal/ld/elf.go	/^func elfnetbsdsig(sh *ElfShdr, startva uint64, resoff uint64) int {$/;"	f
elfnote	./cmd/link/internal/ld/elf.go	/^func elfnote(sh *ElfShdr, startva uint64, resoff uint64, sz int, alloc bool) int {$/;"	f
elfobj	./cmd/link/internal/ld/ldelf.go	/^	var elfobj *ElfObj$/;"	v
elfopenbsdsig	./cmd/link/internal/ld/elf.go	/^func elfopenbsdsig(sh *ElfShdr, startva uint64, resoff uint64) int {$/;"	f
elfphload	./cmd/link/internal/ld/elf.go	/^func elfphload(seg *Segment) *ElfPhdr {$/;"	f
elfreader	./go/internal/gccgoimporter/importer.go	/^	var elfreader io.ReaderAt$/;"	v
elfreloc1	./cmd/link/internal/amd64/asm.go	/^func elfreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
elfreloc1	./cmd/link/internal/arm/asm.go	/^func elfreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
elfreloc1	./cmd/link/internal/arm64/asm.go	/^func elfreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
elfreloc1	./cmd/link/internal/ppc64/asm.go	/^func elfreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
elfreloc1	./cmd/link/internal/x86/asm.go	/^func elfreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
elfrelocsect	./cmd/link/internal/ld/elf.go	/^func elfrelocsect(sect *Section, first *LSym) {$/;"	f
elfsetstring	./cmd/link/internal/ld/elf.go	/^func elfsetstring(s string, off int) {$/;"	f
elfsetupplt	./cmd/link/internal/amd64/asm.go	/^func elfsetupplt() {$/;"	f
elfsetupplt	./cmd/link/internal/arm/asm.go	/^func elfsetupplt() {$/;"	f
elfsetupplt	./cmd/link/internal/arm64/asm.go	/^func elfsetupplt() {$/;"	f
elfsetupplt	./cmd/link/internal/ppc64/asm.go	/^func elfsetupplt() {$/;"	f
elfsetupplt	./cmd/link/internal/x86/asm.go	/^func elfsetupplt() {$/;"	f
elfshalloc	./cmd/link/internal/ld/elf.go	/^func elfshalloc(sect *Section) *ElfShdr {$/;"	f
elfshbits	./cmd/link/internal/ld/elf.go	/^func elfshbits(sect *Section) *ElfShdr {$/;"	f
elfshname	./cmd/link/internal/ld/elf.go	/^func elfshname(name string) *ElfShdr {$/;"	f
elfshnum	./cmd/link/internal/ld/symtab.go	/^	var elfshnum int$/;"	v
elfshreloc	./cmd/link/internal/ld/elf.go	/^func elfshreloc(sect *Section) *ElfShdr {$/;"	f
elfstr	./cmd/link/internal/ld/elf.go	/^var elfstr [100]Elfstring$/;"	v
elfstrdbg	./cmd/link/internal/ld/dwarf.go	/^var elfstrdbg [NElfStrDbg]int64$/;"	v
elfverneed	./cmd/link/internal/ld/elf.go	/^var elfverneed int$/;"	v
elfwritebuildinfo	./cmd/link/internal/ld/elf.go	/^func elfwritebuildinfo() int {$/;"	f
elfwritedynentsym	./cmd/link/internal/ld/elf.go	/^func elfwritedynentsym(s *LSym, tag int, t *LSym) {$/;"	f
elfwritedynentsymsize	./cmd/link/internal/ld/elf.go	/^func elfwritedynentsymsize(s *LSym, tag int, t *LSym) {$/;"	f
elfwritegobuildid	./cmd/link/internal/ld/elf.go	/^func elfwritegobuildid() int {$/;"	f
elfwritehdr	./cmd/link/internal/ld/elf.go	/^func elfwritehdr() uint32 {$/;"	f
elfwriteinterp	./cmd/link/internal/ld/elf.go	/^func elfwriteinterp() int {$/;"	f
elfwritenetbsdsig	./cmd/link/internal/ld/elf.go	/^func elfwritenetbsdsig() int {$/;"	f
elfwritenotehdr	./cmd/link/internal/ld/elf.go	/^func elfwritenotehdr(str string, namesz uint32, descsz uint32, tag uint32) *ElfShdr {$/;"	f
elfwriteopenbsdsig	./cmd/link/internal/ld/elf.go	/^func elfwriteopenbsdsig() int {$/;"	f
elfwritephdrs	./cmd/link/internal/ld/elf.go	/^func elfwritephdrs() uint32 {$/;"	f
elfwriteshdrs	./cmd/link/internal/ld/elf.go	/^func elfwriteshdrs() uint32 {$/;"	f
eliminate	./go/types/check_test.go	/^func eliminate(t *testing.T, errmap map[string][]string, errlist []error) {$/;"	f
elimshortmov	./cmd/compile/internal/amd64/peep.go	/^func elimshortmov(g *gc.Graph) {$/;"	f
elimshortmov	./cmd/compile/internal/x86/peep.go	/^func elimshortmov(g *gc.Graph) {$/;"	f
ellipsis	./cmd/api/testdata/src/pkg/p1/p1.go	/^func ellipsis(...string) {}$/;"	f
ellipsis	./go/parser/parser.go	/^	var ellipsis token.Pos$/;"	v
ellipsis	./go/printer/testdata/parser.go	/^	var ellipsis token.Pos$/;"	v
ellipsis	./go/types/call.go	/^			var ellipsis token.Pos$/;"	v
else	./cmd/compile/internal/gc/go.y	/^else:$/;"	l
elseControl	./text/template/parse/parse.go	/^func (t *Tree) elseControl() Node {$/;"	f
elseNode	./text/template/parse/node.go	/^type elseNode struct {$/;"	t
else_	./cmd/asm/internal/lex/input.go	/^func (in *Input) else_() {$/;"	f
else_	./go/parser/parser.go	/^	var else_ ast.Stmt$/;"	v
else_	./go/printer/testdata/parser.go	/^	var else_ ast.Stmt$/;"	v
elseif	./cmd/compile/internal/gc/go.y	/^elseif:$/;"	l
elseif_list	./cmd/compile/internal/gc/go.y	/^elseif_list:$/;"	l
elsewhere	./cmd/compile/internal/gc/typecheck.go	/^	\/\/ we will warn about the broken type elsewhere. no need to emit a potentially confusing error$/;"	t
elt	./cmd/compile/internal/big/int_test.go	/^	var elt, mod, modx4, sq, sqrt Int$/;"	v
elt	./go/scanner/scanner_test.go	/^type elt struct {$/;"	t
elt	./math/big/int_test.go	/^	var elt, mod, modx4, sq, sqrt Int$/;"	v
eltType	./cmd/gofmt/simplify.go	/^		var eltType ast.Expr$/;"	v
elts	./go/parser/parser.go	/^	var elts []ast.Expr$/;"	v
elts	./go/printer/testdata/parser.go	/^	var elts []ast.Expr$/;"	v
emarkq	./cmd/link/internal/ld/go.go	/^var emarkq *LSym$/;"	v
embed	./cmd/compile/internal/gc/go.y	/^embed:$/;"	l
embedded	./cmd/compile/internal/gc/dcl.go	/^func embedded(s *Sym, pkg *Pkg) *Node {$/;"	f
embeddedPaletted	./image/draw/draw_test.go	/^type embeddedPaletted struct {$/;"	t
embeddedSet	./go/doc/reader.go	/^type embeddedSet map[*namedType]bool$/;"	t
embeddedType	./go/types/lookup.go	/^type embeddedType struct {$/;"	t
embeds	./cmd/fix/typecheck.go	/^	Embed  []string          \/\/ list of types this type embeds (for extra methods)$/;"	t
emit	./cmd/compile/internal/gc/reflect.go	/^func (p *GCProg) emit(t *Type, offset int64) {$/;"	f
emit	./cmd/doc/pkg.go	/^func (pkg *Package) emit(comment string, node ast.Node) {$/;"	f
emit	./cmd/trace/trace.go	/^func (ctx *traceContext) emit(e *ViewerEvent) {$/;"	f
emit	./image/jpeg/writer.go	/^func (e *encoder) emit(bits, nBits uint32) {$/;"	f
emit	./text/template/parse/lex.go	/^func (l *lexer) emit(t itemType) {$/;"	f
emitArrow	./cmd/trace/trace.go	/^func (ctx *traceContext) emitArrow(ev *trace.Event, name string) {$/;"	f
emitDNSNameTest	./net/dnsname_test.go	/^func emitDNSNameTest(ch chan<- dnsNameTest) {$/;"	f
emitFunc	./cmd/api/goapi.go	/^func (w *Walker) emitFunc(f *types.Func) {$/;"	f
emitGoroutineCounters	./cmd/trace/trace.go	/^func (ctx *traceContext) emitGoroutineCounters(ev *trace.Event) {$/;"	f
emitHeapCounters	./cmd/trace/trace.go	/^func (ctx *traceContext) emitHeapCounters(ev *trace.Event) {$/;"	f
emitHuff	./image/jpeg/writer.go	/^func (e *encoder) emitHuff(h huffIndex, value int32) {$/;"	f
emitHuffRLE	./image/jpeg/writer.go	/^func (e *encoder) emitHuffRLE(h huffIndex, runLength, value int32) {$/;"	f
emitIfaceType	./cmd/api/goapi.go	/^func (w *Walker) emitIfaceType(name string, typ *types.Interface) {$/;"	f
emitInstant	./cmd/trace/trace.go	/^func (ctx *traceContext) emitInstant(ev *trace.Event, name string) {$/;"	f
emitMethod	./cmd/api/goapi.go	/^func (w *Walker) emitMethod(m *types.Selection) {$/;"	f
emitObj	./cmd/api/goapi.go	/^func (w *Walker) emitObj(obj types.Object) {$/;"	f
emitSlice	./cmd/trace/trace.go	/^func (ctx *traceContext) emitSlice(ev *trace.Event, name string) {$/;"	f
emitStructType	./cmd/api/goapi.go	/^func (w *Walker) emitStructType(name string, typ *types.Struct) {$/;"	f
emitThreadCounters	./cmd/trace/trace.go	/^func (ctx *traceContext) emitThreadCounters(ev *trace.Event) {$/;"	f
emitType	./cmd/api/goapi.go	/^func (w *Walker) emitType(obj *types.TypeName) {$/;"	f
emitcode	./cmd/yacc/yacc.go	/^func emitcode(code []rune, lineno int) {$/;"	f
emitf	./cmd/api/goapi.go	/^func (w *Walker) emitf(format string, args ...interface{}) {$/;"	f
emitptrargsmap	./cmd/compile/internal/gc/pgen.go	/^func emitptrargsmap() {$/;"	f
emphasize	./go/doc/comment.go	/^func emphasize(w io.Writer, line string, words map[string]string, nice bool) {$/;"	f
emphasizeTests	./go/doc/comment_test.go	/^var emphasizeTests = []struct {$/;"	v
empty	./bytes/buffer_test.go	/^func empty(t *testing.T, testname string, buf *Buffer, s string, fub []byte) {$/;"	f
empty	./net/mail/message.go	/^func (p *addrParser) empty() bool {$/;"	f
empty	./regexp/exec.go	/^var empty = make([]int, 0)$/;"	v
empty	./regexp/onepass.go	/^func (q *queueOnePass) empty() bool {$/;"	f
empty	./regexp/syntax/compile.go	/^func (c *compiler) empty(op EmptyOp) frag {$/;"	f
empty	./runtime/map_test.go	/^type empty struct {$/;"	t
empty	./runtime/mgcwork.go	/^func (w *gcWork) empty() bool {$/;"	f
empty	./time/internal_test.go	/^func empty(arg interface{}, seq uintptr) {}$/;"	f
emptyBody	./net/http/fcgi/child.go	/^var emptyBody = ioutil.NopCloser(strings.NewReader(""))$/;"	v
emptyBody	./net/http/httputil/dump.go	/^var emptyBody = ioutil.NopCloser(strings.NewReader(""))$/;"	v
emptyConfig	./crypto/tls/common.go	/^var emptyConfig Config$/;"	v
emptyFunc	./runtime/race/testdata/mop_test.go	/^func emptyFunc(x int) {$/;"	f
emptyInterface	./reflect/value.go	/^type emptyInterface struct {$/;"	t
emptyMethodSet	./go/types/methodset.go	/^var emptyMethodSet MethodSet$/;"	v
emptyParams	./mime/multipart/multipart.go	/^var emptyParams = make(map[string]string)$/;"	v
emptyProg	./cmd/asm/internal/asm/asm.go	/^var emptyProg obj.Prog$/;"	v
emptyStruct	./encoding/gob/decode.go	/^type emptyStruct struct{}$/;"	t
emptyStruct	./reflect/all_test.go	/^type emptyStruct struct{}$/;"	t
emptyStructType	./encoding/gob/decode.go	/^var emptyStructType = reflect.TypeOf(emptyStruct{})$/;"	v
emptyTag	./encoding/json/tagkey_test.go	/^type emptyTag struct {$/;"	t
emptyThenNonEmptyReader	./bufio/bufio_test.go	/^type emptyThenNonEmptyReader struct {$/;"	t
emptymspan	./runtime/mcache.go	/^var emptymspan mspan$/;"	v
emsaPSSEncode	./crypto/rsa/pss.go	/^func emsaPSSEncode(mHash []byte, emBits int, salt []byte, hash hash.Hash) ([]byte, error) {$/;"	f
emsaPSSVerify	./crypto/rsa/pss.go	/^func emsaPSSVerify(mHash, em []byte, emBits, sLen int, hash hash.Hash) error {$/;"	f
enableDrag	./cmd/pprof/internal/svg/svgpan.go	/^var enableDrag = 0; \/\/ 1 or 0: enable or disable dragging (default disabled)$/;"	v
enablePan	./cmd/pprof/internal/svg/svgpan.go	/^var enablePan = 1; \/\/ 1 or 0: enable or disable panning (default enabled)$/;"	v
enableSignal	./os/signal/signal_plan9.go	/^func enableSignal(sig int) {$/;"	f
enableSignal	./os/signal/signal_unix.go	/^func enableSignal(sig int) {$/;"	f
enableSocketConnect	./net/main_plan9_test.go	/^func enableSocketConnect() {}$/;"	f
enableSocketConnect	./net/main_posix_test.go	/^func enableSocketConnect() {$/;"	f
enableZoom	./cmd/pprof/internal/svg/svgpan.go	/^var enableZoom = 1; \/\/ 1 or 0: enable or disable zooming (default enabled)$/;"	v
enabled	./cmd/asm/internal/lex/input.go	/^func (in *Input) enabled() bool {$/;"	f
enc	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^	var enc []byte$/;"	v
enc	./encoding/gob/encgen.go	/^	fmt.Fprintf(b, "var enc%sHelper = map[reflect.Kind]encHelper{\\n", upperClass)$/;"	v
enc	./encoding/gob/encgen.go	/^func enc%[2]sArray(state *encoderState, v reflect.Value) bool {$/;"	f
enc	./encoding/gob/encgen.go	/^func enc%[2]sSlice(state *encoderState, v reflect.Value) bool {$/;"	f
encAndDec	./encoding/gob/encoder_test.go	/^func encAndDec(in, out interface{}) error {$/;"	f
encArrayHelper	./encoding/gob/enc_helpers.go	/^var encArrayHelper = map[reflect.Kind]encHelper{$/;"	v
encBool	./encoding/gob/encode.go	/^func encBool(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encBoolArray	./encoding/gob/enc_helpers.go	/^func encBoolArray(state *encoderState, v reflect.Value) bool {$/;"	f
encBoolSlice	./encoding/gob/enc_helpers.go	/^func encBoolSlice(state *encoderState, v reflect.Value) bool {$/;"	f
encBuffer	./encoding/gob/encode.go	/^type encBuffer struct {$/;"	t
encComplex	./encoding/gob/encode.go	/^func encComplex(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encComplex128Array	./encoding/gob/enc_helpers.go	/^func encComplex128Array(state *encoderState, v reflect.Value) bool {$/;"	f
encComplex128Slice	./encoding/gob/enc_helpers.go	/^func encComplex128Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encComplex64Array	./encoding/gob/enc_helpers.go	/^func encComplex64Array(state *encoderState, v reflect.Value) bool {$/;"	f
encComplex64Slice	./encoding/gob/enc_helpers.go	/^func encComplex64Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encDecTest	./encoding/hex/hex_test.go	/^type encDecTest struct {$/;"	t
encDecTests	./encoding/hex/hex_test.go	/^var encDecTests = []encDecTest{$/;"	v
encEngine	./encoding/gob/encode.go	/^type encEngine struct {$/;"	t
encFloat	./encoding/gob/encode.go	/^func encFloat(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encFloat32Array	./encoding/gob/enc_helpers.go	/^func encFloat32Array(state *encoderState, v reflect.Value) bool {$/;"	f
encFloat32Slice	./encoding/gob/enc_helpers.go	/^func encFloat32Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encFloat64Array	./encoding/gob/enc_helpers.go	/^func encFloat64Array(state *encoderState, v reflect.Value) bool {$/;"	f
encFloat64Slice	./encoding/gob/enc_helpers.go	/^func encFloat64Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encFuzzDec	./encoding/gob/codec_test.go	/^func encFuzzDec(rng *rand.Rand, in interface{}) error {$/;"	f
encHelper	./encoding/gob/encode.go	/^type encHelper func(state *encoderState, v reflect.Value) bool$/;"	t
encIndirect	./encoding/gob/encode.go	/^func encIndirect(pv reflect.Value, indir int) reflect.Value {$/;"	f
encInstr	./encoding/gob/encode.go	/^type encInstr struct {$/;"	t
encInt	./encoding/gob/encode.go	/^func encInt(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encInt16Array	./encoding/gob/enc_helpers.go	/^func encInt16Array(state *encoderState, v reflect.Value) bool {$/;"	f
encInt16Slice	./encoding/gob/enc_helpers.go	/^func encInt16Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encInt32Array	./encoding/gob/enc_helpers.go	/^func encInt32Array(state *encoderState, v reflect.Value) bool {$/;"	f
encInt32Slice	./encoding/gob/enc_helpers.go	/^func encInt32Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encInt64Array	./encoding/gob/enc_helpers.go	/^func encInt64Array(state *encoderState, v reflect.Value) bool {$/;"	f
encInt64Slice	./encoding/gob/enc_helpers.go	/^func encInt64Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encInt8Array	./encoding/gob/enc_helpers.go	/^func encInt8Array(state *encoderState, v reflect.Value) bool {$/;"	f
encInt8Slice	./encoding/gob/enc_helpers.go	/^func encInt8Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encIntArray	./encoding/gob/enc_helpers.go	/^func encIntArray(state *encoderState, v reflect.Value) bool {$/;"	f
encIntSlice	./encoding/gob/enc_helpers.go	/^func encIntSlice(state *encoderState, v reflect.Value) bool {$/;"	f
encOp	./encoding/gob/encode.go	/^type encOp func(i *encInstr, state *encoderState, v reflect.Value)$/;"	t
encOpFor	./encoding/gob/encode.go	/^func encOpFor(rt reflect.Type, inProgress map[reflect.Type]*encOp, building map[*typeInfo]bool) (*encOp, int) {$/;"	f
encOpTable	./encoding/gob/encode.go	/^var encOpTable = [...]encOp{$/;"	v
encSliceHelper	./encoding/gob/enc_helpers.go	/^var encSliceHelper = map[reflect.Kind]encHelper{$/;"	v
encString	./encoding/gob/encode.go	/^func encString(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encStringArray	./encoding/gob/enc_helpers.go	/^func encStringArray(state *encoderState, v reflect.Value) bool {$/;"	f
encStringSlice	./encoding/gob/enc_helpers.go	/^func encStringSlice(state *encoderState, v reflect.Value) bool {$/;"	f
encStructTerminator	./encoding/gob/encode.go	/^func encStructTerminator(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encUint	./encoding/gob/encode.go	/^func encUint(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encUint16Array	./encoding/gob/enc_helpers.go	/^func encUint16Array(state *encoderState, v reflect.Value) bool {$/;"	f
encUint16Slice	./encoding/gob/enc_helpers.go	/^func encUint16Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encUint32Array	./encoding/gob/enc_helpers.go	/^func encUint32Array(state *encoderState, v reflect.Value) bool {$/;"	f
encUint32Slice	./encoding/gob/enc_helpers.go	/^func encUint32Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encUint64Array	./encoding/gob/enc_helpers.go	/^func encUint64Array(state *encoderState, v reflect.Value) bool {$/;"	f
encUint64Slice	./encoding/gob/enc_helpers.go	/^func encUint64Slice(state *encoderState, v reflect.Value) bool {$/;"	f
encUint8Array	./encoding/gob/encode.go	/^func encUint8Array(i *encInstr, state *encoderState, v reflect.Value) {$/;"	f
encUintArray	./encoding/gob/enc_helpers.go	/^func encUintArray(state *encoderState, v reflect.Value) bool {$/;"	f
encUintSlice	./encoding/gob/enc_helpers.go	/^func encUintSlice(state *encoderState, v reflect.Value) bool {$/;"	f
encUintptrArray	./encoding/gob/enc_helpers.go	/^func encUintptrArray(state *encoderState, v reflect.Value) bool {$/;"	f
encUintptrSlice	./encoding/gob/enc_helpers.go	/^func encUintptrSlice(state *encoderState, v reflect.Value) bool {$/;"	f
encbuf	./cmd/link/internal/ld/dwarf.go	/^var encbuf [10]byte$/;"	v
enclosingTarget	./go/types/labels.go	/^func (b *block) enclosingTarget(name string) *ast.LabeledStmt {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p *Function) encode(b *buffer) {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p *Line) encode(b *buffer) {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p *Location) encode(b *buffer) {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p *Mapping) encode(b *buffer) {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p *Profile) encode(b *buffer) {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p *Sample) encode(b *buffer) {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p *ValueType) encode(b *buffer) {$/;"	f
encode	./cmd/pprof/internal/profile/encode.go	/^func (p Label) encode(b *buffer) {$/;"	f
encode	./encoding/gob/encode.go	/^func (enc *Encoder) encode(b *encBuffer, value reflect.Value, ut *userTypeInfo) {$/;"	f
encode	./encoding/json/encode.go	/^func (ae *arrayEncoder) encode(e *encodeState, v reflect.Value, _ bool) {$/;"	f
encode	./encoding/json/encode.go	/^func (bits floatEncoder) encode(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
encode	./encoding/json/encode.go	/^func (ce *condAddrEncoder) encode(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
encode	./encoding/json/encode.go	/^func (me *mapEncoder) encode(e *encodeState, v reflect.Value, _ bool) {$/;"	f
encode	./encoding/json/encode.go	/^func (pe *ptrEncoder) encode(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
encode	./encoding/json/encode.go	/^func (se *sliceEncoder) encode(e *encodeState, v reflect.Value, _ bool) {$/;"	f
encode	./encoding/json/encode.go	/^func (se *structEncoder) encode(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
encode	./mime/quotedprintable/writer.go	/^func (w *Writer) encode(b byte) error {$/;"	f
encode	./net/http/cookiejar/punycode.go	/^func encode(prefix, s string) (string, error) {$/;"	f
encodeArray	./encoding/gob/encode.go	/^func (enc *Encoder) encodeArray(b *encBuffer, value reflect.Value, op encOp, elemIndir int, length int, helper encHelper) {$/;"	f
encodeBool	./cmd/pprof/internal/profile/proto.go	/^func encodeBool(b *buffer, tag int, x bool) {$/;"	f
encodeBoolOpt	./cmd/pprof/internal/profile/proto.go	/^func encodeBoolOpt(b *buffer, tag int, x bool) {$/;"	f
encodeByteSlice	./encoding/json/encode.go	/^func encodeByteSlice(e *encodeState, v reflect.Value, _ bool) {$/;"	f
encodeColorTable	./image/gif/writer.go	/^func encodeColorTable(dst []byte, p color.Palette, size int) int {$/;"	f
encodeDecode	./image/png/writer_test.go	/^func encodeDecode(m image.Image) (image.Image, error) {$/;"	f
encodeDigit	./net/http/cookiejar/punycode.go	/^func encodeDigit(digit int32) byte {$/;"	f
encodeGobEncoder	./encoding/gob/encode.go	/^func (enc *Encoder) encodeGobEncoder(b *encBuffer, ut *userTypeInfo, v reflect.Value) {$/;"	f
encodeInt	./encoding/gob/encode.go	/^func (state *encoderState) encodeInt(i int64) {$/;"	f
encodeInt64	./cmd/pprof/internal/profile/proto.go	/^func encodeInt64(b *buffer, tag int, x int64) {$/;"	f
encodeInt64Opt	./cmd/pprof/internal/profile/proto.go	/^func encodeInt64Opt(b *buffer, tag int, x int64) {$/;"	f
encodeInterface	./encoding/gob/encode.go	/^func (enc *Encoder) encodeInterface(b *encBuffer, iv reflect.Value) {$/;"	f
encodeLength	./cmd/pprof/internal/profile/proto.go	/^func encodeLength(b *buffer, tag int, len int) {$/;"	f
encodeMap	./encoding/gob/encode.go	/^func (enc *Encoder) encodeMap(b *encBuffer, mv reflect.Value, keyOp, elemOp encOp, keyIndir, elemIndir int) {$/;"	f
encodeMessage	./cmd/pprof/internal/profile/proto.go	/^func encodeMessage(b *buffer, tag int, m message) {$/;"	f
encodeQueryTests	./net/url/url_test.go	/^var encodeQueryTests = []EncodeQueryTest{$/;"	v
encodeReflectValue	./encoding/gob/encode.go	/^func encodeReflectValue(state *encoderState, v reflect.Value, op encOp, indir int) {$/;"	f
encodeSingle	./encoding/gob/encode.go	/^func (enc *Encoder) encodeSingle(b *encBuffer, engine *encEngine, value reflect.Value) {$/;"	f
encodeSize	./net/http/fcgi/fcgi.go	/^func encodeSize(b []byte, size uint32) int {$/;"	f
encodeState	./encoding/json/encode.go	/^type encodeState struct {$/;"	t
encodeStatePool	./encoding/json/encode.go	/^var encodeStatePool sync.Pool$/;"	v
encodeString	./cmd/pprof/internal/profile/proto.go	/^func encodeString(b *buffer, tag int, x string) {$/;"	f
encodeStringOpt	./cmd/pprof/internal/profile/proto.go	/^func encodeStringOpt(b *buffer, tag int, x string) {$/;"	f
encodeStringTests	./encoding/json/encode_test.go	/^var encodeStringTests = []struct {$/;"	v
encodeStrings	./cmd/pprof/internal/profile/proto.go	/^func encodeStrings(b *buffer, tag int, x []string) {$/;"	f
encodeStruct	./encoding/gob/encode.go	/^func (enc *Encoder) encodeStruct(b *encBuffer, engine *encEngine, value reflect.Value) {$/;"	f
encodeT	./encoding/gob/codec_test.go	/^var encodeT = []EncodeT{$/;"	v
encodeTest	./unicode/utf16/utf16_test.go	/^type encodeTest struct {$/;"	t
encodeTests	./unicode/utf16/utf16_test.go	/^var encodeTests = []encodeTest{$/;"	v
encodeTokenTests	./encoding/xml/marshal_test.go	/^var encodeTokenTests = []struct {$/;"	v
encodeType	./runtime/race/testdata/regression_test.go	/^func (t *TypeID) encodeType(x int) (tt TypeID, err error) {$/;"	f
encodeUint	./encoding/gob/encode.go	/^func (state *encoderState) encodeUint(x uint64) {$/;"	f
encodeUint64	./cmd/pprof/internal/profile/proto.go	/^func encodeUint64(b *buffer, tag int, x uint64) {$/;"	f
encodeUint64Opt	./cmd/pprof/internal/profile/proto.go	/^func encodeUint64Opt(b *buffer, tag int, x uint64) {$/;"	f
encodeUint64s	./cmd/pprof/internal/profile/proto.go	/^func encodeUint64s(b *buffer, tag int, x []uint64) {$/;"	f
encodeVarint	./cmd/pprof/internal/profile/proto.go	/^func encodeVarint(b *buffer, x uint64) {$/;"	f
encodeWord	./mime/encodedword.go	/^func (e WordEncoder) encodeWord(charset, s string) string {$/;"	f
encoder	./compress/lzw/writer.go	/^type encoder struct {$/;"	t
encoder	./encoding/ascii85/ascii85.go	/^type encoder struct {$/;"	t
encoder	./encoding/base32/base32.go	/^type encoder struct {$/;"	t
encoder	./encoding/base64/base64.go	/^type encoder struct {$/;"	t
encoder	./encoding/binary/binary.go	/^type encoder coder$/;"	t
encoder	./image/gif/writer.go	/^type encoder struct {$/;"	t
encoder	./image/jpeg/writer.go	/^type encoder struct {$/;"	t
encoder	./image/png/writer.go	/^type encoder struct {$/;"	t
encoderCache	./encoding/json/encode.go	/^var encoderCache struct {$/;"	v
encoderFunc	./encoding/json/encode.go	/^type encoderFunc func(e *encodeState, v reflect.Value, quoted bool)$/;"	t
encoderState	./encoding/gob/encode.go	/^type encoderState struct {$/;"	t
encoding	./encoding/gob/doc.go	/^The type encoding is long and fairly intricate but we send it only once.$/;"	t
encoding	./net/url/url.go	/^type encoding int$/;"	t
encodingTest	./encoding/base64/base64_test.go	/^type encodingTest struct {$/;"	t
encodingTests	./cmd/compile/internal/big/int_test.go	/^var encodingTests = []string{$/;"	v
encodingTests	./encoding/base64/base64_test.go	/^var encodingTests = []encodingTest{$/;"	v
encodingTests	./math/big/int_test.go	/^var encodingTests = []string{$/;"	v
encodings	./debug/dwarf/const.go	/^\/\/ Basic type encodings -- the value for AttrEncoding in a TagBaseType Entry.$/;"	t
encountered	./go/doc/reader.go	/^\/\/ computeMethodSets determines the actual method sets for each type encountered.$/;"	t
encrypt	./crypto/des/des_test.go	/^		var encrypt = func(in []byte) (out []byte) {$/;"	v
encrypt	./crypto/des/des_test.go	/^		var encrypt = func(key, in []byte) (out []byte) {$/;"	v
encrypt	./crypto/rsa/rsa.go	/^func encrypt(c *big.Int, pub *PublicKey, m *big.Int) *big.Int {$/;"	f
encrypt	./crypto/tls/conn.go	/^func (hc *halfConn) encrypt(b *block, explicitIVLen int) (bool, alert) {$/;"	f
encryptBlock	./crypto/aes/cipher_asm.go	/^func encryptBlock(xk []uint32, dst, src []byte) {$/;"	f
encryptBlock	./crypto/aes/cipher_generic.go	/^func encryptBlock(xk []uint32, dst, src []byte) {$/;"	f
encryptBlock	./crypto/des/block.go	/^func encryptBlock(subkeys []uint64, dst, src []byte) {$/;"	f
encryptBlockAsm	./crypto/aes/cipher_asm.go	/^func encryptBlockAsm(nr int, xk *uint32, dst, src *byte)$/;"	f
encryptBlockGo	./crypto/aes/block.go	/^func encryptBlockGo(xk []uint32, dst, src []byte) {$/;"	f
encryptDESTests	./crypto/des/des_test.go	/^var encryptDESTests = []CryptTest{$/;"	v
encryptTests	./crypto/aes/aes_test.go	/^var encryptTests = []CryptTest{$/;"	v
encryptTicket	./crypto/tls/ticket.go	/^func (c *Conn) encryptTicket(state *sessionState) ([]byte, error) {$/;"	f
encryptTripleDESTests	./crypto/des/des_test.go	/^var encryptTripleDESTests = []CryptTest{$/;"	v
encryptionInfoCmd	./cmd/link/internal/ld/macho_combine_dwarf.go	/^type encryptionInfoCmd struct {$/;"	t
end	./all.bat	/^:end$/;"	l
end	./clean.bat	/^:end$/;"	l
end	./cmd/compile/internal/arm/ggen.go	/^		var end gc.Node$/;"	v
end	./cmd/compile/internal/arm64/ggen.go	/^		var end gc.Node$/;"	v
end	./cmd/compile/internal/gc/reflect.go	/^func (p *GCProg) end() {$/;"	f
end	./cmd/compile/internal/ppc64/ggen.go	/^		var end gc.Node$/;"	v
end	./cmd/link/internal/ld/pcln.go	/^	var end int32$/;"	v
end	./crypto/md5/md5block_386.s	/^end:$/;"	l
end	./crypto/md5/md5block_amd64.s	/^end:$/;"	l
end	./crypto/md5/md5block_amd64p32.s	/^end:$/;"	l
end	./crypto/rc4/rc4_amd64.s	/^end:$/;"	l
end	./crypto/rc4/rc4_amd64p32.s	/^end:$/;"	l
end	./crypto/sha1/sha1block_386.s	/^end:$/;"	l
end	./crypto/sha1/sha1block_amd64.s	/^end:$/;"	l
end	./crypto/sha1/sha1block_amd64p32.s	/^end:$/;"	l
end	./crypto/sha256/sha256block_386.s	/^end:$/;"	l
end	./crypto/sha256/sha256block_amd64.s	/^end:$/;"	l
end	./crypto/sha512/sha512block_amd64.s	/^end:$/;"	l
end	./debug/gosym/symtab.go	/^			var end int$/;"	v
end	./make.bat	/^:end$/;"	l
end	./net/http/request_test.go	/^	var end = regexp.MustCompile("\/foo\/$")$/;"	v
end	./race.bat	/^:end$/;"	l
end	./regexp/exec_test.go	/^		var end byte = ')'$/;"	v
end	./regexp/regexp.go	/^	var end int$/;"	v
end	./run.bat	/^:end$/;"	l
end	./runtime/asm_arm.s	/^end:						\\$/;"	l
end	./runtime/asm_arm64.s	/^end:						\\$/;"	l
end	./runtime/asm_ppc64x.s	/^end:						\\$/;"	l
end	./text/template/parse/parse.go	/^	var end Node$/;"	v
endAndEsc	./html/template/transition.go	/^	var endAndEsc string$/;"	v
endControl	./text/template/parse/parse.go	/^func (t *Tree) endControl() Node {$/;"	f
endCycle	./runtime/mgc.go	/^func (c *gcControllerState) endCycle() {$/;"	f
endEscape	./text/tabwriter/tabwriter.go	/^func (b *Writer) endEscape() {$/;"	f
endFile	./cmd/pack/pack.go	/^func (ar *Archive) endFile() {$/;"	f
endIndex	./encoding/pem/pem.go	/^	var endIndex int$/;"	v
endNode	./text/template/parse/node.go	/^type endNode struct {$/;"	t
endOfTime	./net/http/cookiejar/jar.go	/^var endOfTime = time.Date(9999, 12, 31, 23, 59, 59, 0, time.UTC)$/;"	v
endPos	./regexp/regexp.go	/^	var endPos int$/;"	v
endState	./html/template/transition.go	/^	var endState state$/;"	v
endcgo	./runtime/cgocall.go	/^func endcgo(mp *m) {$/;"	f
endif	./cmd/asm/internal/lex/input.go	/^func (in *Input) endif() {$/;"	f
endlessZeros	./bufio/scan_test.go	/^type endlessZeros struct{}$/;"	t
endline	./go/parser/parser.go	/^		var endline int$/;"	v
endline	./go/printer/testdata/parser.go	/^		var endline int$/;"	v
endofpage	./runtime/asm_386.s	/^endofpage:$/;"	l
endofpage	./runtime/asm_amd64.s	/^endofpage:$/;"	l
endsBasicSourceBlock	./cmd/cover/cover.go	/^func (f *File) endsBasicSourceBlock(s ast.Stmt) bool {$/;"	f
endsWithCSSKeyword	./html/template/css.go	/^func endsWithCSSKeyword(b []byte, kw string) bool {$/;"	f
endtest	./debug/gosym/pclntab_test.go	/^func endtest() {$/;"	f
enginePtr	./encoding/gob/decode.go	/^	var enginePtr **decEngine$/;"	v
enqueue	./runtime/chan.go	/^func (q *waitq) enqueue(sgp *sudog) {$/;"	f
ensureNBits	./image/jpeg/huffman.go	/^func (d *decoder) ensureNBits(n int32) error {$/;"	f
ensurePipelineContains	./html/template/escape.go	/^func ensurePipelineContains(p *parse.PipeNode, s []string) {$/;"	f
ensureSigM	./runtime/signal1_unix.go	/^func ensureSigM() {$/;"	f
ensureglinkresolver	./cmd/link/internal/ppc64/asm.go	/^func ensureglinkresolver() *ld.LSym {$/;"	f
entersyscall	./runtime/proc1.go	/^func entersyscall(dummy int32) {$/;"	f
entersyscall_gcwait	./runtime/proc1.go	/^func entersyscall_gcwait() {$/;"	f
entersyscall_sysmon	./runtime/proc1.go	/^func entersyscall_sysmon() {$/;"	f
entersyscallblock	./runtime/proc1.go	/^func entersyscallblock(dummy int32) {$/;"	f
entersyscallblock_handoff	./runtime/proc1.go	/^func entersyscallblock_handoff() {$/;"	f
entity	./encoding/xml/xml.go	/^var entity = map[string]int{$/;"	v
entity	./html/entity.go	/^var entity = map[string]rune{$/;"	v
entity2	./html/entity.go	/^var entity2 = map[string][2]rune{$/;"	v
entries	./runtime/netpoll_windows.go	/^	var entries [64]overlappedEntry$/;"	v
entrustBrokenSPKI	./crypto/x509/x509.go	/^var entrustBrokenSPKI = []byte{$/;"	v
entry	./cmd/compile/internal/gc/sinit.go	/^func entry(p *InitPlan) *InitEntry {$/;"	f
entry	./debug/dwarf/entry.go	/^func (b *buf) entry(atab abbrevTable, ubase Offset) *Entry {$/;"	f
entry	./go/printer/printer_test.go	/^type entry struct {$/;"	t
entry	./net/http/cookiejar/jar.go	/^type entry struct {$/;"	t
entry	./regexp/exec.go	/^type entry struct {$/;"	t
enum16bit	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func enum16bit(try func([]byte)) {$/;"	f
enum24bit	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func enum24bit(try func([]byte)) {$/;"	f
enum8bit	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func enum8bit(try func([]byte)) {$/;"	f
enumModRM	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func enumModRM(try func([]byte)) {$/;"	f
enumerateValues	./internal/syscall/windows/registry/registry_test.go	/^func enumerateValues(t *testing.T, k registry.Key) {$/;"	f
env	./cmd/internal/obj/x86/obj6_test.go	/^	var env []string$/;"	v
envForDir	./cmd/go/main.go	/^func envForDir(dir string, base []string) []string {$/;"	f
envItem	./syscall/exec_plan9.go	/^type envItem struct {$/;"	t
envMap	./net/http/cgi/child.go	/^func envMap(env []string) map[string]string {$/;"	f
envOnce	./net/http/transport.go	/^type envOnce struct {$/;"	t
envOr	./cmd/internal/obj/util.go	/^func envOr(key, value string) string {$/;"	f
envVar	./cmd/go/env.go	/^type envVar struct {$/;"	t
environ	./runtime/runtime1.go	/^func environ() []string {$/;"	f
envs	./runtime/runtime.go	/^var envs []string$/;"	v
envv	./os/exec/exec.go	/^func (c *Cmd) envv() []string {$/;"	f
envvParsed	./syscall/exec_plan9.go	/^	var envvParsed []envItem$/;"	v
eof	./encoding/json/scanner.go	/^func (s *scanner) eof() int {$/;"	f
eofCounter	./fmt/scan_test.go	/^type eofCounter struct {$/;"	t
eofError	./net/fd_posix.go	/^func (fd *netFD) eofError(n int, err error) error {$/;"	f
eofErrorTests	./net/fd_posix_test.go	/^var eofErrorTests = []struct {$/;"	v
eofReader	./image/jpeg/reader_test.go	/^type eofReader struct {$/;"	t
eofReader	./net/http/server.go	/^var eofReader = &struct {$/;"	v
eofReaderFunc	./net/http/client_test.go	/^type eofReaderFunc func()$/;"	t
eofReaderWithWriteTo	./net/http/server.go	/^type eofReaderWithWriteTo struct{}$/;"	t
eofTests	./fmt/scan_test.go	/^var eofTests = []struct {$/;"	v
eol	./go/ast/commentmap.go	/^func (r *commentListReader) eol() bool {$/;"	f
ep	./cmd/link/internal/ld/data.go	/^	var ep []byte$/;"	v
epcs	./cmd/link/internal/ld/dwarf.go	/^	var epcs *LSym$/;"	v
epipecheck	./os/file_plan9.go	/^func epipecheck(file *File, e error) {$/;"	f
epipecheck	./os/file_unix.go	/^func epipecheck(file *File, e error) {$/;"	f
epipecheck	./os/file_windows.go	/^func epipecheck(file *File, e error) {$/;"	f
epollcreate	./runtime/netpoll_epoll.go	/^func epollcreate(size int32) int32$/;"	f
epollcreate1	./runtime/netpoll_epoll.go	/^func epollcreate1(flags int32) int32$/;"	f
epollctl	./runtime/netpoll_epoll.go	/^func epollctl(epfd, op, fd int32, ev *epollevent) int32$/;"	f
epollevent	./runtime/defs_linux_386.go	/^type epollevent struct {$/;"	t
epollevent	./runtime/defs_linux_amd64.go	/^type epollevent struct {$/;"	t
epollevent	./runtime/defs_linux_arm.go	/^type epollevent struct {$/;"	t
epollevent	./runtime/defs_linux_arm64.go	/^type epollevent struct {$/;"	t
epollevent	./runtime/defs_linux_ppc64.go	/^type epollevent struct {$/;"	t
epollevent	./runtime/defs_linux_ppc64le.go	/^type epollevent struct {$/;"	t
epollwait	./runtime/netpoll_epoll.go	/^func epollwait(epfd int32, ev *epollevent, nev, timeout int32) int32$/;"	f
eq	./bytes/bytes_test.go	/^func eq(a, b []string) bool {$/;"	f
eq	./crypto/subtle/constant_time_test.go	/^func eq(a, b int32) int {$/;"	f
eq	./html/template/context.go	/^func (c context) eq(d context) bool {$/;"	f
eq	./image/color/ycbcr_test.go	/^func eq(c0, c1 Color) error {$/;"	f
eq	./image/draw/draw_test.go	/^func eq(c0, c1 color.Color) bool {$/;"	f
eq	./runtime/asm_386.s	/^eq:$/;"	l
eq	./runtime/asm_amd64.s	/^eq:$/;"	l
eq	./runtime/asm_amd64p32.s	/^eq:$/;"	l
eq	./runtime/asm_arm.s	/^eq:$/;"	l
eq	./runtime/asm_arm64.s	/^eq:$/;"	l
eq	./runtime/asm_ppc64x.s	/^eq:$/;"	l
eq	./strings/strings_test.go	/^func eq(a, b []string) bool {$/;"	f
eq	./text/template/funcs.go	/^func eq(arg1 interface{}, arg2 ...interface{}) (bool, error) {$/;"	f
eqByteSlices	./crypto/tls/handshake_messages.go	/^func eqByteSlices(x, y [][]byte) bool {$/;"	f
eqCurveIDs	./crypto/tls/handshake_messages.go	/^func eqCurveIDs(x, y []CurveID) bool {$/;"	f
eqSignatureAndHashes	./crypto/tls/handshake_messages.go	/^func eqSignatureAndHashes(x, y []signatureAndHash) bool {$/;"	f
eqStrings	./crypto/tls/handshake_messages.go	/^func eqStrings(x, y []string) bool {$/;"	f
eqUint16s	./crypto/tls/handshake_messages.go	/^func eqUint16s(x, y []uint16) bool {$/;"	f
eqfield	./cmd/compile/internal/gc/subr.go	/^func eqfield(p *Node, q *Node, field *Node) *Node {$/;"	f
eqfor	./cmd/compile/internal/gc/walk.go	/^func eqfor(t *Type, needsize *int) *Node {$/;"	f
eqfunc	./cmd/compile/internal/gc/reflect.go	/^	var eqfunc *Sym$/;"	v
eql	./cmd/compile/internal/big/hilbert_test.go	/^func (a *matrix) eql(b *matrix) bool {$/;"	f
eql	./go/constant/value_test.go	/^func eql(x, y Value) bool {$/;"	f
eql	./math/big/hilbert_test.go	/^func (a *matrix) eql(b *matrix) bool {$/;"	f
eqmem	./cmd/compile/internal/gc/subr.go	/^func eqmem(p *Node, q *Node, field *Node, size int64) *Node {$/;"	f
eqmemfunc	./cmd/compile/internal/gc/subr.go	/^func eqmemfunc(size int64, type_ *Type, needsize *int) *Node {$/;"	f
eqnote	./cmd/compile/internal/gc/subr.go	/^func eqnote(a, b *string) bool {$/;"	f
eqret	./runtime/asm_386.s	/^eqret:$/;"	l
eqret	./runtime/asm_amd64.s	/^eqret:$/;"	l
eqret	./runtime/asm_amd64p32.s	/^eqret:$/;"	l
eqslice	./runtime/mprof.go	/^func eqslice(x, y []uintptr) bool {$/;"	f
eqstring	./cmd/compile/internal/gc/builtin/runtime.go	/^func eqstring(string, string) bool$/;"	f
eqstring_generic	./runtime/runtime_test.go	/^func eqstring_generic(s1, s2 string) bool {$/;"	f
eqtype1	./cmd/compile/internal/gc/subr.go	/^func eqtype1(t1 *Type, t2 *Type, assumed_equal *TypePairList) bool {$/;"	f
eqtypenoname	./cmd/compile/internal/gc/subr.go	/^func eqtypenoname(t1 *Type, t2 *Type) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *certificateMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *certificateRequestMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *certificateStatusMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *certificateVerifyMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *clientHelloMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *clientKeyExchangeMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *finishedMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *newSessionTicketMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *nextProtoMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *serverHelloDoneMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *serverHelloMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/handshake_messages.go	/^func (m *serverKeyExchangeMsg) equal(i interface{}) bool {$/;"	f
equal	./crypto/tls/ticket.go	/^func (s *sessionState) equal(i interface{}) bool {$/;"	f
equal	./go/token/serialize_test.go	/^func equal(p, q *FileSet) error {$/;"	f
equal	./index/suffixarray/suffixarray_test.go	/^func equal(x, y *Index) bool {$/;"	f
equal	./os/os_test.go	/^func equal(name1, name2 string) (r bool) {$/;"	f
equal	./runtime/asm_386.s	/^equal:$/;"	l
equal	./runtime/asm_amd64.s	/^equal:$/;"	l
equal	./runtime/asm_amd64p32.s	/^equal:$/;"	l
equal	./runtime/asm_arm.s	/^equal:$/;"	l
equal	./runtime/asm_arm64.s	/^equal:$/;"	l
equal	./runtime/asm_ppc64x.s	/^equal:$/;"	l
equal	./strings/strings_test.go	/^func equal(m string, s1, s2 string, t *testing.T) bool {$/;"	f
equal	./text/template/parse/lex_test.go	/^func equal(i1, i2 []item, checkPos bool) bool {$/;"	f
equalASCIILabel	./net/dnsclient.go	/^func equalASCIILabel(x, y string) bool {$/;"	f
equalFoldRight	./encoding/json/fold.go	/^func equalFoldRight(s, t []byte) bool {$/;"	f
equalIgnoreCase	./strconv/atof.go	/^func equalIgnoreCase(s1, s2 string) bool {$/;"	f
equalPortable	./bytes/bytes.go	/^func equalPortable(a, b []byte) bool {$/;"	f
equalStringSlice	./internal/syscall/windows/registry/registry_test.go	/^func equalStringSlice(a, b []string) bool {$/;"	f
equalTests	./bytes/bytes_test.go	/^var equalTests = []struct {$/;"	v
equalTimeAndZone	./time/time_test.go	/^func equalTimeAndZone(a, b Time) bool {$/;"	f
equality	./cmd/compile/internal/gc/swt.go	/^	\/\/ insert type equality check into each case block$/;"	t
equality	./cmd/link/internal/ld/lib.go	/^	\/\/ autogenerated type equality\/hashing functions) and we don't want to generated$/;"	t
equivEscapers	./html/template/escape.go	/^var equivEscapers = map[string]string{$/;"	v
erf	./math/all_test.go	/^var erf = []float64{$/;"	v
erfSC	./math/all_test.go	/^var erfSC = []float64{$/;"	v
erfc	./math/all_test.go	/^var erfc = []float64{$/;"	v
erfcSC	./math/all_test.go	/^var erfcSC = []float64{$/;"	v
err	./archive/tar/reader.go	/^	var err error$/;"	v
err	./archive/tar/writer.go	/^			var err error$/;"	v
err	./archive/zip/reader_test.go	/^	var err error$/;"	v
err	./archive/zip/register.go	/^	var err error$/;"	v
err	./archive/zip/writer.go	/^	var err error$/;"	v
err	./bufio/bufio.go	/^	var err error$/;"	v
err	./bytes/buffer_test.go	/^		var err error$/;"	v
err	./cmd/compile/internal/big/ratconv.go	/^		var err error$/;"	v
err	./cmd/compile/internal/gc/lex.go	/^				var err error$/;"	v
err	./cmd/compile/internal/gc/lex.go	/^		var err error$/;"	v
err	./cmd/compile/internal/gc/lex.go	/^	var err error$/;"	v
err	./cmd/compile/internal/gc/obj.go	/^	var err error$/;"	v
err	./cmd/cover/cover.go	/^		var err error$/;"	v
err	./cmd/dist/util.go	/^	var err error$/;"	v
err	./cmd/fix/main.go	/^	var err error$/;"	v
err	./cmd/go/generate.go	/^		var err error$/;"	v
err	./cmd/go/generate.go	/^	var err error$/;"	v
err	./cmd/go/go_test.go	/^		var err error$/;"	v
err	./cmd/go/testflag.go	/^			var err error$/;"	v
err	./cmd/internal/obj/util.go	/^	var err error$/;"	v
err	./cmd/link/internal/ld/ldelf.go	/^	var err error$/;"	v
err	./cmd/link/internal/ld/ldmacho.go	/^	var err error$/;"	v
err	./cmd/link/internal/ld/ldpe.go	/^	var err error$/;"	v
err	./cmd/link/internal/ld/lib.go	/^		var err error$/;"	v
err	./cmd/link/internal/ld/lib.go	/^	var err error$/;"	v
err	./cmd/link/internal/ld/pe.go	/^			var err error$/;"	v
err	./cmd/pprof/internal/driver/driver.go	/^	var err error$/;"	v
err	./cmd/pprof/internal/driver/interactive.go	/^	var err error$/;"	v
err	./cmd/pprof/internal/fetch/fetch.go	/^	var err error$/;"	v
err	./cmd/pprof/internal/profile/encode.go	/^	var err error$/;"	v
err	./cmd/pprof/internal/profile/legacy_profile.go	/^		var err error$/;"	v
err	./cmd/pprof/internal/profile/legacy_profile.go	/^	var err error$/;"	v
err	./cmd/pprof/internal/profile/proto.go	/^		var err error$/;"	v
err	./cmd/pprof/internal/profile/prune.go	/^	var err error$/;"	v
err	./cmd/pprof/pprof.go	/^	var err error$/;"	v
err	./cmd/vet/print.go	/^			var err error$/;"	v
err	./cmd/vet/shadow.go	/^		var err error$/;"	v
err	./cmd/vet/testdata/bool.go	/^	var err error$/;"	v
err	./compress/gzip/gunzip.go	/^	var err error$/;"	v
err	./compress/zlib/writer_test.go	/^	var err error$/;"	v
err	./crypto/tls/conn.go	/^			var err error$/;"	v
err	./crypto/tls/generate_cert.go	/^	var err error$/;"	v
err	./crypto/tls/handshake_client_test.go	/^		var err error$/;"	v
err	./crypto/tls/handshake_server.go	/^	var err error$/;"	v
err	./crypto/tls/handshake_server_test.go	/^		var err error$/;"	v
err	./crypto/tls/key_agreement.go	/^	var err error$/;"	v
err	./crypto/tls/tls.go	/^	var err error$/;"	v
err	./crypto/tls/tls_test.go	/^	var err error$/;"	v
err	./crypto/x509/x509.go	/^		var err error$/;"	v
err	./crypto/x509/x509.go	/^	var err error$/;"	v
err	./database/sql/convert.go	/^			var err error$/;"	v
err	./database/sql/convert.go	/^		var err error$/;"	v
err	./database/sql/sql.go	/^	var err error$/;"	v
err	./database/sql/sql_test.go	/^	var err error$/;"	v
err	./debug/elf/file.go	/^	var err error$/;"	v
err	./debug/elf/file_test.go	/^		var err error$/;"	v
err	./debug/elf/symbols_test.go	/^		var err error$/;"	v
err	./debug/gosym/pclntab_test.go	/^	var err error$/;"	v
err	./debug/macho/fat.go	/^	var err error$/;"	v
err	./debug/macho/file.go	/^	var err error$/;"	v
err	./debug/pe/file.go	/^	var err error$/;"	v
err	./debug/plan9obj/file.go	/^	var err error$/;"	v
err	./encoding/gob/codec_test.go	/^	var err error$/;"	v
err	./encoding/gob/dump.go	/^	var err error$/;"	v
err	./encoding/gob/encode.go	/^	var err error$/;"	v
err	./encoding/gob/gobencdec_test.go	/^	var err error$/;"	v
err	./encoding/gob/type.go	/^	var err error$/;"	v
err	./encoding/json/stream.go	/^	var err error$/;"	v
err	./encoding/json/stream_test.go	/^			var err error$/;"	v
err	./encoding/xml/marshal_test.go	/^		var err error$/;"	v
err	./encoding/xml/marshal_test.go	/^	var err error$/;"	v
err	./encoding/xml/read_test.go	/^		var err error$/;"	v
err	./encoding/xml/xml_test.go	/^		var err error$/;"	v
err	./encoding/xml/xml_test.go	/^	var err error$/;"	v
err	./flag/flag_test.go	/^	var err error$/;"	v
err	./fmt/scan.go	/^	var err error$/;"	v
err	./go/internal/gcimporter/gcimporter.go	/^		var err error$/;"	v
err	./go/types/errors.go	/^func (check *Checker) err(pos token.Pos, msg string, soft bool) {$/;"	f
err	./go/types/typexpr.go	/^			var err string$/;"	v
err	./html/template/escape.go	/^	var err error$/;"	v
err	./image/decode_test.go	/^			var err error$/;"	v
err	./internal/syscall/windows/registry/registry_test.go	/^		var err error$/;"	v
err	./io/pipe_test.go	/^	var err error$/;"	v
err	./log/syslog/syslog_test.go	/^		var err error$/;"	v
err	./math/big/ratconv.go	/^		var err error$/;"	v
err	./mime/encodedword.go	/^	var err error$/;"	v
err	./mime/multipart/formdata.go	/^	var err error$/;"	v
err	./mime/multipart/multipart.go	/^	var err error$/;"	v
err	./net/cgo_unix.go	/^	var err error$/;"	v
err	./net/error_test.go	/^		var err error$/;"	v
err	./net/external_test.go	/^	var err error$/;"	v
err	./net/fd_windows.go	/^	var err error$/;"	v
err	./net/http/cgi/host_test.go	/^	var err error$/;"	v
err	./net/http/cookiejar/jar.go	/^	var err error$/;"	v
err	./net/http/fcgi/child.go	/^		var err error$/;"	v
err	./net/http/fs_test.go	/^	var err error$/;"	v
err	./net/http/httputil/dump.go	/^		var err error$/;"	v
err	./net/http/request.go	/^	var err error$/;"	v
err	./net/http/response_test.go	/^			var err error$/;"	v
err	./net/http/server.go	/^		var err error$/;"	v
err	./net/http/transfer.go	/^	var err error$/;"	v
err	./net/http/transport.go	/^		var err error$/;"	v
err	./net/http/transport_test.go	/^			var err error$/;"	v
err	./net/interface_bsd.go	/^					var err error$/;"	v
err	./net/interface_linux.go	/^					var err error$/;"	v
err	./net/interface_linux.go	/^		var err error$/;"	v
err	./net/ipsock_plan9.go	/^	var err error$/;"	v
err	./net/listen_test.go	/^			var err error$/;"	v
err	./net/lookup_windows_test.go	/^	var err bytes.Buffer$/;"	v
err	./net/mockserver_test.go	/^	var err error$/;"	v
err	./net/nss.go	/^				var err error$/;"	v
err	./net/platform_test.go	/^	var err error$/;"	v
err	./net/port.go	/^		var err error$/;"	v
err	./net/rpc/client.go	/^	var err error$/;"	v
err	./net/rpc/server_test.go	/^	var err error$/;"	v
err	./net/sock_posix.go	/^	var err error$/;"	v
err	./net/tcp_test.go	/^		var err error$/;"	v
err	./net/textproto/reader.go	/^	var err error$/;"	v
err	./net/udp_test.go	/^			var err error$/;"	v
err	./net/url/url.go	/^	var err error$/;"	v
err	./os/exec/exec.go	/^	var err error$/;"	v
err	./os/file_plan9.go	/^	var err error$/;"	v
err	./os/file_unix.go	/^	var err error$/;"	v
err	./os/file_windows.go	/^	var err error$/;"	v
err	./os/os_test.go	/^		var err error$/;"	v
err	./os/stat_plan9.go	/^	var err error$/;"	v
err	./os/stat_windows.go	/^	var err error$/;"	v
err	./path/filepath/path_test.go	/^		var err error$/;"	v
err	./regexp/exec_test.go	/^		var err error$/;"	v
err	./runtime/race/testdata/map_test.go	/^	var err error$/;"	v
err	./runtime/race/testdata/mop_test.go	/^		var err error$/;"	v
err	./runtime/race/testdata/mop_test.go	/^	var err error$/;"	v
err	./runtime/softfloat64_test.go	/^func err(t *testing.T, format string, args ...interface{}) {$/;"	f
err	./syscall/exec_plan9.go	/^	var err error$/;"	v
err	./syscall/exec_unix.go	/^	var err error$/;"	v
err	./syscall/exec_windows.go	/^		var err error$/;"	v
err	./syscall/mksyscall_windows.go	/^	var err error$/;"	v
err	./syscall/route_bsd_test.go	/^			var err error$/;"	v
err	./syscall/syscall_linux.go	/^		var err error$/;"	v
err	./testing/cover.go	/^	var err error$/;"	v
err	./text/template/exec_test.go	/^		var err error$/;"	v
err	./text/template/multi_test.go	/^	var err error$/;"	v
err	./text/template/parse/parse.go	/^	var err error$/;"	v
err	./time/format.go	/^		var err error$/;"	v
err	./time/sleep_test.go	/^	var err error$/;"	v
err1	./encoding/asn1/asn1.go	/^		var err1 error$/;"	v
err1	./syscall/exec_unix.go	/^	var err1 Errno$/;"	v
err2	./cmd/internal/objfile/pe.go	/^		var err2 error$/;"	v
err2	./cmd/internal/objfile/plan9obj.go	/^		var err2 error$/;"	v
errBad	./time/format.go	/^var errBad = errors.New("bad value for field") \/\/ placeholder not passed to user$/;"	v
errBadCount	./encoding/gob/decoder.go	/^var errBadCount = errors.New("invalid message length")$/;"	v
errChannel	./crypto/tls/tls.go	/^	var errChannel chan error$/;"	v
errClientKeyExchange	./crypto/tls/key_agreement.go	/^var errClientKeyExchange = errors.New("tls: invalid ClientKeyExchange message")$/;"	v
errCloseConn	./net/http/fcgi/child.go	/^var errCloseConn = errors.New("fcgi: connection should be closed")$/;"	v
errClosed	./compress/lzw/reader.go	/^var errClosed = errors.New("lzw: reader\/writer is closed")$/;"	v
errClosed	./database/sql/fakedb_test.go	/^var errClosed = errors.New("fakedb: statement has been closed")$/;"	v
errClosed	./net/http/httputil/persist.go	/^var errClosed = errors.New("i\/o operation on closed connection")$/;"	v
errClosed	./net/http/transport.go	/^var errClosed error = &httpError{err: "net\/http: transport closed before response was received"}$/;"	v
errDBClosed	./database/sql/sql.go	/^var errDBClosed = errors.New("sql: database is closed")$/;"	v
errFake	./bufio/bufio_test.go	/^var errFake = errors.New("fake error")$/;"	v
errFinished	./os/exec_unix.go	/^var errFinished = errors.New("os: process already finished")$/;"	v
errHTTP	./cmd/go/bootstrap.go	/^var errHTTP = errors.New("no http in bootstrap go command")$/;"	v
errInternal	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var errInternal = errors.New("internal error")$/;"	v
errLeadingInt	./time/format.go	/^var errLeadingInt = errors.New("time: bad [0-9]*") \/\/ never printed$/;"	v
errMalformed	./cmd/pprof/internal/profile/profile.go	/^var errMalformed = fmt.Errorf("malformed profile format")$/;"	v
errMap	./go/types/check_test.go	/^func errMap(t *testing.T, testname string, files []*ast.File) map[string][]string {$/;"	f
errMissingFF00	./image/jpeg/reader.go	/^var errMissingFF00 = FormatError("missing 0xff00 sequence")$/;"	v
errMissingParams	./net/rpc/jsonrpc/server.go	/^var errMissingParams = errors.New("jsonrpc: request body missing params")$/;"	v
errNegativeRead	./bufio/bufio.go	/^var errNegativeRead = errors.New("bufio: reader returned negative count from Read")$/;"	v
errNegativeWrite	./bufio/bufio.go	/^var errNegativeWrite = errors.New("bufio: writer returned negative count from Write")$/;"	v
errNilPtr	./database/sql/convert.go	/^var errNilPtr = errors.New("destination pointer is nil") \/\/ embedded in descriptive error$/;"	v
errNoBody	./net/http/httputil/dump.go	/^var errNoBody = errors.New("sentinel error value")$/;"	v
errNoMatch	./cmd/go/vcs.go	/^var errNoMatch = errors.New("no import match")$/;"	v
errNoSuitableAddress	./net/ipsock.go	/^var errNoSuitableAddress = errors.New("no suitable address found")$/;"	v
errOffset	./io/io.go	/^var errOffset = errors.New("Seek: invalid offset")$/;"	v
errOpen	./crypto/cipher/gcm.go	/^var errOpen = errors.New("cipher: message authentication failed")$/;"	v
errOutOfCodes	./compress/lzw/writer.go	/^var errOutOfCodes = errors.New("lzw: out of codes")$/;"	v
errPhase	./encoding/json/decode.go	/^var errPhase = errors.New("JSON decoder out of sync - data changing underfoot?")$/;"	v
errRawToken	./encoding/xml/xml.go	/^var errRawToken = errors.New("xml: cannot use RawToken from UnmarshalXML method")$/;"	v
errReader	./text/scanner/scanner_test.go	/^type errReader struct{}$/;"	t
errRecover	./text/template/exec.go	/^func errRecover(errp *error) {$/;"	f
errRequestCanceled	./net/http/transport.go	/^var errRequestCanceled = errors.New("net\/http: request canceled")$/;"	v
errRx	./go/parser/error_test.go	/^var errRx = regexp.MustCompile(`^\/\\* *ERROR *(HERE)? *"([^"]*)" *\\*\/$`)$/;"	v
errRx	./go/types/check_test.go	/^var errRx = regexp.MustCompile(`^ *ERROR *(HERE)? *"?([^"]*)"?`)$/;"	v
errSeeker	./net/http/fs.go	/^var errSeeker = errors.New("seeker can't seek")$/;"	v
errServerKeyExchange	./crypto/tls/key_agreement.go	/^var errServerKeyExchange = errors.New("tls: invalid ServerKeyExchange message")$/;"	v
errShortHuffmanData	./image/jpeg/huffman.go	/^var errShortHuffmanData = FormatError("short Huffman data")$/;"	v
errTest	./encoding/hex/hex_test.go	/^type errTest struct {$/;"	t
errTests	./encoding/hex/hex_test.go	/^var errTests = []errTest{$/;"	v
errTimeout	./net/http/transport.go	/^var errTimeout error = &httpError{err: "net\/http: timeout awaiting response headers", timeout: true}$/;"	v
errTooLarge	./net/http/server.go	/^var errTooLarge = errors.New("http: request too large")$/;"	v
errTrailerEOF	./net/http/transfer.go	/^var errTrailerEOF = errors.New("http: unexpected EOF reading trailer")$/;"	v
errUnknownSite	./cmd/go/vcs.go	/^var errUnknownSite = errors.New("dynamic lookup required to find mapping")$/;"	v
errUnrecognized	./cmd/pprof/internal/profile/profile.go	/^var errUnrecognized = fmt.Errorf("unrecognized profile format")$/;"	v
errUnsupportedSubsamplingRatio	./image/jpeg/reader.go	/^var errUnsupportedSubsamplingRatio = UnsupportedError("luma\/chroma subsampling ratio")$/;"	v
errWhence	./io/io.go	/^var errWhence = errors.New("Seek: invalid whence")$/;"	v
errWriteCloser	./compress/lzw/writer.go	/^type errWriteCloser struct {$/;"	t
errWriter	./cmd/go/main.go	/^type errWriter struct {$/;"	t
errWriter	./encoding/xml/xml_test.go	/^type errWriter struct{}$/;"	t
errWriter	./io/io_test.go	/^type errWriter struct {$/;"	t
errWriter	./strings/replace_test.go	/^type errWriter struct{}$/;"	t
errcmp	./cmd/compile/internal/gc/subr.go	/^type errcmp []Error$/;"	t
errf	./database/sql/fakedb_test.go	/^func errf(msg string, args ...interface{}) error {$/;"	f
errf	./runtime/runtime_test.go	/^var errf error$/;"	v
errfn	./runtime/runtime_test.go	/^func errfn() error {$/;"	f
errfn1	./runtime/runtime_test.go	/^func errfn1() error {$/;"	f
errlist	./go/types/check_test.go	/^	var errlist []error$/;"	v
errnan	./cmd/compile/internal/big/float_test.go	/^				var errnan bool \/\/ set if execution of f panicked with ErrNaN$/;"	v
errnan	./math/big/float_test.go	/^				var errnan bool \/\/ set if execution of f panicked with ErrNaN$/;"	v
errno	./os/dir_unix.go	/^			var errno error$/;"	v
errno	./runtime/netpoll.go	/^	var errno int32$/;"	v
errno	./runtime/netpoll_solaris.go	/^func errno() int32 {$/;"	f
errno	./runtime/netpoll_windows.go	/^	var errno int32$/;"	v
errnoErr	./syscall/syscall_unix.go	/^func errnoErr(e Errno) error {$/;"	f
errnoErr	./syscall/tables_nacl.go	/^func errnoErr(e Errno) error {$/;"	f
error	./builtin/builtin.go	/^type error interface {$/;"	t
error	./cmd/compile/internal/gc/gen.go	/^	\/\/ probably a type error already.$/;"	t
error	./cmd/internal/goobj/read.go	/^func (r *objReader) error(err error) error {$/;"	f
error	./cmd/vet/testdata/print.go	/^func (errorTest5) error() { \/\/ niladic; don't complain if no args (was bug)$/;"	f
error	./crypto/tls/conn.go	/^func (hc *halfConn) error() error {$/;"	f
error	./debug/dwarf/buf.go	/^func (b *buf) error(s string) {$/;"	f
error	./encoding/csv/reader.go	/^func (r *Reader) error(err error) error {$/;"	f
error	./encoding/gob/codec_test.go	/^		t.Error("expected recursive type error; got", err)$/;"	t
error	./encoding/gob/encoder_test.go	/^		t.Error("for non-struct\/struct expected type error; got", err)$/;"	t
error	./encoding/gob/encoder_test.go	/^		t.Error("for struct\/non-struct expected type error; got", err)$/;"	t
error	./encoding/gob/gobencdec_test.go	/^		t.Fatal("expected type error; got", err)$/;"	t
error	./encoding/json/decode.go	/^func (d *decodeState) error(err error) {$/;"	f
error	./encoding/json/decode_test.go	/^			t.Errorf("expected type error for Unmarshal(%q, type %T): got %T",$/;"	t
error	./encoding/json/encode.go	/^func (e *encodeState) error(err error) {$/;"	f
error	./encoding/json/scanner.go	/^func (s *scanner) error(c int, context string) int {$/;"	f
error	./fmt/scan.go	/^func (s *ss) error(err error) {$/;"	f
error	./go/ast/resolve.go	/^func (p *pkgBuilder) error(pos token.Pos, msg string) {$/;"	f
error	./go/doc/testdata/error2.go	/^type error interface {$/;"	t
error	./go/internal/gccgoimporter/parser.go	/^func (p *parser) error(err interface{}) {$/;"	f
error	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) error(err interface{}) {$/;"	f
error	./go/parser/parser.go	/^func (p *parser) error(pos token.Pos, msg string) {$/;"	f
error	./go/printer/testdata/parser.go	/^func (p *parser) error(pos token.Pos, msg string) {$/;"	f
error	./go/scanner/scanner.go	/^func (s *Scanner) error(offs int, msg string) {$/;"	f
error	./go/types/errors.go	/^func (check *Checker) error(pos token.Pos, msg string) {$/;"	f
error	./html/template/template.go	/^\/\/ return values of which the second has type error. In that case, if the$/;"	t
error	./net/rpc/server.go	/^		- the method has return type error.$/;"	t
error	./net/rpc/server.go	/^\/\/	- one return value, of type error$/;"	t
error	./os/file.go	/^\/\/ Go-like; failing calls return values of type error rather than error numbers.$/;"	t
error	./regexp/testdata/testregex.c	/^error(regex_t* preg, int code)$/;"	f	file:
error	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) error() uint32   { return 0 }$/;"	f
error	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) error() uint32   { return 0 }$/;"	f
error	./runtime/signal_linux_arm.go	/^func (c *sigctxt) error() uint32     { return c.regs().error_code }$/;"	f
error	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) error() uint32   { return ^uint32(0) }$/;"	f
error	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) error() uint32    { return 0 }$/;"	f
error	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) error() uint32   { return 0 }$/;"	f
error	./syscall/asm_freebsd_arm.s	/^error:$/;"	l
error	./syscall/asm_netbsd_arm.s	/^error:$/;"	l
error	./syscall/asm_openbsd_arm.s	/^error:$/;"	l
error	./text/scanner/scanner.go	/^func (s *Scanner) error(msg string) {$/;"	f
error	./text/template/doc.go	/^		is of type error. If the arguments don't match the function$/;"	t
error	./text/template/doc.go	/^which has type error. If that second value is present and evaluates to$/;"	t
error	./text/template/funcs.go	/^\/\/ which the second has type error. In that case, if the second (error)$/;"	t
error	./text/template/parse/parse.go	/^func (t *Tree) error(err error) {$/;"	f
error6	./syscall/asm_freebsd_arm.s	/^error6:$/;"	l
error6	./syscall/asm_netbsd_arm.s	/^error6:$/;"	l
error6	./syscall/asm_openbsd_arm.s	/^error6:$/;"	l
error9	./syscall/asm_freebsd_arm.s	/^error9:$/;"	l
error9	./syscall/asm_netbsd_arm.s	/^error9:$/;"	l
error9	./syscall/asm_openbsd_arm.s	/^error9:$/;"	l
errorBody	./net/http/server.go	/^func (h *timeoutHandler) errorBody() string {$/;"	f
errorCollector	./go/scanner/scanner_test.go	/^type errorCollector struct {$/;"	t
errorExpected	./go/parser/parser.go	/^func (p *parser) errorExpected(pos token.Pos, msg string) {$/;"	f
errorExpected	./go/printer/testdata/parser.go	/^func (p *parser) errorExpected(pos token.Pos, msg string) {$/;"	f
errorHandler	./fmt/scan.go	/^func errorHandler(errp *error) {$/;"	f
errorListener	./net/http/serve_test.go	/^type errorListener struct {$/;"	t
errorReader	./net/http/transfer.go	/^type errorReader struct {$/;"	t
errorReader	./net/http/transport_test.go	/^type errorReader struct {$/;"	t
errorReaderFromTest	./bufio/bufio_test.go	/^type errorReaderFromTest struct {$/;"	t
errorReaderFromTests	./bufio/bufio_test.go	/^var errorReaderFromTests = []errorReaderFromTest{$/;"	v
errorRune	./bufio/scan.go	/^var errorRune = []byte(string(utf8.RuneError))$/;"	v
errorString	./errors/errors.go	/^type errorString struct {$/;"	t
errorString	./fmt/scan.go	/^func (s *ss) errorString(err string) {$/;"	f
errorString	./runtime/error.go	/^type errorString string$/;"	t
errorStringer	./go/types/resolver_test.go	/^		type errorStringer struct { fmt.Stringer; error }$/;"	t
errorTest1	./cmd/vet/testdata/print.go	/^type errorTest1 int$/;"	t
errorTest2	./cmd/vet/testdata/print.go	/^type errorTest2 int \/\/ Analogous to testing's *T type.$/;"	t
errorTest3	./cmd/vet/testdata/print.go	/^type errorTest3 int$/;"	t
errorTest4	./cmd/vet/testdata/print.go	/^type errorTest4 int$/;"	t
errorTest5	./cmd/vet/testdata/print.go	/^type errorTest5 int$/;"	t
errorTests	./text/template/parse/parse_test.go	/^var errorTests = []parseTest{$/;"	v
errorThenGoodReader	./bufio/bufio_test.go	/^type errorThenGoodReader struct {$/;"	t
errorWriter	./encoding/csv/writer_test.go	/^type errorWriter struct{}$/;"	t
errorWriterTest	./bufio/bufio_test.go	/^type errorWriterTest struct {$/;"	t
errorWriterTests	./bufio/bufio_test.go	/^var errorWriterTests = []errorWriterTest{$/;"	v
errorWriterToTest	./bufio/bufio_test.go	/^type errorWriterToTest struct {$/;"	t
errorWriterToTests	./bufio/bufio_test.go	/^var errorWriterToTests = []errorWriterToTest{$/;"	v
error_	./cmd/cgo/util.go	/^func error_(pos token.Pos, msg string, args ...interface{}) {$/;"	f
error_	./encoding/gob/error.go	/^func error_(err error) {$/;"	f
errorer	./html/template/content_test.go	/^type errorer struct {$/;"	t
errorexit	./cmd/compile/internal/gc/subr.go	/^func errorexit() {$/;"	f
errorexit	./cmd/link/internal/ld/lib.go	/^func errorexit() {$/;"	f
errorf	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) errorf(format string, args ...interface{}) {$/;"	f
errorf	./cmd/go/generate.go	/^func (g *Generator) errorf(format string, args ...interface{}) {$/;"	f
errorf	./cmd/go/main.go	/^func errorf(format string, args ...interface{}) {$/;"	f
errorf	./cmd/nm/nm.go	/^func errorf(format string, args ...interface{}) {$/;"	f
errorf	./cmd/vet/main.go	/^func errorf(format string, args ...interface{}) {$/;"	f
errorf	./cmd/yacc/yacc.go	/^func errorf(s string, v ...interface{}) {$/;"	f
errorf	./encoding/gob/error.go	/^func errorf(format string, args ...interface{}) {$/;"	f
errorf	./go/ast/resolve.go	/^func (p *pkgBuilder) errorf(pos token.Pos, format string, args ...interface{}) {$/;"	f
errorf	./go/internal/gccgoimporter/parser.go	/^func (p *parser) errorf(format string, args ...interface{}) {$/;"	f
errorf	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) errorf(format string, args ...interface{}) {$/;"	f
errorf	./go/types/errors.go	/^func (check *Checker) errorf(pos token.Pos, format string, args ...interface{}) {$/;"	f
errorf	./html/template/error.go	/^func errorf(k ErrorCode, node parse.Node, line int, f string, args ...interface{}) *Error {$/;"	f
errorf	./text/template/exec.go	/^func (s *state) errorf(format string, args ...interface{}) {$/;"	f
errorf	./text/template/parse/lex.go	/^func (l *lexer) errorf(format string, args ...interface{}) stateFn {$/;"	f
errorf	./text/template/parse/parse.go	/^func (t *Tree) errorf(format string, args ...interface{}) {$/;"	f
errorr	./syscall/asm_freebsd_arm.s	/^errorr:$/;"	l
errorr	./syscall/asm_netbsd_arm.s	/^errorr:$/;"	l
errorr	./syscall/asm_openbsd_arm.s	/^errorr:$/;"	l
errorr6	./syscall/asm_freebsd_arm.s	/^errorr6:$/;"	l
errorr6	./syscall/asm_netbsd_arm.s	/^errorr6:$/;"	l
errorr6	./syscall/asm_openbsd_arm.s	/^errorr6:$/;"	l
errors	./cmd/compile/internal/gc/lex.go	/^				l.N.Nbody = nil \/\/ type errors; do not compile$/;"	t
errors	./cmd/compile/internal/gc/subr.go	/^var errors []Error$/;"	v
errors	./cmd/yacc/yacc.go	/^var errors []Error$/;"	v
errors	./go/scanner/scanner_test.go	/^var errors = []struct {$/;"	v
errors	./go/types/api.go	/^\/\/ If the package has type errors, the collected information may$/;"	t
errors	./regexp/testdata/testregex.c	/^	int		errors;$/;"	m	struct:__anon2	file:
errors	./syscall/zerrors_darwin_386.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_darwin_amd64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_darwin_arm.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_darwin_arm64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_dragonfly_amd64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_freebsd_386.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_freebsd_amd64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_freebsd_arm.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_linux_386.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_linux_amd64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_linux_arm.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_linux_arm64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_linux_ppc64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_linux_ppc64le.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_netbsd_386.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_netbsd_amd64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_netbsd_arm.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_openbsd_386.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_openbsd_amd64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_openbsd_arm.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_solaris_amd64.go	/^var errors = [...]string{$/;"	v
errors	./syscall/zerrors_windows.go	/^var errors = [...]string{$/;"	v
errorstr	./syscall/tables_nacl.go	/^var errorstr = [...]string{$/;"	v
errortype	./cmd/compile/internal/gc/go.go	/^var errortype *Type$/;"	v
errp	./path/filepath/match_test.go	/^func errp(e error) string {$/;"	f
errprintf	./cmd/dist/util.go	/^func errprintf(format string, args ...interface{}) {$/;"	f
errs	./net/http/transport_test.go	/^	var errs []error$/;"	v
errstr	./runtime/os_plan9.go	/^func errstr() string$/;"	f
errstr	./syscall/syscall_plan9.go	/^func errstr() string {$/;"	f
es	./cmd/compile/internal/gc/esc.go	/^	var es EscState$/;"	v
esc	./cmd/compile/internal/gc/esc.go	/^func esc(e *EscState, n *Node, up *Node) {$/;"	f
esc	./encoding/xml/xml.go	/^	var esc []byte$/;"	v
escAnalyze	./cmd/compile/internal/gc/esc.go	/^func escAnalyze(all *NodeList, recursive bool) {$/;"	f
escFnsEq	./html/template/escape.go	/^func escFnsEq(a, b string) bool {$/;"	f
escMax	./cmd/compile/internal/gc/esc.go	/^func escMax(e, etype uint16) uint16 {$/;"	f
escNoteOutputParamFlow	./cmd/compile/internal/gc/esc.go	/^func escNoteOutputParamFlow(e uint16, vargen int32, level Level) uint16 {$/;"	f
escape	./html/template/escape.go	/^func (e *escaper) escape(c context, n parse.Node) context {$/;"	f
escape	./html/template/template.go	/^func (t *Template) escape() error {$/;"	f
escape	./net/url/url.go	/^func escape(s string, mode encoding) string {$/;"	f
escape	./regexp/syntax/regexp.go	/^func escape(b *bytes.Buffer, r rune, force bool) {$/;"	f
escape	./regexp/testdata/testregex.c	/^escape(char* s)$/;"	f	file:
escape	./runtime/gcinfo_test.go	/^func escape(p interface{}) interface{} {$/;"	f
escapeAction	./html/template/escape.go	/^func (e *escaper) escapeAction(c context, n *parse.ActionNode) context {$/;"	f
escapeBranch	./html/template/escape.go	/^func (e *escaper) escapeBranch(c context, n *parse.BranchNode, nodeName string) context {$/;"	f
escapeList	./html/template/escape.go	/^func (e *escaper) escapeList(c context, n *parse.ListNode) context {$/;"	f
escapeListConditionally	./html/template/escape.go	/^func (e *escaper) escapeListConditionally(c context, n *parse.ListNode, filter func(*escaper, context) bool) (context, bool) {$/;"	f
escapeOK	./html/template/template.go	/^var escapeOK = fmt.Errorf("template escaped correctly")$/;"	v
escapeQuotes	./mime/multipart/writer.go	/^func escapeQuotes(s string) string {$/;"	f
escapeString	./mime/multipart/multipart_test.go	/^func escapeString(v string) string {$/;"	f
escapeTemplate	./html/template/escape.go	/^func (e *escaper) escapeTemplate(c context, n *parse.TemplateNode) context {$/;"	f
escapeTemplate	./html/template/escape.go	/^func escapeTemplate(tmpl *Template, node parse.Node, name string) error {$/;"	f
escapeTemplateBody	./html/template/escape.go	/^func (e *escaper) escapeTemplateBody(c context, t *template.Template) (context, bool) {$/;"	f
escapeTests	./net/url/url_test.go	/^var escapeTests = []EscapeTest{$/;"	v
escapeText	./encoding/xml/xml.go	/^func escapeText(w io.Writer, s []byte, escapeNewline bool) error {$/;"	f
escapeText	./html/template/escape.go	/^func (e *escaper) escapeText(c context, n *parse.TextNode) context {$/;"	f
escapeTree	./html/template/escape.go	/^func (e *escaper) escapeTree(c context, node parse.Node, name string, line int) (context, string) {$/;"	f
escaper	./html/template/escape.go	/^type escaper struct {$/;"	t
escapes	./cmd/compile/internal/gc/esc.go	/^func escapes(all *NodeList) {$/;"	f
escapes	./reflect/value.go	/^func escapes(x interface{}) {$/;"	f
escassign	./cmd/compile/internal/gc/esc.go	/^func escassign(e *EscState, dst *Node, src *Node) {$/;"	f
escassignDereference	./cmd/compile/internal/gc/esc.go	/^func escassignDereference(e *EscState, dst *Node, src *Node) {$/;"	f
escassignfromtag	./cmd/compile/internal/gc/esc.go	/^func escassignfromtag(e *EscState, note *string, dsts *NodeList, src *Node) uint16 {$/;"	f
esccall	./cmd/compile/internal/gc/esc.go	/^func esccall(e *EscState, n *Node, up *Node) {$/;"	f
escchar	./cmd/compile/internal/gc/lex.go	/^func escchar(e int, escflg *int, val *int64) bool {$/;"	f
escflag	./cmd/compile/internal/gc/lex.go	/^	var escflag int$/;"	v
escflood	./cmd/compile/internal/gc/esc.go	/^func escflood(e *EscState, dst *Node) {$/;"	f
escflows	./cmd/compile/internal/gc/esc.go	/^func escflows(e *EscState, dst *Node, src *Node) {$/;"	f
escfunc	./cmd/compile/internal/gc/esc.go	/^func escfunc(e *EscState, func_ *Node) {$/;"	f
esclist	./cmd/compile/internal/gc/esc.go	/^func esclist(e *EscState, l *NodeList, up *Node) {$/;"	f
escloopdepth	./cmd/compile/internal/gc/esc.go	/^func escloopdepth(e *EscState, n *Node) {$/;"	f
escloopdepthlist	./cmd/compile/internal/gc/esc.go	/^func escloopdepthlist(e *EscState, l *NodeList) {$/;"	f
esctag	./cmd/compile/internal/gc/esc.go	/^func esctag(e *EscState, func_ *Node) {$/;"	f
escwalk	./cmd/compile/internal/gc/esc.go	/^func escwalk(e *EscState, level Level, dst *Node, src *Node) {$/;"	f
esi	./runtime/signal_darwin_386.go	/^func (c *sigctxt) esi() uint32     { return c.regs().esi }$/;"	f
esi	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) esi() uint32     { return c.regs().mc_esi }$/;"	f
esi	./runtime/signal_linux_386.go	/^func (c *sigctxt) esi() uint32       { return c.regs().esi }$/;"	f
esi	./runtime/signal_nacl_386.go	/^func (c *sigctxt) esi() uint32       { return c.regs().esi }$/;"	f
esi	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) esi() uint32      { return c.regs().__gregs[_REG_ESI] }$/;"	f
esi	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) esi() uint32     { return c.regs().sc_esi }$/;"	f
esp	./runtime/signal_darwin_386.go	/^func (c *sigctxt) esp() uint32     { return c.regs().esp }$/;"	f
esp	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) esp() uint32     { return c.regs().mc_esp }$/;"	f
esp	./runtime/signal_linux_386.go	/^func (c *sigctxt) esp() uint32       { return c.regs().esp }$/;"	f
esp	./runtime/signal_nacl_386.go	/^func (c *sigctxt) esp() uint32       { return c.regs().esp }$/;"	f
esp	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) esp() uint32      { return c.regs().__gregs[_REG_UESP] }$/;"	f
esp	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) esp() uint32     { return c.regs().sc_esp }$/;"	f
establishKeys	./crypto/tls/handshake_client.go	/^func (hs *clientHandshakeState) establishKeys() error {$/;"	f
establishKeys	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) establishKeys() error {$/;"	f
et	./cmd/compile/internal/gc/const.go	/^	var et int$/;"	v
et	./cmd/compile/internal/gc/const.go	/^ * convert x to type et and back to int64$/;"	t
et	./cmd/compile/internal/gc/walk.go	/^	var et int$/;"	v
et1	./cmd/vet/testdata/print.go	/^	var et1 errorTest1$/;"	v
et2	./cmd/vet/testdata/print.go	/^	var et2 errorTest2$/;"	v
et3	./cmd/vet/testdata/print.go	/^	var et3 errorTest3$/;"	v
et4	./cmd/vet/testdata/print.go	/^	var et4 errorTest4$/;"	v
et5	./cmd/vet/testdata/print.go	/^	var et5 errorTest5$/;"	v
etext	./cmd/internal/obj/objfile.go	/^	var etext *LSym$/;"	v
etnames	./cmd/compile/internal/gc/fmt.go	/^var etnames = []string{$/;"	v
etype	./cmd/compile/internal/gc/align.go	/^	var etype int$/;"	v
etype	./cmd/compile/internal/gc/lex.go	/^	var etype int$/;"	v
ev	./runtime/netpoll_epoll.go	/^	var ev epollevent$/;"	v
ev	./runtime/netpoll_kqueue.go	/^	var ev [2]keventt$/;"	v
evGC	./internal/trace/parser.go	/^	var evGC *Event$/;"	v
evacuate	./runtime/hashmap.go	/^func evacuate(t *maptype, h *hmap, oldbucket uintptr) {$/;"	f
evacuated	./runtime/hashmap.go	/^func evacuated(b *bmap) bool {$/;"	f
evalArg	./text/template/exec.go	/^func (s *state) evalArg(dot reflect.Value, typ reflect.Type, n parse.Node) reflect.Value {$/;"	f
evalArgs	./text/template/funcs.go	/^func evalArgs(args []interface{}) string {$/;"	f
evalBool	./text/template/exec.go	/^func (s *state) evalBool(typ reflect.Type, n parse.Node) reflect.Value {$/;"	f
evalCall	./text/template/exec.go	/^func (s *state) evalCall(dot, fun reflect.Value, node parse.Node, name string, args []parse.Node, final reflect.Value) reflect.Value {$/;"	f
evalChainNode	./text/template/exec.go	/^func (s *state) evalChainNode(dot reflect.Value, chain *parse.ChainNode, args []parse.Node, final reflect.Value) reflect.Value {$/;"	f
evalCommand	./text/template/exec.go	/^func (s *state) evalCommand(dot reflect.Value, cmd *parse.CommandNode, final reflect.Value) reflect.Value {$/;"	f
evalComplex	./text/template/exec.go	/^func (s *state) evalComplex(typ reflect.Type, n parse.Node) reflect.Value {$/;"	f
evalEmptyInterface	./text/template/exec.go	/^func (s *state) evalEmptyInterface(dot reflect.Value, n parse.Node) reflect.Value {$/;"	f
evalField	./text/template/exec.go	/^func (s *state) evalField(dot reflect.Value, fieldName string, node parse.Node, args []parse.Node, final, receiver reflect.Value) reflect.Value {$/;"	f
evalFieldChain	./text/template/exec.go	/^func (s *state) evalFieldChain(dot, receiver reflect.Value, node parse.Node, ident []string, args []parse.Node, final reflect.Value) reflect.Value {$/;"	f
evalFieldNode	./text/template/exec.go	/^func (s *state) evalFieldNode(dot reflect.Value, field *parse.FieldNode, args []parse.Node, final reflect.Value) reflect.Value {$/;"	f
evalFloat	./text/template/exec.go	/^func (s *state) evalFloat(typ reflect.Type, n parse.Node) reflect.Value {$/;"	f
evalFunction	./text/template/exec.go	/^func (s *state) evalFunction(dot reflect.Value, node *parse.IdentifierNode, cmd parse.Node, args []parse.Node, final reflect.Value) reflect.Value {$/;"	f
evalInteger	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) evalInteger(pseudo string, operands []lex.Token) int64 {$/;"	f
evalInteger	./text/template/exec.go	/^func (s *state) evalInteger(typ reflect.Type, n parse.Node) reflect.Value {$/;"	f
evalPipeline	./text/template/exec.go	/^func (s *state) evalPipeline(dot reflect.Value, pipe *parse.PipeNode) (value reflect.Value) {$/;"	f
evalString	./text/template/exec.go	/^func (s *state) evalString(typ reflect.Type, n parse.Node) reflect.Value {$/;"	f
evalSymlinks	./path/filepath/symlink_unix.go	/^func evalSymlinks(path string) (string, error) {$/;"	f
evalSymlinks	./path/filepath/symlink_windows.go	/^func evalSymlinks(path string) (string, error) {$/;"	f
evalUnsignedInteger	./text/template/exec.go	/^func (s *state) evalUnsignedInteger(typ reflect.Type, n parse.Node) reflect.Value {$/;"	f
evalVariableNode	./text/template/exec.go	/^func (s *state) evalVariableNode(dot reflect.Value, variable *parse.VariableNode, args []parse.Node, final reflect.Value) reflect.Value {$/;"	f
evconst	./cmd/compile/internal/gc/const.go	/^func evconst(n *Node) {$/;"	f
even	./go/ast/filter.go	/^			\/\/ filter type even if name is not filtered$/;"	t
eventDesc	./runtime/trace/trace_stack_test.go	/^	type eventDesc struct {$/;"	t
eventList	./internal/trace/parser.go	/^type eventList []*Event$/;"	t
events	./internal/trace/parser.go	/^	var events []rawEvent$/;"	v
events	./runtime/netpoll_epoll.go	/^	var events [128]epollevent$/;"	v
events	./runtime/netpoll_kqueue.go	/^	var events [64]keventt$/;"	v
events	./runtime/netpoll_solaris.go	/^	var events [128]portevent$/;"	v
everySequence	./mime/quotedprintable/reader_test.go	/^func everySequence(base, alpha string, length int, fn func(string)) {$/;"	f
evict	./runtime/cpuprof.go	/^func (p *cpuProfile) evict(e *cpuprofEntry) bool {$/;"	f
ex	./cmd/compile/internal/x86/cgen64.go	/^		var ex gc.Node$/;"	v
ex1	./encoding/json/scanner_test.go	/^var ex1 = `[true,false,null,"x",1,1.5,0,-5e+2]`$/;"	v
ex1i	./encoding/json/scanner_test.go	/^var ex1i = `[$/;"	v
exactSig	./net/http/sniff.go	/^type exactSig struct {$/;"	t
exactly	./cmd/gofmt/simplify.go	/^				\/\/ matches the outer literal's element type exactly, the inner$/;"	t
exactly16Bytes	./cmd/pack/pack.go	/^func exactly16Bytes(s string) string {$/;"	f
example	./encoding/json/scanner_test.go	/^type example struct {$/;"	t
exampleByName	./go/doc/example.go	/^type exampleByName []*Example$/;"	t
exampleOutput	./go/doc/example.go	/^func exampleOutput(b *ast.BlockStmt, comments []*ast.CommentGroup) (output string, ok bool) {$/;"	f
exampleTestCases	./go/doc/example_test.go	/^var exampleTestCases = []struct {$/;"	v
examples	./cmd/go/test.go	/^var examples = []testing.InternalExample{$/;"	v
examples	./encoding/json/scanner_test.go	/^var examples = []example{$/;"	v
exccontext	./runtime/defs_nacl_386.go	/^type exccontext struct {$/;"	t
exccontext	./runtime/defs_nacl_amd64p32.go	/^type exccontext struct {$/;"	t
exccontext	./runtime/defs_nacl_arm.go	/^type exccontext struct {$/;"	t
exceeds	./cmd/link/internal/ld/data.go	/^\/\/ the list of symbols s; the list stops when s->type exceeds type.$/;"	t
exceptionhandler	./runtime/signal_windows.go	/^func exceptionhandler(info *exceptionrecord, r *context, gp *g) int32 {$/;"	f
exceptionrecord	./runtime/defs_windows_386.go	/^type exceptionrecord struct {$/;"	t
exceptionrecord	./runtime/defs_windows_amd64.go	/^type exceptionrecord struct {$/;"	t
exceptionstate32	./runtime/defs_darwin_386.go	/^type exceptionstate32 struct {$/;"	t
exceptionstate32	./runtime/defs_darwin_amd64.go	/^type exceptionstate32 struct {$/;"	t
exceptionstate32	./runtime/defs_darwin_arm.go	/^type exceptionstate32 struct {$/;"	t
exceptionstate64	./runtime/defs_darwin_386.go	/^type exceptionstate64 struct {$/;"	t
exceptionstate64	./runtime/defs_darwin_amd64.go	/^type exceptionstate64 struct {$/;"	t
exceptionstate64	./runtime/defs_darwin_arm64.go	/^type exceptionstate64 struct {$/;"	t
exceptiontramp	./runtime/signal_windows.go	/^func exceptiontramp()$/;"	f
exchange	./net/dnsclient_unix.go	/^func exchange(server, name string, qtype uint16, timeout time.Duration) (*dnsMsg, error) {$/;"	f
excise	./cmd/compile/internal/amd64/peep.go	/^func excise(r *gc.Flow) {$/;"	f
excise	./cmd/compile/internal/arm/peep.go	/^func excise(r *gc.Flow) {$/;"	f
excise	./cmd/compile/internal/arm64/peep.go	/^func excise(r *gc.Flow) {$/;"	f
excise	./cmd/compile/internal/ppc64/peep.go	/^func excise(r *gc.Flow) {$/;"	f
excise	./cmd/compile/internal/x86/peep.go	/^func excise(r *gc.Flow) {$/;"	f
excludeHeader	./net/http/server.go	/^	var excludeHeader map[string]bool$/;"	v
excluded	./go/types/stdlib_test.go	/^var excluded = map[string]bool{$/;"	v
excludedregs	./cmd/compile/internal/amd64/reg.go	/^func excludedregs() uint64 {$/;"	f
excludedregs	./cmd/compile/internal/arm/reg.go	/^func excludedregs() uint64 {$/;"	f
excludedregs	./cmd/compile/internal/arm64/reg.go	/^func excludedregs() uint64 {$/;"	f
excludedregs	./cmd/compile/internal/ppc64/reg.go	/^func excludedregs() uint64 {$/;"	f
excludedregs	./cmd/compile/internal/x86/reg.go	/^func excludedregs() uint64 {$/;"	f
excportablecontext	./runtime/defs_nacl_386.go	/^type excportablecontext struct {$/;"	t
excportablecontext	./runtime/defs_nacl_amd64p32.go	/^type excportablecontext struct {$/;"	t
excportablecontext	./runtime/defs_nacl_arm.go	/^type excportablecontext struct {$/;"	t
excregs386	./runtime/defs_nacl_386.go	/^type excregs386 struct {$/;"	t
excregs386	./runtime/defs_nacl_amd64p32.go	/^type excregs386 struct {$/;"	t
excregsamd64	./runtime/defs_nacl_amd64p32.go	/^type excregsamd64 struct {$/;"	t
excregsarm	./runtime/defs_nacl_arm.go	/^type excregsarm struct {$/;"	t
exec	./cmd/go/generate.go	/^func (g *Generator) exec(words []string) {$/;"	f
exec	./database/sql/sql.go	/^func (db *DB) exec(query string, args []interface{}, strategy connReuseStrategy) (res Result, err error) {$/;"	f
exec	./database/sql/sql_test.go	/^func exec(t testing.TB, db *DB, query string, args ...interface{}) {$/;"	f
exec	./os/os_test.go	/^func exec(t *testing.T, dir, cmd string, args []string, expect string) {$/;"	f
execCmd	./cmd/go/run.go	/^var execCmd []string \/\/ -exec flag, for run and test$/;"	v
execDec	./encoding/gob/codec_test.go	/^func execDec(typ string, instr *decInstr, state *decoderState, t *testing.T, value reflect.Value) {$/;"	f
execInsert	./database/sql/fakedb_test.go	/^func (s *fakeStmt) execInsert(args []driver.Value, doInsert bool) (driver.Result, error) {$/;"	f
execSecurityRoots	./crypto/x509/root_darwin.go	/^func execSecurityRoots() (*CertPool, error) {$/;"	f
execTest	./database/sql/sql_test.go	/^	type execTest struct {$/;"	t
execTest	./text/template/exec_test.go	/^type execTest struct {$/;"	t
execTests	./text/template/exec_test.go	/^var execTests = []execTest{$/;"	v
execf	./regexp/testdata/testregex.c	/^execf(const regex_t* re, void* data, const char* xstr, size_t xlen, const char* sstr, size_t slen, char** snxt, regdisc_t* disc)$/;"	f	file:
execute	./runtime/proc1.go	/^func execute(gp *g, inheritTime bool) {$/;"	f
executeTest	./runtime/crash_test.go	/^func executeTest(t *testing.T, templ string, data interface{}, extra ...string) string {$/;"	f
execve	./syscall/exec_solaris.go	/^func execve(path uintptr, argv uintptr, envp uintptr) (err Errno)$/;"	f
exhaustive	./reflect/all_test.go	/^type exhaustive struct {$/;"	t
existingArchive	./cmd/pack/pack.go	/^func existingArchive(name string) bool {$/;"	f
exists	./reflect/type.go	/^\/\/ The returned type exists only for GC, so we only fill out GC relevant info.$/;"	t
exit	./cmd/go/main.go	/^func exit() {$/;"	f
exit	./cmd/yacc/yacc.go	/^func exit(status int) {$/;"	f
exit	./runtime/os1_plan9.go	/^func exit(e int) {$/;"	f
exit	./runtime/os1_windows.go	/^func exit(code int32) {$/;"	f
exit	./runtime/os3_solaris.go	/^func exit(r int32) {$/;"	f
exit	./runtime/os_nacl.go	/^func exit(code int32)$/;"	f
exit	./runtime/rt0_darwin_arm64.s	/^exit:$/;"	l
exit	./runtime/rt0_linux_arm64.s	/^exit:$/;"	l
exit	./runtime/stubs2.go	/^func exit(code int32)$/;"	f
exit	./runtime/sys_solaris_amd64.s	/^exit:$/;"	l
exit	./syscall/exec_solaris.go	/^func exit(code uintptr)$/;"	f
exit	./syscall/syscall_plan9.go	/^func exit(code int)$/;"	f
exit1	./runtime/stubs.go	/^func exit1(code int32)$/;"	f
exitCode	./cmd/nm/nm.go	/^var exitCode = 0$/;"	v
exitCode	./cmd/vet/main.go	/^var exitCode = 0$/;"	v
exitIfErrors	./cmd/go/main.go	/^func exitIfErrors() {$/;"	f
exitMu	./cmd/go/main.go	/^var exitMu sync.Mutex$/;"	v
exitStatus	./cmd/go/main.go	/^var exitStatus = 0$/;"	v
exitThread	./syscall/zsyscall_linux_386.go	/^func exitThread(code int) (err error) {$/;"	f
exitThread	./syscall/zsyscall_linux_amd64.go	/^func exitThread(code int) (err error) {$/;"	f
exitThread	./syscall/zsyscall_linux_arm.go	/^func exitThread(code int) (err error) {$/;"	f
exitThread	./syscall/zsyscall_linux_arm64.go	/^func exitThread(code int) (err error) {$/;"	f
exitThread	./syscall/zsyscall_linux_ppc64.go	/^func exitThread(code int) (err error) {$/;"	f
exitThread	./syscall/zsyscall_linux_ppc64le.go	/^func exitThread(code int) (err error) {$/;"	f
exited	./os/exec_plan9.go	/^func (p *ProcessState) exited() bool {$/;"	f
exited	./os/exec_posix.go	/^func (p *ProcessState) exited() bool {$/;"	f
exits	./runtime/os_plan9.go	/^func exits(msg *byte)$/;"	f
exitsyscall	./runtime/proc1.go	/^func exitsyscall(dummy int32) {$/;"	f
exitsyscall0	./runtime/proc1.go	/^func exitsyscall0(gp *g) {$/;"	f
exitsyscallfast	./runtime/proc1.go	/^func exitsyscallfast() bool {$/;"	f
exitsyscallfast_pidle	./runtime/proc1.go	/^func exitsyscallfast_pidle() bool {$/;"	f
exp	./cmd/compile/internal/big/floatconv.go	/^	var exp int64$/;"	v
exp	./cmd/compile/internal/big/ftoa.go	/^	var exp int64$/;"	v
exp	./cmd/compile/internal/big/ratconv.go	/^	var exp int64$/;"	v
exp	./math/all_test.go	/^var exp = []float64{$/;"	v
exp	./math/big/floatconv.go	/^	var exp int64$/;"	v
exp	./math/big/ftoa.go	/^	var exp int64$/;"	v
exp	./math/big/ratconv.go	/^	var exp int64$/;"	v
exp	./math/cmplx/cmath_test.go	/^var exp = []complex128{$/;"	v
exp	./math/exp.go	/^func exp(x float64) float64 {$/;"	f
exp	./strconv/atof.go	/^	var exp int$/;"	v
exp10	./cmd/compile/internal/big/floatconv.go	/^	var exp10 int64$/;"	v
exp10	./math/big/floatconv.go	/^	var exp10 int64$/;"	v
exp2	./cmd/compile/internal/big/floatconv.go	/^	var exp2 = int64(len(z.mant))*_W - fnorm(z.mant)$/;"	v
exp2	./math/all_test.go	/^var exp2 = []float64{$/;"	v
exp2	./math/big/floatconv.go	/^	var exp2 = int64(len(z.mant))*_W - fnorm(z.mant)$/;"	v
exp2	./math/exp.go	/^func exp2(x float64) float64 {$/;"	f
expNN	./cmd/compile/internal/big/nat.go	/^func (z nat) expNN(x, y, m nat) nat {$/;"	f
expNN	./math/big/nat.go	/^func (z nat) expNN(x, y, m nat) nat {$/;"	f
expNNMontgomery	./cmd/compile/internal/big/nat.go	/^func (z nat) expNNMontgomery(x, y, m nat) nat {$/;"	f
expNNMontgomery	./math/big/nat.go	/^func (z nat) expNNMontgomery(x, y, m nat) nat {$/;"	f
expNNTests	./cmd/compile/internal/big/nat_test.go	/^var expNNTests = []struct {$/;"	v
expNNTests	./math/big/nat_test.go	/^var expNNTests = []struct {$/;"	v
expNNWindowed	./cmd/compile/internal/big/nat.go	/^func (z nat) expNNWindowed(x, y, m nat) nat {$/;"	f
expNNWindowed	./math/big/nat.go	/^func (z nat) expNNWindowed(x, y, m nat) nat {$/;"	f
expSC	./math/all_test.go	/^var expSC = []float64{$/;"	v
expSC	./math/cmplx/cmath_test.go	/^var expSC = []complex128{$/;"	v
expTests	./cmd/compile/internal/big/int_test.go	/^var expTests = []struct {$/;"	v
expTests	./math/big/int_test.go	/^var expTests = []struct {$/;"	v
expWW	./cmd/compile/internal/big/natconv.go	/^func (z nat) expWW(x, y Word) nat {$/;"	f
expWW	./math/big/natconv.go	/^func (z nat) expWW(x, y Word) nat {$/;"	f
expand	./cmd/go/get.go	/^			var expand []string$/;"	v
expand	./cmd/go/vcs.go	/^func expand(match map[string]string, s string) string {$/;"	f
expand	./regexp/regexp.go	/^func (re *Regexp) expand(dst []byte, template string, bsrc []byte, src string, match []int) []byte {$/;"	f
expand	./regexp/testdata/testregex.c	/^expand(char* os, char* ot)$/;"	f	file:
expand0	./cmd/compile/internal/gc/subr.go	/^func expand0(t *Type, followptr int) {$/;"	f
expand1	./cmd/compile/internal/gc/subr.go	/^func expand1(t *Type, d int, followptr int) {$/;"	f
expandBits	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func expandBits(x, m uint32) uint32 {$/;"	f
expandBlock	./crypto/des/block.go	/^func expandBlock(src uint32) (block uint64) {$/;"	f
expandEnvironmentStrings	./internal/syscall/windows/registry/zsyscall_windows.go	/^func expandEnvironmentStrings(src *uint16, dst *uint16, size uint32) (n uint32, err error) {$/;"	f
expandKey	./crypto/aes/cipher_asm.go	/^func expandKey(key []byte, enc, dec []uint32) {$/;"	f
expandKey	./crypto/aes/cipher_generic.go	/^func expandKey(key []byte, enc, dec []uint32) {$/;"	f
expandKeyAsm	./crypto/aes/cipher_asm.go	/^func expandKeyAsm(nr int, key *byte, enc *uint32, dec *uint32)$/;"	f
expandKeyGo	./crypto/aes/block.go	/^func expandKeyGo(key []byte, enc, dec []uint32) {$/;"	f
expandScanner	./cmd/go/pkg.go	/^func expandScanner(err error) error {$/;"	f
expandTests	./os/env_test.go	/^var expandTests = []struct {$/;"	v
expandVar	./cmd/go/generate.go	/^func (g *Generator) expandVar(word string) string {$/;"	f
expandchecks	./cmd/compile/internal/amd64/ggen.go	/^func expandchecks(firstp *obj.Prog) {$/;"	f
expandchecks	./cmd/compile/internal/arm/ggen.go	/^func expandchecks(firstp *obj.Prog) {$/;"	f
expandchecks	./cmd/compile/internal/arm64/ggen.go	/^func expandchecks(firstp *obj.Prog) {$/;"	f
expandchecks	./cmd/compile/internal/ppc64/ggen.go	/^func expandchecks(firstp *obj.Prog) {$/;"	f
expandchecks	./cmd/compile/internal/x86/ggen.go	/^func expandchecks(firstp *obj.Prog) {$/;"	f
expandmeth	./cmd/compile/internal/gc/subr.go	/^func expandmeth(t *Type) {$/;"	f
expandpkg	./cmd/link/internal/ld/go.go	/^func expandpkg(t0 string, pkg string) string {$/;"	f
expansionFunction	./crypto/des/const.go	/^var expansionFunction = [48]byte{$/;"	v
expect	./bufio/scan_test.go	/^		var expect rune$/;"	v
expect	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) expect(expected lex.ScanToken) {$/;"	f
expect	./cmd/internal/obj/line_test.go	/^	var expect = []string{$/;"	v
expect	./go/internal/gccgoimporter/parser.go	/^func (p *parser) expect(tok rune) string {$/;"	f
expect	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) expect(tok rune) string {$/;"	f
expect	./go/parser/parser.go	/^func (p *parser) expect(tok token.Token) token.Pos {$/;"	f
expect	./go/printer/testdata/parser.go	/^func (p *parser) expect(tok token.Token) token.Pos {$/;"	f
expect	./html/template/content_test.go	/^	var expect = "string=3"$/;"	v
expect	./text/template/parse/parse.go	/^func (t *Tree) expect(expected itemType, context string) item {$/;"	f
expectAuthorityUnknown	./crypto/x509/verify_test.go	/^func expectAuthorityUnknown(t *testing.T, i int, err error) (ok bool) {$/;"	f
expectClosing	./go/parser/parser.go	/^func (p *parser) expectClosing(tok token.Token, context string) token.Pos {$/;"	f
expectContinueReader	./net/http/server.go	/^type expectContinueReader struct {$/;"	t
expectEq	./mime/multipart/multipart_test.go	/^func expectEq(t *testing.T, expected, actual, what string) {$/;"	f
expectExpired	./crypto/x509/verify_test.go	/^func expectExpired(t *testing.T, i int, err error) (ok bool) {$/;"	f
expectHashError	./crypto/x509/verify_test.go	/^func expectHashError(t *testing.T, i int, err error) bool {$/;"	f
expectHostnameError	./crypto/x509/verify_test.go	/^func expectHostnameError(t *testing.T, i int, err error) (ok bool) {$/;"	f
expectKeyword	./go/internal/gccgoimporter/parser.go	/^func (p *parser) expectKeyword(keyword string) {$/;"	f
expectKeyword	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) expectKeyword(keyword string) {$/;"	f
expectNewline	./cmd/asm/internal/lex/input.go	/^func (in *Input) expectNewline(directive string) {$/;"	f
expectOneOf	./text/template/parse/parse.go	/^func (t *Tree) expectOneOf(expected1, expected2 itemType, context string) item {$/;"	f
expectSemi	./go/parser/parser.go	/^func (p *parser) expectSemi() {$/;"	f
expectSemi	./go/printer/testdata/parser.go	/^func (p *parser) expectSemi() {$/;"	f
expectSpecial	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) expectSpecial(tok string) {$/;"	f
expectSystemRootsError	./crypto/x509/verify_test.go	/^func expectSystemRootsError(t *testing.T, i int, err error) bool {$/;"	f
expectTest	./net/http/serve_test.go	/^func expectTest(contentLength int, expectation string, readBody bool, expectedResponse string) serverExpectTest {$/;"	f
expectText	./cmd/asm/internal/lex/input.go	/^func (in *Input) expectText(args ...interface{}) {$/;"	f
expectUsageError	./crypto/x509/verify_test.go	/^func expectUsageError(t *testing.T, i int, err error) (ok bool) {$/;"	f
expected	./go/types/typestring.go	/^						panic("internal error: string type expected")$/;"	t
expectedCookies	./net/http/client_test.go	/^var expectedCookies = []*Cookie{$/;"	v
expectedErrors	./go/parser/error_test.go	/^func expectedErrors(t *testing.T, fset *token.FileSet, filename string, src []byte) map[token.Pos]string {$/;"	f
expectedHexDump	./encoding/hex/hex_test.go	/^var expectedHexDump = []byte(`00000000  1e 1f 20 21 22 23 24 25  26 27 28 29 2a 2b 2c 2d  |.. !"#$%&'()*+,-|$/;"	v
expectedTag	./crypto/cipher/gcm.go	/^	var expectedTag [gcmTagSize]byte$/;"	v
expectsContinue	./net/http/request.go	/^func (r *Request) expectsContinue() bool {$/;"	f
expensiveCall	./time/example_test.go	/^func expensiveCall() {}$/;"	f
exper	./cmd/internal/obj/go.go	/^var exper = []struct {$/;"	v
experimental	./cmd/vet/main.go	/^var experimental = map[string]bool{}$/;"	v
expiresIn	./net/http/cookiejar/jar_test.go	/^func expiresIn(delta int) string {$/;"	f
explicitTag	./encoding/asn1/marshal.go	/^	var explicitTag *forkableWriter$/;"	v
explicitTagTest	./encoding/asn1/marshal_test.go	/^type explicitTagTest struct {$/;"	t
explicitTaggedTimeTest	./encoding/asn1/asn1_test.go	/^type explicitTaggedTimeTest struct {$/;"	t
explicitTaggedTimeTestData	./encoding/asn1/asn1_test.go	/^var explicitTaggedTimeTestData = []struct {$/;"	v
explicitly	./go/types/conversions.go	/^	\/\/ given a type explicitly by a constant declaration or conversion,...".$/;"	t
explo	./strconv/ftoa.go	/^	var explo int$/;"	v
explode	./bytes/bytes.go	/^func explode(s []byte, n int) [][]byte {$/;"	f
explode	./strings/strings.go	/^func explode(s string, n int) []string {$/;"	f
explodetests	./bytes/bytes_test.go	/^var explodetests = []ExplodeTest{$/;"	v
explodetests	./strings/strings_test.go	/^var explodetests = []struct {$/;"	v
expm1	./math/all_test.go	/^var expm1 = []float64{$/;"	v
expm1	./math/expm1.go	/^func expm1(x float64) float64 {$/;"	f
expm1SC	./math/all_test.go	/^var expm1SC = []float64{$/;"	v
expmulti	./math/exp.go	/^func expmulti(hi, lo float64, k int) float64 {$/;"	f
export	./cmd/api/goapi.go	/^func (w *Walker) export(pkg *types.Package) {$/;"	f
exportFilter	./go/ast/filter.go	/^func exportFilter(name string) bool {$/;"	f
exportHeader	./cmd/cgo/main.go	/^var exportHeader = flag.String("exportheader", "", "where to write export header if any exported functions")$/;"	v
exported	./net/rpc/server.go	/^\/\/ Is this type exported or a builtin?$/;"	t
exportedsym	./cmd/compile/internal/gc/export.go	/^func exportedsym(sym *Sym) bool {$/;"	f
exportlist	./cmd/compile/internal/gc/go.go	/^var exportlist *NodeList$/;"	v
exportname	./cmd/compile/internal/gc/export.go	/^func exportname(s string) bool {$/;"	f
exportsym	./cmd/compile/internal/gc/export.go	/^func exportsym(n *Node) {$/;"	f
expr	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) expr() uint64 {$/;"	f
expr	./cmd/cgo/gcc.go	/^		var expr ast.Expr = ast.NewIdent(r.Name.Mangle) \/\/ default$/;"	v
expr	./cmd/compile/internal/gc/go.y	/^expr:$/;"	l
expr	./cmd/compile/internal/gc/walk.go	/^	var expr *Node$/;"	v
expr	./cmd/fix/fix.go	/^func expr(s string) ast.Expr {$/;"	f
expr	./cmd/yacc/testdata/expr/expr.y	/^expr:$/;"	l
expr	./go/printer/nodes.go	/^func (p *printer) expr(x ast.Expr) {$/;"	f
expr	./go/types/api_test.go	/^		var expr ast.Expr$/;"	v
expr	./go/types/expr.go	/^func (check *Checker) expr(x *operand, e ast.Expr) {$/;"	f
expr	./go/types/operand.go	/^	var expr string$/;"	v
expr0	./go/printer/nodes.go	/^func (p *printer) expr0(x ast.Expr, depth int) {$/;"	f
expr1	./cmd/yacc/testdata/expr/expr.y	/^expr1:$/;"	l
expr1	./go/printer/nodes.go	/^func (p *printer) expr1(expr ast.Expr, prec1, depth int) {$/;"	f
expr2	./cmd/yacc/testdata/expr/expr.y	/^expr2:$/;"	l
expr3	./cmd/yacc/testdata/expr/expr.y	/^expr3:$/;"	l
exprInfo	./go/types/check.go	/^type exprInfo struct {$/;"	t
exprInternal	./go/types/expr.go	/^func (check *Checker) exprInternal(x *operand, e ast.Expr, hint Type) exprKind {$/;"	f
exprKind	./go/types/expr.go	/^type exprKind int$/;"	t
exprList	./go/printer/nodes.go	/^func (p *printer) exprList(prev0 token.Pos, list []ast.Expr, depth int, mode exprListMode, next0 token.Pos) {$/;"	f
exprListMode	./go/printer/nodes.go	/^type exprListMode uint$/;"	t
exprNode	./go/ast/ast.go	/^func (*ArrayType) exprNode()     {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*BadExpr) exprNode()        {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*BasicLit) exprNode()       {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*BinaryExpr) exprNode()     {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*CallExpr) exprNode()       {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*ChanType) exprNode()      {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*CompositeLit) exprNode()   {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*Ellipsis) exprNode()       {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*FuncLit) exprNode()        {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*FuncType) exprNode()      {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*Ident) exprNode()          {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*IndexExpr) exprNode()      {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*InterfaceType) exprNode() {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*KeyValueExpr) exprNode()   {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*MapType) exprNode()       {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*ParenExpr) exprNode()      {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*SelectorExpr) exprNode()   {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*SliceExpr) exprNode()      {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*StarExpr) exprNode()       {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*StructType) exprNode()    {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*TypeAssertExpr) exprNode() {}$/;"	f
exprNode	./go/ast/ast.go	/^func (*UnaryExpr) exprNode()      {}$/;"	f
exprOrType	./go/types/expr.go	/^func (check *Checker) exprOrType(x *operand, e ast.Expr) {$/;"	f
exprString	./go/types/example_test.go	/^func exprString(fset *token.FileSet, expr ast.Expr) string {$/;"	f
exprSwitch	./cmd/compile/internal/gc/swt.go	/^type exprSwitch struct {$/;"	t
exprTest	./cmd/asm/internal/asm/expr_test.go	/^type exprTest struct {$/;"	t
exprTests	./cmd/asm/internal/asm/expr_test.go	/^var exprTests = []exprTest{$/;"	v
exprWithHint	./go/types/expr.go	/^func (check *Checker) exprWithHint(x *operand, e ast.Expr, hint Type) {$/;"	f
expr_list	./cmd/compile/internal/gc/go.y	/^expr_list:$/;"	l
expr_or_type	./cmd/compile/internal/gc/go.y	/^expr_or_type:$/;"	l
expr_or_type_list	./cmd/compile/internal/gc/go.y	/^expr_or_type_list:$/;"	l
exprcmp	./cmd/compile/internal/gc/swt.go	/^func exprcmp(c1, c2 *caseClause) int {$/;"	f
expression	./go/parser/parser_test.go	/^	\/\/ a valid type expression$/;"	t
expression	./go/types/typexpr.go	/^\/\/ typExpr type-checks the type expression e and returns its type, or Typ[Invalid].$/;"	t
expression	./go/types/typexpr.go	/^\/\/ typeOrNil type-checks the type expression (or nil value) e$/;"	t
expressionBytes	./html/template/css.go	/^var expressionBytes = []byte("expression")$/;"	v
expressions	./go/types/exprstring_test.go	/^	\/\/ non-type expressions$/;"	t
expressions	./go/types/typexpr.go	/^\/\/ This file implements type-checking of identifiers and type expressions.$/;"	t
exprfmt	./cmd/compile/internal/gc/fmt.go	/^func exprfmt(n *Node, prec int) string {$/;"	f
expvarHandler	./expvar/expvar.go	/^func expvarHandler(w http.ResponseWriter, r *http.Request) {$/;"	f
extFloat	./strconv/extfloat.go	/^type extFloat struct {$/;"	t
extKeyUsageFromOID	./crypto/x509/x509.go	/^func extKeyUsageFromOID(oid asn1.ObjectIdentifier) (eku ExtKeyUsage, ok bool) {$/;"	f
extKeyUsageOIDs	./crypto/x509/x509.go	/^var extKeyUsageOIDs = []struct {$/;"	v
extLink	./cmd/dist/test.go	/^func (t *tester) extLink() bool {$/;"	f
extendRandom	./runtime/runtime2.go	/^func extendRandom(r []byte, n int) {$/;"	f
extensions	./crypto/x509/x509.go	/^	var extensions []pkix.AttributeTypeAndValue$/;"	v
extensions	./crypto/x509/x509.go	/^	var extensions []pkix.Extension$/;"	v
extern	./cmd/go/go_test.go	/^		var extern string$/;"	v
external	./cmd/vet/testdata/deadcode.go	/^func external() int \/\/ ok$/;"	f
externalthreadhandler	./runtime/os1_windows.go	/^func externalthreadhandler()$/;"	f
externdcl	./cmd/compile/internal/gc/go.go	/^var externdcl *NodeList$/;"	v
externs	./cmd/compile/internal/gc/obj.go	/^	var externs *NodeList$/;"	v
extpread	./syscall/zsyscall_dragonfly_amd64.go	/^func extpread(fd int, p []byte, flags int, offset int64) (n int, err error) {$/;"	f
extpwrite	./syscall/zsyscall_dragonfly_amd64.go	/^func extpwrite(fd int, p []byte, flags int, offset int64) (n int, err error) {$/;"	f
extra	./path/filepath/path_test.go	/^		var extra []string$/;"	v
extraBits	./compress/flate/huffman_bit_writer.go	/^	var extraBits int64$/;"	v
extraCommands	./cmd/pprof/pprof.go	/^	var extraCommands map[string]*commands.Command \/\/ no added Go-specific commands$/;"	v
extraHeader	./net/http/server.go	/^type extraHeader struct {$/;"	t
extraHeaderKeys	./net/http/server.go	/^var extraHeaderKeys = [][]byte{$/;"	v
extraHeaders	./net/http/transport.go	/^func (tr *transportRequest) extraHeaders() Header {$/;"	f
extrabits	./strconv/extfloat.go	/^	var extrabits uint$/;"	v
extract	./regexp/regexp.go	/^func extract(str string) (name string, num int, rest string, ok bool) {$/;"	f
extract	./regexp/testdata/testregex.c	/^extract(int* tabs, char* spec, char* re, char* s, char* ans, char* msg, char* accept, regmatch_t* match, int nmatch, int nsub, unsigned long skip, unsigned long level, unsigned long test)$/;"	f	file:
extractCAPS	./time/zoneinfo_windows.go	/^func extractCAPS(desc string) string {$/;"	f
extractContents	./cmd/pack/pack.go	/^func (ar *Archive) extractContents(entry *Entry) {$/;"	f
extractHexAddresses	./cmd/pprof/internal/profile/legacy_profile.go	/^func extractHexAddresses(s string) ([]string, []uint64) {$/;"	f
extractParams	./syscall/mksyscall_windows.go	/^func extractParams(s string, f *Fn) ([]*Param, error) {$/;"	f
extractSection	./syscall/mksyscall_windows.go	/^func extractSection(s string, start, end rune) (prefix, body, suffix string, found bool) {$/;"	f
extractSimpleChain	./crypto/x509/root_windows.go	/^func extractSimpleChain(simpleChain **syscall.CertSimpleChain, count int) (chain []*Certificate, err error) {$/;"	f
extracted	./regexp/testdata/testregex.c	/^	int		extracted;$/;"	m	struct:__anon2	file:
extram	./runtime/proc1.go	/^var extram uintptr$/;"	v
exttests	./path/filepath/path_test.go	/^var exttests = []ExtTest{$/;"	v
exttests	./path/path_test.go	/^var exttests = []ExtTest{$/;"	v
extval	./cmd/yacc/yacc.go	/^var extval = 0$/;"	v
f	./cmd/compile/internal/gc/dcl.go	/^			\/\/	func f() (_ int)$/;"	f
f	./cmd/compile/internal/gc/inl.go	/^\/\/   - handle T.meth(f()) with func f() (t T, arg, arg, )$/;"	f
f	./cmd/compile/internal/gc/syntax.go	/^	ODCLFUNC  \/\/ func f() or func (r) f()$/;"	f
f	./cmd/compile/internal/gc/syntax.go	/^	ODDD        \/\/ func f(args ...int) or f(l...) or var a = [...]int{0, 1, 2}.$/;"	f
f	./cmd/compile/internal/gc/syntax.go	/^	ODDDARG     \/\/ func f(args ...int), introduced by escape analysis.$/;"	f
f	./cmd/fix/gotypes_test.go	/^func f() {$/;"	f
f	./cmd/fix/netipv6zone_test.go	/^func f() net.Addr {$/;"	f
f	./cmd/fix/printerconfig_test.go	/^func f() printer.Config {$/;"	f
f	./cmd/go/go_test.go	/^		func f() { C.f() }`)$/;"	f
f	./cmd/go/go_test.go	/^		func f() {`)$/;"	f
f	./cmd/go/testdata/src/badtest/badvar/x_test.go	/^func f() {$/;"	f
f	./cmd/go/testdata/src/syntaxerror/x_test.go	/^func f() (x.y, z int) {$/;"	f
f	./cmd/go/testdata/src/vetpkg/b.go	/^func f() {$/;"	f
f	./cmd/vet/testdata/unsafeptr.go	/^func f() {$/;"	f
f	./cmd/vet/types.go	/^		\/\/	func f(x interface{}) { fmt.Printf("%s", x) }$/;"	f
f	./go/parser/error_test.go	/^\/\/	func f() {$/;"	f
f	./go/parser/parser.go	/^		typ = p.tryVarType(isParam) \/\/ maybe nil as in: func f(int,) {}$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() { ; }",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() { L: ; }",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() { L: \\n; }",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() { L: \\n}",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() { L: }",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() {;}",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() {L:;}",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() {L:\\n;}",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() {L:\\n}",$/;"	f
f	./go/parser/parser_test.go	/^		"package p; func f() {L:}",$/;"	f
f	./go/parser/parser_test.go	/^	f, err := ParseFile(token.NewFileSet(), "", `package p; func f() { var x, y, z = x, y, z }`, 0)$/;"	f
f	./go/parser/parser_test.go	/^	f, err := ParseFile(token.NewFileSet(), "", `package p; func f() { x, y, z := x, y, z }`, 0)$/;"	f
f	./go/parser/parser_test.go	/^func f() { L: }$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() (a b string \/* ERROR "missing ','" *\/ , ok bool)`,           \/\/ issue 8656$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = (<-<- \/* ERROR "expected 'chan'" *\/ chan int)(nil) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = (<-chan <-chan int)(nil) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = (<-chan int)(nil) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = (<-chan<-chan<-chan<-chan<-chan<- \/* ERROR "expected channel type" *\/ int)(nil) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = 1 == func()int { var x bool; x = x = \/* ERROR "expected '=='" *\/ true; return x }() };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = <-chan <-chan <-chan <-chan <-int(nil) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = <-chan int(nil) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { _ = x = \/* ERROR "expected '=='" *\/ 0 {}};`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { defer func() {} \/* ERROR HERE "function must be invoked" *\/ }`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for ; ; _ = range \/* ERROR "expected operand" *\/ x {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for ; _ \/* ERROR "expected boolean or range expression" *\/ = range x ; {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for _ = range "foo" + "bar" {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for _ = range x ; \/* ERROR "expected '{'" *\/ ; {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for i \/* ERROR "boolean or range expression" *\/ , x := []string {} }`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for i \/* ERROR "boolean or range expression" *\/ , x = []string {} }`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for x \/* ERROR "boolean or range expression" *\/ := []string {} }`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { for x \/* ERROR "boolean or range expression" *\/ = []string {} }`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { go f \/* ERROR HERE "function must be invoked" *\/ }`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { go func() { func() { f(x func \/* ERROR "missing ','" *\/ (){}) } } }`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { if ; true {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { if ; { \/* ERROR "expected operand" *\/ } };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { if _ \/* ERROR "expected boolean expression" *\/ = range x; true {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { if f(); { \/* ERROR "expected operand" *\/ } };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { if f(T{}) {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { if x := g(); x = \/* ERROR "expected '=='" *\/ 0 {}};`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { if { \/* ERROR "expected operand" *\/ } };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { select { case <- c: case c <- d: case c <- <- d: case <-c <- d: } };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { select { case _ <- chan \/* ERROR "expected expression" *\/ int: } };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { select { case x := (<-c): } };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { switch ; {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { switch _ \/* ERROR "expected switch expression" *\/ = range x; true {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { switch t \/* ERROR "expected switch expression" *\/ , t = t.(type) {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { switch t \/* ERROR "expected switch expression" *\/ = t.(type) {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { switch t \/* ERROR "expected switch expression" *\/ = t.(type), t {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; _ = s[: \/* ERROR "2nd index required" *\/ ::] };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; _ = s[: \/* ERROR "2nd index required" *\/ :] };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; _ = s[] \/* ERROR "expected operand" *\/ };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; _ = s[i: \/* ERROR "2nd index required" *\/ :] };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; _ = s[i: \/* ERROR "2nd index required" *\/ :k] };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; _ = s[i:j: \/* ERROR "3rd index required" *\/ ] };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; _ = s[i:j:k: \/* ERROR "expected ']'" *\/ l] };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var s []int; g(s[:], s[i:], s[:j], s[i:j], s[i:j:k], s[:j:k]) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f() { var t []int; t \/* ERROR "expected identifier on left side of :=" *\/ [0] := 0 };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(...T);`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(...int,) {};`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(float, ...int);`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(func() func() func());`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(int,) {};`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(x ...int,) {};`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(x func(), u v func \/* ERROR "missing ','" *\/ ()){}`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; func f(x int, a ...int) { f(0, a...); f(1, a...,) };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; import "fmt"; func f() { fmt.Println("Hello, World!") };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; type T []int; func f() { for _ = range []int{T{42}[0]} {} };`,$/;"	f
f	./go/parser/short_test.go	/^	`package p; type T []int; var a []bool; func f() { if a[T{42}[0]] {} };`,$/;"	f
f	./go/printer/printer_test.go	/^func f()$/;"	f
f	./go/types/api_test.go	/^		func f() int {$/;"	f
f	./go/types/api_test.go	/^		{"type ( E1 struct{ f int }; E2 struct{}; x struct{ E1; *E2 }); func (E2) f() {}", false, []int{1, 0}, false},$/;"	f
f	./go/types/api_test.go	/^		{"var a *T; type T struct{}; func (*T) f() {}", true, []int{0}, true}, \/\/ TODO(gri) should this report indirect = false?$/;"	f
f	./go/types/api_test.go	/^		{"var a *T; type T struct{}; func (T) f() {}", true, []int{0}, true},$/;"	f
f	./go/types/api_test.go	/^		{"var a T; type T struct{}; func (*T) f() {}", true, []int{0}, false},$/;"	f
f	./go/types/api_test.go	/^		{"var a T; type T struct{}; func (T) f() {}", true, []int{0}, false},$/;"	f
f	./go/types/api_test.go	/^		{"var x T; type T struct{}; func (*T) f() {}", false, nil, true},$/;"	f
f	./go/types/api_test.go	/^		{`package issue6796_e; func f(c chan string) { _, _ = ((<-c)) }`,$/;"	f
f	./go/types/api_test.go	/^		{`package issue7060_c; func f(x interface{}, ok bool, m map[int]string) { x, ok = m[0] }`,$/;"	f
f	./go/types/api_test.go	/^		{`package issue7060_f; func f(x interface{}, ok bool, ch chan string) { x, ok = <-ch }`,$/;"	f
f	./go/types/api_test.go	/^		{`package m5; func f() {}`, `f`, `<missing>`},$/;"	f
f	./go/types/api_test.go	/^		{`package n0; func f() { f() }`, `f()`, `void`},$/;"	f
f	./go/types/api_test.go	/^		{`package p3; var _ = f(); func f() int { return 1 }`, []string{$/;"	f
f	./go/types/api_test.go	/^		{`package p6; var a, b = f(); func f() (_, _ int) { return z, z }; var z = 0`, []string{$/;"	f
f	./go/types/api_test.go	/^		{`package v4; func f() { _ = f }`, `f`, `value`},$/;"	f
f	./go/types/api_test.go	/^func (B) f(int)$/;"	f
f	./go/types/api_test.go	/^func f() {$/;"	f
f	./go/types/check_test.go	/^\/\/	func f() {$/;"	f
f	./go/types/eval_test.go	/^		func f(a int, s string) float64 {$/;"	f
f	./go/types/expr.go	/^  func f(x *operand, e *ast.Expr, ...)$/;"	f
f	./go/types/issues_test.go	/^func f() int {$/;"	f
f	./go/types/resolver_test.go	/^		func f() string {$/;"	f
f	./reflect/all_test.go	/^func (Impl) f() {}$/;"	f
f	./runtime/append_test.go	/^func f() int {$/;"	f
f	./runtime/crash_test.go	/^func f(x []byte) byte {$/;"	f
f	./runtime/gcinfo_test.go	/^func (IfaceImpl) f() {$/;"	f
f	./runtime/stubs.go	/^\/\/	func f(arg1, arg2, arg3 int) {$/;"	f
f	./sort/search_test.go	/^func f(a []int, x int) func(int) bool {$/;"	f
f0	./cmd/compile/internal/x86/ggen.go	/^	var f0 gc.Node$/;"	v
f0	./cmd/compile/internal/x86/gsubr.go	/^		var f0 gc.Node$/;"	v
f1	./cmd/compile/internal/big/float_test.go	/^		var f1, f2 Float$/;"	v
f1	./cmd/compile/internal/gc/popt.go	/^	var f1 *Flow$/;"	v
f1	./cmd/compile/internal/gc/reg.go	/^	var f1 *Flow$/;"	v
f1	./cmd/compile/internal/gc/typecheck.go	/^	var f1 *Type$/;"	v
f1	./cmd/compile/internal/x86/ggen.go	/^	var f1 gc.Node$/;"	v
f1	./cmd/compile/internal/x86/gsubr.go	/^		var f1 gc.Node$/;"	v
f1	./crypto/elliptic/p224.go	/^	var f1, f2, f3, f4 p224FieldElement$/;"	v
f1	./debug/dwarf/testdata/line1.h	/^static void f1()$/;"	f
f1	./go/ast/commentmap_test.go	/^func f1() {$/;"	f
f1	./go/ast/filter_test.go	/^func (*t1) f1() {}$/;"	f
f1	./go/ast/filter_test.go	/^func (t1) f1() {}$/;"	f
f1	./go/ast/filter_test.go	/^func (t2) f1() {}$/;"	f
f1	./go/ast/filter_test.go	/^func f1() {}$/;"	f
f1	./math/big/float_test.go	/^		var f1, f2 Float$/;"	v
f100	./text/scanner/scanner_test.go	/^var f100 = "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"$/;"	v
f1a	./go/parser/parser_test.go	/^func f1a(int)$/;"	f
f1b	./go/parser/parser_test.go	/^func f1b(*int)$/;"	f
f2	./cmd/compile/internal/big/nat_test.go	/^	var f2 nat$/;"	v
f2	./cmd/compile/internal/gc/popt.go	/^	var f2 *Flow$/;"	v
f2	./cmd/compile/internal/gc/reg.go	/^	var f2 *Flow$/;"	v
f2	./cmd/compile/internal/gc/typecheck.go	/^	var f2 *Type$/;"	v
f2	./debug/dwarf/testdata/line2.c	/^void f2()$/;"	f
f2	./go/ast/commentmap_test.go	/^func f2() {$/;"	f
f2	./go/ast/filter_test.go	/^func (t1) f2() {}$/;"	f
f2	./go/ast/filter_test.go	/^func (t2) f2() {}$/;"	f
f2	./go/ast/filter_test.go	/^func (x *t2) f2() {}$/;"	f
f2	./go/ast/filter_test.go	/^func f2() {}$/;"	f
f2	./go/doc/testdata/b.go	/^func f2() notExported {}$/;"	f
f2	./math/big/nat_test.go	/^	var f2 nat$/;"	v
f2a	./go/parser/parser_test.go	/^func f2a(byte, int, float)$/;"	f
f2b	./go/parser/parser_test.go	/^func f2b([]byte, (int), *float)$/;"	f
f3	./go/ast/commentmap_test.go	/^func f3() {$/;"	f
f32	./fmt/scan_test.go	/^	var f32 float32$/;"	v
f32equal	./runtime/alg.go	/^func f32equal(p, q unsafe.Pointer) bool {$/;"	f
f32hash	./runtime/alg.go	/^func f32hash(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
f32to64	./runtime/softfloat64.go	/^func f32to64(f uint32) uint64 {$/;"	f
f3a	./go/parser/parser_test.go	/^func f3a(a, b int, c float)$/;"	f
f3b	./go/parser/parser_test.go	/^func f3b(a, b *int, c []float)$/;"	f
f4a	./go/parser/parser_test.go	/^func f4a(...complex)$/;"	f
f4b	./go/parser/parser_test.go	/^func f4b(...*complex)$/;"	f
f5a	./go/parser/parser_test.go	/^func f5a(a s1a, b ...complex)$/;"	f
f5b	./go/parser/parser_test.go	/^func f5b(a s1a, b ...[]complex)$/;"	f
f64	./fmt/scan_test.go	/^	var f64 float64$/;"	v
f64equal	./runtime/alg.go	/^func f64equal(p, q unsafe.Pointer) bool {$/;"	f
f64hash	./runtime/alg.go	/^func f64hash(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
f64to32	./runtime/softfloat64.go	/^func f64to32(f uint64) uint32 {$/;"	f
f64toint	./runtime/softfloat64.go	/^func f64toint(f uint64) (val int64, ok bool) {$/;"	f
fArray	./testing/quick/quick_test.go	/^func fArray(a [4]byte) [4]byte { return a }$/;"	f
fArrayAlias	./testing/quick/quick_test.go	/^func fArrayAlias(a TestArrayAlias) TestArrayAlias { return a }$/;"	f
fBool	./testing/quick/quick_test.go	/^func fBool(a bool) bool { return a }$/;"	f
fBoolAlias	./testing/quick/quick_test.go	/^func fBoolAlias(a TestBoolAlias) TestBoolAlias { return a }$/;"	f
fComplex128	./testing/quick/quick_test.go	/^func fComplex128(a complex128) complex128 { return a }$/;"	f
fComplex128Alias	./testing/quick/quick_test.go	/^func fComplex128Alias(a TestComplex128Alias) TestComplex128Alias { return a }$/;"	f
fComplex64	./testing/quick/quick_test.go	/^func fComplex64(a complex64) complex64 { return a }$/;"	f
fComplex64Alias	./testing/quick/quick_test.go	/^func fComplex64Alias(a TestComplex64Alias) TestComplex64Alias { return a }$/;"	f
fFloat32	./testing/quick/quick_test.go	/^func fFloat32(a float32) float32 { return a }$/;"	f
fFloat32Alias	./testing/quick/quick_test.go	/^func fFloat32Alias(a TestFloat32Alias) TestFloat32Alias { return a }$/;"	f
fFloat64	./testing/quick/quick_test.go	/^func fFloat64(a float64) float64 { return a }$/;"	f
fFloat64Alias	./testing/quick/quick_test.go	/^func fFloat64Alias(a TestFloat64Alias) TestFloat64Alias { return a }$/;"	f
fInt	./testing/quick/quick_test.go	/^func fInt(a int) int { return a }$/;"	f
fInt16	./testing/quick/quick_test.go	/^func fInt16(a int16) int16 { return a }$/;"	f
fInt16Alias	./testing/quick/quick_test.go	/^func fInt16Alias(a TestInt16Alias) TestInt16Alias { return a }$/;"	f
fInt32	./testing/quick/quick_test.go	/^func fInt32(a int32) int32 { return a }$/;"	f
fInt32Alias	./testing/quick/quick_test.go	/^func fInt32Alias(a TestInt32Alias) TestInt32Alias { return a }$/;"	f
fInt64	./testing/quick/quick_test.go	/^func fInt64(a int64) int64 { return a }$/;"	f
fInt64Alias	./testing/quick/quick_test.go	/^func fInt64Alias(a TestInt64Alias) TestInt64Alias { return a }$/;"	f
fInt8	./testing/quick/quick_test.go	/^func fInt8(a int8) int8 { return a }$/;"	f
fInt8Alias	./testing/quick/quick_test.go	/^func fInt8Alias(a TestInt8Alias) TestInt8Alias { return a }$/;"	f
fIntAlias	./testing/quick/quick_test.go	/^func fIntAlias(a TestIntAlias) TestIntAlias { return a }$/;"	f
fInter	./runtime/hash_test.go	/^type fInter uint64$/;"	t
fInterface	./runtime/iface.go	/^type fInterface interface {$/;"	t
fMap	./testing/quick/quick_test.go	/^func fMap(a map[int]int) map[int]int { return a }$/;"	f
fMapAlias	./testing/quick/quick_test.go	/^func fMapAlias(a TestMapAlias) TestMapAlias { return a }$/;"	f
fPtr	./testing/quick/quick_test.go	/^func fPtr(a *int) *int {$/;"	f
fPtrAlias	./testing/quick/quick_test.go	/^func fPtrAlias(a TestPtrAlias) TestPtrAlias { return a }$/;"	f
fSlice	./testing/quick/quick_test.go	/^func fSlice(a []byte) []byte { return a }$/;"	f
fSliceAlias	./testing/quick/quick_test.go	/^func fSliceAlias(a TestSliceAlias) TestSliceAlias { return a }$/;"	f
fString	./testing/quick/quick_test.go	/^func fString(a string) string { return a }$/;"	f
fStringAlias	./testing/quick/quick_test.go	/^func fStringAlias(a TestStringAlias) TestStringAlias { return a }$/;"	f
fStruct	./testing/quick/quick_test.go	/^func fStruct(a TestStruct) TestStruct { return a }$/;"	f
fStructAlias	./testing/quick/quick_test.go	/^func fStructAlias(a TestStructAlias) TestStructAlias { return a }$/;"	f
fUint	./testing/quick/quick_test.go	/^func fUint(a uint) uint { return a }$/;"	f
fUint16	./testing/quick/quick_test.go	/^func fUint16(a uint16) uint16 { return a }$/;"	f
fUint16Alias	./testing/quick/quick_test.go	/^func fUint16Alias(a TestUint16Alias) TestUint16Alias { return a }$/;"	f
fUint32	./testing/quick/quick_test.go	/^func fUint32(a uint32) uint32 { return a }$/;"	f
fUint32Alias	./testing/quick/quick_test.go	/^func fUint32Alias(a TestUint32Alias) TestUint32Alias { return a }$/;"	f
fUint64	./testing/quick/quick_test.go	/^func fUint64(a uint64) uint64 { return a }$/;"	f
fUint64Alias	./testing/quick/quick_test.go	/^func fUint64Alias(a TestUint64Alias) TestUint64Alias { return a }$/;"	f
fUint8	./testing/quick/quick_test.go	/^func fUint8(a uint8) uint8 { return a }$/;"	f
fUint8Alias	./testing/quick/quick_test.go	/^func fUint8Alias(a TestUint8Alias) TestUint8Alias { return a }$/;"	f
fUintAlias	./testing/quick/quick_test.go	/^func fUintAlias(a TestUintAlias) TestUintAlias { return a }$/;"	f
fUintptr	./testing/quick/quick_test.go	/^func fUintptr(a uintptr) uintptr { return a }$/;"	f
fUintptrAlias	./testing/quick/quick_test.go	/^func fUintptrAlias(a TestUintptrAlias) TestUintptrAlias { return a }$/;"	f
fa	./os/file_windows.go	/^		var fa syscall.Win32FileAttributeData$/;"	v
fabort	./runtime/softfloat_arm.go	/^func fabort() {$/;"	f
fabs	./math/all_test.go	/^var fabs = []float64{$/;"	v
fabsSC	./math/all_test.go	/^var fabsSC = []float64{$/;"	v
faces	./bytes/bytes_test.go	/^var faces = "☺☻☹"$/;"	v
faces	./strings/strings_test.go	/^var faces = "☺☻☹"$/;"	v
factor	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) factor() uint64 {$/;"	f
factor	./regexp/syntax/parse.go	/^func (p *parser) factor(sub []*Regexp, flags Flags) []*Regexp {$/;"	f
factorials	./go/types/hilbert_test.go	/^func (g *gen) factorials(n int) {$/;"	f
facts	./go/types/issues_test.go	/^	var facts []string$/;"	v
fadd64	./runtime/softfloat64.go	/^func fadd64(f, g uint64) uint64 {$/;"	f
fail	./clean.bat	/^:fail$/;"	l
fail	./make.bat	/^:fail$/;"	l
fail	./race.bat	/^:fail$/;"	l
fail	./regexp/syntax/compile.go	/^func (c *compiler) fail() frag {$/;"	f
fail	./run.bat	/^:fail$/;"	l
fail	./testing/example.go	/^		var fail string$/;"	v
failSSH	./cmd/go/go_test.go	/^func (tg *testgoData) failSSH() {$/;"	f
failallocatestack	./runtime/os1_darwin.go	/^var failallocatestack = []byte("runtime: failed to allocate stack for the new OS thread\\n")$/;"	v
failallocatestack	./runtime/os1_linux.go	/^var failallocatestack = []byte("runtime: failed to allocate stack for the new OS thread\\n")$/;"	v
failed	./cmd/go/note.go	/^				return nil, fmt.Errorf("read type failed: %v", err)$/;"	t
failed	./cmd/link/internal/ld/lib.go	/^				return nil, fmt.Errorf("read type failed:", err)$/;"	t
failed	./runtime/runtime-gdb_test.go	/^		t.Fatalf("print mapvar failed: %s", bl)$/;"	v
failed	./runtime/runtime-gdb_test.go	/^		t.Fatalf("print ptrvar failed: %s", bl)$/;"	v
failed	./runtime/runtime-gdb_test.go	/^		t.Fatalf("print strvar failed: %s", bl)$/;"	v
failf	./flag/flag.go	/^func (f *FlagSet) failf(format string, a ...interface{}) error {$/;"	f
failthreadcreate	./runtime/os1_darwin.go	/^var failthreadcreate = []byte("runtime: failed to create new OS thread\\n")$/;"	v
failthreadcreate	./runtime/os1_linux.go	/^var failthreadcreate = []byte("runtime: failed to create new OS thread\\n")$/;"	v
failure	./runtime/asm_amd64.s	/^failure:$/;"	l
failure	./runtime/asm_amd64p32.s	/^failure:$/;"	l
failureToReadBody	./net/http/httputil/dump.go	/^type failureToReadBody struct{}$/;"	t
fake	./net/smtp/smtp_test.go	/^		var fake faker$/;"	v
fake	./net/smtp/smtp_test.go	/^	var fake faker$/;"	v
fakeConn	./database/sql/fakedb_test.go	/^type fakeConn struct {$/;"	t
fakeDB	./database/sql/fakedb_test.go	/^type fakeDB struct {$/;"	t
fakeDriver	./database/sql/fakedb_test.go	/^type fakeDriver struct {$/;"	t
fakeDriverString	./database/sql/fakedb_test.go	/^type fakeDriverString struct{}$/;"	t
fakeFS	./net/http/fs_test.go	/^type fakeFS map[string]*fakeFileInfo$/;"	t
fakeFile	./net/http/fs_test.go	/^type fakeFile struct {$/;"	t
fakeFileInfo	./net/http/fs_test.go	/^type fakeFileInfo struct {$/;"	t
fakeHash32	./archive/zip/zip_test.go	/^type fakeHash32 struct {$/;"	t
fakeLocker	./net/http/transport.go	/^type fakeLocker struct{}$/;"	t
fakeStmt	./database/sql/fakedb_test.go	/^type fakeStmt struct {$/;"	t
fakeTable	./unicode/letter_test.go	/^func fakeTable(n int) []Range16 {$/;"	f
fakeTx	./database/sql/fakedb_test.go	/^type fakeTx struct {$/;"	t
fakedwarf	./cmd/link/internal/ld/macho_combine_dwarf.go	/^var fakedwarf, realdwarf, linkseg *macho.Segment$/;"	v
fakeimport	./cmd/compile/internal/gc/lex.go	/^func fakeimport() {$/;"	f
faker	./net/smtp/smtp_test.go	/^type faker struct {$/;"	t
fakethis	./cmd/compile/internal/gc/dcl.go	/^func fakethis() *Node {$/;"	f
faketime	./runtime/time.go	/^var faketime int64$/;"	v
fallback	./runtime/sys_linux_amd64.s	/^fallback:$/;"	l
fallbackDelay	./net/dial.go	/^func (d *Dialer) fallbackDelay() time.Duration {$/;"	f
family	./net/iprawsock_posix.go	/^func (a *IPAddr) family() int {$/;"	f
family	./net/tcpsock_posix.go	/^func (a *TCPAddr) family() int {$/;"	f
family	./net/udpsock_posix.go	/^func (a *UDPAddr) family() int {$/;"	f
family	./net/unixsock_posix.go	/^func (a *UnixAddr) family() int {$/;"	f
familyString	./net/internal/socktest/switch_posix.go	/^func familyString(family int) string {$/;"	f
familyString	./net/internal/socktest/switch_stub.go	/^func familyString(family int) string { return "<nil>" }$/;"	f
farFuture	./encoding/asn1/marshal_test.go	/^func farFuture() time.Time {$/;"	f
fast	./cmd/compile/internal/gc/walk.go	/^			var fast *Node$/;"	v
fastXORBytes	./crypto/cipher/xor.go	/^func fastXORBytes(dst, a, b []byte) int {$/;"	f
fastXORWords	./crypto/cipher/xor.go	/^func fastXORWords(dst, a, b []byte) {$/;"	f
fastrand1	./runtime/stubs.go	/^func fastrand1() uint32$/;"	f
fatal	./cmd/dist/util.go	/^func fatal(format string, args ...interface{}) {$/;"	f
fatalf	./cmd/cgo/util.go	/^func fatalf(msg string, args ...interface{}) {$/;"	f
fatalf	./cmd/go/main.go	/^func fatalf(format string, args ...interface{}) {$/;"	f
fatalf	./runtime/cgo/gcc_android.c	/^fatalf(const char* format, ...)$/;"	f
fatalf	./runtime/cgo/gcc_fatalf.c	/^fatalf(const char* format, ...)$/;"	f
fatfl	./cmd/yacc/yacc.go	/^var fatfl = 1                     \/\/ if on, error is fatal$/;"	v
fault	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) fault() uint32   { return c.info.si_addr }$/;"	f
fault	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) fault() uint64 { return uint64(uintptr(unsafe.Pointer(c.info.si_addr))) }$/;"	f
fault	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) fault() uint32   { return uint32(c.info.si_addr) }$/;"	f
fault	./runtime/signal_linux_arm.go	/^func (c *sigctxt) fault() uint32     { return c.regs().fault_address }$/;"	f
fault	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) fault() uint64     { return c.regs().fault_address }$/;"	f
fault	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) fault() uint64   { return c.regs().dar }$/;"	f
fault	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) fault() uint32   { return ^uint32(0) }$/;"	f
fault	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) fault() uint32    { return uint32(c.info._reason) }$/;"	f
fault	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) fault() uint32   { return c.sigaddr() }$/;"	f
faultAddrs	./runtime/runtime_test.go	/^var faultAddrs = []uint64{$/;"	v
faultInjectReader	./encoding/base64/base64_test.go	/^type faultInjectReader struct {$/;"	t
favoriteAddrFamily	./net/ipsock_posix.go	/^func favoriteAddrFamily(net string, laddr, raddr sockaddr, mode string) (family int, ipv6only bool) {$/;"	f
fb	./bytes/bytes_test.go	/^		var fb func([]byte, []byte) []byte$/;"	v
fcmp64	./runtime/softfloat64.go	/^func fcmp64(f, g uint64) (cmp int32, isnan bool) {$/;"	f
fcntl	./runtime/netpoll_solaris.go	/^func fcntl(fd, cmd int32, arg uintptr) int32 {$/;"	f
fcntl	./syscall/zsyscall_darwin_386.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_darwin_amd64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_darwin_arm.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_darwin_arm64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_dragonfly_amd64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_freebsd_386.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_freebsd_amd64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_freebsd_arm.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_linux_386.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_linux_amd64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_linux_arm.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_linux_arm64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_linux_ppc64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_linux_ppc64le.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_netbsd_386.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_netbsd_amd64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_netbsd_arm.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_openbsd_386.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_openbsd_amd64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_openbsd_arm.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl	./syscall/zsyscall_solaris_amd64.go	/^func fcntl(fd int, cmd int, arg int) (val int, err error) {$/;"	f
fcntl1	./syscall/exec_solaris.go	/^func fcntl1(fd uintptr, cmd uintptr, arg uintptr) (val uintptr, err Errno)$/;"	f
fcntl64Syscall	./syscall/flock.go	/^var fcntl64Syscall uintptr = SYS_FCNTL$/;"	v
fcode	./cmd/yacc/yacc.go	/^var fcode = &bytes.Buffer{} \/\/ saved code$/;"	v
fcount	./cmd/compile/internal/big/floatconv.go	/^	var fcount int \/\/ fractional digit count; valid if <= 0$/;"	v
fcount	./math/big/floatconv.go	/^	var fcount int \/\/ fractional digit count; valid if <= 0$/;"	v
fd2path	./syscall/zsyscall_plan9_386.go	/^func fd2path(fd int, buf []byte) (err error) {$/;"	f
fd2path	./syscall/zsyscall_plan9_amd64.go	/^func fd2path(fd int, buf []byte) (err error) {$/;"	f
fdMutex	./net/fd_mutex.go	/^type fdMutex struct {$/;"	t
fdToFile	./syscall/fd_nacl.go	/^func fdToFile(fd int) (*file, error) {$/;"	f
fdToFsysFile	./syscall/fs_nacl.go	/^func fdToFsysFile(fd int) (*fsysFile, error) {$/;"	f
fdToNetFile	./syscall/net_nacl.go	/^func fdToNetFile(fd int) (*netFile, error) {$/;"	f
fdata	./sort/search_test.go	/^var fdata = []float64{0: -3.14, 1: 0, 2: 1, 3: 2, 4: 1000.7}$/;"	v
fdata	./syscall/unzip_nacl.go	/^		var fdata []byte$/;"	v
fdct	./image/jpeg/fdct.go	/^func fdct(b *block) {$/;"	f
fdeo	./cmd/link/internal/ld/dwarf.go	/^	var fdeo int64$/;"	v
fdesize	./cmd/link/internal/ld/dwarf.go	/^	var fdesize int64$/;"	v
fdim	./math/all_test.go	/^var fdim = []float64{$/;"	v
fdimSC	./math/all_test.go	/^var fdimSC = []float64{$/;"	v
fdiv	./strconv/ftoa_test.go	/^func fdiv(a, b float64) float64 { return a \/ b } \/\/ keep compiler in the dark$/;"	f
fdiv64	./runtime/softfloat64.go	/^func fdiv64(f, g uint64) uint64 {$/;"	f
fdriver	./database/sql/fakedb_test.go	/^var fdriver driver.Driver = &fakeDriver{}$/;"	v
fdtype	./cmd/yacc/yacc.go	/^func fdtype(t int) int {$/;"	f
fdx	./syscall/syscall_unix.go	/^	var fdx [2]int32$/;"	v
fe	./math/rand/exp.go	/^var fe = [256]float32{$/;"	v
featureCtx	./cmd/api/goapi.go	/^	var featureCtx = make(map[string]map[string]bool) \/\/ feature -> context name -> true$/;"	v
featureWithoutContext	./cmd/api/goapi.go	/^func featureWithoutContext(f string) string {$/;"	f
features	./cmd/api/goapi.go	/^	var features []string$/;"	v
feistel	./crypto/des/block.go	/^func feistel(right uint32, key uint64) (result uint32) {$/;"	f
feistelBox	./crypto/des/block.go	/^var feistelBox [8][64]uint32$/;"	v
fermatInverse	./crypto/dsa/dsa.go	/^func fermatInverse(k, P *big.Int) *big.Int {$/;"	f
fermatInverse	./crypto/ecdsa/ecdsa.go	/^func fermatInverse(k, N *big.Int) *big.Int {$/;"	f
fetchCertIDs	./crypto/x509/root_darwin_arm_gen.go	/^func fetchCertIDs() ([]certID, error) {$/;"	f
fetchGoogle	./net/external_test.go	/^func fetchGoogle(dial func(string, string) (Conn, error), network, address string) error {$/;"	f
fetchGroup	./cmd/go/vcs.go	/^var fetchGroup singleflight.Group$/;"	v
fetchResult	./cmd/go/vcs.go	/^type fetchResult struct {$/;"	t
ff	./debug/macho/fat.go	/^	var ff FatFile$/;"	v
ff	./math/cmplx/cmath_test.go	/^type ff struct {$/;"	t
fgetd	./runtime/softfloat_arm.go	/^func fgetd(reg uint32) uint64 {$/;"	f
fgo2	./cmd/cgo/out.go	/^	var fgo2, fc io.Writer$/;"	v
fh	./cmd/link/internal/ld/pe.go	/^var fh IMAGE_FILE_HEADER$/;"	v
fhi	./cmd/compile/internal/arm/gsubr.go	/^		var fhi gc.Node$/;"	v
fhi	./cmd/compile/internal/arm/gsubr.go	/^	var fhi gc.Node$/;"	v
fhi	./cmd/compile/internal/x86/gsubr.go	/^		var fhi gc.Node$/;"	v
fi	./math/all_test.go	/^type fi struct {$/;"	t
fi	./os/stat_windows.go	/^	var fi FileInfo$/;"	v
fi	./reflect/all_test.go	/^	var fi struct {$/;"	v
fib	./go/types/example_test.go	/^	\/\/ func fib(x int) int:$/;"	f
fib	./go/types/example_test.go	/^func fib(x int) int {$/;"	f
fibo	./cmd/compile/internal/big/nat_test.go	/^func fibo(n int) nat {$/;"	f
fibo	./go/printer/printer_test.go	/^func fibo(n int) {$/;"	f
fibo	./math/big/nat_test.go	/^func fibo(n int) nat {$/;"	f
fiboNums	./cmd/compile/internal/big/nat_test.go	/^var fiboNums = []string{$/;"	v
fiboNums	./math/big/nat_test.go	/^var fiboNums = []string{$/;"	v
field	./cmd/compile/internal/gc/reflect.go	/^	var field [12]*Type$/;"	v
field	./cmd/compile/internal/gc/reflect.go	/^	var field [8]*Type$/;"	v
field	./encoding/gob/decode.go	/^		var field reflect.Value$/;"	v
field	./encoding/gob/type.go	/^\/\/ It will be transmitted only if it is exported and not a chan or func field$/;"	f
field	./encoding/json/encode.go	/^type field struct {$/;"	t
field	./reflect/all_test.go	/^	var field StructField$/;"	v
field	./runtime/heapdump.go	/^\/\/ Dump all the types that appear in the type field of$/;"	t
fieldByIndex	./encoding/json/encode.go	/^func fieldByIndex(v reflect.Value, index []int) reflect.Value {$/;"	f
fieldCache	./encoding/json/encode.go	/^var fieldCache struct {$/;"	v
fieldFlags	./encoding/xml/typeinfo.go	/^type fieldFlags int$/;"	t
fieldIndex	./go/types/lookup.go	/^func fieldIndex(fields []*Var, pkg *Package, name string) int {$/;"	f
fieldInfo	./encoding/xml/typeinfo.go	/^type fieldInfo struct {$/;"	t
fieldList	./go/printer/nodes.go	/^func (p *printer) fieldList(fields *ast.FieldList, isStruct, isIncomplete bool) {$/;"	f
fieldName	./go/ast/filter.go	/^func fieldName(x Expr) *Ident {$/;"	f
fieldName	./unicode/maketables.go	/^var fieldName = []string{$/;"	v
fieldNeedsQuotes	./encoding/csv/writer.go	/^func (w *Writer) fieldNeedsQuotes(field string) bool {$/;"	f
fieldParameters	./encoding/asn1/common.go	/^type fieldParameters struct {$/;"	t
fieldPrefix	./cmd/cgo/gcc.go	/^func fieldPrefix(fld []*ast.Field) string {$/;"	f
fieldScan	./reflect/type.go	/^type fieldScan struct {$/;"	t
fieldSet	./go/types/methodset.go	/^type fieldSet map[string]*Var \/\/ a nil entry indicates a name collision$/;"	t
fieldTests	./reflect/all_test.go	/^var fieldTests = []FTest{$/;"	v
fieldType	./encoding/gob/doc.go	/^	type fieldType struct {$/;"	t
fieldType	./encoding/gob/type.go	/^type fieldType struct {$/;"	t
fieldValue	./encoding/gob/debug.go	/^func (deb *debugger) fieldValue(indent tab, id typeId) {$/;"	f
fielddup	./cmd/compile/internal/gc/typecheck.go	/^func fielddup(n *Node, hash map[string]bool) {$/;"	f
fieldoffset	./cmd/compile/internal/gc/plive.go	/^		var fieldoffset int64$/;"	v
fields	./encoding/json/encode.go	/^	var fields []field$/;"	v
fields	./go/doc/reader.go	/^	var fields *ast.FieldList$/;"	v
fields	./go/doc/reader.go	/^func fields(typ ast.Expr) (list []*ast.Field, isStruct bool) {$/;"	f
fields	./go/internal/gccgoimporter/parser.go	/^	var fields []*types.Var$/;"	v
fields	./go/internal/gcimporter/gcimporter.go	/^	var fields []*types.Var$/;"	v
fields	./go/types/typexpr.go	/^	var fields []*Var$/;"	v
fields	./time/zoneinfo_plan9.go	/^func fields(s string) []string {$/;"	f
fieldsFuncTests	./bytes/bytes_test.go	/^	var fieldsFuncTests = []FieldsTest{$/;"	v
fieldsInput	./bytes/bytes_test.go	/^var fieldsInput = makeFieldsInput()$/;"	v
fieldsInput	./strings/strings_test.go	/^var fieldsInput = makeFieldsInput()$/;"	v
fieldstests	./bytes/bytes_test.go	/^var fieldstests = []FieldsTest{$/;"	v
fieldstests	./strings/strings_test.go	/^var fieldstests = []FieldsTest{$/;"	v
file	./cmd/api/run.go	/^func file(s ...string) string {$/;"	f
file	./cmd/compile/internal/gc/go.y	/^file:$/;"	l
file	./cmd/go/alldocs.go	/^	filetype    file types$/;"	t
file	./cmd/pprof/pprof.go	/^type file struct {$/;"	t
file	./go/format/format.go	/^	var file *ast.File$/;"	v
file	./go/printer/nodes.go	/^func (p *printer) file(src *ast.File) {$/;"	f
file	./go/token/position.go	/^		var file *File$/;"	v
file	./go/token/position.go	/^func (s *FileSet) file(p Pos) *File {$/;"	f
file	./log/log.go	/^	var file string$/;"	v
file	./net/fd_plan9.go	/^func (fd *netFD) file(f *os.File, s string) (*os.File, error) {$/;"	f
file	./net/hosts.go	/^		var file *file$/;"	v
file	./net/ipsock_plan9.go	/^	var file *file$/;"	v
file	./net/parse.go	/^type file struct {$/;"	t
file	./net/port_unix.go	/^	var file *file$/;"	v
file	./os/file_plan9.go	/^type file struct {$/;"	t
file	./os/file_unix.go	/^type file struct {$/;"	t
file	./os/file_windows.go	/^type file struct {$/;"	t
file	./os/os_test.go	/^		var file *File$/;"	v
file	./regexp/testdata/testregex.c	/^	char*		file;$/;"	m	struct:__anon2	file:
file	./runtime/env_plan9.go	/^	var file [128]byte$/;"	v
file	./syscall/fd_nacl.go	/^type file struct {$/;"	t
file	./syscall/zerrors_linux_386.go	/^	118: "not a XENIX named type file",$/;"	t
file	./syscall/zerrors_linux_386.go	/^	120: "is a named type file",$/;"	t
file	./syscall/zerrors_linux_amd64.go	/^	118: "not a XENIX named type file",$/;"	t
file	./syscall/zerrors_linux_amd64.go	/^	120: "is a named type file",$/;"	t
file	./syscall/zerrors_linux_arm.go	/^	118: "not a XENIX named type file",$/;"	t
file	./syscall/zerrors_linux_arm.go	/^	120: "is a named type file",$/;"	t
file	./syscall/zerrors_linux_arm64.go	/^	118: "not a XENIX named type file",$/;"	t
file	./syscall/zerrors_linux_arm64.go	/^	120: "is a named type file",$/;"	t
file	./syscall/zerrors_linux_ppc64.go	/^	118: "not a XENIX named type file",$/;"	t
file	./syscall/zerrors_linux_ppc64.go	/^	120: "is a named type file",$/;"	t
file	./syscall/zerrors_linux_ppc64le.go	/^	118: "not a XENIX named type file",$/;"	t
file	./syscall/zerrors_linux_ppc64le.go	/^	120: "is a named type file",$/;"	t
file	./syscall/zerrors_windows.go	/^	EISNAM - APPLICATION_ERROR:          "is a named type file",$/;"	t
file	./syscall/zerrors_windows.go	/^	ENOTNAM - APPLICATION_ERROR:         "not a XENIX named type file",$/;"	t
fileAddr	./net/file.go	/^type fileAddr string$/;"	t
fileConn	./net/file_plan9.go	/^func fileConn(f *os.File) (Conn, error) {$/;"	f
fileConn	./net/file_stub.go	/^func fileConn(f *os.File) (Conn, error)             { return nil, syscall.ENOPROTOOPT }$/;"	f
fileConn	./net/file_unix.go	/^func fileConn(f *os.File) (Conn, error) {$/;"	f
fileConn	./net/file_windows.go	/^func fileConn(f *os.File) (Conn, error) {$/;"	f
fileExports	./go/doc/exports.go	/^func (r *reader) fileExports(src *ast.File) {$/;"	f
fileFeatures	./cmd/api/goapi.go	/^func fileFeatures(filename string) []string {$/;"	f
fileHandler	./net/http/fs.go	/^type fileHandler struct {$/;"	t
fileImpl	./syscall/fd_nacl.go	/^type fileImpl interface {$/;"	t
fileInfoFromStat	./os/stat_darwin.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_dragonfly.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_freebsd.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_linux.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_nacl.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_netbsd.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_openbsd.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_plan9.go	/^func fileInfoFromStat(d *syscall.Dir) FileInfo {$/;"	f
fileInfoFromStat	./os/stat_solaris.go	/^func fileInfoFromStat(st *syscall.Stat_t, name string) FileInfo {$/;"	f
fileLineAt	./cmd/internal/obj/obj.go	/^func (stk *LineStack) fileLineAt(lineno int) int {$/;"	f
fileListener	./net/file_plan9.go	/^func fileListener(f *os.File) (Listener, error) {$/;"	f
fileListener	./net/file_stub.go	/^func fileListener(f *os.File) (Listener, error)     { return nil, syscall.ENOPROTOOPT }$/;"	f
fileListener	./net/file_unix.go	/^func fileListener(f *os.File) (Listener, error) {$/;"	f
fileListener	./net/file_windows.go	/^func fileListener(f *os.File) (Listener, error) {$/;"	f
fileListenerTests	./net/file_test.go	/^var fileListenerTests = []struct {$/;"	v
fileModeToUnixMode	./archive/zip/struct.go	/^func fileModeToUnixMode(mode os.FileMode) uint32 {$/;"	f
fileNames	./cmd/pprof/internal/symbolizer/symbolizer.go	/^	var fileNames []string$/;"	v
filePacketConn	./net/file_plan9.go	/^func filePacketConn(f *os.File) (PacketConn, error) {$/;"	f
filePacketConn	./net/file_stub.go	/^func filePacketConn(f *os.File) (PacketConn, error) { return nil, syscall.ENOPROTOOPT }$/;"	f
filePacketConn	./net/file_unix.go	/^func filePacketConn(f *os.File) (PacketConn, error) {$/;"	f
filePacketConn	./net/file_windows.go	/^func filePacketConn(f *os.File) (PacketConn, error) {$/;"	f
filePacketConnTests	./net/file_test.go	/^var filePacketConnTests = []struct {$/;"	v
fileServerCleanPathDir	./net/http/fs_test.go	/^type fileServerCleanPathDir struct {$/;"	t
fileStat	./os/types_notwin.go	/^type fileStat struct {$/;"	t
fileStat	./os/types_windows.go	/^type fileStat struct {$/;"	t
fileTest	./debug/elf/file_test.go	/^type fileTest struct {$/;"	t
fileTest	./debug/macho/file_test.go	/^type fileTest struct {$/;"	t
fileTest	./debug/pe/file_test.go	/^type fileTest struct {$/;"	t
fileTest	./debug/plan9obj/file_test.go	/^type fileTest struct {$/;"	t
fileTests	./debug/elf/file_test.go	/^var fileTests = []fileTest{$/;"	v
fileTests	./debug/macho/file_test.go	/^var fileTests = []fileTest{$/;"	v
fileTests	./debug/pe/file_test.go	/^var fileTests = []fileTest{$/;"	v
fileTests	./debug/plan9obj/file_test.go	/^var fileTests = []fileTest{$/;"	v
fileTransport	./net/http/filetransport.go	/^type fileTransport struct {$/;"	t
fileWriter	./archive/zip/writer.go	/^type fileWriter struct {$/;"	t
fileline	./cmd/pprof/internal/report/source.go	/^		var fileline string$/;"	v
filename	./compress/flate/gen.go	/^var filename = flag.String("output", "fixedhuff.go", "output file name")$/;"	v
filename	./crypto/md5/gen.go	/^var filename = flag.String("output", "md5block.go", "output file name")$/;"	v
filename	./go/types/resolver.go	/^func (check *Checker) filename(fileNo int) string {$/;"	f
filename	./image/color/palette/gen.go	/^var filename = flag.String("output", "palette.go", "output file name")$/;"	v
filename	./strconv/makeisprint.go	/^var filename = flag.String("output", "isprint.go", "output file name")$/;"	v
filename	./time/genzabbrs.go	/^var filename = flag.String("output", "zoneinfo_abbrs_windows.go", "output file name")$/;"	v
filenames	./compress/lzw/writer_test.go	/^var filenames = []string{$/;"	v
filenames	./compress/zlib/writer_test.go	/^var filenames = []string{$/;"	v
filenames	./go/types/stdlib_test.go	/^	var filenames []string$/;"	v
filenames	./image/png/reader_test.go	/^var filenames = []string{$/;"	v
filenamesPaletted	./image/png/reader_test.go	/^var filenamesPaletted = []string{$/;"	v
filenamesShort	./image/png/reader_test.go	/^var filenamesShort = []string{$/;"	v
files	./archive/tar/example_test.go	/^	var files = []struct {$/;"	v
files	./archive/zip/example_test.go	/^	var files = []struct {$/;"	v
files	./cmd/api/goapi.go	/^	var files []*ast.File$/;"	v
files	./cmd/cover/html.go	/^		var files = document.getElementById('files');$/;"	v
files	./cmd/vet/main.go	/^	var files []*File$/;"	v
files	./go/doc/doc_test.go	/^var files = flag.String("files", "", "consider only Go test files matching this regular expression")$/;"	v
files	./go/types/check_test.go	/^	var files []*ast.File$/;"	v
files	./go/types/eval_test.go	/^	var files []*ast.File$/;"	v
files	./go/types/example_test.go	/^	var files []*ast.File$/;"	v
files	./go/types/resolver_test.go	/^	var files []*ast.File$/;"	v
files	./go/types/self_test.go	/^	var files []*ast.File$/;"	v
files	./go/types/stdlib_test.go	/^	var files []*ast.File$/;"	v
files	./os/exec/exec_test.go	/^			var files []*os.File$/;"	v
files	./syscall/fd_nacl.go	/^var files struct {$/;"	v
fill	./bufio/bufio.go	/^func (b *Reader) fill() {$/;"	f
fill	./image/jpeg/reader.go	/^func (d *decoder) fill() error {$/;"	f
fillAlpha	./image/draw/draw_test.go	/^func fillAlpha(alpha int) image.Image {$/;"	f
fillBlue	./image/draw/draw_test.go	/^func fillBlue(alpha int) image.Image {$/;"	f
fillBytes	./bytes/buffer_test.go	/^func fillBytes(t *testing.T, testname string, buf *Buffer, s string, n int, fub []byte) string {$/;"	f
fillDeflate	./compress/flate/deflate.go	/^func (d *compressor) fillDeflate(b []byte) int {$/;"	f
fillField	./encoding/json/encode.go	/^func fillField(f field) field {$/;"	f
fillStore	./compress/flate/deflate.go	/^func (d *compressor) fillStore(b []byte) int {$/;"	f
fillString	./bytes/buffer_test.go	/^func fillString(t *testing.T, testname string, buf *Buffer, s string, n int, fus string) string {$/;"	f
fillnop	./cmd/internal/obj/x86/asm6.go	/^func fillnop(p []byte, n int) {$/;"	f
fillptrmask	./cmd/compile/internal/gc/reflect.go	/^func fillptrmask(t *Type, ptrmask []byte) {$/;"	f
fillstack	./runtime/stack1.go	/^func fillstack(stk stack, b byte) {$/;"	f
filter	./cmd/dist/util.go	/^func filter(list []string, f func(string) bool) []string {$/;"	f
filter	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func filter(gen func(func([]byte)), ok func([]byte) bool) func(func([]byte)) {$/;"	f
filter	./image/png/writer.go	/^func filter(cr *[nFilter][]byte, pr []byte, bpp int) int {$/;"	f
filter	./net/ipsock.go	/^	var filter func(IPAddr) bool$/;"	v
filterAddrList	./net/ipsock.go	/^func filterAddrList(filter func(IPAddr) bool, ips []IPAddr, inetaddr func(IPAddr) Addr) (addrList, error) {$/;"	f
filterDecl	./go/ast/filter.go	/^func filterDecl(decl Decl, f Filter, export bool) bool {$/;"	f
filterDecl	./go/doc/exports.go	/^func (r *reader) filterDecl(decl ast.Decl) bool {$/;"	f
filterFieldList	./go/ast/filter.go	/^func filterFieldList(fields *FieldList, filter Filter, export bool) (removedFields bool) {$/;"	f
filterFieldList	./go/doc/exports.go	/^func (r *reader) filterFieldList(parent *namedType, fields *ast.FieldList, ityp *ast.InterfaceType) (removedFields bool) {$/;"	f
filterFile	./go/ast/filter.go	/^func filterFile(src *File, f Filter, export bool) bool {$/;"	f
filterFuncs	./go/doc/filter.go	/^func filterFuncs(a []*Func, f Filter) []*Func {$/;"	f
filterIdentList	./go/ast/filter.go	/^func filterIdentList(list []*Ident, f Filter) []*Ident {$/;"	f
filterIdentList	./go/doc/exports.go	/^func filterIdentList(list []*ast.Ident) []*ast.Ident {$/;"	f
filterPackage	./go/ast/filter.go	/^func filterPackage(pkg *Package, f Filter, export bool) bool {$/;"	f
filterPaeth	./image/png/paeth.go	/^func filterPaeth(cdat, pdat []byte, bytesPerPixel int) {$/;"	f
filterPaeth	./image/png/paeth_test.go	/^\/\/ slowFilterPaeth is a slow but simple implementation of func filterPaeth.$/;"	f
filterParamList	./go/ast/filter.go	/^func filterParamList(fields *FieldList, filter Filter, export bool) bool {$/;"	f
filterParamList	./go/doc/exports.go	/^func (r *reader) filterParamList(fields *ast.FieldList) {$/;"	f
filterSpec	./go/ast/filter.go	/^func filterSpec(spec Spec, f Filter, export bool) bool {$/;"	f
filterSpec	./go/doc/exports.go	/^func (r *reader) filterSpec(spec ast.Spec, tok token.Token) bool {$/;"	f
filterSpecList	./go/ast/filter.go	/^func filterSpecList(list []Spec, f Filter, export bool) []Spec {$/;"	f
filterSpecList	./go/doc/exports.go	/^func (r *reader) filterSpecList(list []ast.Spec, tok token.Token) []ast.Spec {$/;"	f
filterType	./go/ast/filter.go	/^func filterType(typ Expr, f Filter, export bool) bool {$/;"	f
filterType	./go/doc/exports.go	/^func (r *reader) filterType(parent *namedType, typ ast.Expr) {$/;"	f
filterTypes	./go/doc/filter.go	/^func filterTypes(a []*Type, f Filter) []*Type {$/;"	f
filterValues	./go/doc/filter.go	/^func filterValues(a []*Value, f Filter) []*Value {$/;"	f
fin	./reflect/type.go	/^	var fin, fout []*rtype$/;"	v
fin	./runtime/mfinal_test.go	/^func fin(v *int) {$/;"	f
fin	./sync/pool_test.go	/^		var fin, fin1 uint32$/;"	v
finVar	./runtime/race/testdata/finalizer_test.go	/^var finVar struct {$/;"	v
finalClose	./database/sql/sql.go	/^func (dc *driverConn) finalClose() error {$/;"	f
finalClose	./database/sql/sql.go	/^func (s *Stmt) finalClose() error {$/;"	f
finalCloser	./database/sql/sql.go	/^type finalCloser interface {$/;"	t
finalFlush	./net/http/server.go	/^func (c *conn) finalFlush() {$/;"	f
finalPermutation	./crypto/des/const.go	/^var finalPermutation = [64]byte{$/;"	v
finalizer	./runtime/mfinal.go	/^type finalizer struct {$/;"	t
finalizer1	./runtime/mfinal.go	/^var finalizer1 = [...]byte{$/;"	v
finalizerTests	./runtime/mfinal_test.go	/^	var finalizerTests = []struct {$/;"	v
finblock	./runtime/mfinal.go	/^type finblock struct {$/;"	t
finc	./runtime/mfinal.go	/^var finc *finblock \/\/ cache of free blocks$/;"	v
find	./cmd/link/internal/ld/dwarf.go	/^func find(die *DWDie, name string) *DWDie {$/;"	f
find	./index/suffixarray/suffixarray_test.go	/^func find(src, s string, n int) []int {$/;"	f
find	./net/textproto/reader_test.go	/^		var find string$/;"	v
find	./regexp/onepass.go	/^func find(prog *syntax.Prog, f func(*syntax.Prog, int) bool) (matches []uint32) {$/;"	f
find	./runtime/trace.go	/^func (tab *traceStackTable) find(pcs []uintptr, hash uintptr) uint32 {$/;"	f
findBodyOffset	./archive/zip/reader.go	/^func (f *File) findBodyOffset() (int64, error) {$/;"	f
findDead	./cmd/vet/deadcode.go	/^func (d *deadState) findDead(stmt ast.Stmt) {$/;"	f
findDirectory64End	./archive/zip/reader.go	/^func findDirectory64End(r io.ReaderAt, directoryEndOffset int64) (int64, error) {$/;"	f
findEnv	./cmd/go/env.go	/^func findEnv(env []envVar, name string) string {$/;"	f
findExecCmd	./cmd/go/run.go	/^func findExecCmd() []string {$/;"	f
findExecutable	./os/exec/lp_plan9.go	/^func findExecutable(file string) error {$/;"	f
findExecutable	./os/exec/lp_unix.go	/^func findExecutable(file string) error {$/;"	f
findExecutable	./os/exec/lp_windows.go	/^func findExecutable(file string, exts []string) (string, error) {$/;"	f
findExportFile	./go/internal/gccgoimporter/importer.go	/^func findExportFile(searchpaths []string, pkgpath string) (string, error) {$/;"	f
findFile	./cmd/cover/func.go	/^func findFile(file string) (string, error) {$/;"	f
findFileLine	./debug/gosym/pclntab.go	/^func (t *LineTable) findFileLine(entry uint64, filetab, linetab uint32, filenum, line int32) uint64 {$/;"	f
findFirstFile1	./syscall/zsyscall_windows.go	/^func findFirstFile1(name *uint16, data *win32finddata1) (handle Handle, err error) {$/;"	f
findFunc	./debug/gosym/pclntab.go	/^func (t *LineTable) findFunc(pc uint64) []byte {$/;"	f
findFuncs	./cmd/cover/func.go	/^func findFuncs(name string) ([]*FuncExtent, error) {$/;"	f
findFuncs	./cmd/doc/pkg.go	/^func (pkg *Package) findFuncs(symbol string) (funcs []*doc.Func) {$/;"	f
findFunction	./text/template/funcs.go	/^func findFunction(name string, tmpl *Template) (reflect.Value, bool) {$/;"	f
findInterfaceInfo	./net/interface_windows.go	/^func findInterfaceInfo(iis []syscall.InterfaceInfo, paddr *windows.IpAdapterAddresses) *syscall.InterfaceInfo {$/;"	f
findInternal	./cmd/go/pkg.go	/^func findInternal(path string) (index int, ok bool) {$/;"	f
findLabels	./cmd/vet/deadcode.go	/^func (d *deadState) findLabels(stmt ast.Stmt) {$/;"	f
findLatinOffset	./unicode/maketables.go	/^func findLatinOffset(ranges []unicode.Range32) int {$/;"	f
findLineEnd	./go/scanner/scanner.go	/^func (s *Scanner) findLineEnd() bool {$/;"	f
findMatch	./compress/flate/deflate.go	/^func (d *compressor) findMatch(pos int, prevHead int, prevLength int, lookahead int) (length, offset int, ok bool) {$/;"	f
findMatchingSymbol	./cmd/pprof/internal/report/source.go	/^func findMatchingSymbol(objSyms []*objSymbol, ns nodes) *objSymbol {$/;"	f
findNextFile1	./syscall/zsyscall_windows.go	/^func findNextFile1(handle Handle, data *win32finddata1) (err error) {$/;"	f
findObject	./runtime/mfinal.go	/^func findObject(v unsafe.Pointer) (s *mspan, x unsafe.Pointer, n uintptr) {$/;"	f
findOrAddTag	./cmd/pprof/internal/report/report.go	/^func (m tagMap) findOrAddTag(label, unit string, value int64) *tag {$/;"	f
findOrInsertNode	./cmd/pprof/internal/report/report.go	/^func (m nodeMap) findOrInsertNode(info nodeInfo) *node {$/;"	f
findPESymbol	./cmd/internal/objfile/pe.go	/^func findPESymbol(f *pe.File, name string) (*pe.Symbol, error) {$/;"	f
findPackage	./cmd/doc/main.go	/^func findPackage(pkg string) string {$/;"	f
findPath	./go/types/initorder.go	/^func findPath(a, z *objNode, mark int) []*objNode {$/;"	f
findPlan9Symbol	./cmd/internal/objfile/plan9obj.go	/^func findPlan9Symbol(f *plan9obj.File, name string) (*plan9obj.Sym, error) {$/;"	f
findProcess	./os/exec_plan9.go	/^func findProcess(pid int) (p *Process, err error) {$/;"	f
findProcess	./os/exec_unix.go	/^func findProcess(pid int) (p *Process, err error) {$/;"	f
findProcess	./os/exec_windows.go	/^func findProcess(pid int) (p *Process, err error) {$/;"	f
findRunnableGCWorker	./runtime/mgc.go	/^func (c *gcControllerState) findRunnableGCWorker(_p_ *p) *g {$/;"	f
findSampleIndex	./cmd/pprof/internal/driver/interactive.go	/^func findSampleIndex(p *profile.Profile, prefix, sampleType string) int {$/;"	f
findShlibSection	./cmd/link/internal/ld/decodesym.go	/^func findShlibSection(path string, addr uint64) *elf.Section {$/;"	f
findSignatureInBlock	./archive/zip/reader.go	/^func findSignatureInBlock(b []byte) int {$/;"	f
findTests	./regexp/find_test.go	/^var findTests = []FindTest{$/;"	v
findTypeSpec	./cmd/doc/pkg.go	/^func (pkg *Package) findTypeSpec(decl *ast.GenDecl, symbol string) *ast.TypeSpec {$/;"	f
findTypes	./cmd/doc/pkg.go	/^func (pkg *Package) findTypes(symbol string) (types []*doc.Type) {$/;"	f
findValues	./cmd/doc/pkg.go	/^func (pkg *Package) findValues(symbol string, docValues []*doc.Value) (values []*doc.Value) {$/;"	f
findVendor	./cmd/go/pkg.go	/^func findVendor(path string) (index int, ok bool) {$/;"	f
findVerifiedParents	./crypto/x509/cert_pool.go	/^func (s *CertPool) findVerifiedParents(cert *Certificate) (parents []int, errCert *Certificate, err error) {$/;"	f
find_goroutine	./runtime/runtime-gdb.py	/^def find_goroutine(goid):$/;"	f
finddebugruntimepath	./cmd/link/internal/ld/dwarf.go	/^func finddebugruntimepath(s *LSym) {$/;"	f
findfunc	./runtime/symtab.go	/^func findfunc(pc uintptr) *_func {$/;"	f
findfuncbucket	./runtime/symtab.go	/^type findfuncbucket struct {$/;"	t
findfunctab	./cmd/link/internal/ld/pcln.go	/^func findfunctab() {$/;"	f
findinc	./cmd/compile/internal/arm/peep.go	/^func findinc(r *gc.Flow, r2 *gc.Flow, v *obj.Addr) *gc.Flow {$/;"	f
findmoduledatap	./runtime/symtab.go	/^func findmoduledatap(pc uintptr) *moduledata {$/;"	f
findnull	./runtime/string1.go	/^func findnull(s *byte) int {$/;"	f
findnullw	./runtime/string1.go	/^func findnullw(s *uint16) int {$/;"	f
findpkg	./cmd/compile/internal/gc/lex.go	/^func findpkg(name string) (file string, ok bool) {$/;"	f
findpre	./cmd/compile/internal/arm/peep.go	/^func findpre(r *gc.Flow, v *obj.Addr) *gc.Flow {$/;"	f
findrunnable	./runtime/proc1.go	/^func findrunnable() (gp *g, inheritTime bool) {$/;"	f
findshlib	./cmd/link/internal/ld/lib.go	/^func findshlib(shlib string) string {$/;"	f
findtype	./cmd/compile/internal/gc/dcl.go	/^func findtype(l *NodeList) *Node {$/;"	f
findu1	./cmd/compile/internal/arm/peep.go	/^func findu1(r *gc.Flow, v *obj.Addr) bool {$/;"	f
finduse	./cmd/compile/internal/arm/peep.go	/^func finduse(g *gc.Graph, r *gc.Flow, v *obj.Addr) bool {$/;"	f
fing	./runtime/mfinal.go	/^var fing *g        \/\/ goroutine that runs finalizers$/;"	v
fingwait	./runtime/mfinal.go	/^var fingwait bool$/;"	v
fingwake	./runtime/mfinal.go	/^var fingwake bool$/;"	v
finish	./database/sql/sql_test.go	/^func (c *concurrentDBExecTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentDBQueryTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentRandomTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentStmtExecTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentStmtQueryTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentTxExecTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentTxQueryTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentTxStmtExecTest) finish(t testing.TB) {$/;"	f
finish	./database/sql/sql_test.go	/^func (c *concurrentTxStmtQueryTest) finish(t testing.TB) {$/;"	f
finish	./net/http/filetransport.go	/^func (pr *populateResponse) finish() {$/;"	f
finishRequest	./net/http/server.go	/^func (w *response) finishRequest() {$/;"	f
finishcompare	./cmd/compile/internal/gc/walk.go	/^func finishcompare(np **Node, n, r *Node, init **NodeList) {$/;"	f
finished	./crypto/rc4/rc4_amd64.s	/^finished:$/;"	l
finished	./crypto/rc4/rc4_amd64p32.s	/^finished:$/;"	l
finishedHash	./crypto/tls/prf.go	/^type finishedHash struct {$/;"	t
finishedMsg	./crypto/tls/handshake_messages.go	/^type finishedMsg struct {$/;"	t
finishedSum30	./crypto/tls/prf.go	/^func finishedSum30(md5, sha1 hash.Hash, masterSecret []byte, magic []byte) []byte {$/;"	f
finishsweep_m	./runtime/mgcsweep.go	/^func finishsweep_m() {$/;"	f
finlock	./runtime/mfinal.go	/^var finlock mutex  \/\/ protects the following variables$/;"	v
finptrmask	./runtime/mfinal.go	/^var finptrmask [_FinBlockSize \/ ptrSize \/ 8]byte$/;"	v
finput	./cmd/yacc/yacc.go	/^var finput *bufio.Reader \/\/ input file$/;"	v
finq	./runtime/mfinal.go	/^var finq *finblock \/\/ list of finalizers that are to be executed$/;"	v
finq_callback	./runtime/heapdump.go	/^func finq_callback(fn *funcval, obj unsafe.Pointer, nret uintptr, fint *_type, ot *ptrtype) {$/;"	f
fintto64	./runtime/softfloat64.go	/^func fintto64(val int64) (f uint64) {$/;"	f
first	./cmd/compile/internal/amd64/gsubr.go	/^	\/\/ goto hard for "convert to cvt type first".$/;"	t
first	./cmd/compile/internal/arm/gsubr.go	/^	\/\/ goto hard for "convert to cvt type first".$/;"	t
first	./cmd/compile/internal/arm64/gsubr.go	/^	\/\/ goto hard for "convert to cvt type first".$/;"	t
first	./cmd/compile/internal/gc/subr.go	/^		var first *Type$/;"	v
first	./cmd/compile/internal/ppc64/gsubr.go	/^	\/\/ goto hard for "convert to cvt type first".$/;"	t
first	./cmd/compile/internal/x86/gsubr.go	/^	\/\/ goto hard for "convert to cvt type first".$/;"	t
first	./encoding/xml/xml.go	/^var first = &unicode.RangeTable{$/;"	v
first	./go/types/stmt.go	/^	var first ast.Stmt$/;"	v
first	./net/conf.go	/^	var first string$/;"	v
first	./net/http/client_test.go	/^	var first string$/;"	v
first	./net/ipsock.go	/^func (addrs addrList) first(strategy func(Addr) bool) Addr {$/;"	f
first	./regexp/syntax/parse.go	/^	var first *Regexp$/;"	v
first	./runtime/map_test.go	/^		var first []int$/;"	v
first	./runtime/panic.go	/^			var first, last *_defer$/;"	v
first	./runtime/proc.go	/^		var first, last *sudog$/;"	v
first	./unicode/maketables.go	/^	var first rune = 0$/;"	v
firstBits	./compress/flate/huffman_bit_writer.go	/^	var firstBits int32 = 4$/;"	v
firstComment	./go/types/stdlib_test.go	/^func firstComment(filename string) string {$/;"	f
firstErr	./net/dial.go	/^	var firstErr error \/\/ The error from the first address is most relevant.$/;"	v
firstErr	./net/listen_test.go	/^		var firstErr, secondErr error$/;"	v
firstErr	./time/zoneinfo_unix.go	/^	var firstErr error$/;"	v
firstLine	./runtime/symtab_test.go	/^var firstLine = lineNumber() \/\/ 0$/;"	v
firstSentenceLen	./go/doc/synopsis.go	/^func firstSentenceLen(s string) int {$/;"	f
firstStackBarrierOffset	./runtime/mgc.go	/^var firstStackBarrierOffset = 1024$/;"	v
firstZoneUsed	./time/zoneinfo.go	/^func (l *Location) firstZoneUsed() bool {$/;"	f
firstcontinuehandler	./runtime/signal_windows.go	/^func firstcontinuehandler(info *exceptionrecord, r *context, gp *g) int32 {$/;"	f
firstcontinuetramp	./runtime/signal_windows.go	/^func firstcontinuetramp()$/;"	f
firstmoduledata	./runtime/symtab.go	/^var firstmoduledata moduledata  \/\/ linker symbol$/;"	v
fis	./net/http/fs_test.go	/^	var fis []os.FileInfo$/;"	v
fitsFloat32	./go/types/expr.go	/^func fitsFloat32(x constant.Value) bool {$/;"	f
fitsFloat64	./go/types/expr.go	/^func fitsFloat64(x constant.Value) bool {$/;"	f
fix	./cmd/fix/fix.go	/^type fix struct {$/;"	t
fixAlloc_Alloc	./runtime/mfixalloc.go	/^func fixAlloc_Alloc(f *fixalloc) unsafe.Pointer {$/;"	f
fixAlloc_Free	./runtime/mfixalloc.go	/^func fixAlloc_Free(f *fixalloc, p unsafe.Pointer) {$/;"	f
fixAlloc_Init	./runtime/mfixalloc.go	/^func fixAlloc_Init(f *fixalloc, size uintptr, first func(unsafe.Pointer, unsafe.Pointer), arg unsafe.Pointer, stat *uint64) {$/;"	f
fixCount	./os/file.go	/^func fixCount(n int, err error) (int, error) {$/;"	f
fixDetachedHead	./cmd/go/vcs.go	/^func (v *vcsCmd) fixDetachedHead(dir string) error {$/;"	f
fixGo	./cmd/cgo/out.go	/^func fixGo(name string) string {$/;"	f
fixGoExact	./cmd/fix/gotypes.go	/^func fixGoExact(f *ast.File) bool {$/;"	f
fixGoTypes	./cmd/fix/gotypes.go	/^func fixGoTypes(f *ast.File) bool {$/;"	f
fixLength	./net/http/transfer.go	/^func fixLength(isResponse bool, status int, requestMethod string, header Header, te []string) (int64, error) {$/;"	f
fixPragmaCacheControl	./net/http/response.go	/^func fixPragmaCacheControl(header Header) {$/;"	f
fixSpace	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func fixSpace(s []byte) []byte {$/;"	f
fixSpace	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func fixSpace(s []byte) []byte {$/;"	f
fixTrailer	./net/http/transfer.go	/^func fixTrailer(header Header, te []string) (Header, error) {$/;"	f
fixTransferEncoding	./net/http/transfer.go	/^func fixTransferEncoding(isResponse bool, requestMethod string, header Header) ([]string, error) {$/;"	f
fixalloc	./runtime/mfixalloc.go	/^type fixalloc struct {$/;"	t
fixautoused	./cmd/compile/internal/gc/gsubr.go	/^func fixautoused(p *obj.Prog) {$/;"	f
fixed	./cmd/fix/fix.go	/^	var fixed bool$/;"	v
fixed	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func fixed(b ...byte) func(func([]byte)) {$/;"	f
fixedArg	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var fixedArg = [...]Arg{$/;"	v
fixedHuffmanDecoder	./compress/flate/fixedhuff.go	/^var fixedHuffmanDecoder = huffmanDecoder{$/;"	v
fixedHuffmanDecoder	./compress/flate/gen.go	/^	fmt.Fprintln(&buf, "var fixedHuffmanDecoder = huffmanDecoder{")$/;"	v
fixedHuffmanDecoder	./syscall/unzip_nacl.go	/^var fixedHuffmanDecoder = huffmanDecoder{$/;"	v
fixedLiteralEncoding	./compress/flate/huffman_code.go	/^var fixedLiteralEncoding *huffmanEncoder = generateFixedLiteralEncoding()$/;"	v
fixedNonceAEAD	./crypto/tls/cipher_suites.go	/^type fixedNonceAEAD struct {$/;"	t
fixedOffsetEncoding	./compress/flate/huffman_code.go	/^var fixedOffsetEncoding *huffmanEncoder = generateFixedOffsetEncoding()$/;"	v
fixes	./cmd/fix/fix.go	/^var fixes []fix$/;"	v
fixjmp	./cmd/compile/internal/gc/popt.go	/^func fixjmp(firstp *obj.Prog) {$/;"	f
fixlbrace	./cmd/compile/internal/gc/y.go	/^func fixlbrace(lbr int) {$/;"	f
fixlog	./cmd/fix/main.go	/^	var fixlog bytes.Buffer$/;"	v
fixselectgo	./cmd/compile/internal/gc/plive.go	/^func fixselectgo(selectgo []*BasicBlock) {$/;"	f
fixwdLocked	./syscall/pwd_plan9.go	/^func fixwdLocked() {$/;"	f
fl	./cmd/link/internal/ld/data.go	/^	var fl int32$/;"	v
flag	./cmd/asm/internal/asm/asm.go	/^	var flag = int64(0)$/;"	v
flag	./cmd/internal/obj/objfile.go	/^	var flag int$/;"	v
flag	./cmd/link/internal/ld/ldelf.go	/^	var flag int$/;"	v
flag	./compress/flate/huffman_bit_writer.go	/^	var flag int32$/;"	v
flag	./flag/flag_test.go	/^	var flag bool$/;"	v
flag	./reflect/value.go	/^type flag uintptr$/;"	t
flag	./regexp/exec.go	/^	var flag syntax.EmptyOp$/;"	v
flag	./regexp/syntax/prog.go	/^	var flag EmptyOp$/;"	v
flagName	./debug/elf/elf.go	/^func flagName(i uint32, names []intName, goSyntax bool) string {$/;"	f
flagName	./debug/macho/macho.go	/^func flagName(i uint32, names []intName, goSyntax bool) string {$/;"	f
flagNames	./flag/flag_test.go	/^	var flagNames []string$/;"	v
flagNames	./net/interface.go	/^var flagNames = []string{$/;"	v
flagPrinter	./fmt/fmt_test.go	/^type flagPrinter struct{}$/;"	t
flagSet	./cmd/doc/doc_test.go	/^		var flagSet flag.FlagSet$/;"	v
flagShared	./cmd/link/internal/ld/pobj.go	/^	var flagShared int$/;"	v
flagTest	./encoding/asn1/marshal_test.go	/^type flagTest struct {$/;"	t
flagVar	./flag/flag_test.go	/^type flagVar []string$/;"	t
flag_dynlink	./cmd/compile/internal/gc/lex.go	/^	var flag_dynlink bool$/;"	v
flag_installsuffix	./cmd/compile/internal/gc/go.go	/^var flag_installsuffix string$/;"	v
flag_largemodel	./cmd/compile/internal/gc/go.go	/^var flag_largemodel int$/;"	v
flag_race	./cmd/compile/internal/gc/go.go	/^var flag_race int$/;"	v
flag_shared	./cmd/compile/internal/gc/lex.go	/^	var flag_shared int$/;"	v
flagprinter	./fmt/fmt_test.go	/^	var flagprinter flagPrinter$/;"	v
flags	./cmd/pprof/internal/driver/driver.go	/^type flags struct {$/;"	t
flags	./cmd/pprof/pprof.go	/^type flags struct {$/;"	t
flags	./flag/flag_test.go	/^	var flags FlagSet$/;"	v
flags	./net/interface_windows.go	/^			var flags Flags$/;"	v
flags	./os/file_windows.go	/^	var flags uint32$/;"	v
flags	./runtime/os3_plan9.go	/^	var flags int$/;"	v
flags	./syscall/syscall_windows.go	/^	var flags uint32 = FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_ARGUMENT_ARRAY | FORMAT_MESSAGE_IGNORE_INSERTS$/;"	v
flagtests	./fmt/fmt_test.go	/^var flagtests = []struct {$/;"	v
flagvar	./flag/flag.go	/^		var flagvar int$/;"	v
flatSum	./cmd/pprof/internal/report/report.go	/^	var flatSum int64$/;"	v
flateWriterPool	./archive/zip/register.go	/^var flateWriterPool sync.Pool$/;"	v
fld	./cmd/compile/internal/gc/closure.go	/^		var fld *Type$/;"	v
fld	./cmd/compile/internal/gc/closure.go	/^	var fld *Node$/;"	v
fld	./cmd/link/internal/ld/dwarf.go	/^		var fld *DWDie$/;"	v
fld	./cmd/link/internal/ld/dwarf.go	/^	var fld *DWDie$/;"	v
flipBit	./runtime/hash_test.go	/^func (k *BytesKey) flipBit(i int) {$/;"	f
flipBit	./runtime/hash_test.go	/^func (k *EfaceKey) flipBit(i int) {$/;"	f
flipBit	./runtime/hash_test.go	/^func (k *IfaceKey) flipBit(i int) {$/;"	f
flipBit	./runtime/hash_test.go	/^func (k *Int32Key) flipBit(i int) {$/;"	f
flipBit	./runtime/hash_test.go	/^func (k *Int64Key) flipBit(i int) {$/;"	f
flist	./cmd/compile/internal/gc/cgen.go	/^		var flist Iter$/;"	v
flist	./cmd/compile/internal/gc/cgen.go	/^	var flist Iter$/;"	v
flist	./go/doc/example.go	/^		var flist []*Example$/;"	v
flo	./cmd/compile/internal/arm/gsubr.go	/^		var flo gc.Node$/;"	v
flo	./cmd/compile/internal/arm/gsubr.go	/^	var flo gc.Node$/;"	v
flo	./cmd/compile/internal/x86/gsubr.go	/^		var flo gc.Node$/;"	v
float32	./builtin/builtin.go	/^type float32 float32$/;"	t
float32	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind float32 but not type float32. TODO: We can handle this unsafely.$/;"	t
float32	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind float32 but not type float32. TODO: We can handle this unsafely.$/;"	t
float32FromBits	./encoding/gob/decode.go	/^func float32FromBits(u uint64, ovfl error) float64 {$/;"	f
float32Value	./database/sql/convert_test.go	/^func float32Value(ptr interface{}) float32 {$/;"	f
float32info	./strconv/ftoa.go	/^var float32info = floatInfo{23, 8, -127}$/;"	v
float32pow10	./strconv/atof.go	/^var float32pow10 = []float32{1e0, 1e1, 1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10}$/;"	v
float32strings	./strconv/atof_test.go	/^var float32strings [4096]string$/;"	v
float64	./builtin/builtin.go	/^type float64 float64$/;"	t
float64	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind float64 but not type float64. TODO: We can handle this unsafely.$/;"	t
float64	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind float64 but not type float64. TODO: We can handle this unsafely.$/;"	t
float64	./strconv/atof.go	/^\/\/ When bitSize=32, the result still has type float64, but it will be$/;"	t
float64	./testing/allocs.go	/^\/\/ Although the return value has type float64, it will always be an integral value.$/;"	t
float64	./text/template/exec_test.go	/^	\/\/ 0xef gave constant type float64. Issue 8622.$/;"	t
float64FromBits	./encoding/gob/decode.go	/^func float64FromBits(u uint64) float64 {$/;"	f
float64Value	./database/sql/convert_test.go	/^func float64Value(ptr interface{}) float64 {$/;"	f
float64Value	./flag/flag.go	/^type float64Value float64$/;"	t
float64bits	./syscall/srpc_nacl.go	/^func float64bits(x float64) uint64 {$/;"	f
float64frombits	./syscall/srpc_nacl.go	/^func float64frombits(x uint64) float64 {$/;"	f
float64info	./strconv/ftoa.go	/^var float64info = floatInfo{52, 11, -1023}$/;"	v
float64inputs	./cmd/compile/internal/big/ratconv_test.go	/^var float64inputs = []string{$/;"	v
float64inputs	./math/big/ratconv_test.go	/^var float64inputs = []string{$/;"	v
float64pow10	./strconv/atof.go	/^var float64pow10 = []float64{$/;"	v
float64s	./sort/sort_test.go	/^var float64s = [...]float64{74.3, 59.0, math.Inf(1), 238.2, -784.0, 2.3, math.NaN(), math.NaN(), math.Inf(-1), 9845.768, -959.7485, 905, 7.8, 7.8}$/;"	v
float64toint64	./cmd/compile/internal/gc/builtin/runtime.go	/^func float64toint64(float64) int64$/;"	f
float64toint64	./runtime/vlrt.go	/^func float64toint64(d float64) (y uint64) {$/;"	f
float64touint64	./cmd/compile/internal/gc/builtin/runtime.go	/^func float64touint64(float64) uint64$/;"	f
float64touint64	./runtime/vlrt.go	/^func float64touint64(d float64) (y uint64) {$/;"	f
floatBits	./encoding/gob/encode.go	/^func floatBits(f float64) uint64 {$/;"	f
floatBits	./strconv/atof.go	/^func (d *decimal) floatBits(flt *floatInfo) (b uint64, overflow bool) {$/;"	f
floatBits	./strconv/extfloat.go	/^func (f *extFloat) floatBits(flt *floatInfo) (bits uint64, overflow bool) {$/;"	f
floatEncoder	./encoding/json/encode.go	/^type floatEncoder int \/\/ number of bits$/;"	t
floatError	./runtime/panic.go	/^var floatError = error(errorString("floating point error"))$/;"	v
floatExpr	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) floatExpr() float64 {$/;"	f
floatFlagString	./cmd/pprof/internal/driver/driver.go	/^func floatFlagString(label string, value float64) string {$/;"	f
floatInfo	./strconv/ftoa.go	/^type floatInfo struct {$/;"	t
floatResult	./encoding/gob/codec_test.go	/^var floatResult = []byte{0x07, 0xFE, 0x31, 0x40}$/;"	v
floatStringTests	./cmd/compile/internal/big/ratconv_test.go	/^var floatStringTests = []struct {$/;"	v
floatStringTests	./math/big/ratconv_test.go	/^var floatStringTests = []struct {$/;"	v
floatSwap	./reflect/example_test.go	/^	var floatSwap func(float64, float64) (float64, float64)$/;"	v
floatTest	./math/all_test.go	/^type floatTest struct {$/;"	t
floatTests	./math/all_test.go	/^var floatTests = []floatTest{$/;"	v
floatToken	./fmt/scan.go	/^func (s *ss) floatToken() string {$/;"	f
floatingsavearea	./runtime/defs_windows_386.go	/^type floatingsavearea struct {$/;"	t
floatmove	./cmd/compile/internal/x86/gsubr.go	/^func floatmove(f *gc.Node, t *gc.Node) {$/;"	f
floatmove_387	./cmd/compile/internal/x86/gsubr.go	/^func floatmove_387(f *gc.Node, t *gc.Node) {$/;"	f
floatmove_sse	./cmd/compile/internal/x86/gsubr.go	/^func floatmove_sse(f *gc.Node, t *gc.Node) {$/;"	f
floatstate32	./runtime/defs_darwin_386.go	/^type floatstate32 struct {$/;"	t
floatstate32	./runtime/defs_darwin_amd64.go	/^type floatstate32 struct {$/;"	t
floatstate32	./runtime/defs_darwin_arm.go	/^type floatstate32 struct {$/;"	t
floatstate64	./runtime/defs_darwin_386.go	/^type floatstate64 struct {$/;"	t
floatstate64	./runtime/defs_darwin_amd64.go	/^type floatstate64 struct {$/;"	t
floor	./math/all_test.go	/^var floor = []float64{$/;"	v
floor	./math/floor.go	/^func floor(x float64) float64 {$/;"	f
flowmark	./cmd/compile/internal/gc/popt.go	/^var flowmark int$/;"	v
flowrpo	./cmd/compile/internal/gc/popt.go	/^func flowrpo(g *Graph) {$/;"	f
floydSteinberg	./image/draw/draw.go	/^type floydSteinberg struct{}$/;"	t
flr	./runtime/traceback.go	/^		var flr *_func$/;"	v
flt	./strconv/ftoa.go	/^	var flt *floatInfo$/;"	v
flush	./bufio/bufio.go	/^func (b *Writer) flush() error {$/;"	f
flush	./cmd/doc/pkg.go	/^func (pkg *Package) flush() {$/;"	f
flush	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) flush() {$/;"	f
flush	./compress/flate/inflate.go	/^func (f *decompressor) flush(step func(*decompressor)) {$/;"	f
flush	./compress/lzw/reader.go	/^func (d *decoder) flush() {$/;"	f
flush	./go/doc/comment.go	/^func (l *lineWrapper) flush() {$/;"	f
flush	./go/printer/printer.go	/^func (p *printer) flush(next token.Position, tok token.Token) (wroteNewline, droppedFF bool) {$/;"	f
flush	./image/gif/writer.go	/^func (e *encoder) flush() {$/;"	f
flush	./image/jpeg/writer.go	/^func (e *encoder) flush() {$/;"	f
flush	./mime/quotedprintable/writer.go	/^func (w *Writer) flush() error {$/;"	f
flush	./net/http/server.go	/^func (cw *chunkWriter) flush() {$/;"	f
flush	./runtime/heapdump.go	/^func flush() {$/;"	f
flushBits	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) flushBits() {$/;"	f
flushLoop	./net/http/httputil/reverseproxy.go	/^func (m *maxLatencyWriter) flushLoop() {$/;"	f
flushOutput	./unicode/maketables.go	/^func flushOutput() {$/;"	f
flushallmcaches	./runtime/mstats.go	/^func flushallmcaches() {$/;"	f
flushlit	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) flushlit() {$/;"	f
flushlog	./runtime/cpuprof.go	/^func (p *cpuProfile) flushlog() bool {$/;"	f
flushpool	./cmd/internal/obj/arm/asm5.go	/^func flushpool(ctxt *obj.Link, p *obj.Prog, skip int, force int) bool {$/;"	f
flushpool	./cmd/internal/obj/arm64/asm7.go	/^func flushpool(ctxt *obj.Link, p *obj.Prog, skip int) {$/;"	f
flushunit	./cmd/link/internal/ld/dwarf.go	/^func flushunit(dwinfo *DWDie, pc int64, pcsym *LSym, unitstart int64, header_length int32) {$/;"	f
fmaxSC	./math/all_test.go	/^var fmaxSC = []float64{$/;"	v
fminSC	./math/all_test.go	/^var fminSC = []float64{$/;"	v
fmod	./math/all_test.go	/^var fmod = []float64{$/;"	v
fmodSC	./math/all_test.go	/^var fmodSC = []float64{$/;"	v
fmt	./cmd/internal/rsc.io/arm/armasm/Makefile	/^	go run ..\/armmap\/map.go -fmt=decoder ..\/arm.csv >_tables.go && gofmt _tables.go >tables.go && rm _tables.go$/;"	m
fmt	./cmd/internal/rsc.io/x86/x86asm/Makefile	/^	go run ..\/x86map\/map.go -fmt=decoder ..\/x86.csv >_tables.go && gofmt _tables.go >tables.go && rm _tables.go$/;"	m
fmt	./fmt/format.go	/^type fmt struct {$/;"	t
fmt	./syscall/mksysnum_linux.pl	/^sub fmt {$/;"	s
fmt0x64	./fmt/print.go	/^func (p *pp) fmt0x64(v uint64, leading0x bool) {$/;"	f
fmtB	./cmd/compile/internal/big/ftoa.go	/^func (x *Float) fmtB(buf []byte) []byte {$/;"	f
fmtB	./math/big/ftoa.go	/^func (x *Float) fmtB(buf []byte) []byte {$/;"	f
fmtB	./strconv/ftoa.go	/^func fmtB(dst []byte, neg bool, mant uint64, exp int, flt *floatInfo) []byte {$/;"	f
fmtBool	./fmt/print.go	/^func (p *pp) fmtBool(v bool, verb rune) {$/;"	f
fmtBytes	./fmt/print.go	/^func (p *pp) fmtBytes(v []byte, verb rune, typ reflect.Type, depth int) {$/;"	f
fmtC	./fmt/print.go	/^func (p *pp) fmtC(c int64) {$/;"	f
fmtComplex128	./fmt/print.go	/^func (p *pp) fmtComplex128(v complex128, verb rune) {$/;"	f
fmtComplex64	./fmt/print.go	/^func (p *pp) fmtComplex64(v complex64, verb rune) {$/;"	f
fmtDuration	./testing/testing.go	/^func fmtDuration(d time.Duration) string {$/;"	f
fmtE	./cmd/compile/internal/big/ftoa.go	/^func fmtE(buf []byte, fmt byte, prec int, d decimal) []byte {$/;"	f
fmtE	./math/big/ftoa.go	/^func fmtE(buf []byte, fmt byte, prec int, d decimal) []byte {$/;"	f
fmtE	./strconv/ftoa.go	/^func fmtE(dst []byte, neg bool, d decimalSlice, prec int, fmt byte) []byte {$/;"	f
fmtF	./cmd/compile/internal/big/ftoa.go	/^func fmtF(buf []byte, prec int, d decimal) []byte {$/;"	f
fmtF	./math/big/ftoa.go	/^func fmtF(buf []byte, prec int, d decimal) []byte {$/;"	f
fmtF	./strconv/ftoa.go	/^func fmtF(dst []byte, neg bool, d decimalSlice, prec int) []byte {$/;"	f
fmtFlags	./fmt/format.go	/^type fmtFlags struct {$/;"	t
fmtFloat32	./fmt/print.go	/^func (p *pp) fmtFloat32(v float32, verb rune) {$/;"	f
fmtFloat64	./fmt/print.go	/^func (p *pp) fmtFloat64(v float64, verb rune) {$/;"	f
fmtFrac	./time/time.go	/^func fmtFrac(buf []byte, v uint64, prec int) (nw int, nv uint64) {$/;"	f
fmtImported	./cmd/yacc/yacc.go	/^var fmtImported bool \/\/ output file has recorded an import of "fmt"$/;"	v
fmtInt	./time/time.go	/^func fmtInt(buf []byte, v uint64) int {$/;"	f
fmtInt64	./fmt/print.go	/^func (p *pp) fmtInt64(v int64, verb rune) {$/;"	f
fmtNSAsMS	./runtime/mgc.go	/^func fmtNSAsMS(buf []byte, ns uint64) []byte {$/;"	f
fmtP	./cmd/compile/internal/big/ftoa.go	/^func (x *Float) fmtP(buf []byte) []byte {$/;"	f
fmtP	./math/big/ftoa.go	/^func (x *Float) fmtP(buf []byte) []byte {$/;"	f
fmtPointer	./fmt/print.go	/^func (p *pp) fmtPointer(value reflect.Value, verb rune) {$/;"	f
fmtSelect	./reflect/all_test.go	/^func fmtSelect(info []caseInfo) string {$/;"	f
fmtString	./fmt/print.go	/^func (p *pp) fmtString(v string, verb rune) {$/;"	f
fmtTests	./fmt/fmt_test.go	/^var fmtTests = []struct {$/;"	v
fmtUint64	./fmt/print.go	/^func (p *pp) fmtUint64(v uint64, verb rune) {$/;"	f
fmtUnicode	./fmt/print.go	/^func (p *pp) fmtUnicode(v int64) {$/;"	f
fmt_	./cmd/compile/internal/gc/plive.go	/^	var fmt_ string$/;"	v
fmt_	./cmd/compile/internal/gc/typecheck.go	/^		var fmt_ string$/;"	v
fmt_E32	./fmt/format.go	/^func (f *fmt) fmt_E32(v float32) { f.formatFloat(float64(v), 'E', doPrec(f, 6), 32) }$/;"	f
fmt_E64	./fmt/format.go	/^func (f *fmt) fmt_E64(v float64) { f.formatFloat(v, 'E', doPrec(f, 6), 64) }$/;"	f
fmt_G32	./fmt/format.go	/^func (f *fmt) fmt_G32(v float32) { f.formatFloat(float64(v), 'G', doPrec(f, -1), 32) }$/;"	f
fmt_G64	./fmt/format.go	/^func (f *fmt) fmt_G64(v float64) { f.formatFloat(v, 'G', doPrec(f, -1), 64) }$/;"	f
fmt_boolean	./fmt/format.go	/^func (f *fmt) fmt_boolean(v bool) {$/;"	f
fmt_bx	./fmt/format.go	/^func (f *fmt) fmt_bx(b []byte, digits string) {$/;"	f
fmt_c128	./fmt/format.go	/^func (f *fmt) fmt_c128(v complex128, verb rune) {$/;"	f
fmt_c64	./fmt/format.go	/^func (f *fmt) fmt_c64(v complex64, verb rune) {$/;"	f
fmt_complex	./fmt/format.go	/^func (f *fmt) fmt_complex(r, j float64, size int, verb rune) {$/;"	f
fmt_e32	./fmt/format.go	/^func (f *fmt) fmt_e32(v float32) { f.formatFloat(float64(v), 'e', doPrec(f, 6), 32) }$/;"	f
fmt_e64	./fmt/format.go	/^func (f *fmt) fmt_e64(v float64) { f.formatFloat(v, 'e', doPrec(f, 6), 64) }$/;"	f
fmt_f32	./fmt/format.go	/^func (f *fmt) fmt_f32(v float32) { f.formatFloat(float64(v), 'f', doPrec(f, 6), 32) }$/;"	f
fmt_f64	./fmt/format.go	/^func (f *fmt) fmt_f64(v float64) { f.formatFloat(v, 'f', doPrec(f, 6), 64) }$/;"	f
fmt_fb32	./fmt/format.go	/^func (f *fmt) fmt_fb32(v float32) { f.formatFloat(float64(v), 'b', 0, 32) }$/;"	f
fmt_fb64	./fmt/format.go	/^func (f *fmt) fmt_fb64(v float64) { f.formatFloat(v, 'b', 0, 64) }$/;"	f
fmt_g32	./fmt/format.go	/^func (f *fmt) fmt_g32(v float32) { f.formatFloat(float64(v), 'g', doPrec(f, -1), 32) }$/;"	f
fmt_g64	./fmt/format.go	/^func (f *fmt) fmt_g64(v float64) { f.formatFloat(v, 'g', doPrec(f, -1), 64) }$/;"	f
fmt_q	./fmt/format.go	/^func (f *fmt) fmt_q(s string) {$/;"	f
fmt_qc	./fmt/format.go	/^func (f *fmt) fmt_qc(c int64) {$/;"	f
fmt_s	./fmt/format.go	/^func (f *fmt) fmt_s(s string) {$/;"	f
fmt_sbx	./fmt/format.go	/^func (f *fmt) fmt_sbx(s string, b []byte, digits string) {$/;"	f
fmt_sx	./fmt/format.go	/^func (f *fmt) fmt_sx(s, digits string) {$/;"	f
fmtmode	./cmd/compile/internal/gc/fmt.go	/^var fmtmode int = FErr$/;"	v
fmtpkgpfx	./cmd/compile/internal/gc/fmt.go	/^var fmtpkgpfx int \/\/ %uT stickyness$/;"	v
fmul64	./runtime/softfloat64.go	/^func fmul64(f, g uint64) uint64 {$/;"	f
fn	./cmd/compile/internal/gc/esc.go	/^	var fn *Node$/;"	v
fn	./cmd/compile/internal/gc/subr.go	/^	var fn *Node$/;"	v
fn	./cmd/compile/internal/gc/walk.go	/^			var fn string$/;"	v
fn	./cmd/compile/internal/gc/walk.go	/^		var fn *Node$/;"	v
fn	./cmd/compile/internal/gc/walk.go	/^	var fn string$/;"	v
fn	./cmd/vet/testdata/nilfunc.go	/^	var fn func()$/;"	v
fn	./math/rand/normal.go	/^var fn = [128]float32{$/;"	v
fn	./runtime/cgo/libcgo.h	/^	void (*fn)(void);$/;"	m	struct:ThreadStart
fn	./runtime/proc1.go	/^		var fn func()$/;"	v
fn	./runtime/stack1.go	/^	var fn unsafe.Pointer$/;"	v
fn0	./cmd/internal/obj/flag.go	/^type fn0 func()$/;"	t
fn1	./cmd/internal/obj/flag.go	/^type fn1 func(string)$/;"	t
fname	./reflect/type.go	/^				var fname string$/;"	v
fnbody	./cmd/compile/internal/gc/go.y	/^fnbody:$/;"	l
fncall	./cmd/compile/internal/gc/walk.go	/^func fncall(l *Node, rt *Type) bool {$/;"	f
fndcl	./cmd/compile/internal/gc/go.y	/^fndcl:$/;"	l
fneg64	./runtime/softfloat64.go	/^func fneg64(f uint64) uint64 {$/;"	f
fninit	./cmd/compile/internal/gc/init.go	/^func fninit(n *NodeList) {$/;"	f
fnlitdcl	./cmd/compile/internal/gc/go.y	/^fnlitdcl:$/;"	l
fnliteral	./cmd/compile/internal/gc/go.y	/^fnliteral:$/;"	l
fnodes	./cmd/pprof/internal/report/source.go	/^	var fnodes nodes$/;"	v
fnop	./cmd/fix/main_test.go	/^func fnop(*ast.File) bool { return false }$/;"	f
fnorm	./cmd/compile/internal/big/float.go	/^func fnorm(m nat) int64 {$/;"	f
fnorm	./math/big/float.go	/^func fnorm(m nat) int64 {$/;"	f
fnpkg	./cmd/compile/internal/gc/inl.go	/^func fnpkg(fn *Node) *Pkg {$/;"	f
fnres	./cmd/compile/internal/gc/go.y	/^fnres:$/;"	l
fnret_type	./cmd/compile/internal/gc/go.y	/^fnret_type:$/;"	l
fns	./cmd/pprof/internal/profile/legacy_profile.go	/^	var fns []*Function$/;"	v
fntype	./cmd/compile/internal/gc/esc.go	/^	var fntype *Type$/;"	v
fntype	./cmd/compile/internal/gc/go.y	/^fntype:$/;"	l
fnv1	./reflect/type.go	/^func fnv1(x uint32, list ...byte) uint32 {$/;"	f
focus	./cmd/pprof/internal/driver/interactive.go	/^	var focus, ignore string$/;"	v
focusedAndNotIgnored	./cmd/pprof/internal/profile/filter.go	/^func focusedAndNotIgnored(locs []*Location, m map[uint64]bool) bool {$/;"	f
focusedSample	./cmd/pprof/internal/profile/filter.go	/^func focusedSample(s *Sample, focus, ignore TagMatch) (fm, im bool) {$/;"	f
fold	./unicode/maketables.go	/^			fmt.Sprintf("var fold%s = &RangeTable{\\n", name),$/;"	v
foldAdjacent	./unicode/maketables.go	/^func foldAdjacent(r []Script) []unicode.Range32 {$/;"	f
foldCommon	./unicode/tables.go	/^var foldCommon = &RangeTable{$/;"	v
foldDup	./cmd/go/main.go	/^func foldDup(list []string) (string, string) {$/;"	f
foldDupTests	./cmd/go/pkg_test.go	/^var foldDupTests = []struct {$/;"	v
foldExceptions	./unicode/maketables.go	/^func foldExceptions(class []rune) map[rune]bool {$/;"	f
foldFunc	./encoding/json/fold.go	/^func foldFunc(s []byte) func(s, t []byte) bool {$/;"	f
foldGreek	./unicode/tables.go	/^var foldGreek = &RangeTable{$/;"	v
foldInherited	./unicode/tables.go	/^var foldInherited = &RangeTable{$/;"	v
foldL	./unicode/tables.go	/^var foldL = &RangeTable{$/;"	v
foldLl	./unicode/tables.go	/^var foldLl = &RangeTable{$/;"	v
foldLt	./unicode/tables.go	/^var foldLt = &RangeTable{$/;"	v
foldLu	./unicode/tables.go	/^var foldLu = &RangeTable{$/;"	v
foldM	./unicode/tables.go	/^var foldM = &RangeTable{$/;"	v
foldMn	./unicode/tables.go	/^var foldMn = &RangeTable{$/;"	v
foldPair	./unicode/letter.go	/^type foldPair struct {$/;"	t
foldPairCount	./unicode/maketables.go	/^var foldPairCount = 0 \/\/ Number of fold pairs in the exception tables.$/;"	v
foldTests	./encoding/json/fold_test.go	/^var foldTests = []struct {$/;"	v
foldcaseTests	./regexp/syntax/parse_test.go	/^var foldcaseTests = []parseTest{$/;"	v
follow	./cmd/internal/obj/arm/obj5.go	/^func follow(ctxt *obj.Link, s *obj.LSym) {$/;"	f
follow	./cmd/internal/obj/arm64/obj7.go	/^func follow(ctxt *obj.Link, s *obj.LSym) {$/;"	f
follow	./cmd/internal/obj/ppc64/obj9.go	/^func follow(ctxt *obj.Link, s *obj.LSym) {$/;"	f
follow	./cmd/internal/obj/x86/obj6.go	/^func follow(ctxt *obj.Link, s *obj.LSym) {$/;"	f
followed	./encoding/gob/decode.go	/^\/\/ Interfaces are encoded as the name of a concrete type followed by a value.$/;"	t
followed	./go/types/builtins.go	/^		\/\/ to type []byte with a second argument of string type followed by ... .$/;"	t
followptr	./cmd/compile/internal/gc/subr.go	/^	var followptr int$/;"	v
foo	./encoding/gob/codec_test.go	/^		var foo struct{}$/;"	v
foo	./go/ast/example_test.go	/^var foo = hello \/\/ line comment 2 $/;"	v
foo	./go/printer/printer_test.go	/^func (t *t) foo(a, b, c int) int {$/;"	f
fooProto	./net/http/transport_test.go	/^type fooProto struct{}$/;"	t
fop	./runtime/softfloat64_test.go	/^func fop(f func(x, y uint64) uint64) func(x, y float64) float64 {$/;"	f
foptoas	./cmd/compile/internal/x86/gsubr.go	/^func foptoas(op int, t *gc.Type, flg int) int {$/;"	f
for	./builtin/builtin.go	/^\/\/ for any Go type, but represents the same type for any given function$/;"	t
for	./bytes/export_test.go	/^\/\/ Export func for testing$/;"	f
for	./cmd/cgo/out.go	/^			fmt.Fprintf(fgcch, "\\n\/* Return type for %s *\/\\n", exp.ExpName)$/;"	t
for	./cmd/compile/internal/gc/closure.go	/^		Fatal("missing base type for %v", rcvrtype)$/;"	t
for	./cmd/compile/internal/gc/const.go	/^		\/\/ target is invalid type for a constant?  leave alone.$/;"	t
for	./cmd/compile/internal/gc/dcl.go	/^			\/\/ queue resolution of method type for later.$/;"	t
for	./cmd/compile/internal/gc/dcl.go	/^ * a type for struct\/interface\/arglist$/;"	t
for	./cmd/compile/internal/gc/export.go	/^				fmt.Printf("reexport type for expression %v\\n", t.Sym)$/;"	t
for	./cmd/compile/internal/gc/go.go	/^		Fatal("unexpected Ctype for %T", v.U)$/;"	t
for	./cmd/compile/internal/gc/go.go	/^	Type  *Type \/\/ actual type for TFIELD, element type for TARRAY, TCHAN, TMAP, TPTRxx$/;"	t
for	./cmd/compile/internal/gc/go.go	/^	\/\/ pseudo-type for frame layout$/;"	t
for	./cmd/compile/internal/gc/inl.go	/^			Fatal("missing inlvar for %v\\n", t.Nname)$/;"	v
for	./cmd/compile/internal/gc/inl.go	/^			Fatal("no function type for [%p] %v\\n", n.Left, Nconv(n.Left, obj.FmtSign))$/;"	t
for	./cmd/compile/internal/gc/order.go	/^						\/\/ use channel element type for temporary to avoid conversions,$/;"	t
for	./cmd/compile/internal/gc/reflect.go	/^		Fatal("bad type for map key: %v", t)$/;"	t
for	./cmd/compile/internal/gc/reflect.go	/^		\/\/ get receiver type for this particular method.$/;"	t
for	./cmd/compile/internal/gc/subr.go	/^				*why = fmt.Sprintf(":\\n\\t%v does not implement %v (wrong type for %v method)\\n"+"\\t\\thave %v%v\\n\\t\\twant %v%v", src, dst, missing.Sym, have.Sym, Tconv(have.Type, obj.FmtShort|obj.FmtByte), missing.Sym, Tconv(missing.Type, obj.FmtShort|obj.FmtByte))$/;"	t
for	./cmd/compile/internal/gc/subr.go	/^ * return the unsigned type for$/;"	t
for	./cmd/compile/internal/gc/syntax.go	/^	Outer      *Node \/\/ outer func for closure$/;"	f
for	./cmd/compile/internal/gc/typecheck.go	/^		Yyerror("invalid type for composite literal: %v", t)$/;"	t
for	./cmd/internal/goobj/read.go	/^	Type SymID \/\/ Go type for variable.$/;"	t
for	./cmd/internal/obj/funcdata.go	/^\/\/ GO_ARGS indicates that the Go prototype for this assembly function$/;"	t
for	./cmd/internal/obj/link.go	/^\/\/		It has a separate type for easy recognition.$/;"	t
for	./cmd/link/internal/ld/objfile.go	/^		log.Fatalf("missing type for %s in %s", name, pn)$/;"	t
for	./cmd/link/internal/ld/pcln.go	/^\/\/ function for a pc.  See src\/runtime\/symtab.go:findfunc for details.$/;"	f
for	./cmd/yacc/yacc.go	/^		errorf("must specify type for %v", s)$/;"	t
for	./crypto/tls/handshake_server.go	/^				err = errors.New("bad signature type for client's ECDSA certificate")$/;"	t
for	./crypto/tls/handshake_server.go	/^				err = errors.New("bad signature type for client's RSA certificate")$/;"	t
for	./crypto/tls/prf.go	/^			return nil, 0, errors.New("tls: unsupported signature type for client certificate")$/;"	t
for	./debug/dwarf/typeunit.go	/^\/\/ Return the type for a type signature.$/;"	t
for	./debug/macho/fat.go	/^				return nil, &FormatError{offset, fmt.Sprintf("Mach-O type for architecture #%d (type=%#x) does not match first (type=%#x)", i, fa.Type, machoType), nil}$/;"	t
for	./encoding/asn1/asn1.go	/^		err = StructuralError{"unknown Go type for slice"}$/;"	t
for	./encoding/gob/debug.go	/^		panic("bad wire type for field")$/;"	t
for	./encoding/gob/decoder.go	/^\/\/ correct type for the next data item received.$/;"	t
for	./encoding/gob/doc.go	/^	struct { A int; B float }	\/\/ change of type for B$/;"	t
for	./encoding/gob/encoder_test.go	/^\/\/ Like ET1 but with a different type for a field$/;"	t
for	./encoding/gob/example_interface_test.go	/^	\/\/ We must register the concrete type for the encoder and decoder (which would$/;"	t
for	./encoding/xml/marshal.go	/^				return fmt.Errorf("xml: bad type for comment field of %s", val.Type())$/;"	t
for	./expvar/expvar.go	/^\/\/ Var is an abstract type for all exported variables.$/;"	t
for	./go/ast/commentmap.go	/^		\/\/ print name of identifiers; print node type for other nodes$/;"	t
for	./go/internal/gccgoimporter/parser.go	/^			p.error("unexpected underlying type for non-named TypeName")$/;"	t
for	./go/parser/parser.go	/^		\/\/ could be type for composite literal or conversion$/;"	t
for	./go/printer/testdata/parser.go	/^			\/\/ could be type for composite literal or conversion$/;"	t
for	./go/types/builtins_test.go	/^		\/\/ the recorded type for the built-in must match the wanted signature$/;"	t
for	./go/types/conversions.go	/^		\/\/   not []byte as type for the constant "foo").$/;"	t
for	./go/types/expr.go	/^		\/\/ the dynamic type for argument checking of say, print$/;"	t
for	./go/types/expr.go	/^		msg = "wrong type for method"$/;"	t
for	./go/types/expr.go	/^\/\/ only updates the recorded untyped type for x and possibly its$/;"	t
for	./go/types/expr.go	/^\/\/ or it is the final type for x), the type and value are recorded.$/;"	t
for	./go/types/predicates.go	/^\/\/ defaultType returns the default "typed" type for an "untyped" type;$/;"	t
for	./go/types/predicates.go	/^\/\/ it returns the incoming type for all other types. The default type$/;"	t
for	./go/types/sizes.go	/^\/\/ StdSizes is a convenience type for creating commonly used Sizes.$/;"	t
for	./go/types/type.go	/^\/\/ Elem returns the element type for the given pointer p.$/;"	t
for	./go/types/type.go	/^\/\/ NewArray returns a new array type for the given element type and length.$/;"	t
for	./go/types/type.go	/^\/\/ NewChan returns a new channel type for the given direction and element type.$/;"	t
for	./go/types/type.go	/^\/\/ NewNamed returns a new named type for the given type name, underlying type, and associated methods.$/;"	t
for	./go/types/type.go	/^\/\/ NewPointer returns a new pointer type for the given element (base) type.$/;"	t
for	./go/types/type.go	/^\/\/ NewSignature returns a new function type for the given receiver, parameters,$/;"	t
for	./go/types/type.go	/^\/\/ NewSlice returns a new slice type for the given element type.$/;"	t
for	./math/rand/regress_test.go	/^					t.Fatalf("unexpected argument type for r.%s", m.Name)$/;"	t
for	./math/sinh.go	/^	Cosh(x) is computed from the exponential func for$/;"	f
for	./net/dial.go	/^	\/\/ address. The address must be of a compatible type for the$/;"	t
for	./net/rpc/server.go	/^\/\/ Precompute the reflect type for error.  Can't use error directly$/;"	t
for	./reflect/all_test.go	/^		t.Errorf("did not find preexisting type for %s (vs %s)", TypeOf(x), TypeOf(y))$/;"	t
for	./reflect/all_test.go	/^		t.Errorf("expected nil type for nil value; got %v", typ)$/;"	t
for	./reflect/type.go	/^				\/\/ Find name and type for field f.$/;"	t
for	./reflect/type.go	/^	ptrToThis     *rtype         \/\/ type for pointer to this type, if used in binary or has methods$/;"	t
for	./reflect/type.go	/^\/\/ function takes care of ensuring that multiple *rtype for the same$/;"	t
for	./runtime/os2_nacl.go	/^	_EPROTOTYPE      = 91  \/* Protocol wrong type for socket *\/$/;"	t
for	./runtime/runtime1.go	/^\/\/ existing int var for that value, which may$/;"	v
for	./syscall/mksyscall_windows.go	/^* The parameter lists must give a type for each argument:$/;"	t
for	./syscall/tables_nacl.go	/^	EPROTOTYPE      Errno = 91  \/* Protocol wrong type for socket *\/$/;"	t
for	./syscall/tables_nacl.go	/^	EPROTOTYPE:      "Protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_darwin_386.go	/^	41:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_darwin_amd64.go	/^	41:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_darwin_arm.go	/^	41:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_darwin_arm64.go	/^	41:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_dragonfly_amd64.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_freebsd_386.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_freebsd_amd64.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_freebsd_arm.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_linux_386.go	/^	91:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_linux_amd64.go	/^	91:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_linux_arm.go	/^	91:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_linux_arm64.go	/^	91:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_linux_ppc64.go	/^	91:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_linux_ppc64le.go	/^	91:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_netbsd_386.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_netbsd_amd64.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_netbsd_arm.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_openbsd_386.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_openbsd_amd64.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_openbsd_arm.go	/^	41: "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_solaris_amd64.go	/^	98:  "protocol wrong type for socket",$/;"	t
for	./syscall/zerrors_windows.go	/^	EPROTOTYPE - APPLICATION_ERROR:      "protocol wrong type for socket",$/;"	t
for	./text/template/exec.go	/^			s.errorf("wrong type for value; expected %s; got %s", typ, value.Type())$/;"	t
for	./text/template/funcs.go	/^				return nil, fmt.Errorf("%s is not index type for %s", index.Type(), v.Type())$/;"	t
for	./text/template/funcs.go	/^	errBadComparisonType = errors.New("invalid type for comparison")$/;"	t
forEachP	./runtime/proc1.go	/^func forEachP(fn func(*p)) {$/;"	f
forFieldList	./cmd/cgo/out.go	/^func forFieldList(fl *ast.FieldList, fn func(int, ast.Expr)) {$/;"	f
for_body	./cmd/compile/internal/gc/go.y	/^for_body:$/;"	l
for_header	./cmd/compile/internal/gc/go.y	/^for_header:$/;"	l
for_stmt	./cmd/compile/internal/gc/go.y	/^for_stmt:$/;"	l
forceCgoDNS	./net/non_unix_test.go	/^func forceCgoDNS() bool  { return false }$/;"	f
forceCgoDNS	./net/unix_test.go	/^func forceCgoDNS() bool {$/;"	f
forceCloseSockets	./net/main_plan9_test.go	/^func forceCloseSockets() {}$/;"	f
forceCloseSockets	./net/main_unix_test.go	/^func forceCloseSockets() {$/;"	f
forceCloseSockets	./net/main_windows_test.go	/^func forceCloseSockets() {$/;"	f
forceGoDNS	./net/non_unix_test.go	/^func forceGoDNS() func() { return func() {} }$/;"	f
forceGoDNS	./net/unix_test.go	/^func forceGoDNS() func() {$/;"	f
forceRewrites	./cmd/fix/main.go	/^var forceRewrites = flag.String("force", "",$/;"	v
forceStackCopy	./runtime/syscall_windows_test.go	/^func forceStackCopy() (r int) {$/;"	f
forceUpdate	./net/dnsclient_unix_test.go	/^func (conf *resolvConfTest) forceUpdate(name string) error {$/;"	f
forceZipFileForTesting	./time/zoneinfo_ios.go	/^func forceZipFileForTesting(zipOnly bool) {$/;"	f
forceZipFileForTesting	./time/zoneinfo_plan9.go	/^func forceZipFileForTesting(zipOnly bool) {$/;"	f
forceZipFileForTesting	./time/zoneinfo_unix.go	/^func forceZipFileForTesting(zipOnly bool) {$/;"	f
forceZipFileForTesting	./time/zoneinfo_windows.go	/^func forceZipFileForTesting(zipOnly bool) {$/;"	f
forcegchelper	./runtime/proc.go	/^func forcegchelper() {$/;"	f
forcegcstate	./runtime/runtime2.go	/^type forcegcstate struct {$/;"	t
foreach	./cmd/compile/internal/gc/racewalk.go	/^func foreach(n *Node, f func(*Node, interface{}), c interface{}) {$/;"	f
foreachField	./net/parse.go	/^func foreachField(x []byte, fn func(field []byte) error) error {$/;"	f
foreachHeaderElement	./net/http/server.go	/^func foreachHeaderElement(v string, fn func(string)) {$/;"	f
foreachLine	./net/parse.go	/^func foreachLine(x []byte, fn func(line []byte) error) error {$/;"	f
foreachlist	./cmd/compile/internal/gc/racewalk.go	/^func foreachlist(l *NodeList, f func(*Node, interface{}), c interface{}) {$/;"	f
foreachnode	./cmd/compile/internal/gc/racewalk.go	/^func foreachnode(n *Node, f func(*Node, interface{}), c interface{}) {$/;"	f
fork	./encoding/asn1/marshal.go	/^func (f *forkableWriter) fork() (pre, post *forkableWriter) {$/;"	f
forkAndExecInChild	./syscall/exec_bsd.go	/^func forkAndExecInChild(argv0 *byte, argv, envv []*byte, chroot, dir *byte, attr *ProcAttr, sys *SysProcAttr, pipe int) (pid int, err Errno) {$/;"	f
forkAndExecInChild	./syscall/exec_linux.go	/^func forkAndExecInChild(argv0 *byte, argv, envv []*byte, chroot, dir *byte, attr *ProcAttr, sys *SysProcAttr, pipe int) (pid int, err Errno) {$/;"	f
forkAndExecInChild	./syscall/exec_plan9.go	/^func forkAndExecInChild(argv0 *byte, argv []*byte, envv []envItem, dir *byte, attr *ProcAttr, fdsToClose []int, pipe int, rflag int) (pid int, err error) {$/;"	f
forkAndExecInChild	./syscall/exec_solaris.go	/^func forkAndExecInChild(argv0 *byte, argv, envv []*byte, chroot, dir *byte, attr *ProcAttr, sys *SysProcAttr, pipe int) (pid int, err Errno) {$/;"	f
forkExec	./syscall/exec_plan9.go	/^func forkExec(argv0 string, argv []string, attr *ProcAttr) (pid int, err error) {$/;"	f
forkExec	./syscall/exec_unix.go	/^func forkExec(argv0 string, argv []string, attr *ProcAttr) (pid int, err error) {$/;"	f
forkExecPipe	./syscall/exec_bsd.go	/^func forkExecPipe(p []int) error {$/;"	f
forkExecPipe	./syscall/exec_linux.go	/^func forkExecPipe(p []int) (err error) {$/;"	f
forkExecPipe	./syscall/exec_solaris.go	/^func forkExecPipe(p []int) error {$/;"	f
forkRet	./syscall/exec_plan9.go	/^	type forkRet struct {$/;"	t
forkableWriter	./encoding/asn1/marshal.go	/^type forkableWriter struct {$/;"	t
forkx	./syscall/exec_solaris.go	/^func forkx(flags uintptr) (pid uintptr, err Errno)$/;"	f
form	./cmd/compile/internal/big/float.go	/^type form byte$/;"	t
form	./math/big/float.go	/^type form byte$/;"	t
formData	./mime/multipart/multipart_test.go	/^func formData(key, value string) headerBody {$/;"	f
formToClass	./debug/dwarf/entry.go	/^func formToClass(form format, attr Attr, vers int, b *buf) Class {$/;"	f
format	./archive/tar/reader.go	/^	var format string$/;"	v
format	./cmd/compile/internal/big/intconv_test.go	/^func format(base int) string {$/;"	f
format	./debug/dwarf/const.go	/^type format uint32$/;"	t
format	./go/printer/printer_test.go	/^func format(src []byte, mode checkMode) ([]byte, error) {$/;"	f
format	./image/format.go	/^type format struct {$/;"	t
format	./math/big/intconv_test.go	/^func format(base int) string {$/;"	f
format	./text/tabwriter/tabwriter.go	/^func (b *Writer) format(pos0 int, line0, line1 int) (pos int) {$/;"	f
formatBits	./strconv/itoa.go	/^func formatBits(dst []byte, u uint64, base int, neg, append_ bool) (d []byte, s string) {$/;"	f
formatBuf	./cmd/doc/pkg.go	/^var formatBuf bytes.Buffer \/\/ Reusable to avoid allocation.$/;"	v
formatDigits	./strconv/ftoa.go	/^func formatDigits(dst []byte, shortest bool, neg bool, digs decimalSlice, prec int, fmt byte) []byte {$/;"	f
formatError	./debug/plan9obj/file.go	/^type formatError struct {$/;"	t
formatFloat	./fmt/format.go	/^func (f *fmt) formatFloat(v float64, verb byte, prec, n int) {$/;"	f
formatHeader	./log/log.go	/^func (l *Logger) formatHeader(buf *[]byte, t time.Time, file string, line int) {$/;"	f
formatMessage	./syscall/zsyscall_windows.go	/^func formatMessage(flags uint32, msgsrc uintptr, msgid uint32, langid uint32, buf []uint16, args *byte) (n uint32, err error) {$/;"	f
formatNano	./time/format.go	/^func formatNano(b []byte, nanosec uint, n int, trim bool) []byte {$/;"	f
formatNode	./cmd/doc/pkg.go	/^func (pkg *Package) formatNode(node ast.Node) []byte {$/;"	f
formatState	./cmd/vet/print.go	/^type formatState struct {$/;"	t
formatTags	./cmd/pprof/internal/report/report.go	/^func (rpt *Report) formatTags(s *profile.Sample) (string, bool) {$/;"	f
formatTest	./mime/mediatype_test.go	/^type formatTest struct {$/;"	t
formatTests	./cmd/compile/internal/big/intconv_test.go	/^var formatTests = []struct {$/;"	v
formatTests	./math/big/intconv_test.go	/^var formatTests = []struct {$/;"	v
formatTests	./mime/mediatype_test.go	/^var formatTests = []formatTest{$/;"	v
formatTests	./time/format_test.go	/^var formatTests = []FormatTest{$/;"	v
formathdr	./cmd/compile/internal/gc/obj.go	/^func formathdr(arhdr []byte, name string, size int64) {$/;"	f
formats	./image/format.go	/^var formats []format$/;"	v
formatterFlagTests	./fmt/fmt_test.go	/^var formatterFlagTests = []struct {$/;"	v
forward	./runtime/mbitmap.go	/^func (h heapBits) forward(n uintptr) heapBits {$/;"	f
forward	./runtime/memmove_386.s	/^forward:	$/;"	l
forward	./runtime/memmove_amd64.s	/^forward:$/;"	l
forward	./runtime/memmove_nacl_amd64p32.s	/^forward:$/;"	l
forward	./runtime/memmove_plan9_386.s	/^forward:	$/;"	l
forward	./runtime/memmove_plan9_amd64.s	/^forward:$/;"	l
forwardCopy	./compress/flate/copy.go	/^func forwardCopy(mem []byte, dst, src, n int) {$/;"	f
found	./cmd/cover/cover.go	/^func (f *funcLitFinder) found() bool {$/;"	f
found	./cmd/internal/obj/objfile.go	/^	var found int$/;"	v
found	./go/parser/parser.go	/^	\/\/ no type found$/;"	t
found	./go/printer/testdata/parser.go	/^	\/\/ no type found$/;"	t
found	./go/types/api_test.go	/^			t.Errorf("package %s: no type found for %s", name, test.expr)$/;"	t
foundStdOle	./internal/syscall/windows/registry/registry_test.go	/^	var foundStdOle bool$/;"	v
found_vaddr	./runtime/vdso_linux_amd64.go	/^	var found_vaddr bool$/;"	v
foutput	./cmd/yacc/yacc.go	/^var foutput *bufio.Writer   \/\/ y.output file$/;"	v
fp	./cmd/compile/internal/gc/subr.go	/^	var fp *Type$/;"	v
fp	./cmd/internal/obj/arm/list5.go	/^	var fp string$/;"	v
fp	./cmd/internal/obj/ppc64/list9.go	/^	var fp string$/;"	v
fp	./cmd/link/internal/ld/lib.go	/^	var fp string$/;"	v
fp	./encoding/asn1/marshal.go	/^		var fp fieldParameters$/;"	v
fp	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) fp() uint32      { return c.regs().r[11] }$/;"	f
fp	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) fp() uint32      { return c.regs().__gregs[11] }$/;"	f
fp	./runtime/signal_linux_arm.go	/^func (c *sigctxt) fp() uint32        { return c.regs().fp }$/;"	f
fp	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) fp() uint32      { return c.regs().r11 }$/;"	f
fp	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) fp() uint32       { return c.regs().__gregs[_REG_R11] }$/;"	f
fp	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) fp() uint32      { return c.regs().sc_r11 }$/;"	f
fpack32	./runtime/softfloat64.go	/^func fpack32(sign, mant uint32, exp int, trunc uint32) uint32 {$/;"	f
fpack64	./runtime/softfloat64.go	/^func fpack64(sign, mant uint64, exp int, trunc uint64) uint64 {$/;"	f
fpcontrol	./runtime/defs_darwin_386.go	/^type fpcontrol struct {$/;"	t
fpcontrol	./runtime/defs_darwin_amd64.go	/^type fpcontrol struct {$/;"	t
fpreg	./runtime/defs_linux_386.go	/^type fpreg struct {$/;"	t
fpreg1	./runtime/defs_linux_amd64.go	/^type fpreg1 struct {$/;"	t
fpregset	./runtime/defs1_solaris_amd64.go	/^type fpregset struct {$/;"	t
fprint	./cmd/pprof/internal/plugin/plugin.go	/^func (ui *stdUI) fprint(f *os.File, args []interface{}) {$/;"	f
fprint	./go/printer/printer.go	/^func (cfg *Config) fprint(output io.Writer, fset *token.FileSet, node interface{}, nodeSizes map[ast.Node]int) (err error) {$/;"	f
fprintregs	./runtime/softfloat_arm.go	/^func fprintregs() {$/;"	f
fpstate	./runtime/defs_linux_386.go	/^type fpstate struct {$/;"	t
fpstate	./runtime/defs_linux_amd64.go	/^type fpstate struct {$/;"	t
fpstate1	./runtime/defs_linux_amd64.go	/^type fpstate1 struct {$/;"	t
fpstatus	./runtime/defs_darwin_386.go	/^type fpstatus struct {$/;"	t
fpstatus	./runtime/defs_darwin_amd64.go	/^type fpstatus struct {$/;"	t
fptrace	./runtime/softfloat_arm.go	/^var fptrace = 0$/;"	v
fputd	./runtime/softfloat_arm.go	/^func fputd(reg uint32, val uint64) {$/;"	f
fputf	./runtime/softfloat_arm.go	/^func fputf(reg uint32, val uint32) {$/;"	f
fpxreg	./runtime/defs_linux_386.go	/^type fpxreg struct {$/;"	t
fpxreg	./runtime/defs_linux_amd64.go	/^type fpxreg struct {$/;"	t
fpxreg1	./runtime/defs_linux_amd64.go	/^type fpxreg1 struct {$/;"	t
fqdn	./net/lookup_windows_test.go	/^func fqdn(s string) string {$/;"	f
fracTests	./go/constant/value_test.go	/^var fracTests = []string{$/;"	v
frag	./bufio/bufio.go	/^	var frag []byte$/;"	v
frag	./regexp/syntax/compile.go	/^type frag struct {$/;"	t
frame	./cmd/compile/internal/gc/subr.go	/^func frame(context int) {$/;"	f
frame	./runtime/mbitmap.go	/^		var frame stkframe$/;"	v
frame	./runtime/trace/trace_stack_test.go	/^	type frame struct {$/;"	t
frame	./runtime/traceback.go	/^	var frame stkframe$/;"	v
frameNode	./cmd/trace/trace.go	/^type frameNode struct {$/;"	t
frameo	./cmd/link/internal/ld/dwarf.go	/^var frameo int64$/;"	v
framepointer_enabled	./runtime/stack1.go	/^var framepointer_enabled bool$/;"	v
framereloco	./cmd/link/internal/ld/dwarf.go	/^var framereloco int64$/;"	v
framerelocsize	./cmd/link/internal/ld/dwarf.go	/^var framerelocsize int64$/;"	v
frames	./image/gif/writer_test.go	/^var frames = []string{$/;"	v
frames	./runtime/stubs.go	/^\/\/ Not all cgocallback_gofunc frames are actually cgocallback_gofunc,$/;"	f
framesec	./cmd/link/internal/ld/dwarf.go	/^var framesec *LSym$/;"	v
framesize	./cmd/link/internal/ld/dwarf.go	/^var framesize int64$/;"	v
framesym	./cmd/link/internal/ld/dwarf.go	/^var framesym *LSym$/;"	v
framesympos	./cmd/link/internal/ld/dwarf.go	/^var framesympos int64$/;"	v
free	./fmt/print.go	/^func (p *pp) free() {$/;"	f
free	./fmt/scan.go	/^func (s *ss) free(old ssave) {$/;"	f
free	./regexp/exec.go	/^func (m *machine) free(t *thread) {$/;"	f
free	./runtime/netpoll.go	/^func (c *pollCache) free(pd *pollDesc) {$/;"	f
freeBlock	./crypto/tls/conn.go	/^func (hc *halfConn) freeBlock(b *block) {$/;"	f
freeDecoderState	./encoding/gob/decode.go	/^func (dec *Decoder) freeDecoderState(d *decoderState) {$/;"	f
freeEncoderState	./encoding/gob/encode.go	/^func (enc *Encoder) freeEncoderState(e *encoderState) {$/;"	f
freeOSMemory	./runtime/debug/stubs.go	/^func freeOSMemory()$/;"	f
freeRequest	./net/rpc/server.go	/^func (server *Server) freeRequest(req *Request) {$/;"	f
freeResponse	./net/rpc/server.go	/^func (server *Server) freeResponse(resp *Response) {$/;"	f
freeStackSpans	./runtime/stack1.go	/^func freeStackSpans() {$/;"	f
freeblock	./cmd/compile/internal/gc/plive.go	/^func freeblock(bb *BasicBlock) {$/;"	f
freebsdVersion	./syscall/route_freebsd.go	/^var freebsdVersion uint32$/;"	v
freecfg	./cmd/compile/internal/gc/plive.go	/^func freecfg(cfg []*BasicBlock) {$/;"	f
freedefer	./runtime/panic.go	/^func freedefer(d *_defer) {$/;"	f
freedeferfn	./runtime/panic.go	/^func freedeferfn() {$/;"	f
freedeferpanic	./runtime/panic.go	/^func freedeferpanic() {$/;"	f
freeliveness	./cmd/compile/internal/gc/plive.go	/^func freeliveness(lv *Liveness) {$/;"	f
freemark	./runtime/heapdump.go	/^var freemark [_PageSize \/ 8]bool$/;"	v
freemcache	./runtime/mcache.go	/^func freemcache(c *mcache) {$/;"	f
freespecial	./runtime/mheap.go	/^func freespecial(s *special, p unsafe.Pointer, size uintptr, freed bool) bool {$/;"	f
freezetheworld	./runtime/proc1.go	/^func freezetheworld() {$/;"	f
freezing	./go/types/example_test.go	/^	\/\/ .  .  .  var freezing temperature.Celsius$/;"	v
frexp	./math/all_test.go	/^var frexp = []fi{$/;"	v
frexp	./math/frexp.go	/^func frexp(f float64) (frac float64, exp int) {$/;"	f
frexp10	./strconv/extfloat.go	/^func (f *extFloat) frexp10() (exp10, index int) {$/;"	f
frexp10Many	./strconv/extfloat.go	/^func frexp10Many(a, b, c *extFloat) (exp10 int) {$/;"	f
frexpBC	./math/all_test.go	/^var frexpBC = []fi{$/;"	v
frexpSC	./math/all_test.go	/^var frexpSC = []fi{$/;"	v
from	./cmd/compile/internal/gc/plive.go	/^	var from Node$/;"	v
from	./cmd/fix/typecheck.go	/^			\/\/ Identifier can take its type from underlying object.$/;"	t
from	./cmd/link/internal/ld/objfile.go	/^	if typ != nil { \/\/ if bss sym defined multiple times, take type from any one def$/;"	t
from	./debug/dwarf/type.go	/^	\/\/ Parse type from Entry.$/;"	t
from	./debug/dwarf/type.go	/^\/\/ readType reads a type from r at off of name using and updating a$/;"	t
from	./go/types/typexpr.go	/^	\/\/ For a variadic function, change the last parameter's type from T to []T.$/;"	t
from	./net/http/fs.go	/^\/\/ first tries to deduce the type from name's file extension and,$/;"	t
fromBase10	./crypto/rsa/rsa_test.go	/^func fromBase10(base10 string) *big.Int {$/;"	f
fromBase10	./crypto/x509/x509_test.go	/^func fromBase10(base10 string) *big.Int {$/;"	f
fromBase64	./crypto/x509/x509_test.go	/^func fromBase64(in string) []byte {$/;"	f
fromBinary	./cmd/compile/internal/big/float_test.go	/^func fromBinary(s string) int64 {$/;"	f
fromBinary	./math/big/float_test.go	/^func fromBinary(s string) int64 {$/;"	f
fromHex	./crypto/ecdsa/ecdsa_test.go	/^func fromHex(s string) *big.Int {$/;"	f
fromHex	./crypto/rsa/pss_test.go	/^func fromHex(hexStr string) []byte {$/;"	f
fromHex	./crypto/tls/handshake_server_test.go	/^func fromHex(s string) []byte {$/;"	f
fromHex	./mime/encodedword.go	/^func fromHex(b byte) (byte, error) {$/;"	f
fromHex	./mime/quotedprintable/reader.go	/^func fromHex(b byte) (byte, error) {$/;"	f
fromHexChar	./encoding/hex/hex.go	/^func fromHexChar(c byte) (byte, bool) {$/;"	f
fromMyNode	./runtime/lfstack_test.go	/^func fromMyNode(node *MyNode) *LFNode {$/;"	f
fromSlash	./os/file_windows.go	/^func fromSlash(path string) string {$/;"	f
fromint64sw	./runtime/softfloat64_test.go	/^func fromint64sw(f float64) float64 {$/;"	f
fs	./runtime/signal_darwin_386.go	/^func (c *sigctxt) fs() uint32      { return c.regs().fs }$/;"	f
fs	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) fs() uint64      { return c.regs().fs }$/;"	f
fs	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) fs() uint64      { return uint64(c.regs().mc_ss) }$/;"	f
fs	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) fs() uint32      { return uint32(c.regs().mc_fs) }$/;"	f
fs	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) fs() uint64      { return uint64(c.regs().mc_fs) }$/;"	f
fs	./runtime/signal_linux_386.go	/^func (c *sigctxt) fs() uint32        { return uint32(c.regs().fs) }$/;"	f
fs	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) fs() uint64      { return uint64(c.regs().fs) }$/;"	f
fs	./runtime/signal_nacl_386.go	/^func (c *sigctxt) fs() uint32        { return ^uint32(0) }$/;"	f
fs	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) fs() uint64      { return ^uint64(0) }$/;"	f
fs	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) fs() uint32       { return uint32(c.regs().__gregs[_REG_FS]) }$/;"	f
fs	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) fs() uint64      { return c.regs().__gregs[_REG_FS] }$/;"	f
fs	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) fs() uint32      { return c.regs().sc_fs }$/;"	f
fs	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) fs() uint64      { return c.regs().sc_fs }$/;"	f
fs	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) fs() uint64      { return uint64(c.regs().gregs[_REG_FS]) }$/;"	f
fs	./syscall/fs_nacl.go	/^var fs = newFsys()$/;"	v
fsRedirectTestData	./net/http/fs_test.go	/^var fsRedirectTestData = []struct {$/;"	v
fset	./cmd/api/goapi.go	/^var fset = token.NewFileSet()$/;"	v
fset	./cmd/cgo/main.go	/^var fset = token.NewFileSet()$/;"	v
fset	./go/printer/printer_test.go	/^var fset = token.NewFileSet()$/;"	v
fset	./go/scanner/scanner_test.go	/^var fset = token.NewFileSet()$/;"	v
fset	./go/token/position_test.go	/^	var fset *FileSet$/;"	v
fset	./go/types/check_test.go	/^var fset = token.NewFileSet()$/;"	v
fset	./go/types/methodset.go	/^		var fset fieldSet$/;"	v
fset	./go/types/type.go	/^	var fset objset$/;"	v
fset	./go/types/typexpr.go	/^	var fset objset$/;"	v
fsinit	./syscall/fs_nacl.go	/^var fsinit = func() {}$/;"	v
fslice	./cmd/vet/testdata/print.go	/^	var fslice []float64$/;"	v
fstatus	./runtime/softfloat_arm.go	/^func fstatus(nan bool, cmp int32) uint32 {$/;"	f
fsub64	./runtime/softfloat64.go	/^func fsub64(f, g uint64) uint64 {$/;"	f
fsys	./syscall/fs_nacl.go	/^type fsys struct {$/;"	t
fsysFile	./syscall/fs_nacl.go	/^type fsysFile struct {$/;"	t
ft	./reflect/export_test.go	/^	var ft *rtype$/;"	v
ft	./syscall/syscall_windows.go	/^	var ft Filetime$/;"	v
ftToDuration	./os/exec_windows.go	/^func ftToDuration(ft *syscall.Filetime) time.Duration {$/;"	f
ftabaddstring	./cmd/link/internal/ld/pcln.go	/^func ftabaddstring(ftab *LSym, s string) int32 {$/;"	f
ftable	./cmd/yacc/yacc.go	/^var ftable *bufio.Writer    \/\/ y.go file$/;"	v
ftmp	./crypto/elliptic/p256.go	/^	var ftmp, ftmp2 [p256Limbs]uint32$/;"	v
ftoaTest	./strconv/ftoa_test.go	/^type ftoaTest struct {$/;"	t
ftoatests	./strconv/ftoa_test.go	/^var ftoatests = []ftoaTest{$/;"	v
full	./bufio/bufio.go	/^	var full [][]byte$/;"	v
full	./net/url/url.go	/^	var full string$/;"	v
fullCaseTest	./unicode/maketables.go	/^func fullCaseTest() {$/;"	f
fullCategoryTest	./unicode/maketables.go	/^func fullCategoryTest(list []string) {$/;"	f
fullScriptTest	./unicode/maketables.go	/^func fullScriptTest(list []string, installed map[string]*unicode.RangeTable, scripts map[string][]Script) {$/;"	f
fun	./go/types/builtins_test.go	/^	var fun ast.Expr$/;"	v
funNN	./cmd/compile/internal/big/nat_test.go	/^type funNN func(z, x, y nat) nat$/;"	t
funNN	./math/big/nat_test.go	/^type funNN func(z, x, y nat) nat$/;"	t
funVV	./cmd/compile/internal/big/arith_test.go	/^type funVV func(z, x, y []Word) (c Word)$/;"	t
funVV	./math/big/arith_test.go	/^type funVV func(z, x, y []Word) (c Word)$/;"	t
funVW	./cmd/compile/internal/big/arith_test.go	/^type funVW func(z, x []Word, y Word) (c Word)$/;"	t
funVW	./math/big/arith_test.go	/^type funVW func(z, x []Word, y Word) (c Word)$/;"	t
funVWW	./cmd/compile/internal/big/arith_test.go	/^type funVWW func(z, x []Word, y, r Word) (c Word)$/;"	t
funVWW	./math/big/arith_test.go	/^type funVWW func(z, x []Word, y, r Word) (c Word)$/;"	t
funWVW	./cmd/compile/internal/big/arith_test.go	/^type funWVW func(z []Word, xn Word, x []Word, y Word) (r Word)$/;"	t
funWVW	./math/big/arith_test.go	/^type funWVW func(z []Word, xn Word, x []Word, y Word) (r Word)$/;"	t
funWW	./cmd/compile/internal/big/arith_test.go	/^type funWW func(x, y, c Word) (z1, z0 Word)$/;"	t
funWW	./math/big/arith_test.go	/^type funWW func(x, y, c Word) (z1, z0 Word)$/;"	t
funZZ	./cmd/compile/internal/big/int_test.go	/^type funZZ func(z, x, y *Int) *Int$/;"	t
funZZ	./math/big/int_test.go	/^type funZZ func(z, x, y *Int) *Int$/;"	t
funarg	./cmd/compile/internal/gc/typecheck.go	/^		var funarg *Type$/;"	v
func	./cmd/go/testdata/src/badtest/badsyntax/x_test.go	/^func func func func func!$/;"	f
func	./cmd/vet/unused.go	/^	"comma-separated list of names of methods of type func() string whose results must be used")$/;"	t
func	./debug/elf/symbols_test.go	/^	do := func(file string, ts []Symbol, getfunc func(*File) ([]Symbol, error)) {$/;"	f
func	./runtime/cgo/gcc_openbsd_386.c	/^	void *(*func)(void *);$/;"	m	struct:thread_args	file:
func	./runtime/cgo/gcc_openbsd_amd64.c	/^	void *(*func)(void *);$/;"	m	struct:thread_args	file:
funcBody	./go/types/stmt.go	/^func (check *Checker) funcBody(decl *declInfo, name string, sig *Signature, body *ast.BlockStmt) {$/;"	f
funcDecl	./go/printer/nodes.go	/^func (p *printer) funcDecl(d *ast.FuncDecl) {$/;"	f
funcDecl	./go/types/decl.go	/^func (check *Checker) funcDecl(obj *Func, decl *declInfo) {$/;"	f
funcInfo	./go/types/check.go	/^type funcInfo struct {$/;"	t
funcLayout	./reflect/type.go	/^func funcLayout(t *rtype, rcvr *rtype) (frametype *rtype, argSize, retOffset uintptr, stk *bitVector, framePool *sync.Pool) {$/;"	f
funcLayoutTest	./reflect/all_test.go	/^type funcLayoutTest struct {$/;"	t
funcLayoutTests	./reflect/all_test.go	/^var funcLayoutTests []funcLayoutTest$/;"	v
funcLit	./cmd/api/testdata/src/pkg/p1/p1.go	/^var funcLit = func() {}$/;"	v
funcLitFinder	./cmd/cover/cover.go	/^type funcLitFinder token.Pos$/;"	t
funcLookupCache	./reflect/type.go	/^var funcLookupCache struct {$/;"	v
funcMap	./html/template/escape.go	/^var funcMap = template.FuncMap{$/;"	v
funcName	./reflect/value.go	/^func funcName(f func([]Value) []Value) string {$/;"	f
funcOutput	./cmd/cover/func.go	/^func funcOutput(profile, outputFile string) error {$/;"	f
funcOutputAndInput	./cmd/compile/internal/gc/esc.go	/^func funcOutputAndInput(dst, src *Node) bool {$/;"	f
funcPC	./runtime/cgo/signal_darwin_armx.go	/^func funcPC(f interface{}) uintptr {$/;"	f
funcPC	./runtime/proc.go	/^func funcPC(f interface{}) uintptr {$/;"	f
funcStr	./reflect/type.go	/^func funcStr(ft *funcType) string {$/;"	f
funcSummary	./cmd/doc/pkg.go	/^func (pkg *Package) funcSummary(funcs []*doc.Func) {$/;"	f
funcSym	./cmd/compile/internal/gc/esc.go	/^func funcSym(fn *Node) *Sym {$/;"	f
funcType	./go/types/typexpr.go	/^func (check *Checker) funcType(sig *Signature, recvPar *ast.FieldList, ftyp *ast.FuncType) {$/;"	f
funcType	./reflect/type.go	/^type funcType struct {$/;"	t
funcargs	./cmd/compile/internal/gc/dcl.go	/^func funcargs(nt *Node) {$/;"	f
funcargs2	./cmd/compile/internal/gc/dcl.go	/^func funcargs2(t *Type) {$/;"	f
funcbody	./cmd/compile/internal/gc/dcl.go	/^func funcbody(n *Node) {$/;"	f
funccompile	./cmd/compile/internal/gc/dcl.go	/^func funccompile(n *Node) {$/;"	f
funcdata	./runtime/symtab.go	/^func funcdata(f *_func, i int32) unsafe.Pointer {$/;"	f
funcfirst	./cmd/compile/internal/gc/subr.go	/^func funcfirst(s *Iter, t *Type) *Type {$/;"	f
funchdr	./cmd/compile/internal/gc/dcl.go	/^func funchdr(n *Node) {$/;"	f
funcline	./runtime/symtab.go	/^func funcline(f *_func, targetpc uintptr) (file string, line int32) {$/;"	f
funcline1	./runtime/symtab.go	/^func funcline1(f *_func, targetpc uintptr, strict bool) (file string, line int32) {$/;"	f
funcname	./runtime/symtab.go	/^func funcname(f *_func) string {$/;"	f
funcname	./runtime/syscall_windows_test.go	/^	var funcname, attr string$/;"	v
funcnext	./cmd/compile/internal/gc/subr.go	/^func funcnext(s *Iter) *Type {$/;"	f
funcpctab	./cmd/internal/obj/pcln.go	/^func funcpctab(ctxt *Link, dst *Pcdata, func_ *LSym, desc string, valfunc func(*Link, *LSym, int32, *Prog, int32, interface{}) int32, arg interface{}) {$/;"	f
funcs	./crypto/md5/gen.go	/^var funcs = template.FuncMap{$/;"	v
funcspdelta	./runtime/symtab.go	/^func funcspdelta(f *_func, targetpc uintptr) int32 {$/;"	f
funcstart	./cmd/link/internal/ld/pcln.go	/^	var funcstart int32$/;"	v
funcsym	./cmd/compile/internal/gc/dcl.go	/^func funcsym(s *Sym) *Sym {$/;"	f
funcsyms	./cmd/compile/internal/gc/go.go	/^var funcsyms *NodeList$/;"	v
functab	./runtime/symtab.go	/^type functab struct {$/;"	t
function	./runtime/debug/stack.go	/^func function(pc uintptr) []byte {$/;"	f
functionAndType	./testing/quick/quick.go	/^func functionAndType(f interface{}) (v reflect.Value, t reflect.Type, ok bool) {$/;"	f
functionBodies	./go/types/resolver.go	/^func (check *Checker) functionBodies() {$/;"	f
functionCompleter	./cmd/pprof/internal/driver/interactive.go	/^func functionCompleter(substring string) string {$/;"	f
functionDecoder	./cmd/pprof/internal/profile/encode.go	/^var functionDecoder = []decoder{$/;"	v
functions	./cmd/pprof/internal/report/source.go	/^	var functions nodes$/;"	v
functype	./cmd/compile/internal/gc/dcl.go	/^func functype(this *Node, in *NodeList, out *NodeList) *Type {$/;"	f
functype	./runtime/type.go	/^type functype struct {$/;"	t
funcval	./runtime/runtime2.go	/^type funcval struct {$/;"	t
funnyEncoding	./encoding/base64/base64_test.go	/^var funnyEncoding = NewEncoding(encodeStd).WithPadding(rune('@'))$/;"	v
funnyRef	./encoding/base64/base64_test.go	/^func funnyRef(ref string) string {$/;"	f
funpack32	./runtime/softfloat64.go	/^func funpack32(f uint32) (sign, mant uint32, exp int, inf, nan bool) {$/;"	f
funpack64	./runtime/softfloat64.go	/^func funpack64(f uint64) (sign, mant uint64, exp int, inf, nan bool) {$/;"	f
futex	./runtime/os_linux.go	/^func futex(addr unsafe.Pointer, op int32, val uint32, ts, addr2 unsafe.Pointer, val3 uint32) int32$/;"	f
futexsleep	./runtime/os1_dragonfly.go	/^func futexsleep(addr *uint32, val uint32, ns int64) {$/;"	f
futexsleep	./runtime/os1_freebsd.go	/^func futexsleep(addr *uint32, val uint32, ns int64) {$/;"	f
futexsleep	./runtime/os1_linux.go	/^func futexsleep(addr *uint32, val uint32, ns int64) {$/;"	f
futexsleep1	./runtime/os1_dragonfly.go	/^func futexsleep1(addr *uint32, val uint32, ns int64) {$/;"	f
futexsleep1	./runtime/os1_freebsd.go	/^func futexsleep1(addr *uint32, val uint32, ns int64) {$/;"	f
futexsleepTest	./runtime/futex_test.go	/^type futexsleepTest struct {$/;"	t
futexsleepTests	./runtime/futex_test.go	/^var futexsleepTests = []futexsleepTest{$/;"	v
futexwakeup	./runtime/os1_dragonfly.go	/^func futexwakeup(addr *uint32, cnt uint32) {$/;"	f
futexwakeup	./runtime/os1_freebsd.go	/^func futexwakeup(addr *uint32, cnt uint32) {$/;"	f
futexwakeup	./runtime/os1_linux.go	/^func futexwakeup(addr *uint32, cnt uint32) {$/;"	f
futimes	./syscall/zsyscall_darwin_386.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_darwin_amd64.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_darwin_arm.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_darwin_arm64.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_dragonfly_amd64.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_freebsd_386.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_freebsd_amd64.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_freebsd_arm.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_netbsd_386.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_netbsd_amd64.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_netbsd_arm.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_openbsd_386.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_openbsd_amd64.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimes	./syscall/zsyscall_openbsd_arm.go	/^func futimes(fd int, timeval *[2]Timeval) (err error) {$/;"	f
futimesat	./syscall/zsyscall_linux_386.go	/^func futimesat(dirfd int, path *byte, times *[2]Timeval) (err error) {$/;"	f
futimesat	./syscall/zsyscall_linux_amd64.go	/^func futimesat(dirfd int, path *byte, times *[2]Timeval) (err error) {$/;"	f
futimesat	./syscall/zsyscall_linux_arm.go	/^func futimesat(dirfd int, path *byte, times *[2]Timeval) (err error) {$/;"	f
futimesat	./syscall/zsyscall_linux_arm64.go	/^func futimesat(dirfd int, path *byte, times *[2]Timeval) (err error) {$/;"	f
futimesat	./syscall/zsyscall_linux_ppc64.go	/^func futimesat(dirfd int, path *byte, times *[2]Timeval) (err error) {$/;"	f
futimesat	./syscall/zsyscall_linux_ppc64le.go	/^func futimesat(dirfd int, path *byte, times *[2]Timeval) (err error) {$/;"	f
fv	./cmd/pprof/internal/driver/interactive.go	/^	var fv float64$/;"	v
fwdSig	./runtime/signal1_unix.go	/^var fwdSig [_NSIG]uintptr$/;"	v
fwdcount	./cmd/link/internal/ld/dwarf.go	/^var fwdcount int$/;"	v
fx	./cmd/compile/internal/x86/cgen64.go	/^		var fx gc.Node$/;"	v
g	./cmd/compile/internal/gc/dcl.go	/^			\/\/	func g() int$/;"	f
g	./cmd/go/testdata/src/vetpkg/c.go	/^func g() {$/;"	f
g	./go/parser/short_test.go	/^	`package p; type T []int; func g(int) bool { return true }; func f() { if g(T{42}[0]) {} };`,$/;"	f
g	./go/types/api_test.go	/^func (C) g()$/;"	f
g	./go/types/resolver_test.go	/^		func g() (x int) { return }$/;"	f
g	./runtime/cgo/libcgo.h	/^	G *g;$/;"	m	struct:ThreadStart
g	./runtime/go_tls.h	/^#define	g(/;"	d
g0	./runtime/asm_arm.s	/^g0:$/;"	l
g0	./runtime/asm_arm64.s	/^g0:$/;"	l
g0	./runtime/asm_ppc64x.s	/^g0:$/;"	l
g0	./runtime/sys_windows_386.s	/^g0:$/;"	l
g0	./runtime/sys_windows_amd64.s	/^g0:$/;"	l
g2debug	./cmd/yacc/yacc.go	/^var g2debug = 0 \/\/ debugging for go2gen$/;"	v
gScanStatusStrings	./runtime/traceback.go	/^var gScanStatusStrings = [...]string{$/;"	v
gStatusStrings	./runtime/traceback.go	/^var gStatusStrings = [...]string{$/;"	v
gactive	./cmd/compile/internal/amd64/peep.go	/^var gactive uint32$/;"	v
gactive	./cmd/compile/internal/arm/peep.go	/^var gactive uint32$/;"	v
gactive	./cmd/compile/internal/arm64/peep.go	/^var gactive uint32$/;"	v
gactive	./cmd/compile/internal/ppc64/peep.go	/^var gactive uint32$/;"	v
gactive	./cmd/compile/internal/x86/peep.go	/^var gactive uint32$/;"	v
gamma	./math/all_test.go	/^var gamma = []float64{$/;"	v
gammaSC	./math/all_test.go	/^var gammaSC = []float64{$/;"	v
garbage	./runtime/chanbarrier_test.go	/^			var garbage []byte$/;"	v
gbit16	./syscall/dir_plan9.go	/^func gbit16(b []byte) (uint16, []byte) {$/;"	f
gbit32	./syscall/dir_plan9.go	/^func gbit32(b []byte) (uint32, []byte) {$/;"	f
gbit64	./syscall/dir_plan9.go	/^func gbit64(b []byte) (uint64, []byte) {$/;"	f
gbit8	./syscall/dir_plan9.go	/^func gbit8(b []byte) (uint8, []byte) {$/;"	f
gc	./cmd/link/internal/ld/data.go	/^	var gc GCProg$/;"	v
gc	./runtime/mgc.go	/^func gc(mode int) {$/;"	f
gcAssistAlloc	./runtime/mgcmark.go	/^func gcAssistAlloc(size uintptr, allowAssist bool) {$/;"	f
gcBgMarkPrepare	./runtime/mgc.go	/^func gcBgMarkPrepare() {$/;"	f
gcBgMarkStartWorkers	./runtime/mgc.go	/^func gcBgMarkStartWorkers() {$/;"	f
gcBgMarkWorker	./runtime/mgc.go	/^func gcBgMarkWorker(p *p) {$/;"	f
gcBlackenEnabled	./runtime/mgc.go	/^var gcBlackenEnabled uint32$/;"	v
gcBlackenPromptly	./runtime/mgc.go	/^var gcBlackenPromptly bool$/;"	v
gcCompatibilityMode	./go/types/typestring.go	/^var gcCompatibilityMode bool$/;"	v
gcController	./runtime/mgc.go	/^var gcController = gcControllerState{$/;"	v
gcControllerState	./runtime/mgc.go	/^type gcControllerState struct {$/;"	t
gcCopySpans	./runtime/mgc.go	/^func gcCopySpans() {$/;"	f
gcDrain	./runtime/mgcmark.go	/^func gcDrain(gcw *gcWork, flushScanCredit int64) {$/;"	f
gcDrainN	./runtime/mgcmark.go	/^func gcDrainN(gcw *gcWork, scanWork int64) {$/;"	f
gcDrainUntilPreempt	./runtime/mgcmark.go	/^func gcDrainUntilPreempt(gcw *gcWork, flushScanCredit int64) {$/;"	f
gcDumpObject	./runtime/mgcmark.go	/^func gcDumpObject(label string, obj, off uintptr) {$/;"	f
gcFlushGCWork	./runtime/mgc.go	/^func gcFlushGCWork() {$/;"	f
gcInstallStackBarrier	./runtime/mgcmark.go	/^func gcInstallStackBarrier(gp *g, frame *stkframe) bool {$/;"	f
gcMark	./runtime/mgc.go	/^func gcMark(start_time int64) {$/;"	f
gcMarkWorkAvailable	./runtime/mgc.go	/^func gcMarkWorkAvailable(p *p) bool {$/;"	f
gcMarkWorkerMode	./runtime/mgc.go	/^type gcMarkWorkerMode int$/;"	t
gcMaxStackBarriers	./runtime/mgcmark.go	/^func gcMaxStackBarriers(stackSize int) (n int) {$/;"	f
gcPrintStkbars	./runtime/mgcmark.go	/^func gcPrintStkbars(stkbar []stkbar) {$/;"	f
gcRemoveStackBarrier	./runtime/mgcmark.go	/^func gcRemoveStackBarrier(gp *g, stkbar stkbar) {$/;"	f
gcRemoveStackBarriers	./runtime/mgcmark.go	/^func gcRemoveStackBarriers(gp *g) {$/;"	f
gcResetGState	./runtime/mgc.go	/^func gcResetGState() (numgs int) {$/;"	f
gcResetMarkState	./runtime/mgc.go	/^func gcResetMarkState() {$/;"	f
gcStartTime	./internal/trace/goroutines.go	/^	var gcStartTime int64$/;"	v
gcSweep	./runtime/mgc.go	/^func gcSweep(mode int) {$/;"	f
gcUnwindBarriers	./runtime/mgcmark.go	/^func gcUnwindBarriers(gp *g, sp uintptr) {$/;"	f
gcWork	./runtime/mgcwork.go	/^type gcWork struct {$/;"	t
gcallers	./runtime/traceback.go	/^func gcallers(gp *g, skip int, pcbuf []uintptr) int {$/;"	f
gcargs	./cmd/compile/internal/gc/pgen.go	/^	var gcargs *Sym$/;"	v
gcbits	./reflect/export_test.go	/^func gcbits(interface{}) []byte \/\/ provided by runtime$/;"	f
gccBaseCmd	./cmd/cgo/gcc.go	/^func (p *Package) gccBaseCmd() []string {$/;"	f
gccCmd	./cmd/cgo/gcc.go	/^func (p *Package) gccCmd() []string {$/;"	f
gccDebug	./cmd/cgo/gcc.go	/^func (p *Package) gccDebug(stdin []byte) (*dwarf.Data, binary.ByteOrder, []byte) {$/;"	f
gccDefines	./cmd/cgo/gcc.go	/^func (p *Package) gccDefines(stdin []byte) string {$/;"	f
gccErrors	./cmd/cgo/gcc.go	/^func (p *Package) gccErrors(stdin []byte) string {$/;"	f
gccExportHeaderProlog	./cmd/cgo/out.go	/^func (p *Package) gccExportHeaderProlog() string {$/;"	f
gccMachine	./cmd/cgo/gcc.go	/^func (p *Package) gccMachine() []string {$/;"	f
gccRegName	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^var gccRegName = [...]string{$/;"	v
gccTmp	./cmd/cgo/gcc.go	/^func gccTmp() string {$/;"	f
gccgo	./cmd/cgo/main.go	/^var gccgo = flag.Bool("gccgo", false, "generate files for use with gccgo")$/;"	v
gccgoInit	./cmd/cgo/out.go	/^	var gccgoInit bytes.Buffer$/;"	v
gccgoSymbolPrefix	./cmd/cgo/out.go	/^func (p *Package) gccgoSymbolPrefix() string {$/;"	f
gccgoimports	./go/importer/importer.go	/^type gccgoimports struct {$/;"	t
gccgopkgpath	./cmd/cgo/main.go	/^var gccgopkgpath = flag.String("gccgopkgpath", "", "-fgo-pkgpath option used with gccgo")$/;"	v
gccgoprefix	./cmd/cgo/main.go	/^var gccgoprefix = flag.String("gccgoprefix", "", "-fgo-prefix option used with gccgo")$/;"	v
gcdTests	./cmd/compile/internal/big/int_test.go	/^var gcdTests = []struct {$/;"	v
gcdTests	./math/big/int_test.go	/^var gcdTests = []struct {$/;"	v
gcdata	./reflect/type.go	/^	var gcdata *byte$/;"	v
gcenable	./runtime/mgc.go	/^func gcenable() {$/;"	f
gchelper	./runtime/mgc.go	/^func gchelper() {$/;"	f
gchelperstart	./runtime/mgc.go	/^func gchelperstart() {$/;"	f
gcimports	./go/importer/importer.go	/^type gcimports map[string]*types.Package$/;"	t
gcinfoSink	./runtime/gcinfo_test.go	/^var gcinfoSink interface{}$/;"	v
gcinit	./runtime/mgc.go	/^func gcinit() {$/;"	f
gclean	./cmd/compile/internal/gc/gsubr.go	/^func gclean() {$/;"	f
gclink	./runtime/mcache.go	/^type gclink struct {$/;"	t
gclinkptr	./runtime/mcache.go	/^type gclinkptr uintptr$/;"	t
gclocals	./cmd/compile/internal/gc/pgen.go	/^	var gclocals *Sym$/;"	v
gcm	./crypto/cipher/gcm.go	/^type gcm struct {$/;"	t
gcmAdd	./crypto/cipher/gcm.go	/^func gcmAdd(x, y *gcmFieldElement) gcmFieldElement {$/;"	f
gcmDouble	./crypto/cipher/gcm.go	/^func gcmDouble(x *gcmFieldElement) (double gcmFieldElement) {$/;"	f
gcmFieldElement	./crypto/cipher/gcm.go	/^type gcmFieldElement struct {$/;"	t
gcmInc32	./crypto/cipher/gcm.go	/^func gcmInc32(counterBlock *[16]byte) {$/;"	f
gcmReductionTable	./crypto/cipher/gcm.go	/^var gcmReductionTable = []uint16{$/;"	v
gcmarknewobject_m	./runtime/mgcmark.go	/^func gcmarknewobject_m(obj, size uintptr) {$/;"	f
gcmarkwb_m	./runtime/mbarrier.go	/^func gcmarkwb_m(slot *uintptr, ptr uintptr) {$/;"	f
gcmp	./cmd/compile/internal/arm64/gsubr.go	/^func gcmp(as int, lhs *gc.Node, rhs *gc.Node) *obj.Prog {$/;"	f
gconreg	./cmd/compile/internal/amd64/gsubr.go	/^func gconreg(as int, c int64, reg int) {$/;"	f
gconreg	./cmd/compile/internal/x86/gsubr.go	/^func gconreg(as int, c int64, reg int) {$/;"	f
gcount	./runtime/proc1.go	/^func gcount() int32 {$/;"	f
gcpercent	./runtime/mgc.go	/^var gcpercent int32$/;"	v
gcphase	./runtime/mgc.go	/^var gcphase uint32$/;"	v
gcprocs	./runtime/proc1.go	/^func gcprocs() int32 {$/;"	f
gcscan_m	./runtime/mgcmark.go	/^func gcscan_m() {$/;"	f
gcstats	./runtime/runtime2.go	/^type gcstats struct {$/;"	t
gcstopm	./runtime/proc1.go	/^func gcstopm() {$/;"	f
gcsymdup	./cmd/compile/internal/gc/pgen.go	/^func gcsymdup(s *Sym) {$/;"	f
gcw	./runtime/mgc.go	/^		var gcw gcWork$/;"	v
gcw	./runtime/mgc.go	/^	var gcw gcWork$/;"	v
gcw	./runtime/mgcmark.go	/^	var gcw gcWork$/;"	v
gcw	./runtime/mgcwork.go	/^\/\/     var gcw gcWork$/;"	v
gdata	./cmd/compile/internal/gc/obj.go	/^func gdata(nam *Node, nr *Node, wid int) {$/;"	f
gdatacomplex	./cmd/compile/internal/gc/obj.go	/^func gdatacomplex(nam *Node, cval *Mpcplx) {$/;"	f
gdatastring	./cmd/compile/internal/gc/obj.go	/^func gdatastring(nam *Node, sval string) {$/;"	f
gdbscript	./cmd/link/internal/ld/dwarf.go	/^var gdbscript string$/;"	v
gdbscripto	./cmd/link/internal/ld/dwarf.go	/^var gdbscripto int64$/;"	v
gdbscriptsize	./cmd/link/internal/ld/dwarf.go	/^var gdbscriptsize int64$/;"	v
gdesc	./internal/trace/goroutines.go	/^type gdesc struct {$/;"	t
gdesc	./internal/trace/parser.go	/^	type gdesc struct {$/;"	t
gdescList	./cmd/trace/goroutines.go	/^type gdescList []*trace.GDesc$/;"	t
ge	./text/template/funcs.go	/^func ge(arg1, arg2 interface{}) (bool, error) {$/;"	f
gen	./cmd/compile/internal/gc/gen.go	/^func gen(n *Node) {$/;"	f
gen	./go/types/hilbert_test.go	/^type gen struct {$/;"	t
gen	./runtime/mkduff.go	/^func gen(arch string, tags, zero, copy func(io.Writer)) {$/;"	f
genArray	./encoding/json/scanner_test.go	/^func genArray(n int) []interface{} {$/;"	f
genDecl	./go/printer/nodes.go	/^func (p *printer) genDecl(d *ast.GenDecl) {$/;"	f
genFilenames	./cmd/gofmt/long_test.go	/^func genFilenames(t *testing.T, filenames chan<- string) {$/;"	f
genLabel	./cmd/pprof/internal/report/report.go	/^func genLabel(d int, n, l, f string) string {$/;"	f
genLine	./bufio/scan_test.go	/^func genLine(buf *bytes.Buffer, lineNum, n int, addNewline bool) {$/;"	f
genMap	./encoding/json/scanner_test.go	/^func genMap(n int) map[string]interface{} {$/;"	f
genPerm	./runtime/hash_test.go	/^func genPerm(h *HashSet, b []byte, s []uint32, n int) {$/;"	f
genSplit	./bytes/bytes.go	/^func genSplit(s, sep []byte, sepSave, n int) [][]byte {$/;"	f
genSplit	./strings/strings.go	/^func genSplit(s, sep string, sepSave, n int) []string {$/;"	f
genString	./encoding/json/scanner_test.go	/^func genString(stddev float64) string {$/;"	f
genValue	./encoding/json/scanner_test.go	/^func genValue(n int) interface{} {$/;"	f
gen_as_init	./cmd/compile/internal/gc/sinit.go	/^func gen_as_init(n *Node) bool {$/;"	f
genasm	./runtime/wincallback.go	/^func genasm() {$/;"	f
genasmsym	./cmd/link/internal/ld/lib.go	/^func genasmsym(put func(*LSym, string, int, int64, int64, int, *LSym)) {$/;"	f
gencallstub	./cmd/link/internal/ppc64/asm.go	/^func gencallstub(abicase int, stub *ld.LSym, targ *ld.LSym) {$/;"	f
geneq	./cmd/compile/internal/gc/subr.go	/^func geneq(sym *Sym, t *Type) {$/;"	f
generalCAS64	./sync/atomic/64bit_arm.go	/^func generalCAS64(addr *uint64, old, new uint64) (swapped bool)$/;"	f
generalSubtree	./crypto/x509/x509.go	/^type generalSubtree struct {$/;"	t
generalizedTimeTest	./encoding/asn1/marshal_test.go	/^type generalizedTimeTest struct {$/;"	t
generalizedTimeTestData	./encoding/asn1/asn1_test.go	/^var generalizedTimeTestData = []timeTest{$/;"	v
generate	./cmd/go/generate.go	/^func generate(pkg, absFile string) bool {$/;"	f
generate	./cmd/pprof/internal/driver/driver.go	/^func generate(interactive bool, prof *profile.Profile, obj plugin.ObjTool, ui plugin.UI, f *flags) error {$/;"	f
generate	./compress/flate/huffman_code.go	/^func (h *huffmanEncoder) generate(freq []int32, maxBits int32) {$/;"	f
generateClientKeyExchange	./crypto/tls/key_agreement.go	/^func (ka *ecdheKeyAgreement) generateClientKeyExchange(config *Config, clientHello *clientHelloMsg, cert *x509.Certificate) ([]byte, *clientKeyExchangeMsg, error) {$/;"	f
generateClientKeyExchange	./crypto/tls/key_agreement.go	/^func (ka rsaKeyAgreement) generateClientKeyExchange(config *Config, clientHello *clientHelloMsg, cert *x509.Certificate) ([]byte, *clientKeyExchangeMsg, error) {$/;"	f
generateCodegen	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) generateCodegen(numLiterals int, numOffsets int) {$/;"	f
generateExponentialSamples	./math/rand/rand_test.go	/^func generateExponentialSamples(nsamples int, rate float64, seed int64) []float64 {$/;"	f
generateFixedLiteralEncoding	./compress/flate/huffman_code.go	/^func generateFixedLiteralEncoding() *huffmanEncoder {$/;"	f
generateFixedOffsetEncoding	./compress/flate/huffman_code.go	/^func generateFixedOffsetEncoding() *huffmanEncoder {$/;"	f
generateNormalSamples	./math/rand/rand_test.go	/^func generateNormalSamples(nsamples int, mean, stddev float64, seed int64) []float64 {$/;"	f
generateReport	./cmd/pprof/internal/driver/interactive.go	/^func generateReport(p *profile.Profile, cmd []string, obj plugin.ObjTool, ui plugin.UI, f *flags) error {$/;"	f
generateServerKeyExchange	./crypto/tls/key_agreement.go	/^func (ka *ecdheKeyAgreement) generateServerKeyExchange(config *Config, cert *Certificate, clientHello *clientHelloMsg, hello *serverHelloMsg) (*serverKeyExchangeMsg, error) {$/;"	f
generateServerKeyExchange	./crypto/tls/key_agreement.go	/^func (ka rsaKeyAgreement) generateServerKeyExchange(config *Config, cert *Certificate, clientHello *clientHelloMsg, hello *serverHelloMsg) (*serverKeyExchangeMsg, error) {$/;"	f
generateSubkeys	./crypto/des/block.go	/^func (c *desCipher) generateSubkeys(keyBytes []byte) {$/;"	f
generateTrace	./cmd/trace/trace.go	/^func generateTrace(params *traceParams) ViewerData {$/;"	f
genericFtoa	./strconv/ftoa.go	/^func genericFtoa(dst []byte, val float64, fmt byte, prec, bitSize int) []byte {$/;"	f
genericReadFrom	./net/net.go	/^func genericReadFrom(w io.Writer, r io.Reader) (n int64, err error) {$/;"	f
genericReplacer	./strings/replace.go	/^type genericReplacer struct {$/;"	t
gengo	./runtime/wincallback.go	/^func gengo() {$/;"	f
genhash	./cmd/compile/internal/gc/subr.go	/^func genhash(sym *Sym, t *Type) {$/;"	f
gentext	./cmd/link/internal/amd64/asm.go	/^func gentext() {$/;"	f
gentext	./cmd/link/internal/arm/asm.go	/^func gentext() {$/;"	f
gentext	./cmd/link/internal/arm64/asm.go	/^func gentext() {}$/;"	f
gentext	./cmd/link/internal/ppc64/asm.go	/^func gentext() {$/;"	f
gentext	./cmd/link/internal/x86/asm.go	/^func gentext() {$/;"	f
gentraceback	./runtime/traceback.go	/^func gentraceback(pc0, sp0, lr0 uintptr, gp *g, skip int, pcbuf *uintptr, max int, callback func(*stkframe, unsafe.Pointer) bool, v unsafe.Pointer, flags uint) int {$/;"	f
genwrapper	./cmd/compile/internal/gc/subr.go	/^func genwrapper(rcvr *Type, method *Type, newnam *Sym, iface int) {$/;"	f
genwrapper_linehistdone	./cmd/compile/internal/gc/subr.go	/^var genwrapper_linehistdone int = 0$/;"	v
gerrno	./net/cgo_unix.go	/^	var gerrno int$/;"	v
get	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) get(expected lex.ScanToken) lex.Token {$/;"	f
get	./encoding/json/encode.go	/^func (sv stringValues) get(i int) string   { return sv[i].String() }$/;"	f
get	./net/http/header.go	/^func (h Header) get(key string) string {$/;"	f
get	./regexp/regexp.go	/^func (re *Regexp) get() *machine {$/;"	f
get	./runtime/mgcwork.go	/^func (ww *gcWork) get() uintptr {$/;"	f
get	./syscall/syscall_unix_test.go	/^	var get syscall.Rlimit$/;"	v
get	./time/zoneinfo.go	/^func (l *Location) get() *Location {$/;"	f
get2	./time/zoneinfo_read.go	/^func get2(b []byte) int {$/;"	f
get28BitsFromEnd	./crypto/elliptic/p224.go	/^func get28BitsFromEnd(buf []byte, shift uint) (uint32, []byte) {$/;"	f
get32b	./cmd/pprof/internal/profile/legacy_profile.go	/^func get32b(b []byte) (uint64, []byte) {$/;"	f
get32l	./cmd/pprof/internal/profile/legacy_profile.go	/^func get32l(b []byte) (uint64, []byte) {$/;"	f
get4	./compress/gzip/gunzip.go	/^func get4(p []byte) uint32 {$/;"	f
get4	./time/zoneinfo_read.go	/^func get4(b []byte) int {$/;"	f
get64b	./cmd/pprof/internal/profile/legacy_profile.go	/^func get64b(b []byte) (uint64, []byte) {$/;"	f
get64l	./cmd/pprof/internal/profile/legacy_profile.go	/^func get64l(b []byte) (uint64, []byte) {$/;"	f
getAbbrs	./time/genzabbrs.go	/^func getAbbrs(l *time.Location) (st, dt string) {$/;"	f
getAdapters	./net/interface_windows.go	/^func getAdapters() (*windows.IpAdapterAddresses, error) {$/;"	f
getAttrList	./syscall/syscall_darwin.go	/^func getAttrList(path string, attrList attrList, attrBuf []byte, options uint) (attrs [][]byte, err error) {$/;"	f
getBase	./fmt/scan.go	/^func (s *ss) getBase(verb rune) (base int, digits string) {$/;"	f
getBaseType	./encoding/gob/type.go	/^func getBaseType(name string, rt reflect.Type) (gobType, error) {$/;"	f
getBasicAuthTest	./net/http/request_test.go	/^type getBasicAuthTest struct {$/;"	t
getBasicAuthTests	./net/http/request_test.go	/^var getBasicAuthTests = []struct {$/;"	v
getBody	./net/http/fs_test.go	/^func getBody(t *testing.T, testName string, req Request) (*Response, []byte) {$/;"	f
getBuffer	./mime/encodedword.go	/^func getBuffer() *bytes.Buffer {$/;"	f
getCaseState	./unicode/maketables.go	/^func getCaseState(i rune) (c *caseState) {$/;"	f
getCertificate	./crypto/tls/common.go	/^func (c *Config) getCertificate(clientHello *ClientHelloInfo) (*Certificate, error) {$/;"	f
getCompilationDir	./cmd/link/internal/ld/dwarf.go	/^func getCompilationDir() string {$/;"	f
getConn	./net/http/transport.go	/^func (t *Transport) getConn(req *Request, cm connectMethod) (*persistConn, error) {$/;"	f
getConstant	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) getConstant(prog *obj.Prog, op int, addr *obj.Addr) int64 {$/;"	f
getConstantPseudo	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) getConstantPseudo(pseudo string, addr *obj.Addr) int64 {$/;"	f
getCurrentProcessId	./syscall/zsyscall_windows.go	/^func getCurrentProcessId() (pid uint32) {$/;"	f
getD	./cmd/go/get.go	/^var getD = cmdGet.Flag.Bool("d", false, "")$/;"	v
getDB	./database/sql/fakedb_test.go	/^func (d *fakeDriver) getDB(name string) *fakeDB {$/;"	f
getDecEnginePtr	./encoding/gob/decode.go	/^func (dec *Decoder) getDecEnginePtr(remoteId typeId, ut *userTypeInfo) (enginePtr **decEngine, err error) {$/;"	f
getDoc	./go/printer/printer.go	/^func getDoc(n ast.Node) *ast.CommentGroup {$/;"	f
getElfEhdr	./cmd/link/internal/ld/elf.go	/^func getElfEhdr() *ElfEhdr {$/;"	f
getEncEngine	./encoding/gob/encode.go	/^func getEncEngine(ut *userTypeInfo, building map[*typeInfo]bool) *encEngine {$/;"	f
getEsc	./path/filepath/match.go	/^func getEsc(chunk string) (r rune, nchunk string, err error) {$/;"	f
getEsc	./path/match.go	/^func getEsc(chunk string) (r rune, nchunk string, err error) {$/;"	f
getF	./cmd/go/get.go	/^var getF = cmdGet.Flag.Bool("f", false, "")$/;"	v
getField	./fmt/print.go	/^func getField(v reflect.Value, i int) reflect.Value {$/;"	f
getField	./go/parser/parser_test.go	/^func getField(file *ast.File, fieldname string) *ast.Field {$/;"	f
getFields	./net/parse.go	/^func getFields(s string) []string { return splitAtBytes(s, " \\r\\t\\n") }$/;"	f
getFile	./go/parser/error_test.go	/^func getFile(fset *token.FileSet, filename string) (file *token.File) {$/;"	f
getFix	./cmd/go/get.go	/^var getFix = cmdGet.Flag.Bool("fix", false, "")$/;"	v
getFlags	./cmd/pprof/internal/driver/driver.go	/^func getFlags(flag plugin.FlagSet, overrides commands.Commands, ui plugin.UI) (*flags, error) {$/;"	f
getFunctionSource	./cmd/pprof/internal/report/source.go	/^func getFunctionSource(fun, file string, fns nodes, start, end int) (nodes, string, error) {$/;"	f
getGetProcAddress	./runtime/os1_windows.go	/^func getGetProcAddress() uintptr {$/;"	f
getIdleConn	./net/http/transport.go	/^func (t *Transport) getIdleConn(cm connectMethod) (pconn *persistConn) {$/;"	f
getIdleConnCh	./net/http/transport.go	/^func (t *Transport) getIdleConnCh(cm connectMethod) chan *persistConn {$/;"	f
getIgnoreEnginePtr	./encoding/gob/decode.go	/^func (dec *Decoder) getIgnoreEnginePtr(wireId typeId) (enginePtr **decEngine, err error) {$/;"	f
getImmediate	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) getImmediate(prog *obj.Prog, op int, addr *obj.Addr) int64 {$/;"	f
getInfo	./syscall/security_windows.go	/^func (t Token) getInfo(class uint32, initSize int) (unsafe.Pointer, error) {$/;"	f
getInsecure	./cmd/go/get.go	/^var getInsecure = cmdGet.Flag.Bool("insecure", false, "")$/;"	v
getInterfaceInfos	./net/interface_windows.go	/^func getInterfaceInfos() ([]syscall.InterfaceInfo, error) {$/;"	f
getLength	./encoding/gob/decode.go	/^func (state *decoderState) getLength() (int, bool) {$/;"	f
getLine	./encoding/pem/pem.go	/^func getLine(data []byte) (line, rest []byte) {$/;"	f
getLineFromData	./net/parse.go	/^func (f *file) getLineFromData() (s string, ok bool) {$/;"	f
getLineTests	./encoding/pem/pem_test.go	/^var getLineTests = []GetLineTest{$/;"	v
getLoadLibrary	./runtime/os1_windows.go	/^func getLoadLibrary() uintptr {$/;"	f
getLocked	./net/internal/socktest/switch.go	/^func (st stats) getLocked(c Cookie) *Stat {$/;"	f
getMachoHdr	./cmd/link/internal/ld/macho.go	/^func getMachoHdr() *MachoHdr {$/;"	f
getMaxCount	./testing/quick/quick.go	/^func (c *Config) getMaxCount() (maxCount int) {$/;"	f
getMissingFunctionSource	./cmd/pprof/internal/report/source.go	/^func getMissingFunctionSource(filename string, asm map[int]nodes, start, end int) (nodes, string) {$/;"	f
getMyName	./os/exec/lp_windows_test.go	/^func getMyName() (string, error) {$/;"	f
getNoBody	./net/http/serve_test.go	/^func getNoBody(urlStr string) (*Response, error) {$/;"	f
getOkay	./net/http/transport_test.go	/^	var getOkay bool$/;"	v
getPkg	./go/internal/gccgoimporter/parser.go	/^func (p *parser) getPkg(pkgpath, name string) *types.Package {$/;"	f
getPkg	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) getPkg(id, name string) *types.Package {$/;"	f
getPos	./go/parser/error_test.go	/^func getPos(fset *token.FileSet, filename string, offset int) token.Pos {$/;"	f
getProcessEntry	./syscall/syscall_windows.go	/^func getProcessEntry(pid int) (*ProcessEntry32, error) {$/;"	f
getPublicKeyAlgorithmFromOID	./crypto/x509/x509.go	/^func getPublicKeyAlgorithmFromOID(oid asn1.ObjectIdentifier) PublicKeyAlgorithm {$/;"	f
getRand	./testing/quick/quick.go	/^func (c *Config) getRand() *rand.Rand {$/;"	f
getRandomData	./runtime/os1_darwin.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os1_dragonfly.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os1_freebsd.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os1_linux.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os1_nacl.go	/^func getRandomData([]byte)$/;"	f
getRandomData	./runtime/os1_netbsd.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os1_openbsd.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os1_plan9.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os1_windows.go	/^func getRandomData(r []byte) {$/;"	f
getRandomData	./runtime/os3_solaris.go	/^func getRandomData(r []byte) {$/;"	f
getRandomLinux	./crypto/rand/rand_linux.go	/^func getRandomLinux(p []byte) (ok bool) {$/;"	f
getRegister	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) getRegister(prog *obj.Prog, op int, addr *obj.Addr) int16 {$/;"	f
getRequest	./net/rpc/server.go	/^func (server *Server) getRequest() *Request {$/;"	f
getResponse	./net/rpc/server.go	/^func (server *Server) getResponse() *Response {$/;"	f
getRune	./fmt/scan.go	/^func (s *ss) getRune() (r rune) {$/;"	f
getShellName	./os/env.go	/^func getShellName(s string) (string, int) {$/;"	f
getSignatureAlgorithmFromOID	./crypto/x509/x509.go	/^func getSignatureAlgorithmFromOID(oid asn1.ObjectIdentifier) SignatureAlgorithm {$/;"	f
getSlow	./sync/pool.go	/^func (p *Pool) getSlow() (x interface{}) {$/;"	f
getStatsResults	./math/rand/rand_test.go	/^func getStatsResults(samples []float64) *statsResults {$/;"	f
getStdHandle	./syscall/syscall_windows.go	/^func getStdHandle(h int) (fd Handle) {$/;"	f
getStderr	./cmd/go/go_test.go	/^func (tg *testgoData) getStderr() string {$/;"	f
getStdout	./cmd/go/go_test.go	/^func (tg *testgoData) getStdout() string {$/;"	f
getString	./cmd/pprof/internal/profile/encode.go	/^func getString(strings []string, strng *int64, err error) (string, error) {$/;"	f
getString	./debug/elf/file.go	/^func getString(section []byte, start int) (string, bool) {$/;"	f
getString	./debug/pe/file.go	/^func getString(section []byte, start int) (string, bool) {$/;"	f
getStringWriter	./strings/replace.go	/^func getStringWriter(w io.Writer) stringWriterIface {$/;"	f
getSymbols	./debug/elf/file.go	/^func (f *File) getSymbols(typ SectionType) ([]Symbol, []byte, error) {$/;"	f
getSymbols32	./debug/elf/file.go	/^func (f *File) getSymbols32(typ SectionType) ([]Symbol, []byte, error) {$/;"	f
getSymbols64	./debug/elf/file.go	/^func (f *File) getSymbols64(typ SectionType) ([]Symbol, []byte, error) {$/;"	f
getT	./cmd/go/get.go	/^var getT = cmdGet.Flag.Bool("t", false, "")$/;"	v
getTable	./debug/gosym/pclntab_test.go	/^func getTable(t *testing.T) *Table {$/;"	f
getType	./cmd/fix/typecheck.go	/^func getType(t string) string {$/;"	f
getType	./encoding/gob/type.go	/^func getType(name string, ut *userTypeInfo, rt reflect.Type) (gobType, error) {$/;"	f
getTypeInfo	./encoding/gob/type.go	/^func getTypeInfo(ut *userTypeInfo) (*typeInfo, error) {$/;"	f
getTypeInfo	./encoding/xml/typeinfo.go	/^func getTypeInfo(typ reflect.Type) (*typeInfo, error) {$/;"	f
getTypeUnlocked	./encoding/gob/type_test.go	/^func getTypeUnlocked(name string, rt reflect.Type) gobType {$/;"	f
getU	./cmd/go/get.go	/^var getU = cmdGet.Flag.Bool("u", false, "")$/;"	v
getUint64	./crypto/cipher/gcm.go	/^func getUint64(data []byte) uint64 {$/;"	f
getUniversalType	./encoding/asn1/common.go	/^func getUniversalType(t reflect.Type) (tagNumber int, isCompound, ok bool) {$/;"	f
getValue	./internal/syscall/windows/registry/value.go	/^func (k Key) getValue(name string, buf []byte) (date []byte, valtype uint32, err error) {$/;"	f
get_tls	./runtime/go_tls.h	/^#define	get_tls(/;"	d
getargp	./runtime/panic.go	/^func getargp(x int) uintptr {$/;"	f
getattr	./cmd/link/internal/ld/dwarf.go	/^func getattr(die *DWDie, attr uint16) *DWAttr {$/;"	f
getc	./cmd/compile/internal/gc/lex.go	/^func getc() int {$/;"	f
getc	./encoding/xml/xml.go	/^func (d *Decoder) getc() (b byte, ok bool) {$/;"	f
getcallerpc	./runtime/stubs.go	/^func getcallerpc(argp unsafe.Pointer) uintptr$/;"	f
getcallersp	./runtime/stubs.go	/^func getcallersp(argp unsafe.Pointer) uintptr$/;"	f
getcontext	./runtime/os3_solaris.go	/^func getcontext(context *ucontext) \/* int32 *\/ {$/;"	f
getcontext	./runtime/os_netbsd.go	/^func getcontext(ctxt unsafe.Pointer)$/;"	f
getdents	./syscall/zsyscall_netbsd_386.go	/^func getdents(fd int, buf []byte) (n int, err error) {$/;"	f
getdents	./syscall/zsyscall_netbsd_amd64.go	/^func getdents(fd int, buf []byte) (n int, err error) {$/;"	f
getdents	./syscall/zsyscall_netbsd_arm.go	/^func getdents(fd int, buf []byte) (n int, err error) {$/;"	f
getdents	./syscall/zsyscall_openbsd_386.go	/^func getdents(fd int, buf []byte) (n int, err error) {$/;"	f
getdents	./syscall/zsyscall_openbsd_amd64.go	/^func getdents(fd int, buf []byte) (n int, err error) {$/;"	f
getdents	./syscall/zsyscall_openbsd_arm.go	/^func getdents(fd int, buf []byte) (n int, err error) {$/;"	f
getdyn	./cmd/compile/internal/gc/sinit.go	/^func getdyn(n *Node, top int) int {$/;"	f
getempty	./runtime/mgcwork.go	/^func getempty(entry int) *workbuf {$/;"	f
getfull	./runtime/mgcwork.go	/^func getfull(entry int) *workbuf {$/;"	f
getg	./cmd/compile/internal/amd64/ggen.go	/^func getg(res *gc.Node) {$/;"	f
getg	./cmd/compile/internal/arm/ggen.go	/^func getg(res *gc.Node) {$/;"	f
getg	./cmd/compile/internal/arm64/ggen.go	/^func getg(res *gc.Node) {$/;"	f
getg	./cmd/compile/internal/ppc64/ggen.go	/^func getg(res *gc.Node) {$/;"	f
getg	./cmd/compile/internal/x86/ggen.go	/^func getg(res *gc.Node) {$/;"	f
getg	./runtime/stubs.go	/^func getg() *g$/;"	f
getgcmask	./runtime/mbitmap.go	/^func getgcmask(ep interface{}) (mask []byte) {$/;"	f
getgcmaskcb	./runtime/mbitmap.go	/^func getgcmaskcb(frame *stkframe, ctxt unsafe.Pointer) bool {$/;"	f
getgroups	./syscall/zsyscall_darwin_386.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_darwin_amd64.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_darwin_arm.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_darwin_arm64.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_dragonfly_amd64.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_freebsd_386.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_freebsd_amd64.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_freebsd_arm.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_linux_386.go	/^func getgroups(n int, list *_Gid_t) (nn int, err error) {$/;"	f
getgroups	./syscall/zsyscall_linux_amd64.go	/^func getgroups(n int, list *_Gid_t) (nn int, err error) {$/;"	f
getgroups	./syscall/zsyscall_linux_arm.go	/^func getgroups(n int, list *_Gid_t) (nn int, err error) {$/;"	f
getgroups	./syscall/zsyscall_linux_arm64.go	/^func getgroups(n int, list *_Gid_t) (nn int, err error) {$/;"	f
getgroups	./syscall/zsyscall_linux_ppc64.go	/^func getgroups(n int, list *_Gid_t) (nn int, err error) {$/;"	f
getgroups	./syscall/zsyscall_linux_ppc64le.go	/^func getgroups(n int, list *_Gid_t) (nn int, err error) {$/;"	f
getgroups	./syscall/zsyscall_netbsd_386.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_netbsd_amd64.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_netbsd_arm.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_openbsd_386.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_openbsd_amd64.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_openbsd_arm.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
getgroups	./syscall/zsyscall_solaris_amd64.go	/^func getgroups(ngid int, gid *_Gid_t) (n int, err error) {$/;"	f
gethostbyname	./net/lookup_windows.go	/^func gethostbyname(name string) (addrs []IPAddr, err error) {$/;"	f
gethostname	./syscall/syscall_solaris.go	/^func gethostname() (name string, err uintptr)$/;"	f
gethunk	./cmd/compile/internal/gc/subr.go	/^func gethunk() {$/;"	f
getimpsym	./cmd/compile/internal/gc/lex.go	/^func getimpsym(pp *string) string {$/;"	f
getinarg	./cmd/compile/internal/gc/subr.go	/^func getinarg(t *Type) **Type {$/;"	f
getinargx	./cmd/compile/internal/gc/subr.go	/^func getinargx(t *Type) *Type {$/;"	f
getitab	./runtime/iface.go	/^func getitab(inter *interfacetype, typ *_type, canfail bool) *itab {$/;"	f
getlasterror	./runtime/os2_windows.go	/^func getlasterror() uint32$/;"	f
getline	./regexp/testdata/testregex.c	/^getline(FILE* fp)$/;"	f	file:
getlinepragma	./cmd/compile/internal/gc/lex.go	/^func getlinepragma() int {$/;"	f
getlit	./cmd/compile/internal/gc/sinit.go	/^func getlit(lit *Node) int {$/;"	f
getmask	./cmd/internal/obj/ppc64/asm9.go	/^func getmask(m []byte, v uint32) bool {$/;"	f
getmask64	./cmd/internal/obj/ppc64/asm9.go	/^func getmask64(m []byte, v uint64) bool {$/;"	f
getncpu	./runtime/os1_darwin.go	/^func getncpu() int32 {$/;"	f
getncpu	./runtime/os1_dragonfly.go	/^func getncpu() int32 {$/;"	f
getncpu	./runtime/os1_freebsd.go	/^func getncpu() int32 {$/;"	f
getncpu	./runtime/os1_netbsd.go	/^func getncpu() int32 {$/;"	f
getncpu	./runtime/os1_openbsd.go	/^func getncpu() int32 {$/;"	f
getncpu	./runtime/os3_solaris.go	/^func getncpu() int32 {$/;"	f
getnum	./time/format.go	/^func getnum(s string, fixed bool) (int, string, error) {$/;"	f
getoutargx	./cmd/compile/internal/gc/subr.go	/^func getoutargx(t *Type) *Type {$/;"	f
getpartialorempty	./runtime/mgcwork.go	/^func getpartialorempty(entry int) *workbuf {$/;"	f
getpeername	./syscall/syscall_linux_386.go	/^func getpeername(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_darwin_386.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_darwin_amd64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_darwin_arm.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_darwin_arm64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_dragonfly_amd64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_freebsd_386.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_freebsd_amd64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_freebsd_arm.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_linux_amd64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_linux_arm.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_linux_arm64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_linux_ppc64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_linux_ppc64le.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_netbsd_386.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_netbsd_amd64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_netbsd_arm.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_openbsd_386.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_openbsd_amd64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_openbsd_arm.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_solaris_amd64.go	/^func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getpeername	./syscall/zsyscall_windows.go	/^func getpeername(s Handle, rsa *RawSockaddrAny, addrlen *int32) (err error) {$/;"	f
getpid	./runtime/os1_plan9.go	/^func getpid() uint64 {$/;"	f
getpid	./syscall/exec_solaris.go	/^func getpid() (pid uintptr, err Errno)$/;"	f
getprocaddress	./syscall/dll_windows.go	/^func getprocaddress(handle uintptr, procname *uint8) (proc uintptr, err Errno)$/;"	f
getproccount	./runtime/os1_linux.go	/^func getproccount() int32 {$/;"	f
getproccount	./runtime/os1_plan9.go	/^func getproccount() int32 {$/;"	f
getproccount	./runtime/os1_windows.go	/^func getproccount() int32 {$/;"	f
getprofile	./runtime/cpuprof.go	/^func (p *cpuProfile) getprofile() []byte {$/;"	f
getprotobyname	./net/lookup_windows.go	/^func getprotobyname(name string) (proto int, err error) {$/;"	f
getquoted	./cmd/compile/internal/gc/lex.go	/^func getquoted(pp *string) (string, bool) {$/;"	f
getr	./cmd/compile/internal/gc/lex.go	/^func getr() int32 {$/;"	f
getrlimit	./runtime/os_dragonfly.go	/^func getrlimit(kind int32, limit unsafe.Pointer) int32$/;"	f
getrlimit	./runtime/os_freebsd.go	/^func getrlimit(kind int32, limit unsafe.Pointer) int32$/;"	f
getrlimit	./runtime/os_linux.go	/^func getrlimit(kind int32, limit unsafe.Pointer) int32$/;"	f
getrlimit	./syscall/zsyscall_linux_386.go	/^func getrlimit(resource int, rlim *rlimit32) (err error) {$/;"	f
getrlimit	./syscall/zsyscall_linux_arm.go	/^func getrlimit(resource int, rlim *rlimit32) (err error) {$/;"	f
getrune	./cmd/yacc/yacc.go	/^func getrune(f *bufio.Reader) rune {$/;"	f
getscheme	./net/url/url.go	/^func getscheme(rawurl string) (scheme, path string, err error) {$/;"	f
getservbyname	./net/lookup_windows.go	/^func getservbyname(network, service string) (int, error) {$/;"	f
getsig	./runtime/os1_darwin.go	/^func getsig(i int32) uintptr {$/;"	f
getsig	./runtime/os1_dragonfly.go	/^func getsig(i int32) uintptr {$/;"	f
getsig	./runtime/os1_freebsd.go	/^func getsig(i int32) uintptr {$/;"	f
getsig	./runtime/os1_linux.go	/^func getsig(i int32) uintptr {$/;"	f
getsig	./runtime/os1_netbsd.go	/^func getsig(i int32) uintptr {$/;"	f
getsig	./runtime/os1_openbsd.go	/^func getsig(i int32) uintptr {$/;"	f
getsig	./runtime/os3_solaris.go	/^func getsig(i int32) uintptr {$/;"	f
getsockname	./syscall/syscall_linux_386.go	/^func getsockname(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_darwin_386.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_darwin_amd64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_darwin_arm.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_darwin_arm64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_dragonfly_amd64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_freebsd_386.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_freebsd_amd64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_freebsd_arm.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_linux_amd64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_linux_arm.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_linux_arm64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_linux_ppc64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_linux_ppc64le.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_netbsd_386.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_netbsd_amd64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_netbsd_arm.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_openbsd_386.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_openbsd_amd64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_openbsd_arm.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_solaris_amd64.go	/^func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {$/;"	f
getsockname	./syscall/zsyscall_windows.go	/^func getsockname(s Handle, rsa *RawSockaddrAny, addrlen *int32) (err error) {$/;"	f
getsockopt	./syscall/syscall_linux_386.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_darwin_386.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_darwin_amd64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_darwin_arm.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_darwin_arm64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_dragonfly_amd64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_freebsd_386.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_freebsd_amd64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_freebsd_arm.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_linux_amd64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_linux_arm.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_linux_arm64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_linux_ppc64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_linux_ppc64le.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_netbsd_386.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_netbsd_amd64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_netbsd_arm.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_openbsd_386.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_openbsd_amd64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_openbsd_arm.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getsockopt	./syscall/zsyscall_solaris_amd64.go	/^func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {$/;"	f
getter	./go/types/call.go	/^type getter func(x *operand, i int)$/;"	t
getthis	./cmd/compile/internal/gc/subr.go	/^func getthis(t *Type) **Type {$/;"	f
getthisx	./cmd/compile/internal/gc/subr.go	/^func getthisx(t *Type) *Type {$/;"	f
gettid	./runtime/os1_linux.go	/^func gettid() uint32$/;"	f
gettimeofday	./syscall/syscall_linux_amd64.go	/^func gettimeofday(tv *Timeval) (err Errno)$/;"	f
gettimeofday	./syscall/zsyscall_darwin_386.go	/^func gettimeofday(tp *Timeval) (sec int32, usec int32, err error) {$/;"	f
gettimeofday	./syscall/zsyscall_darwin_amd64.go	/^func gettimeofday(tp *Timeval) (sec int64, usec int32, err error) {$/;"	f
gettimeofday	./syscall/zsyscall_darwin_arm.go	/^func gettimeofday(tp *Timeval) (sec int32, usec int32, err error) {$/;"	f
gettimeofday	./syscall/zsyscall_darwin_arm64.go	/^func gettimeofday(tp *Timeval) (sec int64, usec int32, err error) {$/;"	f
gettok	./cmd/yacc/yacc.go	/^func gettok() int {$/;"	f
getu4	./encoding/json/decode.go	/^func getu4(s []byte) rune {$/;"	f
getvariables	./cmd/compile/internal/gc/plive.go	/^func getvariables(fn *Node) []*Node {$/;"	f
getvarint	./cmd/internal/obj/pcln.go	/^func getvarint(pp *[]byte) uint32 {$/;"	f
getvarint	./cmd/link/internal/ld/pcln.go	/^func getvarint(pp *[]byte) uint32 {$/;"	f
getwd	./syscall/pwd_plan9.go	/^func getwd() (wd string, err error) {$/;"	f
getwdCache	./os/getwd.go	/^var getwdCache struct {$/;"	v
getword	./cmd/yacc/yacc.go	/^func getword(c rune) {$/;"	f
gfget	./runtime/proc1.go	/^func gfget(_p_ *p) *g {$/;"	f
gfpurge	./runtime/proc1.go	/^func gfpurge(_p_ *p) {$/;"	f
gfput	./runtime/proc1.go	/^func gfput(_p_ *p, gp *g) {$/;"	f
ggloblnod	./cmd/compile/internal/gc/gsubr.go	/^func ggloblnod(nam *Node) {$/;"	f
ggloblsym	./cmd/compile/internal/gc/gsubr.go	/^func ggloblsym(s *Sym, width int32, flags int16) {$/;"	f
ggreed	./cmd/yacc/yacc.go	/^var ggreed []int$/;"	v
gin	./cmd/yacc/yacc.go	/^func gin(i int) {$/;"	f
ginit	./cmd/compile/internal/gc/gsubr.go	/^func ginit() {$/;"	f
gins	./cmd/compile/internal/amd64/gsubr.go	/^func gins(as int, f *gc.Node, t *gc.Node) *obj.Prog {$/;"	f
gins	./cmd/compile/internal/arm/gsubr.go	/^func gins(as int, f *gc.Node, t *gc.Node) *obj.Prog {$/;"	f
gins	./cmd/compile/internal/arm64/gsubr.go	/^func gins(as int, f, t *gc.Node) *obj.Prog {$/;"	f
gins	./cmd/compile/internal/ppc64/gsubr.go	/^func gins(as int, f, t *gc.Node) *obj.Prog {$/;"	f
gins	./cmd/compile/internal/x86/gsubr.go	/^func gins(as int, f *gc.Node, t *gc.Node) *obj.Prog {$/;"	f
ginsboolval	./cmd/compile/internal/amd64/gsubr.go	/^func ginsboolval(a int, n *gc.Node) {$/;"	f
ginscmp	./cmd/compile/internal/amd64/gsubr.go	/^func ginscmp(op int, t *gc.Type, n1, n2 *gc.Node, likely int) *obj.Prog {$/;"	f
ginscmp	./cmd/compile/internal/arm/ggen.go	/^func ginscmp(op int, t *gc.Type, n1, n2 *gc.Node, likely int) *obj.Prog {$/;"	f
ginscmp	./cmd/compile/internal/arm64/gsubr.go	/^func ginscmp(op int, t *gc.Type, n1, n2 *gc.Node, likely int) *obj.Prog {$/;"	f
ginscmp	./cmd/compile/internal/ppc64/gsubr.go	/^func ginscmp(op int, t *gc.Type, n1, n2 *gc.Node, likely int) *obj.Prog {$/;"	f
ginscmp	./cmd/compile/internal/x86/gsubr.go	/^func ginscmp(op int, t *gc.Type, n1, n2 *gc.Node, likely int) *obj.Prog {$/;"	f
ginscon	./cmd/compile/internal/amd64/gsubr.go	/^func ginscon(as int, c int64, n2 *gc.Node) {$/;"	f
ginscon	./cmd/compile/internal/arm/ggen.go	/^func ginscon(as int, c int64, n *gc.Node) {$/;"	f
ginscon	./cmd/compile/internal/arm64/gsubr.go	/^func ginscon(as int, c int64, n2 *gc.Node) {$/;"	f
ginscon	./cmd/compile/internal/ppc64/gsubr.go	/^func ginscon(as int, c int64, n2 *gc.Node) {$/;"	f
ginscon	./cmd/compile/internal/x86/gsubr.go	/^func ginscon(as int, c int64, n2 *gc.Node) {$/;"	f
ginscon2	./cmd/compile/internal/arm64/gsubr.go	/^func ginscon2(as int, n2 *gc.Node, c int64) {$/;"	f
ginscon2	./cmd/compile/internal/ppc64/gsubr.go	/^func ginscon2(as int, n2 *gc.Node, c int64) {$/;"	f
ginsnop	./cmd/compile/internal/amd64/gsubr.go	/^func ginsnop() {$/;"	f
ginsnop	./cmd/compile/internal/arm/ggen.go	/^func ginsnop() {$/;"	f
ginsnop	./cmd/compile/internal/arm64/ggen.go	/^func ginsnop() {$/;"	f
ginsnop	./cmd/compile/internal/ppc64/ggen.go	/^func ginsnop() {$/;"	f
ginsnop	./cmd/compile/internal/x86/gsubr.go	/^func ginsnop() {$/;"	f
gitRemoteRepo	./cmd/go/vcs.go	/^func gitRemoteRepo(vcsGit *vcsCmd, rootDir string) (remoteRepo string, err error) {$/;"	f
given	./encoding/asn1/marshal.go	/^		return StructuralError{"explicit string type given to non-string member"}$/;"	t
given	./encoding/asn1/marshal.go	/^		return StructuralError{"explicit time type given to non-time member"}$/;"	t
gives	./reflect/all_test.go	/^	\/\/ Verify that taking the address of a type gives us a pointer$/;"	t
gives	./reflect/value.go	/^\/\/ The return value rcvrtype gives the method's actual receiver type.$/;"	t
gjmp	./cmd/compile/internal/gc/gsubr.go	/^func gjmp(to *obj.Prog) *obj.Prog {$/;"	f
glist	./cmd/trace/goroutines.go	/^	var glist gdescList$/;"	v
glist	./cmd/trace/goroutines.go	/^	var glist gtypeList$/;"	v
glob	./path/filepath/match.go	/^func glob(dir, pattern string, matches []string) (m []string, e error) {$/;"	f
globSymlinkTests	./path/filepath/match_test.go	/^var globSymlinkTests = []struct {$/;"	v
globTests	./path/filepath/match_test.go	/^var globTests = []struct {$/;"	v
global	./runtime/lfstack_test.go	/^var global interface{}$/;"	v
global	./testing/allocs_test.go	/^var global interface{}$/;"	v
globalAlloc	./runtime/malloc.go	/^var globalAlloc struct {$/;"	v
globalMu	./runtime/chanbarrier_test.go	/^	var globalMu sync.Mutex$/;"	v
globalOptionsHandler	./net/http/server.go	/^type globalOptionsHandler struct{}$/;"	t
globalRand	./math/rand/rand.go	/^var globalRand = New(&lockedSource{src: NewSource(1)})$/;"	v
globalSignRoot	./crypto/x509/verify_test.go	/^var globalSignRoot = `-----BEGIN CERTIFICATE-----$/;"	v
globrunqget	./runtime/proc1.go	/^func globrunqget(_p_ *p, max int32) *g {$/;"	f
globrunqput	./runtime/proc1.go	/^func globrunqput(gp *g) {$/;"	f
globrunqputbatch	./runtime/proc1.go	/^func globrunqputbatch(ghead *g, gtail *g, n int32) {$/;"	f
globrunqputhead	./runtime/proc1.go	/^func globrunqputhead(gp *g) {$/;"	f
gmove	./cmd/compile/internal/amd64/gsubr.go	/^func gmove(f *gc.Node, t *gc.Node) {$/;"	f
gmove	./cmd/compile/internal/arm/gsubr.go	/^func gmove(f *gc.Node, t *gc.Node) {$/;"	f
gmove	./cmd/compile/internal/arm64/gsubr.go	/^func gmove(f *gc.Node, t *gc.Node) {$/;"	f
gmove	./cmd/compile/internal/ppc64/gsubr.go	/^func gmove(f *gc.Node, t *gc.Node) {$/;"	f
gmove	./cmd/compile/internal/x86/gsubr.go	/^func gmove(f *gc.Node, t *gc.Node) {$/;"	f
gnuArg	./cmd/internal/rsc.io/arm/armasm/gnu.go	/^func gnuArg(inst *Inst, argIndex int, arg Arg) string {$/;"	f
gnuArg	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func gnuArg(inst *Inst, x Arg, usedPrefixes *bool) string {$/;"	f
gnuOp	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^var gnuOp = map[Op]string{$/;"	v
gnuTarTest	./archive/tar/reader_test.go	/^var gnuTarTest = &untarTest{$/;"	v
gnuVersion	./debug/elf/file.go	/^func (f *File) gnuVersion(i int, sym *ImportedSymbol) {$/;"	f
gnuVersionInit	./debug/elf/file.go	/^func (f *File) gnuVersionInit(str []byte) {$/;"	f
go12Funcs	./debug/gosym/pclntab.go	/^func (t *LineTable) go12Funcs() []Func {$/;"	f
go12Init	./debug/gosym/pclntab.go	/^func (t *LineTable) go12Init() {$/;"	f
go12LineToPC	./debug/gosym/pclntab.go	/^func (t *LineTable) go12LineToPC(file string, line int) (pc uint64) {$/;"	f
go12MapFiles	./debug/gosym/pclntab.go	/^func (t *LineTable) go12MapFiles(m map[string]*Obj, obj *Obj) {$/;"	f
go12PCToFile	./debug/gosym/pclntab.go	/^func (t *LineTable) go12PCToFile(pc uint64) (file string) {$/;"	f
go12PCToLine	./debug/gosym/pclntab.go	/^func (t *LineTable) go12PCToLine(pc uint64) (line int) {$/;"	f
go15VendorExperiment	./cmd/go/pkg.go	/^var go15VendorExperiment = os.Getenv("GO15VENDOREXPERIMENT") == "1"$/;"	v
go2gen	./cmd/yacc/yacc.go	/^func go2gen(c int) {$/;"	f
go2out	./cmd/yacc/yacc.go	/^func go2out() {$/;"	f
goDebugNetDNS	./net/conf.go	/^func goDebugNetDNS() (dnsMode string, debugLevel int) {$/;"	f
goDebugString	./net/parse.go	/^func goDebugString(key string) string {$/;"	f
goFunc	./time/sleep.go	/^func goFunc(arg interface{}, seq uintptr) {$/;"	f
goIdent	./cmd/cgo/gcc.go	/^var goIdent = make(map[string]*ast.Ident)$/;"	v
goLookupCNAME	./net/dnsclient_unix.go	/^func goLookupCNAME(name string) (cname string, err error) {$/;"	f
goLookupHost	./net/dnsclient_unix.go	/^func goLookupHost(name string) (addrs []string, err error) {$/;"	f
goLookupHostOrder	./net/dnsclient_unix.go	/^func goLookupHostOrder(name string, order hostLookupOrder) (addrs []string, err error) {$/;"	f
goLookupIP	./net/dnsclient_unix.go	/^func goLookupIP(name string) (addrs []IPAddr, err error) {$/;"	f
goLookupIPFiles	./net/dnsclient_unix.go	/^func goLookupIPFiles(name string) (addrs []IPAddr) {$/;"	f
goLookupIPOrder	./net/dnsclient_unix.go	/^func goLookupIPOrder(name string, order hostLookupOrder) (addrs []IPAddr, err error) {$/;"	f
goLookupIPWithResolverConfigTests	./net/dnsclient_unix_test.go	/^var goLookupIPWithResolverConfigTests = []struct {$/;"	v
goLookupPTR	./net/dnsclient_unix.go	/^func goLookupPTR(addr string) ([]string, error) {$/;"	f
goLookupPort	./net/port_unix.go	/^func goLookupPort(network, service string) (port int, err error) {$/;"	f
goTag	./cmd/go/get.go	/^var goTag = regexp.MustCompile($/;"	v
goTimeout	./net/http/serve_test.go	/^func goTimeout(t *testing.T, d time.Duration, f func()) {$/;"	f
goTools	./cmd/go/pkg.go	/^var goTools = map[string]targetDir{$/;"	v
goTypes	./cmd/cgo/out.go	/^var goTypes = map[string]*Type{$/;"	v
go_callback	./runtime/crash_cgo_test.go	/^func go_callback() {$/;"	f
goarch	./cmd/cgo/main.go	/^var goarch, goos string$/;"	v
goarch	./cmd/internal/objfile/elf.go	/^func (f *elfFile) goarch() string {$/;"	f
goarch	./cmd/internal/objfile/goobj.go	/^func (f *goobjFile) goarch() string {$/;"	f
goarch	./cmd/internal/objfile/macho.go	/^func (f *machoFile) goarch() string {$/;"	f
goarch	./cmd/internal/objfile/pe.go	/^func (f *peFile) goarch() string {$/;"	f
goarch	./cmd/internal/objfile/plan9obj.go	/^func (f *plan9File) goarch() string {$/;"	f
goarch	./debug/gosym/pclntab_test.go	/^var goarch = os.Getenv("O")$/;"	v
goargs	./runtime/runtime1.go	/^func goargs() {$/;"	f
gobClientCodec	./net/rpc/client.go	/^type gobClientCodec struct {$/;"	t
gobDecodeOpFor	./encoding/gob/decode.go	/^func (dec *Decoder) gobDecodeOpFor(ut *userTypeInfo) *decOp {$/;"	f
gobDecoderBug0	./encoding/gob/gobencdec_test.go	/^type gobDecoderBug0 struct {$/;"	t
gobEncodeOpFor	./encoding/gob/encode.go	/^func gobEncodeOpFor(ut *userTypeInfo) (*encOp, int) {$/;"	f
gobEncoderType	./encoding/gob/type.go	/^type gobEncoderType struct {$/;"	t
gobEncoderValue	./encoding/gob/debug.go	/^func (deb *debugger) gobEncoderValue(indent tab, id typeId) {$/;"	f
gobError	./encoding/gob/error.go	/^type gobError struct {$/;"	t
gobServerCodec	./net/rpc/server.go	/^type gobServerCodec struct {$/;"	t
gobStream	./encoding/gob/debug.go	/^func (deb *debugger) gobStream() {$/;"	f
gobTests	./time/time_test.go	/^var gobTests = []Time{$/;"	v
gobType	./encoding/gob/type.go	/^func (t typeId) gobType() gobType {$/;"	f
gobType	./encoding/gob/type.go	/^type gobType interface {$/;"	t
gobitvector	./runtime/stack1.go	/^type gobitvector struct {$/;"	t
gobtt	./time/time_test.go	/^		var gobtt Time$/;"	v
gobuf	./runtime/runtime2.go	/^type gobuf struct {$/;"	t
gobv	./runtime/stack1.go	/^func gobv(bv bitvector) gobitvector {$/;"	f
gobytes	./runtime/string.go	/^func gobytes(p *byte, n int) []byte {$/;"	f
godefs	./cmd/cgo/godefs.go	/^func (p *Package) godefs(f *File, srcfile string) string {$/;"	f
godefs	./cmd/cgo/main.go	/^var godefs = flag.Bool("godefs", false, "for bootstrap: write Go definitions for C file to standard output")$/;"	v
godefsFields	./cmd/cgo/gcc.go	/^func godefsFields(fld []*ast.Field) {$/;"	f
goenvs	./runtime/os1_darwin.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_dragonfly.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_freebsd.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_linux.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_nacl.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_netbsd.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_openbsd.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_plan9.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os1_windows.go	/^func goenvs() {$/;"	f
goenvs	./runtime/os3_solaris.go	/^func goenvs() {$/;"	f
goenvs_unix	./runtime/runtime1.go	/^func goenvs_unix() {$/;"	f
goexit	./runtime/stubs.go	/^func goexit(neverCallThisFunction)$/;"	f
goexit0	./runtime/proc1.go	/^func goexit0(gp *g) {$/;"	f
goexit1	./runtime/proc1.go	/^func goexit1() {$/;"	f
goexits	./runtime/os1_plan9.go	/^var goexits = []byte("go: exit ")$/;"	v
goexitsall	./runtime/os1_plan9.go	/^func goexitsall(status *byte) {$/;"	f
gofmt	./cmd/cgo/godefs.go	/^func gofmt(n interface{}) string {$/;"	f
gofmt	./cmd/fix/main.go	/^func gofmt(n interface{}) string {$/;"	f
gofmt	./cmd/gofmt/long_test.go	/^func gofmt(fset *token.FileSet, filename string, src *bytes.Buffer) error {$/;"	f
gofmt	./cmd/vet/main.go	/^func (f *File) gofmt(x ast.Expr) string {$/;"	f
gofmt	./cmd/yacc/yacc.go	/^func gofmt() {$/;"	f
gofmtBuf	./cmd/cgo/godefs.go	/^var gofmtBuf bytes.Buffer$/;"	v
gofmtBuf	./cmd/fix/main.go	/^var gofmtBuf bytes.Buffer$/;"	v
gofmtFile	./cmd/fix/main.go	/^func gofmtFile(f *ast.File) ([]byte, error) {$/;"	f
gofmtFlags	./cmd/gofmt/gofmt_test.go	/^func gofmtFlags(filename string, maxLines int) string {$/;"	f
gofmtMain	./cmd/gofmt/gofmt.go	/^func gofmtMain() {$/;"	f
gofmtPath	./cmd/go/fmt.go	/^func gofmtPath() string {$/;"	f
gogetenv	./runtime/env_plan9.go	/^func gogetenv(key string) string {$/;"	f
gogetenv	./runtime/env_posix.go	/^func gogetenv(key string) string {$/;"	f
gogo	./runtime/stubs.go	/^func gogo(buf *gobuf)$/;"	f
going	./cmd/compile/internal/gc/const.go	/^ * get the same type going out.$/;"	t
golden	./crypto/md5/md5_test.go	/^var golden = []md5Test{$/;"	v
golden	./crypto/rc4/rc4_test.go	/^var golden = []rc4Test{$/;"	v
golden	./crypto/sha1/sha1_test.go	/^var golden = []sha1Test{$/;"	v
golden	./crypto/sha256/sha256_test.go	/^var golden = []sha256Test{$/;"	v
golden	./crypto/sha512/sha512_test.go	/^var golden = []sha512Test{$/;"	v
golden	./hash/adler32/adler32_test.go	/^var golden = []struct {$/;"	v
golden	./hash/crc32/crc32_test.go	/^var golden = []test{$/;"	v
golden	./hash/crc64/crc64_test.go	/^var golden = []test{$/;"	v
golden	./hash/fnv/fnv_test.go	/^type golden struct {$/;"	t
golden224	./crypto/sha256/sha256_test.go	/^var golden224 = []sha256Test{$/;"	v
golden32	./hash/fnv/fnv_test.go	/^var golden32 = []golden{$/;"	v
golden32a	./hash/fnv/fnv_test.go	/^var golden32a = []golden{$/;"	v
golden64	./hash/fnv/fnv_test.go	/^var golden64 = []golden{$/;"	v
golden64a	./hash/fnv/fnv_test.go	/^var golden64a = []golden{$/;"	v
gomcache	./runtime/runtime1.go	/^func gomcache() *mcache {$/;"	f
goobjFile	./cmd/internal/objfile/goobj.go	/^type goobjFile struct {$/;"	t
goobjName	./cmd/internal/objfile/goobj.go	/^func goobjName(id goobj.SymID) string {$/;"	f
goobjfile	./runtime/runtime-gdb.py	/^goobjfile = gdb.current_objfile() or gdb.objfiles()[0]$/;"	v
good	./runtime/sys_linux_arm64.s	/^good:$/;"	l
goodFunc	./text/template/funcs.go	/^func goodFunc(typ reflect.Type) bool {$/;"	f
goodMarshaler	./html/template/escape_test.go	/^type goodMarshaler struct{}$/;"	t
good_re	./regexp/all_test.go	/^var good_re = []string{$/;"	v
goodbyeFile	./cmd/pack/pack_test.go	/^var goodbyeFile = &FakeFile{$/;"	v
googleCheckout	./cmd/go/vcs.go	/^var googleCheckout = regexp.MustCompile(`id="checkoutcmd">(hg|git|svn)`)$/;"	v
googleCodeVCS	./cmd/go/vcs.go	/^func googleCodeVCS(match map[string]string) error {$/;"	f
googleLiteralAddrs	./net/external_test.go	/^func googleLiteralAddrs() (lits4, lits6 []string, err error) {$/;"	f
goopnames	./cmd/compile/internal/gc/fmt.go	/^var goopnames = []string{$/;"	v
gooses	./runtime/gengoos.go	/^var gooses, goarches []string$/;"	v
gopanic	./cmd/compile/internal/gc/builtin/runtime.go	/^func gopanic(interface{})$/;"	f
gopanic	./runtime/crash_cgo_test.go	/^func gopanic() {$/;"	f
gopanic	./runtime/panic.go	/^func gopanic(e interface{}) {$/;"	f
gopark	./runtime/proc.go	/^func gopark(unlockf func(*g, unsafe.Pointer) bool, lock unsafe.Pointer, reason string, traceEv byte, traceskip int) {$/;"	f
goparkunlock	./runtime/proc.go	/^func goparkunlock(lock *mutex, reason string, traceEv byte, traceskip int) {$/;"	f
gopherType	./flag/example_test.go	/^var gopherType string$/;"	v
gopreempt_m	./runtime/proc1.go	/^func gopreempt_m(gp *g) {$/;"	f
goready	./runtime/proc.go	/^func goready(gp *g, traceskip int) {$/;"	f
gorecover	./cmd/compile/internal/gc/builtin/runtime.go	/^func gorecover(*int32) interface{}$/;"	f
gorecover	./runtime/panic.go	/^func gorecover(argp uintptr) interface{} {$/;"	f
goroot	./cmd/api/run.go	/^var goroot string$/;"	v
goroutineLeaked	./net/http/main_test.go	/^func goroutineLeaked() bool {$/;"	f
goroutineProfile	./runtime/pprof/pprof.go	/^var goroutineProfile = &Profile{$/;"	v
goroutineReady	./runtime/time.go	/^func goroutineReady(arg interface{}, seq uintptr) {$/;"	f
goroutineheader	./runtime/traceback.go	/^func goroutineheader(gp *g) {$/;"	f
gosave	./runtime/stubs.go	/^func gosave(buf *gobuf)$/;"	f
goschedImpl	./runtime/proc1.go	/^func goschedImpl(gp *g) {$/;"	f
gosched_m	./runtime/proc1.go	/^func gosched_m(gp *g) {$/;"	f
gostartcall	./runtime/sys_arm.go	/^func gostartcall(buf *gobuf, fn, ctxt unsafe.Pointer) {$/;"	f
gostartcall	./runtime/sys_arm64.go	/^func gostartcall(buf *gobuf, fn, ctxt unsafe.Pointer) {$/;"	f
gostartcall	./runtime/sys_ppc64x.go	/^func gostartcall(buf *gobuf, fn, ctxt unsafe.Pointer) {$/;"	f
gostartcall	./runtime/sys_x86.go	/^func gostartcall(buf *gobuf, fn, ctxt unsafe.Pointer) {$/;"	f
gostartcallfn	./runtime/stack1.go	/^func gostartcallfn(gobuf *gobuf, fv *funcval) {$/;"	f
gostring	./runtime/string.go	/^func gostring(p *byte) string {$/;"	f
gostringn	./runtime/string.go	/^func gostringn(p *byte, l int) string {$/;"	f
gostringnocopy	./runtime/string1.go	/^func gostringnocopy(str *byte) string {$/;"	f
gostringpkg	./cmd/compile/internal/gc/go.go	/^var gostringpkg *Pkg \/\/ fake pkg for Go strings$/;"	v
gostringw	./runtime/string1.go	/^func gostringw(strw *uint16) string {$/;"	f
gosweepdone	./runtime/mgcsweep.go	/^func gosweepdone() bool {$/;"	f
gosweepone	./runtime/mgcsweep.go	/^func gosweepone() uintptr {$/;"	f
got	./debug/dwarf/line_test.go	/^	var got []LineEntry$/;"	v
got	./encoding/asn1/asn1_test.go	/^		var got explicitTaggedTimeTest$/;"	v
got	./encoding/gob/gobencdec_test.go	/^	var got *gobDecoderBug0$/;"	v
got	./encoding/json/decode_test.go	/^	var got S$/;"	v
got	./html/template/escape_test.go	/^		var got string$/;"	v
got	./image/gif/reader_test.go	/^	var got string$/;"	v
got	./net/http/http_test.go	/^		var got []string$/;"	v
got	./net/http/serve_test.go	/^	var got bytes.Buffer$/;"	v
gotReq	./net/http/transport_test.go	/^	var gotReq, didDial bool$/;"	v
gotcha	./regexp/testdata/testregex.c	/^	jmp_buf		gotcha;$/;"	m	struct:__anon2	file:
gotcha	./regexp/testdata/testregex.c	/^gotcha(int sig)$/;"	f	file:
gotoTarget	./go/types/labels.go	/^func (b *block) gotoTarget(name string) *ast.LabeledStmt {$/;"	f
gotraceback	./runtime/runtime1.go	/^func gotraceback(crash *bool) int32 {$/;"	f
gotypes	./cmd/fix/gotypes.go	/^func gotypes(f *ast.File) bool {$/;"	f
gotypesFix	./cmd/fix/gotypes.go	/^var gotypesFix = fix{$/;"	v
gotypesTests	./cmd/fix/gotypes_test.go	/^var gotypesTests = []testCase{$/;"	v
gp	./runtime/netpoll_epoll.go	/^	var gp guintptr$/;"	v
gp	./runtime/netpoll_kqueue.go	/^	var gp guintptr$/;"	v
gp	./runtime/netpoll_solaris.go	/^	var gp guintptr$/;"	v
gp	./runtime/netpoll_windows.go	/^	var gp guintptr$/;"	v
gp	./runtime/proc1.go	/^		var gp *g$/;"	v
gp	./runtime/proc1.go	/^	var gp *g$/;"	v
gp	./runtime/time.go	/^	var gp *g$/;"	v
gr	./cmd/cgo/gcc.go	/^	var gr []*ast.Field$/;"	v
grabConn	./database/sql/sql.go	/^func (tx *Tx) grabConn() (*driverConn, error) {$/;"	f
grabProfile	./cmd/pprof/internal/driver/driver.go	/^func grabProfile(source, exec, buildid string, fetch plugin.Fetcher, sym plugin.Symbolizer, obj plugin.ObjTool, ui plugin.UI, f *flags) (*profile.Profile, error) {$/;"	f
gradYellow	./image/draw/draw_test.go	/^func gradYellow(alpha int) Image {$/;"	f
graph	./cmd/pprof/internal/report/report.go	/^type graph struct {$/;"	t
gray16Model	./image/color/color.go	/^func gray16Model(c Color) Color {$/;"	f
grayModel	./image/color/color.go	/^func grayModel(c Color) Color {$/;"	f
grayToY	./image/jpeg/writer.go	/^func grayToY(m *image.Gray, p image.Point, yBlock *block) {$/;"	f
greaterThan	./cmd/compile/internal/big/nat.go	/^func greaterThan(x1, x2, y1, y2 Word) bool {$/;"	f
greaterThan	./math/big/nat.go	/^func greaterThan(x1, x2, y1, y2 Word) bool {$/;"	f
gregshift	./cmd/compile/internal/arm/gsubr.go	/^func gregshift(as int, lhs *gc.Node, stype int32, reg *gc.Node, rhs *gc.Node) *obj.Prog {$/;"	f
grepBoth	./cmd/go/go_test.go	/^func (tg *testgoData) grepBoth(match, msg string) {$/;"	f
grepBothNot	./cmd/go/go_test.go	/^func (tg *testgoData) grepBothNot(match, msg string) {$/;"	f
grepCountBoth	./cmd/go/go_test.go	/^func (tg *testgoData) grepCountBoth(match string) int {$/;"	f
grepCountStderr	./cmd/go/go_test.go	/^func (tg *testgoData) grepCountStderr(match string) int {$/;"	f
grepCountStdout	./cmd/go/go_test.go	/^func (tg *testgoData) grepCountStdout(match string) int {$/;"	f
grepStderr	./cmd/go/go_test.go	/^func (tg *testgoData) grepStderr(match, msg string) {$/;"	f
grepStderrNot	./cmd/go/go_test.go	/^func (tg *testgoData) grepStderrNot(match, msg string) {$/;"	f
grepStdout	./cmd/go/go_test.go	/^func (tg *testgoData) grepStdout(match, msg string) {$/;"	f
grepStdoutNot	./cmd/go/go_test.go	/^func (tg *testgoData) grepStdoutNot(match, msg string) {$/;"	f
greyobject	./runtime/mgcmark.go	/^func greyobject(obj, base, off uintptr, hbits heapBits, span *mspan, gcw *gcWork) {$/;"	f
groups	./syscall/exec_linux.go	/^		var groups unsafe.Pointer$/;"	v
grow	./bytes/buffer.go	/^func (b *Buffer) grow(n int) int {$/;"	f
grow	./reflect/value.go	/^func grow(s Value, extra int) (Value, int, int) {$/;"	f
grow	./runtime/crash_cgo_test.go	/^func grow() {$/;"	f
grow1	./runtime/crash_cgo_test.go	/^func grow1(x, sum *int) int {$/;"	f
growSpan	./cmd/vet/shadow.go	/^func (pkg *Package) growSpan(ident *ast.Ident, obj types.Object) {$/;"	f
growStack	./runtime/stack_test.go	/^func growStack() {$/;"	f
growStackIter	./runtime/stack_test.go	/^func growStackIter(p *int, n int) {$/;"	f
growStackWithCallback	./runtime/stack_test.go	/^func growStackWithCallback(cb func()) {$/;"	f
growWork	./runtime/hashmap.go	/^func growWork(t *maptype, h *hmap, bucket uintptr) {$/;"	f
growdatsize	./cmd/link/internal/ld/data.go	/^func growdatsize(datsizep *int64, s *LSym) {$/;"	f
growing	./runtime/stack_test.go	/^func growing(c chan int, done chan struct{}) {$/;"	f
growslice	./cmd/compile/internal/gc/builtin/runtime.go	/^func growslice(typ *byte, old []any, cap int) (ary []any)$/;"	f
growslice	./runtime/mbarrier.go	/^	\/\/ typedmemmove repeatedly, consider using during func growslice.$/;"	f
growslice	./runtime/slice.go	/^func growslice(t *slicetype, old slice, cap int) slice {$/;"	f
growslice_n	./cmd/compile/internal/gc/builtin/runtime.go	/^func growslice_n(typ *byte, old []any, n int) (ary []any)$/;"	f
growslice_n	./runtime/slice.go	/^func growslice_n(t *slicetype, old slice, n int) slice {$/;"	f
gs	./runtime/signal_darwin_386.go	/^func (c *sigctxt) gs() uint32      { return c.regs().gs }$/;"	f
gs	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) gs() uint64      { return c.regs().gs }$/;"	f
gs	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) gs() uint64      { return uint64(c.regs().mc_ss) }$/;"	f
gs	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) gs() uint32      { return uint32(c.regs().mc_gs) }$/;"	f
gs	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) gs() uint64      { return uint64(c.regs().mc_gs) }$/;"	f
gs	./runtime/signal_linux_386.go	/^func (c *sigctxt) gs() uint32        { return uint32(c.regs().gs) }$/;"	f
gs	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) gs() uint64      { return uint64(c.regs().gs) }$/;"	f
gs	./runtime/signal_nacl_386.go	/^func (c *sigctxt) gs() uint32        { return ^uint32(0) }$/;"	f
gs	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) gs() uint64      { return ^uint64(0) }$/;"	f
gs	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) gs() uint32       { return uint32(c.regs().__gregs[_REG_GS]) }$/;"	f
gs	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) gs() uint64      { return c.regs().__gregs[_REG_GS] }$/;"	f
gs	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) gs() uint32      { return c.regs().sc_gs }$/;"	f
gs	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) gs() uint64      { return c.regs().sc_gs }$/;"	f
gs	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) gs() uint64      { return uint64(c.regs().gregs[_REG_GS]) }$/;"	f
gsdebug	./cmd/yacc/yacc.go	/^var gsdebug = 0 \/\/ debugging flag for stagen$/;"	v
gshift	./cmd/compile/internal/arm/gsubr.go	/^func gshift(as int, lhs *gc.Node, stype int32, sval int32, rhs *gc.Node) *obj.Prog {$/;"	f
gss	./net/main_test.go	/^	var gss []string$/;"	v
gstring	./syscall/dir_plan9.go	/^func gstring(b []byte) (string, []byte, bool) {$/;"	f
gt	./text/template/funcs.go	/^func gt(arg1, arg2 interface{}) (bool, error) {$/;"	f
gtod_generation	./runtime/sys_darwin_386.s	/^#define	gtod_generation	0x6c$/;"	d
gtod_generation	./runtime/sys_darwin_amd64.s	/^#define	gtod_generation	0x6c$/;"	d
gtod_ns_base	./runtime/sys_darwin_386.s	/^#define	gtod_ns_base	0x70$/;"	d
gtod_ns_base	./runtime/sys_darwin_amd64.s	/^#define	gtod_ns_base	0x70$/;"	d
gtod_sec_base	./runtime/sys_darwin_386.s	/^#define	gtod_sec_base	0x78$/;"	d
gtod_sec_base	./runtime/sys_darwin_amd64.s	/^#define	gtod_sec_base	0x78$/;"	d
gtrack	./cmd/compile/internal/gc/gsubr.go	/^func gtrack(s *Sym) {$/;"	f
gtype	./cmd/trace/goroutines.go	/^type gtype struct {$/;"	t
gtypeList	./cmd/trace/goroutines.go	/^type gtypeList []gtype$/;"	t
guaranteedDereference	./cmd/compile/internal/gc/esc.go	/^func (l Level) guaranteedDereference() int {$/;"	f
guessKinds	./cmd/cgo/gcc.go	/^func (p *Package) guessKinds(f *File) []*Name {$/;"	f
guintptr	./runtime/runtime2.go	/^type guintptr uintptr$/;"	t
gunzipTest	./compress/gzip/gunzip_test.go	/^type gunzipTest struct {$/;"	t
gunzipTests	./compress/gzip/gunzip_test.go	/^var gunzipTests = []gunzipTest{$/;"	v
gused	./cmd/compile/internal/gc/gsubr.go	/^func gused(n *Node) {$/;"	f
gvardefx	./cmd/compile/internal/gc/pgen.go	/^func gvardefx(n *Node, as int) {$/;"	f
gvarkill	./cmd/compile/internal/gc/pgen.go	/^func gvarkill(n *Node) {$/;"	f
gwrite	./runtime/print1.go	/^func gwrite(b []byte) {$/;"	f
gzipReader	./net/http/transport.go	/^type gzipReader struct {$/;"	t
h	./go/types/api_test.go	/^func (*C) h()$/;"	f
h	./go/types/resolver_test.go	/^		func h() Mode { return ImportsOnly }$/;"	f
h	./math/rand/zipf.go	/^func (z *Zipf) h(x float64) float64 {$/;"	f
h_allspans	./runtime/mheap.go	/^var h_allspans []*mspan \/\/ TODO: make this h.allspans once mheap can be defined in Go$/;"	v
h_spans	./runtime/mheap.go	/^var h_spans []*mspan \/\/ TODO: make this h.spans once mheap can be defined in Go$/;"	v
halfConn	./crypto/tls/conn.go	/^type halfConn struct {$/;"	t
halfReader	./testing/iotest/reader.go	/^type halfReader struct {$/;"	t
hammer32	./sync/atomic/atomic_test.go	/^var hammer32 = map[string]func(*uint32, int){$/;"	v
hammer64	./sync/atomic/atomic_test.go	/^var hammer64 = map[string]func(*uint64, int){$/;"	v
hammerAddInt32	./sync/atomic/atomic_test.go	/^func hammerAddInt32(uaddr *uint32, count int) {$/;"	f
hammerAddInt64	./sync/atomic/atomic_test.go	/^func hammerAddInt64(uaddr *uint64, count int) {$/;"	f
hammerAddUint32	./sync/atomic/atomic_test.go	/^func hammerAddUint32(addr *uint32, count int) {$/;"	f
hammerAddUint64	./sync/atomic/atomic_test.go	/^func hammerAddUint64(addr *uint64, count int) {$/;"	f
hammerAddUintptr32	./sync/atomic/atomic_test.go	/^func hammerAddUintptr32(uaddr *uint32, count int) {$/;"	f
hammerAddUintptr64	./sync/atomic/atomic_test.go	/^func hammerAddUintptr64(uaddr *uint64, count int) {$/;"	f
hammerCompareAndSwapInt32	./sync/atomic/atomic_test.go	/^func hammerCompareAndSwapInt32(uaddr *uint32, count int) {$/;"	f
hammerCompareAndSwapInt64	./sync/atomic/atomic_test.go	/^func hammerCompareAndSwapInt64(uaddr *uint64, count int) {$/;"	f
hammerCompareAndSwapUint32	./sync/atomic/atomic_test.go	/^func hammerCompareAndSwapUint32(addr *uint32, count int) {$/;"	f
hammerCompareAndSwapUint64	./sync/atomic/atomic_test.go	/^func hammerCompareAndSwapUint64(addr *uint64, count int) {$/;"	f
hammerCompareAndSwapUintptr32	./sync/atomic/atomic_test.go	/^func hammerCompareAndSwapUintptr32(uaddr *uint32, count int) {$/;"	f
hammerCompareAndSwapUintptr64	./sync/atomic/atomic_test.go	/^func hammerCompareAndSwapUintptr64(uaddr *uint64, count int) {$/;"	f
hammerStoreLoadInt32	./sync/atomic/atomic_test.go	/^func hammerStoreLoadInt32(t *testing.T, paddr unsafe.Pointer) {$/;"	f
hammerStoreLoadInt64	./sync/atomic/atomic_test.go	/^func hammerStoreLoadInt64(t *testing.T, paddr unsafe.Pointer) {$/;"	f
hammerStoreLoadPointer	./sync/atomic/atomic_test.go	/^func hammerStoreLoadPointer(t *testing.T, paddr unsafe.Pointer) {$/;"	f
hammerStoreLoadUint32	./sync/atomic/atomic_test.go	/^func hammerStoreLoadUint32(t *testing.T, paddr unsafe.Pointer) {$/;"	f
hammerStoreLoadUint64	./sync/atomic/atomic_test.go	/^func hammerStoreLoadUint64(t *testing.T, paddr unsafe.Pointer) {$/;"	f
hammerStoreLoadUintptr	./sync/atomic/atomic_test.go	/^func hammerStoreLoadUintptr(t *testing.T, paddr unsafe.Pointer) {$/;"	f
hammerSwapInt32	./sync/atomic/atomic_test.go	/^func hammerSwapInt32(uaddr *uint32, count int) {$/;"	f
hammerSwapInt64	./sync/atomic/atomic_test.go	/^func hammerSwapInt64(uaddr *uint64, count int) {$/;"	f
hammerSwapUint32	./sync/atomic/atomic_test.go	/^func hammerSwapUint32(addr *uint32, count int) {$/;"	f
hammerSwapUint64	./sync/atomic/atomic_test.go	/^func hammerSwapUint64(addr *uint64, count int) {$/;"	f
hammerSwapUintptr32	./sync/atomic/atomic_test.go	/^func hammerSwapUintptr32(uaddr *uint32, count int) {$/;"	f
hammerSwapUintptr64	./sync/atomic/atomic_test.go	/^func hammerSwapUintptr64(uaddr *uint64, count int) {$/;"	f
handle	./runtime/os1_windows.go	/^	var handle uintptr$/;"	v
handle	./time/example_test.go	/^func handle(int) {}$/;"	f
handleBailout	./go/types/check.go	/^func (check *Checker) handleBailout(err *error) {$/;"	f
handleInternalRedirect	./net/http/cgi/host.go	/^func (h *Handler) handleInternalRedirect(rw http.ResponseWriter, req *http.Request, path string) {$/;"	f
handleMethods	./fmt/print.go	/^func (p *pp) handleMethods(verb rune, depth int) (handled bool) {$/;"	f
handlePanic	./text/tabwriter/tabwriter.go	/^func handlePanic(err *error, op string) {$/;"	f
handleRecord	./net/http/fcgi/child.go	/^func (c *child) handleRecord(rec *record) error {$/;"	f
handleTLSProtocol09	./net/http/npn_test.go	/^func handleTLSProtocol09(srv *Server, conn *tls.Conn, h Handler) {$/;"	f
handlecompletion	./runtime/netpoll_windows.go	/^func handlecompletion(gpp *guintptr, op *net_op, errno int32, qty uint32) {$/;"	f
handler	./net/http/pprof/pprof.go	/^type handler string$/;"	t
handler	./net/http/server.go	/^\/\/	func handler(w http.ResponseWriter, req *http.Request) {$/;"	f
handler	./net/http/server.go	/^func (mux *ServeMux) handler(host, path string) (h Handler, pattern string) {$/;"	f
handler	./os/signal/signal.go	/^type handler struct {$/;"	t
handler	./runtime/signal1_unix.go	/^	var handler uintptr$/;"	v
handlerBodyCloseTest	./net/http/serve_test.go	/^type handlerBodyCloseTest struct {$/;"	t
handlerBodyCloseTests	./net/http/serve_test.go	/^var handlerBodyCloseTests = [...]handlerBodyCloseTest{$/;"	v
handlerTest	./net/http/serve_test.go	/^type handlerTest struct {$/;"	t
handlers	./net/http/serve_test.go	/^var handlers = []struct {$/;"	v
handlers	./os/signal/signal.go	/^var handlers struct {$/;"	v
handoff	./runtime/mgcwork.go	/^func handoff(b *workbuf) *workbuf {$/;"	f
handoffp	./runtime/proc1.go	/^func handoffp(_p_ *p) {$/;"	f
handshakeMessage	./crypto/tls/common.go	/^type handshakeMessage interface {$/;"	t
has	./cmd/compile/internal/gc/fmt.go	/^	\/\/ Unless the 'l' flag was specified, if the type has a name, just print that name.$/;"	t
has	./cmd/compile/internal/gc/gen.go	/^		\/\/ the function type has already been checked$/;"	t
has	./cmd/compile/internal/gc/y.go	/^			\/\/ (dotmeth's type).Nname.Inl, and dotmeth's type has been pulled$/;"	t
has	./cmd/vet/composite.go	/^	\/\/ Check that the CompositeLit's type has the form pkg.Typ.$/;"	t
has	./encoding/asn1/common.go	/^\/\/ of" and "in addition to". When not specified, every primitive type has a$/;"	t
has	./encoding/gob/encoder.go	/^\/\/ It will send a descriptor if this is the first time the type has been$/;"	t
has	./encoding/gob/example_encdec_test.go	/^\/\/ The Vector type has unexported fields, which the package cannot access.$/;"	t
has	./encoding/gob/example_interface_test.go	/^	\/\/ The encode will fail unless the concrete type has been$/;"	t
has	./encoding/json/decode.go	/^	\/\/ start with its address, so that if the type has pointer methods,$/;"	t
has	./encoding/json/decode.go	/^\/\/ ``not present,'' unmarshaling a JSON null into any other Go type has no effect$/;"	t
has	./encoding/xml/typeinfo.go	/^	\/\/ If the field type has an XMLName field, the names must match$/;"	t
has	./flag/flag.go	/^		fmt.Println("flagvar has value ", flagvar)$/;"	v
has	./fmt/doc.go	/^	that type has a String method. Such pathologies are rare, however,$/;"	t
has	./go/doc/exports.go	/^\/\/ struct or interface type has the Incomplete field set to true.$/;"	t
has	./go/doc/reader.go	/^\/\/ If the base type has not been encountered yet, a new$/;"	t
has	./reflect/type.go	/^	\/\/ nextCount records the number of times an embedded type has been$/;"	t
has	./runtime/mbitmap.go	/^\/\/ It is known that the type has pointers somewhere;$/;"	t
hasAsm	./crypto/aes/cipher_asm.go	/^func hasAsm() bool$/;"	f
hasBash	./cmd/dist/test.go	/^func (t *tester) hasBash() bool {$/;"	f
hasBasicType	./cmd/vet/types.go	/^func (f *File) hasBasicType(x ast.Expr, kind types.BasicKind) bool {$/;"	f
hasBreak	./go/types/return.go	/^func hasBreak(s ast.Stmt, label string, implicit bool) bool {$/;"	f
hasBreakList	./go/types/return.go	/^func hasBreakList(list []ast.Stmt, label string, implicit bool) bool {$/;"	f
hasByte	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^func hasByte(src []byte, target ...byte) bool {$/;"	f
hasDataDescriptor	./archive/zip/reader.go	/^func (f *File) hasDataDescriptor() bool {$/;"	f
hasDotSuffix	./net/http/cookiejar/jar.go	/^func hasDotSuffix(s, suffix string) bool {$/;"	f
hasDotSuffixTests	./net/http/cookiejar/jar_test.go	/^var hasDotSuffixTests = [...]struct {$/;"	v
hasDuration	./cmd/pprof/internal/driver/driver.go	/^func hasDuration(path string) bool {$/;"	f
hasExportedName	./go/doc/exports.go	/^func hasExportedName(list []*ast.Ident) bool {$/;"	f
hasExt	./os/exec/lp_windows.go	/^func hasExt(file string) bool {$/;"	f
hasFilePathPrefix	./cmd/go/main.go	/^func hasFilePathPrefix(s, prefix string) bool {$/;"	f
hasFileWithSuffix	./cmd/vet/main.go	/^func (pkg *Package) hasFileWithSuffix(suffix string) bool {$/;"	f
hasFuncLiteral	./cmd/cover/cover.go	/^func hasFuncLiteral(n ast.Node) (bool, token.Pos) {$/;"	f
hasFunction	./text/template/parse/parse.go	/^func (t *Tree) hasFunction(name string) bool {$/;"	f
hasGoFiles	./cmd/doc/main.go	/^func hasGoFiles(path string) bool {$/;"	f
hasInitializer	./go/types/resolver.go	/^func (d *declInfo) hasInitializer() bool {$/;"	f
hasMeta	./path/filepath/match.go	/^func hasMeta(path string) bool {$/;"	f
hasMethod	./cmd/vet/types.go	/^func (f *File) hasMethod(typ types.Type, name string) bool {$/;"	f
hasNil	./go/types/predicates.go	/^func hasNil(typ Type) bool {$/;"	f
hasNonWhitespace	./mime/encodedword.go	/^func hasNonWhitespace(s string) bool {$/;"	f
hasPathPrefix	./cmd/go/main.go	/^func hasPathPrefix(s, prefix string) bool {$/;"	f
hasPathPrefix	./cmd/internal/obj/obj.go	/^func hasPathPrefix(s string, t string) bool {$/;"	f
hasPathPrefixTests	./cmd/go/match_test.go	/^var hasPathPrefixTests = []stringPairTest{$/;"	v
hasPointers	./runtime/mbitmap.go	/^func (h heapBits) hasPointers(size uintptr) bool {$/;"	f
hasPort	./net/http/client.go	/^func hasPort(s string) bool { return strings.LastIndex(s, ":") > strings.LastIndex(s, "]") }$/;"	f
hasPort	./net/http/cookiejar/jar.go	/^func hasPort(host string) bool {$/;"	f
hasPortTests	./net/http/cookiejar/jar_test.go	/^var hasPortTests = map[string]bool{$/;"	v
hasPrefix	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func hasPrefix(s string, prefixes ...string) bool {$/;"	f
hasPrefix	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func hasPrefix(s string, prefixes ...string) bool {$/;"	f
hasPrefix	./net/dnsconfig_unix.go	/^func hasPrefix(s, prefix string) bool {$/;"	f
hasPrefix	./os/file_plan9.go	/^func hasPrefix(s, prefix string) bool {$/;"	f
hasPrefix	./regexp/regexp.go	/^func (i *inputBytes) hasPrefix(re *Regexp) bool {$/;"	f
hasPrefix	./regexp/regexp.go	/^func (i *inputReader) hasPrefix(re *Regexp) bool {$/;"	f
hasPrefix	./regexp/regexp.go	/^func (i *inputString) hasPrefix(re *Regexp) bool {$/;"	f
hasSideEffects	./cmd/vet/bool.go	/^func hasSideEffects(e ast.Expr) bool {$/;"	f
hasSubdir	./cmd/go/pkg.go	/^func hasSubdir(root, dir string) (rel string, ok bool) {$/;"	f
hasToken	./net/http/header.go	/^func hasToken(v, token string) bool {$/;"	f
hasTokenTest	./net/http/header_test.go	/^type hasTokenTest struct {$/;"	t
hasTokenTests	./net/http/header_test.go	/^var hasTokenTests = []hasTokenTest{$/;"	v
hasUnsortedImports	./go/format/format.go	/^func hasUnsortedImports(file *ast.File) bool {$/;"	f
hascallchan	./cmd/compile/internal/gc/const.go	/^func hascallchan(n *Node) bool {$/;"	f
hascallspred	./cmd/compile/internal/gc/racewalk.go	/^func hascallspred(n *Node, c interface{}) {$/;"	f
hasddd	./cmd/compile/internal/gc/typecheck.go	/^func hasddd(t *Type) bool {$/;"	f
hash	./cmd/asm/internal/lex/input.go	/^func (in *Input) hash() bool {$/;"	f
hash	./cmd/compile/internal/gc/swt.go	/^	\/\/ calculate type hash$/;"	t
hash	./cmd/compile/internal/gc/swt.go	/^	caseKindTypeConst \/\/ case time.Time: (concrete type, has type hash)$/;"	t
hash	./cmd/compile/internal/gc/typecheck.go	/^		var hash map[int64]*Node$/;"	v
hash	./go/types/stmt.go	/^		\/\/ TODO(gri) use a type hash to avoid quadratic algorithm$/;"	t
hash	./reflect/type.go	/^	var hash uint32$/;"	v
hash	./runtime/hash_test.go	/^func (k *BytesKey) hash() uintptr {$/;"	f
hash	./runtime/hash_test.go	/^func (k *EfaceKey) hash() uintptr {$/;"	f
hash	./runtime/hash_test.go	/^func (k *IfaceKey) hash() uintptr {$/;"	f
hash	./runtime/hash_test.go	/^func (k *Int32Key) hash() uintptr {$/;"	f
hash	./runtime/hash_test.go	/^func (k *Int64Key) hash() uintptr {$/;"	f
hash	./runtime/vdso_linux_amd64.go	/^	var hash *[1 << 30]uint32$/;"	v
hashForClientCertificate	./crypto/tls/prf.go	/^func (h finishedHash) hashForClientCertificate(signatureAndHash signatureAndHash, masterSecret []byte) ([]byte, crypto.Hash, error) {$/;"	f
hashForServerKeyExchange	./crypto/tls/key_agreement.go	/^func hashForServerKeyExchange(sigAndHash signatureAndHash, version uint16, slices ...[]byte) ([]byte, crypto.Hash, error) {$/;"	f
hashFunc	./crypto/tls/handshake_server.go	/^			var hashFunc crypto.Hash$/;"	v
hashFunc	./crypto/x509/x509.go	/^	var hashFunc crypto.Hash$/;"	v
hashGrow	./runtime/hashmap.go	/^func hashGrow(t *maptype, h *hmap) {$/;"	f
hashLoad	./runtime/stubs.go	/^var hashLoad = loadFactor$/;"	v
hashPrefixes	./crypto/rsa/pkcs1v15.go	/^var hashPrefixes = map[crypto.Hash][]byte{$/;"	v
hashStr	./strings/strings.go	/^func hashStr(sep string) (uint32, uint32) {$/;"	f
hashStrRev	./strings/strings.go	/^func hashStrRev(sep string) (uint32, uint32) {$/;"	f
hashToInt	./crypto/ecdsa/ecdsa.go	/^func hashToInt(hash []byte, c elliptic.Curve) *big.Int {$/;"	f
hashType	./crypto/x509/x509.go	/^	var hashType crypto.Hash$/;"	v
hashbitmap	./cmd/compile/internal/gc/plive.go	/^func hashbitmap(h uint32, bv Bvec) uint32 {$/;"	f
hashed	./crypto/ecdsa/ecdsa_test.go	/^	var hashed []byte$/;"	v
hashed	./crypto/rsa/pss_test.go	/^	var hashed []byte$/;"	v
hashel	./cmd/compile/internal/gc/subr.go	/^		var hashel *Node$/;"	v
hashes	./crypto/crypto.go	/^var hashes = make([]func() hash.Hash, maxHash)$/;"	v
hashfor	./cmd/compile/internal/gc/subr.go	/^func hashfor(t *Type) *Node {$/;"	f
hashfunc	./cmd/compile/internal/gc/reflect.go	/^	var hashfunc *Sym$/;"	v
hashkey	./runtime/alg.go	/^var hashkey [4]uintptr$/;"	v
hashmem	./cmd/compile/internal/gc/subr.go	/^func hashmem(t *Type) *Node {$/;"	f
haslinkregister	./cmd/link/internal/ld/lib.go	/^func haslinkregister() bool {$/;"	f
haspointers	./cmd/compile/internal/gc/reflect.go	/^func haspointers(t *Type) bool {$/;"	f
hasprefix	./runtime/string.go	/^func hasprefix(s, t string) bool {$/;"	f
have	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) have(token lex.ScanToken) bool {$/;"	f
have	./cmd/compile/internal/gc/subr.go	/^		var have *Type$/;"	v
have	./cmd/compile/internal/gc/typecheck.go	/^			var have *Type$/;"	v
have	./runtime/mbitmap.go	/^			var have, want uint8$/;"	v
haveCS	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^		var haveCS, haveDS, haveES, haveFS, haveGS, haveSS bool$/;"	v
haveIdenticalUnderlyingType	./reflect/type.go	/^func haveIdenticalUnderlyingType(T, V *rtype) bool {$/;"	f
haveSSE42	./hash/crc32/crc32_amd64x.go	/^func haveSSE42() bool$/;"	f
haveText	./encoding/xml/xml.go	/^			var haveText bool$/;"	v
haveexperiment	./runtime/proc1.go	/^func haveexperiment(name string) bool {$/;"	f
havem	./runtime/asm_386.s	/^havem:$/;"	l
havem	./runtime/asm_amd64.s	/^havem:$/;"	l
havem	./runtime/asm_arm.s	/^havem:$/;"	l
havem	./runtime/asm_arm64.s	/^havem:$/;"	l
havem	./runtime/asm_ppc64x.s	/^havem:$/;"	l
haystack	./bytes/example_test.go	/^	var haystack [][]byte \/\/ Assume sorted$/;"	v
hb	./mime/encodedword.go	/^	var hb, lb byte$/;"	v
hb	./mime/quotedprintable/reader.go	/^	var hb, lb byte$/;"	v
hbar	./text/tabwriter/tabwriter.go	/^var hbar = []byte("---\\n")$/;"	v
hc	./cmd/link/internal/ld/elf.go	/^	var hc uint32$/;"	v
hchan	./runtime/chan.go	/^type hchan struct {$/;"	t
hcrash	./cmd/compile/internal/gc/subr.go	/^func hcrash() {$/;"	f
hdr	./archive/tar/reader.go	/^	var hdr *Header$/;"	v
hdr	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^	var hdr elf.Header32$/;"	v
hdr	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var hdr elf.Header32$/;"	v
hdr	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var hdr elf.Header64$/;"	v
hdr	./cmd/link/internal/ld/ldelf.go	/^	var hdr *ElfHdrBytes$/;"	v
hdr	./cmd/link/internal/ld/ldmacho.go	/^	var hdr [7 * 4]uint8$/;"	v
hdr	./debug/macho/file.go	/^			var hdr DylibCmd$/;"	v
hdr	./debug/macho/file.go	/^			var hdr DysymtabCmd$/;"	v
hdr	./debug/macho/file.go	/^			var hdr SymtabCmd$/;"	v
hdrbuf	./cmd/link/internal/ld/ldelf.go	/^	var hdrbuf [64]uint8$/;"	v
head	./runtime/gc_test.go	/^	var head *X$/;"	v
head	./runtime/gc_test.go	/^	var head *Y$/;"	v
head	./runtime/mgcsweep.go	/^	var head, end gclinkptr$/;"	v
header	./archive/tar/writer.go	/^	var header []byte$/;"	v
header	./archive/zip/writer.go	/^type header struct {$/;"	t
header	./cmd/compile/internal/gc/dcl.go	/^	\/\/ no n->defn because type checking of func header$/;"	f
header	./net/http/fcgi/fcgi.go	/^type header struct {$/;"	t
headerBody	./mime/multipart/multipart_test.go	/^type headerBody struct {$/;"	t
headerEq	./net/mail/message_test.go	/^func headerEq(a, b Header) bool {$/;"	f
headerFileInfo	./archive/tar/common.go	/^type headerFileInfo struct {$/;"	t
headerFileInfo	./archive/zip/struct.go	/^type headerFileInfo struct {$/;"	t
headerLength	./debug/dwarf/line.go	/^	var headerLength Offset$/;"	v
headerNewlineToSpace	./net/http/header.go	/^var headerNewlineToSpace = strings.NewReplacer("\\n", " ", "\\r", " ")$/;"	v
headerOnlyResponseWriter	./net/http/cookie_test.go	/^type headerOnlyResponseWriter Header$/;"	t
headerRoundTripTest	./archive/tar/tar_test.go	/^type headerRoundTripTest struct {$/;"	t
headerSorter	./net/http/header.go	/^type headerSorter struct {$/;"	t
headerSorterPool	./net/http/header.go	/^var headerSorterPool = sync.Pool{$/;"	v
headerValueContainsToken	./net/http/lex.go	/^func headerValueContainsToken(v string, token string) bool {$/;"	f
headerValuesContainsToken	./net/http/lex.go	/^func headerValuesContainsToken(values []string, token string) bool {$/;"	f
headerWriteTests	./net/http/header_test.go	/^var headerWriteTests = []struct {$/;"	v
headers	./cmd/internal/obj/sym.go	/^var headers = []struct {$/;"	v
headers	./cmd/link/internal/ld/sym.go	/^var headers = []struct {$/;"	v
heading	./go/doc/comment.go	/^func heading(line string) string {$/;"	f
headingTests	./go/doc/comment_test.go	/^var headingTests = []struct {$/;"	v
headtype	./cmd/internal/obj/sym.go	/^func headtype(name string) int {$/;"	f
headtype	./cmd/link/internal/ld/sym.go	/^func headtype(name string) int {$/;"	f
heap0	./runtime/mgc.go	/^	var heap0, heap1, heap2, heapGoal uint64$/;"	v
heapBits	./runtime/mbitmap.go	/^type heapBits struct {$/;"	t
heapBitsBulkBarrier	./runtime/mbitmap.go	/^func heapBitsBulkBarrier(p, size uintptr) {$/;"	f
heapBitsForAddr	./runtime/mbitmap.go	/^func heapBitsForAddr(addr uintptr) heapBits {$/;"	f
heapBitsForObject	./runtime/mbitmap.go	/^func heapBitsForObject(p uintptr) (base uintptr, hbits heapBits, s *mspan) {$/;"	f
heapBitsForSpan	./runtime/mbitmap.go	/^func heapBitsForSpan(base uintptr) (hbits heapBits) {$/;"	f
heapBitsSetType	./runtime/mbitmap.go	/^func heapBitsSetType(x, size, dataSize uintptr, typ *_type) {$/;"	f
heapBitsSetTypeGCProg	./runtime/mbitmap.go	/^func heapBitsSetTypeGCProg(h heapBits, progSize, elemSize, dataSize, allocSize uintptr, prog *byte) {$/;"	f
heapBitsSweepSpan	./runtime/mbitmap.go	/^func heapBitsSweepSpan(base, size, n uintptr, f func(uintptr)) {$/;"	f
heapProfile	./runtime/pprof/pprof.go	/^var heapProfile = &Profile{$/;"	v
heapSort	./sort/sort.go	/^func heapSort(data Interface, a, b int) {$/;"	f
heapminimum	./runtime/mgc.go	/^var heapminimum uint64 = defaultHeapMinimum$/;"	v
heapmoves	./cmd/compile/internal/gc/walk.go	/^func heapmoves() {$/;"	f
heapzAllocSampleTypes	./cmd/pprof/internal/profile/legacy_profile.go	/^var heapzAllocSampleTypes = []string{"alloc_objects", "alloc_space"}$/;"	v
heapzInUseSampleTypes	./cmd/pprof/internal/profile/legacy_profile.go	/^var heapzInUseSampleTypes = []string{"inuse_objects", "inuse_space"}$/;"	v
heapzSampleTypes	./cmd/pprof/internal/profile/legacy_profile.go	/^var heapzSampleTypes = []string{"allocations", "size"} \/\/ early Go pprof profiles$/;"	v
hello	./cmd/go/testdata/src/notest/hello.go	/^func hello() {$/;"	f
hello	./net/smtp/smtp.go	/^func (c *Client) hello() error {$/;"	f
helloClient	./net/smtp/smtp_test.go	/^var helloClient = []string{$/;"	v
helloFile	./cmd/pack/pack_test.go	/^var helloFile = &FakeFile{$/;"	v
helloRequests	./net/http/triv.go	/^var helloRequests = expvar.NewInt("hello-requests")$/;"	v
helloServer	./net/smtp/smtp_test.go	/^var helloServer = []string{$/;"	v
helloWorld	./compress/bzip2/bzip2_test.go	/^var helloWorld = []byte("hello world\\n")$/;"	v
helo	./net/smtp/smtp.go	/^func (c *Client) helo() error {$/;"	f
help	./cmd/go/main.go	/^func help(args []string) {$/;"	f
help	./flag/flag_test.go	/^	var help bool$/;"	v
help	./regexp/testdata/testregex.c	/^help(int html)$/;"	f	file:
helpBuildmode	./cmd/go/help.go	/^var helpBuildmode = &Command{$/;"	v
helpC	./cmd/go/help.go	/^var helpC = &Command{$/;"	v
helpCalled	./flag/flag_test.go	/^	var helpCalled = false$/;"	v
helpEnvironment	./cmd/go/help.go	/^var helpEnvironment = &Command{$/;"	v
helpFileType	./cmd/go/help.go	/^var helpFileType = &Command{$/;"	v
helpGopath	./cmd/go/help.go	/^var helpGopath = &Command{$/;"	v
helpImportPath	./cmd/go/help.go	/^var helpImportPath = &Command{$/;"	v
helpPackages	./cmd/go/help.go	/^var helpPackages = &Command{$/;"	v
helpTemplate	./cmd/go/main.go	/^var helpTemplate = `{{if .Runnable}}usage: go {{.UsageLine}}$/;"	v
helpTestflag	./cmd/go/test.go	/^var helpTestflag = &Command{$/;"	v
helpTestfunc	./cmd/go/test.go	/^var helpTestfunc = &Command{$/;"	v
helper	./reflect/all_test.go	/^		var helper func() \/\/ goroutine to help the select complete$/;"	v
helperCommand	./os/exec/exec_test.go	/^func helperCommand(t *testing.T, s ...string) *exec.Cmd {$/;"	f
helpgc	./runtime/proc1.go	/^func helpgc(nproc int32) {$/;"	f
here	./cmd/link/internal/ld/dwarf.go	/^	var here int64$/;"	v
here	./go/parser/error_test.go	/^	var here token.Pos \/\/ position immediately after the token at position prev$/;"	v
here	./go/types/check_test.go	/^		var here token.Pos \/\/ position immediately after the token at position prev$/;"	v
here	./go/types/type.go	/^		\/\/ TODO(gri) Ideally, we should use a named type here instead of$/;"	t
hex	./encoding/json/encode.go	/^var hex = "0123456789abcdef"$/;"	v
hex	./runtime/print1.go	/^type hex uint64$/;"	t
hexByte	./fmt/scan.go	/^func (s *ss) hexByte() (b byte, ok bool) {$/;"	f
hexBytes	./fmt/scan_test.go	/^type hexBytes [2]byte$/;"	t
hexCases	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func hexCases(t *testing.T, encoded string) func(func([]byte)) {$/;"	f
hexCases	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func hexCases(t *testing.T, encoded string) func(func([]byte)) {$/;"	f
hexDecode	./html/template/css.go	/^func hexDecode(s []byte) rune {$/;"	f
hexDigit	./fmt/scan.go	/^func hexDigit(d rune) (int, bool) {$/;"	f
hexString	./cmd/compile/internal/big/natconv.go	/^func (x nat) hexString() string {$/;"	f
hexString	./fmt/scan.go	/^func (s *ss) hexString() string {$/;"	f
hexString	./math/big/natconv.go	/^func (x nat) hexString() string {$/;"	f
hgRemoteRepo	./cmd/go/vcs.go	/^func hgRemoteRepo(vcsHg *vcsCmd, rootDir string) (remoteRepo string, err error) {$/;"	f
hgradRed	./image/draw/draw_test.go	/^func hgradRed(alpha int) Image {$/;"	f
hi	./cmd/compile/internal/arm/cgen.go	/^	var hi gc.Node$/;"	v
hi	./cmd/compile/internal/arm/ggen.go	/^		var hi gc.Node$/;"	v
hi	./cmd/compile/internal/x86/cgen.go	/^	var hi gc.Node$/;"	v
hi	./cmd/compile/internal/x86/ggen.go	/^			var hi gc.Node$/;"	v
hi	./math/expm1.go	/^		var hi, lo float64$/;"	v
hi1	./cmd/compile/internal/arm/cgen64.go	/^	var hi1 gc.Node$/;"	v
hi1	./cmd/compile/internal/x86/cgen64.go	/^		var hi1 gc.Node$/;"	v
hi1	./cmd/compile/internal/x86/cgen64.go	/^	var hi1 gc.Node$/;"	v
hi2	./cmd/compile/internal/arm/cgen64.go	/^		var hi2 gc.Node$/;"	v
hi2	./cmd/compile/internal/arm/cgen64.go	/^	var hi2 gc.Node$/;"	v
hi2	./cmd/compile/internal/x86/cgen64.go	/^	var hi2 gc.Node$/;"	v
hidden_constant	./cmd/compile/internal/gc/go.y	/^hidden_constant:$/;"	l
hidden_fndcl	./cmd/compile/internal/gc/go.y	/^hidden_fndcl:$/;"	l
hidden_funarg	./cmd/compile/internal/gc/go.y	/^hidden_funarg:$/;"	l
hidden_funarg_list	./cmd/compile/internal/gc/go.y	/^hidden_funarg_list:$/;"	l
hidden_funres	./cmd/compile/internal/gc/go.y	/^hidden_funres:$/;"	l
hidden_import	./cmd/compile/internal/gc/go.y	/^hidden_import:$/;"	l
hidden_import_list	./cmd/compile/internal/gc/go.y	/^hidden_import_list:$/;"	l
hidden_importsym	./cmd/compile/internal/gc/go.y	/^hidden_importsym:$/;"	l
hidden_interfacedcl	./cmd/compile/internal/gc/go.y	/^hidden_interfacedcl:$/;"	l
hidden_interfacedcl_list	./cmd/compile/internal/gc/go.y	/^hidden_interfacedcl_list:$/;"	l
hidden_literal	./cmd/compile/internal/gc/go.y	/^hidden_literal:$/;"	l
hidden_pkg_importsym	./cmd/compile/internal/gc/go.y	/^hidden_pkg_importsym:$/;"	l
hidden_pkgtype	./cmd/compile/internal/gc/go.y	/^hidden_pkgtype:$/;"	l
hidden_structdcl	./cmd/compile/internal/gc/go.y	/^hidden_structdcl:$/;"	l
hidden_structdcl_list	./cmd/compile/internal/gc/go.y	/^hidden_structdcl_list:$/;"	l
hidden_type	./cmd/compile/internal/gc/go.y	/^hidden_type:$/;"	l
hidden_type_func	./cmd/compile/internal/gc/go.y	/^hidden_type_func:$/;"	l
hidden_type_misc	./cmd/compile/internal/gc/go.y	/^hidden_type_misc:$/;"	l
hidden_type_non_recv_chan	./cmd/compile/internal/gc/go.y	/^hidden_type_non_recv_chan:$/;"	l
hidden_type_recv_chan	./cmd/compile/internal/gc/go.y	/^hidden_type_recv_chan:$/;"	l
hideAgainReader	./crypto/rand/rand_unix.go	/^type hideAgainReader struct {$/;"	t
hidePanic	./cmd/compile/internal/gc/lex.go	/^func hidePanic() {$/;"	f
hideprod	./cmd/yacc/yacc.go	/^func hideprod() {$/;"	f
high	./math/rand/rand_test.go	/^		var high int$/;"	v
high16adjusted	./cmd/internal/obj/ppc64/asm9.go	/^func high16adjusted(d int32) uint16 {$/;"	f
hijack	./net/http/server.go	/^func (c *conn) hijack() (rwc net.Conn, buf *bufio.ReadWriter, err error) {$/;"	f
hijacked	./net/http/server.go	/^func (c *conn) hijacked() bool {$/;"	f
hilbert	./go/types/hilbert_test.go	/^func (g *gen) hilbert(n int) {$/;"	f
hints	./net/cgo_unix.go	/^	var hints C.struct_addrinfo$/;"	v
hinv	./math/rand/zipf.go	/^func (z *Zipf) hinv(x float64) float64 {$/;"	f
histogram	./image/decode_example_test.go	/^	var histogram [16][4]int$/;"	v
historyListener	./net/http/httptest/server.go	/^type historyListener struct {$/;"	t
hiter	./cmd/compile/internal/gc/reflect.go	/^func hiter(t *Type) *Type {$/;"	f
hiter	./runtime/hashmap.go	/^type hiter struct {$/;"	t
hlen	./runtime/print1_write_android.go	/^	var hlen int$/;"	v
hmac	./crypto/hmac/hmac.go	/^type hmac struct {$/;"	t
hmacTest	./crypto/hmac/hmac_test.go	/^type hmacTest struct {$/;"	t
hmacTests	./crypto/hmac/hmac_test.go	/^var hmacTests = []hmacTest{$/;"	v
hmap	./cmd/compile/internal/gc/reflect.go	/^func hmap(t *Type) *Type {$/;"	f
hmap	./runtime/hashmap.go	/^type hmap struct {$/;"	t
holding	./crypto/x509/pem_decrypt.go	/^\/\/ EncryptPEMBlock returns a PEM block of the specified type holding the$/;"	t
holding	./reflect/type.go	/^	\/\/ build dummy rtype holding gc program$/;"	t
hookExecBadConn	./database/sql/fakedb_test.go	/^var hookExecBadConn func() bool$/;"	v
hookPostCloseConn	./database/sql/fakedb_test.go	/^var hookPostCloseConn struct {$/;"	v
hookPrepareBadConn	./database/sql/fakedb_test.go	/^var hookPrepareBadConn func() bool$/;"	v
hookQueryBadConn	./database/sql/fakedb_test.go	/^var hookQueryBadConn func() bool$/;"	v
hopHeaders	./net/http/httputil/reverseproxy.go	/^var hopHeaders = []string{$/;"	v
hostLookupOrder	./net/conf.go	/^func (c *conf) hostLookupOrder(hostname string) (ret hostLookupOrder) {$/;"	f
hostLookupOrder	./net/dnsclient_unix.go	/^type hostLookupOrder int$/;"	t
hostPortHandler	./net/http/transport_test.go	/^var hostPortHandler = HandlerFunc(func(w ResponseWriter, r *Request) {$/;"	v
hostlink	./cmd/link/internal/ld/lib.go	/^func hostlink() {$/;"	f
hostlinksetup	./cmd/link/internal/ld/lib.go	/^func hostlinksetup() {$/;"	f
hostname	./os/sys_bsd.go	/^func hostname() (name string, err error) {$/;"	f
hostname	./os/sys_linux.go	/^func hostname() (name string, err error) {$/;"	f
hostname	./os/sys_plan9.go	/^func hostname() (name string, err error) {$/;"	f
hostname	./os/sys_solaris.go	/^func hostname() (name string, err error) {$/;"	f
hostname	./os/sys_windows.go	/^func hostname() (name string, err error) {$/;"	f
hostobj	./cmd/link/internal/ld/lib.go	/^var hostobj []Hostobj$/;"	v
hostobjCopy	./cmd/link/internal/ld/lib.go	/^func hostobjCopy() (paths []string) {$/;"	f
hostobjs	./cmd/link/internal/ld/lib.go	/^func hostobjs() {$/;"	f
hosts	./net/hosts.go	/^var hosts struct {$/;"	v
hourDurationTests	./time/time_test.go	/^var hourDurationTests = []struct {$/;"	v
how	./runtime/runtime-gdb.py	/^	how = ((SliceTypePrinter, 'cap'), (ChanTypePrinter, 'dataqsiz'))$/;"	v	class:GoCapFunc
how	./runtime/runtime-gdb.py	/^	how = ((StringTypePrinter, 'len'), (SliceTypePrinter, 'len'), (MapTypePrinter, 'count'), (ChanTypePrinter, 'qcount'))$/;"	v	class:GoLenFunc
hp	./cmd/compile/internal/gc/range.go	/^		var hp *Node$/;"	v
hr	./time/format.go	/^			var hr, mm, ss int$/;"	v
hselect	./runtime/select.go	/^type hselect struct {$/;"	t
html	./text/template/funcs.go	/^		var html []byte$/;"	v
htmlAutoClose	./encoding/xml/xml.go	/^var htmlAutoClose = []string{$/;"	v
htmlEntity	./encoding/xml/xml.go	/^var htmlEntity = map[string]string{$/;"	v
htmlEscape	./net/http/server.go	/^func htmlEscape(s string) string {$/;"	f
htmlEscaper	./html/escape.go	/^var htmlEscaper = strings.NewReplacer($/;"	v
htmlEscaper	./html/template/html.go	/^func htmlEscaper(args ...interface{}) string {$/;"	f
htmlEscaper	./strings/replace_test.go	/^var htmlEscaper = NewReplacer($/;"	v
htmlGen	./cmd/cover/html.go	/^func htmlGen(w io.Writer, src []byte, boundaries []Boundary) error {$/;"	f
htmlNameFilter	./html/template/html.go	/^func htmlNameFilter(args ...interface{}) string {$/;"	f
htmlNormReplacementTable	./html/template/html.go	/^var htmlNormReplacementTable = []string{$/;"	v
htmlNospaceEscaper	./html/template/html.go	/^func htmlNospaceEscaper(args ...interface{}) string {$/;"	f
htmlNospaceNormReplacementTable	./html/template/html.go	/^var htmlNospaceNormReplacementTable = []string{$/;"	v
htmlNospaceReplacementTable	./html/template/html.go	/^var htmlNospaceReplacementTable = []string{$/;"	v
htmlOutput	./cmd/cover/html.go	/^func htmlOutput(profile, outfile string) error {$/;"	f
htmlReplacementTable	./html/template/html.go	/^var htmlReplacementTable = []string{$/;"	v
htmlReplacer	./html/template/html.go	/^func htmlReplacer(s string, replacementTable []string, badRunes bool) string {$/;"	f
htmlReplacer	./net/http/server.go	/^var htmlReplacer = strings.NewReplacer($/;"	v
htmlSig	./net/http/sniff.go	/^type htmlSig []byte$/;"	t
htmlTemplate	./cmd/cover/html.go	/^var htmlTemplate = template.Must(template.New("html").Funcs(template.FuncMap{$/;"	v
htmlUnescaper	./strings/replace_test.go	/^var htmlUnescaper = NewReplacer($/;"	v
html_h	./go/doc/headscan.go	/^var html_h = regexp.MustCompile(`<h3 id="[^"]*">`)$/;"	v
http	./sync/example_test.go	/^var http httpPkg$/;"	v
http09Writer	./net/http/npn_test.go	/^type http09Writer struct {$/;"	t
httpBlock	./cmd/trace/pprof.go	/^func httpBlock(w http.ResponseWriter, r *http.Request) {$/;"	f
httpClient	./cmd/go/http.go	/^var httpClient = http.DefaultClient$/;"	v
httpError	./cmd/go/bootstrap.go	/^type httpError struct {$/;"	t
httpError	./cmd/go/http.go	/^type httpError struct {$/;"	t
httpError	./net/http/transport.go	/^type httpError struct {$/;"	t
httpGET	./cmd/go/bootstrap.go	/^func httpGET(url string) ([]byte, error) {$/;"	f
httpGET	./cmd/go/http.go	/^func httpGET(url string) ([]byte, error) {$/;"	f
httpGet	./cmd/pprof/internal/fetch/fetch.go	/^var httpGet = func(url string, timeout time.Duration) (*http.Response, error) {$/;"	v
httpGoroutine	./cmd/trace/goroutines.go	/^func httpGoroutine(w http.ResponseWriter, r *http.Request) {$/;"	f
httpGoroutines	./cmd/trace/goroutines.go	/^func httpGoroutines(w http.ResponseWriter, r *http.Request) {$/;"	f
httpIO	./cmd/trace/pprof.go	/^func httpIO(w http.ResponseWriter, r *http.Request) {$/;"	f
httpJsonTrace	./cmd/trace/trace.go	/^func httpJsonTrace(w http.ResponseWriter, r *http.Request) {$/;"	f
httpMain	./cmd/trace/main.go	/^func httpMain(w http.ResponseWriter, r *http.Request) {$/;"	f
httpPkg	./sync/example_test.go	/^type httpPkg struct{}$/;"	t
httpPrefixRE	./cmd/go/vcs.go	/^var httpPrefixRE = regexp.MustCompile(`^https?:`)$/;"	v
httpRange	./net/http/fs.go	/^type httpRange struct {$/;"	t
httpSched	./cmd/trace/pprof.go	/^func httpSched(w http.ResponseWriter, r *http.Request) {$/;"	f
httpSyscall	./cmd/trace/pprof.go	/^func httpSyscall(w http.ResponseWriter, r *http.Request) {$/;"	f
httpTrace	./cmd/trace/trace.go	/^func httpTrace(w http.ResponseWriter, r *http.Request) {$/;"	f
httpTraceViewerHTML	./cmd/trace/trace.go	/^func httpTraceViewerHTML(w http.ResponseWriter, r *http.Request) {$/;"	f
httpsOrHTTP	./cmd/go/bootstrap.go	/^func httpsOrHTTP(importPath string, security securityMode) (string, io.ReadCloser, error) {$/;"	f
httpsOrHTTP	./cmd/go/http.go	/^func httpsOrHTTP(importPath string, security securityMode) (urlStr string, body io.ReadCloser, err error) {$/;"	f
huffIndex	./image/jpeg/writer.go	/^type huffIndex int$/;"	t
huffSym	./compress/flate/inflate.go	/^func (f *decompressor) huffSym(h *huffmanDecoder) (int, error) {$/;"	f
huffSym	./syscall/unzip_nacl.go	/^func (f *decompressor) huffSym(h *huffmanDecoder) int {$/;"	f
huffman	./image/jpeg/huffman.go	/^type huffman struct {$/;"	t
huffmanBitWriter	./compress/flate/huffman_bit_writer.go	/^type huffmanBitWriter struct {$/;"	t
huffmanBlock	./compress/flate/inflate.go	/^func (f *decompressor) huffmanBlock() {$/;"	f
huffmanBlock	./syscall/unzip_nacl.go	/^func (f *decompressor) huffmanBlock(hl, hd *huffmanDecoder) {$/;"	f
huffmanCode	./compress/bzip2/huffman.go	/^type huffmanCode struct {$/;"	t
huffmanCodes	./compress/bzip2/huffman.go	/^type huffmanCodes []huffmanCode$/;"	t
huffmanDecoder	./compress/flate/gen.go	/^type huffmanDecoder struct {$/;"	t
huffmanDecoder	./compress/flate/inflate.go	/^type huffmanDecoder struct {$/;"	t
huffmanDecoder	./syscall/unzip_nacl.go	/^type huffmanDecoder struct {$/;"	t
huffmanEncoder	./compress/flate/huffman_code.go	/^type huffmanEncoder struct {$/;"	t
huffmanLUT	./image/jpeg/writer.go	/^type huffmanLUT []uint32$/;"	t
huffmanNode	./compress/bzip2/huffman.go	/^type huffmanNode struct {$/;"	t
huffmanSpec	./image/jpeg/writer.go	/^type huffmanSpec struct {$/;"	t
huffmanSymbolLengthPair	./compress/bzip2/huffman.go	/^type huffmanSymbolLengthPair struct {$/;"	t
huffmanSymbolLengthPairs	./compress/bzip2/huffman.go	/^type huffmanSymbolLengthPairs []huffmanSymbolLengthPair$/;"	t
huffmanTree	./compress/bzip2/huffman.go	/^type huffmanTree struct {$/;"	t
hugeSink	./runtime/gc_test.go	/^var hugeSink interface{}$/;"	v
hugeloop	./runtime/asm_386.s	/^hugeloop:$/;"	l
hugeloop	./runtime/asm_amd64.s	/^hugeloop:$/;"	l
hugeloop	./runtime/asm_amd64p32.s	/^hugeloop:$/;"	l
hunk	./cmd/compile/internal/gc/go.go	/^var hunk string$/;"	v
hv2	./cmd/compile/internal/gc/range.go	/^		var hv2 *Node$/;"	v
hwcap	./runtime/os_linux_arm.go	/^var hwcap uint32      \/\/ set by setup_auxv$/;"	v
hwcmp	./runtime/softfloat64_test.go	/^func hwcmp(f, g float64) (cmp int, isnan bool) {$/;"	f
hwint32	./runtime/softfloat64_test.go	/^func hwint32(f float64) float64 {$/;"	f
hwint64	./runtime/softfloat64_test.go	/^func hwint64(f float64) float64 {$/;"	f
hypot	./math/hypot.go	/^func hypot(p, q float64) float64 {$/;"	f
hypotSC	./math/all_test.go	/^var hypotSC = []float64{$/;"	v
i1	./fmt/fmt_test.go	/^	var i1 interface{}$/;"	v
i16	./cmd/link/internal/ld/data.go	/^	var i16 int16$/;"	v
i16	./cmd/vet/testdata/shift.go	/^	var i16 int16$/;"	v
i32	./cmd/vet/testdata/shift.go	/^	var i32 int32$/;"	v
i64	./cmd/vet/testdata/shift.go	/^	var i64 int64$/;"	v
i8	./cmd/vet/testdata/shift.go	/^	var i8 int8$/;"	v
iEEETable8	./hash/crc32/crc32.go	/^var iEEETable8 *slicing8Table$/;"	v
iEEETable8Once	./hash/crc32/crc32.go	/^var iEEETable8Once sync.Once$/;"	v
iOS	./cmd/dist/test.go	/^func (t *tester) iOS() bool {$/;"	f
iVal	./text/template/exec_test.go	/^var iVal I = tVal$/;"	v
ia5StringTest	./encoding/asn1/marshal_test.go	/^type ia5StringTest struct {$/;"	t
iargs	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^	var iargs []Arg$/;"	v
iarray	./fmt/fmt_test.go	/^var iarray = [4]interface{}{1, "hello", 2.5, nil}$/;"	v
iarray	./reflect/type.go	/^	var iarray interface{} = [1]unsafe.Pointer{}$/;"	v
ichan	./reflect/type.go	/^	var ichan interface{} = (chan unsafe.Pointer)(nil)$/;"	v
iconv	./cmd/compile/internal/gc/const.go	/^func iconv(x int64, et int) int64 {$/;"	f
id	./crypto/x509/root_darwin_arm_gen.go	/^	var id certID$/;"	v
id	./database/sql/sql.go	/^\/\/         var id int$/;"	v
id	./encoding/gob/codec_test.go	/^\/\/ Don't crash, just give error with invalid type id.$/;"	t
id	./encoding/gob/debug.go	/^		deb.dump("type id=%d", id)$/;"	t
id	./encoding/gob/debug.go	/^		errorf("type id %d not defined", id)$/;"	t
id	./encoding/gob/debug.go	/^\/\/ typeId returns the type id at the input point.$/;"	t
id	./encoding/gob/decode.go	/^	\/\/ Read the type id of the concrete value.$/;"	t
id	./encoding/gob/decode.go	/^	errBadType = errors.New("gob: unknown type id or corrupted data")$/;"	t
id	./encoding/gob/decoder.go	/^		\/\/ Receive a type id.$/;"	t
id	./encoding/gob/decoder.go	/^\/\/ and returns the type id of the next value.  It returns -1 at$/;"	t
id	./encoding/gob/doc.go	/^		Id   int    \/\/ the type id of the field, which must be already defined$/;"	t
id	./encoding/gob/doc.go	/^	(byteCount (-type id, encoding of a wireType)* (type id, encoding of a value))*$/;"	t
id	./encoding/gob/doc.go	/^To define a type, the encoder chooses an unused, positive type id and sends the$/;"	t
id	./encoding/gob/doc.go	/^before the top-level type id is used to describe an encoded-v.$/;"	t
id	./encoding/gob/doc.go	/^pair (-type id, encoded-type) where encoded-type is the gob encoding of a wireType$/;"	t
id	./encoding/gob/doc.go	/^we've sent on this Encoder, so it has type id 65 (0 through 64 are$/;"	t
id	./encoding/gob/doc.go	/^where * signifies zero or more repetitions and the type id of a value must$/;"	t
id	./encoding/gob/doc.go	/^where typeid is the type id of the encoded type of v and encoded-v is the gob$/;"	t
id	./encoding/gob/encode.go	/^	\/\/ Define the type id if necessary.$/;"	t
id	./encoding/gob/encode.go	/^	\/\/ Send the type id.$/;"	t
id	./encoding/gob/encoder_test.go	/^	{"036e6f77206973207468652074696d6520666f7220616c6c20676f6f64206d656e", "unknown type id", new(ET2)},$/;"	t
id	./encoding/gob/type.go	/^			\/\/ still defining the element. Fix the element type id here.$/;"	t
id	./encoding/gob/type.go	/^		\/\/ For arrays, maps, and slices, we set the type id after the elements$/;"	t
id	./encoding/gob/type.go	/^		\/\/ are constructed. This is to retain the order of type id allocation after$/;"	t
id	./encoding/gob/type.go	/^	\/\/ Set our type id before evaluating the element's, in case it's our own.$/;"	t
id	./encoding/gob/type.go	/^func (t *CommonType) id() typeId { return t.Id }$/;"	f
id	./go/internal/gcimporter/gcimporter.go	/^		var id string$/;"	v
id	./net/http/cookiejar/jar.go	/^func (e *entry) id() string {$/;"	f
id	./regexp/testdata/testregex.c	/^static const char id[] = "\\n@(#)$Id: testregex (AT&T Research) 2010-06-10 $\\0\\n";$/;"	v	file:
id	./runtime/print1_write_android.go	/^	\/\/   hdr[0] log type id (unsigned char), defined in <log\/log.h>$/;"	t
idToType	./encoding/gob/type.go	/^var idToType = make(map[typeId]gobType)$/;"	v
ida	./debug/pe/file.go	/^	var ida []ImportDirectory$/;"	v
idct	./image/jpeg/idct.go	/^func idct(src *block) {$/;"	f
idealConstant	./text/template/exec.go	/^func (s *state) idealConstant(constant *parse.NumberNode) reflect.Value {$/;"	f
idealbool	./cmd/compile/internal/gc/go.go	/^var idealbool *Type$/;"	v
idealkind	./cmd/compile/internal/gc/const.go	/^func idealkind(n *Node) int {$/;"	f
idealstring	./cmd/compile/internal/gc/go.go	/^var idealstring *Type$/;"	v
ident	./debug/elf/file.go	/^	var ident [16]uint8$/;"	v
ident	./debug/macho/file.go	/^	var ident [4]byte$/;"	v
ident	./go/parser/parser.go	/^	var ident *ast.Ident$/;"	v
ident	./go/printer/testdata/parser.go	/^	var ident *ast.Ident$/;"	v
ident	./go/types/typexpr.go	/^func (check *Checker) ident(x *operand, e *ast.Ident, def *Named, path []*TypeName) {$/;"	f
identCount	./go/printer/printer_test.go	/^func identCount(f *ast.File) int {$/;"	f
identLength	./cmd/go/generate.go	/^func (g *Generator) identLength(word string) int {$/;"	f
identList	./go/printer/nodes.go	/^func (p *printer) identList(list []*ast.Ident, indent bool) {$/;"	f
identListSize	./go/printer/nodes.go	/^func identListSize(list []*ast.Ident, maxSize int) (size int) {$/;"	f
identical	./go/types/predicates.go	/^func (p *ifacePair) identical(q *ifacePair) bool {$/;"	f
identical	./go/types/predicates.go	/^func identical(x, y Type, p *ifacePair) bool {$/;"	f
identified	./encoding/gob/decode.go	/^\/\/ typeString returns a human-readable description of the type identified by remoteId.$/;"	t
identifier	./encoding/gob/encode.go	/^\/\/ by the type identifier (which might require defining that type right now), followed$/;"	t
identifier	./go/parser/parser.go	/^	\/\/ Go spec: The scope of a type identifier declared inside a function begins$/;"	t
identifier	./go/printer/testdata/parser.go	/^	\/\/ Go spec: The scope of a type identifier declared inside a function begins$/;"	t
identifier	./go/types/decl.go	/^				\/\/ spec: "The scope of a type identifier declared inside a function$/;"	t
identifiers	./cmd/compile/internal/gc/fmt.go	/^\/\/			'u' (only in -\/Sym mode) print type identifiers wit package name instead of prefix.$/;"	t
identifiers	./cmd/compile/internal/gc/fmt.go	/^\/\/	%-T		type identifiers$/;"	t
identifiers	./cmd/compile/internal/gc/fmt.go	/^\/\/	%-hT		type identifiers without "func" and arg names in type signatures (methodsym)$/;"	t
identifiers	./cmd/compile/internal/gc/fmt.go	/^\/\/	%-uT		type identifiers with package name instead of prefix (typesym, dcommontype, typehash)$/;"	t
idents	./go/parser/parser.go	/^	var idents []*ast.Ident$/;"	v
idents	./go/printer/printer_test.go	/^func idents(f *ast.File) <-chan *ast.Ident {$/;"	f
idents	./go/printer/testdata/parser.go	/^	var idents []*ast.Ident$/;"	v
idiomaticRedecl	./cmd/vet/shadow.go	/^func (f *File) idiomaticRedecl(d *ast.ValueSpec) bool {$/;"	f
idiomaticShortRedecl	./cmd/vet/shadow.go	/^func (f *File) idiomaticShortRedecl(a *ast.AssignStmt) bool {$/;"	f
idirs	./cmd/compile/internal/gc/go.go	/^var idirs *Idir$/;"	v
ids	./cmd/pprof/internal/profile/legacy_profile.go	/^	var ids []uint64$/;"	v
ids	./crypto/x509/root_darwin_arm_gen.go	/^	var ids []certID$/;"	v
ids	./encoding/gob/doc.go	/^If there are nested type ids, the types for all inner type ids must be defined$/;"	t
ids	./encoding/gob/type.go	/^		\/\/ type ids while allowing recursive types to be described. Structs,$/;"	t
idx	./mime/mediatype.go	/^	var idx int$/;"	v
if	./cmd/compile/internal/gc/cgen.go	/^\/\/ cgen_norm moves n1 to res, truncating to expected type if necessary.$/;"	t
if	./cmd/compile/internal/gc/walk.go	/^		\/\/ don't generate a = *var if a is _$/;"	v
if	./cmd/fix/typecheck.go	/^			\/\/ var declaration.  Use type if present.$/;"	t
if	./flag/flag.go	/^	\/\/ No explicit name, so use type if we can find one.$/;"	t
if	./go/doc/testdata/b.go	/^\/\/ Associated with uint type if AllDecls is set.$/;"	t
if	./go/types/typexpr.go	/^	\/\/ use named receiver type if available (for better error messages)$/;"	t
if	./runtime/hashmap.go	/^\/\/ it will return a reference to the zero object for the value type if$/;"	t
ifControl	./text/template/parse/parse.go	/^func (t *Tree) ifControl() Node {$/;"	f
ifData	./syscall/types_freebsd.go	/^type ifData C.struct_if_data$/;"	t
ifData	./syscall/ztypes_freebsd_386.go	/^type ifData struct {$/;"	t
ifData	./syscall/ztypes_freebsd_amd64.go	/^type ifData struct {$/;"	t
ifData	./syscall/ztypes_freebsd_arm.go	/^type ifData struct {$/;"	t
ifMsghdr	./syscall/types_freebsd.go	/^type ifMsghdr C.struct_if_msghdr$/;"	t
ifMsghdr	./syscall/ztypes_freebsd_386.go	/^type ifMsghdr struct {$/;"	t
ifMsghdr	./syscall/ztypes_freebsd_amd64.go	/^type ifMsghdr struct {$/;"	t
ifMsghdr	./syscall/ztypes_freebsd_arm.go	/^type ifMsghdr struct {$/;"	t
if_header	./cmd/compile/internal/gc/go.y	/^if_header:$/;"	l
if_stmt	./cmd/compile/internal/gc/go.y	/^if_stmt:$/;"	l
iface	./cmd/compile/internal/gc/gen.go	/^	var iface Node$/;"	v
iface	./runtime/race/testdata/regression_test.go	/^type iface interface {$/;"	t
iface	./runtime/runtime2.go	/^type iface struct {$/;"	t
ifaceE2I	./reflect/value.go	/^func ifaceE2I(t *rtype, src interface{}, dst unsafe.Pointer)$/;"	f
ifaceHash	./runtime/alg.go	/^func ifaceHash(i interface {$/;"	f
ifaceIndir	./reflect/type.go	/^func ifaceIndir(t *rtype) bool {$/;"	f
ifaceNumAsFloat64	./encoding/json/decode_test.go	/^var ifaceNumAsFloat64 = map[string]interface{}{$/;"	v
ifaceNumAsNumber	./encoding/json/decode_test.go	/^var ifaceNumAsNumber = map[string]interface{}{$/;"	v
ifacePair	./go/types/predicates.go	/^type ifacePair struct {$/;"	t
ifaceVar	./cmd/api/testdata/src/pkg/p1/p1.go	/^var ifaceVar interface{} = 5$/;"	v
ifaceWords	./sync/atomic/value.go	/^type ifaceWords struct {$/;"	t
iface_commontype	./runtime/runtime-gdb.py	/^def iface_commontype(obj):$/;"	f
iface_dtype	./runtime/runtime-gdb.py	/^def iface_dtype(obj):$/;"	f
iface_dtype_name	./runtime/runtime-gdb.py	/^def iface_dtype_name(obj):$/;"	f
ifacedcl	./cmd/compile/internal/gc/dcl.go	/^func ifacedcl(n *Node) {$/;"	f
ifaceeq	./cmd/compile/internal/gc/builtin/runtime.go	/^func ifaceeq(i1 any, i2 any) (ret bool)$/;"	f
ifaceeq	./runtime/alg.go	/^func ifaceeq(p, q interface {$/;"	f
ifacelookdot	./cmd/compile/internal/gc/subr.go	/^func ifacelookdot(s *Sym, t *Type, followptr *int, ignorecase int) *Type {$/;"	f
ifacematcher	./runtime/runtime-gdb.py	/^def ifacematcher(val):$/;"	f
ifaceptr	./encoding/xml/marshal_test.go	/^func ifaceptr(x interface{}) interface{} {$/;"	f
ifaces	./go/types/ordering.go	/^	var ifaces, others []Object$/;"	v
ifacethash	./cmd/compile/internal/gc/builtin/runtime.go	/^func ifacethash(i1 any) (ret uint32)$/;"	f
ifacethash	./runtime/iface.go	/^func ifacethash(i fInterface) uint32 {$/;"	f
ifat	./net/interface_bsd.go	/^	var ifat []Addr$/;"	v
ifat	./net/interface_linux.go	/^	var ifat []Addr$/;"	v
ifat	./net/interface_windows.go	/^	var ifat []Addr$/;"	v
ifdef	./cmd/asm/internal/lex/input.go	/^func (in *Input) ifdef(truth bool) {$/;"	f
ifirst	./regexp/syntax/parse.go	/^		var ifirst *Regexp$/;"	v
ifl	./syscall/lsf_linux.go	/^	var ifl iflags$/;"	v
iflags	./regexp/syntax/parse.go	/^		var iflags Flags$/;"	v
iflags	./syscall/lsf_linux.go	/^type iflags struct {$/;"	t
ifmat	./net/interface_darwin.go	/^	var ifmat []Addr$/;"	v
ifmat	./net/interface_freebsd.go	/^	var ifmat []Addr$/;"	v
ifmat	./net/interface_linux.go	/^	var ifmat []Addr$/;"	v
ifmat4	./net/interface_linux_test.go	/^	var ifmat4 []Addr$/;"	v
ifmat6	./net/interface_linux_test.go	/^	var ifmat6 []Addr$/;"	v
ift	./net/interface_bsd.go	/^	var ift []Interface$/;"	v
ift	./net/interface_linux.go	/^	var ift []Interface$/;"	v
ift	./net/interface_windows.go	/^	var ift []Interface$/;"	v
ifunc	./reflect/type.go	/^	var ifunc interface{} = (func())(nil)$/;"	v
igenindex	./cmd/compile/internal/arm/cgen.go	/^func igenindex(n *gc.Node, res *gc.Node, bounded bool) *obj.Prog {$/;"	f
igenindex	./cmd/compile/internal/x86/cgen.go	/^func igenindex(n *gc.Node, res *gc.Node, bounded bool) *obj.Prog {$/;"	f
ignore	./cmd/vet/testdata/tagtest/file2.go	/^func ignore() {$/;"	f
ignore	./image/jpeg/reader.go	/^func (d *decoder) ignore(n int) error {$/;"	f
ignore	./text/template/parse/lex.go	/^func (l *lexer) ignore() {$/;"	f
ignoreArray	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreArray(state *decoderState, elemOp decOp, length int) {$/;"	f
ignoreArrayHelper	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreArrayHelper(state *decoderState, elemOp decOp, length int) {$/;"	f
ignoreGobDecoder	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreGobDecoder(state *decoderState) {$/;"	f
ignoreInterface	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreInterface(state *decoderState) {$/;"	f
ignoreMap	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreMap(state *decoderState, keyOp, elemOp decOp) {$/;"	f
ignoreSignal	./os/signal/signal_plan9.go	/^func ignoreSignal(sig int) {$/;"	f
ignoreSignal	./os/signal/signal_unix.go	/^func ignoreSignal(sig int) {$/;"	f
ignoreSingle	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreSingle(engine *decEngine) {$/;"	f
ignoreSlice	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreSlice(state *decoderState, elemOp decOp) {$/;"	f
ignoreStruct	./encoding/gob/decode.go	/^func (dec *Decoder) ignoreStruct(engine *decEngine) {$/;"	f
ignoreTest	./encoding/gob/encoder_test.go	/^type ignoreTest struct {$/;"	t
ignoreTests	./encoding/gob/encoder_test.go	/^var ignoreTests = []ignoreTest{$/;"	v
ignoreTwoUints	./encoding/gob/decode.go	/^func ignoreTwoUints(i *decInstr, state *decoderState, v reflect.Value) {$/;"	f
ignoreUint	./encoding/gob/decode.go	/^func ignoreUint(i *decInstr, state *decoderState, v reflect.Value) {$/;"	f
ignoreUint8Array	./encoding/gob/decode.go	/^func ignoreUint8Array(i *decInstr, state *decoderState, value reflect.Value) {$/;"	f
ignored	./image/png/reader.go	/^	var ignored [4096]byte$/;"	v
ignored	./regexp/testdata/testregex.c	/^	int		ignored;$/;"	m	struct:__anon2	file:
ignored	./time/time_test.go	/^		var ignored Time$/;"	v
ii	./reflect/all_test.go	/^	var ii struct {$/;"	v
ilogb	./math/logb.go	/^func ilogb(x float64) int {$/;"	f
ilogbSC	./math/all_test.go	/^var ilogbSC = []int{$/;"	v
im	./go/constant/value.go	/^	var im *big.Rat$/;"	v
im	./go/internal/gccgoimporter/parser.go	/^		var im string$/;"	v
im	./go/types/builtins_test.go	/^	{"complex", `var im float64; _ = complex(1, im)`, `func(float64, float64) complex128`},$/;"	v
imag	./builtin/builtin.go	/^func imag(c ComplexType) FloatType$/;"	f
image	./image/image_test.go	/^type image interface {$/;"	t
imageBase	./cmd/internal/objfile/pe.go	/^	var imageBase uint64$/;"	v
imageTest	./image/decode_test.go	/^type imageTest struct {$/;"	t
imageTests	./image/decode_test.go	/^var imageTests = []imageTest{$/;"	v
imap	./cmd/vet/testdata/print.go	/^	var imap map[int]int$/;"	v
imap	./reflect/type.go	/^	var imap interface{} = (map[unsafe.Pointer]unsafe.Pointer)(nil)$/;"	v
imethod	./reflect/type.go	/^type imethod struct {$/;"	t
imethod	./runtime/type.go	/^type imethod struct {$/;"	t
imethods	./cmd/compile/internal/gc/reflect.go	/^func imethods(t *Type) *Sig {$/;"	f
img	./image/png/reader.go	/^	var img image.Image$/;"	v
immaddr	./cmd/internal/obj/arm/asm5.go	/^func immaddr(v int32) int32 {$/;"	f
immfloat	./cmd/internal/obj/arm/asm5.go	/^func immfloat(v int32) bool {$/;"	f
immhalf	./cmd/internal/obj/arm/asm5.go	/^func immhalf(v int32) bool {$/;"	f
immrot	./cmd/internal/obj/arm/asm5.go	/^func immrot(v uint32) int32 {$/;"	f
imp	./cmd/compile/internal/gc/lex.go	/^	var imp *obj.Biobuf$/;"	v
imp	./go/types/resolver.go	/^						var imp *Package$/;"	v
impatientHTTPClient	./cmd/go/http.go	/^var impatientHTTPClient = &http.Client{$/;"	v
implement	./encoding/gob/type.go	/^	\/\/ Does this type implement GobEncoder?$/;"	t
implementations	./cmd/compile/internal/gc/y.go	/^				Yyerror("can only use \/\/go:noescape with external func implementations")$/;"	f
implemented	./os/user/user.go	/^var implemented = true \/\/ set to false by lookup_stubs.go's init$/;"	v
implementing	./encoding/gob/doc.go	/^Gob can decode a value of any type implementing the GobDecoder or$/;"	t
implementing	./encoding/gob/doc.go	/^Gob can encode a value of any type implementing the GobEncoder or$/;"	t
implements	./cmd/compile/internal/gc/subr.go	/^func implements(t *Type, iface *Type, m **Type, samename **Type, ptr *int) bool {$/;"	f
implements	./cmd/vet/types.go	/^	\/\/ If the type implements fmt.Formatter, we have nothing to check.$/;"	t
implements	./encoding/gob/decode.go	/^	\/\/ If the type implements GobEncoder, we handle it without further processing.$/;"	t
implements	./encoding/gob/encode.go	/^	\/\/ If the type implements GobEncoder, we handle it without further processing.$/;"	t
implements	./encoding/gob/type.go	/^\/\/ implementsInterface reports whether the type implements the$/;"	t
implements	./go/types/lookup.go	/^	\/\/ A concrete type implements T if it implements all methods of T.$/;"	t
implements	./reflect/type.go	/^	\/\/ Implements reports whether the type implements the interface type u.$/;"	t
implements	./reflect/type.go	/^func implements(T, V *rtype) bool {$/;"	f
implements	./testing/quick/quick.go	/^\/\/ If the type implements the Generator interface, that will be used.$/;"	t
implementsInterface	./encoding/gob/type.go	/^func implementsInterface(typ, gobEncDecType reflect.Type) (success bool, indir int8) {$/;"	f
implementsTests	./reflect/set_test.go	/^var implementsTests = []struct {$/;"	v
implementsValue	./go/constant/value.go	/^func (boolVal) implementsValue()    {}$/;"	f
implementsValue	./go/constant/value.go	/^func (complexVal) implementsValue() {}$/;"	f
implementsValue	./go/constant/value.go	/^func (floatVal) implementsValue()   {}$/;"	f
implementsValue	./go/constant/value.go	/^func (int64Val) implementsValue()   {}$/;"	f
implementsValue	./go/constant/value.go	/^func (intVal) implementsValue()     {}$/;"	f
implementsValue	./go/constant/value.go	/^func (stringVal) implementsValue()  {}$/;"	f
implementsValue	./go/constant/value.go	/^func (unknownVal) implementsValue() {}$/;"	f
implicitArrayDeref	./go/types/builtins.go	/^func implicitArrayDeref(typ Type) Type {$/;"	f
implicitTagTest	./encoding/asn1/marshal_test.go	/^type implicitTagTest struct {$/;"	t
implicitTaggedTimeTest	./encoding/asn1/asn1_test.go	/^type implicitTaggedTimeTest struct {$/;"	t
implicitstar	./cmd/compile/internal/gc/typecheck.go	/^func implicitstar(nn **Node) {$/;"	f
impliedSemi	./go/printer/printer.go	/^		var impliedSemi bool \/\/ value for p.impliedSemi after this arg$/;"	v
import	./cmd/compile/internal/gc/go.y	/^import:$/;"	l
importComment	./go/ast/import.go	/^func importComment(s Spec) string {$/;"	f
importDir	./cmd/doc/main.go	/^func importDir(dir string) *build.Package {$/;"	f
importError	./go/internal/gccgoimporter/parser.go	/^type importError struct {$/;"	t
importError	./go/internal/gcimporter/gcimporter.go	/^type importError struct {$/;"	t
importMap	./cmd/compile/internal/gc/lex.go	/^var importMap = map[string]string{}$/;"	v
importName	./go/ast/import.go	/^func importName(s Spec) string {$/;"	f
importPath	./cmd/cgo/main.go	/^var importPath = flag.String("importpath", "", "import path of package being built (for comments in generated files)")$/;"	v
importPath	./cmd/fix/fix.go	/^func importPath(s *ast.ImportSpec) string {$/;"	f
importPath	./go/ast/import.go	/^func importPath(s Spec) string {$/;"	f
importPathToPrefix	./cmd/internal/goobj/read.go	/^func importPathToPrefix(s string) string {$/;"	f
importPathToPrefixTests	./cmd/internal/goobj/read_test.go	/^var importPathToPrefixTests = []struct {$/;"	v
importPaths	./cmd/go/main.go	/^func importPaths(args []string) []string {$/;"	f
importPathsNoDotExpansion	./cmd/go/main.go	/^func importPathsNoDotExpansion(args []string) []string {$/;"	f
importRuntimeCgo	./cmd/cgo/main.go	/^var importRuntimeCgo = flag.Bool("import_runtime_cgo", true, "import runtime\/cgo in generated code")$/;"	v
importSpec	./cmd/fix/fix.go	/^func importSpec(f *ast.File, path string) *ast.ImportSpec {$/;"	f
importSpec	./cmd/fix/gotypes.go	/^	var importSpec *ast.ImportSpec$/;"	v
importStack	./cmd/go/pkg.go	/^type importStack []string$/;"	t
importSyscall	./cmd/cgo/main.go	/^var importSyscall = flag.Bool("import_syscall", true, "import syscall in generated code")$/;"	v
importTests	./cmd/fix/import_test.go	/^var importTests = []testCase{$/;"	v
importType	./cmd/vet/types.go	/^func importType(path, name string) types.Type {$/;"	f
import_here	./cmd/compile/internal/gc/go.y	/^import_here:$/;"	l
import_package	./cmd/compile/internal/gc/go.y	/^import_package:$/;"	l
import_safety	./cmd/compile/internal/gc/go.y	/^import_safety:$/;"	l
import_stmt	./cmd/compile/internal/gc/go.y	/^import_stmt:$/;"	l
import_stmt_list	./cmd/compile/internal/gc/go.y	/^import_stmt_list:$/;"	l
import_there	./cmd/compile/internal/gc/go.y	/^import_there:$/;"	l
importablePackages	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^var importablePackages = [...]string{$/;"	v
importconst	./cmd/compile/internal/gc/export.go	/^func importconst(s *Sym, t *Type, n *Node) {$/;"	f
importcycles	./cmd/link/internal/ld/go.go	/^func importcycles() {$/;"	f
importdot	./cmd/compile/internal/gc/subr.go	/^func importdot(opkg *Pkg, pack *Node) {$/;"	f
imported	./cmd/link/internal/ld/go.go	/^func imported(pkg, imp string) {$/;"	f
importedObjectTests	./go/internal/gcimporter/gcimporter_test.go	/^var importedObjectTests = []struct {$/;"	v
imported_unsafe	./cmd/compile/internal/gc/lex.go	/^var imported_unsafe int$/;"	v
importerTest	./go/internal/gccgoimporter/importer_test.go	/^type importerTest struct {$/;"	t
importerTests	./go/internal/gccgoimporter/importer_test.go	/^var importerTests = [...]importerTest{$/;"	v
importfile	./cmd/compile/internal/gc/lex.go	/^func importfile(f *Val, line int) {$/;"	f
importimport	./cmd/compile/internal/gc/export.go	/^func importimport(s *Sym, path string) {$/;"	f
importing	./cmd/api/goapi.go	/^var importing types.Package$/;"	v
importlist	./cmd/compile/internal/gc/go.go	/^var importlist *NodeList \/\/ imported functions and methods with inlinable bodies$/;"	v
importmap	./cmd/link/internal/ld/go.go	/^var importmap = map[string]*Import{}$/;"	v
importmyname	./cmd/compile/internal/gc/go.go	/^var importmyname *Sym \/\/ my name for package$/;"	v
importpkg	./cmd/compile/internal/gc/go.go	/^var importpkg *Pkg \/\/ package being imported$/;"	v
imports	./cmd/compile/internal/gc/go.y	/^imports:$/;"	l
imports	./cmd/fix/fix.go	/^func imports(f *ast.File, path string) bool {$/;"	f
imports	./cmd/go/test.go	/^	var imports, ximports []*Package$/;"	v
imports	./cmd/go/vcs.go	/^		var imports []metaImport$/;"	v
imports	./go/ast/filter.go	/^	var imports []*ImportSpec$/;"	v
imports	./go/internal/gcimporter/gcimporter.go	/^	var imports []*types.Package$/;"	v
imports	./go/internal/gcimporter/gcimporter_test.go	/^var imports = make(map[string]*types.Package)$/;"	v
imports	./go/parser/parser_test.go	/^var imports = map[string]bool{$/;"	v
importsym	./cmd/compile/internal/gc/export.go	/^func importsym(s *Sym, op int) *Sym {$/;"	f
importtype	./cmd/compile/internal/gc/export.go	/^func importtype(pt *Type, t *Type) {$/;"	f
importvar	./cmd/compile/internal/gc/export.go	/^func importvar(s *Sym, t *Type) {$/;"	f
imtype	./cmd/compile/internal/gc/subr.go	/^	var imtype *Type$/;"	v
in	./cmd/cgo/doc.go	/^As Go doesn't have support for C's union type in the general case,$/;"	t
in	./cmd/cgo/main.go	/^\/\/ A FuncType collects information about a function type in both the C and Go worlds.$/;"	t
in	./cmd/cgo/main.go	/^\/\/ A Type collects information about a type in both the C and Go worlds.$/;"	t
in	./cmd/cgo/out.go	/^		\/\/ Look up the type in the top level declarations.$/;"	t
in	./cmd/compile/internal/amd64/ggen.go	/^	gc.Regalloc(&n1, nr.Type, &n1) \/\/ to hold the shift type in CX$/;"	t
in	./cmd/compile/internal/arm64/ggen.go	/^	gc.Regalloc(&n1, nr.Type, nil) \/\/ to hold the shift type in CX$/;"	t
in	./cmd/compile/internal/big/int_test.go	/^	var in = make([]*Int, 1)$/;"	v
in	./cmd/compile/internal/big/rat_test.go	/^	var in = make([]*Rat, 1)$/;"	v
in	./cmd/compile/internal/gc/dcl.go	/^		\/\/ inner func is referring to var in outer func.$/;"	v
in	./cmd/compile/internal/gc/gen.go	/^		\/\/ Holding itab, want concrete type in second word.$/;"	t
in	./cmd/compile/internal/gc/go.go	/^	Down  *Type   \/\/ next struct field, also key type in TMAP$/;"	t
in	./cmd/compile/internal/gc/go.go	/^	Ecomplit  = 1 << 11 \/\/ type in composite literal$/;"	t
in	./cmd/compile/internal/gc/plive.go	/^			\/\/ So only use uevar in the non-addrtaken case.$/;"	v
in	./cmd/compile/internal/gc/reflect.go	/^	var in *NodeList$/;"	v
in	./cmd/compile/internal/gc/typecheck.go	/^		Yyerror("missing type in composite literal")$/;"	t
in	./cmd/compile/internal/gc/y.go	/^			Yyerror("cannot parenthesize type in composite literal")$/;"	t
in	./cmd/compile/internal/ppc64/ggen.go	/^	gc.Regalloc(&n1, nr.Type, nil) \/\/ to hold the shift type in CX$/;"	t
in	./cmd/compile/internal/x86/ggen.go	/^			gc.Regalloc(&n1, gc.Types[gc.TUINT32], &n1) \/\/ to hold the shift type in CX$/;"	t
in	./cmd/compile/internal/x86/ggen.go	/^		gc.Regalloc(&n1, nr.Type, &n1) \/\/ to hold the shift type in CX$/;"	t
in	./cmd/cover/cover.go	/^			panic("unexpected node type in if")$/;"	t
in	./cmd/dist/test.go	/^\/\/ testing func in registerStdTest below. The tests are run$/;"	f
in	./cmd/doc/pkg.go	/^		pkg.Fatalf("symbol %s is not a type in package %s installed in %q", symbol, pkg.name, pkg.build.ImportPath)$/;"	t
in	./cmd/fix/typecheck.go	/^					\/\/ exactly one type in the case list.$/;"	t
in	./cmd/vet/asmdecl.go	/^			\/\/ Determine alignment, size, and kind of type in declaration.$/;"	t
in	./cmd/vet/method.go	/^\/\/ Does each type in expect with the given prefix match the corresponding type in actual?$/;"	t
in	./crypto/tls/tls.go	/^			return nil, errors.New("crypto\/tls: found unknown private key type in PKCS#8 wrapping")$/;"	t
in	./database/sql/driver/types.go	/^\/\/    to a user's type in a scan.$/;"	t
in	./debug/dwarf/const.go	/^\/\/ An Attr identifies the attribute type in a DWARF Entry's Field.$/;"	t
in	./debug/dwarf/type.go	/^		\/\/	AttrByteSize: size of type in bytes [required]$/;"	t
in	./debug/dwarf/type.go	/^		\/\/	AttrName: name of base type in programming language of the compilation unit [required]$/;"	t
in	./encoding/gob/codec_test.go	/^	\/\/ Sending a Point will require that the receiver define a type in the middle of$/;"	t
in	./encoding/gob/codec_test.go	/^	\/\/ Sending a Vector will require that the receiver define a type in the middle of$/;"	t
in	./encoding/gob/doc.go	/^The implementation compiles a custom codec for each data type in the stream and$/;"	t
in	./encoding/gob/encode.go	/^	panic("unknown type in isZero " + val.Type().String())$/;"	t
in	./encoding/gob/encoder_test.go	/^	var in = []byte{1, 2, 3}$/;"	v
in	./encoding/gob/encoder_test.go	/^\/\/ is sent, its type in the test is always NewType0, so this checks that the$/;"	t
in	./encoding/gob/type.go	/^	\/\/ but the flattened type in the type table, since that's what decode needs.$/;"	t
in	./encoding/hex/hex_test.go	/^	var in [40]byte$/;"	v
in	./encoding/xml/marshal_test.go	/^	var in, out bytes.Buffer$/;"	v
in	./go/ast/ast.go	/^	\/\/ An Ellipsis node stands for the "..." type in a$/;"	t
in	./go/doc/exports.go	/^\/\/ filterParamList applies filterType to each parameter type in fields.$/;"	t
in	./go/doc/reader.go	/^							\/\/ than one type in the group (this affects$/;"	t
in	./go/doc/reader.go	/^			\/\/ with the first type in result signature (there may$/;"	t
in	./go/types/expr.go	/^			check.error(e.Pos(), "missing type in composite literal")$/;"	t
in	./go/types/stmt.go	/^			\/\/ Check each type in this type switch case.$/;"	t
in	./go/types/type.go	/^\/\/ before using the interface type in any way other than to form other types.$/;"	t
in	./math/big/int_test.go	/^	var in = make([]*Int, 1)$/;"	v
in	./math/big/rat_test.go	/^	var in = make([]*Rat, 1)$/;"	v
in	./net/fd_windows.go	/^			panic("unexpected type in connect")$/;"	t
in	./os/env.go	/^\/\/ Expand replaces ${var} or $var in the string based on the mapping function.$/;"	v
in	./os/env.go	/^\/\/ ExpandEnv replaces ${var} or $var in the string according to the values$/;"	v
in	./reflect/type.go	/^	\/\/ Bits returns the size of the type in bits.$/;"	t
in	./reflect/type.go	/^\/\/ cachePut stores the given type in the cache, unlocks the cache,$/;"	t
in	./runtime/mfinal.go	/^					throw("missing type in runfinq")$/;"	t
in	./syscall/zerrors_darwin_386.go	/^	86:  "bad CPU type in executable",$/;"	t
in	./syscall/zerrors_darwin_amd64.go	/^	86:  "bad CPU type in executable",$/;"	t
in	./syscall/zerrors_darwin_arm.go	/^	86:  "bad CPU type in executable",$/;"	t
in	./syscall/zerrors_darwin_arm64.go	/^	86:  "bad CPU type in executable",$/;"	t
inCategory	./unicode/maketables.go	/^func inCategory(name string) []rune {$/;"	f
inCategoryTest	./unicode/script_test.go	/^var inCategoryTest = []T{$/;"	v
inHandlerLen	./net/http/serve_test.go	/^	var inHandlerLen int$/;"	v
inOrder	./sort/sort_test.go	/^func (d intPairs) inOrder() bool {$/;"	f
inPropTest	./unicode/script_test.go	/^var inPropTest = []T{$/;"	v
inScript	./unicode/maketables.go	/^func inScript(name string) []rune {$/;"	f
inSourceOrder	./go/types/ordering.go	/^type inSourceOrder []Object$/;"	t
inTest	./unicode/script_test.go	/^var inTest = []T{$/;"	v
inc	./cmd/compile/internal/gc/esc.go	/^func (l Level) inc() Level {$/;"	f
incCounter	./crypto/rsa/rsa.go	/^func incCounter(c *[4]byte) {$/;"	f
incCounterStmt	./cmd/cover/cover.go	/^func incCounterStmt(f *File, counter ast.Expr) ast.Stmt {$/;"	f
incHi	./compress/lzw/writer.go	/^func (e *encoder) incHi() error {$/;"	f
incSeq	./crypto/tls/conn.go	/^func (hc *halfConn) incSeq() {$/;"	f
incannedimport	./cmd/compile/internal/gc/go.go	/^var incannedimport int$/;"	v
incidlelocked	./runtime/proc1.go	/^func incidlelocked(v int32) {$/;"	f
include	./cmd/asm/internal/lex/input.go	/^func (in *Input) include() {$/;"	f
includes	./go/types/predicates.go	/^\/\/ hasNil reports whether a type includes the nil value.$/;"	t
incrStat	./database/sql/fakedb_test.go	/^func (c *fakeConn) incrStat(v *int) {$/;"	f
incref	./net/fd_plan9.go	/^func (fd *netFD) incref() error {$/;"	f
incref	./net/fd_unix.go	/^func (fd *netFD) incref() error {$/;"	f
incref	./net/fd_windows.go	/^func (fd *netFD) incref() error {$/;"	f
incstart	./debug/gosym/symtab.go	/^		var incstart int$/;"	v
ind	./go/types/expr.go	/^		var ind [3]int64$/;"	v
indcl	./cmd/compile/internal/gc/go.y	/^indcl:$/;"	l
indebug	./cmd/yacc/yacc.go	/^var indebug = 0 \/\/ debugging flag for cpfir$/;"	v
indent	./cmd/compile/internal/gc/fmt.go	/^func indent(buf *bytes.Buffer) {$/;"	f
indent	./go/ast/print.go	/^var indent = []byte(".  ")$/;"	v
indentErrorTest	./encoding/json/scanner_test.go	/^type indentErrorTest struct {$/;"	t
indentErrorTests	./encoding/json/scanner_test.go	/^var indentErrorTests = []indentErrorTest{$/;"	v
indentFmt	./go/doc/doc_test.go	/^func indentFmt(indent, s string) string {$/;"	f
indentLen	./go/doc/comment.go	/^func indentLen(s string) int {$/;"	f
indentList	./go/printer/nodes.go	/^func (p *printer) indentList(list []ast.Expr) bool {$/;"	f
independentTestTypes	./go/types/typestring_test.go	/^var independentTestTypes = []testEntry{$/;"	v
index	./cmd/compile/internal/gc/sinit.go	/^		var index *Node$/;"	v
index	./cmd/compile/internal/gc/sinit.go	/^	var index *Node$/;"	v
index	./cmd/cover/cover.go	/^func (f *File) index() *ast.BasicLit {$/;"	f
index	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func index(s []byte, t string) int {$/;"	f
index	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func index(s []byte, t string) int {$/;"	f
index	./go/parser/parser.go	/^	var index [N]ast.Expr$/;"	v
index	./go/types/expr.go	/^	var index, max int64$/;"	v
index	./go/types/expr.go	/^func (check *Checker) index(index ast.Expr, max int64) (i int64, valid bool) {$/;"	f
index	./index/suffixarray/suffixarray_test.go	/^type index Index$/;"	t
index	./path/filepath/path.go	/^func (b *lazybuf) index(i int) byte {$/;"	f
index	./path/path.go	/^func (b *lazybuf) index(i int) byte {$/;"	f
index	./reflect/type.go	/^				var index []int$/;"	v
index	./regexp/regexp.go	/^func (i *inputBytes) index(re *Regexp, pos int) int {$/;"	f
index	./regexp/regexp.go	/^func (i *inputReader) index(re *Regexp, pos int) int {$/;"	f
index	./regexp/regexp.go	/^func (i *inputString) index(re *Regexp, pos int) int {$/;"	f
index	./runtime/string.go	/^func index(s, t string) int {$/;"	f
index	./strings/replace.go	/^	var index byte$/;"	v
index	./text/template/funcs.go	/^func index(item interface{}, indices ...interface{}) (interface{}, error) {$/;"	f
indexAnyTests	./bytes/bytes_test.go	/^var indexAnyTests = []BinOpTest{$/;"	v
indexAnyTests	./strings/strings_test.go	/^var indexAnyTests = []IndexTest{$/;"	v
indexBytePortable	./bytes/bytes.go	/^func indexBytePortable(s []byte, c byte) int {$/;"	f
indexError	./runtime/panic.go	/^var indexError = error(errorString("index out of range"))$/;"	v
indexFunc	./bytes/bytes.go	/^func indexFunc(s []byte, f func(r rune) bool, truth bool) int {$/;"	f
indexFunc	./strings/strings.go	/^func indexFunc(s string, f func(rune) bool, truth bool) int {$/;"	f
indexFuncTests	./bytes/bytes_test.go	/^var indexFuncTests = []IndexFuncTest{$/;"	v
indexFuncTests	./strings/strings_test.go	/^var indexFuncTests = []struct {$/;"	v
indexLocal	./sync/pool.go	/^func indexLocal(l unsafe.Pointer, i int) *poolLocal {$/;"	f
indexOfStr	./html/template/escape.go	/^func indexOfStr(s string, strs []string, eq func(a, b string) bool) int {$/;"	f
indexRune	./fmt/scan.go	/^func indexRune(s string, r rune) int {$/;"	f
indexRuneTests	./bytes/bytes_test.go	/^var indexRuneTests = []BinOpTest{$/;"	v
indexRuneTests	./strings/strings_test.go	/^var indexRuneTests = []struct {$/;"	v
indexTagEnd	./html/template/transition.go	/^func indexTagEnd(s []byte, tag []byte) int {$/;"	f
indexTests	./bytes/bytes_test.go	/^var indexTests = []BinOpTest{$/;"	v
indexTests	./strings/strings_test.go	/^var indexTests = []IndexTest{$/;"	v
indexTmpl	./net/http/pprof/pprof.go	/^var indexTmpl = template.Must(template.New("index").Parse(`<html>$/;"	v
indexVar	./cmd/api/testdata/src/pkg/p1/p1.go	/^var indexVar = m["foo"]$/;"	v
indexdup	./cmd/compile/internal/gc/typecheck.go	/^func indexdup(n *Node, hash map[int64]*Node) {$/;"	f
indexedElts	./go/types/expr.go	/^func (check *Checker) indexedElts(elts []ast.Expr, typ Type, length int64) int64 {$/;"	f
indexlit	./cmd/compile/internal/gc/typecheck.go	/^func indexlit(np **Node) {$/;"	f
indgo	./cmd/yacc/yacc.go	/^var indgo = make([]int, NSTATES) \/\/ index to the stored goto table$/;"	v
indir_cx	./cmd/internal/obj/x86/obj6.go	/^func indir_cx(ctxt *obj.Link, p *obj.Prog, a *obj.Addr) {$/;"	f
indirect	./cmd/compile/internal/gc/esc.go	/^	var indirect bool$/;"	v
indirect	./encoding/json/decode.go	/^func (d *decodeState) indirect(v reflect.Value, decodingNull bool) (Unmarshaler, encoding.TextUnmarshaler, reflect.Value) {$/;"	f
indirect	./html/template/content.go	/^func indirect(a interface{}) interface{} {$/;"	f
indirect	./text/template/exec.go	/^func indirect(v reflect.Value) (rv reflect.Value, isNil bool) {$/;"	f
indirectToJSONMarshaler	./html/template/js.go	/^func indirectToJSONMarshaler(a interface{}) interface{} {$/;"	f
indirectToStringerOrError	./html/template/content.go	/^func indirectToStringerOrError(a interface{}) interface{} {$/;"	f
indirect_key	./cmd/link/internal/ld/dwarf.go	/^	var indirect_key int$/;"	v
indirect_val	./cmd/link/internal/ld/dwarf.go	/^	var indirect_val int$/;"	v
inference	./go/types/api.go	/^\/\/ Use Info.Types[expr].Type for the results of type inference.$/;"	t
inferences	./html/template/escape.go	/^	\/\/ Make type inferences available to f.$/;"	t
inferences	./html/template/escape.go	/^\/\/ escaper collects type inferences about templates and changes needed to make$/;"	t
infile	./cmd/compile/internal/gc/go.go	/^var infile string$/;"	v
infile	./cmd/yacc/yacc.go	/^var infile string  \/\/ input file name$/;"	v
infiniteReader	./net/http/request_test.go	/^type infiniteReader struct {$/;"	t
inflate	./syscall/unzip_nacl.go	/^func inflate(in string) (out []byte) {$/;"	f
info	./cmd/compile/internal/gc/go.go	/^var typelinkpkg *Pkg \/\/ fake package for runtime type info (data)$/;"	t
info	./cmd/compile/internal/gc/go.go	/^var typepkg *Pkg \/\/ fake package for runtime type info (headers)$/;"	t
info	./cmd/compile/internal/gc/go.go	/^var weaktypepkg *Pkg \/\/ weak references to runtime type info$/;"	t
info	./cmd/dist/util_gc.go	/^	var info [4]uint32$/;"	v
info	./cmd/fix/typecheck.go	/^			\/\/ Do it again now that we have that type info.$/;"	t
info	./cmd/link/internal/ld/ldelf.go	/^	var info uint64$/;"	v
info	./cmd/pprof/internal/report/report.go	/^	var info []nodeInfo$/;"	v
info	./encoding/gob/encoder.go	/^		\/\/ If the type info has still not been transmitted, it means we have$/;"	t
info	./encoding/gob/encoder.go	/^		\/\/ need to send the type info but we do need to update enc.sent.$/;"	t
info	./encoding/gob/encoder.go	/^\/\/ sendType sends the type info to the other side, if necessary.$/;"	t
info	./encoding/gob/type.go	/^\/\/ Internally, typeIds are used as keys to a map to recover the underlying type info.$/;"	t
info	./encoding/gob/type.go	/^\/\/ and stores it in the type info map.$/;"	t
info	./go/types/api_test.go	/^		var info Info$/;"	v
info	./go/types/api_test.go	/^	var info Info$/;"	v
info	./reflect/all_test.go	/^		var info []caseInfo$/;"	v
info	./runtime/gcinfo_test.go	/^\/\/ TestGCInfo tests that various objects in heap, data and bss receive correct GC pointer type info.$/;"	t
info	./runtime/mbitmap.go	/^\/\/ Returns GC type info for object p for testing.$/;"	t
info	./runtime/mbitmap.go	/^\/\/ gcbits returns the GC type info for x, for testing.$/;"	t
info	./runtime/os1_windows.go	/^	var info systeminfo$/;"	v
info	./runtime/vdso_linux_amd64.go	/^			var info vdso_info$/;"	v
info	./unicode/utf8/utf8_test.go	/^	type info struct {$/;"	t
infoBigStruct	./runtime/gcinfo_test.go	/^func infoBigStruct() []byte {$/;"	f
infoPtr	./runtime/gcinfo_test.go	/^var infoPtr = []byte{typePointer}$/;"	v
infoPtr10	./runtime/gcinfo_test.go	/^var infoPtr10 = []byte{typePointer, typePointer, typePointer, typePointer, typePointer, typePointer, typePointer, typePointer, typePointer, typePointer}$/;"	v
infoPtrScalar	./runtime/gcinfo_test.go	/^var infoPtrScalar = []byte{typePointer, typeScalar, typePointer, typeScalar, typePointer, typeScalar}$/;"	v
infoScalarPtr	./runtime/gcinfo_test.go	/^var infoScalarPtr = []byte{typeScalar, typePointer, typeScalar, typePointer, typeScalar, typePointer}$/;"	v
infoScalarPtr4	./runtime/gcinfo_test.go	/^var infoScalarPtr4 = append(append(append(append([]byte(nil), infoScalarPtr...), infoScalarPtr...), infoScalarPtr...), infoScalarPtr...)$/;"	v
infoo	./cmd/link/internal/ld/dwarf.go	/^var infoo int64 \/\/ also the base for DWDie->offs and reference attributes.$/;"	v
inforeloco	./cmd/link/internal/ld/dwarf.go	/^var inforeloco int64$/;"	v
inforelocsize	./cmd/link/internal/ld/dwarf.go	/^var inforelocsize int64$/;"	v
information	./cmd/compile/doc.go	/^The generated files contain type information about the symbols exported by$/;"	t
information	./cmd/compile/internal/gc/closure.go	/^	\/\/ The use of the struct provides type information to the garbage$/;"	t
information	./cmd/fix/typecheck.go	/^			\/\/ type information.$/;"	t
information	./cmd/fix/typecheck.go	/^\/\/ It returns two maps with type information:$/;"	t
information	./cmd/fix/typecheck.go	/^\/\/ an AST and a description of some type information to$/;"	t
information	./cmd/fix/typecheck.go	/^\/\/ typeof maps AST nodes to type information in gofmt string form.$/;"	t
information	./cmd/fix/typecheck.go	/^\/\/ using the type information in cfg.$/;"	t
information	./cmd/internal/goobj/read.go	/^	Type  SymID   \/\/ symbol for Go type information$/;"	t
information	./cmd/internal/obj/objfile.go	/^				\/\/ instructions there. Without the type information, gdb can't$/;"	t
information	./cmd/link/internal/ld/data.go	/^		Diag("missing Go type information for global symbol: %s size %d", s.Name, int(s.Size))$/;"	t
information	./cmd/link/internal/ld/go.go	/^\/\/ accumulate all type information from .6 files.$/;"	t
information	./cmd/link/internal/ld/go.go	/^\/\/ importmap records type information about imported symbols to detect inconsistencies.$/;"	t
information	./cmd/pprof/internal/profile/profile.go	/^		return fmt.Errorf("missing sample type information")$/;"	t
information	./cmd/vet/types.go	/^		\/\/ No type information available. Assume true, so we do the check.$/;"	t
information	./cmd/yacc/yacc.go	/^var tystate = make([]int, NSTATES) \/\/ contains type information about the states$/;"	t
information	./debug/dwarf/type.go	/^\/\/ DWARF type information structures.$/;"	t
information	./encoding/gob/doc.go	/^all type information is sent before it is needed.  At the receive side, a$/;"	t
information	./encoding/gob/encoder.go	/^\/\/ guaranteeing that all necessary type information has been transmitted first.$/;"	t
information	./encoding/gob/encoder_test.go	/^\/\/ type information in the stream.$/;"	t
information	./encoding/gob/type.go	/^\/\/ buildTypeInfo constructs the type information for the type$/;"	t
information	./go/ast/scope.go	/^	Type interface{} \/\/ placeholder for type information; may be nil$/;"	t
information	./go/doc/exports.go	/^		\/\/ Propagate any type information that would get lost otherwise$/;"	t
information	./go/types/api.go	/^\/\/ Info holds result type information for a type-checked package.$/;"	t
information	./go/types/api.go	/^\/\/ the first error if any, and if info != nil, additional type information.$/;"	t
information	./reflect/all_test.go	/^\/\/ program counter to determine the type information and understand that$/;"	t
information	./runtime/extern.go	/^such as functions to control goroutines. It also includes the low-level type information$/;"	t
information	./runtime/mbitmap.go	/^\/\/ For large types containing arrays, the type information has a$/;"	t
information	./runtime/mbitmap.go	/^\/\/ binary and in the memory representation of the type information.$/;"	t
information	./runtime/stubs.go	/^\/\/ not called directly; definitions here supply type information for traceback.$/;"	t
infosec	./cmd/link/internal/ld/dwarf.go	/^var infosec *LSym$/;"	v
infosize	./cmd/link/internal/ld/dwarf.go	/^var infosize int64$/;"	v
infosym	./cmd/link/internal/ld/dwarf.go	/^var infosym *LSym$/;"	v
infosympos	./cmd/link/internal/ld/dwarf.go	/^var infosympos int64$/;"	v
inheap	./runtime/mheap.go	/^func inheap(b uintptr) bool {$/;"	f
inheritTime	./runtime/proc1.go	/^	var inheritTime bool$/;"	v
init	./archive/tar/stat_unix.go	/^func init() {$/;"	f
init	./archive/zip/reader.go	/^func (z *Reader) init(r io.ReaderAt, size int64) error {$/;"	f
init	./bytes/buffer_test.go	/^func init() {$/;"	f
init	./cmd/asm/internal/flags/flags.go	/^func init() {$/;"	f
init	./cmd/compile/internal/big/decimal.go	/^func (x *decimal) init(m nat, shift int) {$/;"	f
init	./cmd/compile/internal/gc/dcl.go	/^	var init *NodeList$/;"	v
init	./cmd/compile/internal/gc/init.go	/^ *	func init()					(2)$/;"	f
init	./cmd/compile/internal/gc/lex.go	/^func init() {$/;"	f
init	./cmd/compile/internal/gc/range.go	/^	var init *NodeList$/;"	v
init	./cmd/compile/internal/gc/reflect.go	/^func (p *GCProg) init(sym *Sym) {$/;"	f
init	./cmd/compile/internal/gc/select.go	/^	var init *NodeList$/;"	v
init	./cmd/compile/internal/gc/swt.go	/^	var init *NodeList$/;"	v
init	./cmd/compile/internal/gc/y.go	/^					Yyerror("func init must have no arguments and no return values")$/;"	f
init	./cmd/fix/gotypes.go	/^func init() {$/;"	f
init	./cmd/fix/gotypes_test.go	/^func init() {$/;"	f
init	./cmd/fix/import_test.go	/^func init() {$/;"	f
init	./cmd/fix/netipv6zone.go	/^func init() {$/;"	f
init	./cmd/fix/netipv6zone_test.go	/^func init() {$/;"	f
init	./cmd/fix/printerconfig.go	/^func init() {$/;"	f
init	./cmd/fix/printerconfig_test.go	/^func init() {$/;"	f
init	./cmd/go/clean.go	/^func init() {$/;"	f
init	./cmd/go/fmt.go	/^func init() {$/;"	f
init	./cmd/go/generate.go	/^func init() {$/;"	f
init	./cmd/go/get.go	/^func init() {$/;"	f
init	./cmd/go/go_test.go	/^func init() {$/;"	f
init	./cmd/go/list.go	/^func init() {$/;"	f
init	./cmd/go/run.go	/^func init() {$/;"	f
init	./cmd/go/test.go	/^func init() {$/;"	f
init	./cmd/go/testdata/norunexample/example_test.go	/^func init() {$/;"	f
init	./cmd/go/testdata/src/badtest/badexec/x_test.go	/^func init() {$/;"	f
init	./cmd/go/testdata/src/testcycle/p1/p1.go	/^func init() {$/;"	f
init	./cmd/go/testdata/src/testcycle/p2/p2.go	/^func init() {$/;"	f
init	./cmd/go/testdata/src/testcycle/p3/p3.go	/^func init() {$/;"	f
init	./cmd/go/testflag.go	/^func init() {$/;"	f
init	./cmd/go/testgo.go	/^func init() {$/;"	f
init	./cmd/go/tool.go	/^func init() {$/;"	f
init	./cmd/go/vcs.go	/^func init() {$/;"	f
init	./cmd/go/vet.go	/^func init() {$/;"	f
init	./cmd/internal/goobj/read.go	/^func (r *objReader) init(f io.ReadSeeker, p *Package) {$/;"	f
init	./cmd/internal/obj/arm/list5.go	/^func init() {$/;"	f
init	./cmd/internal/obj/arm64/list7.go	/^func init() {$/;"	f
init	./cmd/internal/obj/go.go	/^func init() {$/;"	f
init	./cmd/internal/obj/ppc64/list9.go	/^func init() {$/;"	f
init	./cmd/internal/obj/x86/list6.go	/^func init() {$/;"	f
init	./cmd/nm/nm.go	/^func init() {$/;"	f
init	./cmd/trace/goroutines.go	/^func init() {$/;"	f
init	./cmd/trace/pprof.go	/^func init() {$/;"	f
init	./cmd/trace/trace.go	/^func init() {$/;"	f
init	./cmd/vet/assign.go	/^func init() {$/;"	f
init	./cmd/vet/atomic.go	/^func init() {$/;"	f
init	./cmd/vet/bool.go	/^func init() {$/;"	f
init	./cmd/vet/composite.go	/^func init() {$/;"	f
init	./cmd/vet/copylock.go	/^func init() {$/;"	f
init	./cmd/vet/deadcode.go	/^func init() {$/;"	f
init	./cmd/vet/method.go	/^func init() {$/;"	f
init	./cmd/vet/nilfunc.go	/^func init() {$/;"	f
init	./cmd/vet/print.go	/^func init() {$/;"	f
init	./cmd/vet/rangeloop.go	/^func init() {$/;"	f
init	./cmd/vet/shadow.go	/^func init() {$/;"	f
init	./cmd/vet/shift.go	/^func init() {$/;"	f
init	./cmd/vet/structtag.go	/^func init() {$/;"	f
init	./cmd/vet/types.go	/^func init() {$/;"	f
init	./cmd/vet/unsafeptr.go	/^func init() {$/;"	f
init	./cmd/vet/unused.go	/^func init() {$/;"	f
init	./cmd/yacc/yacc.go	/^func init() {$/;"	f
init	./compress/bzip2/bzip2.go	/^func init() {$/;"	f
init	./compress/flate/deflate.go	/^func (d *compressor) init(w io.Writer, level int) (err error) {$/;"	f
init	./compress/flate/gen.go	/^func (h *huffmanDecoder) init(bits []int) bool {$/;"	f
init	./compress/flate/inflate.go	/^func (h *huffmanDecoder) init(bits []int) bool {$/;"	f
init	./compress/gzip/gzip.go	/^func (z *Writer) init(w io.Writer, level int) {$/;"	f
init	./container/ring/ring.go	/^func (r *Ring) init() *Ring {$/;"	f
init	./crypto/des/block.go	/^func init() {$/;"	f
init	./crypto/md5/gen.go	/^func init() {$/;"	f
init	./crypto/md5/md5.go	/^func init() {$/;"	f
init	./crypto/md5/md5block.go	/^func init() {$/;"	f
init	./crypto/rand/eagain.go	/^func init() {$/;"	f
init	./crypto/rand/rand_linux.go	/^func init() {$/;"	f
init	./crypto/rand/rand_unix.go	/^func init() {$/;"	f
init	./crypto/rand/rand_windows.go	/^func init() { Reader = &rngReader{} }$/;"	f
init	./crypto/sha1/sha1.go	/^func init() {$/;"	f
init	./crypto/sha256/sha256.go	/^func init() {$/;"	f
init	./crypto/sha512/sha512.go	/^func init() {$/;"	f
init	./crypto/tls/handshake_server_test.go	/^func init() {$/;"	f
init	./crypto/x509/sha2_windows_test.go	/^func init() {$/;"	f
init	./database/sql/fakedb_test.go	/^func init() {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentDBExecTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentDBQueryTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentRandomTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentStmtExecTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentStmtQueryTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentTxExecTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentTxQueryTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentTxStmtExecTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func (c *concurrentTxStmtQueryTest) init(t testing.TB, db *DB) {$/;"	f
init	./database/sql/sql_test.go	/^func init() {$/;"	f
init	./encoding/gob/debug.go	/^func init() {$/;"	f
init	./encoding/gob/decode.go	/^func init() {$/;"	f
init	./encoding/gob/type.go	/^func (a *arrayType) init(elem gobType, len int) {$/;"	f
init	./encoding/gob/type.go	/^func (m *mapType) init(key, elem gobType) {$/;"	f
init	./encoding/gob/type.go	/^func (s *sliceType) init(elem gobType) {$/;"	f
init	./encoding/gob/type.go	/^func init() {$/;"	f
init	./encoding/json/decode.go	/^func (d *decodeState) init(data []byte) *decodeState {$/;"	f
init	./expvar/expvar.go	/^func init() {$/;"	f
init	./flag/example_test.go	/^func init() {$/;"	f
init	./flag/flag.go	/^		func init() {$/;"	f
init	./fmt/format.go	/^func (f *fmt) init(buf *buffer) {$/;"	f
init	./fmt/format.go	/^func init() {$/;"	f
init	./go/internal/gccgoimporter/parser.go	/^func (p *parser) init(filename string, src io.Reader, imports map[string]*types.Package) {$/;"	f
init	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) init(filename, id string, src io.Reader, packages map[string]*types.Package) {$/;"	f
init	./go/internal/gcimporter/testdata/exports.go	/^func init() {}$/;"	f
init	./go/parser/parser.go	/^func (p *parser) init(fset *token.FileSet, filename string, src []byte, mode Mode) {$/;"	f
init	./go/printer/printer.go	/^func (p *printer) init(cfg *Config, fset *token.FileSet, nodeSizes map[ast.Node]int) {$/;"	f
init	./go/printer/printer_test.go	/^func init() {$/;"	f
init	./go/printer/testdata/parser.go	/^func (p *parser) init(fset *token.FileSet, filename string, src []byte, mode uint) {$/;"	f
init	./go/token/token.go	/^func init() {$/;"	f
init	./go/types/decl.go	/^						var init ast.Expr$/;"	v
init	./go/types/decl.go	/^		check.errorf(fdecl.Pos(), "func init must have no arguments and no return values")$/;"	f
init	./go/types/resolver.go	/^									var init ast.Expr$/;"	v
init	./go/types/resolver.go	/^								var init ast.Expr$/;"	v
init	./go/types/resolver_test.go	/^		func init() {}$/;"	f
init	./go/types/universe.go	/^func init() {$/;"	f
init	./image/gif/reader.go	/^func init() {$/;"	f
init	./image/jpeg/dct_test.go	/^func init() {$/;"	f
init	./image/jpeg/reader.go	/^func init() {$/;"	f
init	./image/jpeg/writer.go	/^func (h *huffmanLUT) init(s huffmanSpec) {$/;"	f
init	./image/jpeg/writer.go	/^func init() {$/;"	f
init	./image/png/reader.go	/^func init() {$/;"	f
init	./math/big/decimal.go	/^func (x *decimal) init(m nat, shift int) {$/;"	f
init	./math/pow10.go	/^func init() {$/;"	f
init	./mime/type_dragonfly.go	/^func init() {$/;"	f
init	./mime/type_freebsd.go	/^func init() {$/;"	f
init	./mime/type_openbsd.go	/^func init() {$/;"	f
init	./mime/type_plan9.go	/^func init() {$/;"	f
init	./mime/type_unix.go	/^func init() {$/;"	f
init	./mime/type_windows.go	/^func init() {$/;"	f
init	./net/addrselect.go	/^func init() {$/;"	f
init	./net/cgo_stub.go	/^func init() { netGo = true }$/;"	f
init	./net/conf_netcgo.go	/^func init() { netCgo = true }$/;"	f
init	./net/dnsclient_unix.go	/^func (conf *resolverConfig) init() {$/;"	f
init	./net/fd_plan9.go	/^func (fd *netFD) init() error {$/;"	f
init	./net/fd_unix.go	/^func (fd *netFD) init() error {$/;"	f
init	./net/fd_windows.go	/^func (fd *netFD) init() error {$/;"	f
init	./net/http/export_test.go	/^func init() {$/;"	f
init	./net/http/fcgi/fcgi.go	/^func (h *header) init(recType recType, reqId uint16, contentLength int) {$/;"	f
init	./net/http/httputil/reverseproxy_test.go	/^func init() {$/;"	f
init	./net/http/pprof/pprof.go	/^func init() {$/;"	f
init	./net/http/race.go	/^func init() {$/;"	f
init	./net/http/transport.go	/^func (e *envOnce) init() {$/;"	f
init	./net/internal/socktest/switch.go	/^func (sw *Switch) init() {$/;"	f
init	./net/mail/message.go	/^func init() {$/;"	f
init	./net/main_cloexec_test.go	/^func init() {$/;"	f
init	./net/net.go	/^func init() {$/;"	f
init	./net/rpc/jsonrpc/all_test.go	/^func init() {$/;"	f
init	./net/smtp/smtp_test.go	/^func init() {$/;"	f
init	./net/textproto/reader.go	/^func init() {$/;"	f
init	./os/exec/exec_posix.go	/^func init() {$/;"	f
init	./os/exec_windows.go	/^func init() {$/;"	f
init	./os/getwd_darwin.go	/^func init() {$/;"	f
init	./os/os_unix_test.go	/^func init() {$/;"	f
init	./os/os_windows_test.go	/^func init() {$/;"	f
init	./os/proc.go	/^func init() {$/;"	f
init	./os/signal/signal_plan9.go	/^func init() {$/;"	f
init	./os/signal/signal_unix.go	/^func init() {$/;"	f
init	./os/sys_darwin.go	/^func init() {$/;"	f
init	./os/sys_freebsd.go	/^func init() {$/;"	f
init	./os/user/lookup_stubs.go	/^func init() {$/;"	f
init	./path/filepath/path_windows_test.go	/^func init() {$/;"	f
init	./reflect/all_test.go	/^func init() {$/;"	f
init	./regexp/exec.go	/^func (m *machine) init(ncap int) {$/;"	f
init	./regexp/syntax/compile.go	/^func (c *compiler) init() {$/;"	f
init	./runtime/alg.go	/^func init() {$/;"	f
init	./runtime/cgo/signal_darwin_armx.go	/^func init() {$/;"	f
init	./runtime/crash_test.go	/^func init() {$/;"	f
init	./runtime/mstats.go	/^func init() {$/;"	f
init	./runtime/panic.go	/^func init() {$/;"	f
init	./runtime/proc.go	/^func init() {$/;"	f
init	./runtime/runtime_linux_test.go	/^func init() {$/;"	f
init	./runtime/stack_test.go	/^\/\/func init() {$/;"	f
init	./strconv/atof_test.go	/^func init() {$/;"	f
init	./strconv/atoi_test.go	/^func init() {$/;"	f
init	./sync/atomic/atomic_test.go	/^func init() {$/;"	f
init	./sync/pool.go	/^func init() {$/;"	f
init	./sync/runtime.go	/^func init() {$/;"	f
init	./syscall/exec_plan9.go	/^func init() {$/;"	f
init	./syscall/fd_nacl.go	/^func init() {$/;"	f
init	./syscall/flock_linux_32bit.go	/^func init() {$/;"	f
init	./syscall/fs_nacl.go	/^func init() {$/;"	f
init	./syscall/net_nacl.go	/^func (q *queue) init(size int) {$/;"	f
init	./syscall/route_freebsd.go	/^func init() {$/;"	f
init	./syscall/unzip_nacl.go	/^func (h *huffmanDecoder) init(bits []int) bool {$/;"	f
init	./text/tabwriter/tabwriter_test.go	/^func (b *buffer) init(n int) { b.a = make([]byte, 0, n) }$/;"	f
init	./text/template/template.go	/^func (t *Template) init() {$/;"	f
init	./time/internal_test.go	/^func init() {$/;"	f
init	./time/zoneinfo_ios.go	/^func init() {$/;"	f
init	./unicode/utf8/utf8_test.go	/^func init() {$/;"	f
init1	./cmd/compile/internal/gc/sinit.go	/^func init1(n *Node, out **NodeList) {$/;"	f
init2	./cmd/compile/internal/gc/sinit.go	/^func init2(n *Node, out **NodeList) {$/;"	f
init2list	./cmd/compile/internal/gc/sinit.go	/^func init2list(l *NodeList, out **NodeList) {$/;"	f
initAll	./crypto/elliptic/elliptic.go	/^func initAll() {$/;"	f
initAusTestingZone	./time/zoneinfo_windows.go	/^func initAusTestingZone() {$/;"	f
initB	./sort/sort_test.go	/^func (d intPairs) initB() {$/;"	f
initBig	./encoding/json/scanner_test.go	/^func initBig() {$/;"	f
initBloc	./runtime/mem_plan9.go	/^func initBloc() {$/;"	f
initCheckmarkSpan	./runtime/mbitmap.go	/^func (h heapBits) initCheckmarkSpan(size, n, total uintptr) {$/;"	f
initCheckmarks	./runtime/mgcmark.go	/^func initCheckmarks() {$/;"	f
initConfVal	./net/conf.go	/^func initConfVal() {$/;"	f
initConst	./go/types/assignments.go	/^func (check *Checker) initConst(lhs *Const, x *operand) {$/;"	f
initDefaultCipherSuites	./crypto/tls/common.go	/^func initDefaultCipherSuites() {$/;"	f
initDeflate	./compress/flate/deflate.go	/^func (d *compressor) initDeflate() {$/;"	f
initEscretval	./cmd/compile/internal/gc/esc.go	/^func initEscretval(e *EscState, n *Node, fntype *Type) {$/;"	f
initExceptionHandler	./runtime/signal_windows.go	/^func initExceptionHandler() {$/;"	f
initExp	./math/rand/rand_test.go	/^func initExp() (testKe []uint32, testWe, testFe []float32) {$/;"	f
initFileMap	./debug/gosym/pclntab.go	/^func (t *LineTable) initFileMap() {$/;"	f
initFiles	./go/types/check.go	/^func (check *Checker) initFiles(files []*ast.File) {$/;"	f
initGroups	./index/suffixarray/qsufsort.go	/^func initGroups(sa []int, data []byte) []int {$/;"	f
initLegacy	./runtime/print1_write_android.go	/^func initLegacy() {$/;"	f
initLocal	./time/zoneinfo_ios.go	/^func initLocal() {$/;"	f
initLocal	./time/zoneinfo_plan9.go	/^func initLocal() {$/;"	f
initLocal	./time/zoneinfo_unix.go	/^func initLocal() {$/;"	f
initLocal	./time/zoneinfo_windows.go	/^func initLocal() {$/;"	f
initLocalFromTZI	./time/zoneinfo_windows.go	/^func initLocalFromTZI(i *syscall.Timezoneinformation) {$/;"	f
initLogd	./runtime/print1_write_android.go	/^func initLogd() {$/;"	f
initMime	./mime/type.go	/^func initMime() {$/;"	f
initMimeForTests	./mime/type_plan9.go	/^func initMimeForTests() map[string]string {$/;"	f
initMimeForTests	./mime/type_unix.go	/^func initMimeForTests() map[string]string {$/;"	f
initMimeForTests	./mime/type_windows.go	/^func initMimeForTests() map[string]string {$/;"	f
initMimePlan9	./mime/type_plan9.go	/^func initMimePlan9() {$/;"	f
initMimeUnix	./mime/type_unix.go	/^func initMimeUnix() {$/;"	f
initMimeWindows	./mime/type_windows.go	/^func initMimeWindows() {$/;"	f
initNPNRequest	./net/http/server.go	/^type initNPNRequest struct {$/;"	t
initNorm	./math/rand/rand_test.go	/^func initNorm() (testKn []uint32, testWn, testFn []float32) {$/;"	f
initOrder	./go/types/initorder.go	/^func (check *Checker) initOrder() {$/;"	f
initP224	./crypto/elliptic/p224.go	/^func initP224() {$/;"	f
initP256	./crypto/elliptic/p256.go	/^func initP256() {$/;"	f
initP384	./crypto/elliptic/elliptic.go	/^func initP384() {$/;"	f
initP521	./crypto/elliptic/elliptic.go	/^func initP521() {$/;"	f
initParserMode	./cmd/gofmt/gofmt.go	/^func initParserMode() {$/;"	f
initPrintFlags	./cmd/vet/print.go	/^func initPrintFlags() {$/;"	f
initPtrto	./cmd/compile/internal/gc/subr.go	/^func initPtrto() {$/;"	f
initPtrtoDone	./cmd/compile/internal/gc/subr.go	/^var initPtrtoDone bool$/;"	v
initReverseByte	./compress/flate/gen.go	/^func initReverseByte() {$/;"	f
initRewrite	./cmd/gofmt/rewrite.go	/^func initRewrite() {$/;"	f
initSizes	./runtime/msize.go	/^func initSizes() {$/;"	f
initSpan	./runtime/mbitmap.go	/^func (h heapBits) initSpan(size, n, total uintptr) {$/;"	f
initSyms	./cmd/compile/internal/gc/subr.go	/^var initSyms []*Sym$/;"	v
initSystemRoots	./crypto/x509/root_cgo_darwin.go	/^func initSystemRoots() {$/;"	f
initSystemRoots	./crypto/x509/root_darwin_arm_gen.go	/^func initSystemRoots() {$/;"	f
initSystemRoots	./crypto/x509/root_darwin_armx.go	/^func initSystemRoots() {$/;"	f
initSystemRoots	./crypto/x509/root_nocgo_darwin.go	/^func initSystemRoots() {$/;"	f
initSystemRoots	./crypto/x509/root_plan9.go	/^func initSystemRoots() {$/;"	f
initSystemRoots	./crypto/x509/root_unix.go	/^func initSystemRoots() {$/;"	f
initSystemRoots	./crypto/x509/root_windows.go	/^func initSystemRoots() {$/;"	f
initTestingZone	./time/zoneinfo_ios.go	/^func initTestingZone() {$/;"	f
initTestingZone	./time/zoneinfo_plan9.go	/^func initTestingZone() {$/;"	f
initTestingZone	./time/zoneinfo_unix.go	/^func initTestingZone() {$/;"	f
initTestingZone	./time/zoneinfo_windows.go	/^func initTestingZone() {$/;"	f
initUnusedFlags	./cmd/vet/unused.go	/^func initUnusedFlags() {$/;"	f
initVar	./go/types/assignments.go	/^func (check *Checker) initVar(lhs *Var, x *operand, result bool) Type {$/;"	f
initVars	./go/types/assignments.go	/^func (check *Checker) initVars(lhs []*Var, rhs []ast.Expr, returnPos token.Pos) {$/;"	f
init_pthread_wrapper	./runtime/cgo/gcc_openbsd_386.c	/^static void init_pthread_wrapper(void) {$/;"	f	file:
init_pthread_wrapper	./runtime/cgo/gcc_openbsd_amd64.c	/^static void init_pthread_wrapper(void) {$/;"	f	file:
init_pthread_wrapper_once	./runtime/cgo/gcc_openbsd_386.c	/^static pthread_once_t init_pthread_wrapper_once = PTHREAD_ONCE_INIT;$/;"	v	file:
init_pthread_wrapper_once	./runtime/cgo/gcc_openbsd_amd64.c	/^static pthread_once_t init_pthread_wrapper_once = PTHREAD_ONCE_INIT;$/;"	v	file:
init_working_dir	./runtime/cgo/gcc_darwin_arm.c	/^init_working_dir()$/;"	f	file:
init_working_dir	./runtime/cgo/gcc_darwin_arm64.c	/^init_working_dir()$/;"	f	file:
initdiv	./cmd/internal/obj/arm/obj5.go	/^func initdiv(ctxt *obj.Link) {$/;"	f
initdone	./cmd/compile/internal/gc/init.go	/^ *	var initdone· uint8 				(1)$/;"	v
initdynexport	./cmd/link/internal/ld/pe.go	/^func initdynexport() {$/;"	f
initdynimport	./cmd/link/internal/ld/pe.go	/^func initdynimport() *Dll {$/;"	f
initfix	./cmd/compile/internal/gc/sinit.go	/^func initfix(l *NodeList) *NodeList {$/;"	f
initialComments	./cmd/cover/cover.go	/^func initialComments(content []byte) []byte {$/;"	f
initialLimitedReaderSize	./net/http/server.go	/^func (srv *Server) initialLimitedReaderSize() int64 {$/;"	f
initialPermutation	./crypto/des/const.go	/^var initialPermutation = [64]byte{$/;"	v
initialize	./go/printer/performance_test.go	/^func initialize() {$/;"	f
initname	./cmd/compile/internal/gc/export.go	/^func initname(s string) bool {$/;"	f
initonce	./crypto/elliptic/elliptic.go	/^var initonce sync.Once$/;"	v
initplan	./cmd/compile/internal/gc/sinit.go	/^func initplan(n *Node) {$/;"	f
initproginfo	./cmd/compile/internal/ppc64/prog.go	/^func initproginfo() {$/;"	f
initproginfo_initialized	./cmd/compile/internal/ppc64/prog.go	/^var initproginfo_initialized int$/;"	v
initreorder	./cmd/compile/internal/gc/sinit.go	/^func initreorder(l *NodeList, out **NodeList) {$/;"	f
initsig	./runtime/os1_nacl.go	/^func initsig() {$/;"	f
initsig	./runtime/os1_plan9.go	/^func initsig() {$/;"	f
initsig	./runtime/signal1_unix.go	/^func initsig() {$/;"	f
initsig	./runtime/signal_windows.go	/^func initsig() {$/;"	f
inittls	./runtime/cgo/gcc_android_arm.c	/^inittls(void **tlsg, void **tlsbase)$/;"	f	file:
inittls	./runtime/cgo/gcc_darwin_386.c	/^inittls(void)$/;"	f	file:
inittls	./runtime/cgo/gcc_darwin_amd64.c	/^inittls(void)$/;"	f	file:
inittls	./runtime/cgo/gcc_darwin_arm.c	/^inittls(void **tlsg, void **tlsbase)$/;"	f	file:
inittls	./runtime/cgo/gcc_darwin_arm64.c	/^inittls(void **tlsg, void **tlsbase)$/;"	f	file:
initvariants	./cmd/compile/internal/ppc64/prog.go	/^func initvariants() {$/;"	f
initvariants_initialized	./cmd/compile/internal/ppc64/prog.go	/^var initvariants_initialized int$/;"	v
injectglist	./runtime/proc1.go	/^func injectglist(glist *g) {$/;"	f
injection	./html/template/escape_test.go	/^			"No doctype injection",$/;"	t
inlcalls	./cmd/compile/internal/gc/inl.go	/^func inlcalls(fn *Node) {$/;"	f
inlconv2expr	./cmd/compile/internal/gc/inl.go	/^func inlconv2expr(np **Node) {$/;"	f
inlconv2list	./cmd/compile/internal/gc/inl.go	/^func inlconv2list(n *Node) *NodeList {$/;"	f
inlconv2stmt	./cmd/compile/internal/gc/inl.go	/^func inlconv2stmt(n *Node) {$/;"	f
inlcopy	./cmd/compile/internal/gc/inl.go	/^func inlcopy(n *Node) *Node {$/;"	f
inlcopylist	./cmd/compile/internal/gc/inl.go	/^func inlcopylist(ll *NodeList) *NodeList {$/;"	f
inlfn	./cmd/compile/internal/gc/inl.go	/^var inlfn *Node \/\/ function currently being inlined$/;"	v
inlgen	./cmd/compile/internal/gc/inl.go	/^var inlgen int$/;"	v
inlinetest	./runtime/race/testdata/regression_test.go	/^func inlinetest(p **inltype) *inltype {$/;"	f
inlnode	./cmd/compile/internal/gc/inl.go	/^func inlnode(np **Node) {$/;"	f
inlnodelist	./cmd/compile/internal/gc/inl.go	/^func inlnodelist(l *NodeList) {$/;"	f
inlretlabel	./cmd/compile/internal/gc/inl.go	/^var inlretlabel *Node \/\/ target of the goto substituted in place of a return$/;"	v
inlretvars	./cmd/compile/internal/gc/inl.go	/^var inlretvars *NodeList \/\/ temp out variables$/;"	v
inlsubst	./cmd/compile/internal/gc/inl.go	/^func inlsubst(n *Node) *Node {$/;"	f
inlsubstlist	./cmd/compile/internal/gc/inl.go	/^func inlsubstlist(ll *NodeList) *NodeList {$/;"	f
inltype	./runtime/race/testdata/regression_test.go	/^type inltype struct {$/;"	t
inlvar	./cmd/compile/internal/gc/inl.go	/^func inlvar(var_ *Node) *Node {$/;"	f
inner	./cmd/vet/asmdecl.go	/^		var inner bytes.Buffer$/;"	v
inner	./reflect/all_test.go	/^type inner struct {$/;"	t
inode	./syscall/fs_nacl.go	/^type inode struct {$/;"	t
input	./compress/zlib/writer_test.go	/^	var input = []byte("Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.")$/;"	v
input	./net/rpc/client.go	/^func (client *Client) input() {$/;"	f
input	./regexp/regexp.go	/^type input interface {$/;"	t
input	./syscall/srpc_nacl.go	/^func (c *srpcClient) input() {$/;"	f
inputBytes	./regexp/regexp.go	/^type inputBytes struct {$/;"	t
inputReader	./regexp/regexp.go	/^type inputReader struct {$/;"	t
inputString	./regexp/regexp.go	/^type inputString struct {$/;"	t
inputT	./encoding/gob/codec_test.go	/^	type inputT struct {$/;"	t
insert	./container/list/list.go	/^func (l *List) insert(e, at *Element) *Element {$/;"	f
insert	./go/types/labels.go	/^func (b *block) insert(s *ast.LabeledStmt) {$/;"	f
insert	./go/types/objset.go	/^func (s *objset) insert(obj Object) Object {$/;"	f
insert	./net/http/transport_test.go	/^func (tcs *testConnSet) insert(c net.Conn) {$/;"	f
insert	./regexp/onepass.go	/^func (q *queueOnePass) insert(u uint32) {$/;"	f
insertCRLF	./mime/quotedprintable/writer.go	/^func (w *Writer) insertCRLF() error {$/;"	f
insertNew	./regexp/onepass.go	/^func (q *queueOnePass) insertNew(u uint32) {$/;"	f
insertSoftLineBreak	./mime/quotedprintable/writer.go	/^func (w *Writer) insertSoftLineBreak() error {$/;"	f
insertValue	./container/list/list.go	/^func (l *List) insertValue(v interface{}, at *Element) *Element {$/;"	f
inserti	./runtime/hashmap.go	/^	var inserti *uint8$/;"	v
insertionSort	./sort/sort.go	/^func insertionSort(data Interface, a, b int) {$/;"	f
insertk	./runtime/hashmap.go	/^	var insertk unsafe.Pointer$/;"	v
insertv	./runtime/hashmap.go	/^	var insertv unsafe.Pointer$/;"	v
insn	./cmd/internal/obj/x86/obj6.go	/^				ctxt.Diag("do not know how to handle LEAQ-type insn to non-register in %v with -dynlink", p)$/;"	t
inspectFunc	./go/doc/example.go	/^	var inspectFunc func(ast.Node) bool$/;"	v
inspector	./go/ast/walk.go	/^type inspector func(Node) bool$/;"	t
inst	./go/importer/importer.go	/^			var inst gccgoimporter.GccgoInstallation$/;"	v
inst	./go/internal/gccgoimporter/gccgoinstallation_test.go	/^	var inst GccgoInstallation$/;"	v
inst	./regexp/syntax/compile.go	/^func (c *compiler) inst(op InstOp) frag {$/;"	f
inst	./runtime/sys_arm.go	/^	var inst uint32$/;"	v
inst	./runtime/sys_arm64.go	/^	var inst uint32$/;"	v
inst	./runtime/sys_ppc64x.go	/^	var inst uint32$/;"	v
instArg	./cmd/internal/rsc.io/arm/armasm/decode.go	/^type instArg uint8$/;"	t
instArgs	./cmd/internal/rsc.io/arm/armasm/decode.go	/^type instArgs [4]instArg$/;"	t
instFormat	./cmd/internal/rsc.io/arm/armasm/decode.go	/^type instFormat struct {$/;"	t
instFormats	./cmd/internal/rsc.io/arm/armasm/tables.go	/^var instFormats = [...]instFormat{$/;"	v
instOpNames	./regexp/syntax/prog.go	/^var instOpNames = []string{$/;"	v
instPrefix	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^func instPrefix(b byte, mode int) (Inst, error) {$/;"	f
installAccept4TestHook	./net/main_cloexec_test.go	/^func installAccept4TestHook() {$/;"	f
installBat	./os/exec/lp_windows_test.go	/^func installBat(t *testing.T, dest string) {$/;"	f
installExe	./os/exec/lp_windows_test.go	/^func installExe(t *testing.T, dest, src string) {$/;"	f
installProg	./os/exec/lp_windows_test.go	/^func installProg(t *testing.T, dest, srcExe string) {$/;"	f
installTestHooks	./net/internal/socktest/main_unix_test.go	/^func installTestHooks() {$/;"	f
installTestHooks	./net/internal/socktest/main_windows_test.go	/^func installTestHooks() {$/;"	f
installTestHooks	./net/main_plan9_test.go	/^func installTestHooks() {}$/;"	f
installTestHooks	./net/main_unix_test.go	/^func installTestHooks() {$/;"	f
installTestHooks	./net/main_windows_test.go	/^func installTestHooks() {$/;"	f
instead	./encoding/gob/example_interface_test.go	/^	\/\/ interface type.  If we passed p directly it would see the concrete type instead.$/;"	t
instead	./go/types/lookup.go	/^	\/\/ If typ is not a named type, insert a nil type instead.$/;"	t
instead	./go/types/methodset.go	/^	\/\/ If typ is not a named type, insert a nil type instead.$/;"	t
instead	./runtime/symtab.go	/^\/\/ All code operating on a *Func must call raw to get the *_func instead.$/;"	f
instinit	./cmd/internal/obj/x86/asm6.go	/^func instinit() {$/;"	f
instr	./cmd/compile/internal/gc/racewalk.go	/^	var instr *NodeList$/;"	v
instruction	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) instruction(op int, word, cond string, operands [][]lex.Token) {$/;"	f
int	./builtin/builtin.go	/^type int int$/;"	t
int	./cmd/compile/internal/amd64/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	t
int	./cmd/compile/internal/arm/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int32, ttype int, treg int, toffset int32) *obj.Prog {$/;"	t
int	./cmd/compile/internal/arm64/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	t
int	./cmd/compile/internal/gc/align.go	/^	var etype int$/;"	t
int	./cmd/compile/internal/gc/esc.go	/^func (l Level) int() int {$/;"	f
int	./cmd/compile/internal/gc/go.go	/^	Etype  int$/;"	t
int	./cmd/compile/internal/gc/lex.go	/^	etype   int$/;"	t
int	./cmd/compile/internal/gc/lex.go	/^	var etype int$/;"	t
int	./cmd/compile/internal/gc/reg.go	/^	nvar int       \/\/ number of vars$/;"	v
int	./cmd/compile/internal/gc/subr.go	/^		var mtype int$/;"	t
int	./cmd/compile/internal/gc/typecheck.go	/^\/\/ whenever they can be represented by a value of type int.$/;"	t
int	./cmd/compile/internal/gc/typecheck.go	/^var ntypecheckdeftype int$/;"	t
int	./cmd/compile/internal/ppc64/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	t
int	./cmd/compile/internal/x86/ggen.go	/^func appendpp(p *obj.Prog, as int, ftype int, freg int, foffset int64, ttype int, treg int, toffset int64) *obj.Prog {$/;"	t
int	./cmd/internal/obj/link.go	/^	Headtype           int$/;"	t
int	./cmd/link/internal/ld/ldelf.go	/^func reltype(pn string, elftype int, siz *uint8) int {$/;"	t
int	./cmd/link/internal/ld/link.go	/^	Headtype  int$/;"	t
int	./cmd/vet/print.go	/^			f.Badf(call.Pos(), "arg %s for * in printf format not of type int", f.gofmt(arg))$/;"	t
int	./cmd/vet/testdata/print.go	/^	Printf("%[2]*.[1]*[3]d", 2, "hi", 4) \/\/ ERROR "arg .hi. for \\* in printf format not of type int"$/;"	t
int	./cmd/vet/testdata/print.go	/^	fmt.Printf("%*%", 0.22)                    \/\/ ERROR "arg 0.22 for \\* in printf format not of type int"$/;"	t
int	./cmd/vet/testdata/print.go	/^	fmt.Printf("%.*d", "hi", 3)                \/\/ ERROR "arg .hi. for \\* in printf format not of type int"$/;"	t
int	./cmd/vet/testdata/print.go	/^	fmt.Printf("%.*d", s, 3)                   \/\/ ERROR "arg s for \\* in printf format not of type int"$/;"	t
int	./debug/dwarf/buf.go	/^func (b *buf) int() int64 {$/;"	f
int	./encoding/gob/debug.go	/^func (deb *debugger) int() int {$/;"	f
int	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind int but not type int. TODO: We can handle this unsafely.$/;"	t
int	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind int but not type int. TODO: We can handle this unsafely.$/;"	t
int	./fmt/doc.go	/^	obtained from the next operand, which must be of type int.$/;"	t
int	./fmt/print.go	/^\/\/ intFromArg gets the argNumth element of a. On return, isInt reports whether the argument has type int.$/;"	t
int	./go/types/example_test.go	/^	\/\/ type int int:$/;"	t
int	./net/fd_unix.go	/^	sotype      int$/;"	t
int	./net/fd_unix.go	/^func newFD(sysfd, family, sotype int, net string) (*netFD, error) {$/;"	t
int	./net/fd_windows.go	/^	sotype        int$/;"	t
int	./net/fd_windows.go	/^func newFD(sysfd syscall.Handle, family, sotype int, net string) (*netFD, error) {$/;"	t
int	./net/internal/socktest/switch_posix.go	/^func typeString(sotype int) string {$/;"	t
int	./net/internal/socktest/switch_stub.go	/^func typeString(sotype int) string { return "<nil>" }$/;"	t
int	./net/sockopt_bsd.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	t
int	./net/sockopt_linux.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	t
int	./net/sockopt_solaris.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	t
int	./net/sockopt_stub.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	t
int	./net/sockopt_windows.go	/^func setDefaultSockopts(s syscall.Handle, family, sotype int, ipv6only bool) error {$/;"	t
int	./net/unixsock_posix.go	/^	var sotype int$/;"	t
int	./net/unixsock_posix.go	/^func sotypeToNet(sotype int) string {$/;"	t
int	./syscall/net_nacl.go	/^	sotype     int$/;"	t
int	./syscall/net_nacl.go	/^	sotype int$/;"	t
int16	./builtin/builtin.go	/^type int16 int16$/;"	t
int16	./encoding/binary/binary.go	/^func (d *decoder) int16() int16 { return int16(d.uint16()) }$/;"	f
int16	./encoding/binary/binary.go	/^func (e *encoder) int16(x int16) { e.uint16(uint16(x)) }$/;"	f
int16	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind int16 but not type int16. TODO: We can handle this unsafely.$/;"	t
int16	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind int16 but not type int16. TODO: We can handle this unsafely.$/;"	t
int32	./builtin/builtin.go	/^type int32 int32$/;"	t
int32	./cmd/compile/internal/arm/gsubr.go	/^func gregshift(as int, lhs *gc.Node, stype int32, reg *gc.Node, rhs *gc.Node) *obj.Prog {$/;"	t
int32	./cmd/compile/internal/arm/gsubr.go	/^func gshift(as int, lhs *gc.Node, stype int32, sval int32, rhs *gc.Node) *obj.Prog {$/;"	t
int32	./cmd/compile/internal/gc/popt.go	/^	Nvar    int32$/;"	v
int32	./cmd/link/internal/ld/pcln.go	/^var pclntabNfunc int32$/;"	f
int32	./encoding/binary/binary.go	/^func (d *decoder) int32() int32 { return int32(d.uint32()) }$/;"	f
int32	./encoding/binary/binary.go	/^func (e *encoder) int32(x int32) { e.uint32(uint32(x)) }$/;"	f
int32	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind int32 but not type int32. TODO: We can handle this unsafely.$/;"	t
int32	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind int32 but not type int32. TODO: We can handle this unsafely.$/;"	t
int32	./net/lookup_windows.go	/^	var stype int32$/;"	t
int32	./syscall/ztypes_windows.go	/^	Socktype  int32$/;"	t
int32Hash	./runtime/alg.go	/^func int32Hash(i uint32, seed uintptr) uintptr {$/;"	f
int32Test	./encoding/asn1/asn1_test.go	/^type int32Test struct {$/;"	t
int32TestData	./encoding/asn1/asn1_test.go	/^var int32TestData = []int32Test{$/;"	v
int32Type	./database/sql/driver/types.go	/^type int32Type struct{}$/;"	t
int32Value	./cmd/internal/obj/flag.go	/^type int32Value int32$/;"	t
int32p	./runtime/proc1.go	/^	var int32p *int32 = &gomaxprocs \/\/ make compiler check that gomaxprocs is an int32$/;"	v
int32s	./math/rand/regress_test.go	/^	var int32s = []int32{1, 10, 32, 1 << 20, 1<<20 + 1, 1000000000, 1 << 30, 1<<31 - 2, 1<<31 - 1}$/;"	v
int64	./builtin/builtin.go	/^type int64 int64$/;"	t
int64	./cmd/compile/internal/big/float_test.go	/^func (x *Float) int64() int64 {$/;"	f
int64	./debug/dwarf/entry.go	/^	\/\/ ClassConstant represents values of type int64 that are$/;"	t
int64	./debug/dwarf/entry.go	/^	\/\/ ClassReferenceAlt represents values of type int64 that are$/;"	t
int64	./debug/dwarf/entry.go	/^	\/\/ ClassStringAlt represents values of type int64 that are an$/;"	t
int64	./encoding/binary/binary.go	/^func (d *decoder) int64() int64 { return int64(d.uint64()) }$/;"	f
int64	./encoding/binary/binary.go	/^func (e *encoder) int64(x int64) { e.uint64(uint64(x)) }$/;"	f
int64	./encoding/gob/debug.go	/^func (deb *debugger) int64() int64 {$/;"	f
int64	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind int64 but not type int64. TODO: We can handle this unsafely.$/;"	t
int64	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind int64 but not type int64. TODO: We can handle this unsafely.$/;"	t
int64	./math/big/float_test.go	/^func (x *Float) int64() int64 {$/;"	f
int64	./time/time_test.go	/^	\/\/ largest negative value of type int64 in nanoseconds should fail$/;"	t
int64Hash	./runtime/alg.go	/^func int64Hash(i uint64, seed uintptr) uintptr {$/;"	f
int64Length	./encoding/asn1/marshal.go	/^func int64Length(i int64) (numBytes int) {$/;"	f
int64Test	./encoding/asn1/asn1_test.go	/^type int64Test struct {$/;"	t
int64TestData	./encoding/asn1/asn1_test.go	/^var int64TestData = []int64Test{$/;"	v
int64Tests	./cmd/compile/internal/big/int_test.go	/^var int64Tests = []int64{$/;"	v
int64Tests	./math/big/int_test.go	/^var int64Tests = []int64{$/;"	v
int64Value	./flag/flag.go	/^type int64Value int64$/;"	t
int64div	./cmd/compile/internal/gc/builtin/runtime.go	/^func int64div(int64, int64) int64$/;"	f
int64div	./runtime/vlrt.go	/^func int64div(n, d int64) int64 {$/;"	f
int64mod	./cmd/compile/internal/gc/builtin/runtime.go	/^func int64mod(int64, int64) int64$/;"	f
int64mod	./runtime/vlrt.go	/^func int64mod(n, d int64) int64 {$/;"	f
int64s	./math/rand/regress_test.go	/^	var int64s = []int64{1, 10, 32, 1 << 20, 1<<20 + 1, 1000000000, 1 << 30, 1<<31 - 2, 1<<31 - 1, 1000000000000000000, 1 << 60, 1<<63 - 2, 1<<63 - 1}$/;"	v
int64tofloat64	./cmd/compile/internal/gc/builtin/runtime.go	/^func int64tofloat64(int64) float64$/;"	f
int64tofloat64	./runtime/vlrt.go	/^func int64tofloat64(y int64) float64 {$/;"	f
int8	./builtin/builtin.go	/^type int8 int8$/;"	t
int8	./cmd/compile/internal/gc/reg.go	/^	etype      int8$/;"	t
int8	./encoding/binary/binary.go	/^func (d *decoder) int8() int8 { return int8(d.uint8()) }$/;"	f
int8	./encoding/binary/binary.go	/^func (e *encoder) int8(x int8) { e.uint8(uint8(x)) }$/;"	f
int8	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind int8 but not type int8. TODO: We can handle this unsafely.$/;"	t
int8	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind int8 but not type int8. TODO: We can handle this unsafely.$/;"	t
intArrays	./encoding/binary/binary_test.go	/^var intArrays = []interface{}{$/;"	v
intDataSize	./encoding/binary/binary.go	/^func intDataSize(data interface{}) int {$/;"	f
intEncoder	./encoding/json/encode.go	/^func intEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
intExpr	./cmd/cgo/gcc.go	/^func (c *typeConv) intExpr(n int64) ast.Expr {$/;"	f
intFlagString	./cmd/pprof/internal/driver/driver.go	/^func intFlagString(label string, value int) string {$/;"	f
intFromArg	./fmt/print.go	/^func intFromArg(a []interface{}, argNum int) (num int, isInt bool, newArgNum int) {$/;"	f
intFromHex	./crypto/rsa/pss_test.go	/^func intFromHex(hex string) int {$/;"	f
intLit	./runtime/symtab_test.go	/^var intLit = lineNumber() + \/\/ 34$/;"	v
intLiteral	./cmd/compile/internal/arm64/gsubr.go	/^func intLiteral(n *gc.Node) (x int64, ok bool) {$/;"	f
intLiteral	./cmd/compile/internal/ppc64/gsubr.go	/^func intLiteral(n *gc.Node) (x int64, ok bool) {$/;"	f
intLiteral	./cmd/cover/cover.go	/^func (f *File) intLiteral(i int) *ast.BasicLit {$/;"	f
intName	./debug/elf/elf.go	/^type intName struct {$/;"	t
intName	./debug/macho/macho.go	/^type intName struct {$/;"	t
intOne	./cmd/compile/internal/big/int.go	/^var intOne = &Int{false, natOne}$/;"	v
intOne	./math/big/int.go	/^var intOne = &Int{false, natOne}$/;"	v
intPairs	./sort/sort_test.go	/^type intPairs []struct {$/;"	t
intPtrValue	./database/sql/convert_test.go	/^func intPtrValue(intptr interface{}) interface{} {$/;"	f
intShiftTest	./cmd/compile/internal/big/int_test.go	/^type intShiftTest struct {$/;"	t
intShiftTest	./math/big/int_test.go	/^type intShiftTest struct {$/;"	t
intSizeMap	./cmd/cgo/main.go	/^var intSizeMap = map[string]int64{$/;"	v
intStringVal	./fmt/scan_test.go	/^var intStringVal IntString$/;"	v
intStruct	./encoding/asn1/marshal_test.go	/^type intStruct struct {$/;"	t
intSwap	./reflect/example_test.go	/^	var intSwap func(int, int) (int, int)$/;"	v
intVals	./cmd/compile/internal/big/int_test.go	/^var intVals = []string{$/;"	v
intVals	./math/big/int_test.go	/^var intVals = []string{$/;"	v
intValue	./database/sql/convert_test.go	/^func intValue(intptr interface{}) int64 {$/;"	f
intValue	./flag/flag.go	/^type intValue int$/;"	t
integer	./fmt/format.go	/^func (f *fmt) integer(a int64, base uint64, signedness bool, digits string) {$/;"	f
integer	./reflect/all_test.go	/^type integer int$/;"	t
integerDigits	./strconv/extfloat.go	/^	var integerDigits int$/;"	v
integers	./cmd/internal/obj/objfile.go	/^\/\/ The file layout and meaning of type integers are architecture-independent.$/;"	t
integers	./cmd/link/internal/ld/objfile.go	/^\/\/ The file layout and meaning of type integers are architecture-independent.$/;"	t
intelArg	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^func intelArg(inst *Inst, arg Arg) string {$/;"	f
intelOp	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^var intelOp = map[Op]string{$/;"	v
intelReg	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^var intelReg = [...]string{$/;"	v
inter	./reflect/all_test.go	/^	var inter struct {$/;"	v
interactive	./cmd/pprof/internal/driver/interactive.go	/^func interactive(p *profile.Profile, obj plugin.ObjTool, ui plugin.UI, f *flags) error {$/;"	f
interequal	./runtime/alg.go	/^func interequal(p, q unsafe.Pointer) bool {$/;"	f
interestingGoroutines	./net/http/main_test.go	/^func interestingGoroutines() (gs []string) {$/;"	f
interface	./reflect/type.go	/^	var ifunc interface{} = (func())(nil)$/;"	f
interface	./reflect/type.go	/^\/\/ with static type interface{} and extract its dynamic type information by$/;"	t
interface	./text/template/exec.go	/^		\/\/ If the object has type interface{}, dig down one level to the thing inside.$/;"	t
interfaceAddrTable	./net/interface_bsd.go	/^func interfaceAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceAddrTable	./net/interface_linux.go	/^func interfaceAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceAddrTable	./net/interface_stub.go	/^func interfaceAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceAddrTable	./net/interface_windows.go	/^func interfaceAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceByIndex	./net/interface.go	/^func interfaceByIndex(ift []Interface, index int) (*Interface, error) {$/;"	f
interfaceDecode	./encoding/gob/example_interface_test.go	/^func interfaceDecode(dec *gob.Decoder) Pythagoras {$/;"	f
interfaceEncode	./encoding/gob/example_interface_test.go	/^func interfaceEncode(enc *gob.Encoder, p Pythagoras) {$/;"	f
interfaceEncoder	./encoding/json/encode.go	/^func interfaceEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
interfaceEqual	./os/exec/exec.go	/^func interfaceEqual(a, b interface{}) bool {$/;"	f
interfaceFor	./go/types/ordering.go	/^func (check *Checker) interfaceFor(obj Object) *ast.InterfaceType {$/;"	f
interfaceIndirectTestI	./encoding/gob/encoder_test.go	/^type interfaceIndirectTestI interface {$/;"	t
interfaceIndirectTestT	./encoding/gob/encoder_test.go	/^type interfaceIndirectTestT struct{}$/;"	t
interfaceMulticastAddrTable	./net/interface_darwin.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceMulticastAddrTable	./net/interface_dragonfly.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceMulticastAddrTable	./net/interface_freebsd.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceMulticastAddrTable	./net/interface_linux.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceMulticastAddrTable	./net/interface_netbsd.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceMulticastAddrTable	./net/interface_openbsd.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceMulticastAddrTable	./net/interface_stub.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceMulticastAddrTable	./net/interface_windows.go	/^func interfaceMulticastAddrTable(ifi *Interface) ([]Addr, error) {$/;"	f
interfaceSetTests	./encoding/json/decode_test.go	/^var interfaceSetTests = []struct {$/;"	v
interfaceTable	./net/interface_bsd.go	/^func interfaceTable(ifindex int) ([]Interface, error) {$/;"	f
interfaceTable	./net/interface_linux.go	/^func interfaceTable(ifindex int) ([]Interface, error) {$/;"	f
interfaceTable	./net/interface_stub.go	/^func interfaceTable(ifindex int) ([]Interface, error) {$/;"	f
interfaceTable	./net/interface_windows.go	/^func interfaceTable(ifindex int) ([]Interface, error) {$/;"	f
interfaceToIPv4Addr	./net/sockopt_posix.go	/^func interfaceToIPv4Addr(ifi *Interface) (IP, error) {$/;"	f
interfaceType	./go/types/typexpr.go	/^func (check *Checker) interfaceType(iface *Interface, ityp *ast.InterfaceType, def *Named, path []*TypeName) {$/;"	f
interfaceType	./reflect/type.go	/^type interfaceType struct {$/;"	t
interfaceValue	./encoding/gob/debug.go	/^func (deb *debugger) interfaceValue(indent tab) {$/;"	f
interfacedcl	./cmd/compile/internal/gc/go.y	/^interfacedcl:$/;"	l
interfacedcl_list	./cmd/compile/internal/gc/go.y	/^interfacedcl_list:$/;"	l
interfacefield	./cmd/compile/internal/gc/dcl.go	/^func interfacefield(n *Node) *Type {$/;"	f
interfacetype	./cmd/compile/internal/gc/go.y	/^interfacetype:$/;"	l
interfacetype	./runtime/type.go	/^type interfacetype struct {$/;"	t
interhash	./runtime/alg.go	/^func interhash(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
interlaceScan	./image/gif/reader.go	/^type interlaceScan struct {$/;"	t
interlaceScan	./image/png/reader.go	/^type interlaceScan struct {$/;"	t
interlacing	./image/gif/reader.go	/^var interlacing = []interlaceScan{$/;"	v
interlacing	./image/png/reader.go	/^var interlacing = []interlaceScan{$/;"	v
internString	./cmd/compile/internal/gc/lex.go	/^func internString(b []byte) string {$/;"	f
internalError	./go/printer/printer.go	/^func (p *printer) internalError(msg ...interface{}) {$/;"	f
internalFunc	./cmd/doc/doc_test.go	/^			`func internalFunc(a int) bool`,     \/\/ No internal functions.$/;"	f
internalFunc	./cmd/doc/doc_test.go	/^			`func internalFunc\\(a int\\) bool`, \/\/ Internal functions.$/;"	f
internalFunc	./cmd/doc/doc_test.go	/^			`func internalFunc\\(a int\\) bool`,$/;"	f
internalFunc	./cmd/doc/testdata/pkg.go	/^func internalFunc(a int) bool$/;"	f
internalPkg	./cmd/api/goapi.go	/^var internalPkg = regexp.MustCompile(`(^|\/)internal($|\/)`)$/;"	v
internalVariable	./cmd/doc/doc_test.go	/^			`var internalVariable = 2`,          \/\/ No internal variables.$/;"	v
internalVariable	./cmd/doc/doc_test.go	/^			`var internalVariable = 2`,$/;"	v
internalVariable	./cmd/doc/testdata/pkg.go	/^var internalVariable = 2$/;"	v
internalpkg	./cmd/link/internal/ld/lib.go	/^var internalpkg = []string{$/;"	v
internedStrings	./cmd/compile/internal/gc/lex.go	/^var internedStrings = map[string]string{}$/;"	v
internetAddrList	./net/ipsock.go	/^func internetAddrList(net, addr string, deadline time.Time) (addrList, error) {$/;"	f
internetSocket	./net/ipsock_posix.go	/^func internetSocket(net string, laddr, raddr sockaddr, deadline time.Time, sotype, proto int, mode string) (fd *netFD, err error) {$/;"	f
interp	./cmd/link/internal/ld/elf.go	/^var interp string$/;"	v
interpretLineComment	./go/scanner/scanner.go	/^func (s *Scanner) interpretLineComment(text []byte) {$/;"	f
interrupt	./time/sys_plan9.go	/^func interrupt() {$/;"	f
interrupt	./time/sys_unix.go	/^func interrupt() {$/;"	f
interrupt	./time/sys_windows.go	/^func interrupt() {$/;"	f
interrupted	./cmd/go/signal.go	/^var interrupted = make(chan struct{})$/;"	v
intersperseComments	./go/printer/printer.go	/^func (p *printer) intersperseComments(next token.Position, tok token.Token) (wroteNewline, droppedFF bool) {$/;"	f
interval	./flag/example_test.go	/^type interval []time.Duration$/;"	t
intervalFlag	./flag/example_test.go	/^var intervalFlag interval$/;"	v
intp	./encoding/json/decode_test.go	/^func intp(x int) *int {$/;"	f
intpp	./encoding/json/decode_test.go	/^func intpp(x *int) **int {$/;"	f
intptr	./runtime/arch_386.go	/^type intptr int32 \/\/ TODO(rsc): remove$/;"	t
intptr	./runtime/arch_amd64.go	/^type intptr int64 \/\/ TODO(rsc): remove$/;"	t
intptr	./runtime/arch_amd64p32.go	/^type intptr int32 \/\/ TODO(rsc): remove$/;"	t
intptr	./runtime/arch_arm.go	/^type intptr int32 \/\/ TODO(rsc): remove$/;"	t
intptr	./runtime/arch_arm64.go	/^type intptr int64 \/\/ TODO(rsc): remove$/;"	t
intptr	./runtime/arch_ppc64.go	/^type intptr int64 \/\/ TODO(rsc): remove$/;"	t
intptr	./runtime/arch_ppc64le.go	/^type intptr int64 \/\/ TODO(rsc): remove$/;"	t
ints	./sort/sort_test.go	/^var ints = [...]int{74, 59, 238, -784, 9845, 959, 905, 0, 0, 42, 7586, -5467984, 7586}$/;"	v
intstring	./cmd/compile/internal/gc/builtin/runtime.go	/^func intstring(*[4]byte, int64) string$/;"	f
intstring	./runtime/string.go	/^func intstring(buf *[4]byte, v int64) string {$/;"	f
invalidAST	./go/types/errors.go	/^func (check *Checker) invalidAST(pos token.Pos, format string, args ...interface{}) {$/;"	f
invalidArg	./go/types/errors.go	/^func (check *Checker) invalidArg(pos token.Pos, format string, args ...interface{}) {$/;"	f
invalidEncodingTests	./time/time_test.go	/^var invalidEncodingTests = []struct {$/;"	v
invalidLength	./encoding/asn1/asn1.go	/^func invalidLength(offset, length, sliceLength int) bool {$/;"	f
invalidOp	./go/types/errors.go	/^func (check *Checker) invalidOp(pos token.Pos, format string, args ...interface{}) {$/;"	f
invalidRegexps	./regexp/syntax/parse_test.go	/^var invalidRegexps = []string{$/;"	v
invalidRequest	./net/rpc/server.go	/^var invalidRequest = struct{}{}$/;"	v
invalidUTF8Test	./encoding/asn1/asn1_test.go	/^type invalidUTF8Test struct {$/;"	t
invalidUnmarshalTests	./encoding/json/decode_test.go	/^var invalidUnmarshalTests = []struct {$/;"	v
invalidUnmarshalTextTests	./encoding/json/decode_test.go	/^var invalidUnmarshalTextTests = []struct {$/;"	v
invalidValueEncoder	./encoding/json/encode.go	/^func invalidValueEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
invalids	./go/parser/short_test.go	/^var invalids = []string{$/;"	v
inverse	./go/types/hilbert_test.go	/^func (g *gen) inverse(n int) {$/;"	f
inverseBWT	./compress/bzip2/bzip2.go	/^func inverseBWT(tt []uint32, origPtr uint, c []uint) uint32 {$/;"	f
invert	./mime/type.go	/^func invert(m map[string]string) map[string][]string {$/;"	f
invoke	./runtime/runtime-gdb.py	/^	def invoke(self, _arg, _from_tty):$/;"	m	class:GoroutinesCmd
invoke	./runtime/runtime-gdb.py	/^	def invoke(self, arg, _from_tty):$/;"	m	class:GoIfaceCmd
invoke	./runtime/runtime-gdb.py	/^	def invoke(self, arg, _from_tty):$/;"	m	class:GoroutineCmd
invoke	./runtime/runtime-gdb.py	/^	def invoke(self, obj):$/;"	m	class:DTypeFunc
invoke	./runtime/runtime-gdb.py	/^	def invoke(self, obj):$/;"	m	class:GoCapFunc
invoke	./runtime/runtime-gdb.py	/^	def invoke(self, obj):$/;"	m	class:GoLenFunc
invokeDot	./cmd/pprof/internal/commands/commands.go	/^func invokeDot(format string) PostProcessor {$/;"	f
invokeMacro	./cmd/asm/internal/lex/input.go	/^func (in *Input) invokeMacro(macro *Macro) {$/;"	f
invokeVisualizer	./cmd/pprof/internal/commands/commands.go	/^func invokeVisualizer(interactive **bool, format PostProcessor, suffix string, visualizers []string) PostProcessor {$/;"	f
ioSrv	./net/fd_windows.go	/^type ioSrv struct {$/;"	t
ioSrvReq	./net/fd_windows.go	/^type ioSrvReq struct {$/;"	t
ioSync	./syscall/syscall_plan9.go	/^var ioSync int64$/;"	v
ioSync	./syscall/syscall_unix.go	/^var ioSync int64$/;"	v
ioSync	./syscall/syscall_windows.go	/^var ioSync int64$/;"	v
iocphandle	./runtime/netpoll_windows.go	/^var iocphandle uintptr = _INVALID_HANDLE_VALUE \/\/ completion port io handle$/;"	v
ioctl	./syscall/exec_solaris.go	/^func ioctl(fd uintptr, req uintptr, arg uintptr) (err Errno)$/;"	f
iop	./encoding/gob/decode.go	/^	var iop, uop decOp$/;"	v
iop	./regexp/onepass.go	/^func iop(i *syntax.Inst) syntax.InstOp {$/;"	f
iota_	./cmd/compile/internal/gc/go.go	/^var iota_ int32$/;"	v
iov	./syscall/srpc_nacl.go	/^type iov struct {$/;"	t
iov	./syscall/syscall_bsd.go	/^	var iov Iovec$/;"	v
iov	./syscall/syscall_linux.go	/^	var iov Iovec$/;"	v
iov	./syscall/syscall_solaris.go	/^	var iov Iovec$/;"	v
ip	./encoding/gob/encoder_test.go	/^	var ip *int$/;"	v
ip	./encoding/gob/gobencdec_test.go	/^	var ip net.IP$/;"	v
ip	./flag/flag.go	/^		var ip = flag.Int("flagname", 1234, "help message for flagname")$/;"	v
ip	./net/hosts.go	/^	var ip IP$/;"	v
ip	./net/ip_test.go	/^	var ip IP$/;"	v
ip	./net/ipsock.go	/^	var ip IP$/;"	v
ip	./net/platform_test.go	/^	var ip IP$/;"	v
ip	./reflect/all_test.go	/^	var ip *int32$/;"	v
ip	./runtime/defs_windows_386.go	/^func (c *context) ip() uintptr { return uintptr(c.eip) }$/;"	f
ip	./runtime/defs_windows_amd64.go	/^func (c *context) ip() uintptr { return uintptr(c.rip) }$/;"	f
ip	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) ip() uint32      { return c.regs().r[12] }$/;"	f
ip	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) ip() uint32      { return c.regs().__gregs[12] }$/;"	f
ip	./runtime/signal_linux_arm.go	/^func (c *sigctxt) ip() uint32        { return c.regs().ip }$/;"	f
ip	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) ip() uint32      { return c.regs().r12 }$/;"	f
ip	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) ip() uint32       { return c.regs().__gregs[_REG_R12] }$/;"	f
ip	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) ip() uint32      { return c.regs().sc_r12 }$/;"	f
ip4	./net/external_test.go	/^	var ip4, ip6 IP$/;"	v
ipAddrFamilyTests	./net/ip_test.go	/^var ipAddrFamilyTests = []struct {$/;"	v
ipAddrScopeTests	./net/ip_test.go	/^var ipAddrScopeTests = []struct {$/;"	v
ipAttr	./net/addrselect.go	/^type ipAttr struct {$/;"	t
ipAttrOf	./net/addrselect.go	/^func ipAttrOf(ip IP) ipAttr {$/;"	f
ipConnLocalNameTests	./net/ipraw_test.go	/^var ipConnLocalNameTests = []struct {$/;"	v
ipEmptyString	./net/ip.go	/^func ipEmptyString(ip IP) string {$/;"	f
ipMaskStringTests	./net/ip_test.go	/^var ipMaskStringTests = []struct {$/;"	v
ipMaskTests	./net/ip_test.go	/^var ipMaskTests = []struct {$/;"	v
ipNetContainsTests	./net/ip_test.go	/^var ipNetContainsTests = []struct {$/;"	v
ipNetStringTests	./net/ip_test.go	/^var ipNetStringTests = []struct {$/;"	v
ipPointToPoint	./net/interface_linux.go	/^	var ipPointToPoint bool$/;"	v
ipStringTests	./net/ip_test.go	/^var ipStringTests = []struct {$/;"	v
ipToSockaddr	./net/ipsock_posix.go	/^func ipToSockaddr(family int, ip IP, port int, zone string) (syscall.Sockaddr, error) {$/;"	f
iptr	./reflect/type.go	/^	var iptr interface{} = (*unsafe.Pointer)(nil)$/;"	v
ipv4AddrToInterface	./net/sockopt_posix.go	/^func ipv4AddrToInterface(ip IP) (*Interface, error) {$/;"	f
ipv4MulticastListenerTests	./net/listen_test.go	/^var ipv4MulticastListenerTests = []struct {$/;"	v
ipv4loopback	./syscall/route_bsd_test.go	/^			var ipv4loopback, ipv6loopback bool$/;"	v
ipv4only	./net/ipsock.go	/^func ipv4only(addr IPAddr) bool {$/;"	f
ipv6LinkLocalUnicastAddr	./net/interface_test.go	/^func ipv6LinkLocalUnicastAddr(ifi *Interface) string {$/;"	f
ipv6LinkLocalUnicastTest	./net/main_test.go	/^type ipv6LinkLocalUnicastTest struct {$/;"	t
ipv6MulticastListenerTests	./net/listen_test.go	/^var ipv6MulticastListenerTests = []struct {$/;"	v
ipv6only	./net/ipsock.go	/^func ipv6only(addr IPAddr) bool {$/;"	f
ir	./crypto/rsa/rsa.go	/^	var ir *big.Int$/;"	v
is	./builtin/builtin.go	/^\/\/ The error built-in interface type is the conventional interface for$/;"	t
is	./builtin/builtin.go	/^\/\/ value. Unlike new, make's return type is the same as the type of its$/;"	t
is	./cmd/compile/internal/gc/align.go	/^		\/\/ width of func type is pointer$/;"	t
is	./cmd/compile/internal/gc/closure.go	/^			\/\/ if v->type is nil, it means v looked like it was$/;"	t
is	./cmd/compile/internal/gc/dcl.go	/^		\/\/ inner func is referring to var in outer func.$/;"	f
is	./cmd/compile/internal/gc/inl.go	/^			\/\/ Typecheck because inlvar is not necessarily a function parameter.$/;"	v
is	./cmd/compile/internal/gc/plive.go	/^	\/\/ avarinitall says the addressed var is initialized along all paths reaching the block exit.$/;"	v
is	./cmd/compile/internal/gc/plive.go	/^	\/\/ avarinitany says the addressed var is initialized along some path reaching the block exit.$/;"	v
is	./cmd/compile/internal/gc/reflect.go	/^	\/\/ which implies that the type is comparable (or else it would use ANOEQ).$/;"	t
is	./cmd/compile/internal/gc/reflect.go	/^\/\/ the given map type.  This type is not visible to users -$/;"	t
is	./cmd/compile/internal/gc/subr.go	/^	\/\/ 1. src type is identical to dst.$/;"	t
is	./cmd/compile/internal/gc/syntax.go	/^	OMAKECHAN  \/\/ make(Type, Left) (type is chan)$/;"	t
is	./cmd/compile/internal/gc/syntax.go	/^	OMAKEMAP   \/\/ make(Type, Left) (type is map)$/;"	t
is	./cmd/compile/internal/gc/syntax.go	/^	OMAKESLICE \/\/ make(Type, Left, Right) (type is slice)$/;"	t
is	./cmd/compile/internal/gc/typecheck.go	/^			\/\/ The conversion allocates, so only do it if the concrete type is huge.$/;"	t
is	./cmd/compile/internal/gc/typecheck.go	/^	\/\/ type is broken or missing, most likely a method call on a broken type$/;"	t
is	./cmd/dist/util.go	/^			fatal("$objtype is unset")$/;"	t
is	./cmd/doc/testdata/pkg.go	/^\/\/ Constants tied to ExportedType. (The type is a struct so this isn't valid Go,$/;"	t
is	./cmd/fix/typecheck.go	/^\/\/ x's type is "int" but T's type is "type int".$/;"	t
is	./cmd/go/test.go	/^	\/\/ We can't easily check that the type is *testing.M$/;"	t
is	./cmd/gofmt/simplify.go	/^				\/\/ if the outer literal's element type is a pointer type *T$/;"	t
is	./cmd/internal/obj/arm/asm5.go	/^			\/\/ type is not explicitly set by runtime. This assumes that$/;"	t
is	./cmd/internal/obj/pcln.go	/^\/\/ where func is the function, val is the current value, p is the instruction being$/;"	f
is	./cmd/link/internal/ld/pcln.go	/^\/\/ where func is the function, val is the current value, p is the instruction being$/;"	f
is	./cmd/vet/composite.go	/^	\/\/ Otherwise the type is a selector like pkg.Name.$/;"	t
is	./cmd/vet/copylock.go	/^	\/\/ type is a struct. (Interfaces and pointers are safe to copy.)$/;"	t
is	./cmd/vet/testdata/print.go	/^	fmt.Printf("%d", Formatter(true))          \/\/ correct (the type is responsible for formatting)$/;"	t
is	./cmd/vet/types.go	/^	\/\/ Check that the CompositeLit's type is a slice or array (which needs no field keys), if possible.$/;"	t
is	./cmd/vet/types.go	/^\/\/ hasBasicType reports whether x's type is a types.Basic with the given kind.$/;"	t
is	./debug/dwarf/type.go	/^	\/\/ Set err if error happens.  Not having a type is an error.$/;"	t
is	./debug/dwarf/type.go	/^\/\/ The only indication of its native integer type is its ByteSize$/;"	t
is	./encoding/asn1/asn1.go	/^\/\/ For integers, that type is int64.$/;"	t
is	./encoding/asn1/marshal.go	/^	\/\/ If no default value is given then the zero value for the type is$/;"	t
is	./encoding/gob/codec_test.go	/^	\/\/ Wire type is IT0, local type is RT1.$/;"	t
is	./encoding/gob/codec_test.go	/^	\/\/ Wire type is RT0, local type is RT1.$/;"	t
is	./encoding/gob/debug.go	/^\/\/ one whose type is known to gobs at bootstrap time.$/;"	t
is	./encoding/gob/decode.go	/^	\/\/ If this type is already in progress, it's a recursive type (e.g. map[string]*T).$/;"	t
is	./encoding/gob/doc.go	/^If p is transmitted a second time, the type is already known so the$/;"	t
is	./encoding/gob/doc.go	/^The representation of types is described below.  When a type is defined on a given$/;"	t
is	./encoding/gob/doc.go	/^at the top level will fail. A struct field of chan or func type is treated exactly$/;"	t
is	./encoding/gob/doc.go	/^encoded type is field 0, the second is field 1, etc.  When encoding a value, the$/;"	t
is	./encoding/gob/encode.go	/^	\/\/ If this type is already in progress, it's a recursive type (e.g. map[string]*T).$/;"	t
is	./encoding/gob/encoder.go	/^		\/\/ we need to tell the other side that the base type is a GobEncoder.$/;"	t
is	./encoding/gob/encoder.go	/^	\/\/ Make sure the type is known to the other side.$/;"	t
is	./encoding/gob/example_interface_test.go	/^	\/\/ engine which concrete type is being sent that implements the interface.$/;"	t
is	./encoding/gob/type.go	/^\/\/ If the user type is not valid, err will be non-nil.  To be used when the error handler$/;"	t
is	./encoding/gob/type.go	/^\/\/ If the user type is not valid, it calls error.$/;"	t
is	./encoding/json/encode.go	/^	\/\/ func is only used for recursive types.$/;"	f
is	./encoding/json/encode.go	/^\/\/ An anonymous struct field of interface type is treated the same as having$/;"	t
is	./flag/flag.go	/^\/\/ a bool flag with a one-byte name. For bool flags, the type is$/;"	t
is	./fmt/print.go	/^		\/\/ If the type is not simple, it might have methods.$/;"	t
is	./go/ast/ast.go	/^\/\/ A type is represented by a tree consisting of one$/;"	t
is	./go/ast/ast.go	/^\/\/ The direction of a channel type is indicated by one$/;"	t
is	./go/doc/reader.go	/^			\/\/ a type is present; determine its name$/;"	t
is	./go/doc/reader.go	/^			\/\/ assume type is imported$/;"	t
is	./go/doc/reader.go	/^			\/\/ no type is present but we have a constant declaration;$/;"	t
is	./go/doc/reader.go	/^		\/\/ Once an embedded type is embedded as a pointer type$/;"	t
is	./go/doc/reader.go	/^	embedded   embeddedSet \/\/ true if the embedded type is a pointer$/;"	t
is	./go/doc/reader.go	/^	isEmbedded bool        \/\/ true if this type is embedded$/;"	t
is	./go/doc/reader.go	/^	isStruct   bool        \/\/ true if this type is a struct$/;"	t
is	./go/doc/reader.go	/^\/\/ and whether the type is imported or not.$/;"	t
is	./go/printer/nodes.go	/^			\/\/ or the type is on a separate line)$/;"	t
is	./go/printer/testdata/parser.go	/^\/\/            should reject when a type\/raw type is obviously not allowed$/;"	t
is	./go/types/api.go	/^	\/\/ if the call result is not a constant, the recorded type is$/;"	t
is	./go/types/api_test.go	/^		\/\/ check that type is correct$/;"	t
is	./go/types/decl.go	/^	\/\/ spec: "If the base type is a struct type, the non-blank method$/;"	t
is	./go/types/expr.go	/^					\/\/ if the key is of interface type, the type is also significant when checking for duplicates$/;"	t
is	./go/types/expr.go	/^			\/\/ The result type is independent of operand types$/;"	t
is	./go/types/expr.go	/^	\/\/ If the new type is not final and still untyped, just$/;"	t
is	./go/types/expr.go	/^and the new type is propagated as needed. Untyped constant expression values$/;"	t
is	./go/types/object.go	/^	isField   bool \/\/ var is struct field$/;"	v
is	./go/types/operand.go	/^	\/\/ x's type is identical to T$/;"	t
is	./go/types/type.go	/^	Invalid BasicKind = iota \/\/ type is invalid$/;"	t
is	./go/types/type.go	/^	variadic bool   \/\/ true if the last parameter's type is of the form ...T (or string, for append built-in only)$/;"	t
is	./go/types/type.go	/^\/\/ contain methods whose receiver type is a different interface.$/;"	t
is	./go/types/typexpr.go	/^					\/\/ TODO(gri) This is not correct if the underlying type is unknown yet.$/;"	t
is	./html/template/context.go	/^\/\/ treated differently from stateText so the element type is necessary to$/;"	t
is	./image/draw/draw_test.go	/^\/\/ type is not *image.Paletted.$/;"	t
is	./internal/syscall/windows/registry/value.go	/^\/\/ GetValue is a low level function. If value's type is known, use the appropriate$/;"	t
is	./math/sinh.go	/^	The exponential func is called for arguments$/;"	f
is	./net/http/cookiejar/jar.go	/^\/\/ This struct type is not used outside of this package per se, but the exported$/;"	t
is	./net/http/request_test.go	/^	\/\/ Empty content type is legal - shoult be treated as$/;"	t
is	./net/http/server.go	/^\/\/ The HandlerFunc type is an adapter to allow the use of$/;"	t
is	./net/http/server.go	/^\/\/ This type is used to avoid extra allocations from cloning and\/or populating$/;"	t
is	./net/rpc/server.go	/^		- the method's type is exported.$/;"	t
is	./net/url/url.go	/^\/\/ The Userinfo type is an immutable encapsulation of username and$/;"	t
is	./reflect/type.go	/^	\/\/ AssignableTo reports whether a value of the type is assignable to type u.$/;"	t
is	./reflect/type.go	/^	\/\/ ConvertibleTo reports whether a value of the type is convertible to type u.$/;"	t
is	./reflect/type.go	/^\/\/ If the key type is not a valid map key type (that is, if it does$/;"	t
is	./reflect/type.go	/^\/\/ isReflexive reports whether the == operation on the type is reflexive.$/;"	t
is	./reflect/type.go	/^\/\/ rtype is the common implementation of most values.$/;"	t
is	./reflect/value.go	/^\/\/ It panics if v's kind is not Chan or if x's type is not the same type as v's element type.$/;"	t
is	./runtime/chan.go	/^		\/\/ buf points into the same allocation, elemtype is persistent.$/;"	t
is	./runtime/error.go	/^	\/\/ errors from ordinary errors: a type is a$/;"	t
is	./runtime/hashmap.go	/^	\/\/ make sure zero of element type is available.$/;"	t
is	./runtime/stubs.go	/^\/\/ cgocallback_gofunc is not called from go, only from cgocallback,$/;"	f
is	./runtime/trace.go	/^	\/\/ If number is >= 3, then the event type is followed by event length in bytes.$/;"	t
is	./sync/pool.go	/^	local     unsafe.Pointer \/\/ local fixed-size per-P pool, actual type is [P]poolLocal$/;"	t
is	./syscall/flock_linux_32bit.go	/^	\/\/ Flock_t type is SYS_FCNTL64, not SYS_FCNTL.$/;"	t
is16	./unicode/letter.go	/^func is16(ranges []Range16, r uint16) bool {$/;"	f
is32	./unicode/letter.go	/^func is32(ranges []Range32, r uint32) bool {$/;"	f
is32bit	./go/constant/value.go	/^func is32bit(x int64) bool {$/;"	f
is63bit	./go/constant/value.go	/^func is63bit(x int64) bool {$/;"	f
is64	./cmd/link/internal/ld/ldelf.go	/^	var is64 int$/;"	v
is64	./cmd/link/internal/ld/ldmacho.go	/^	var is64 bool$/;"	v
isASCII	./archive/tar/common.go	/^func isASCII(s string) bool {$/;"	f
isASCIILetter	./encoding/json/fold_test.go	/^func isASCIILetter(b byte) bool {$/;"	f
isASCIILetter	./net/textproto/textproto.go	/^func isASCIILetter(b byte) bool {$/;"	f
isASCIISpace	./net/http/internal/chunked.go	/^func isASCIISpace(b byte) bool {$/;"	f
isASCIISpace	./net/textproto/textproto.go	/^func isASCIISpace(b byte) bool {$/;"	f
isAbs	./os/stat_windows.go	/^func isAbs(path string) (b bool) {$/;"	f
isAbsTests	./path/path_test.go	/^var isAbsTests = []IsAbsTest{$/;"	v
isAlphaNum	./os/env.go	/^func isAlphaNum(c uint8) bool {$/;"	f
isAlphaNumeric	./text/template/parse/lex.go	/^func isAlphaNumeric(r rune) bool {$/;"	f
isArg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (Imm) isArg() {}$/;"	f
isArg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (Mem) isArg() {}$/;"	f
isArg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (Reg) isArg() {}$/;"	f
isArg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func (Rel) isArg() {}$/;"	f
isAtext	./net/mail/message.go	/^func isAtext(c byte, dot bool) bool {$/;"	f
isBad	./database/sql/fakedb_test.go	/^func (c *fakeConn) isBad() bool {$/;"	f
isBig_ceil	./math/floor_amd64.s	/^isBig_ceil:$/;"	l
isBig_floor	./math/floor_amd64.s	/^isBig_floor:$/;"	l
isBig_trunc	./math/floor_amd64.s	/^isBig_trunc:$/;"	l
isBinary	./go/printer/nodes.go	/^func isBinary(expr ast.Expr) bool {$/;"	f
isBlank	./cmd/fix/fix.go	/^func isBlank(n ast.Expr) bool {$/;"	f
isBlank	./cmd/gofmt/simplify.go	/^func isBlank(x ast.Expr) bool {$/;"	f
isBlank	./go/doc/comment.go	/^func isBlank(s string) bool {$/;"	f
isBlank	./go/printer/printer.go	/^func isBlank(s string) bool {$/;"	f
isBoolFlag	./cmd/go/testflag.go	/^func isBoolFlag(v flag.Value) bool {$/;"	f
isBoolean	./go/types/predicates.go	/^func isBoolean(typ Type) bool {$/;"	f
isBoundaryDelimiterLine	./mime/multipart/multipart.go	/^func (mr *Reader) isBoundaryDelimiterLine(line []byte) (ret bool) {$/;"	f
isBroken	./net/http/transport.go	/^func (pc *persistConn) isBroken() bool {$/;"	f
isBuildID	./cmd/pprof/internal/driver/driver.go	/^func isBuildID(id string) bool {$/;"	f
isBuiltin	./cmd/cgo/out.go	/^var isBuiltin = map[string]bool{$/;"	v
isBytesOrRunes	./go/types/conversions.go	/^func isBytesOrRunes(typ Type) bool {$/;"	f
isCSSNmchar	./html/template/css.go	/^func isCSSNmchar(r rune) bool {$/;"	f
isCSSSpace	./html/template/css.go	/^func isCSSSpace(b byte) bool {$/;"	f
isCall	./cmd/fix/fix.go	/^func isCall(t ast.Expr, pkg, name string) bool {$/;"	f
isCanceled	./net/http/transport.go	/^func (pc *persistConn) isCanceled() bool {$/;"	f
isChar	./net/http/lex_test.go	/^func isChar(c rune) bool { return c <= 127 }$/;"	f
isCharClass	./regexp/syntax/parse.go	/^func isCharClass(re *Regexp) bool {$/;"	f
isCheckmarked	./runtime/mbitmap.go	/^func (h heapBits) isCheckmarked(size uintptr) bool {$/;"	f
isCleanstack	./runtime/syscall_windows.go	/^func (c *wincallbackcontext) isCleanstack() bool {$/;"	f
isComment	./html/template/context.go	/^func isComment(s state) bool {$/;"	f
isComparison	./go/types/expr.go	/^func isComparison(op token.Token) bool {$/;"	f
isComplex	./go/types/predicates.go	/^func isComplex(typ Type) bool {$/;"	f
isCondJmp	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var isCondJmp = [maxOp + 1]bool{$/;"	v
isConstType	./go/types/predicates.go	/^func isConstType(typ Type) bool {$/;"	f
isCookieDomainName	./net/http/cookie.go	/^func isCookieDomainName(s string) bool {$/;"	f
isCookieNameValid	./net/http/cookie.go	/^func isCookieNameValid(raw string) bool {$/;"	f
isCtl	./net/http/lex_test.go	/^func isCtl(c rune) bool { return c <= 31 || c == 127 }$/;"	f
isDecimal	./text/scanner/scanner.go	/^func isDecimal(ch rune) bool { return '0' <= ch && ch <= '9' }$/;"	f
isDigit	./bytes/bytes_test.go	/^var isDigit = predicate{unicode.IsDigit, "IsDigit"}$/;"	v
isDigit	./go/scanner/scanner.go	/^func isDigit(ch rune) bool {$/;"	f
isDigit	./reflect/all_test.go	/^func isDigit(c uint8) bool { return '0' <= c && c <= '9' }$/;"	f
isDigit	./strings/strings_test.go	/^var isDigit = predicate{unicode.IsDigit, "IsDigit"}$/;"	v
isDigit	./time/format.go	/^func isDigit(s string, i int) bool {$/;"	f
isDimNaN	./math/dim_amd64.s	/^isDimNaN:$/;"	l
isDir	./cmd/go/pkg.go	/^func isDir(path string) bool {$/;"	f
isDirCache	./cmd/go/pkg.go	/^var isDirCache = map[string]bool{}$/;"	v
isDirectIface	./runtime/typekind.go	/^func isDirectIface(t *_type) bool {$/;"	f
isDomainJoined	./os/user/lookup_windows.go	/^func isDomainJoined() (bool, error) {$/;"	f
isDomainName	./net/dnsclient.go	/^func isDomainName(s string) bool {$/;"	f
isEAGAIN	./crypto/rand/rand_unix.go	/^var isEAGAIN func(error) bool \/\/ set by eagain.go on unix systems$/;"	v
isEmpty	./cmd/gofmt/simplify.go	/^func isEmpty(f *ast.File, g *ast.GenDecl) bool {$/;"	f
isEmptyString	./cmd/fix/fix.go	/^func isEmptyString(n ast.Expr) bool {$/;"	f
isEmptyTest	./text/template/parse/parse_test.go	/^type isEmptyTest struct {$/;"	t
isEmptyTests	./text/template/parse/parse_test.go	/^var isEmptyTests = []isEmptyTest{$/;"	v
isEmptyValue	./encoding/json/encode.go	/^func isEmptyValue(v reflect.Value) bool {$/;"	f
isEmptyValue	./encoding/xml/marshal.go	/^func isEmptyValue(v reflect.Value) bool {$/;"	f
isEndOfLine	./text/template/parse/lex.go	/^func isEndOfLine(r rune) bool {$/;"	f
isErrorMethodCall	./cmd/vet/types.go	/^func (f *File) isErrorMethodCall(call *ast.CallExpr) bool {$/;"	f
isEven32	./cmd/compile/internal/big/rat_test.go	/^func isEven32(f float32) bool { return math.Float32bits(f)&1 == 0 }$/;"	f
isEven32	./math/big/rat_test.go	/^func isEven32(f float32) bool { return math.Float32bits(f)&1 == 0 }$/;"	f
isEven64	./cmd/compile/internal/big/rat_test.go	/^func isEven64(f float64) bool { return math.Float64bits(f)&1 == 0 }$/;"	f
isEven64	./math/big/rat_test.go	/^func isEven64(f float64) bool { return math.Float64bits(f)&1 == 0 }$/;"	f
isExcludingLatin	./unicode/letter.go	/^func isExcludingLatin(rangeTab *RangeTable, r rune) bool {$/;"	f
isExist	./os/error_plan9.go	/^func isExist(err error) bool {$/;"	f
isExist	./os/error_unix.go	/^func isExist(err error) bool {$/;"	f
isExist	./os/error_windows.go	/^func isExist(err error) bool {$/;"	f
isExistTests	./os/error_test.go	/^var isExistTests = []struct {$/;"	v
isExported	./cmd/doc/main.go	/^func isExported(name string) bool {$/;"	f
isExported	./encoding/gob/type.go	/^func isExported(name string) bool {$/;"	f
isExported	./net/rpc/server.go	/^func isExported(name string) bool {$/;"	f
isExportedOrBuiltinType	./net/rpc/server.go	/^func isExportedOrBuiltinType(t reflect.Type) bool {$/;"	f
isExportedRuntime	./runtime/traceback.go	/^func isExportedRuntime(name string) bool {$/;"	f
isExprSwitch	./go/printer/testdata/parser.go	/^func isExprSwitch(s ast.Stmt) bool {$/;"	f
isFinalBoundary	./mime/multipart/multipart.go	/^func (mr *Reader) isFinalBoundary(line []byte) bool {$/;"	f
isFinite	./cmd/compile/internal/big/ratconv_test.go	/^func isFinite(f float64) bool {$/;"	f
isFinite	./math/big/ratconv_test.go	/^func isFinite(f float64) bool {$/;"	f
isFloat	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func isFloat(op Op) bool {$/;"	f
isFloat	./go/types/predicates.go	/^func isFloat(typ Type) bool {$/;"	f
isFloatInt	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func isFloatInt(op Op) bool {$/;"	f
isFormat	./cmd/pprof/internal/driver/driver.go	/^func (f *flags) isFormat(format string) bool {$/;"	f
isGo12	./debug/gosym/pclntab.go	/^func (t *LineTable) isGo12() bool {$/;"	f
isGoFile	./cmd/fix/main.go	/^func isGoFile(f os.FileInfo) bool {$/;"	f
isGoFile	./cmd/gofmt/gofmt.go	/^func isGoFile(f os.FileInfo) bool {$/;"	f
isGoFile	./go/doc/doc_test.go	/^func isGoFile(fi os.FileInfo) bool {$/;"	f
isGoFile	./go/doc/headscan.go	/^func isGoFile(fi os.FileInfo) bool {$/;"	f
isGoGenerate	./cmd/go/generate.go	/^func isGoGenerate(buf []byte) bool {$/;"	f
isGoRelease	./cmd/go/pkg.go	/^var isGoRelease = strings.HasPrefix(runtime.Version(), "go1")$/;"	v
isHex	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func isHex(b byte) bool { return b == '0' || unhex[b] > 0 }$/;"	f
isHex	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func isHex(b byte) bool { return b == '0' || unhex[b] > 0 }$/;"	f
isHex	./html/template/css.go	/^func isHex(c byte) bool {$/;"	f
isHexConstant	./text/template/exec.go	/^func isHexConstant(s string) bool {$/;"	f
isIP	./net/http/cookiejar/jar.go	/^func isIP(host string) bool {$/;"	f
isIPTests	./net/http/cookiejar/jar_test.go	/^var isIPTests = map[string]bool{$/;"	v
isIPv4	./net/ipsock.go	/^func isIPv4(addr Addr) bool {$/;"	f
isIdent	./cmd/fix/fix.go	/^func isIdent(n interface{}) *ast.Ident {$/;"	f
isIdentRune	./cmd/asm/internal/lex/tokenizer.go	/^func isIdentRune(ch rune, i int) bool {$/;"	f
isIdentRune	./text/scanner/scanner.go	/^func (s *Scanner) isIdentRune(ch rune, i int) bool {$/;"	f
isIdentifier	./cmd/doc/main.go	/^func isIdentifier(name string) {$/;"	f
isIdentity	./net/http/transfer.go	/^func isIdentity(te []string) bool { return len(te) == 1 && te[0] == "identity" }$/;"	f
isImm	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func isImm(a Arg) bool {$/;"	f
isInCharacterRange	./encoding/xml/xml.go	/^func isInCharacterRange(r rune) (inrange bool) {$/;"	f
isInGoToolsRepo	./cmd/go/tool.go	/^func isInGoToolsRepo(toolName string) bool {$/;"	f
isInTag	./html/template/context.go	/^func isInTag(s state) bool {$/;"	f
isInf	./math/hypot_amd64.s	/^isInf:$/;"	l
isInfOrNaN	./math/hypot_amd64.s	/^isInfOrNaN:$/;"	l
isInfOrNaN	./math/log_amd64.s	/^isInfOrNaN:$/;"	l
isInfOrNaN	./math/sincos_amd64.s	/^isInfOrNaN: \/\/ return (NaN, NaN)$/;"	l
isInteger	./go/types/operand.go	/^func (x *operand) isInteger() bool {$/;"	f
isInteger	./go/types/predicates.go	/^func isInteger(typ Type) bool {$/;"	f
isJSIdentPart	./html/template/js.go	/^func isJSIdentPart(r rune) bool {$/;"	f
isLeap	./time/time.go	/^func isLeap(year int) bool {$/;"	f
isLetter	./go/scanner/scanner.go	/^func isLetter(ch rune) bool {$/;"	f
isLit	./go/printer/printer.go	/^		var isLit bool$/;"	v
isLiteralType	./go/parser/parser.go	/^func isLiteralType(x ast.Expr) bool {$/;"	f
isLiteralType	./go/printer/testdata/parser.go	/^func isLiteralType(x ast.Expr) bool {$/;"	f
isLoop	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var isLoop = [maxOp + 1]bool{$/;"	v
isLowerUpper	./unicode/maketables.go	/^func (c *caseState) isLowerUpper() bool {$/;"	f
isMarked	./runtime/mbitmap.go	/^func (h heapBits) isMarked() bool {$/;"	f
isMaxNaN	./math/dim_amd64.s	/^isMaxNaN: \/\/ return NaN$/;"	l
isMaxZero	./math/dim_amd64.s	/^isMaxZero:$/;"	l
isMem	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func isMem(a Arg) bool {$/;"	f
isMinNaN	./math/dim_amd64.s	/^isMinNaN: \/\/ return NaN$/;"	l
isMinZero	./math/dim_amd64.s	/^isMinZero:$/;"	l
isNaN	./sort/sort.go	/^func isNaN(f float64) bool {$/;"	f
isNaNSC	./math/cmplx/cmath_test.go	/^var isNaNSC = []bool{$/;"	v
isName	./cmd/cgo/util.go	/^func isName(s string) bool {$/;"	f
isName	./cmd/fix/fix.go	/^func isName(n ast.Expr, name string) bool {$/;"	f
isName	./encoding/xml/xml.go	/^func isName(s []byte) bool {$/;"	f
isNameByte	./encoding/xml/xml.go	/^func isNameByte(c byte) bool {$/;"	f
isNameString	./encoding/xml/xml.go	/^func isNameString(s string) bool {$/;"	f
isNamed	./go/types/predicates.go	/^func isNamed(typ Type) bool {$/;"	f
isNegInf	./math/dim_amd64.s	/^isNegInf: \/\/ return -Inf$/;"	l
isNegInt	./math/gamma.go	/^func isNegInt(x float64) bool {$/;"	f
isNegative	./math/log_amd64.s	/^isNegative:$/;"	l
isNetWriteError	./net/http/transport.go	/^func isNetWriteError(err error) bool {$/;"	f
isNil	./cmd/vet/nilfunc.go	/^func (f *File) isNil(e ast.Expr) bool {$/;"	f
isNil	./go/types/operand.go	/^func (x *operand) isNil() bool {$/;"	f
isNil	./text/template/funcs.go	/^		var isNil bool$/;"	v
isNonNil	./reflect/all_test.go	/^func isNonNil(x interface{}) {$/;"	f
isNormalized	./cmd/compile/internal/big/int_test.go	/^func isNormalized(x *Int) bool {$/;"	f
isNormalized	./math/big/int_test.go	/^func isNormalized(x *Int) bool {$/;"	f
isNotExist	./os/error_plan9.go	/^func isNotExist(err error) bool {$/;"	f
isNotExist	./os/error_unix.go	/^func isNotExist(err error) bool {$/;"	f
isNotExist	./os/error_windows.go	/^func isNotExist(err error) bool {$/;"	f
isNotExist	./time/sys_unix.go	/^func isNotExist(err error) bool { return err == syscall.ENOENT }$/;"	f
isNotPrint16	./strconv/isprint.go	/^var isNotPrint16 = []uint16{$/;"	v
isNotPrint16	./strconv/makeisprint.go	/^	fmt.Fprintf(&buf, "var isNotPrint16 = []uint16{\\n")$/;"	v
isNotPrint32	./strconv/isprint.go	/^var isNotPrint32 = []uint16{ \/\/ add 0x10000 to each entry$/;"	v
isNotPrint32	./strconv/makeisprint.go	/^	fmt.Fprintf(&buf, "var isNotPrint32 = []uint16{ \/\/ add 0x10000 to each entry\\n")$/;"	v
isNotToken	./net/http/lex.go	/^func isNotToken(r rune) bool {$/;"	f
isNotTokenChar	./mime/mediatype.go	/^func isNotTokenChar(r rune) bool {$/;"	f
isNumeric	./go/types/predicates.go	/^func isNumeric(typ Type) bool {$/;"	f
isOWS	./net/http/lex.go	/^func isOWS(b byte) bool { return b == ' ' || b == '\\t' }$/;"	f
isOddInt	./math/pow.go	/^func isOddInt(x float64) bool {$/;"	f
isOneLineFieldList	./go/printer/nodes.go	/^func (p *printer) isOneLineFieldList(list []*ast.Field) bool {$/;"	f
isOptHdrEq	./debug/pe/file_test.go	/^func isOptHdrEq(a, b interface{}) bool {$/;"	f
isOrdered	./go/types/predicates.go	/^func isOrdered(typ Type) bool {$/;"	f
isPackageClause	./cmd/yacc/yacc.go	/^func isPackageClause(line []rune) bool {$/;"	f
isPermission	./os/error_plan9.go	/^func isPermission(err error) bool {$/;"	f
isPermission	./os/error_unix.go	/^func isPermission(err error) bool {$/;"	f
isPermission	./os/error_windows.go	/^func isPermission(err error) bool {$/;"	f
isPkgDot	./cmd/fix/fix.go	/^func isPkgDot(t ast.Expr, pkg, name string) bool {$/;"	f
isPlatformError	./net/error_plan9_test.go	/^func isPlatformError(err error) bool {$/;"	f
isPlatformError	./net/error_posix_test.go	/^func isPlatformError(err error) bool {$/;"	f
isPointer	./go/types/conversions.go	/^func isPointer(typ Type) bool {$/;"	f
isPointer	./runtime/mbitmap.go	/^func (h heapBits) isPointer() bool {$/;"	f
isPosInf	./math/dim_amd64.s	/^isPosInf: \/\/ return +Inf$/;"	l
isPrefix	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func isPrefix(text string) bool {$/;"	f
isPrefixByte	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func isPrefixByte(b byte) bool {$/;"	f
isPrime	./math/all_test.go	/^func isPrime(i int) bool {$/;"	f
isPrint	./strconv/makeisprint.go	/^func isPrint(r rune) bool {$/;"	f
isPrint16	./strconv/isprint.go	/^var isPrint16 = []uint16{$/;"	v
isPrint16	./strconv/makeisprint.go	/^	fmt.Fprintf(&buf, "var isPrint16 = []uint16{\\n")$/;"	v
isPrint32	./strconv/isprint.go	/^var isPrint32 = []uint32{$/;"	v
isPrint32	./strconv/makeisprint.go	/^	fmt.Fprintf(&buf, "var isPrint32 = []uint32{\\n")$/;"	v
isPrintable	./encoding/asn1/asn1.go	/^func isPrintable(b byte) bool {$/;"	f
isProcessRunning	./net/http/cgi/plan9_test.go	/^func isProcessRunning(t *testing.T, pid int) bool {$/;"	f
isProcessRunning	./net/http/cgi/posix_test.go	/^func isProcessRunning(t *testing.T, pid int) bool {$/;"	f
isProfileType	./cmd/pprof/internal/profile/legacy_profile.go	/^func isProfileType(p *Profile, t []string) bool {$/;"	f
isPtrPkgDot	./cmd/fix/fix.go	/^func isPtrPkgDot(t ast.Expr, pkg, name string) bool {$/;"	f
isQPDiscardWhitespace	./mime/quotedprintable/reader.go	/^func isQPDiscardWhitespace(r rune) bool {$/;"	f
isQtext	./net/mail/message.go	/^func isQtext(c byte) bool {$/;"	f
isRGB	./image/jpeg/reader.go	/^func (d *decoder) isRGB() bool {$/;"	f
isRange	./go/parser/parser.go	/^	var isRange bool$/;"	v
isReadonlyError	./os/path_test.go	/^var isReadonlyError = func(error) bool { return false }$/;"	v
isRedundant	./cmd/pprof/internal/report/report.go	/^func isRedundant(e *edgeInfo) bool {$/;"	f
isReflexive	./reflect/type.go	/^func isReflexive(t *rtype) bool {$/;"	f
isReg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func isReg(a Arg) bool {$/;"	f
isRegisteredTestName	./cmd/dist/test.go	/^func (t *tester) isRegisteredTestName(testName string) bool {$/;"	f
isSafeUintptr	./cmd/vet/unsafeptr.go	/^func (f *File) isSafeUintptr(x ast.Expr) bool {$/;"	f
isSecure	./cmd/go/vcs.go	/^func (v *vcsCmd) isSecure(repo string) bool {$/;"	f
isSecureScheme	./cmd/go/vcs.go	/^var isSecureScheme = map[string]bool{$/;"	v
isSegReg	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func isSegReg(a Arg) bool {$/;"	f
isSegment	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func isSegment(p Prefix) bool {$/;"	f
isSent	./encoding/gob/type.go	/^func isSent(field *reflect.StructField) bool {$/;"	f
isSeparator	./bytes/bytes.go	/^func isSeparator(r rune) bool {$/;"	f
isSeparator	./net/http/lex_test.go	/^func isSeparator(c rune) bool {$/;"	f
isSeparator	./strings/strings.go	/^func isSeparator(r rune) bool {$/;"	f
isShellSpecialVar	./os/env.go	/^func isShellSpecialVar(c uint8) bool {$/;"	f
isShift	./go/types/expr.go	/^func isShift(op token.Token) bool {$/;"	f
isSingleBytes	./regexp/exec_test.go	/^func isSingleBytes(s string) bool {$/;"	f
isSlash	./path/filepath/path_windows.go	/^func isSlash(c uint8) bool {$/;"	f
isSlash	./syscall/exec_windows.go	/^func isSlash(c uint8) bool {$/;"	f
isSmallMakeSlice	./cmd/compile/internal/gc/walk.go	/^func isSmallMakeSlice(n *Node) bool {$/;"	f
isSpace	./bufio/scan.go	/^func isSpace(r rune) bool {$/;"	f
isSpace	./bytes/bytes_test.go	/^var isSpace = predicate{unicode.IsSpace, "IsSpace"}$/;"	v
isSpace	./encoding/json/scanner.go	/^func isSpace(c rune) bool {$/;"	f
isSpace	./fmt/scan.go	/^func isSpace(r rune) bool {$/;"	f
isSpace	./net/parse.go	/^func isSpace(b byte) bool {$/;"	f
isSpace	./strings/strings_test.go	/^var isSpace = predicate{unicode.IsSpace, "IsSpace"}$/;"	v
isSpace	./text/template/parse/lex.go	/^func isSpace(r rune) bool {$/;"	f
isSpace	./time/zoneinfo_plan9.go	/^func isSpace(r rune) bool {$/;"	f
isSpaceOrComment	./cmd/pprof/internal/profile/legacy_profile.go	/^func isSpaceOrComment(line string) bool {$/;"	f
isStale	./cmd/go/go_test.go	/^func (tg *testgoData) isStale(pkg string) bool {$/;"	f
isStale	./cmd/go/pkg.go	/^func isStale(p *Package) bool {$/;"	f
isString	./go/types/predicates.go	/^func isString(typ Type) bool {$/;"	f
isStringer	./cmd/vet/print.go	/^func isStringer(f *File, d *ast.FuncDecl) bool {$/;"	f
isStruct	./cmd/vet/types.go	/^func (pkg *Package) isStruct(c *ast.CompositeLit) (bool, string) {$/;"	f
isStructUnionClass	./cmd/cgo/gcc.go	/^func isStructUnionClass(x ast.Expr) bool {$/;"	f
isSuccess	./os/exec/lp_windows_test.go	/^func (test commandTest) isSuccess(rootDir, output string, err error) error {$/;"	f
isSupportedSignatureAndHash	./crypto/tls/common.go	/^func isSupportedSignatureAndHash(sigHash signatureAndHash, sigHashes []signatureAndHash) bool {$/;"	f
isSystemGoroutine	./runtime/traceback.go	/^func isSystemGoroutine(gp *g) bool {$/;"	f
isTSpecial	./mime/grammar.go	/^func isTSpecial(r rune) bool {$/;"	f
isTerminating	./go/types/return.go	/^func (check *Checker) isTerminating(s ast.Stmt, label string) bool {$/;"	f
isTerminatingList	./go/types/return.go	/^func (check *Checker) isTerminatingList(list []ast.Stmt, label string) bool {$/;"	f
isTerminatingSwitch	./go/types/return.go	/^func (check *Checker) isTerminatingSwitch(body *ast.BlockStmt, label string) bool {$/;"	f
isTest	./cmd/go/test.go	/^func isTest(name, prefix string) bool {$/;"	f
isTest	./go/doc/example.go	/^func isTest(name, prefix string) bool {$/;"	f
isTestFile	./cmd/go/test.go	/^func isTestFile(file string) bool {$/;"	f
isTestMain	./cmd/go/test.go	/^func isTestMain(fn *ast.FuncDecl) bool {$/;"	f
isToken	./mime/grammar.go	/^func isToken(s string) bool {$/;"	f
isToken	./net/http/lex.go	/^func isToken(r rune) bool {$/;"	f
isTokenBoundary	./net/http/header.go	/^func isTokenBoundary(b byte) bool {$/;"	f
isTokenChar	./mime/grammar.go	/^func isTokenChar(r rune) bool {$/;"	f
isTokenTable	./net/http/lex.go	/^var isTokenTable = [127]bool{$/;"	v
isTopName	./cmd/fix/fix.go	/^func isTopName(n ast.Expr, name string) bool {$/;"	f
isTrue	./cmd/vet/main.go	/^func (ts triState) isTrue() bool {$/;"	f
isTrue	./text/template/exec.go	/^func isTrue(val reflect.Value) (truth, ok bool) {$/;"	f
isType	./cmd/fix/typecheck.go	/^func isType(t string) bool {$/;"	f
isTypeName	./go/parser/parser.go	/^func isTypeName(x ast.Expr) bool {$/;"	f
isTypeName	./go/printer/nodes.go	/^func isTypeName(x ast.Expr) bool {$/;"	f
isTypeName	./go/printer/testdata/parser.go	/^func isTypeName(x ast.Expr) bool {$/;"	f
isTypeSwitchAssert	./go/parser/parser.go	/^func isTypeSwitchAssert(x ast.Expr) bool {$/;"	f
isTypeSwitchGuard	./go/parser/parser.go	/^func isTypeSwitchGuard(s ast.Stmt) bool {$/;"	f
isTyped	./go/types/predicates.go	/^func isTyped(typ Type) bool {$/;"	f
isUNC	./path/filepath/path_windows.go	/^func isUNC(path string) bool {$/;"	f
isUintptr	./go/types/conversions.go	/^func isUintptr(typ Type) bool {$/;"	f
isUnsafePointer	./go/types/conversions.go	/^func isUnsafePointer(typ Type) bool {$/;"	f
isUnsigned	./go/types/predicates.go	/^func isUnsigned(typ Type) bool {$/;"	f
isUntyped	./go/types/predicates.go	/^func isUntyped(typ Type) bool {$/;"	f
isUpper	./bytes/bytes_test.go	/^var isUpper = predicate{unicode.IsUpper, "IsUpper"}$/;"	v
isUpper	./cmd/doc/main.go	/^func isUpper(name string) bool {$/;"	f
isUpper	./strings/strings_test.go	/^var isUpper = predicate{unicode.IsUpper, "IsUpper"}$/;"	v
isUpperFold	./regexp/syntax/parse_test.go	/^func isUpperFold(r rune) bool {$/;"	f
isUpperLower	./unicode/maketables.go	/^func (c *caseState) isUpperLower() bool {$/;"	f
isValid	./crypto/x509/verify.go	/^func (c *Certificate) isValid(certType int, currentChain []*Certificate, opts *VerifyOptions) error {$/;"	f
isValid	./net/error_test.go	/^func (e *OpError) isValid() error {$/;"	f
isValid	./reflect/all_test.go	/^func isValid(v Value) {$/;"	f
isValidCaptureName	./regexp/syntax/parse.go	/^func isValidCaptureName(name string) bool {$/;"	f
isValidDirective	./encoding/xml/marshal.go	/^func isValidDirective(dir Directive) bool {$/;"	f
isValidImport	./go/parser/parser.go	/^func isValidImport(lit string) bool {$/;"	f
isValidREX	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func isValidREX(x []byte) bool {$/;"	f
isValidRune	./bytes/bytes_test.go	/^var isValidRune = predicate{$/;"	v
isValidRune	./strings/strings_test.go	/^var isValidRune = predicate{$/;"	v
isValidTag	./encoding/json/encode.go	/^func isValidTag(s string) bool {$/;"	f
isVchar	./net/mail/message.go	/^func isVchar(c byte) bool {$/;"	f
isVisible	./go/doc/reader.go	/^func (r *reader) isVisible(name string) bool {$/;"	f
isWS	./net/http/sniff.go	/^func isWS(b byte) bool {$/;"	f
isWSP	./net/mail/message.go	/^func isWSP(c byte) bool {$/;"	f
isWhitespace	./go/ast/ast.go	/^func isWhitespace(ch byte) bool { return ch == ' ' || ch == '\\t' || ch == '\\n' || ch == '\\r' }$/;"	f
isWhitespace	./mime/quotedprintable/writer.go	/^func isWhitespace(b byte) bool {$/;"	f
isWildcard	./cmd/gofmt/rewrite.go	/^func isWildcard(s string) bool {$/;"	f
isWildcard	./net/iprawsock.go	/^func (a *IPAddr) isWildcard() bool {$/;"	f
isWildcard	./net/tcpsock.go	/^func (a *TCPAddr) isWildcard() bool {$/;"	f
isWildcard	./net/udpsock.go	/^func (a *UDPAddr) isWildcard() bool {$/;"	f
isWildcard	./net/unixsock.go	/^func (a *UnixAddr) isWildcard() bool {$/;"	f
isZero	./crypto/elliptic/p224.go	/^	var isZero, isP uint32$/;"	v
isZero	./encoding/gob/encode.go	/^func isZero(val reflect.Value) bool {$/;"	f
isZero	./math/hypot_amd64.s	/^isZero:$/;"	l
isZero	./math/log_amd64.s	/^isZero:$/;"	l
isZero	./math/sincos_amd64.s	/^isZero: \/\/ return (±0.0, 1.0)$/;"	l
isZeroBug	./encoding/gob/gobencdec_test.go	/^type isZeroBug struct {$/;"	t
isZeroBugArray	./encoding/gob/gobencdec_test.go	/^type isZeroBugArray [2]uint8$/;"	t
isZeroBugInterface	./encoding/gob/gobencdec_test.go	/^type isZeroBugInterface struct {$/;"	t
isZeroValue	./flag/flag.go	/^func isZeroValue(value string) bool {$/;"	f
isZeros	./net/ip.go	/^func isZeros(p IP) bool {$/;"	f
isZip64	./archive/zip/struct.go	/^func (fh *FileHeader) isZip64() bool {$/;"	f
is_eface	./runtime/runtime-gdb.py	/^def is_eface(val):$/;"	f
is_iface	./runtime/runtime-gdb.py	/^def is_iface(val):$/;"	f
is_inf	./math/hypot_386.s	/^is_inf:$/;"	l
isabs	./cmd/dist/util.go	/^func isabs(p string) bool {$/;"	f
isabstests	./path/filepath/path_test.go	/^var isabstests = []IsAbsTest{$/;"	v
isaddcon	./cmd/internal/obj/arm64/asm7.go	/^func isaddcon(v int64) int {$/;"	f
isaddrokay	./cmd/compile/internal/gc/order.go	/^func isaddrokay(n *Node) bool {$/;"	f
isalnum	./cmd/compile/internal/gc/util.go	/^func isalnum(c int) bool {$/;"	f
isalnum	./regexp/syntax/parse.go	/^func isalnum(c rune) bool {$/;"	f
isalpha	./cmd/compile/internal/gc/util.go	/^func isalpha(c int) bool {$/;"	f
isartificial	./cmd/compile/internal/gc/racewalk.go	/^func isartificial(n *Node) bool {$/;"	f
isax	./cmd/internal/obj/x86/asm6.go	/^func isax(a *obj.Addr) bool {$/;"	f
isbadbyte	./cmd/internal/obj/x86/asm6.go	/^func isbadbyte(a *obj.Addr) bool {$/;"	f
isbadimport	./cmd/compile/internal/gc/subr.go	/^func isbadimport(path string) bool {$/;"	f
isbitcon	./cmd/internal/obj/arm64/asm7.go	/^func isbitcon(v uint64) int {$/;"	f
isblank	./cmd/compile/internal/gc/subr.go	/^func isblank(n *Node) bool {$/;"	f
isblanksym	./cmd/compile/internal/gc/subr.go	/^func isblanksym(s *Sym) bool {$/;"	f
isbranch	./cmd/compile/internal/arm/peep.go	/^func isbranch(p *obj.Prog) bool {$/;"	f
iscall	./cmd/compile/internal/gc/plive.go	/^func iscall(prog *obj.Prog, name *obj.LSym) bool {$/;"	f
iscallret	./cmd/compile/internal/gc/walk.go	/^func iscallret(n *Node) bool {$/;"	f
iscgo	./runtime/cgo.go	/^var iscgo bool$/;"	v
iscomptype	./cmd/compile/internal/gc/typecheck.go	/^func iscomptype(t *Type) bool {$/;"	f
isdconst	./cmd/compile/internal/arm/peep.go	/^func isdconst(a *obj.Addr) bool {$/;"	f
isdeferreturn	./cmd/compile/internal/gc/plive.go	/^func isdeferreturn(prog *obj.Prog) bool {$/;"	f
isdeferreturn_sym	./cmd/compile/internal/gc/plive.go	/^var isdeferreturn_sym *obj.LSym$/;"	v
isdigit	./cmd/compile/internal/gc/util.go	/^func isdigit(c int) bool {$/;"	f
isdigit	./cmd/yacc/yacc.go	/^func isdigit(c rune) bool { return c >= '0' && c <= '9' }$/;"	f
isdir	./cmd/dist/util.go	/^func isdir(p string) bool {$/;"	f
isdir	./os/file_windows.go	/^func (f *file) isdir() bool { return f != nil && f.dirinfo != nil }$/;"	f
isdirectiface	./cmd/compile/internal/gc/subr.go	/^func isdirectiface(t *Type) bool {$/;"	f
isextern	./cmd/internal/obj/x86/asm6.go	/^func isextern(s *obj.LSym) bool {$/;"	f
isfile	./cmd/dist/util.go	/^func isfile(p string) bool {$/;"	f
isfloatreg	./cmd/compile/internal/arm/peep.go	/^func isfloatreg(a *obj.Addr) bool {$/;"	f
isfloatreg	./cmd/internal/obj/arm/obj5.go	/^func isfloatreg(a *obj.Addr) bool {$/;"	f
isforkfunc	./cmd/compile/internal/gc/racewalk.go	/^func isforkfunc(fn *Node) bool {$/;"	f
isfrog	./cmd/compile/internal/gc/lex.go	/^func isfrog(c int) bool {$/;"	f
isfunny	./cmd/compile/internal/gc/plive.go	/^func isfunny(n *Node) bool {$/;"	f
isglobal	./cmd/compile/internal/gc/walk.go	/^func isglobal(n *Node) bool {$/;"	f
isgoconst	./cmd/compile/internal/gc/const.go	/^func isgoconst(n *Node) bool {$/;"	f
isgoexception	./runtime/signal_windows.go	/^func isgoexception(info *exceptionrecord, r *context) bool {$/;"	f
ishairy	./cmd/compile/internal/gc/inl.go	/^func ishairy(n *Node, budget *int) bool {$/;"	f
ishairylist	./cmd/compile/internal/gc/inl.go	/^func ishairylist(ll *NodeList, budget *int) bool {$/;"	f
ishex	./mime/mediatype.go	/^func ishex(c byte) bool {$/;"	f
ishex	./net/url/url.go	/^func ishex(c byte) bool {$/;"	f
isideal	./cmd/compile/internal/gc/subr.go	/^func isideal(t *Type) bool {$/;"	f
isifacemethod	./cmd/compile/internal/gc/dcl.go	/^func isifacemethod(f *Type) bool {$/;"	f
isint32	./cmd/internal/obj/ppc64/asm9.go	/^func isint32(v int64) bool {$/;"	f
islice	./fmt/fmt_test.go	/^var islice = iarray[:]$/;"	v
islice	./reflect/type.go	/^	var islice interface{} = ([]unsafe.Pointer)(nil)$/;"	v
isliteral	./cmd/compile/internal/gc/sinit.go	/^func isliteral(n *Node) bool {$/;"	f
islive	./cmd/compile/internal/gc/plive.go	/^func islive(n *Node, args Bvec, locals Bvec) bool {$/;"	f
islocalname	./cmd/compile/internal/gc/lex.go	/^func islocalname(name string) bool {$/;"	f
islvalue	./cmd/compile/internal/gc/typecheck.go	/^func islvalue(n *Node) bool {$/;"	f
ismapkey	./reflect/type.go	/^func ismapkey(*rtype) bool \/\/ implemented in runtime$/;"	f
ismapkey	./runtime/hashmap.go	/^func ismapkey(t *_type) bool {$/;"	f
ismulticall	./cmd/compile/internal/gc/order.go	/^func ismulticall(l *NodeList) bool {$/;"	f
isn	./cmd/compile/internal/gc/typecheck.go	/^		\/\/ This type isn't computed yet; when it is, update n.$/;"	t
isn	./runtime/syscall_windows.go	/^	callbackasm byte \/\/ type isn't really byte, it's code in runtime$/;"	t
isnan	./runtime/complex.go	/^func isnan(f float64) bool    { return f != f }$/;"	f
isnanu	./runtime/sqrt.go	/^func isnanu(ix uint64) bool {$/;"	f
isneginf	./runtime/complex.go	/^func isneginf(f float64) bool { return f < -maxFloat64 }$/;"	f
isnewselect	./cmd/compile/internal/gc/plive.go	/^func isnewselect(prog *obj.Prog) bool {$/;"	f
isnewselect_sym	./cmd/compile/internal/gc/plive.go	/^var isnewselect_sym *obj.LSym$/;"	v
isnil	./cmd/compile/internal/gc/subr.go	/^func isnil(n *Node) bool {$/;"	f
isnilinter	./cmd/compile/internal/gc/subr.go	/^func isnilinter(t *Type) bool {$/;"	f
isoWeekTests	./time/time_test.go	/^var isoWeekTests = []ISOWeekTest{$/;"	v
ispaddedfield	./cmd/compile/internal/gc/subr.go	/^func ispaddedfield(t *Type, total int64) bool {$/;"	f
ispcdisp	./cmd/internal/obj/arm64/asm7.go	/^func ispcdisp(v int32) int {$/;"	f
ispkgin	./cmd/compile/internal/gc/racewalk.go	/^func ispkgin(pkgs []string) bool {$/;"	f
isposinf	./runtime/complex.go	/^func isposinf(f float64) bool { return f > maxFloat64 }$/;"	f
isptrto	./cmd/compile/internal/gc/subr.go	/^func isptrto(t *Type, et int) bool {$/;"	f
ispubname	./cmd/link/internal/ld/dwarf.go	/^func ispubname(die *DWDie) bool {$/;"	f
ispubtype	./cmd/link/internal/ld/dwarf.go	/^func ispubtype(die *DWDie) bool {$/;"	f
isreflexive	./cmd/compile/internal/gc/reflect.go	/^func isreflexive(t *Type) bool {$/;"	f
issafepoint	./cmd/compile/internal/gc/plive.go	/^func issafepoint(prog *obj.Prog) bool {$/;"	f
isscanstatus	./runtime/proc1.go	/^func isscanstatus(status uint32) bool {$/;"	f
issect	./cmd/link/internal/ld/ldpe.go	/^func issect(s *PeSym) bool {$/;"	f
isselectcommcasecall	./cmd/compile/internal/gc/plive.go	/^func isselectcommcasecall(prog *obj.Prog) bool {$/;"	f
isselectgocall	./cmd/compile/internal/gc/plive.go	/^func isselectgocall(prog *obj.Prog) bool {$/;"	f
isselectgocall_sym	./cmd/compile/internal/gc/plive.go	/^var isselectgocall_sym *obj.LSym$/;"	v
isstack	./cmd/compile/internal/gc/walk.go	/^func isstack(n *Node) bool {$/;"	f
issue5431	./runtime/race/testdata/regression_test.go	/^func issue5431() {$/;"	f
issuer	./crypto/x509/x509.go	/^	var issuer, subject pkix.RDNSequence$/;"	v
istemp	./cmd/compile/internal/gc/order.go	/^func istemp(n *Node) bool {$/;"	f
isterminating	./cmd/compile/internal/gc/typecheck.go	/^func isterminating(l *NodeList, top int) bool {$/;"	f
istr	./regexp/syntax/parse.go	/^		var istr []rune$/;"	v
isuint32	./cmd/internal/obj/ppc64/asm9.go	/^func isuint32(v uint64) bool {$/;"	f
isunsafebuiltin	./cmd/compile/internal/gc/unsafe.go	/^func isunsafebuiltin(n *Node) bool {$/;"	f
isvalidaddr	./runtime/race1.go	/^func isvalidaddr(addr unsafe.Pointer) bool {$/;"	f
isvaluelit	./cmd/compile/internal/gc/sinit.go	/^func isvaluelit(n *Node) bool {$/;"	f
isword	./cmd/yacc/yacc.go	/^func isword(c rune) bool {$/;"	f
isym	./cmd/compile/internal/gc/reflect.go	/^	var isym *Sym$/;"	v
iszero	./cmd/compile/internal/gc/sinit.go	/^func iszero(n *Node) bool {$/;"	f
it	./cmd/link/internal/ld/pcln.go	/^	var it Pciter$/;"	v
it	./encoding/gob/codec_test.go	/^	var it inputT$/;"	v
it	./runtime/signal1_unix.go	/^	var it itimerval$/;"	v
it0	./encoding/gob/codec_test.go	/^	var it0 IT0$/;"	v
itab	./runtime/runtime2.go	/^type itab struct {$/;"	t
itab_callback	./runtime/heapdump.go	/^func itab_callback(tab *itab) {$/;"	f
itable	./cmd/compile/internal/gc/align.go	/^var itable *Type \/\/ distinguished *byte$/;"	v
itabpkg	./cmd/compile/internal/gc/go.go	/^var itabpkg *Pkg \/\/ fake pkg for itab cache$/;"	v
item	./encoding/xml/xml_test.go	/^type item struct {$/;"	t
item	./text/template/parse/lex.go	/^type item struct {$/;"	t
itemList	./text/template/parse/parse.go	/^func (t *Tree) itemList() (list *ListNode, next Node) {$/;"	f
itemName	./text/template/parse/lex_test.go	/^var itemName = map[itemType]string{$/;"	v
itemType	./text/template/parse/lex.go	/^type itemType int$/;"	t
items	./go/types/example_test.go	/^	var items []string$/;"	v
iterate_finq	./runtime/mfinal.go	/^func iterate_finq(callback func(*funcval, unsafe.Pointer, uintptr, *_type, *ptrtype)) {$/;"	f
iterate_itabs	./runtime/iface.go	/^func iterate_itabs(fn func(*itab)) {$/;"	f
iterate_memprof	./runtime/mprof.go	/^func iterate_memprof(fn func(*bucket, uintptr, *uintptr, uintptr, uintptr, uintptr)) {$/;"	f
itimerval	./runtime/defs1_netbsd_386.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs1_netbsd_amd64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs1_netbsd_arm.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs1_solaris_amd64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_darwin_386.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_darwin_amd64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_darwin_arm.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_darwin_arm64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_dragonfly_amd64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_freebsd_386.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_freebsd_amd64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_freebsd_arm.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_linux_386.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_linux_amd64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_linux_arm.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_linux_arm64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_linux_ppc64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_linux_ppc64le.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_openbsd_386.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_openbsd_amd64.go	/^type itimerval struct {$/;"	t
itimerval	./runtime/defs_openbsd_arm.go	/^type itimerval struct {$/;"	t
itoa	./log/log.go	/^func itoa(buf *[]byte, i int, wid int) {$/;"	f
itoa	./net/http/fs_test.go	/^var itoa = strconv.Itoa$/;"	v
itoa	./net/parse.go	/^func itoa(val int) string {$/;"	f
itoa	./os/signal/signal_plan9_test.go	/^func itoa(val int) string {$/;"	f
itoa	./os/str.go	/^func itoa(val int) string {$/;"	f
itoa	./runtime/os1_plan9.go	/^func itoa(buf []byte, val uint64) []byte {$/;"	f
itoa	./syscall/str.go	/^func itoa(val int) string { \/\/ do it here rather than with fmt to avoid dependency$/;"	f
itoaDiv	./runtime/mgc.go	/^func itoaDiv(buf []byte, val uint64, dec int) []byte {$/;"	f
itob64Test	./strconv/itoa_test.go	/^type itob64Test struct {$/;"	t
itob64tests	./strconv/itoa_test.go	/^var itob64tests = []itob64Test{$/;"	v
itself	./cmd/vet/types.go	/^	\/\/ method returns the type itself.$/;"	t
iu	./math/log1p.go	/^	var iu uint64$/;"	v
iv	./crypto/cipher/benchmark_test.go	/^	var iv [16]byte$/;"	v
iv	./crypto/cipher/example_test.go	/^	var iv [aes.BlockSize]byte$/;"	v
iv	./syscall/bpf_bsd.go	/^	var iv ivalue$/;"	v
ivalue	./syscall/bpf_bsd.go	/^type ivalue struct {$/;"	t
j0	./cmd/yacc/yacc.go	/^	var j0, j1, u int$/;"	v
j0	./math/all_test.go	/^var j0 = []float64{$/;"	v
j0SC	./math/all_test.go	/^var j0SC = []float64{$/;"	v
j1	./cmd/compile/internal/arm/peep.go	/^	var j1 Joininfo$/;"	v
j1	./math/all_test.go	/^var j1 = []float64{$/;"	v
j1SC	./math/all_test.go	/^var j1SC = []float64{$/;"	v
j2	./cmd/compile/internal/arm/peep.go	/^	var j2 Joininfo$/;"	v
j2	./math/all_test.go	/^var j2 = []float64{$/;"	v
j2SC	./math/all_test.go	/^var j2SC = []float64{$/;"	v
jM3	./math/all_test.go	/^var jM3 = []float64{$/;"	v
jM3SC	./math/all_test.go	/^var jM3SC = []float64{$/;"	v
jarKey	./net/http/cookiejar/jar.go	/^func jarKey(host string, psl PublicSuffixList) string {$/;"	f
jarKeyNilPSLTests	./net/http/cookiejar/jar_test.go	/^var jarKeyNilPSLTests = map[string]string{$/;"	v
jarKeyTests	./net/http/cookiejar/jar_test.go	/^var jarKeyTests = map[string]string{$/;"	v
jarTest	./net/http/cookiejar/jar_test.go	/^type jarTest struct {$/;"	t
jarg	./cmd/compile/internal/gc/plive.go	/^	var jarg Bvec$/;"	v
jlocal	./cmd/compile/internal/gc/plive.go	/^	var jlocal Bvec$/;"	v
jmpdefer	./runtime/stubs.go	/^func jmpdefer(fv *funcval, argp uintptr)$/;"	f
jmptoset	./cmd/compile/internal/amd64/gsubr.go	/^func jmptoset(jmp int) int {$/;"	f
job	./regexp/backtrack.go	/^type job struct {$/;"	t
join	./cmd/fix/typecheck.go	/^func join(x []string) string {$/;"	f
join	./html/template/escape.go	/^func join(a, b context, node parse.Node, nodeName string) context {$/;"	f
join	./path/filepath/path_plan9.go	/^func join(elem []string) string {$/;"	f
join	./path/filepath/path_unix.go	/^func join(elem []string) string {$/;"	f
join	./path/filepath/path_windows.go	/^func join(elem []string) string {$/;"	f
join	./path/path_test.go	/^func join(elem []string, args ...string) string {$/;"	f
join	./reflect/all_test.go	/^func join(b ...[]byte) []byte    { return bytes.Join(b, nil) }$/;"	f
join	./syscall/mksyscall_windows.go	/^func join(ps []*Param, fn func(*Param) string, sep string) string {$/;"	f
joinExeDirAndFName	./syscall/exec_windows.go	/^func joinExeDirAndFName(dir, p string) (name string, err error) {$/;"	f
joinFunc	./cmd/fix/typecheck.go	/^func joinFunc(in, out []string) string {$/;"	f
joinIPv4Group	./net/sockoptip_posix.go	/^func joinIPv4Group(fd *netFD, ifi *Interface, ip IP) error {$/;"	f
joinIPv4Group	./net/sockoptip_stub.go	/^func joinIPv4Group(fd *netFD, ifi *Interface, ip IP) error {$/;"	f
joinIPv6Group	./net/sockoptip_posix.go	/^func joinIPv6Group(fd *netFD, ifi *Interface, ip IP) error {$/;"	f
joinIPv6Group	./net/sockoptip_stub.go	/^func joinIPv6Group(fd *netFD, ifi *Interface, ip IP) error {$/;"	f
joinNonEmpty	./path/filepath/path_windows.go	/^func joinNonEmpty(elem []string) string {$/;"	f
joinsplit	./cmd/compile/internal/arm/peep.go	/^func joinsplit(r *gc.Flow, j *Joininfo) int {$/;"	f
jointests	./path/filepath/path_test.go	/^var jointests = []JoinTest{$/;"	v
jointests	./path/path_test.go	/^var jointests = []JoinTest{$/;"	v
jsCtx	./html/template/context.go	/^type jsCtx uint8$/;"	t
jsIsSpecial	./text/template/funcs.go	/^func jsIsSpecial(r rune) bool {$/;"	f
jsRegexpEscaper	./html/template/js.go	/^func jsRegexpEscaper(args ...interface{}) string {$/;"	f
jsRegexpReplacementTable	./html/template/js.go	/^var jsRegexpReplacementTable = []string{$/;"	v
jsStrEscaper	./html/template/js.go	/^func jsStrEscaper(args ...interface{}) string {$/;"	f
jsStrNormReplacementTable	./html/template/js.go	/^var jsStrNormReplacementTable = []string{$/;"	v
jsStrReplacementTable	./html/template/js.go	/^var jsStrReplacementTable = []string{$/;"	v
jsValEscaper	./html/template/js.go	/^func jsValEscaper(args ...interface{}) string {$/;"	f
jsonBig	./encoding/json/scanner_test.go	/^var jsonBig []byte$/;"	v
jsonBlob	./encoding/json/example_test.go	/^	var jsonBlob = []byte(`[$/;"	v
jsonMarshalType	./html/template/js.go	/^var jsonMarshalType = reflect.TypeOf((*json.Marshaler)(nil)).Elem()$/;"	v
jsonTests	./time/time_test.go	/^var jsonTests = []struct {$/;"	v
jsonTime	./time/time_test.go	/^		var jsonTime Time$/;"	v
jt	./cmd/internal/obj/arm/asm5.go	/^	var jt int = 0$/;"	v
jumpArm	./cmd/asm/internal/arch/arm.go	/^func jumpArm(word string) bool {$/;"	f
jumpArm64	./cmd/asm/internal/arch/arm64.go	/^func jumpArm64(word string) bool {$/;"	f
jumpPPC64	./cmd/asm/internal/arch/ppc64.go	/^func jumpPPC64(word string) bool {$/;"	f
jumpX86	./cmd/asm/internal/arch/arch.go	/^func jumpX86(word string) bool {$/;"	f
just	./runtime/heapdump.go	/^		\/\/ Data slot is a scalar.  Dump type just for fun.$/;"	t
justReader	./bytes/reader_test.go	/^	type justReader struct {$/;"	t
justWriter	./bytes/reader_test.go	/^	type justWriter struct {$/;"	t
k1	./runtime/cgo/gcc_darwin_386.c	/^static pthread_key_t k1;$/;"	v	file:
k1	./runtime/cgo/gcc_darwin_amd64.c	/^static pthread_key_t k1;$/;"	v	file:
karatsuba	./cmd/compile/internal/big/nat.go	/^func karatsuba(z, x, y nat) {$/;"	f
karatsuba	./math/big/nat.go	/^func karatsuba(z, x, y nat) {$/;"	f
karatsubaAdd	./cmd/compile/internal/big/nat.go	/^func karatsubaAdd(z, x nat, n int) {$/;"	f
karatsubaAdd	./math/big/nat.go	/^func karatsubaAdd(z, x nat, n int) {$/;"	f
karatsubaLen	./cmd/compile/internal/big/nat.go	/^func karatsubaLen(n int) int {$/;"	f
karatsubaLen	./math/big/nat.go	/^func karatsubaLen(n int) int {$/;"	f
karatsubaLoad	./cmd/compile/internal/big/calibrate_test.go	/^func karatsubaLoad(b *testing.B) {$/;"	f
karatsubaLoad	./math/big/calibrate_test.go	/^func karatsubaLoad(b *testing.B) {$/;"	f
karatsubaSub	./cmd/compile/internal/big/nat.go	/^func karatsubaSub(z, x nat, n int) {$/;"	f
karatsubaSub	./math/big/nat.go	/^func karatsubaSub(z, x nat, n int) {$/;"	f
karatsubaThreshold	./cmd/compile/internal/big/nat.go	/^var karatsubaThreshold int = 40 \/\/ computed by calibrate.go$/;"	v
karatsubaThreshold	./math/big/nat.go	/^var karatsubaThreshold int = 40 \/\/ computed by calibrate.go$/;"	v
ke	./math/rand/exp.go	/^var ke = [256]uint32{$/;"	v
keep	./cmd/pprof/internal/profile/prune.go	/^	var keep, drop *regexp.Regexp$/;"	v
keepType	./go/printer/nodes.go	/^	var keepType bool$/;"	v
keepTypeColumn	./go/printer/nodes.go	/^func keepTypeColumn(specs []ast.Spec) []bool {$/;"	f
kernelVersion	./syscall/exec_linux_test.go	/^func kernelVersion(t *testing.T) (int, int) {$/;"	f
kevent	./runtime/netpoll_kqueue.go	/^func kevent(kq int32, ch *keventt, nch int32, ev *keventt, nev int32, ts *timespec) int32$/;"	f
kevent	./syscall/zsyscall_darwin_386.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_darwin_amd64.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_darwin_arm.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_darwin_arm64.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_dragonfly_amd64.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_freebsd_386.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_freebsd_amd64.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_freebsd_arm.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_netbsd_386.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_netbsd_amd64.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_netbsd_arm.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_openbsd_386.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_openbsd_amd64.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
kevent	./syscall/zsyscall_openbsd_arm.go	/^func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {$/;"	f
keventt	./runtime/defs1_netbsd_386.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs1_netbsd_amd64.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs1_netbsd_arm.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_darwin_386.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_darwin_amd64.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_darwin_arm.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_darwin_arm64.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_dragonfly_amd64.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_freebsd_386.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_freebsd_amd64.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_freebsd_arm.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_openbsd_386.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_openbsd_amd64.go	/^type keventt struct {$/;"	t
keventt	./runtime/defs_openbsd_arm.go	/^type keventt struct {$/;"	t
key	./cmd/api/goapi.go	/^	var key string$/;"	v
key	./cmd/cgo/gcc.go	/^		var key, val string$/;"	v
key	./cmd/compile/internal/gc/sinit.go	/^	var key *Node$/;"	v
key	./cmd/compile/internal/gc/walk.go	/^		var key *Node$/;"	v
key	./cmd/fix/typecheck.go	/^			var key, value string$/;"	v
key	./cmd/pprof/internal/profile/encode.go	/^			var key, value string$/;"	v
key	./cmd/vet/main.go	/^	var key ast.Node$/;"	v
key	./crypto/cipher/benchmark_test.go	/^	var key [16]byte$/;"	v
key	./crypto/cipher/gcm.go	/^	var key [gcmBlockSize]byte$/;"	v
key	./crypto/rsa/pkcs1v15_test.go	/^	var key [32]byte$/;"	v
key	./crypto/rsa/pss_test.go	/^	var key *PublicKey$/;"	v
key	./crypto/tls/handshake_client_test.go	/^	var key interface{} = testRSAPrivateKey$/;"	v
key	./go/parser/parser.go	/^		var key, value ast.Expr$/;"	v
key	./go/printer/testdata/parser.go	/^		var key, value ast.Expr$/;"	v
key	./go/types/expr.go	/^			var key operand$/;"	v
key	./go/types/stmt.go	/^		var key, val Type$/;"	v
key	./net/http/transport.go	/^func (cm *connectMethod) key() connectMethodKey {$/;"	f
key	./runtime/map_test.go	/^	var key [256]string$/;"	v
key	./syscall/net_nacl.go	/^func (sa *SockaddrDatalink) key() interface{} { return *sa }$/;"	f
key	./syscall/net_nacl.go	/^func (sa *SockaddrInet4) key() interface{} { return *sa }$/;"	f
key	./syscall/net_nacl.go	/^func (sa *SockaddrInet6) key() interface{} { return *sa }$/;"	f
key	./syscall/net_nacl.go	/^func (sa *SockaddrUnix) key() interface{} { return *sa }$/;"	f
key	./text/template/parse/lex.go	/^var key = map[string]itemType{$/;"	v
key32	./runtime/lock_futex.go	/^func key32(p *uintptr) *uint32 {$/;"	f
keyAgreement	./crypto/tls/cipher_suites.go	/^type keyAgreement interface {$/;"	t
keyDERBlock	./crypto/tls/tls.go	/^	var keyDERBlock *pem.Block$/;"	v
keyExpansionLabel	./crypto/tls/prf.go	/^var keyExpansionLabel = []byte("key expansion")$/;"	v
keyPEM	./crypto/tls/tls_test.go	/^var keyPEM = `-----BEGIN PRIVATE KEY-----$/;"	v
keyPairTests	./crypto/tls/tls_test.go	/^var keyPairTests = []struct {$/;"	v
keyTests	./crypto/aes/aes_test.go	/^var keyTests = []KeyTest{$/;"	v
keyUsage	./crypto/x509/x509.go	/^				var keyUsage []asn1.ObjectIdentifier$/;"	v
keyValueTopDecl	./go/doc/example_test.go	/^var keyValueTopDecl = struct {$/;"	v
keyValues	./net/http/header.go	/^type keyValues struct {$/;"	t
keydup	./cmd/compile/internal/gc/typecheck.go	/^func keydup(n *Node, hash map[uint32][]*Node) {$/;"	f
keyid	./crypto/x509/x509.go	/^				var keyid []byte$/;"	v
keys	./cmd/pprof/internal/profile/encode.go	/^		var keys []string$/;"	v
keys	./runtime/map_test.go	/^	var keys [100]string$/;"	v
keysFromMasterSecret	./crypto/tls/prf.go	/^func keysFromMasterSecret(version uint16, suite *cipherSuite, masterSecret, clientRandom, serverRandom []byte, macLen, keyLen, ivLen int) (clientMAC, serverMAC, clientKey, serverKey, clientIV, serverIV []byte) {$/;"	f
keysize	./cmd/link/internal/ld/dwarf.go	/^	var keysize int$/;"	v
keytype	./cmd/link/internal/ld/dwarf.go	/^	var keytype *DWDie$/;"	v
keyval	./cmd/compile/internal/gc/go.y	/^keyval:$/;"	l
keyval_list	./cmd/compile/internal/gc/go.y	/^keyval_list:$/;"	l
keyword	./cmd/compile/internal/gc/y.go	/^			\/\/ without func keyword$/;"	f
keywords	./go/token/token.go	/^var keywords map[string]Token$/;"	v
ki	./internal/syscall/windows/registry/key.go	/^	var ki KeyInfo$/;"	v
kill	./cmd/compile/internal/gc/order.go	/^	var kill *Node$/;"	v
kill	./os/exec_plan9.go	/^func (p *Process) kill() error {$/;"	f
kill	./os/exec_posix.go	/^func (p *Process) kill() error {$/;"	f
kill	./syscall/zsyscall_darwin_386.go	/^func kill(pid int, signum int, posix int) (err error) {$/;"	f
kill	./syscall/zsyscall_darwin_amd64.go	/^func kill(pid int, signum int, posix int) (err error) {$/;"	f
kill	./syscall/zsyscall_darwin_arm.go	/^func kill(pid int, signum int, posix int) (err error) {$/;"	f
kill	./syscall/zsyscall_darwin_arm64.go	/^func kill(pid int, signum int, posix int) (err error) {$/;"	f
killPos	./cmd/fix/fix.go	/^func killPos(v reflect.Value) {$/;"	f
killed	./cmd/compile/internal/gc/popt.go	/^var killed int \/\/ f->data is either nil or &killed$/;"	v
kind	./cmd/cgo/out.go	/^			panic(fmt.Errorf("invalid var kind %q", n.Kind))$/;"	v
kind	./cmd/compile/internal/gc/reflect.go	/^\/\/ the type kind, and the ptrdata field to record in the reflect type information.$/;"	t
kind	./cmd/vet/asmdecl.go	/^			var kind asmKind$/;"	v
kind	./go/types/expr.go	/^\/\/ value of the given basic type kind and for the configuration$/;"	t
kind	./go/types/operand.go	/^	var kind BasicKind$/;"	v
kind	./reflect/type.go	/^	var kind uint8$/;"	v
kind	./reflect/type.go	/^\/\/ type kind, one or two subtypes, and an extra integer.$/;"	t
kind	./reflect/value.go	/^func (f flag) kind() Kind {$/;"	f
kind	./text/template/funcs.go	/^type kind int$/;"	t
kindNames	./reflect/type.go	/^var kindNames = []string{$/;"	v
kindaclose	./math/all_test.go	/^func kindaclose(a, b float64) bool { return tolerance(a, b, 1e-8) }$/;"	f
kinds	./cmd/compile/internal/gc/reflect.go	/^var kinds = []int{$/;"	v
kn	./math/rand/normal.go	/^var kn = [128]uint32{$/;"	v
knownOpcodeLengths	./debug/dwarf/line.go	/^var knownOpcodeLengths = map[int]int{$/;"	v
knownRacy	./sync/waitgroup_test.go	/^func knownRacy(t *testing.T) {$/;"	f
kqueue	./runtime/netpoll_kqueue.go	/^func kqueue() int32$/;"	f
ks	./cmd/cgo/main.go	/^	var ks []string$/;"	v
ks	./cmd/link/internal/ld/ldmacho.go	/^				var ks *LdMachoSect$/;"	v
ksRotate	./crypto/des/block.go	/^func ksRotate(in uint32) (out []uint32) {$/;"	f
ksRotations	./crypto/des/const.go	/^var ksRotations = [16]uint8{1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1}$/;"	v
l1	./cmd/compile/internal/gc/order.go	/^	var l1 *NodeList$/;"	v
l1	./cmd/compile/internal/gc/walk.go	/^	var l1 string$/;"	v
l1	./container/list/list_test.go	/^	var l1 = new(List)$/;"	v
l1	./container/list/list_test.go	/^	var l1 List$/;"	v
l1	./crypto/rc4/rc4_amd64.s	/^l1:	CMPQ	SI,		R9		\/\/ cmp in with in+len$/;"	l
l1	./crypto/rc4/rc4_amd64p32.s	/^l1:	CMPQ	SI,		R9		\/\/ cmp in with in+len$/;"	l
l2	./cmd/compile/internal/gc/const.go	/^		var l2 *NodeList$/;"	v
l2	./cmd/compile/internal/gc/order.go	/^	var l2 *NodeList$/;"	v
l2	./cmd/compile/internal/gc/walk.go	/^	var l2 string$/;"	v
l2	./container/list/list_test.go	/^	var l2 = new(List)$/;"	v
l2	./container/list/list_test.go	/^	var l2 List$/;"	v
l2	./crypto/rc4/rc4_amd64.s	/^l2:	CMPQ	SI,		R9		\/\/ cmp in with in+len$/;"	l
l2	./crypto/rc4/rc4_amd64p32.s	/^l2:	CMPQ	SI,		R9		\/\/ cmp in with in+len$/;"	l
l3	./container/list/list_test.go	/^	var l3 = new(List)$/;"	v
l38	./runtime/symtab_test.go	/^var l38, l39, l40 int$/;"	v
l4	./container/list/list_test.go	/^	var l4 = new(List)$/;"	v
la	./net/udp_test.go	/^		var la *UDPAddr$/;"	v
la	./net/unix_test.go	/^		var la *UnixAddr$/;"	v
lab	./cmd/compile/internal/gc/typecheck.go	/^	var lab *Label$/;"	v
label	./cmd/asm/internal/asm/testdata/386.s	/^label:$/;"	l
label	./cmd/asm/internal/asm/testdata/amd64.s	/^label:$/;"	l
label	./cmd/pprof/internal/report/report.go	/^	var label []string$/;"	v
label	./go/parser/parser.go	/^	var label *ast.Ident$/;"	v
label	./go/printer/testdata/parser.go	/^	var label *ast.Ident$/;"	v
label0	./cmd/asm/internal/asm/testdata/ppc64.s	/^label0:$/;"	l
label1	./cmd/asm/internal/asm/testdata/ppc64.s	/^label1:$/;"	l
labelDecoder	./cmd/pprof/internal/profile/encode.go	/^var labelDecoder = []decoder{$/;"	v
labellist	./cmd/compile/internal/gc/gen.go	/^var labellist *Label$/;"	v
labelname	./cmd/compile/internal/gc/go.y	/^labelname:$/;"	l
labels	./cmd/pprof/internal/report/report.go	/^	var labels []string$/;"	v
labels	./cmd/pprof/internal/report/source.go	/^	var labels []string$/;"	v
labels	./go/types/labels.go	/^func (check *Checker) labels(body *ast.BlockStmt) {$/;"	f
langid	./syscall/syscall_windows.go	/^func langid(pri, sub uint16) uint32 { return uint32(sub)<<10 | uint32(pri) }$/;"	f
largeAlloc	./runtime/malloc.go	/^func largeAlloc(size uintptr, flag uint32) *mspan {$/;"	f
largeDataChunk	./compress/flate/deflate_test.go	/^func largeDataChunk() []byte {$/;"	f
largeStringConcatSource	./runtime/string_test.go	/^var largeStringConcatSource = `$/;"	v
largeloop	./runtime/asm_386.s	/^largeloop:$/;"	l
larger	./cmd/compile/internal/big/natconv.go	/^		var larger nat$/;"	v
larger	./math/big/natconv.go	/^		var larger nat$/;"	v
last	./cmd/compile/internal/gc/popt.go	/^		var last *obj.Prog$/;"	v
last	./cmd/compile/internal/gc/popt.go	/^	var last *Flow$/;"	v
last	./cmd/compile/internal/gc/popt.go	/^	var last *obj.Prog$/;"	v
last	./cmd/compile/internal/gc/reflect.go	/^	var last *Sig$/;"	v
last	./cmd/cover/cover.go	/^		var last int$/;"	v
last	./cmd/internal/obj/arm/obj5.go	/^	var last *obj.Prog$/;"	v
last	./cmd/internal/obj/arm64/obj7.go	/^	var last *obj.Prog$/;"	v
last	./cmd/internal/obj/x86/obj6.go	/^	var last *obj.Prog$/;"	v
last	./cmd/internal/rsc.io/x86/x86asm/plan9x.go	/^	var last Prefix$/;"	v
last	./cmd/link/internal/ld/data.go	/^	var last *LSym$/;"	v
last	./cmd/link/internal/ld/go.go	/^		var last *LSym$/;"	v
last	./cmd/link/internal/ld/lib.go	/^	var last *LSym$/;"	v
last	./cmd/link/internal/ld/pcln.go	/^	var last *LSym$/;"	v
last	./cmd/vet/rangeloop.go	/^	var last *ast.CallExpr$/;"	v
last	./go/printer/printer.go	/^	var last *ast.Comment$/;"	v
last	./go/scanner/errors.go	/^	var last token.Position \/\/ initial last.Line is != any legal error line$/;"	v
last	./go/types/decl.go	/^		var last *ast.ValueSpec \/\/ last ValueSpec with type or init exprs seen$/;"	v
last	./go/types/resolver.go	/^				var last *ast.ValueSpec \/\/ last ValueSpec with type or init exprs seen$/;"	v
last	./net/parse.go	/^func last(s string, b byte) int {$/;"	f
last	./reflect/all_test.go	/^	var last string$/;"	v
last	./strings/replace.go	/^	var last, wn int$/;"	v
lastChar	./unicode/maketables.go	/^var lastChar rune = 0$/;"	v
lastComment	./go/doc/example.go	/^func lastComment(b *ast.BlockStmt, c []*ast.CommentGroup) (i int, last *ast.CommentGroup) {$/;"	f
lastErr	./net/dnsclient_unix.go	/^	var lastErr error$/;"	v
lastF	./cmd/fix/fix.go	/^	var lastF ast.Expr$/;"	v
lastFieldBitOffset	./debug/dwarf/type.go	/^		var lastFieldBitOffset int64$/;"	v
lastFieldType	./debug/dwarf/type.go	/^		var lastFieldType *Type$/;"	v
lastFile	./runtime/debug/stack.go	/^	var lastFile string$/;"	v
lastG	./internal/trace/parser.go	/^	var lastG, timerGoid uint64$/;"	v
lastHeading	./cmd/dist/test.go	/^	var lastHeading string$/;"	v
lastIndex	./os/file_plan9.go	/^func lastIndex(s string, sep byte) int {$/;"	f
lastIndexAnyTests	./bytes/bytes_test.go	/^var lastIndexAnyTests = []BinOpTest{$/;"	v
lastIndexAnyTests	./strings/strings_test.go	/^var lastIndexAnyTests = []IndexTest{$/;"	v
lastIndexFunc	./bytes/bytes.go	/^func lastIndexFunc(s []byte, f func(r rune) bool, truth bool) int {$/;"	f
lastIndexFunc	./strings/strings.go	/^func lastIndexFunc(s string, f func(rune) bool, truth bool) int {$/;"	f
lastIndexTests	./bytes/bytes_test.go	/^var lastIndexTests = []BinOpTest{$/;"	v
lastIndexTests	./strings/strings_test.go	/^var lastIndexTests = []IndexTest{$/;"	v
lastP	./internal/trace/parser.go	/^	var lastP int$/;"	v
lastPtrField	./cmd/compile/internal/gc/reflect.go	/^		var lastPtrField *Type$/;"	v
lastScanFlush	./runtime/mgcmark.go	/^	var lastScanFlush, nextScanFlush int64$/;"	v
lastSlash	./os/file_windows.go	/^	var lastSlash int$/;"	v
lastTs	./internal/trace/goroutines.go	/^	var lastTs int64$/;"	v
lastVia	./net/http/client_test.go	/^	var lastVia []*Request$/;"	v
lastcase	./cmd/internal/obj/arm64/asm7.go	/^	var lastcase *obj.Prog$/;"	v
lastconst	./cmd/compile/internal/gc/go.go	/^var lastconst *NodeList$/;"	v
lastcontinuehandler	./runtime/signal_windows.go	/^func lastcontinuehandler(info *exceptionrecord, r *context, gp *g) int32 {$/;"	f
lastcontinuetramp	./runtime/signal_windows.go	/^func lastcontinuetramp()$/;"	f
lastlabel	./cmd/compile/internal/gc/gen.go	/^var lastlabel *Label$/;"	v
lastmoduledatap	./runtime/symtab.go	/^var lastmoduledatap *moduledata \/\/ linker symbol$/;"	v
lastred	./cmd/yacc/yacc.go	/^var lastred int                    \/\/ number of last reduction of a state$/;"	v
lasttype	./cmd/compile/internal/gc/go.go	/^var lasttype *Node$/;"	v
later	./go/types/check.go	/^func (check *Checker) later(name string, decl *declInfo, sig *Signature, body *ast.BlockStmt) {$/;"	f
launch	./go/doc/testdata/benchmark.go	/^func (b *B) launch() {$/;"	f
launch	./testing/benchmark.go	/^func (b *B) launch() {$/;"	f
launchpadVCS	./cmd/go/vcs.go	/^func launchpadVCS(match map[string]string) error {$/;"	f
layout	./runtime/mheap.go	/^func (s *mspan) layout() (size, n, total uintptr) {$/;"	f
layoutCache	./reflect/type.go	/^var layoutCache struct {$/;"	v
layoutKey	./reflect/type.go	/^type layoutKey struct {$/;"	t
layoutType	./reflect/type.go	/^type layoutType struct {$/;"	t
lazyInit	./container/list/list.go	/^func (l *List) lazyInit() {$/;"	f
lazybuf	./path/filepath/path.go	/^type lazybuf struct {$/;"	t
lazybuf	./path/path.go	/^type lazybuf struct {$/;"	t
lbrace	./cmd/compile/internal/gc/go.y	/^lbrace:$/;"	l
lconst	./cmd/compile/internal/gc/go.y	/^lconst:$/;"	l
ldelf	./cmd/link/internal/ld/ldelf.go	/^func ldelf(f *obj.Biobuf, pkg string, length int64, pn string) {$/;"	f
ldexp	./math/ldexp.go	/^func ldexp(frac float64, exp int) float64 {$/;"	f
ldexpBC	./math/all_test.go	/^var ldexpBC = []float64{$/;"	v
ldexpSC	./math/all_test.go	/^var ldexpSC = []float64{$/;"	v
ldhostobj	./cmd/link/internal/ld/lib.go	/^func ldhostobj(ld func(*obj.Biobuf, string, int64, string), f *obj.Biobuf, pkg string, length int64, pn string, file string) {$/;"	f
ldmacho	./cmd/link/internal/ld/ldmacho.go	/^func ldmacho(f *obj.Biobuf, pkg string, length int64, pn string) {$/;"	f
ldobj	./cmd/link/internal/ld/lib.go	/^func ldobj(f *obj.Biobuf, pkg string, length int64, pn string, file string, whence int) {$/;"	f
ldobjfile	./cmd/link/internal/ld/objfile.go	/^func ldobjfile(ctxt *Link, f *obj.Biobuf, pkg string, length int64, pn string) {$/;"	f
ldpe	./cmd/link/internal/ld/ldpe.go	/^func ldpe(f *obj.Biobuf, pkg string, length int64, pn string) {$/;"	f
ldpkg	./cmd/link/internal/ld/go.go	/^func ldpkg(f *obj.Biobuf, pkg string, length int64, filename string, whence int) {$/;"	f
ldshlibsyms	./cmd/link/internal/ld/lib.go	/^func ldshlibsyms(shlib string) {$/;"	f
le	./cmd/compile/internal/gc/syntax.go	/^	var le *NodeList$/;"	v
le	./text/template/funcs.go	/^func le(arg1, arg2 interface{}) (bool, error) {$/;"	f
le32	./cmd/pprof/internal/profile/proto.go	/^func le32(p []byte) uint32 {$/;"	f
le64	./cmd/pprof/internal/profile/proto.go	/^func le64(p []byte) uint64 {$/;"	f
leadingInt	./time/format.go	/^func leadingInt(s string) (x int64, rem string, err error) {$/;"	f
leadingRegexp	./regexp/syntax/parse.go	/^func (p *parser) leadingRegexp(re *Regexp) *Regexp {$/;"	f
leadingString	./regexp/syntax/parse.go	/^func (p *parser) leadingString(re *Regexp) ([]rune, Flags) {$/;"	f
leaf	./cmd/vet/testdata/asm.go	/^func leaf(x, y int) int$/;"	f
leafCounts	./compress/flate/huffman_code.go	/^	var leafCounts [maxBitsLimit][maxBitsLimit]int32$/;"	v
leafSize	./cmd/compile/internal/big/natconv.go	/^var leafSize int = 8 \/\/ number of Word-size binary values treat as a monolithic block$/;"	v
leafSize	./math/big/natconv.go	/^var leafSize int = 8 \/\/ number of Word-size binary values treat as a monolithic block$/;"	v
leaks	./cmd/compile/internal/gc/esc.go	/^	var leaks bool$/;"	v
left	./cmd/compile/internal/big/intconv.go	/^	var left int   \/\/ space characters to left of digits for right justification ("%8d")$/;"	v
left	./debug/dwarf/testdata/typedef.c	/^	struct tree *left, *right;$/;"	m	struct:tree	typeref:struct:tree::tree	file:
left	./math/big/intconv.go	/^	var left int   \/\/ space characters to left of digits for right justification ("%8d")$/;"	v
leftCheat	./strconv/decimal.go	/^type leftCheat struct {$/;"	t
leftPad	./crypto/rsa/rsa.go	/^func leftPad(input []byte, size int) (out []byte) {$/;"	f
leftShift	./strconv/decimal.go	/^func leftShift(a *decimal, k uint) {$/;"	f
leftShiftTests	./cmd/compile/internal/big/nat_test.go	/^var leftShiftTests = []shiftTest{$/;"	v
leftShiftTests	./math/big/nat_test.go	/^var leftShiftTests = []shiftTest{$/;"	v
leftcheats	./strconv/decimal.go	/^var leftcheats = []leftCheat{$/;"	v
leftover	./runtime/asm_386.s	/^leftover:$/;"	l
leftover	./runtime/asm_amd64.s	/^leftover:$/;"	l
leftover	./runtime/asm_amd64p32.s	/^leftover:$/;"	l
legendDetailLabels	./cmd/pprof/internal/report/report.go	/^func legendDetailLabels(rpt *Report, g graph, origCount, droppedNodes, droppedEdges int) []string {$/;"	f
legendLabels	./cmd/pprof/internal/report/report.go	/^func legendLabels(rpt *Report) []string {$/;"	f
len	./builtin/builtin.go	/^func len(v Type) int$/;"	f
len	./go/parser/parser.go	/^	var len ast.Expr$/;"	v
len	./go/printer/testdata/parser.go	/^	var len ast.Expr$/;"	v
len	./net/mail/message.go	/^func (p *addrParser) len() int {$/;"	f
len	./runtime/runtime-gdb.py	/^	def len(self):$/;"	m	class:SliceValue
len	./syscall/syscall_bsd.go	/^	var len _Socklen = SizeofSockaddrAny$/;"	v
len	./syscall/syscall_freebsd.go	/^	var len _Socklen = SizeofSockaddrAny$/;"	v
len	./syscall/syscall_linux.go	/^	var len _Socklen = SizeofSockaddrAny$/;"	v
len	./syscall/syscall_solaris.go	/^	var len _Socklen = SizeofSockaddrAny$/;"	v
len	./syscall/syscall_unix.go	/^	var len _Socklen = SizeofSockaddrAny$/;"	v
length	./compress/flate/inflate.go	/^		var length int$/;"	v
length	./compress/flate/token.go	/^func (t token) length() uint32 { return uint32((t - matchType) >> lengthShift) }$/;"	f
length	./syscall/syscall_darwin_386.go	/^	var length = uint64(count)$/;"	v
length	./syscall/syscall_darwin_amd64.go	/^	var length = uint64(count)$/;"	v
length	./syscall/syscall_darwin_arm.go	/^	var length = uint64(count)$/;"	v
length	./syscall/syscall_darwin_arm64.go	/^	var length = uint64(count)$/;"	v
length	./syscall/unzip_nacl.go	/^		var length int$/;"	v
length	./text/template/funcs.go	/^func length(item interface{}) (int, error) {$/;"	f
lengthBase	./compress/flate/huffman_bit_writer.go	/^var lengthBase = []uint32{$/;"	v
lengthCode	./compress/flate/token.go	/^func lengthCode(len uint32) uint32 { return lengthCodes[len] }$/;"	f
lengthCodes	./compress/flate/token.go	/^var lengthCodes = [...]uint32{$/;"	v
lengthExtraBits	./compress/flate/huffman_bit_writer.go	/^var lengthExtraBits = []int8{$/;"	v
lengthLength	./encoding/asn1/marshal.go	/^func lengthLength(i int) (numBytes int) {$/;"	f
lenp	./runtime/trace.go	/^	var lenp *byte$/;"	v
lerrorf	./cmd/yacc/yacc.go	/^func lerrorf(lineno int, s string, v ...interface{}) {$/;"	f
lessFunc	./sort/example_multi_test.go	/^type lessFunc func(p1, p2 *Change) bool$/;"	t
lessOrEqTests	./crypto/subtle/constant_time_test.go	/^var lessOrEqTests = []struct {$/;"	v
letter	./unicode/maketables.go	/^func (char *Char) letter(u, l, t string) {$/;"	f
letterTest	./unicode/letter_test.go	/^var letterTest = []rune{$/;"	v
letterValue	./unicode/maketables.go	/^func (char *Char) letterValue(s string, cas string) rune {$/;"	f
levelFrom	./cmd/compile/internal/gc/esc.go	/^func levelFrom(i int) Level {$/;"	f
levelInfo	./compress/flate/huffman_code.go	/^type levelInfo struct {$/;"	t
levelToZlib	./image/png/writer.go	/^func levelToZlib(l CompressionLevel) int {$/;"	f
levels	./compress/flate/deflate.go	/^var levels = []compressionLevel{$/;"	v
levels	./compress/flate/huffman_code.go	/^	var levels [maxBitsLimit]levelInfo$/;"	v
levprd	./cmd/yacc/yacc.go	/^var levprd []int   \/\/ precedence levels for the productions$/;"	v
lex	./cmd/compile/internal/gc/lex.go	/^	var lex int$/;"	v
lex	./text/template/parse/lex.go	/^func lex(name, input, left, right string) *lexer {$/;"	f
lexChar	./text/template/parse/lex.go	/^func lexChar(l *lexer) stateFn {$/;"	f
lexComment	./text/template/parse/lex.go	/^func lexComment(l *lexer) stateFn {$/;"	f
lexDelimTests	./text/template/parse/lex_test.go	/^var lexDelimTests = []lexTest{$/;"	v
lexField	./text/template/parse/lex.go	/^func lexField(l *lexer) stateFn {$/;"	f
lexFieldOrVariable	./text/template/parse/lex.go	/^func lexFieldOrVariable(l *lexer, typ itemType) stateFn {$/;"	f
lexIdentifier	./text/template/parse/lex.go	/^func lexIdentifier(l *lexer) stateFn {$/;"	f
lexInsideAction	./text/template/parse/lex.go	/^func lexInsideAction(l *lexer) stateFn {$/;"	f
lexLeftDelim	./text/template/parse/lex.go	/^func lexLeftDelim(l *lexer) stateFn {$/;"	f
lexNumber	./text/template/parse/lex.go	/^func lexNumber(l *lexer) stateFn {$/;"	f
lexPosTests	./text/template/parse/lex_test.go	/^var lexPosTests = []lexTest{$/;"	v
lexQuote	./text/template/parse/lex.go	/^func lexQuote(l *lexer) stateFn {$/;"	f
lexRawQuote	./text/template/parse/lex.go	/^func lexRawQuote(l *lexer) stateFn {$/;"	f
lexRightDelim	./text/template/parse/lex.go	/^func lexRightDelim(l *lexer) stateFn {$/;"	f
lexSpace	./text/template/parse/lex.go	/^func lexSpace(l *lexer) stateFn {$/;"	f
lexTest	./cmd/asm/internal/lex/lex_test.go	/^type lexTest struct {$/;"	t
lexTest	./text/template/parse/lex_test.go	/^type lexTest struct {$/;"	t
lexTests	./cmd/asm/internal/lex/lex_test.go	/^var lexTests = []lexTest{$/;"	v
lexTests	./text/template/parse/lex_test.go	/^var lexTests = []lexTest{$/;"	v
lexText	./text/template/parse/lex.go	/^func lexText(l *lexer) stateFn {$/;"	f
lexVariable	./text/template/parse/lex.go	/^func lexVariable(l *lexer) stateFn {$/;"	f
lexbuf	./cmd/compile/internal/gc/go.go	/^var lexbuf bytes.Buffer$/;"	v
lexer	./text/template/parse/lex.go	/^type lexer struct {$/;"	t
lexfini	./cmd/compile/internal/gc/lex.go	/^func lexfini() {$/;"	f
lexinit	./cmd/compile/internal/gc/lex.go	/^func lexinit() {$/;"	f
lexinit1	./cmd/compile/internal/gc/lex.go	/^func lexinit1() {$/;"	f
lexlineno	./cmd/compile/internal/gc/go.go	/^var lexlineno int32$/;"	v
lexn	./cmd/compile/internal/gc/lex.go	/^var lexn = []struct {$/;"	v
lexname	./cmd/compile/internal/gc/lex.go	/^func lexname(lex int) string {$/;"	f
lflag	./cmd/yacc/yacc.go	/^var lflag bool    \/\/ -l			- disable line directives$/;"	v
lfnode	./runtime/runtime2.go	/^type lfnode struct {$/;"	t
lfstackPack	./runtime/lfstack_32bit.go	/^func lfstackPack(node *lfnode, cnt uintptr) uint64 {$/;"	f
lfstackPack	./runtime/lfstack_amd64.go	/^func lfstackPack(node *lfnode, cnt uintptr) uint64 {$/;"	f
lfstackPack	./runtime/lfstack_darwin_arm64.go	/^func lfstackPack(node *lfnode, cnt uintptr) uint64 {$/;"	f
lfstackPack	./runtime/lfstack_linux_arm64.go	/^func lfstackPack(node *lfnode, cnt uintptr) uint64 {$/;"	f
lfstackPack	./runtime/lfstack_linux_ppc64x.go	/^func lfstackPack(node *lfnode, cnt uintptr) uint64 {$/;"	f
lfstackUnpack	./runtime/lfstack_32bit.go	/^func lfstackUnpack(val uint64) (node *lfnode, cnt uintptr) {$/;"	f
lfstackUnpack	./runtime/lfstack_amd64.go	/^func lfstackUnpack(val uint64) (node *lfnode, cnt uintptr) {$/;"	f
lfstackUnpack	./runtime/lfstack_darwin_arm64.go	/^func lfstackUnpack(val uint64) (node *lfnode, cnt uintptr) {$/;"	f
lfstackUnpack	./runtime/lfstack_linux_arm64.go	/^func lfstackUnpack(val uint64) (node *lfnode, cnt uintptr) {$/;"	f
lfstackUnpack	./runtime/lfstack_linux_ppc64x.go	/^func lfstackUnpack(val uint64) (node *lfnode, cnt uintptr) {$/;"	f
lfstackpop	./runtime/lfstack.go	/^func lfstackpop(head *uint64) unsafe.Pointer {$/;"	f
lfstackpush	./runtime/lfstack.go	/^func lfstackpush(head *uint64, node *lfnode) {$/;"	f
lg	./sort/sort_test.go	/^func lg(n int) int {$/;"	f
lgamma	./math/all_test.go	/^var lgamma = []fi{$/;"	v
lgammaSC	./math/all_test.go	/^var lgammaSC = []fi{$/;"	v
lhs	./cmd/compile/internal/gc/walk.go	/^	var lhs *Node$/;"	v
lhs	./go/types/decl.go	/^						var lhs []*Var$/;"	v
lhs	./go/types/stmt.go	/^		var lhs *ast.Ident \/\/ lhs identifier or nil$/;"	v
lhsVars	./go/types/assignments.go	/^	var lhsVars = make([]*Var, len(lhs))$/;"	v
lhsVars	./go/types/stmt.go	/^		var lhsVars []*Var               \/\/ list of implicitly declared lhs variables$/;"	v
li	./cmd/compile/internal/gc/walk.go	/^		var li *Node$/;"	v
li	./go/printer/printer.go	/^	var li int \/\/ index of last newline; valid if nlines > 0$/;"	v
lib	./cmd/link/internal/ld/elf.go	/^	var lib *Elflib$/;"	v
lib	./cmd/link/internal/ld/go.go	/^	var lib string$/;"	v
lib	./cmd/link/internal/ld/objfile.go	/^	var lib string$/;"	v
libRx	./cmd/pprof/internal/profile/profile.go	/^var libRx = regexp.MustCompile(`([.]so$|[.]so[._][0-9]+)`)$/;"	v
libcFunc	./runtime/os_solaris.go	/^type libcFunc uintptr$/;"	t
libcFunc	./syscall/zsyscall_solaris_amd64.go	/^type libcFunc uintptr$/;"	t
libcall	./runtime/runtime2.go	/^type libcall struct {$/;"	t
libinit	./cmd/link/internal/ld/lib.go	/^func libinit() {$/;"	f
libopcodesUnsupported	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^var libopcodesUnsupported = strings.Fields(`$/;"	v
limit	./math/big/example_test.go	/^	var limit big.Int$/;"	v
limitWriter	./net/http/cgi/matryoshka_test.go	/^type limitWriter struct {$/;"	t
limitedBytesWriter	./encoding/xml/marshal_test.go	/^type limitedBytesWriter struct {$/;"	t
line	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) line() bool {$/;"	f
line	./cmd/asm/internal/lex/input.go	/^func (in *Input) line() {$/;"	f
line	./cmd/pprof/internal/profile/legacy_profile.go	/^	var line string$/;"	v
line	./debug/dwarf/line_test.go	/^			var line LineEntry$/;"	v
line	./debug/dwarf/line_test.go	/^	var line LineEntry$/;"	v
line	./go/printer/nodes.go	/^				var line int$/;"	v
line	./go/printer/nodes.go	/^		var line int$/;"	v
line	./go/printer/nodes.go	/^	var line int$/;"	v
line	./log/log.go	/^	var line int$/;"	v
line	./net/http/internal/chunked.go	/^	var line []byte$/;"	v
line	./net/textproto/reader.go	/^		var line string$/;"	v
line	./net/textproto/reader.go	/^	var line []byte$/;"	v
line	./syscall/srpc_nacl.go	/^		var line []byte$/;"	v
lineAt	./go/printer/printer_test.go	/^func lineAt(text []byte, offs int) []byte {$/;"	f
lineBreaker	./encoding/pem/pem.go	/^type lineBreaker struct {$/;"	t
lineBreakerTest	./encoding/pem/pem_test.go	/^type lineBreakerTest struct {$/;"	t
lineBreakerTests	./encoding/pem/pem_test.go	/^var lineBreakerTests = []lineBreakerTest{$/;"	v
lineDecoder	./cmd/pprof/internal/profile/encode.go	/^var lineDecoder = []decoder{$/;"	v
lineFor	./go/printer/printer.go	/^func (p *printer) lineFor(pos token.Pos) int {$/;"	f
lineFromAline	./debug/gosym/symtab.go	/^func (o *Obj) lineFromAline(aline int) (string, int) {$/;"	f
lineInfo	./go/token/position.go	/^type lineInfo struct {$/;"	t
lineNumber	./runtime/symtab_test.go	/^func lineNumber() int {$/;"	f
lineNumber	./text/template/parse/lex.go	/^func (l *lexer) lineNumber() int {$/;"	f
lineRe	./cmd/cover/profile.go	/^var lineRe = regexp.MustCompile(`^(.+):([0-9]+).([0-9]+),([0-9]+).([0-9]+) ([0-9]+) ([0-9]+)$`)$/;"	v
lineTerminators	./html/template/transition.go	/^	var lineTerminators string$/;"	v
lineWrapper	./go/doc/comment.go	/^type lineWrapper struct {$/;"	t
linear	./unicode/letter_test.go	/^func linear(ranges []Range16, r uint16) bool {$/;"	f
linebreak	./go/printer/nodes.go	/^func (p *printer) linebreak(line, min int, ws whiteSpace, newSection bool) (printedBreak bool) {$/;"	f
linecol	./go/token/position_test.go	/^func linecol(lines []int, offs int) (int, int) {$/;"	f
linehistpop	./cmd/compile/internal/gc/subr.go	/^func linehistpop() {$/;"	f
linehistpragma	./cmd/compile/internal/gc/subr.go	/^func linehistpragma(file string) {$/;"	f
linehistpush	./cmd/compile/internal/gc/subr.go	/^func linehistpush(file string) {$/;"	f
linehistupdate	./cmd/compile/internal/gc/subr.go	/^func linehistupdate(file string, off int) {$/;"	f
lineno	./cmd/cgo/util.go	/^func lineno(pos token.Pos) string {$/;"	f
lineno	./cmd/compile/internal/gc/go.go	/^var lineno int32$/;"	v
lineno	./cmd/pprof/internal/report/source.go	/^	var lineno = 0$/;"	v
lineno	./cmd/yacc/yacc.go	/^var lineno = 1                    \/\/ current input line number$/;"	v
lineno	./regexp/testdata/testregex.c	/^	int		lineno;$/;"	m	struct:__anon2	file:
lineo	./cmd/link/internal/ld/dwarf.go	/^var lineo int64$/;"	v
linereloco	./cmd/link/internal/ld/dwarf.go	/^var linereloco int64$/;"	v
linerelocsize	./cmd/link/internal/ld/dwarf.go	/^var linerelocsize int64$/;"	v
lines	./cmd/asm/internal/lex/lex_test.go	/^func lines(a ...string) string {$/;"	f
lines	./cmd/pprof/internal/profile/filter.go	/^	var lines []Line$/;"	v
lines	./cmd/yacc/yacc.go	/^func lines(code []rune) [][]rune {$/;"	f
lines	./go/scanner/scanner_test.go	/^var lines = []string{$/;"	v
lines	./go/token/position.go	/^	var lines []int$/;"	v
lines	./runtime/debug/stack.go	/^	var lines [][]byte$/;"	v
linesFrom	./go/printer/printer.go	/^func (p *printer) linesFrom(line int) int {$/;"	f
linesec	./cmd/link/internal/ld/dwarf.go	/^var linesec *LSym$/;"	v
linesize	./cmd/link/internal/ld/dwarf.go	/^var linesize int64$/;"	v
linesym	./cmd/link/internal/ld/dwarf.go	/^var linesym *LSym$/;"	v
linesympos	./cmd/link/internal/ld/dwarf.go	/^var linesympos int64$/;"	v
link	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) link() uint64  { return c.regs().link }$/;"	f
linkEditDataCmd	./cmd/link/internal/ld/macho_combine_dwarf.go	/^type linkEditDataCmd struct {$/;"	t
linkFlags	./net/interface_bsd.go	/^func linkFlags(rawFlags int32) Flags {$/;"	f
linkFlags	./net/interface_linux.go	/^func linkFlags(rawFlags uint32) Flags {$/;"	f
linkLayerAddr	./syscall/route_bsd.go	/^	type linkLayerAddr struct {$/;"	t
linkarchinit	./cmd/compile/internal/amd64/galign.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/compile/internal/arm/galign.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/compile/internal/arm64/galign.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/compile/internal/ppc64/galign.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/compile/internal/x86/galign.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/link/internal/amd64/obj.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/link/internal/arm/obj.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/link/internal/arm64/obj.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/link/internal/ppc64/obj.go	/^func linkarchinit() {$/;"	f
linkarchinit	./cmd/link/internal/x86/obj.go	/^func linkarchinit() {$/;"	f
linkat	./syscall/zsyscall_linux_386.go	/^func linkat(olddirfd int, oldpath string, newdirfd int, newpath string, flags int) (err error) {$/;"	f
linkat	./syscall/zsyscall_linux_amd64.go	/^func linkat(olddirfd int, oldpath string, newdirfd int, newpath string, flags int) (err error) {$/;"	f
linkat	./syscall/zsyscall_linux_arm.go	/^func linkat(olddirfd int, oldpath string, newdirfd int, newpath string, flags int) (err error) {$/;"	f
linkat	./syscall/zsyscall_linux_arm64.go	/^func linkat(olddirfd int, oldpath string, newdirfd int, newpath string, flags int) (err error) {$/;"	f
linkat	./syscall/zsyscall_linux_ppc64.go	/^func linkat(olddirfd int, oldpath string, newdirfd int, newpath string, flags int) (err error) {$/;"	f
linkat	./syscall/zsyscall_linux_ppc64le.go	/^func linkat(olddirfd int, oldpath string, newdirfd int, newpath string, flags int) (err error) {$/;"	f
linkcase	./cmd/internal/obj/arm/obj5.go	/^func linkcase(casep *obj.Prog) {$/;"	f
linked_list	./runtime/runtime-gdb.py	/^def linked_list(ptr, linkfield):$/;"	f
linkgetline	./cmd/internal/obj/obj.go	/^func linkgetline(ctxt *Link, lineno int32, f **LSym, l *int32) {$/;"	f
linknew	./cmd/link/internal/ld/sym.go	/^func linknew(arch *LinkArch) *Link {$/;"	f
linknewsym	./cmd/link/internal/ld/sym.go	/^func linknewsym(ctxt *Link, symb string, v int) *LSym {$/;"	f
linkoff	./cmd/link/internal/ld/macho.go	/^var linkoff int64$/;"	v
linkoffset	./cmd/link/internal/ld/macho_combine_dwarf.go	/^var linkoffset uint32$/;"	v
linkpatch	./cmd/internal/obj/pass.go	/^func linkpatch(ctxt *Link, sym *LSym) {$/;"	f
linkpcln	./cmd/internal/obj/pcln.go	/^func linkpcln(ctxt *Link, cursym *LSym) {$/;"	f
linkrlookup	./cmd/internal/obj/sym.go	/^func linkrlookup(ctxt *Link, name string, v int) *LSym {$/;"	f
linux26	./runtime/vdso_linux_amd64.go	/^var linux26 = version_key{"LINUX_2.6", 0x3ae75f6}$/;"	v
list	./cmd/cgo/out.go	/^		\/\/ Add "error" to return type list.$/;"	t
list	./cmd/compile/internal/gc/dcl.go	/^ * convert a parsed id\/type list into$/;"	t
list	./cmd/compile/internal/gc/syntax.go	/^func list(l *NodeList, n *Node) *NodeList {$/;"	f
list	./cmd/compile/internal/gc/typecheck.go	/^ * typecheck assignment: type list = expression list$/;"	t
list	./cmd/compile/internal/gc/walk.go	/^	 * check assign type list to$/;"	t
list	./cmd/compile/internal/gc/walk.go	/^ * a type list. called in$/;"	t
list	./cmd/cover/cover.go	/^		var list []*ast.Comment$/;"	v
list	./database/sql/sql.go	/^	var list []string$/;"	v
list	./debug/dwarf/testdata/typedef.c	/^struct list {$/;"	s	file:
list	./go/ast/commentmap.go	/^	var list []Node$/;"	v
list	./go/doc/example.go	/^	var list []*Example$/;"	v
list	./go/doc/reader.go	/^	var list []*ast.Field$/;"	v
list	./go/doc/reader.go	/^	var list []string$/;"	v
list	./go/internal/gccgoimporter/parser.go	/^	var list []*types.Var$/;"	v
list	./go/parser/parser.go	/^	var list []*ast.Comment$/;"	v
list	./go/parser/parser.go	/^	var list []*ast.Field$/;"	v
list	./go/parser/parser.go	/^	var list []ast.Expr$/;"	v
list	./go/parser/parser.go	/^	var list []ast.Spec$/;"	v
list	./go/parser/parser.go	/^	var list []ast.Stmt$/;"	v
list	./go/printer/testdata/parser.go	/^	var list []*ast.Comment$/;"	v
list	./go/printer/testdata/parser.go	/^	var list []*ast.Field$/;"	v
list	./go/printer/testdata/parser.go	/^	var list []ast.Expr$/;"	v
list	./go/printer/testdata/parser.go	/^	var list []ast.Spec$/;"	v
list	./go/printer/testdata/parser.go	/^	var list []ast.Stmt$/;"	v
list	./go/scanner/scanner_test.go	/^	var list ErrorList$/;"	v
list	./go/types/methodset.go	/^	var list []*Selection$/;"	v
list	./net/mail/message.go	/^	var list []*Address$/;"	v
list	./runtime/stack1.go	/^	var list gclinkptr$/;"	v
list1	./cmd/compile/internal/gc/syntax.go	/^func list1(n *Node) *NodeList {$/;"	f
listE	./cmd/go/list.go	/^var listE = cmdList.Flag.Bool("e", false, "")$/;"	v
listEntry	./cmd/pack/pack.go	/^func listEntry(ar *Archive, entry *Entry, verbose bool) {$/;"	f
listFmt	./cmd/go/list.go	/^var listFmt = cmdList.Flag.String("f", "{{.ImportPath}}", "")$/;"	v
listJson	./cmd/go/list.go	/^var listJson = cmdList.Flag.Bool("json", false, "")$/;"	v
listTools	./cmd/go/tool.go	/^func listTools() {$/;"	f
listen	./syscall/net_nacl.go	/^func (f *netFile) listen(backlog int) error {$/;"	f
listen	./syscall/zsyscall_windows.go	/^func listen(s Handle, backlog int32) (err error) {$/;"	f
listenDatagram	./net/sock_posix.go	/^func (fd *netFD) listenDatagram(laddr sockaddr) error {$/;"	f
listenErrorTests	./net/error_test.go	/^var listenErrorTests = []struct {$/;"	v
listenIPv4MulticastUDP	./net/udpsock_posix.go	/^func listenIPv4MulticastUDP(c *UDPConn, ifi *Interface, ip IP) error {$/;"	f
listenIPv6MulticastUDP	./net/udpsock_posix.go	/^func listenIPv6MulticastUDP(c *UDPConn, ifi *Interface, ip IP) error {$/;"	f
listenPacketErrorTests	./net/error_test.go	/^var listenPacketErrorTests = []struct {$/;"	v
listenPlan9	./net/ipsock_plan9.go	/^func listenPlan9(net string, laddr Addr) (fd *netFD, err error) {$/;"	f
listenStream	./net/sock_posix.go	/^func (fd *netFD) listenStream(laddr sockaddr, backlog int) error {$/;"	f
listenTCP	./net/rpc/server_test.go	/^func listenTCP() (net.Listener, string) {$/;"	f
listener	./crypto/tls/tls.go	/^type listener struct {$/;"	t
listener	./syscall/net_nacl.go	/^type listener struct {$/;"	t
listenerBacklog	./net/net.go	/^var listenerBacklog = maxListenerBacklog()$/;"	v
listenerFile	./net/file_test.go	/^type listenerFile interface {$/;"	t
listnextp	./cmd/link/internal/ld/data.go	/^func listnextp(s *LSym) **LSym {$/;"	f
lists	./go/types/typexpr.go	/^\/\/ byUniqueTypeName named type lists can be sorted by their unique type names.$/;"	t
listsort	./cmd/compile/internal/gc/syntax.go	/^func listsort(l **NodeList, f func(*Node, *Node) int) {$/;"	f
listsort	./cmd/link/internal/ld/data.go	/^func listsort(l *LSym, cmp func(*LSym, *LSym) int, nextp func(*LSym) **LSym) *LSym {$/;"	f
liststmt	./cmd/compile/internal/gc/subr.go	/^func liststmt(l *NodeList) *Node {$/;"	f
listsubp	./cmd/link/internal/ld/data.go	/^func listsubp(s *LSym) **LSym {$/;"	f
listtreecopy	./cmd/compile/internal/gc/subr.go	/^func listtreecopy(l *NodeList, lineno int32) *NodeList {$/;"	f
lit	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) lit(x byte) {$/;"	f
lit	./reflect/all_test.go	/^func lit(x ...byte) []byte       { return x }$/;"	f
lit	./regexp/syntax/parse.go	/^					var lit string$/;"	v
litas	./cmd/compile/internal/gc/sinit.go	/^func litas(l *Node, r *Node, init **NodeList) {$/;"	f
litbuf	./cmd/compile/internal/gc/go.go	/^var litbuf string$/;"	v
literal	./cmd/compile/internal/gc/fmt.go	/^			return "func literal"$/;"	f
literal	./cmd/compile/internal/gc/go.go	/^	Orig   *Type \/\/ original type (type literal or predefined type)$/;"	t
literal	./cmd/cover/cover.go	/^	var literal funcLitFinder$/;"	v
literal	./cmd/cover/cover.go	/^\/\/ hasFuncLiteral reports the existence and position of the first func literal$/;"	f
literal	./cmd/cover/cover.go	/^\/\/ in the node, if any. If a func literal appears, it usually marks the termination$/;"	f
literal	./cmd/vet/rangeloop.go	/^			f.Bad(id.Pos(), "range variable", id.Name, "captured by func literal")$/;"	f
literal	./cmd/vet/testdata/rangeloop.go	/^			_ = f \/\/ ERROR "range variable f captured by func literal"$/;"	f
literal	./cmd/vet/testdata/rangeloop.go	/^			println(i) \/\/ ERROR "range variable i captured by func literal"$/;"	f
literal	./cmd/vet/testdata/rangeloop.go	/^			println(v) \/\/ ERROR "range variable v captured by func literal"$/;"	f
literal	./compress/flate/token.go	/^func (t token) literal() uint32 { return uint32(t - literalType) }$/;"	f
literal	./encoding/json/decode.go	/^func (d *decodeState) literal(v reflect.Value) {$/;"	f
literal	./regexp/syntax/parse.go	/^func (p *parser) literal(r rune) {$/;"	f
literal	./runtime/stubs.go	/^\/\/ It is common to use a func literal as the argument, in order$/;"	f
literalEncoding	./compress/flate/huffman_bit_writer.go	/^	var literalEncoding = fixedLiteralEncoding$/;"	v
literalInterface	./encoding/json/decode.go	/^func (d *decodeState) literalInterface() interface{} {$/;"	f
literalNode	./compress/flate/huffman_code.go	/^type literalNode struct {$/;"	t
literalNodeSorter	./compress/flate/huffman_code.go	/^type literalNodeSorter struct {$/;"	t
literalRegexp	./regexp/syntax/parse.go	/^func literalRegexp(s string, flags Flags) *Regexp {$/;"	f
literalStore	./encoding/json/decode.go	/^func (d *decodeState) literalStore(item []byte, v reflect.Value, fromQuoted bool) {$/;"	f
literalTests	./regexp/syntax/parse_test.go	/^var literalTests = []parseTest{$/;"	v
literalToken	./compress/flate/token.go	/^func literalToken(literal uint32) token { return token(literalType + literal) }$/;"	f
literals	./cmd/compile/internal/gc/dcl.go	/^		\/\/ use checkargs, but can happen for func literals in$/;"	f
literals	./cmd/vet/testdata/deadcode.go	/^\/\/ again, with func literals$/;"	f
literals	./go/scanner/scanner_test.go	/^	\/\/ Identifiers and basic type literals$/;"	t
literals	./go/token/token.go	/^	\/\/ Identifiers and basic type literals$/;"	t
literals	./go/token/token.go	/^\/\/ and basic type literals; it returns false otherwise.$/;"	t
literals	./go/types/exprstring_test.go	/^	\/\/ basic type literals$/;"	t
little	./encoding/binary/binary_test.go	/^var little = []byte{$/;"	v
littleEndian	./crypto/md5/gen.go	/^var littleEndian bool$/;"	v
littleEndian	./crypto/md5/md5block.go	/^var littleEndian bool$/;"	v
littleEndian	./encoding/binary/binary.go	/^type littleEndian struct{}$/;"	t
liveSwitchReader	./net/http/server.go	/^type liveSwitchReader struct {$/;"	t
liveness	./cmd/compile/internal/gc/plive.go	/^func liveness(fn *Node, firstp *obj.Prog, argssym *Sym, livesym *Sym) {$/;"	f
livenesscompact	./cmd/compile/internal/gc/plive.go	/^func livenesscompact(lv *Liveness) {$/;"	f
livenessepilogue	./cmd/compile/internal/gc/plive.go	/^func livenessepilogue(lv *Liveness) {$/;"	f
livenessprintblock	./cmd/compile/internal/gc/plive.go	/^func livenessprintblock(lv *Liveness, bb *BasicBlock) {$/;"	f
livenessprintcfg	./cmd/compile/internal/gc/plive.go	/^func livenessprintcfg(lv *Liveness) {$/;"	f
livenessprintdebug	./cmd/compile/internal/gc/plive.go	/^func livenessprintdebug(lv *Liveness) {$/;"	f
livenessprologue	./cmd/compile/internal/gc/plive.go	/^func livenessprologue(lv *Liveness) {$/;"	f
livenesssolve	./cmd/compile/internal/gc/plive.go	/^func livenesssolve(lv *Liveness) {$/;"	f
lkst	./cmd/yacc/yacc.go	/^var lkst []Lkset$/;"	v
ll	./cmd/compile/internal/gc/esc.go	/^		var ll *NodeList$/;"	v
ll	./cmd/compile/internal/gc/sinit.go	/^		var ll *Node$/;"	v
ll	./cmd/compile/internal/gc/swt.go	/^	var ll *NodeList$/;"	v
ll	./cmd/compile/internal/gc/walk.go	/^		var ll *NodeList$/;"	v
ll	./cmd/compile/internal/gc/walk.go	/^	var ll *NodeList$/;"	v
ll	./cmd/compile/internal/gc/walk.go	/^	var ll *Type$/;"	v
llen	./net/fd_windows.go	/^	var llen, rlen int32$/;"	v
ln1	./net/listen_test.go	/^			var ln1 Listener$/;"	v
lno	./cmd/compile/internal/gc/const.go	/^	var lno int$/;"	v
lno	./cmd/compile/internal/gc/dcl.go	/^	var lno int$/;"	v
lns	./net/mockserver_test.go	/^		var lns []*TCPListener$/;"	v
lo	./cmd/compile/internal/arm/cgen.go	/^	var lo gc.Node$/;"	v
lo	./cmd/compile/internal/arm/ggen.go	/^		var lo gc.Node$/;"	v
lo	./cmd/compile/internal/x86/cgen.go	/^	var lo gc.Node$/;"	v
lo	./cmd/compile/internal/x86/ggen.go	/^			var lo gc.Node$/;"	v
lo	./compress/flate/deflate_test.go	/^		var lo, hi int$/;"	v
lo	./path/filepath/match.go	/^				var lo, hi rune$/;"	v
lo	./path/match.go	/^				var lo, hi rune$/;"	v
lo	./regexp/syntax/parse.go	/^		var lo, hi rune$/;"	v
lo1	./cmd/compile/internal/arm/cgen64.go	/^	var lo1 gc.Node$/;"	v
lo1	./cmd/compile/internal/x86/cgen64.go	/^		var lo1 gc.Node$/;"	v
lo1	./cmd/compile/internal/x86/cgen64.go	/^	var lo1 gc.Node$/;"	v
lo2	./cmd/compile/internal/arm/cgen64.go	/^		var lo2 gc.Node$/;"	v
lo2	./cmd/compile/internal/arm/cgen64.go	/^	var lo2 gc.Node$/;"	v
lo2	./cmd/compile/internal/x86/cgen64.go	/^	var lo2 gc.Node$/;"	v
lo64	./runtime/vlrt.go	/^		var lo64 uint64$/;"	v
load	./cmd/go/pkg.go	/^func (p *Package) load(stk *importStack, bp *build.Package, err error) *Package {$/;"	f
load	./cmd/go/test.go	/^func (t *testFuncs) load(filename, pkg string, doImport, seen *bool) error {$/;"	f
load	./cmd/link/internal/ld/macho.go	/^var load []MachoLoad$/;"	v
load32loop	./sync/atomic/asm_darwin_arm.s	/^load32loop:$/;"	l
load32loop	./sync/atomic/asm_freebsd_arm.s	/^load32loop:$/;"	l
load32loop	./sync/atomic/asm_nacl_arm.s	/^load32loop:$/;"	l
load32loop	./sync/atomic/asm_netbsd_arm.s	/^load32loop:$/;"	l
load32loop	./sync/atomic/asm_openbsd_arm.s	/^load32loop:$/;"	l
load64loop	./sync/atomic/asm_arm.s	/^load64loop:$/;"	l
loadBlock	./encoding/gob/debug.go	/^func (deb *debugger) loadBlock(eofOK bool) int {$/;"	f
loadCasefold	./unicode/maketables.go	/^func loadCasefold() {$/;"	f
loadChars	./unicode/maketables.go	/^func loadChars() {$/;"	f
loadCmd	./cmd/link/internal/ld/macho_combine_dwarf.go	/^type loadCmd struct {$/;"	t
loadCmdReader	./cmd/link/internal/ld/macho_combine_dwarf.go	/^type loadCmdReader struct {$/;"	t
loadConfig	./sync/atomic/value_test.go	/^func loadConfig() map[string]string {$/;"	f
loadDWARF	./cmd/cgo/gcc.go	/^func (p *Package) loadDWARF(f *File, names []*Name) {$/;"	f
loadData	./crypto/tls/handshake_client_test.go	/^func (test *clientTest) loadData() (flows [][]byte, err error) {$/;"	f
loadData	./crypto/tls/handshake_server_test.go	/^func (test *serverTest) loadData() (flows [][]byte, err error) {$/;"	f
loadDefines	./cmd/cgo/gcc.go	/^func (p *Package) loadDefines(f *File) {$/;"	f
loadFileId	./os/types_windows.go	/^func (fs *fileStat) loadFileId() error {$/;"	f
loadImport	./cmd/go/pkg.go	/^func loadImport(path, srcDir string, parent *Package, stk *importStack, importPos []token.Position, mode int) *Package {$/;"	f
loadLocation	./time/zoneinfo_ios.go	/^func loadLocation(name string) (*Location, error) {$/;"	f
loadLocation	./time/zoneinfo_plan9.go	/^func loadLocation(name string) (*Location, error) {$/;"	f
loadLocation	./time/zoneinfo_unix.go	/^func loadLocation(name string) (*Location, error) {$/;"	f
loadLocation	./time/zoneinfo_windows.go	/^func loadLocation(name string) (*Location, error) {$/;"	f
loadMimeFile	./mime/type_plan9.go	/^func loadMimeFile(filename string) {$/;"	f
loadMimeFile	./mime/type_unix.go	/^func loadMimeFile(filename string) {$/;"	f
loadOptionalSyscalls	./runtime/os1_windows.go	/^func loadOptionalSyscalls() {$/;"	f
loadPETable	./cmd/internal/objfile/pe.go	/^func loadPETable(f *pe.File, sname, ename string) ([]byte, error) {$/;"	f
loadPackage	./cmd/go/pkg.go	/^func loadPackage(arg string, stk *importStack) *Package {$/;"	f
loadPlan9Table	./cmd/internal/objfile/plan9obj.go	/^func loadPlan9Table(f *plan9obj.File, sname, ename string) ([]byte, error) {$/;"	f
loadSyms	./cmd/addr2line/addr2line_test.go	/^func loadSyms(t *testing.T) map[string]string {$/;"	f
loadTestFuncs	./cmd/go/test.go	/^func loadTestFuncs(ptest *Package) (*testFuncs, error) {$/;"	f
loadUint64	./sync/atomic/64bit_arm.go	/^func loadUint64(addr *uint64) (val uint64) {$/;"	f
loadZoneData	./time/zoneinfo_read.go	/^func loadZoneData(bytes []byte) (l *Location, err error) {$/;"	f
loadZoneDataPlan9	./time/zoneinfo_plan9.go	/^func loadZoneDataPlan9(s string) (l *Location, err error) {$/;"	f
loadZoneFile	./time/zoneinfo_read.go	/^func loadZoneFile(dir, name string) (l *Location, err error) {$/;"	f
loadZoneFilePlan9	./time/zoneinfo_plan9.go	/^func loadZoneFilePlan9(name string) (*Location, error) {$/;"	f
loadZoneZip	./time/zoneinfo_read.go	/^func loadZoneZip(zipfile, name string) (l *Location, err error) {$/;"	f
load_budget	./cmd/link/internal/ld/macho.go	/^var load_budget int = INITIAL_MACHO_HEADR - 2*1024$/;"	v
load_g_cx	./cmd/internal/obj/x86/obj6.go	/^func load_g_cx(ctxt *obj.Link, p *obj.Prog) *obj.Prog {$/;"	f
loadcgo	./cmd/link/internal/ld/go.go	/^func loadcgo(file string, pkg string, p string) {$/;"	f
loader	./cmd/trace/main.go	/^var loader struct {$/;"	v
loadinternal	./cmd/link/internal/ld/lib.go	/^func loadinternal(name string) {$/;"	f
loadlib	./cmd/link/internal/ld/lib.go	/^func loadlib() {$/;"	f
loadlibrary	./syscall/dll_windows.go	/^func loadlibrary(filename *uint16) (handle uintptr, err Errno)$/;"	f
loadloop1	./sync/atomic/asm_linux_arm.s	/^loadloop1:$/;"	l
loadpkgdata	./cmd/link/internal/ld/go.go	/^func loadpkgdata(file string, pkg string, data string) {$/;"	f
loadregs	./runtime/sys_windows_amd64.s	/^loadregs:$/;"	l
loadsys	./cmd/compile/internal/gc/go.y	/^loadsys:$/;"	l
loadu32	./cmd/internal/obj/ppc64/asm9.go	/^func loadu32(r int, d int64) uint32 {$/;"	f
loc	./cmd/vet/main.go	/^func (f *File) loc(pos token.Pos) string {$/;"	f
locabs	./time/time.go	/^func (t Time) locabs() (name string, offset int, abs uint64) {$/;"	f
local	./cmd/compile/internal/gc/plive.go	/^	var local Bvec$/;"	v
local	./cmd/link/internal/ld/go.go	/^	var local string$/;"	v
local	./net/mail/message.go	/^	var local, domain string$/;"	v
local	./net/rpc/server_test.go	/^type local struct{}$/;"	t
localBuf	./strconv/strconv_test.go	/^			var localBuf [64]byte$/;"	v
localError	./go/ast/print.go	/^type localError struct {$/;"	t
localFiles	./unicode/maketables.go	/^var localFiles = flag.Bool("local",$/;"	v
localLoc	./time/zoneinfo.go	/^var localLoc Location$/;"	v
localOnce	./time/zoneinfo.go	/^var localOnce sync.Once$/;"	v
localPacketServer	./net/mockserver_test.go	/^type localPacketServer struct {$/;"	t
localPart	./net/mail/message.go	/^	var localPart string$/;"	v
localRedirect	./net/http/fs.go	/^func localRedirect(w ResponseWriter, r *Request, newPath string) {$/;"	f
localServer	./net/mockserver_test.go	/^type localServer struct {$/;"	t
localTmp	./os/os_test.go	/^func localTmp() string {$/;"	f
localbuild	./make.bat	/^:localbuild$/;"	l
localexpr	./cmd/compile/internal/gc/subr.go	/^func localexpr(n *Node, t *Type, init **NodeList) *Node {$/;"	f
localhostCert	./net/http/httptest/server.go	/^var localhostCert = []byte(`-----BEGIN CERTIFICATE-----$/;"	v
localhostCert	./net/smtp/smtp_test.go	/^var localhostCert = []byte(`-----BEGIN CERTIFICATE-----$/;"	v
localhostKey	./net/http/httptest/server.go	/^var localhostKey = []byte(`-----BEGIN RSA PRIVATE KEY-----$/;"	v
localhostKey	./net/smtp/smtp_test.go	/^var localhostKey = []byte(`-----BEGIN RSA PRIVATE KEY-----$/;"	v
localimport	./cmd/compile/internal/gc/go.go	/^var localimport string$/;"	v
localpkg	./cmd/compile/internal/gc/go.go	/^var localpkg *Pkg \/\/ package being compiled$/;"	v
locals	./cmd/compile/internal/gc/plive.go	/^	var locals Bvec$/;"	v
localswords	./cmd/compile/internal/gc/plive.go	/^func localswords() int32 {$/;"	f
localtests	./time/time_test.go	/^var localtests = []TimeTest{$/;"	v
locateFile	./cmd/pprof/internal/symbolizer/symbolizer.go	/^func locateFile(obj plugin.ObjTool, file, buildID string, start uint64) (plugin.ObjFile, error) {$/;"	f
locationDecoder	./cmd/pprof/internal/profile/encode.go	/^var locationDecoder = []decoder{$/;"	v
lock	./runtime/lock_futex.go	/^func lock(l *mutex) {$/;"	f
lock	./runtime/lock_sema.go	/^func lock(l *mutex) {$/;"	f
lockOSThread	./runtime/proc1.go	/^func lockOSThread() {$/;"	f
lockPath	./cmd/vet/copylock.go	/^func lockPath(tpkg *types.Package, typ types.Type) typePath {$/;"	f
lockProfiles	./runtime/pprof/pprof.go	/^func lockProfiles() {$/;"	f
lockRxStr	./cmd/pprof/internal/profile/legacy_profile.go	/^var lockRxStr = strings.Join([]string{$/;"	v
locked	./runtime/iface.go	/^	var locked int$/;"	v
lockedOSThread	./runtime/proc.go	/^func lockedOSThread() bool {$/;"	f
lockedSource	./math/rand/rand.go	/^type lockedSource struct {$/;"	t
lockextra	./runtime/proc1.go	/^func lockextra(nilokay bool) *m {$/;"	f
locktab	./runtime/atomic_arm.go	/^var locktab [57]struct {$/;"	v
locs	./cmd/pprof/internal/profile/filter.go	/^				var locs []*Location$/;"	v
locs	./cmd/pprof/internal/profile/legacy_profile.go	/^	var locs []*Location$/;"	v
log	./go/doc/testdata/testing.go	/^func (c *common) log(s string) {$/;"	f
log	./math/all_test.go	/^var log = []float64{$/;"	v
log	./math/cmplx/cmath_test.go	/^var log = []complex128{$/;"	v
log	./math/log.go	/^func log(x float64) float64 {$/;"	f
log	./net/http/client_test.go	/^	var log struct {$/;"	v
log	./net/http/fs_test.go	/^		var log []string$/;"	v
log	./testing/testing.go	/^func (c *common) log(s string) {$/;"	f
log10	./math/all_test.go	/^var log10 = []float64{$/;"	v
log10	./math/cmplx/cmath_test.go	/^var log10 = []complex128{$/;"	v
log10	./math/log10.go	/^func log10(x float64) float64 {$/;"	f
log10SC	./math/cmplx/cmath_test.go	/^var log10SC = []complex128{$/;"	v
log1p	./math/all_test.go	/^var log1p = []float64{$/;"	v
log1p	./math/log1p.go	/^func log1p(x float64) float64 {$/;"	f
log1pSC	./math/all_test.go	/^var log1pSC = []float64{$/;"	v
log2	./cmd/compile/internal/big/arith.go	/^func log2(x Word) int {$/;"	f
log2	./cmd/compile/internal/gc/cgen.go	/^func log2(n uint64) int {$/;"	f
log2	./image/gif/writer.go	/^func log2(x int) int {$/;"	f
log2	./math/all_test.go	/^var log2 = []float64{$/;"	v
log2	./math/big/arith.go	/^func log2(x Word) int {$/;"	f
log2	./math/log10.go	/^func log2(x float64) float64 {$/;"	f
log2	./sort/search_test.go	/^func log2(x int) int {$/;"	f
log2Lookup	./image/gif/writer.go	/^var log2Lookup = [8]int{2, 4, 8, 16, 32, 64, 128, 256}$/;"	v
logSC	./math/all_test.go	/^var logSC = []float64{$/;"	v
logSC	./math/cmplx/cmath_test.go	/^var logSC = []complex128{$/;"	v
logWrites	./net/http/request_test.go	/^type logWrites struct {$/;"	t
logWritesConn	./net/http/transport_test.go	/^type logWritesConn struct {$/;"	t
logb	./math/all_test.go	/^var logb = []float64{$/;"	v
logbBC	./math/all_test.go	/^var logbBC = []float64{$/;"	v
logbSC	./math/all_test.go	/^var logbSC = []float64{$/;"	v
logbuf	./net/http/cookie_test.go	/^	var logbuf bytes.Buffer$/;"	v
logbuf	./net/http/transport_test.go	/^	var logbuf bytes.Buffer$/;"	v
logdAddr	./runtime/print1_write_android.go	/^var logdAddr sockaddr_un$/;"	v
logf	./cmd/go/main.go	/^var logf = log.Printf$/;"	v
logf	./net/http/client_test.go	/^func (j *RecordingJar) logf(format string, args ...interface{}) {$/;"	f
logf	./net/http/httputil/reverseproxy.go	/^func (p *ReverseProxy) logf(format string, args ...interface{}) {$/;"	f
logf	./net/http/server.go	/^func (s *Server) logf(format string, args ...interface{}) {$/;"	f
logger	./runtime/print1_write_android.go	/^var logger loggerType$/;"	v
logger	./unicode/maketables.go	/^var logger = log.New(os.Stderr, "", log.Lshortfile)$/;"	v
loggerType	./runtime/print1_write_android.go	/^type loggerType int32$/;"	t
logget	./runtime/mgcwork.go	/^func (b *workbuf) logget(entry int) {$/;"	f
loggingConn	./net/http/server.go	/^type loggingConn struct {$/;"	t
logput	./runtime/mgcwork.go	/^func (b *workbuf) logput(entry int) {$/;"	f
longDayNames	./time/format.go	/^var longDayNames = []string{$/;"	v
longLine	./mime/multipart/multipart_test.go	/^var longLine = strings.Repeat("\\n\\n\\r\\r\\r\\n\\r\\000", (1<<20)\/8)$/;"	v
longMonthNames	./time/format.go	/^var longMonthNames = []string{$/;"	v
longestCommonSuffix	./strings/search.go	/^func longestCommonSuffix(a, b string) (i int) {$/;"	f
lookExtensions	./os/exec/exec.go	/^func lookExtensions(path, dir string) (string, error) {$/;"	f
lookPathTest	./os/exec/lp_windows_test.go	/^type lookPathTest struct {$/;"	t
lookPathTests	./os/exec/lp_windows_test.go	/^var lookPathTests = []lookPathTest{$/;"	v
lookdot	./cmd/compile/internal/gc/typecheck.go	/^func lookdot(n *Node, t *Type, dostrcmp int) *Type {$/;"	f
lookdot0	./cmd/compile/internal/gc/subr.go	/^func lookdot0(s *Sym, t *Type, save **Type, ignorecase int) int {$/;"	f
lookdot1	./cmd/compile/internal/gc/typecheck.go	/^func lookdot1(errnode *Node, s *Sym, t *Type, f *Type, dostrcmp int) *Type {$/;"	f
lookingForIndex	./crypto/rsa/rsa.go	/^	var lookingForIndex, index, invalid int$/;"	v
looktypedot	./cmd/compile/internal/gc/typecheck.go	/^func looktypedot(n *Node, t *Type, dostrcmp int) bool {$/;"	f
lookup	./cmd/asm/internal/lex/input.go	/^func lookup(args []string, arg string) int {$/;"	f
lookup	./cmd/internal/objfile/disasm.go	/^func (d *Disasm) lookup(addr uint64) (name string, base uint64) {$/;"	f
lookup	./net/dnsclient_unix.go	/^func lookup(name string, qtype uint16) (cname string, rrs []dnsRR, err error) {$/;"	f
lookup	./os/user/lookup_plan9.go	/^func lookup(username string) (*User, error) {$/;"	f
lookup	./os/user/lookup_stubs.go	/^func lookup(username string) (*User, error) {$/;"	f
lookup	./os/user/lookup_unix.go	/^func lookup(username string) (*User, error) {$/;"	f
lookup	./os/user/lookup_windows.go	/^func lookup(username string) (*User, error) {$/;"	f
lookup	./runtime/symtab.go	/^const pcbucketsize = 256 * minfunc \/\/ size of bucket in the pc->func lookup table$/;"	f
lookup	./strings/replace.go	/^func (r *genericReplacer) lookup(s string, ignoreRoot bool) (val string, keylen int, found bool) {$/;"	f
lookup	./time/format.go	/^func lookup(tab []string, val string) (int, string, error) {$/;"	f
lookup	./time/zoneinfo.go	/^func (l *Location) lookup(sec int64) (name string, offset int, isDST bool, start, end int64) {$/;"	f
lookupAddr	./net/lookup_plan9.go	/^func lookupAddr(addr string) (name []string, err error) {$/;"	f
lookupAddr	./net/lookup_stub.go	/^func lookupAddr(addr string) (ptrs []string, err error) {$/;"	f
lookupAddr	./net/lookup_unix.go	/^func lookupAddr(addr string) ([]string, error) {$/;"	f
lookupAddr	./net/lookup_windows.go	/^func lookupAddr(addr string) ([]string, error) {$/;"	f
lookupAll	./index/suffixarray/suffixarray.go	/^func (x *Index) lookupAll(s []byte) []int {$/;"	f
lookupAndEscapeTemplate	./html/template/template.go	/^func (t *Template) lookupAndEscapeTemplate(name string) (tmpl *Template, err error) {$/;"	f
lookupBuiltinType	./go/internal/gccgoimporter/parser.go	/^func lookupBuiltinType(typ int) types.Type {$/;"	f
lookupCNAME	./net/lookup_plan9.go	/^func lookupCNAME(name string) (cname string, err error) {$/;"	f
lookupCNAME	./net/lookup_stub.go	/^func lookupCNAME(name string) (cname string, err error) {$/;"	f
lookupCNAME	./net/lookup_unix.go	/^func lookupCNAME(name string) (string, error) {$/;"	f
lookupCNAME	./net/lookup_windows.go	/^func lookupCNAME(name string) (string, error) {$/;"	f
lookupCache	./reflect/type.go	/^var lookupCache struct {$/;"	v
lookupFieldOrMethod	./go/types/lookup.go	/^func lookupFieldOrMethod(T Type, addressable bool, pkg *Package, name string) (obj Object, index []int, indirect bool) {$/;"	f
lookupFirstZone	./time/zoneinfo.go	/^func (l *Location) lookupFirstZone() int {$/;"	f
lookupFullName	./os/user/lookup_windows.go	/^func lookupFullName(domain, username, domainAndUser string) (string, error) {$/;"	f
lookupFullNameDomain	./os/user/lookup_windows.go	/^func lookupFullNameDomain(domainAndUser string) (string, error) {$/;"	f
lookupFullNameServer	./os/user/lookup_windows.go	/^func lookupFullNameServer(servername, username string) (string, error) {$/;"	f
lookupFunc	./cmd/internal/objfile/disasm.go	/^type lookupFunc func(addr uint64) (sym string, base uint64)$/;"	t
lookupFunc	./cmd/objdump/main.go	/^type lookupFunc func(addr uint64) (sym string, base uint64)$/;"	t
lookupGmailMXTests	./net/lookup_test.go	/^var lookupGmailMXTests = []struct {$/;"	v
lookupGmailNSTests	./net/lookup_test.go	/^var lookupGmailNSTests = []struct {$/;"	v
lookupGmailTXTTests	./net/lookup_test.go	/^var lookupGmailTXTTests = []struct {$/;"	v
lookupGoogleHostTests	./net/lookup_test.go	/^var lookupGoogleHostTests = []struct {$/;"	v
lookupGoogleIPTests	./net/lookup_test.go	/^var lookupGoogleIPTests = []struct {$/;"	v
lookupGooglePublicDNSAddrTests	./net/lookup_test.go	/^var lookupGooglePublicDNSAddrTests = []struct {$/;"	v
lookupGoogleSRVTests	./net/lookup_test.go	/^var lookupGoogleSRVTests = []struct {$/;"	v
lookupGroup	./net/lookup.go	/^var lookupGroup singleflight.Group$/;"	v
lookupHost	./net/lookup_plan9.go	/^func lookupHost(host string) (addrs []string, err error) {$/;"	f
lookupHost	./net/lookup_stub.go	/^func lookupHost(host string) (addrs []string, err error) {$/;"	f
lookupHost	./net/lookup_unix.go	/^func lookupHost(host string) (addrs []string, err error) {$/;"	f
lookupHost	./net/lookup_windows.go	/^func lookupHost(name string) ([]string, error) {$/;"	f
lookupIANACNAMETests	./net/lookup_test.go	/^var lookupIANACNAMETests = []struct {$/;"	v
lookupIP	./net/lookup_plan9.go	/^func lookupIP(host string) (addrs []IPAddr, err error) {$/;"	f
lookupIP	./net/lookup_stub.go	/^func lookupIP(host string) (addrs []IPAddr, err error) {$/;"	f
lookupIP	./net/lookup_unix.go	/^func lookupIP(host string) (addrs []IPAddr, err error) {$/;"	f
lookupIPDeadline	./net/lookup.go	/^func lookupIPDeadline(host string, deadline time.Time) (addrs []IPAddr, err error) {$/;"	f
lookupIPMerge	./net/lookup.go	/^func lookupIPMerge(host string) (addrs []IPAddr, err error) {$/;"	f
lookupIPReturn	./net/lookup.go	/^func lookupIPReturn(addrsi interface{}, err error, shared bool) ([]IPAddr, error) {$/;"	f
lookupId	./os/user/lookup_plan9.go	/^func lookupId(uid string) (*User, error) {$/;"	f
lookupId	./os/user/lookup_stubs.go	/^func lookupId(uid string) (*User, error) {$/;"	f
lookupId	./os/user/lookup_unix.go	/^func lookupId(uid string) (*User, error) {$/;"	f
lookupId	./os/user/lookup_windows.go	/^func lookupId(uid string) (*User, error) {$/;"	f
lookupImport	./cmd/link/internal/ld/go.go	/^func lookupImport(name string) *Import {$/;"	f
lookupLocalhost	./net/lookup_test.go	/^func lookupLocalhost(fn func(string) ([]IPAddr, error), host string) ([]IPAddr, error) {$/;"	f
lookupMX	./net/lookup_plan9.go	/^func lookupMX(name string) (mx []*MX, err error) {$/;"	f
lookupMX	./net/lookup_stub.go	/^func lookupMX(name string) (mxs []*MX, err error) {$/;"	f
lookupMX	./net/lookup_unix.go	/^func lookupMX(name string) ([]*MX, error) {$/;"	f
lookupMX	./net/lookup_windows.go	/^func lookupMX(name string) ([]*MX, error) {$/;"	f
lookupMethod	./go/types/lookup.go	/^func lookupMethod(methods []*Func, pkg *Package, name string) (int, *Func) {$/;"	f
lookupNS	./net/lookup_plan9.go	/^func lookupNS(name string) (ns []*NS, err error) {$/;"	f
lookupNS	./net/lookup_stub.go	/^func lookupNS(name string) (nss []*NS, err error) {$/;"	f
lookupNS	./net/lookup_unix.go	/^func lookupNS(name string) ([]*NS, error) {$/;"	f
lookupNS	./net/lookup_windows.go	/^func lookupNS(name string) ([]*NS, error) {$/;"	f
lookupName	./time/zoneinfo.go	/^func (l *Location) lookupName(name string, unix int64) (offset int, isDST bool, ok bool) {$/;"	f
lookupOrderName	./net/dnsclient_unix.go	/^var lookupOrderName = map[hostLookupOrder]string{$/;"	v
lookupPkg	./cmd/link/internal/ld/go.go	/^func lookupPkg(path string) *Pkg {$/;"	f
lookupPort	./net/lookup_plan9.go	/^func lookupPort(network, service string) (port int, err error) {$/;"	f
lookupPort	./net/lookup_stub.go	/^func lookupPort(network, service string) (port int, err error) {$/;"	f
lookupPort	./net/lookup_unix.go	/^func lookupPort(network, service string) (int, error) {$/;"	f
lookupProtocol	./net/lookup_plan9.go	/^func lookupProtocol(name string) (proto int, err error) {$/;"	f
lookupProtocol	./net/lookup_stub.go	/^func lookupProtocol(name string) (proto int, err error) {$/;"	f
lookupProtocol	./net/lookup_unix.go	/^func lookupProtocol(name string) (int, error) {$/;"	f
lookupProtocol	./net/lookup_windows.go	/^func lookupProtocol(name string) (int, error) {$/;"	f
lookupSRV	./net/lookup_plan9.go	/^func lookupSRV(service, proto, name string) (cname string, addrs []*SRV, err error) {$/;"	f
lookupSRV	./net/lookup_stub.go	/^func lookupSRV(service, proto, name string) (cname string, srvs []*SRV, err error) {$/;"	f
lookupSRV	./net/lookup_unix.go	/^func lookupSRV(service, proto, name string) (string, []*SRV, error) {$/;"	f
lookupSRV	./net/lookup_windows.go	/^func lookupSRV(service, proto, name string) (string, []*SRV, error) {$/;"	f
lookupSlowFast	./net/dial_test.go	/^func lookupSlowFast(fn func(string) ([]IPAddr, error), host string) ([]IPAddr, error) {$/;"	f
lookupStaticAddr	./net/hosts.go	/^func lookupStaticAddr(addr string) []string {$/;"	f
lookupStaticAddrTests	./net/hosts_test.go	/^var lookupStaticAddrTests = []struct {$/;"	v
lookupStaticHost	./net/hosts.go	/^func lookupStaticHost(host string) []string {$/;"	f
lookupStaticHostTests	./net/hosts_test.go	/^var lookupStaticHostTests = []struct {$/;"	v
lookupTLSHash	./crypto/tls/prf.go	/^func lookupTLSHash(hash uint8) (crypto.Hash, error) {$/;"	f
lookupTXT	./net/lookup_plan9.go	/^func lookupTXT(name string) (txt []string, err error) {$/;"	f
lookupTXT	./net/lookup_stub.go	/^func lookupTXT(name string) (txts []string, err error) {$/;"	f
lookupTXT	./net/lookup_unix.go	/^func lookupTXT(name string) ([]string, error) {$/;"	f
lookupTXT	./net/lookup_windows.go	/^func lookupTXT(name string) ([]string, error) {$/;"	f
lookupType	./go/doc/reader.go	/^func (r *reader) lookupType(name string) *namedType {$/;"	f
lookupTypeInfo	./encoding/gob/type.go	/^func lookupTypeInfo(rt reflect.Type) *typeInfo {$/;"	f
lookupUnix	./os/user/lookup_unix.go	/^func lookupUnix(uid int, username string, lookupByName bool) (*User, error) {$/;"	f
lookupXMLName	./encoding/xml/typeinfo.go	/^func lookupXMLName(typ reflect.Type) (xmlname *fieldInfo) {$/;"	f
lookup_or_diag	./cmd/link/internal/ld/dwarf.go	/^func lookup_or_diag(n string) *LSym {$/;"	f
lookup_type	./runtime/runtime-gdb.py	/^def lookup_type(name):$/;"	f
loop	./cmd/asm/internal/asm/testdata/386.s	/^loop:$/;"	l
loop	./cmd/asm/internal/asm/testdata/amd64.s	/^loop:$/;"	l
loop	./cmd/compile/internal/gc/dcl.go	/^					Yyerror("interface type loop involving %v", n.Type)$/;"	t
loop	./cmd/internal/obj/x86/asm6.go	/^	var loop int32$/;"	v
loop	./crypto/md5/md5block_386.s	/^loop:$/;"	l
loop	./crypto/md5/md5block_amd64.s	/^loop:$/;"	l
loop	./crypto/md5/md5block_amd64p32.s	/^loop:$/;"	l
loop	./crypto/md5/md5block_arm.s	/^loop:$/;"	l
loop	./crypto/rc4/rc4_386.s	/^loop:$/;"	l
loop	./crypto/rc4/rc4_arm.s	/^loop:$/;"	l
loop	./crypto/sha1/sha1block_386.s	/^loop:$/;"	l
loop	./crypto/sha1/sha1block_amd64.s	/^loop:$/;"	l
loop	./crypto/sha1/sha1block_amd64p32.s	/^loop:$/;"	l
loop	./crypto/sha1/sha1block_arm.s	/^loop:$/;"	l
loop	./crypto/sha256/sha256block_386.s	/^loop:$/;"	l
loop	./crypto/sha256/sha256block_amd64.s	/^loop:$/;"	l
loop	./crypto/sha512/sha512block_amd64.s	/^loop:$/;"	l
loop	./math/big/arith_arm64.s	/^loop:$/;"	l
loop	./os/signal/signal_plan9.go	/^func loop() {$/;"	f
loop	./os/signal/signal_unix.go	/^func loop() {$/;"	f
loop	./runtime/asm_amd64.s	/^loop:$/;"	l
loop	./runtime/asm_amd64p32.s	/^loop:$/;"	l
loop	./runtime/asm_arm.s	/^loop:						\\$/;"	l
loop	./runtime/asm_arm.s	/^loop:$/;"	l
loop	./runtime/asm_arm64.s	/^loop:						\\$/;"	l
loop	./runtime/asm_arm64.s	/^loop:$/;"	l
loop	./runtime/asm_ppc64x.s	/^loop:						\\$/;"	l
loop	./runtime/asm_ppc64x.s	/^loop:$/;"	l
loop	./runtime/crash_unix_test.go	/^func loop(i int, c chan bool) {$/;"	f
loop	./runtime/memclr_386.s	/^loop:$/;"	l
loop	./runtime/memclr_amd64.s	/^loop:$/;"	l
loop	./runtime/memmove_arm64.s	/^loop:$/;"	l
loop	./runtime/memmove_ppc64x.s	/^loop:$/;"	l
loop	./runtime/sys_linux_arm.s	/^loop:$/;"	l
loop	./sync/atomic/asm_arm.s	/^loop:$/;"	l
loop1	./crypto/sha1/sha1block_arm.s	/^loop1:	ROUND1(Ra, Rb, Rc, Rd, Re)$/;"	l
loop1	./runtime/memmove_arm64.s	/^loop1:$/;"	l
loop1	./runtime/memmove_ppc64x.s	/^loop1:$/;"	l
loop2	./crypto/sha1/sha1block_arm.s	/^loop2:	ROUND2(Ra, Rb, Rc, Rd, Re)$/;"	l
loop3	./crypto/sha1/sha1block_arm.s	/^loop3:	ROUND3(Ra, Rb, Rc, Rd, Re)$/;"	l
loop4	./crypto/sha1/sha1block_arm.s	/^loop4:	ROUND4(Ra, Rb, Rc, Rd, Re)$/;"	l
loopAtEOFSplit	./bufio/scan_test.go	/^func loopAtEOFSplit(data []byte, atEOF bool) (advance int, token []byte, err error) {$/;"	f
loop_body	./cmd/compile/internal/gc/go.y	/^loop_body:$/;"	l
loopbackInterface	./net/interface_test.go	/^func loopbackInterface() *Interface {$/;"	f
loophack	./cmd/compile/internal/gc/go.go	/^var loophack int$/;"	v
loophead	./cmd/compile/internal/gc/popt.go	/^func loophead(idom []int32, r *Flow) bool {$/;"	f
looping	./cmd/compile/internal/gc/esc.go	/^var looping Label$/;"	v
loopmark	./cmd/compile/internal/gc/popt.go	/^func loopmark(rpo2r **Flow, head int32, r *Flow) {$/;"	f
lostProfileData	./runtime/cpuprof.go	/^func lostProfileData() {}$/;"	f
lout	./cmd/compile/internal/gc/sinit.go	/^	var lout *NodeList$/;"	v
low	./go/printer/testdata/parser.go	/^	var low, high ast.Expr$/;"	v
low32	./cmd/compile/internal/big/int.go	/^func low32(z nat) uint32 {$/;"	f
low32	./math/big/int.go	/^func low32(z nat) uint32 {$/;"	f
low64	./cmd/compile/internal/big/int.go	/^func low64(z nat) uint64 {$/;"	f
low64	./math/big/int.go	/^func low64(z nat) uint64 {$/;"	f
lowerASCII	./net/http/lex.go	/^func lowerASCII(b byte) byte {$/;"	f
lowerASCII	./net/parse.go	/^func lowerASCII(b byte) byte {$/;"	f
lowerASCIIBytes	./net/parse.go	/^func lowerASCIIBytes(x []byte) {$/;"	f
lowerTests	./bytes/bytes_test.go	/^var lowerTests = []StringTest{$/;"	v
lowerTests	./strings/strings_test.go	/^var lowerTests = []StringTest{$/;"	v
lparen	./go/parser/parser.go	/^	var lparen, rparen token.Pos$/;"	v
lparen	./go/printer/testdata/parser.go	/^	var lparen, rparen token.Pos$/;"	v
lr	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) lr() uint32      { return c.regs().lr }$/;"	f
lr	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) lr() uint64    { return c.regs().lr }$/;"	f
lr	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) lr() uint32      { return c.regs().__gregs[14] }$/;"	f
lr	./runtime/signal_linux_arm.go	/^func (c *sigctxt) lr() uint32        { return c.regs().lr }$/;"	f
lr	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) lr() uint64        { return c.regs().regs[30] }$/;"	f
lr	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) lr() uint32      { return c.regs().lr }$/;"	f
lr	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) lr() uint32       { return c.regs().__gregs[_REG_R14] }$/;"	f
lr	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) lr() uint32      { return c.regs().sc_usr_lr }$/;"	f
lrPtr	./runtime/traceback.go	/^			var lrPtr uintptr$/;"	v
lrUintptr	./runtime/mgcmark.go	/^	var lrUintptr uintptr$/;"	v
lreal	./cmd/compile/internal/gc/cplx.go	/^	var lreal, limag, rreal, rimag Node$/;"	v
lrsa	./net/fd_windows.go	/^	var lrsa, rrsa *syscall.RawSockaddrAny$/;"	v
lruSessionCache	./crypto/tls/common.go	/^type lruSessionCache struct {$/;"	t
lruSessionCacheEntry	./crypto/tls/common.go	/^type lruSessionCacheEntry struct {$/;"	t
ls	./encoding/binary/binary_test.go	/^	var ls Struct$/;"	v
ls	./net/fd_plan9.go	/^	var ls, rs string$/;"	v
ls	./net/fd_unix.go	/^	var ls, rs string$/;"	v
lsa	./net/sock_posix.go	/^	var lsa syscall.Sockaddr$/;"	v
lsall	./syscall/lsf_linux.go	/^	var lsall SockaddrLinklayer$/;"	v
lshTests	./cmd/compile/internal/big/int_test.go	/^var lshTests = []intShiftTest{$/;"	v
lshTests	./math/big/int_test.go	/^var lshTests = []intShiftTest{$/;"	v
lshVW	./cmd/compile/internal/big/arith_test.go	/^var lshVW = []argVW{$/;"	v
lshVW	./math/big/arith_test.go	/^var lshVW = []argVW{$/;"	v
lsort	./cmd/compile/internal/gc/reflect.go	/^func lsort(l *Sig, f func(*Sig, *Sig) int) *Sig {$/;"	f
lss	./net/server_test.go	/^		var lss []*localServer$/;"	v
lst	./cmd/internal/obj/ld.go	/^	var lst [LOG]*Prog$/;"	v
lstat	./os/file.go	/^var lstat = Lstat$/;"	v
lstat	./path/filepath/path.go	/^var lstat = os.Lstat \/\/ for testing$/;"	v
lt	./cmd/compile/internal/gc/walk.go	/^	var lt *Type$/;"	v
lt	./text/template/funcs.go	/^func lt(arg1, arg2 interface{}) (bool, error) {$/;"	f
lwp_create	./runtime/os_dragonfly.go	/^func lwp_create(param *lwpparams) int32$/;"	f
lwp_create	./runtime/os_netbsd.go	/^func lwp_create(ctxt unsafe.Pointer, flags uintptr, lwpid unsafe.Pointer) int32$/;"	f
lwp_mcontext_init	./runtime/os1_netbsd_386.go	/^func lwp_mcontext_init(mc *mcontextt, stk unsafe.Pointer, mp *m, gp *g, fn uintptr) {$/;"	f
lwp_mcontext_init	./runtime/os1_netbsd_amd64.go	/^func lwp_mcontext_init(mc *mcontextt, stk unsafe.Pointer, mp *m, gp *g, fn uintptr) {$/;"	f
lwp_mcontext_init	./runtime/os_netbsd_arm.go	/^func lwp_mcontext_init(mc *mcontextt, stk unsafe.Pointer, mp *m, gp *g, fn uintptr) {$/;"	f
lwp_park	./runtime/os_netbsd.go	/^func lwp_park(abstime *timespec, unpark int32, hint, unparkhint unsafe.Pointer) int32$/;"	f
lwp_self	./runtime/os_netbsd.go	/^func lwp_self() int32$/;"	f
lwp_start	./runtime/os1_dragonfly.go	/^func lwp_start(uintptr)$/;"	f
lwp_tramp	./runtime/os_netbsd.go	/^func lwp_tramp()$/;"	f
lwp_unpark	./runtime/os_netbsd.go	/^func lwp_unpark(lwp int32, hint unsafe.Pointer) int32$/;"	f
lwpparams	./runtime/defs_dragonfly_amd64.go	/^type lwpparams struct {$/;"	t
lzwEncode	./image/gif/reader_test.go	/^func lzwEncode(n int) []byte {$/;"	f
lzwTest	./compress/lzw/reader_test.go	/^type lzwTest struct {$/;"	t
lzwTests	./compress/lzw/reader_test.go	/^var lzwTests = []lzwTest{$/;"	v
m	./go/types/api_test.go	/^		{`package p9; type T struct{}; func (T) m() int { _ = y; return 0 }; var x, y = T.m, 1`, []string{$/;"	f
m	./go/types/issues_test.go	/^func (T) m() (res bool) { return }$/;"	f
m	./go/types/resolver_test.go	/^		func (_ T) m() {}$/;"	f
m	./go/types/selection.go	/^\/\/	T.m         MethodExpr    T       m      func m(_ T)        {1, 0}    false$/;"	f
m	./go/types/selection.go	/^\/\/	func (e E) m() {}$/;"	f
m	./go/types/selection.go	/^\/\/	p.m         MethodVal     *T      m      func (e *T) m()    {1, 0}    true$/;"	f
m	./reflect/all_test.go	/^func (*inner) m() {}$/;"	f
m	./reflect/all_test.go	/^func (*outer) m() {}$/;"	f
m	./reflect/all_test.go	/^func (p *Private) m() {$/;"	f
m	./reflect/all_test.go	/^func (p *tbigp) m(x int, b byte) (byte, int) { return b, x + int(p[0]) + int(p[1]) }$/;"	f
m	./reflect/all_test.go	/^func (p *tsmallp) m(x int, b byte) (byte, int) { return b, x + int(*p) }$/;"	f
m	./reflect/all_test.go	/^func (p *twordp) m(x int, b byte) (byte, int) { return b, x + int(*p) }$/;"	f
m	./reflect/all_test.go	/^func (v tbigv) m(x int, b byte) (byte, int) { return b, x + int(v[0]) + int(v[1]) }$/;"	f
m	./reflect/all_test.go	/^func (v tsmallv) m(x int, b byte) (byte, int) { return b, x + int(v) }$/;"	f
m	./reflect/all_test.go	/^func (v twordv) m(x int, b byte) (byte, int) { return b, x + int(v) }$/;"	f
m	./runtime/mfinal_test.go	/^func (t *Tint) m() {}$/;"	f
m1	./bytes/buffer_test.go	/^			var m1, m2 runtime.MemStats$/;"	v
m1	./encoding/json/decode_test.go	/^	var m1, m2 map[stringKind]int$/;"	v
m1	./go/types/api_test.go	/^		"package p; type T struct{}; func (T) m1() {}",$/;"	f
m1	./runtime/syscall_windows_test.go	/^	var m1, m2 uintptr$/;"	v
m1	./runtime/vlop_arm.s	/^m1:$/;"	l
m128a	./runtime/defs_windows_amd64.go	/^type m128a struct {$/;"	t
m2	./go/types/api_test.go	/^		"package p; func (T) m2() {}; var x interface{ m1(); m2() } = T{}",$/;"	f
m3	./go/types/api_test.go	/^		"package p; func (T) m3() {}; var y interface{ m1(); m2(); m3() } = T{}",$/;"	f
mCache_Refill	./runtime/mcache.go	/^func mCache_Refill(c *mcache, sizeclass int32) *mspan {$/;"	f
mCache_ReleaseAll	./runtime/mcache.go	/^func mCache_ReleaseAll(c *mcache) {$/;"	f
mCentral_CacheSpan	./runtime/mcentral.go	/^func mCentral_CacheSpan(c *mcentral) *mspan {$/;"	f
mCentral_FreeSpan	./runtime/mcentral.go	/^func mCentral_FreeSpan(c *mcentral, s *mspan, n int32, start gclinkptr, end gclinkptr, preserve bool) bool {$/;"	f
mCentral_Grow	./runtime/mcentral.go	/^func mCentral_Grow(c *mcentral) *mspan {$/;"	f
mCentral_Init	./runtime/mcentral.go	/^func mCentral_Init(c *mcentral, sizeclass int32) {$/;"	f
mCentral_UncacheSpan	./runtime/mcentral.go	/^func mCentral_UncacheSpan(c *mcentral, s *mspan) {$/;"	f
mHeap_Alloc	./runtime/mheap.go	/^func mHeap_Alloc(h *mheap, npage uintptr, sizeclass int32, large bool, needzero bool) *mspan {$/;"	f
mHeap_AllocLarge	./runtime/mheap.go	/^func mHeap_AllocLarge(h *mheap, npage uintptr) *mspan {$/;"	f
mHeap_AllocSpanLocked	./runtime/mheap.go	/^func mHeap_AllocSpanLocked(h *mheap, npage uintptr) *mspan {$/;"	f
mHeap_AllocStack	./runtime/mheap.go	/^func mHeap_AllocStack(h *mheap, npage uintptr) *mspan {$/;"	f
mHeap_Alloc_m	./runtime/mheap.go	/^func mHeap_Alloc_m(h *mheap, npage uintptr, sizeclass int32, large bool) *mspan {$/;"	f
mHeap_Free	./runtime/mheap.go	/^func mHeap_Free(h *mheap, s *mspan, acct int32) {$/;"	f
mHeap_FreeSpanLocked	./runtime/mheap.go	/^func mHeap_FreeSpanLocked(h *mheap, s *mspan, acctinuse, acctidle bool, unusedsince int64) {$/;"	f
mHeap_FreeStack	./runtime/mheap.go	/^func mHeap_FreeStack(h *mheap, s *mspan) {$/;"	f
mHeap_Grow	./runtime/mheap.go	/^func mHeap_Grow(h *mheap, npage uintptr) bool {$/;"	f
mHeap_Init	./runtime/mheap.go	/^func mHeap_Init(h *mheap, spans_size uintptr) {$/;"	f
mHeap_Lookup	./runtime/mheap.go	/^func mHeap_Lookup(h *mheap, v unsafe.Pointer) *mspan {$/;"	f
mHeap_LookupMaybe	./runtime/mheap.go	/^func mHeap_LookupMaybe(h *mheap, v unsafe.Pointer) *mspan {$/;"	f
mHeap_MapBits	./runtime/mbitmap.go	/^func mHeap_MapBits(h *mheap, arena_used uintptr) {$/;"	f
mHeap_MapSpans	./runtime/mheap.go	/^func mHeap_MapSpans(h *mheap, arena_used uintptr) {$/;"	f
mHeap_Reclaim	./runtime/mheap.go	/^func mHeap_Reclaim(h *mheap, npage uintptr) {$/;"	f
mHeap_ReclaimList	./runtime/mheap.go	/^func mHeap_ReclaimList(h *mheap, list *mspan, npages uintptr) uintptr {$/;"	f
mHeap_Scavenge	./runtime/mheap.go	/^func mHeap_Scavenge(k int32, now, limit uint64) {$/;"	f
mHeap_SysAlloc	./runtime/malloc.go	/^func mHeap_SysAlloc(h *mheap, n uintptr) unsafe.Pointer {$/;"	f
mProf_Free	./runtime/mprof.go	/^func mProf_Free(b *bucket, size uintptr, freed bool) {$/;"	f
mProf_GC	./runtime/mprof.go	/^func mProf_GC() {$/;"	f
mProf_Malloc	./runtime/mprof.go	/^func mProf_Malloc(p unsafe.Pointer, size uintptr) {$/;"	f
mSpanList_Init	./runtime/mheap.go	/^func mSpanList_Init(list *mspan) {$/;"	f
mSpanList_Insert	./runtime/mheap.go	/^func mSpanList_Insert(list *mspan, span *mspan) {$/;"	f
mSpanList_InsertBack	./runtime/mheap.go	/^func mSpanList_InsertBack(list *mspan, span *mspan) {$/;"	f
mSpanList_IsEmpty	./runtime/mheap.go	/^func mSpanList_IsEmpty(list *mspan) bool {$/;"	f
mSpanList_Remove	./runtime/mheap.go	/^func mSpanList_Remove(span *mspan) {$/;"	f
mSpan_EnsureSwept	./runtime/mgcsweep.go	/^func mSpan_EnsureSwept(s *mspan) {$/;"	f
mSpan_Init	./runtime/mheap.go	/^func mSpan_Init(span *mspan, start pageID, npages uintptr) {$/;"	f
mSpan_Sweep	./runtime/mgcsweep.go	/^func mSpan_Sweep(s *mspan, preserve bool) bool {$/;"	f
mSysStatDec	./runtime/mstats.go	/^func mSysStatDec(sysStat *uint64, n uintptr) {$/;"	f
mSysStatInc	./runtime/mstats.go	/^func mSysStatInc(sysStat *uint64, n uintptr) {$/;"	f
mWords	./cmd/compile/internal/big/int.go	/^	var mWords nat$/;"	v
mWords	./math/big/int.go	/^	var mWords nat$/;"	v
macFunction	./crypto/tls/cipher_suites.go	/^type macFunction interface {$/;"	t
macSHA1	./crypto/tls/cipher_suites.go	/^func macSHA1(version uint16, key []byte) macFunction {$/;"	f
machHeader	./cmd/link/internal/ld/macho_combine_dwarf.go	/^var machHeader *macho.FileHeader$/;"	v
mach_exception_handler	./runtime/cgo/gcc_signal_darwin_armx.c	/^mach_exception_handler(void *port)$/;"	f	file:
mach_exception_handler_port_set	./runtime/cgo/gcc_signal_darwin_armx.c	/^static mach_port_t mach_exception_handler_port_set = MACH_PORT_NULL;$/;"	v	file:
mach_exception_handler_port_set_mu	./runtime/cgo/gcc_signal_darwin_armx.c	/^static pthread_mutex_t mach_exception_handler_port_set_mu;$/;"	v	file:
mach_msg	./runtime/os1_darwin.go	/^func mach_msg(h *machheader, op int32, send_size, rcv_size, rcv_name, timeout, notify uint32) int32 {$/;"	f
mach_msg_trap	./runtime/os_darwin.go	/^func mach_msg_trap(h unsafe.Pointer, op int32, send_size, rcv_size, rcv_name, timeout, notify uint32) int32$/;"	f
mach_msgh_bits	./runtime/os1_darwin.go	/^func mach_msgh_bits(a, b uint32) uint32 {$/;"	f
mach_reply_port	./runtime/os_darwin.go	/^func mach_reply_port() uint32$/;"	f
mach_semaphore_signal	./runtime/os1_darwin.go	/^func mach_semaphore_signal(sema uint32) int32$/;"	f
mach_semaphore_signal_all	./runtime/os1_darwin.go	/^func mach_semaphore_signal_all(sema uint32) int32$/;"	f
mach_semaphore_timedwait	./runtime/os1_darwin.go	/^func mach_semaphore_timedwait(sema, sec, nsec uint32) int32$/;"	f
mach_semaphore_wait	./runtime/os1_darwin.go	/^func mach_semaphore_wait(sema uint32) int32$/;"	f
mach_semcreate	./runtime/os1_darwin.go	/^func mach_semcreate() uint32 {$/;"	f
mach_semdestroy	./runtime/os1_darwin.go	/^func mach_semdestroy(sem uint32) {$/;"	f
mach_semrelease	./runtime/os1_darwin.go	/^func mach_semrelease(sem uint32) {$/;"	f
mach_task_self	./runtime/os_darwin.go	/^func mach_task_self() uint32$/;"	f
mach_thread_self	./runtime/os_darwin.go	/^func mach_thread_self() uint32$/;"	f
machbody	./runtime/defs_darwin_386.go	/^type machbody struct {$/;"	t
machbody	./runtime/defs_darwin_amd64.go	/^type machbody struct {$/;"	t
machbody	./runtime/defs_darwin_arm.go	/^type machbody struct {$/;"	t
machbody	./runtime/defs_darwin_arm64.go	/^type machbody struct {$/;"	t
machcall	./runtime/os1_darwin.go	/^func machcall(h *machheader, maxsize int32, rxsize int32) int32 {$/;"	f
macherror	./runtime/os1_darwin.go	/^func macherror(r int32, fn string) {$/;"	f
machheader	./runtime/defs_darwin_386.go	/^type machheader struct {$/;"	t
machheader	./runtime/defs_darwin_amd64.go	/^type machheader struct {$/;"	t
machheader	./runtime/defs_darwin_arm.go	/^type machheader struct {$/;"	t
machheader	./runtime/defs_darwin_arm64.go	/^type machheader struct {$/;"	t
machine	./regexp/exec.go	/^type machine struct {$/;"	t
machineStrings	./debug/elf/elf.go	/^var machineStrings = []intName{$/;"	v
machndr	./runtime/defs_darwin_386.go	/^type machndr struct {$/;"	t
machndr	./runtime/defs_darwin_amd64.go	/^type machndr struct {$/;"	t
machndr	./runtime/defs_darwin_arm.go	/^type machndr struct {$/;"	t
machndr	./runtime/defs_darwin_arm64.go	/^type machndr struct {$/;"	t
macho64	./cmd/link/internal/ld/macho.go	/^var macho64 bool$/;"	v
machoBug	./debug/dwarf/type_test.go	/^var machoBug = map[string]string{$/;"	v
machoCalcStart	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func machoCalcStart(origAddr, newAddr uint64, alignExp uint32) int64 {$/;"	f
machoCombineDwarf	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func machoCombineDwarf(inexe, dsym, outexe string) error {$/;"	f
machoData	./debug/dwarf/type_test.go	/^func machoData(t *testing.T, name string) *Data {$/;"	f
machoFile	./cmd/internal/objfile/macho.go	/^type machoFile struct {$/;"	t
machoType	./debug/macho/fat.go	/^	var machoType Type$/;"	v
machoUpdateDwarfHeader	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func machoUpdateDwarfHeader(r *loadCmdReader) error {$/;"	f
machoUpdateLoadCommand	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func machoUpdateLoadCommand(r loadCmdReader, cmd interface{}, fields ...string) error {$/;"	f
machoUpdateSections	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func machoUpdateSections(r loadCmdReader, seg, sect reflect.Value, delta uint64) error {$/;"	f
machoUpdateSegment	./cmd/link/internal/ld/macho_combine_dwarf.go	/^func machoUpdateSegment(r loadCmdReader, seg, sect interface{}) error {$/;"	f
machodysymtab	./cmd/link/internal/ld/macho.go	/^func machodysymtab() {$/;"	f
machogenasmsym	./cmd/link/internal/ld/macho.go	/^func machogenasmsym(put func(*LSym, string, int, int64, int64, int, *LSym)) {$/;"	f
machohdr	./cmd/link/internal/ld/macho.go	/^var machohdr MachoHdr$/;"	v
macholoaddsym	./cmd/link/internal/ld/ldmacho.go	/^func macholoaddsym(m *LdMachoObj, d *LdMachoDysymtab) int {$/;"	f
macholoadrel	./cmd/link/internal/ld/ldmacho.go	/^func macholoadrel(m *LdMachoObj, sect *LdMachoSect) int {$/;"	f
macholoadsym	./cmd/link/internal/ld/ldmacho.go	/^func macholoadsym(m *LdMachoObj, symtab *LdMachoSymtab) int {$/;"	f
machoreloc1	./cmd/link/internal/amd64/asm.go	/^func machoreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
machoreloc1	./cmd/link/internal/arm/asm.go	/^func machoreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
machoreloc1	./cmd/link/internal/arm64/asm.go	/^func machoreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
machoreloc1	./cmd/link/internal/ppc64/asm.go	/^func machoreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
machoreloc1	./cmd/link/internal/x86/asm.go	/^func machoreloc1(r *ld.Reloc, sectoff int64) int {$/;"	f
machorelocsect	./cmd/link/internal/ld/macho.go	/^func machorelocsect(sect *Section, first *LSym) {$/;"	f
machoscmp	./cmd/link/internal/ld/macho.go	/^type machoscmp []*LSym$/;"	t
machoshbits	./cmd/link/internal/ld/macho.go	/^func machoshbits(mseg *MachoSeg, sect *Section, segname string) {$/;"	f
machosymorder	./cmd/link/internal/ld/macho.go	/^func machosymorder() {$/;"	f
machosymtab	./cmd/link/internal/ld/macho.go	/^func machosymtab() {$/;"	f
machowrite	./cmd/link/internal/ld/macho.go	/^func machowrite() int {$/;"	f
machport	./runtime/defs_darwin_386.go	/^type machport struct {$/;"	t
machport	./runtime/defs_darwin_amd64.go	/^type machport struct {$/;"	t
machport	./runtime/defs_darwin_arm.go	/^type machport struct {$/;"	t
machport	./runtime/defs_darwin_arm64.go	/^type machport struct {$/;"	t
macroDefinition	./cmd/asm/internal/lex/input.go	/^func (in *Input) macroDefinition(name string) ([]string, []Token) {$/;"	f
macroName	./cmd/asm/internal/lex/input.go	/^func (in *Input) macroName() string {$/;"	f
madvise	./runtime/os1_nacl.go	/^func madvise(addr unsafe.Pointer, n uintptr, flags int32) {}$/;"	f
madvise	./runtime/os3_solaris.go	/^func madvise(addr unsafe.Pointer, n uintptr, flags int32) {$/;"	f
madvise	./runtime/stubs2.go	/^func madvise(addr unsafe.Pointer, n uintptr, flags int32)$/;"	f
magic	./debug/plan9obj/file.go	/^	var magic [4]byte$/;"	v
magic	./go/internal/gccgoimporter/importer.go	/^		var magic [4]byte$/;"	v
magic	./go/internal/gccgoimporter/importer.go	/^	var magic [4]byte$/;"	v
magic	./runtime/cgo/gcc_darwin_arm.c	/^#define magic /;"	d	file:
magic	./runtime/cgo/gcc_darwin_arm64.c	/^#define magic /;"	d	file:
magic1	./runtime/cgo/gcc_android_arm.c	/^#define magic1 /;"	d	file:
magic1	./runtime/cgo/gcc_darwin_386.c	/^#define magic1 /;"	d	file:
magic1	./runtime/cgo/gcc_darwin_amd64.c	/^#define magic1 /;"	d	file:
main	./cmd/addr2line/main.go	/^func main() {$/;"	f
main	./cmd/api/goapi.go	/^func main() {$/;"	f
main	./cmd/api/run.go	/^func main() {$/;"	f
main	./cmd/asm/main.go	/^func main() {$/;"	f
main	./cmd/cgo/doc.go	/^	func main() {$/;"	f
main	./cmd/cgo/main.go	/^func main() {$/;"	f
main	./cmd/compile/internal/gc/mkbuiltin.go	/^func main() {$/;"	f
main	./cmd/compile/internal/gc/y.go	/^					Yyerror("func main must have no arguments and no return values")$/;"	f
main	./cmd/compile/main.go	/^func main() {$/;"	f
main	./cmd/cover/cover.go	/^func main() {$/;"	f
main	./cmd/cover/testdata/main.go	/^func main() {$/;"	f
main	./cmd/dist/util.go	/^func main() {$/;"	f
main	./cmd/doc/main.go	/^func main() {$/;"	f
main	./cmd/fix/main.go	/^func main() {$/;"	f
main	./cmd/go/go_test.go	/^		func main() { foo.F() }`)$/;"	f
main	./cmd/go/go_test.go	/^		func main() {$/;"	f
main	./cmd/go/go_test.go	/^		func main() {}`)$/;"	f
main	./cmd/go/go_test.go	/^		tg.tempFile("src\/sink\/sink.go", `package main; func main() {}`)$/;"	f
main	./cmd/go/go_test.go	/^	tg.tempFile("gopath2\/src\/test\/main.go", "package main\\nfunc main(){}\\n")$/;"	f
main	./cmd/go/go_test.go	/^	tg.tempFile("src\/mycmd\/main.go", `package main; func main(){}`)$/;"	f
main	./cmd/go/go_test.go	/^	tg.tempFile("src\/progname\/p.go", `package main; func main() {}`)$/;"	f
main	./cmd/go/go_test.go	/^	tg.tempFile("triv.go", `package main; func main() {}`)$/;"	f
main	./cmd/go/go_test.go	/^	tg.tempFile("x.go", "package main\\nfunc main(){}\\n")$/;"	f
main	./cmd/go/go_test.go	/^func main() { C.f() }`)$/;"	f
main	./cmd/go/main.go	/^func main() {$/;"	f
main	./cmd/go/note_test.go	/^	tg.tempFile("hello.go", `package main; func main() { print("hello, world\\n") }`)$/;"	f
main	./cmd/go/test.go	/^func main() {$/;"	f
main	./cmd/go/testdata/local/easy.go	/^func main() {$/;"	f
main	./cmd/go/testdata/local/easysub/main.go	/^func main() {$/;"	f
main	./cmd/go/testdata/local/hard.go	/^func main() {$/;"	f
main	./cmd/go/testdata/src/go-cmd-test/helloworld.go	/^func main() {$/;"	f
main	./cmd/go/testdata/src/main_test/m.go	/^func main() {}$/;"	f
main	./cmd/go/testdata/src/vend/hello/hello.go	/^func main() {$/;"	f
main	./cmd/go/vendor_test.go	/^		func main() {$/;"	f
main	./cmd/gofmt/gofmt.go	/^func main() {$/;"	f
main	./cmd/internal/obj/stringer.go	/^func main() {$/;"	f
main	./cmd/link/main.go	/^func main() {$/;"	f
main	./cmd/nm/nm.go	/^func main() {$/;"	f
main	./cmd/objdump/main.go	/^func main() {$/;"	f
main	./cmd/objdump/testdata/fmthello.go	/^func main() {$/;"	f
main	./cmd/pack/pack.go	/^func main() {$/;"	f
main	./cmd/pack/pack_test.go	/^		func main() {$/;"	f
main	./cmd/pprof/pprof.go	/^func main() {$/;"	f
main	./cmd/trace/main.go	/^func main() {$/;"	f
main	./cmd/vet/main.go	/^func main() {$/;"	f
main	./cmd/vet/testdata/tagtest/file1.go	/^func main() {$/;"	f
main	./cmd/yacc/yacc.go	/^func main() {$/;"	f
main	./compress/flate/gen.go	/^func main() {$/;"	f
main	./crypto/md5/gen.go	/^func main() {$/;"	f
main	./crypto/tls/generate_cert.go	/^func main() {$/;"	f
main	./crypto/x509/root_darwin_arm_gen.go	/^func main() {$/;"	f
main	./crypto/x509/x509_test_import.go	/^func main() {$/;"	f
main	./debug/dwarf/testdata/line1.c	/^int main()$/;"	f
main	./debug/dwarf/testdata/typedef.c	/^int main()$/;"	f
main	./debug/elf/testdata/hello.c	/^main(int argc, char *argv[])$/;"	f
main	./debug/macho/testdata/hello.c	/^main(void)$/;"	f
main	./debug/pe/file_test.go	/^func main() {$/;"	f
main	./debug/pe/testdata/hello.c	/^main(void)$/;"	f
main	./debug/plan9obj/testdata/hello.c	/^main(void)$/;"	f
main	./encoding/gob/decgen.go	/^func main() {$/;"	f
main	./encoding/gob/dump.go	/^func main() {$/;"	f
main	./encoding/gob/encgen.go	/^func main() {$/;"	f
main	./go/ast/example_test.go	/^	\/\/ func main() {$/;"	f
main	./go/ast/example_test.go	/^func main() {$/;"	f
main	./go/doc/example_test.go	/^func main() {$/;"	f
main	./go/doc/headscan.go	/^func main() {$/;"	f
main	./go/scanner/scanner_test.go	/^	"package main$\\n\\nfunc main() {\\n\\tif {\\n\\t\\treturn \/* *\/ }$\\n}$\\n",$/;"	f
main	./go/types/api_test.go	/^func main() {$/;"	f
main	./go/types/example_test.go	/^func main() {$/;"	f
main	./go/types/hilbert_test.go	/^func main() {$/;"	f
main	./image/color/palette/gen.go	/^func main() {$/;"	f
main	./image/internal/imageutil/gen.go	/^func main() {$/;"	f
main	./net/http/server.go	/^\/\/	func main() {$/;"	f
main	./net/http/triv.go	/^func main() {$/;"	f
main	./os/exec/lp_windows_test.go	/^func main() {$/;"	f
main	./os/signal/signal_windows_test.go	/^func main() {$/;"	f
main	./reflect/all_test.go	/^		func main() {$/;"	f
main	./regexp/testdata/testregex.c	/^main(int argc, char** argv)$/;"	f
main	./runtime/crash_cgo_test.go	/^func main() {$/;"	f
main	./runtime/crash_test.go	/^func main() {$/;"	f
main	./runtime/crash_unix_test.go	/^func main() {$/;"	f
main	./runtime/gc_test.go	/^func main() {$/;"	f
main	./runtime/gengoos.go	/^func main() {$/;"	f
main	./runtime/mfinal.go	/^		\/\/	func main() {$/;"	f
main	./runtime/mkduff.go	/^func main() {$/;"	f
main	./runtime/panic.go	/^\/\/ without func main returning. Since func main has not returned,$/;"	f
main	./runtime/proc.go	/^func main() {$/;"	f
main	./runtime/proc_test.go	/^func main() {$/;"	f
main	./runtime/race/output_test.go	/^func main() {$/;"	f
main	./runtime/race/testdata/cgo_test_main.go	/^func main() {$/;"	f
main	./runtime/runtime-gdb_test.go	/^func main() {$/;"	f
main	./runtime/string_test.go	/^func main() {$/;"	f
main	./runtime/syscall_windows_test.go	/^func main() {$/;"	f
main	./runtime/wbfat_gen.go	/^func main() {$/;"	f
main	./runtime/wincallback.go	/^func main() {$/;"	f
main	./strconv/makeisprint.go	/^func main() {$/;"	f
main	./syscall/mksyscall_windows.go	/^func main() {$/;"	f
main	./time/genzabbrs.go	/^func main() {$/;"	f
main	./unicode/maketables.go	/^func main() {$/;"	f
main_init	./runtime/proc.go	/^func main_init()$/;"	f
main_init_done	./runtime/proc.go	/^var main_init_done chan bool$/;"	v
main_main	./runtime/proc.go	/^func main_main()$/;"	f
mainbuild	./make.bat	/^:mainbuild$/;"	l
make	./builtin/builtin.go	/^func make(Type, size IntegerType) Type$/;"	f
make	./cmd/compile/internal/big/nat.go	/^func (z nat) make(n int) nat {$/;"	f
make	./math/big/nat.go	/^func (z nat) make(n int) nat {$/;"	f
makeAcc	./cmd/compile/internal/big/float.go	/^func makeAcc(above bool) Accuracy {$/;"	f
makeAcc	./math/big/float.go	/^func makeAcc(above bool) Accuracy {$/;"	f
makeBenchInputHard	./strings/strings_test.go	/^func makeBenchInputHard() string {$/;"	f
makeBuf	./debug/dwarf/buf.go	/^func makeBuf(d *Data, format dataFormat, name string, off Offset, data []byte) buf {$/;"	f
makeBytes	./reflect/value.go	/^func makeBytes(f flag, v []byte, t Type) Value {$/;"	f
makeChan	./runtime/race/testdata/regression_test.go	/^func makeChan() *RpcChan {$/;"	f
makeChanCalls	./runtime/race/testdata/regression_test.go	/^var makeChanCalls int$/;"	v
makeCmdLine	./syscall/exec_windows.go	/^func makeCmdLine(args []string) string {$/;"	f
makeComplex	./reflect/value.go	/^func makeComplex(f flag, v complex128, t Type) Value {$/;"	f
makeCopy	./crypto/subtle/constant_time_test.go	/^func makeCopy(v int, x, y []byte) []byte {$/;"	f
makeCopy	./encoding/xml/xml.go	/^func makeCopy(b []byte) []byte {$/;"	f
makeCutsetFunc	./bytes/bytes.go	/^func makeCutsetFunc(cutset string) func(r rune) bool {$/;"	f
makeCutsetFunc	./strings/strings.go	/^func makeCutsetFunc(cutset string) func(rune) bool {$/;"	f
makeExpr	./go/parser/parser.go	/^func (p *parser) makeExpr(s ast.Stmt, kind string) ast.Expr {$/;"	f
makeExpr	./go/printer/testdata/parser.go	/^func (p *parser) makeExpr(s ast.Stmt) ast.Expr {$/;"	f
makeExprList	./cmd/fix/typecheck.go	/^func makeExprList(a []*ast.Ident) []ast.Expr {$/;"	f
makeFieldsInput	./bytes/bytes_test.go	/^var makeFieldsInput = func() []byte {$/;"	v
makeFieldsInput	./strings/strings_test.go	/^var makeFieldsInput = func() string {$/;"	v
makeFloat	./cmd/compile/internal/big/float_test.go	/^func makeFloat(s string) *Float {$/;"	f
makeFloat	./math/big/float_test.go	/^func makeFloat(s string) *Float {$/;"	f
makeFloat	./reflect/value.go	/^func makeFloat(f flag, v float64, t Type) Value {$/;"	f
makeFunVW	./cmd/compile/internal/big/arith_test.go	/^func makeFunVW(f func(z, x []Word, s uint) (c Word)) funVW {$/;"	f
makeFunVW	./math/big/arith_test.go	/^func makeFunVW(f func(z, x []Word, s uint) (c Word)) funVW {$/;"	f
makeFuncImpl	./reflect/makefunc.go	/^type makeFuncImpl struct {$/;"	t
makeFuncStub	./reflect/makefunc.go	/^func makeFuncStub()$/;"	f
makeGenericReplacer	./strings/replace.go	/^func makeGenericReplacer(oldnew []string) *genericReplacer {$/;"	f
makeGolden	./image/draw/draw_test.go	/^func makeGolden(dst image.Image, r image.Rectangle, src image.Image, sp image.Point, mask image.Image, mp image.Point, op Op) image.Image {$/;"	f
makeIdentList	./go/parser/parser.go	/^func (p *parser) makeIdentList(list []ast.Expr) []*ast.Ident {$/;"	f
makeIdentList	./go/printer/testdata/parser.go	/^func (p *parser) makeIdentList(list []ast.Expr) []*ast.Ident {$/;"	f
makeImg	./image/jpeg/scan.go	/^func (d *decoder) makeImg(mxx, myy int) {$/;"	f
makeImportValid	./cmd/go/pkg.go	/^func makeImportValid(r rune) rune {$/;"	f
makeInheritSa	./syscall/syscall_windows.go	/^func makeInheritSa() *SecurityAttributes {$/;"	f
makeInt	./reflect/value.go	/^func makeInt(f flag, bits uint64, t Type) Value {$/;"	f
makeInts	./fmt/scan_test.go	/^func makeInts(n int) []byte {$/;"	f
makeMatrix	./runtime/proc_test.go	/^func makeMatrix(n int) Matrix {$/;"	f
makeMethodValue	./reflect/makefunc.go	/^func makeMethodValue(op string, v Value) Value {$/;"	f
makeN	./container/ring/ring_test.go	/^func makeN(n int) *Ring {$/;"	f
makeOnePass	./regexp/onepass.go	/^func makeOnePass(p *onePassProg) *onePassProg {$/;"	f
makeOrder	./go/types/api_test.go	/^		func makeOrder() []int { return []int{f, b, d, e, c, a} }$/;"	f
makePkg	./go/types/typestring_test.go	/^func makePkg(t *testing.T, src string) (*Package, error) {$/;"	f
makeReader	./compress/flate/inflate.go	/^func makeReader(r io.Reader) Reader {$/;"	f
makeReader	./compress/gzip/gunzip.go	/^func makeReader(r io.Reader) flate.Reader {$/;"	f
makeRecord	./net/http/fcgi/fcgi_test.go	/^func makeRecord($/;"	f
makeRunes	./reflect/value.go	/^func makeRunes(f flag, v []rune, t Type) Value {$/;"	f
makeSig	./go/types/builtins.go	/^func makeSig(res Type, args ...Type) *Signature {$/;"	f
makeSingleStringReplacer	./strings/replace.go	/^func makeSingleStringReplacer(pattern string, value string) *singleStringReplacer {$/;"	f
makeSlice	./bytes/buffer.go	/^func makeSlice(n int) []byte {$/;"	f
makeSource	./text/scanner/scanner_test.go	/^func makeSource(pattern string) *bytes.Buffer {$/;"	f
makeString	./reflect/value.go	/^func makeString(f flag, v string, t Type) Value {$/;"	f
makeStringFinder	./strings/search.go	/^func makeStringFinder(pattern string) *stringFinder {$/;"	f
makeTable	./hash/crc32/crc32.go	/^func makeTable(poly uint32) *Table {$/;"	f
makeTable8	./hash/crc32/crc32.go	/^func makeTable8(poly uint32) *slicing8Table {$/;"	f
makeTempdir	./cmd/go/go_test.go	/^func (tg *testgoData) makeTempdir() {$/;"	f
makeTestDial	./net/http/transport_test.go	/^func makeTestDial(t *testing.T) (*testConnSet, func(n, addr string) (net.Conn, error)) {$/;"	f
makeTestSource	./go/token/position_test.go	/^func makeTestSource(size int, lines []int) []byte {$/;"	f
makeText	./regexp/exec_test.go	/^func makeText(n int) []byte {$/;"	f
makeTree	./path/filepath/path_test.go	/^func makeTree(t *testing.T) {$/;"	f
makeTree	./runtime/stack_test.go	/^func makeTree(d int) *xtreeNode {$/;"	f
makeVizTmpDir	./cmd/pprof/internal/commands/commands.go	/^func makeVizTmpDir() error {$/;"	f
makeaddable	./cmd/compile/internal/gc/racewalk.go	/^func makeaddable(n *Node) {$/;"	f
makechan	./cmd/compile/internal/gc/builtin/runtime.go	/^func makechan(chanType *byte, hint int64) (hchan chan any)$/;"	f
makechan	./reflect/value.go	/^func makechan(typ *rtype, size uint64) (ch unsafe.Pointer)$/;"	f
makechan	./runtime/chan.go	/^func makechan(t *chantype, size int64) *hchan {$/;"	f
makeclosure	./cmd/compile/internal/gc/closure.go	/^func makeclosure(func_ *Node) *Node {$/;"	f
makefield	./cmd/compile/internal/gc/reflect.go	/^func makefield(name string, t *Type) *Type {$/;"	f
makefuncdatasym	./cmd/compile/internal/gc/pgen.go	/^func makefuncdatasym(namefmt string, funcdatakind int64) *Sym {$/;"	f
makefuncdatasym_nsym	./cmd/compile/internal/gc/pgen.go	/^var makefuncdatasym_nsym int32$/;"	v
makefuncsym	./cmd/compile/internal/gc/dcl.go	/^func makefuncsym(s *Sym) {$/;"	f
makeheapobjbv	./runtime/heapdump.go	/^func makeheapobjbv(p uintptr, size uintptr) bitvector {$/;"	f
makemap	./cmd/compile/internal/gc/builtin/runtime.go	/^func makemap(mapType *byte, hint int64, mapbuf *any, bucketbuf *any) (hmap map[any]any)$/;"	f
makemap	./reflect/value.go	/^func makemap(t *rtype) (m unsafe.Pointer)$/;"	f
makemap	./runtime/hashmap.go	/^func makemap(t *maptype, hint int64, h *hmap, bucket unsafe.Pointer) *hmap {$/;"	f
makemap	./text/template/exec_test.go	/^func makemap(arg ...string) map[string]string {$/;"	f
makematcher	./runtime/runtime-gdb.py	/^def makematcher(klass):$/;"	f
makepartialcall	./cmd/compile/internal/gc/closure.go	/^func makepartialcall(fn *Node, t0 *Type, meth *Node) *Node {$/;"	f
makepartialcall_gopkg	./cmd/compile/internal/gc/closure.go	/^var makepartialcall_gopkg *Pkg$/;"	v
makeslice	./cmd/compile/internal/gc/builtin/runtime.go	/^func makeslice(typ *byte, nel int64, cap int64) (ary []any)$/;"	f
makeslice	./runtime/slice.go	/^func makeslice(t *slicetype, len64, cap64 int64) slice {$/;"	f
malg	./runtime/proc1.go	/^func malg(stacksize int32) *g {$/;"	f
maliciousReader	./mime/multipart/multipart_test.go	/^type maliciousReader struct {$/;"	t
mallocBuf	./fmt/fmt_test.go	/^var mallocBuf bytes.Buffer$/;"	v
mallocPointer	./fmt/fmt_test.go	/^var mallocPointer *int \/\/ A pointer so we know the interface value won't allocate.$/;"	v
mallocSink	./runtime/malloc_test.go	/^var mallocSink uintptr$/;"	v
mallocTest	./fmt/fmt_test.go	/^var mallocTest = []struct {$/;"	v
mallocTest	./time/time_test.go	/^var mallocTest = []struct {$/;"	v
mallocgc	./runtime/malloc.go	/^func mallocgc(size uintptr, typ *_type, flags uint32) unsafe.Pointer {$/;"	f
mallocinit	./runtime/malloc.go	/^func mallocinit() {$/;"	f
mangle	./cmd/internal/obj/data.go	/^func mangle(file string) {$/;"	f
mangle	./html/template/context.go	/^func (c context) mangle(templateName string) string {$/;"	f
mangleName	./cmd/cgo/gcc.go	/^func (p *Package) mangleName(n *Name) {$/;"	f
mant	./cmd/compile/internal/gc/mparith3.go	/^	var mant big.Float$/;"	v
mant	./strconv/atof.go	/^	var mant uint64$/;"	v
mantlo	./strconv/ftoa.go	/^	var mantlo uint64$/;"	v
manyPrefixes	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func manyPrefixes(try func([]byte)) {$/;"	f
map	./go/doc/reader.go	/^\/\/ is added to the type map.$/;"	t
mapAddr	./encoding/json/decode_test.go	/^func mapAddr(x map[string]int) *map[string]int { return &x }$/;"	f
mapElem	./encoding/json/decode.go	/^	var mapElem reflect.Value$/;"	v
mapEncoder	./encoding/json/encode.go	/^type mapEncoder struct {$/;"	t
mapLit	./runtime/symtab_test.go	/^var mapLit = map[int]int{ \/\/ 28$/;"	v
mapOfThree	./text/template/exec_test.go	/^func mapOfThree() interface{} {$/;"	f
mapType	./encoding/gob/doc.go	/^	type mapType struct {$/;"	t
mapType	./encoding/gob/type.go	/^type mapType struct {$/;"	t
mapType	./reflect/type.go	/^type mapType struct {$/;"	t
mapValue	./encoding/gob/debug.go	/^func (deb *debugger) mapValue(indent tab, wire *wireType) {$/;"	f
mapaccess	./reflect/value.go	/^func mapaccess(t *rtype, m unsafe.Pointer, key unsafe.Pointer) (val unsafe.Pointer)$/;"	f
mapaccess1	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess1(mapType *byte, hmap map[any]any, key *any) (val *any)$/;"	f
mapaccess1	./runtime/hashmap.go	/^func mapaccess1(t *maptype, h *hmap, key unsafe.Pointer) unsafe.Pointer {$/;"	f
mapaccess1_fast32	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess1_fast32(mapType *byte, hmap map[any]any, key any) (val *any)$/;"	f
mapaccess1_fast32	./runtime/hashmap_fast.go	/^func mapaccess1_fast32(t *maptype, h *hmap, key uint32) unsafe.Pointer {$/;"	f
mapaccess1_fast64	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess1_fast64(mapType *byte, hmap map[any]any, key any) (val *any)$/;"	f
mapaccess1_fast64	./runtime/hashmap_fast.go	/^func mapaccess1_fast64(t *maptype, h *hmap, key uint64) unsafe.Pointer {$/;"	f
mapaccess1_faststr	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess1_faststr(mapType *byte, hmap map[any]any, key any) (val *any)$/;"	f
mapaccess1_faststr	./runtime/hashmap_fast.go	/^func mapaccess1_faststr(t *maptype, h *hmap, ky string) unsafe.Pointer {$/;"	f
mapaccess2	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess2(mapType *byte, hmap map[any]any, key *any) (val *any, pres bool)$/;"	f
mapaccess2	./runtime/hashmap.go	/^func mapaccess2(t *maptype, h *hmap, key unsafe.Pointer) (unsafe.Pointer, bool) {$/;"	f
mapaccess2_fast32	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess2_fast32(mapType *byte, hmap map[any]any, key any) (val *any, pres bool)$/;"	f
mapaccess2_fast32	./runtime/hashmap_fast.go	/^func mapaccess2_fast32(t *maptype, h *hmap, key uint32) (unsafe.Pointer, bool) {$/;"	f
mapaccess2_fast64	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess2_fast64(mapType *byte, hmap map[any]any, key any) (val *any, pres bool)$/;"	f
mapaccess2_fast64	./runtime/hashmap_fast.go	/^func mapaccess2_fast64(t *maptype, h *hmap, key uint64) (unsafe.Pointer, bool) {$/;"	f
mapaccess2_faststr	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapaccess2_faststr(mapType *byte, hmap map[any]any, key any) (val *any, pres bool)$/;"	f
mapaccess2_faststr	./runtime/hashmap_fast.go	/^func mapaccess2_faststr(t *maptype, h *hmap, ky string) (unsafe.Pointer, bool) {$/;"	f
mapaccessK	./runtime/hashmap.go	/^func mapaccessK(t *maptype, h *hmap, key unsafe.Pointer) (unsafe.Pointer, unsafe.Pointer) {$/;"	f
mapassign	./reflect/value.go	/^func mapassign(t *rtype, m unsafe.Pointer, key, val unsafe.Pointer)$/;"	f
mapassign1	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapassign1(mapType *byte, hmap map[any]any, key *any, val *any)$/;"	f
mapassign1	./runtime/hashmap.go	/^func mapassign1(t *maptype, h *hmap, key unsafe.Pointer, val unsafe.Pointer) {$/;"	f
mapbucket	./cmd/compile/internal/gc/reflect.go	/^func mapbucket(t *Type) *Type {$/;"	f
mapdelete	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapdelete(mapType *byte, hmap map[any]any, key *any)$/;"	f
mapdelete	./reflect/value.go	/^func mapdelete(t *rtype, m unsafe.Pointer, key unsafe.Pointer)$/;"	f
mapdelete	./runtime/hashmap.go	/^func mapdelete(t *maptype, h *hmap, key unsafe.Pointer) {$/;"	f
mapfn	./cmd/compile/internal/gc/walk.go	/^func mapfn(name string, t *Type) *Node {$/;"	f
mapfndel	./cmd/compile/internal/gc/walk.go	/^func mapfndel(name string, t *Type) *Node {$/;"	f
mapinit	./cmd/compile/internal/gc/walk.go	/^	var mapinit *NodeList$/;"	v
mapiterinit	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapiterinit(mapType *byte, hmap map[any]any, hiter *any)$/;"	f
mapiterinit	./reflect/value.go	/^func mapiterinit(t *rtype, m unsafe.Pointer) unsafe.Pointer$/;"	f
mapiterinit	./runtime/hashmap.go	/^func mapiterinit(t *maptype, h *hmap, it *hiter) {$/;"	f
mapiterkey	./reflect/value.go	/^func mapiterkey(it unsafe.Pointer) (key unsafe.Pointer)$/;"	f
mapiternext	./cmd/compile/internal/gc/builtin/runtime.go	/^func mapiternext(hiter *any)$/;"	f
mapiternext	./reflect/value.go	/^func mapiternext(it unsafe.Pointer)$/;"	f
mapiternext	./runtime/hashmap.go	/^func mapiternext(it *hiter) {$/;"	f
maplen	./reflect/value.go	/^func maplen(m unsafe.Pointer) int$/;"	f
maplit	./cmd/compile/internal/gc/sinit.go	/^func maplit(ctxt int, n *Node, var_ *Node, init **NodeList) {$/;"	f
mappedHeader	./cmd/link/internal/ld/macho_combine_dwarf.go	/^var mappedHeader []byte$/;"	v
mapper	./syscall/syscall_bsd.go	/^var mapper = &mmapper{$/;"	v
mapper	./syscall/syscall_linux.go	/^var mapper = &mmapper{$/;"	v
mapping	./cmd/cgo/gcc.go	/^\/\/ FinishType completes any outstanding type mapping work.$/;"	t
mappingDecoder	./cmd/pprof/internal/profile/encode.go	/^var mappingDecoder = []decoder{$/;"	v
mappingTable	./cmd/pprof/internal/symbolizer/symbolizer.go	/^type mappingTable struct {$/;"	t
mapqueue	./cmd/compile/internal/gc/typecheck.go	/^var mapqueue *NodeList$/;"	v
maps	./unicode/letter_test.go	/^	var maps = []map[string]*RangeTable{$/;"	v
maptype	./cmd/compile/internal/gc/subr.go	/^func maptype(key *Type, val *Type) *Type {$/;"	f
maptype	./runtime/type.go	/^type maptype struct {$/;"	t
mapzero	./runtime/hashmap.go	/^func mapzero(t *_type) {$/;"	f
mark	./cmd/compile/internal/gc/popt.go	/^func mark(firstp *obj.Prog) {$/;"	f
mark	./cmd/link/internal/ld/go.go	/^func mark(s *LSym) {$/;"	f
mark	./path/filepath/path_test.go	/^func mark(path string, info os.FileInfo, err error, errors *[]error, clear bool) error {$/;"	f
mark	./text/template/exec.go	/^func (s *state) mark() int {$/;"	f
mark1	./cmd/link/internal/ld/go.go	/^func mark1(s *LSym, parent *LSym) {$/;"	f
markBroken	./net/http/transport.go	/^func (pc *persistConn) markBroken() {$/;"	f
markLastImplicit	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func markLastImplicit(inst *Inst, prefix Prefix) bool {$/;"	f
markPrefix	./encoding/xml/marshal.go	/^func (p *printer) markPrefix() {$/;"	f
markTree	./path/filepath/path_test.go	/^func markTree(n *Node) { walkTree(n, "", func(path string, n *Node) { n.mark++ }) }$/;"	f
markautoused	./cmd/compile/internal/gc/gsubr.go	/^func markautoused(p *obj.Prog) {$/;"	f
markbreak	./cmd/compile/internal/gc/typecheck.go	/^func markbreak(n *Node, implicit *Node) {$/;"	f
markbreaklist	./cmd/compile/internal/gc/typecheck.go	/^func markbreaklist(l *NodeList, implicit *Node) {$/;"	f
markdcl	./cmd/compile/internal/gc/dcl.go	/^func markdcl() {$/;"	f
marker_re	./cmd/internal/obj/x86/obj6_test.go	/^var marker_re *regexp.Regexp = regexp.MustCompile("MOVQ \\\\$([0-9]+), AX")$/;"	v
markextra	./cmd/link/internal/ld/go.go	/^var markextra = []string{$/;"	v
markflood	./cmd/link/internal/ld/go.go	/^func markflood() {$/;"	f
markq	./cmd/link/internal/ld/go.go	/^var markq *LSym$/;"	v
markroot	./runtime/mgcmark.go	/^func markroot(desc *parfor, i uint32) {$/;"	f
marktemp	./cmd/compile/internal/gc/order.go	/^func marktemp(order *Order) *NodeList {$/;"	f
marshal	./cmd/pprof/internal/profile/proto.go	/^func marshal(m message) []byte {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *certificateMsg) marshal() (x []byte) {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *certificateRequestMsg) marshal() (x []byte) {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *certificateStatusMsg) marshal() []byte {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *certificateVerifyMsg) marshal() (x []byte) {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *clientHelloMsg) marshal() []byte {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *clientKeyExchangeMsg) marshal() []byte {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *finishedMsg) marshal() (x []byte) {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *newSessionTicketMsg) marshal() (x []byte) {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *nextProtoMsg) marshal() []byte {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *serverHelloDoneMsg) marshal() []byte {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *serverHelloMsg) marshal() []byte {$/;"	f
marshal	./crypto/tls/handshake_messages.go	/^func (m *serverKeyExchangeMsg) marshal() []byte {$/;"	f
marshal	./crypto/tls/ticket.go	/^func (s *sessionState) marshal() []byte {$/;"	f
marshal	./encoding/json/encode.go	/^func (e *encodeState) marshal(v interface{}) (err error) {$/;"	f
marshalAndParseCSR	./crypto/x509/x509_test.go	/^func marshalAndParseCSR(t *testing.T, template *CertificateRequest) *CertificateRequest {$/;"	f
marshalBase128Int	./encoding/asn1/marshal.go	/^func marshalBase128Int(out *forkableWriter, n int64) (err error) {$/;"	f
marshalBigInt	./encoding/asn1/marshal.go	/^func marshalBigInt(out *forkableWriter, n *big.Int) (err error) {$/;"	f
marshalBitString	./encoding/asn1/marshal.go	/^func marshalBitString(out *forkableWriter, b BitString) (err error) {$/;"	f
marshalBody	./encoding/asn1/marshal.go	/^func marshalBody(out *forkableWriter, value reflect.Value, params fieldParameters) (err error) {$/;"	f
marshalErrorTests	./encoding/xml/marshal_test.go	/^var marshalErrorTests = []struct {$/;"	v
marshalField	./encoding/asn1/marshal.go	/^func marshalField(out *forkableWriter, v reflect.Value, params fieldParameters) (err error) {$/;"	f
marshalFourDigits	./encoding/asn1/marshal.go	/^func marshalFourDigits(out *forkableWriter, v int) (err error) {$/;"	f
marshalGeneralizedTime	./encoding/asn1/marshal.go	/^func marshalGeneralizedTime(out *forkableWriter, t time.Time) (err error) {$/;"	f
marshalIA5String	./encoding/asn1/marshal.go	/^func marshalIA5String(out *forkableWriter, s string) (err error) {$/;"	f
marshalIndentTests	./encoding/xml/marshal_test.go	/^var marshalIndentTests = []struct {$/;"	v
marshalInt64	./encoding/asn1/marshal.go	/^func marshalInt64(out *forkableWriter, i int64) (err error) {$/;"	f
marshalInterface	./encoding/xml/marshal.go	/^func (p *printer) marshalInterface(val Marshaler, start StartElement) error {$/;"	f
marshalLength	./encoding/asn1/marshal.go	/^func marshalLength(out *forkableWriter, i int) (err error) {$/;"	f
marshalObjectIdentifier	./encoding/asn1/marshal.go	/^func marshalObjectIdentifier(out *forkableWriter, oid []int) (err error) {$/;"	f
marshalPrintableString	./encoding/asn1/marshal.go	/^func marshalPrintableString(out *forkableWriter, s string) (err error) {$/;"	f
marshalPublicKey	./crypto/x509/x509.go	/^func marshalPublicKey(pub interface{}) (publicKeyBytes []byte, publicKeyAlgorithm pkix.AlgorithmIdentifier, err error) {$/;"	f
marshalSANs	./crypto/x509/x509.go	/^func marshalSANs(dnsNames, emailAddresses []string, ipAddresses []net.IP) (derBytes []byte, err error) {$/;"	f
marshalSimple	./encoding/xml/marshal.go	/^func (p *printer) marshalSimple(typ reflect.Type, val reflect.Value) (string, []byte, error) {$/;"	f
marshalStruct	./encoding/xml/marshal.go	/^func (p *printer) marshalStruct(tinfo *typeInfo, val reflect.Value) error {$/;"	f
marshalTagAndLength	./encoding/asn1/marshal.go	/^func marshalTagAndLength(out *forkableWriter, t tagAndLength) (err error) {$/;"	f
marshalTest	./encoding/asn1/marshal_test.go	/^type marshalTest struct {$/;"	t
marshalTests	./encoding/asn1/marshal_test.go	/^var marshalTests = []marshalTest{$/;"	v
marshalTests	./encoding/xml/marshal_test.go	/^var marshalTests = []struct {$/;"	v
marshalTextInterface	./encoding/xml/marshal.go	/^func (p *printer) marshalTextInterface(val encoding.TextMarshaler, start StartElement) error {$/;"	f
marshalTimeCommon	./encoding/asn1/marshal.go	/^func marshalTimeCommon(out *forkableWriter, t time.Time) (err error) {$/;"	f
marshalTwoDigits	./encoding/asn1/marshal.go	/^func marshalTwoDigits(out *forkableWriter, v int) (err error) {$/;"	f
marshalUTCTime	./encoding/asn1/marshal.go	/^func marshalUTCTime(out *forkableWriter, t time.Time) (err error) {$/;"	f
marshalUTF8String	./encoding/asn1/marshal.go	/^func marshalUTF8String(out *forkableWriter, s string) (err error) {$/;"	f
marshalValue	./encoding/xml/marshal.go	/^func (p *printer) marshalValue(val reflect.Value, finfo *fieldInfo, startTemplate *StartElement) error {$/;"	f
marshalerEncoder	./encoding/json/encode.go	/^func marshalerEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
mask	./cmd/asm/internal/asm/asm.go	/^			var mask uint32$/;"	v
mask	./cmd/compile/internal/gc/subr.go	/^	var mask uint64$/;"	v
mask	./cmd/internal/obj/ppc64/asm9.go	/^		var mask [2]uint8$/;"	v
mask	./crypto/cipher/gcm.go	/^	var mask [gcmBlockSize]byte$/;"	v
mask	./crypto/elliptic/elliptic.go	/^var mask = []byte{0xff, 0x1, 0x3, 0x7, 0xf, 0x1f, 0x3f, 0x7f}$/;"	v
mask	./image/draw/bench_test.go	/^	var mask image.Image$/;"	v
mask	./runtime/os1_dragonfly.go	/^	var mask sigset$/;"	v
mask	./runtime/os1_freebsd.go	/^	var mask sigset$/;"	v
mask	./runtime/os1_linux.go	/^	var mask sigset$/;"	v
mask	./runtime/os1_netbsd.go	/^	var mask sigset$/;"	v
mask	./runtime/os3_solaris.go	/^	var mask sigset$/;"	v
maskedSig	./net/http/sniff.go	/^type maskedSig struct {$/;"	t
maskgen	./cmd/internal/obj/ppc64/asm9.go	/^func maskgen(ctxt *obj.Link, p *obj.Prog, m []byte, v uint32) {$/;"	f
maskgen64	./cmd/internal/obj/ppc64/asm9.go	/^func maskgen64(ctxt *obj.Link, p *obj.Prog, m []byte, v uint64) {$/;"	f
masterFromPreMasterSecret	./crypto/tls/prf.go	/^func masterFromPreMasterSecret(version uint16, suite *cipherSuite, preMasterSecret, clientRandom, serverRandom []byte) []byte {$/;"	f
masterSecretLabel	./crypto/tls/prf.go	/^var masterSecretLabel = []byte("master secret")$/;"	v
match	./cmd/doc/pkg.go	/^func match(user, program string) bool {$/;"	f
match	./cmd/gofmt/rewrite.go	/^func match(m map[string]reflect.Value, pattern, val reflect.Value) bool {$/;"	f
match	./cmd/pack/pack.go	/^func (ar *Archive) match(entry *Entry) bool {$/;"	f
match	./cmd/vet/method.go	/^\/\/ Does this one type match?$/;"	t
match	./cmd/yacc/yacc.go	/^	var match, c rune$/;"	v
match	./go/constant/value.go	/^func match(x, y Value) (_, _ Value) {$/;"	f
match	./image/format.go	/^func match(magic string, b []byte) bool {$/;"	f
match	./net/http/server.go	/^func (mux *ServeMux) match(path string) (h Handler, pattern string) {$/;"	f
match	./net/http/sniff.go	/^func (e *exactSig) match(data []byte, firstNonWS int) string {$/;"	f
match	./net/http/sniff.go	/^func (h htmlSig) match(data []byte, firstNonWS int) string {$/;"	f
match	./net/http/sniff.go	/^func (m *maskedSig) match(data []byte, firstNonWS int) string {$/;"	f
match	./net/http/sniff.go	/^func (mp4Sig) match(data []byte, firstNonWS int) string {$/;"	f
match	./net/http/sniff.go	/^func (textSig) match(data []byte, firstNonWS int) string {$/;"	f
match	./regexp/exec.go	/^func (m *machine) match(i input, pos int) bool {$/;"	f
match	./regexp/exec_test.go	/^var match = []func(*Regexp, *Regexp, string) (bool, string){$/;"	v
match	./syscall/route_bsd_test.go	/^func (sas sockaddrs) match(flags addrFlags) error {$/;"	f
match	./time/format.go	/^func match(s1, s2 string) bool {$/;"	f
matchArgType	./cmd/vet/types.go	/^func (f *File) matchArgType(t printfArgType, typ types.Type, arg ast.Expr) bool {$/;"	f
matchArgTypeInternal	./cmd/vet/types.go	/^func (f *File) matchArgTypeInternal(t printfArgType, typ types.Type, arg ast.Expr, inProgress map[types.Type]bool) bool {$/;"	f
matchBenchmarks	./go/doc/testdata/benchmark.go	/^var matchBenchmarks = flag.String("test.bench", "", "regular expression to select benchmarks to run")$/;"	v
matchBenchmarks	./testing/benchmark.go	/^var matchBenchmarks = flag.String("test.bench", "", "regular expression to select benchmarks to run")$/;"	v
matchChunk	./path/filepath/match.go	/^func matchChunk(chunk, s string) (rest string, ok bool, err error) {$/;"	f
matchChunk	./path/match.go	/^func matchChunk(chunk, s string) (rest string, ok bool, err error) {$/;"	f
matchDecl	./go/doc/filter.go	/^func matchDecl(d *ast.GenDecl, f Filter) bool {$/;"	f
matchFields	./go/doc/filter.go	/^func matchFields(fields *ast.FieldList, f Filter) bool {$/;"	f
matchFull	./regexp/exec_test.go	/^func matchFull(re, refull *Regexp, text string) (bool, string) {$/;"	f
matchFullLongest	./regexp/exec_test.go	/^func matchFullLongest(re, refull *Regexp, text string) (bool, string) {$/;"	f
matchFunctionTest	./regexp/all_test.go	/^func matchFunctionTest(t *testing.T, test *FindTest) {$/;"	f
matchGoImport	./cmd/go/vcs.go	/^func matchGoImport(imports []metaImport, importPath string) (_ metaImport, err error) {$/;"	f
matchHostnames	./crypto/x509/verify.go	/^func matchHostnames(pattern, host string) bool {$/;"	f
matchHostnamesTest	./crypto/x509/x509_test.go	/^type matchHostnamesTest struct {$/;"	t
matchHostnamesTests	./crypto/x509/x509_test.go	/^var matchHostnamesTests = []matchHostnamesTest{$/;"	v
matchLen	./cmd/fix/fix.go	/^func matchLen(x, y string) int {$/;"	f
matchPackages	./cmd/go/main.go	/^func matchPackages(pattern string) []string {$/;"	f
matchPackagesInFS	./cmd/go/main.go	/^func matchPackagesInFS(pattern string) []string {$/;"	f
matchParamType	./cmd/vet/method.go	/^func (f *File) matchParamType(expect string, actual ast.Expr) bool {$/;"	f
matchParams	./cmd/vet/method.go	/^func (f *File) matchParams(expect []string, actual []ast.Expr, prefix string) bool {$/;"	f
matchPartial	./regexp/exec_test.go	/^func matchPartial(re, refull *Regexp, text string) (bool, string) {$/;"	f
matchPartialLongest	./regexp/exec_test.go	/^func matchPartialLongest(re, refull *Regexp, text string) (bool, string) {$/;"	f
matchPat	./cmd/go/test.go	/^var matchPat string$/;"	v
matchPattern	./cmd/go/main.go	/^func matchPattern(pattern string) func(name string) bool {$/;"	f
matchPatternTests	./cmd/go/match_test.go	/^var matchPatternTests = []stringPairTest{$/;"	v
matchRe	./cmd/go/test.go	/^var matchRe *regexp.Regexp$/;"	v
matchReturnedCookies	./net/http/client_test.go	/^func matchReturnedCookies(t *testing.T, expected, given []*Cookie) {$/;"	f
matchRune	./regexp/syntax/parse.go	/^func matchRune(re *Regexp, r rune) bool {$/;"	f
matchRx	./go/doc/comment.go	/^var matchRx = regexp.MustCompile(`(` + urlRx + `)|(` + identRx + `)`)$/;"	v
matchString	./cmd/go/test.go	/^func matchString(pat, str string) (result bool, err error) {$/;"	f
matchStructArgType	./cmd/vet/types.go	/^func (f *File) matchStructArgType(t printfArgType, typ *types.Struct, arg ast.Expr, inProgress map[types.Type]bool) bool {$/;"	f
matchTest	./regexp/all_test.go	/^func matchTest(t *testing.T, test *FindTest) {$/;"	f
matchTests	./path/filepath/match_test.go	/^var matchTests = []MatchTest{$/;"	v
matchTests	./path/match_test.go	/^var matchTests = []MatchTest{$/;"	v
matchToken	./compress/flate/token.go	/^func matchToken(xlength uint32, xoffset uint32) token {$/;"	f
matchZoneKey	./time/zoneinfo_windows.go	/^func matchZoneKey(zones registry.Key, kname string, stdname, dstname string) (matched bool, err2 error) {$/;"	f
matchcheck	./regexp/testdata/testregex.c	/^matchcheck(regmatch_t* match, int nmatch, int nsub, char* ans, char* re, char* s, int len, int flags, unsigned long test)$/;"	f	file:
matcher	./runtime/runtime-gdb.py	/^	def matcher(val):$/;"	f	function:makematcher
matches	./database/sql/convert_test.go	/^	\/\/ Exact conversions (destination pointer type matches source type)$/;"	t
matches	./debug/macho/fat.go	/^		\/\/ Make sure the Mach-O type matches that of the first image.$/;"	t
matchesName	./cmd/pprof/internal/profile/filter.go	/^func (loc *Location) matchesName(re *regexp.Regexp) bool {$/;"	f
matchnlTests	./regexp/syntax/parse_test.go	/^var matchnlTests = []parseTest{$/;"	v
matchoffprint	./regexp/testdata/testregex.c	/^matchoffprint(int off)$/;"	f	file:
matchprint	./regexp/testdata/testregex.c	/^matchprint(regmatch_t* match, int nmatch, int nsub, char* ans, unsigned long test)$/;"	f	file:
matmult	./runtime/proc_test.go	/^func matmult(done chan<- struct{}, A, B, C Matrix, i0, i1, j0, j1, k0, k1, threshold int) {$/;"	f
matrix	./cmd/compile/internal/big/hilbert_test.go	/^type matrix struct {$/;"	t
matrix	./math/big/hilbert_test.go	/^type matrix struct {$/;"	t
max	./cmd/compile/internal/big/nat.go	/^func max(x, y int) int {$/;"	f
max	./go/doc/testdata/benchmark.go	/^func max(x, y int) int {$/;"	f
max	./math/big/nat.go	/^func max(x, y int) int {$/;"	f
max	./math/dim.go	/^func max(x, y float64) float64 {$/;"	f
max	./math/rand/rand_test.go	/^func max(a, b float64) float64 {$/;"	f
max	./strconv/ftoa.go	/^func max(a, b int) int {$/;"	f
max	./strings/search.go	/^func max(a, b int) int {$/;"	f
max	./testing/benchmark.go	/^func max(x, y int) int {$/;"	f
max8	./cmd/compile/internal/gc/esc.go	/^func max8(a, b int8) int8 {$/;"	f
maxBitStateLen	./regexp/backtrack.go	/^func maxBitStateLen(prog *syntax.Prog) int {$/;"	f
maxBytesReader	./net/http/request.go	/^type maxBytesReader struct {$/;"	t
maxHeaderBytes	./net/http/server.go	/^func (srv *Server) maxHeaderBytes() int {$/;"	f
maxIdleConnsLocked	./database/sql/sql.go	/^func (db *DB) maxIdleConnsLocked() int {$/;"	f
maxLatencyWriter	./net/http/httputil/reverseproxy.go	/^type maxLatencyWriter struct {$/;"	t
maxListenerBacklog	./net/sock_bsd.go	/^func maxListenerBacklog() int {$/;"	f
maxListenerBacklog	./net/sock_linux.go	/^func maxListenerBacklog() int {$/;"	f
maxListenerBacklog	./net/sock_plan9.go	/^func maxListenerBacklog() int {$/;"	f
maxListenerBacklog	./net/sock_stub.go	/^func maxListenerBacklog() int {$/;"	f
maxListenerBacklog	./net/sock_windows.go	/^func maxListenerBacklog() int {$/;"	f
maxNode	./compress/flate/huffman_code.go	/^func maxNode() literalNode { return literalNode{math.MaxUint16, math.MaxInt32} }$/;"	f
maxPow	./cmd/compile/internal/big/natconv.go	/^func maxPow(b Word) (p Word, n int) {$/;"	f
maxPow	./math/big/natconv.go	/^func maxPow(b Word) (p Word, n int) {$/;"	f
maxValue	./cmd/pprof/internal/report/report.go	/^		var maxValue, minValue int64$/;"	v
maxVersion	./crypto/tls/common.go	/^func (c *Config) maxVersion() uint16 {$/;"	f
maxa	./cmd/yacc/yacc.go	/^var maxa int$/;"	v
maxalign	./cmd/link/internal/ld/data.go	/^func maxalign(s *LSym, type_ int) int32 {$/;"	f
maxargs	./runtime/sys_windows_amd64.s	/^#define maxargs 16$/;"	d
maxbg	./cmd/dist/util.go	/^var maxbg = 4 \/* maximum number of jobs to run at once *\/$/;"	v
maxfltval	./cmd/compile/internal/gc/go.go	/^var maxfltval [NTYPE]*Mpflt$/;"	v
maxoff	./cmd/yacc/yacc.go	/^var maxoff int \/\/ maximum offset into a array$/;"	v
maxspr	./cmd/yacc/yacc.go	/^var maxspr int \/\/ maximum spread of any entry$/;"	v
maxstacksize	./runtime/stack1.go	/^var maxstacksize uintptr = 1 << 20 \/\/ enough until runtime.main sets it for real$/;"	v
maxstring	./runtime/string1.go	/^var maxstring uintptr = 256 \/\/ a hint for print$/;"	v
may	./cmd/gofmt/simplify.go	/^				\/\/ literal type may be omitted$/;"	t
may	./go/internal/gccgoimporter/parser.go	/^	\/\/ a named type may be referred to before the underlying type$/;"	t
may	./go/internal/gcimporter/gcimporter.go	/^	\/\/ a named type may be referred to before the underlying type$/;"	t
mayCombine	./go/printer/printer.go	/^func mayCombine(prev token.Token, next byte) (b bool) {$/;"	f
maybeConcat	./regexp/syntax/parse.go	/^func (p *parser) maybeConcat(r rune, flags Flags) bool {$/;"	f
maybeCreatePackage	./go/internal/gccgoimporter/parser.go	/^func (p *parser) maybeCreatePackage() {$/;"	f
maybeNextUnit	./debug/dwarf/entry.go	/^func (r *Reader) maybeNextUnit() {$/;"	f
maybeOpenNewConnections	./database/sql/sql.go	/^func (db *DB) maybeOpenNewConnections() {$/;"	f
mayberemoveoutfile	./cmd/link/internal/ld/lib.go	/^func mayberemoveoutfile() {$/;"	f
mbPerSec	./go/doc/testdata/benchmark.go	/^func (r BenchmarkResult) mbPerSec() float64 {$/;"	f
mbPerSec	./testing/benchmark.go	/^func (r BenchmarkResult) mbPerSec() float64 {$/;"	f
mbig	./reflect/all_test.go	/^	var mbig map[string][10 << 20]byte$/;"	v
mcache	./runtime/mcache.go	/^type mcache struct {$/;"	t
mcall	./runtime/stubs.go	/^func mcall(fn func(*g))$/;"	f
mcentral	./runtime/mcentral.go	/^type mcentral struct {$/;"	t
mcommoninit	./runtime/proc1.go	/^func mcommoninit(mp *m) {$/;"	f
mcontext	./runtime/defs1_solaris_amd64.go	/^type mcontext struct {$/;"	t
mcontext	./runtime/defs_dragonfly_amd64.go	/^type mcontext struct {$/;"	t
mcontext	./runtime/defs_freebsd_386.go	/^type mcontext struct {$/;"	t
mcontext	./runtime/defs_freebsd_amd64.go	/^type mcontext struct {$/;"	t
mcontext	./runtime/defs_freebsd_arm.go	/^type mcontext struct {$/;"	t
mcontext	./runtime/defs_linux_amd64.go	/^type mcontext struct {$/;"	t
mcontext32	./runtime/defs_darwin_386.go	/^type mcontext32 struct {$/;"	t
mcontext32	./runtime/defs_darwin_amd64.go	/^type mcontext32 struct {$/;"	t
mcontext32	./runtime/defs_darwin_arm.go	/^type mcontext32 struct {$/;"	t
mcontext64	./runtime/defs_darwin_386.go	/^type mcontext64 struct {$/;"	t
mcontext64	./runtime/defs_darwin_amd64.go	/^type mcontext64 struct {$/;"	t
mcontext64	./runtime/defs_darwin_arm64.go	/^type mcontext64 struct {$/;"	t
mcontextt	./runtime/defs1_netbsd_386.go	/^type mcontextt struct {$/;"	t
mcontextt	./runtime/defs1_netbsd_amd64.go	/^type mcontextt struct {$/;"	t
mcontextt	./runtime/defs1_netbsd_arm.go	/^type mcontextt struct {$/;"	t
mcount	./runtime/proc1.go	/^func mcount() int32 {$/;"	f
md5SHA1Hash	./crypto/tls/key_agreement.go	/^func md5SHA1Hash(slices [][]byte) []byte {$/;"	f
md5Test	./crypto/md5/md5_test.go	/^type md5Test struct {$/;"	t
mdnsSource	./net/conf.go	/^	var mdnsSource, filesSource, dnsSource bool$/;"	v
mdump	./runtime/heapdump.go	/^func mdump() {$/;"	f
me	./cmd/compile/internal/gc/popt.go	/^	var me int32$/;"	v
meanExtractor	./cmd/pprof/internal/driver/driver.go	/^func meanExtractor(ix int) sampleValueFunc {$/;"	f
means	./runtime/cgocall.go	/^	\/\/ NOTE(rsc): passing nil for argtype means that the copying of the$/;"	t
measureKaratsuba	./cmd/compile/internal/big/calibrate_test.go	/^func measureKaratsuba(th int) time.Duration {$/;"	f
measureKaratsuba	./math/big/calibrate_test.go	/^func measureKaratsuba(th int) time.Duration {$/;"	f
measureTick	./cmd/go/go_test.go	/^func measureTick(path string) {$/;"	f
mediaTypeTest	./mime/mediatype_test.go	/^type mediaTypeTest struct {$/;"	t
medianOfThree	./sort/sort.go	/^func medianOfThree(data Interface, m1, m0, m2 int) {$/;"	f
mediaop	./cmd/internal/obj/x86/asm6.go	/^func mediaop(ctxt *obj.Link, o *Optab, op int, osize int, z int) int {$/;"	f
medium	./cmd/compile/internal/big/int_test.go	/^	var medium bytes.Buffer$/;"	v
medium	./cmd/compile/internal/big/rat_test.go	/^	var medium bytes.Buffer$/;"	v
medium	./math/big/int_test.go	/^	var medium bytes.Buffer$/;"	v
medium	./math/big/rat_test.go	/^	var medium bytes.Buffer$/;"	v
mediumloop	./runtime/asm_386.s	/^mediumloop:$/;"	l
megaLeaf	./crypto/x509/verify_test.go	/^var megaLeaf = `-----BEGIN CERTIFICATE-----$/;"	v
memAlloc	./runtime/mem_plan9.go	/^func memAlloc(n uintptr) unsafe.Pointer {$/;"	f
memBytes	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^var memBytes = [...]int8{$/;"	v
memCheck	./runtime/mem_plan9.go	/^func memCheck() {$/;"	f
memFree	./runtime/mem_plan9.go	/^func memFree(ap unsafe.Pointer, n uintptr) {$/;"	f
memFreelist	./runtime/mem_plan9.go	/^var memFreelist *memHdr \/\/ sorted in ascending order$/;"	v
memHdr	./runtime/mem_plan9.go	/^type memHdr struct {$/;"	t
memProfile	./runtime/mprof.go	/^\/\/ A memRecord is the bucket data for a bucket of type memProfile,$/;"	t
memRecord	./runtime/mprof.go	/^type memRecord struct {$/;"	t
memRound	./runtime/mem_plan9.go	/^func memRound(p uintptr) uintptr {$/;"	f
memSink	./runtime/pprof/mprof_test.go	/^var memSink interface{}$/;"	v
memStats	./runtime/mstats.go	/^	var memStats MemStats$/;"	v
memStats	./testing/benchmark.go	/^var memStats runtime.MemStats$/;"	v
memclr	./cmd/compile/internal/gc/builtin/runtime.go	/^func memclr(ptr *byte, length uintptr)$/;"	f
memclr	./reflect/value.go	/^func memclr(ptr unsafe.Pointer, n uintptr)$/;"	f
memclr	./runtime/stubs.go	/^func memclr(ptr unsafe.Pointer, n uintptr)$/;"	f
memclrBytes	./runtime/alg.go	/^func memclrBytes(b []byte) {$/;"	f
memeq	./runtime/stubs.go	/^func memeq(a, b unsafe.Pointer, size uintptr) bool$/;"	f
memequal	./cmd/compile/internal/gc/builtin/runtime.go	/^func memequal(x, y *any, size uintptr) bool$/;"	f
memequal	./runtime/alg.go	/^func memequal(p, q unsafe.Pointer, size uintptr) bool {$/;"	f
memequal0	./runtime/alg.go	/^func memequal0(p, q unsafe.Pointer) bool {$/;"	f
memequal128	./cmd/compile/internal/gc/builtin/runtime.go	/^func memequal128(x, y *any) bool$/;"	f
memequal128	./runtime/alg.go	/^func memequal128(p, q unsafe.Pointer) bool {$/;"	f
memequal16	./cmd/compile/internal/gc/builtin/runtime.go	/^func memequal16(x, y *any) bool$/;"	f
memequal16	./runtime/alg.go	/^func memequal16(p, q unsafe.Pointer) bool {$/;"	f
memequal32	./cmd/compile/internal/gc/builtin/runtime.go	/^func memequal32(x, y *any) bool$/;"	f
memequal32	./runtime/alg.go	/^func memequal32(p, q unsafe.Pointer) bool {$/;"	f
memequal64	./cmd/compile/internal/gc/builtin/runtime.go	/^func memequal64(x, y *any) bool$/;"	f
memequal64	./runtime/alg.go	/^func memequal64(p, q unsafe.Pointer) bool {$/;"	f
memequal8	./cmd/compile/internal/gc/builtin/runtime.go	/^func memequal8(x, y *any) bool$/;"	f
memequal8	./runtime/alg.go	/^func memequal8(p, q unsafe.Pointer) bool {$/;"	f
memhash	./runtime/hash32.go	/^func memhash(p unsafe.Pointer, seed, s uintptr) uintptr {$/;"	f
memhash	./runtime/hash64.go	/^func memhash(p unsafe.Pointer, seed, s uintptr) uintptr {$/;"	f
memhash0	./runtime/alg.go	/^func memhash0(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
memhash128	./runtime/alg.go	/^func memhash128(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
memhash16	./runtime/alg.go	/^func memhash16(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
memhash32	./runtime/alg.go	/^func memhash32(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
memhash64	./runtime/alg.go	/^func memhash64(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
memhash8	./runtime/alg.go	/^func memhash8(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
memhash_varlen	./runtime/alg.go	/^func memhash_varlen(p unsafe.Pointer, h uintptr) uintptr$/;"	f
memlimit	./runtime/os1_darwin.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os1_dragonfly.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os1_freebsd.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os1_linux.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os1_nacl.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os1_netbsd.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os1_openbsd.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os1_plan9.go	/^func memlimit() uint64 {$/;"	f
memlimit	./runtime/os1_windows.go	/^func memlimit() uintptr {$/;"	f
memlimit	./runtime/os3_solaris.go	/^func memlimit() uintptr {$/;"	f
memlock	./runtime/mem_plan9.go	/^var memlock mutex$/;"	v
memmove	./cmd/compile/internal/gc/builtin/runtime.go	/^func memmove(to *any, frm *any, length uintptr)$/;"	f
memmove	./runtime/stubs.go	/^func memmove(to, from unsafe.Pointer, n uintptr)$/;"	f
memname	./cmd/compile/internal/x86/gsubr.go	/^func memname(n *gc.Node, t *gc.Type) {$/;"	f
memoryError	./runtime/panic.go	/^var memoryError = error(errorString("invalid memory address or nil pointer dereference"))$/;"	v
memoryLabel	./cmd/pprof/internal/report/report.go	/^func memoryLabel(value int64, fromUnit, toUnit string) (v float64, u string, ok bool) {$/;"	f
memoryMapTriggers	./cmd/pprof/internal/profile/legacy_profile.go	/^var memoryMapTriggers = []string{$/;"	v
memoryProfilerRun	./runtime/pprof/mprof_test.go	/^var memoryProfilerRun = 0$/;"	v
memp	./cmd/yacc/yacc.go	/^var memp int                     \/\/ next free action table position$/;"	v
memstats	./expvar/expvar.go	/^func memstats() interface{} {$/;"	f
memstats	./runtime/mstats.go	/^var memstats mstats$/;"	v
memstats	./testing/allocs.go	/^	var memstats runtime.MemStats$/;"	v
mergeCharClass	./regexp/syntax/parse.go	/^func mergeCharClass(dst, src *Regexp) {$/;"	f
mergeEnvLists	./cmd/dist/test.go	/^func mergeEnvLists(in, out []string) []string {$/;"	f
mergeEnvLists	./cmd/go/main.go	/^func mergeEnvLists(in, out []string) []string {$/;"	f
mergePAX	./archive/tar/reader.go	/^func mergePAX(hdr *Header, headers map[string]string) error {$/;"	f
mergePassInto	./image/png/reader.go	/^func (d *decoder) mergePassInto(dst image.Image, src image.Image, pass int) {$/;"	f
mergeRuneSets	./regexp/onepass.go	/^func mergeRuneSets(leftRunes, rightRunes *[]rune, leftPC, rightPC uint32) ([]rune, []uint32) {$/;"	f
mergeSetHeader	./net/http/transfer.go	/^func mergeSetHeader(dst *Header, src Header) {$/;"	f
mergetemp	./cmd/compile/internal/gc/popt.go	/^func mergetemp(firstp *obj.Prog) {$/;"	f
mergewalk	./cmd/compile/internal/gc/popt.go	/^func mergewalk(v *TempVar, f0 *Flow, gen uint32) {$/;"	f
messWith	./archive/zip/reader_test.go	/^func messWith(fileName string, corrupter func(b []byte)) (r io.ReaderAt, size int64) {$/;"	f
message	./cmd/pprof/internal/profile/proto.go	/^type message interface {$/;"	t
message	./encoding/gob/debug.go	/^func (deb *debugger) message(indent tab) bool {$/;"	f
metaImport	./cmd/go/vcs.go	/^type metaImport struct {$/;"	t
metaImportsForPrefix	./cmd/go/vcs.go	/^func metaImportsForPrefix(importPrefix string, security securityMode) (urlStr string, imports []metaImport, err error) {$/;"	f
metaTests	./regexp/all_test.go	/^var metaTests = []MetaTest{$/;"	v
meth	./cmd/link/internal/ld/go.go	/^	var meth string$/;"	v
methcmp	./cmd/compile/internal/gc/subr.go	/^type methcmp []*Type$/;"	t
method	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (s) method()$/;"	f
method	./cmd/compile/internal/gc/fmt.go	/^		\/\/ Special case: explicit name of func (*T) method(...) is turned into pkg.(*T).method,$/;"	f
method	./cmd/compile/internal/gc/reflect.go	/^	var method *Sym$/;"	v
method	./cmd/compile/internal/gc/subr.go	/^			\/\/ add it to the base type method list$/;"	t
method	./reflect/type.go	/^type method struct {$/;"	t
method	./runtime/debug/stack_test.go	/^func (t T) method() []byte {$/;"	f
method	./runtime/type.go	/^type method struct {$/;"	t
methodArray	./net/rpc/debug.go	/^type methodArray []debugMethod$/;"	t
methodDoc	./cmd/doc/pkg.go	/^func (pkg *Package) methodDoc(symbol, method string) {$/;"	f
methodName	./reflect/value.go	/^func methodName() string {$/;"	f
methodNames	./cmd/api/goapi.go	/^	var methodNames []string$/;"	v
methodNames	./cmd/api/goapi.go	/^	var methodNames map[string]bool$/;"	v
methodReceiver	./reflect/value.go	/^func methodReceiver(op string, v Value, methodIndex int) (rcvrtype, t *rtype, fn unsafe.Pointer) {$/;"	f
methodSet	./go/doc/reader.go	/^type methodSet map[string]*Func$/;"	t
methodSet	./go/types/methodset.go	/^type methodSet map[string]*Selection \/\/ a nil entry indicates a name collision$/;"	t
methodType	./net/rpc/server.go	/^type methodType struct {$/;"	t
methodValue	./reflect/makefunc.go	/^type methodValue struct {$/;"	t
methodValueCall	./reflect/makefunc.go	/^func methodValueCall()$/;"	f
methodbyname	./cmd/compile/internal/gc/export.go	/^type methodbyname []*Type$/;"	t
methodfunc	./cmd/compile/internal/gc/reflect.go	/^func methodfunc(f *Type, receiver *Type) *Type {$/;"	f
methodname	./cmd/compile/internal/gc/dcl.go	/^func methodname(n *Node, t *Type) *Node {$/;"	f
methodname1	./cmd/compile/internal/gc/dcl.go	/^func methodname1(n *Node, t *Node) *Node {$/;"	f
methodqueue	./cmd/compile/internal/gc/typecheck.go	/^var methodqueue *NodeList$/;"	v
methods	./cmd/compile/internal/gc/reflect.go	/^func methods(t *Type) *Sig {$/;"	f
methods	./go/internal/gccgoimporter/parser.go	/^	var methods []*types.Func$/;"	v
methods	./go/internal/gcimporter/gcimporter.go	/^	var methods []*types.Func$/;"	v
methodsym	./cmd/compile/internal/gc/dcl.go	/^func methodsym(nsym *Sym, t0 *Type, iface int) *Sym {$/;"	f
methodsym_toppkg	./cmd/compile/internal/gc/dcl.go	/^var methodsym_toppkg *Pkg$/;"	v
methtype	./cmd/compile/internal/gc/subr.go	/^func methtype(t *Type, mustname int) *Type {$/;"	f
mfence	./runtime/asm_386.s	/^mfence:$/;"	l
mfence	./runtime/asm_amd64.s	/^mfence:$/;"	l
mget	./runtime/proc1.go	/^func mget() *m {$/;"	f
mgf1XOR	./crypto/rsa/rsa.go	/^func mgf1XOR(out []byte, hash hash.Hash, seed []byte) {$/;"	f
mheap	./runtime/mheap.go	/^type mheap struct {$/;"	t
mheap_	./runtime/mheap.go	/^var mheap_ mheap$/;"	v
mhelpgc	./runtime/proc1.go	/^func mhelpgc() {$/;"	f
mi	./reflect/all_test.go	/^	var mi struct {$/;"	v
mibentry	./syscall/zsysctl_openbsd.go	/^type mibentry struct {$/;"	t
might	./cmd/cgo/gcc.go	/^	\/\/ Completing one pointer type might produce more to complete.$/;"	t
might	./cmd/vet/method.go	/^\/\/ For example, a type might implement a Scan method that$/;"	t
might	./encoding/gob/type.go	/^	\/\/ The type might be a pointer and we need to keep$/;"	t
mimeHeader	./net/http/fs.go	/^func (r httpRange) mimeHeader(contentType string, size int64) textproto.MIMEHeader {$/;"	f
min	./cmd/compile/internal/big/bits_test.go	/^	var min int$/;"	v
min	./cmd/compile/internal/big/bits_test.go	/^	var min, max int$/;"	v
min	./cmd/compile/internal/big/ftoa.go	/^func min(x, y int) int {$/;"	f
min	./cmd/compile/internal/gc/esc.go	/^func (l1 Level) min(l2 Level) Level {$/;"	f
min	./cmd/dist/util.go	/^func min(a, b int) int {$/;"	f
min	./compress/flate/gen.go	/^	var min, max int$/;"	v
min	./compress/flate/inflate.go	/^	var min, max int$/;"	v
min	./encoding/xml/typeinfo.go	/^func min(a, b int) int {$/;"	f
min	./go/doc/testdata/benchmark.go	/^func min(x, y int) int {$/;"	f
min	./go/types/builtins.go	/^		var min int \/\/ minimum number of arguments$/;"	v
min	./image/jpeg/writer.go	/^func min(x, y int) int {$/;"	f
min	./image/png/reader.go	/^func min(a, b int) int {$/;"	f
min	./math/big/bits_test.go	/^	var min int$/;"	v
min	./math/big/bits_test.go	/^	var min, max int$/;"	v
min	./math/big/ftoa.go	/^func min(x, y int) int {$/;"	f
min	./math/dim.go	/^func min(x, y float64) float64 {$/;"	f
min	./runtime/debug/garbage_test.go	/^	var min, max time.Duration$/;"	v
min	./sort/sort.go	/^func min(a, b int) int {$/;"	f
min	./sort/sort_test.go	/^func min(a, b int) int {$/;"	f
min	./strconv/ftoa.go	/^func min(a, b int) int {$/;"	f
min	./syscall/unzip_nacl.go	/^	var min, max int$/;"	v
min	./testing/benchmark.go	/^func min(x, y int) int {$/;"	f
min8	./cmd/compile/internal/gc/esc.go	/^func min8(a, b int8) int8 {$/;"	f
minDurationTests	./time/time_test.go	/^var minDurationTests = []struct {$/;"	v
minFoldRune	./regexp/syntax/parse.go	/^func minFoldRune(r rune) rune {$/;"	f
minVersion	./crypto/tls/common.go	/^func (c *Config) minVersion() uint16 {$/;"	f
mincore	./runtime/stubs.go	/^func mincore(addr unsafe.Pointer, n uintptr, dst *byte) int32$/;"	f
minfltval	./cmd/compile/internal/gc/go.go	/^var minfltval [NTYPE]*Mpflt$/;"	v
minimal	./crypto/elliptic/p224.go	/^	var minimal p224FieldElement$/;"	v
minit	./runtime/os1_darwin.go	/^func minit() {$/;"	f
minit	./runtime/os1_dragonfly.go	/^func minit() {$/;"	f
minit	./runtime/os1_freebsd.go	/^func minit() {$/;"	f
minit	./runtime/os1_linux.go	/^func minit() {$/;"	f
minit	./runtime/os1_nacl.go	/^func minit() {$/;"	f
minit	./runtime/os1_netbsd.go	/^func minit() {$/;"	f
minit	./runtime/os1_openbsd.go	/^func minit() {$/;"	f
minit	./runtime/os1_plan9.go	/^func minit() {$/;"	f
minit	./runtime/os1_windows.go	/^func minit() {$/;"	f
minit	./runtime/os3_solaris.go	/^func minit() {$/;"	f
miniterrno	./runtime/os3_solaris.go	/^func miniterrno()$/;"	f
minsize	./runtime/mgcmark.go	/^	var minsize uintptr$/;"	v
minsize	./runtime/stack1.go	/^	var minsize uintptr$/;"	v
minus	./cmd/compile/internal/gc/cplx.go	/^func minus(nl *Node, res *Node) {$/;"	f
miscPlaneTag	./encoding/json/tagkey_test.go	/^type miscPlaneTag struct {$/;"	t
mismatch	./cmd/compile/internal/gc/const.go	/^		Fatal("constant type mismatch %v(%d) %v(%d)", nl.Type, v.Ctype(), nr.Type, rv.Ctype())$/;"	t
mismatch	./cmd/gofmt/rewrite.go	/^				(strings.Contains(s, "type mismatch") || strings.Contains(s, "not assignable")) {$/;"	t
mismatch	./cmd/pprof/internal/profile/proto.go	/^		return errors.New("type mismatch")$/;"	t
mismatch	./encoding/gob/decode.go	/^			errorf("type mismatch: no fields matched compiling decoder for %s", name)$/;"	t
mismatch	./encoding/gob/decode.go	/^		errorf("type mismatch in decoder: want struct type %s; got non-struct", rt)$/;"	t
mismatch	./encoding/gob/encoder_test.go	/^	\/\/ Now test with a running encoder\/decoder pair that we recognize a type mismatch.$/;"	t
mismatch	./image/png/reader.go	/^		return FormatError("PLTE, color type mismatch")$/;"	t
mismatch	./image/png/reader.go	/^		return FormatError("tRNS, color type mismatch")$/;"	t
mismatch	./net/http/response_test.go	/^		t.Errorf("%s: type mismatch %v want %v", prefix, hv.Type(), wv.Type())$/;"	t
mismatch	./syscall/srpc_nacl.go	/^	srpcErrInArgTypeMismatch - srpcOK:  "input argument type mismatch",$/;"	t
mismatch	./syscall/srpc_nacl.go	/^	srpcErrOutArgTypeMismatch - srpcOK: "output argument type mismatch",$/;"	t
mismatches	./cmd/compile/internal/gc/gsubr.go	/^		\/\/ The type mismatches should be fixed and the clearing below removed.$/;"	t
mismatches	./cmd/compile/internal/gc/gsubr.go	/^		\/\/ hopes innocuous) type mismatches.$/;"	t
misnamedTag	./encoding/json/tagkey_test.go	/^type misnamedTag struct {$/;"	t
misquoted	./strconv/quote_test.go	/^var misquoted = []string{$/;"	v
missing	./cmd/api/goapi.go	/^	var missing []string$/;"	v
missing	./cmd/compile/internal/gc/subr.go	/^				Fatal("func missing struct: %v %v", t1, t2)$/;"	f
missing	./cmd/compile/internal/gc/subr.go	/^		var missing *Type$/;"	v
missing	./cmd/compile/internal/gc/swt.go	/^					var missing, have *Type$/;"	v
missing	./cmd/compile/internal/gc/typecheck.go	/^			var missing *Type$/;"	v
missingKeyAction	./text/template/option.go	/^type missingKeyAction int$/;"	t
mkCharClass	./regexp/syntax/parse_test.go	/^func mkCharClass(f func(rune) bool) string {$/;"	f
mkEnv	./cmd/go/env.go	/^func mkEnv() []envVar {$/;"	f
mkType	./cmd/fix/typecheck.go	/^func mkType(t string) string {$/;"	f
mkbuiltin	./cmd/compile/internal/gc/mkbuiltin.go	/^func mkbuiltin(w io.Writer, name string) {$/;"	f
mkcall	./cmd/compile/internal/gc/walk.go	/^func mkcall(name string, t *Type, init **NodeList, args ...*Node) *Node {$/;"	f
mkcall1	./cmd/compile/internal/gc/walk.go	/^func mkcall1(fn *Node, t *Type, init **NodeList, args ...*Node) *Node {$/;"	f
mkdev	./syscall/fs_nacl.go	/^func mkdev(path string, mode uint32, open func() (devFile, error)) error {$/;"	f
mkdirTree	./os/os_test.go	/^func mkdirTree(t *testing.T, root string, level, max int) {$/;"	f
mkdotargslice	./cmd/compile/internal/gc/walk.go	/^func mkdotargslice(lr0 *NodeList, nn *NodeList, l *Type, fp int, init **NodeList, ddd *Node) *NodeList {$/;"	f
mkfwd	./cmd/internal/obj/ld.go	/^func mkfwd(sym *LSym) {$/;"	f
mkindex	./cmd/link/internal/ld/dwarf.go	/^func mkindex(die *DWDie) {$/;"	f
mkinlcall	./cmd/compile/internal/gc/inl.go	/^func mkinlcall(np **Node, fn *Node, isddd bool) {$/;"	f
mkinlcall1	./cmd/compile/internal/gc/inl.go	/^func mkinlcall1(np **Node, fn *Node, isddd bool) {$/;"	f
mkinternaltypename	./cmd/link/internal/ld/dwarf.go	/^func mkinternaltypename(base string, arg1 string, arg2 string) string {$/;"	f
mkpackage	./cmd/compile/internal/gc/lex.go	/^func mkpackage(pkgname string) {$/;"	f
mkpkg	./cmd/compile/internal/gc/subr.go	/^func mkpkg(path string) *Pkg {$/;"	f
mkset	./cmd/yacc/yacc.go	/^func mkset() Lkset { return make([]int, tbitset) }$/;"	f
mktag	./cmd/compile/internal/gc/esc.go	/^func mktag(mask int) *string {$/;"	f
mktemp	./cmd/yacc/yacc.go	/^func mktemp(t string) string { return t }$/;"	f
mkvar	./cmd/compile/internal/gc/reg.go	/^func mkvar(f *Flow, a *obj.Addr) Bits {$/;"	f
mkvarname	./cmd/link/internal/ld/dwarf.go	/^func mkvarname(name string, da int) string {$/;"	f
mlink	./runtime/mfixalloc.go	/^type mlink struct {$/;"	t
mlookup	./runtime/mheap.go	/^func mlookup(v uintptr, base *uintptr, size *uintptr, sp **mspan) int32 {$/;"	f
mm	./cmd/compile/internal/gc/walk.go	/^	var mm *NodeList$/;"	v
mmap	./runtime/os3_solaris.go	/^func mmap(addr unsafe.Pointer, n uintptr, prot, flags, fd int32, off uint32) unsafe.Pointer {$/;"	f
mmap	./runtime/os_nacl.go	/^func mmap(addr unsafe.Pointer, n uintptr, prot, flags, fd int32, off uint32) unsafe.Pointer$/;"	f
mmap	./runtime/stubs2.go	/^func mmap(addr unsafe.Pointer, n uintptr, prot, flags, fd int32, off uint32) unsafe.Pointer$/;"	f
mmap	./syscall/syscall_linux_386.go	/^func mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error) {$/;"	f
mmap	./syscall/syscall_linux_arm.go	/^func mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_darwin_386.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_darwin_amd64.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_darwin_arm.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_darwin_arm64.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_dragonfly_amd64.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_freebsd_386.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_freebsd_amd64.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_freebsd_arm.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_linux_amd64.go	/^func mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_linux_arm64.go	/^func mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_linux_ppc64.go	/^func mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_linux_ppc64le.go	/^func mmap(addr uintptr, length uintptr, prot int, flags int, fd int, offset int64) (xaddr uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_netbsd_386.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_netbsd_amd64.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_netbsd_arm.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_openbsd_386.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_openbsd_amd64.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_openbsd_arm.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap	./syscall/zsyscall_solaris_amd64.go	/^func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {$/;"	f
mmap2	./syscall/zsyscall_linux_386.go	/^func mmap2(addr uintptr, length uintptr, prot int, flags int, fd int, pageOffset uintptr) (xaddr uintptr, err error) {$/;"	f
mmap2	./syscall/zsyscall_linux_arm.go	/^func mmap2(addr uintptr, length uintptr, prot int, flags int, fd int, pageOffset uintptr) (xaddr uintptr, err error) {$/;"	f
mmap_fixed	./runtime/mem_linux.go	/^func mmap_fixed(v unsafe.Pointer, n uintptr, prot, flags, fd int32, offset uint32) unsafe.Pointer {$/;"	f
mmapper	./syscall/syscall_unix.go	/^type mmapper struct {$/;"	t
mod	./math/mod.go	/^func mod(x, y float64) float64 {$/;"	f
modInverse	./crypto/rsa/rsa.go	/^func modInverse(a, n *big.Int) (ia *big.Int, ok bool) {$/;"	f
modInverseTests	./cmd/compile/internal/big/int_test.go	/^var modInverseTests = []struct {$/;"	v
modInverseTests	./math/big/int_test.go	/^var modInverseTests = []struct {$/;"	v
modTime	./archive/tar/writer.go	/^	var modTime int64$/;"	v
modW	./cmd/compile/internal/big/nat.go	/^func (x nat) modW(d Word) (r Word) {$/;"	f
modW	./math/big/nat.go	/^func (x nat) modW(d Word) (r Word) {$/;"	f
modWTest	./cmd/compile/internal/big/nat_test.go	/^type modWTest struct {$/;"	t
modWTest	./math/big/nat_test.go	/^type modWTest struct {$/;"	t
modWTests32	./cmd/compile/internal/big/nat_test.go	/^var modWTests32 = []modWTest{$/;"	v
modWTests32	./math/big/nat_test.go	/^var modWTests32 = []modWTest{$/;"	v
modWTests64	./cmd/compile/internal/big/nat_test.go	/^var modWTests64 = []modWTest{$/;"	v
modWTests64	./math/big/nat_test.go	/^var modWTests64 = []modWTest{$/;"	v
mode	./go/printer/nodes.go	/^	var mode exprListMode$/;"	v
mode	./go/types/example_test.go	/^func mode(tv types.TypeAndValue) string {$/;"	f
mode	./runtime/netpoll_epoll.go	/^		var mode int32$/;"	v
mode	./runtime/netpoll_kqueue.go	/^		var mode int32$/;"	v
mode	./runtime/netpoll_solaris.go	/^		var mode, clear int32$/;"	v
modelFunc	./image/color/color.go	/^type modelFunc struct {$/;"	t
modf	./math/all_test.go	/^var modf = [][2]float64{$/;"	v
modf	./math/modf.go	/^func modf(f float64) (int float64, frac float64) {$/;"	f
modfSC	./math/all_test.go	/^var modfSC = [][2]float64{$/;"	v
modifiescpsr	./cmd/compile/internal/arm/peep.go	/^func modifiescpsr(p *obj.Prog) bool {$/;"	f
moduledata	./runtime/symtab.go	/^type moduledata struct {$/;"	t
moduledataverify	./runtime/symtab.go	/^func moduledataverify() {$/;"	f
moduledataverify1	./runtime/symtab.go	/^func moduledataverify1(datap *moduledata) {$/;"	f
modulehash	./runtime/symtab.go	/^type modulehash struct {$/;"	t
moipLeafCert	./crypto/x509/verify_test.go	/^var moipLeafCert = `-----BEGIN CERTIFICATE-----$/;"	v
montgomery	./cmd/compile/internal/big/nat.go	/^func (z nat) montgomery(x, y, m nat, k Word, n int) nat {$/;"	f
montgomery	./math/big/nat.go	/^func (z nat) montgomery(x, y, m nat, k Word, n int) nat {$/;"	f
montgomeryTests	./cmd/compile/internal/big/nat_test.go	/^var montgomeryTests = []struct {$/;"	v
montgomeryTests	./math/big/nat_test.go	/^var montgomeryTests = []struct {$/;"	v
months	./time/time.go	/^var months = [...]string{$/;"	v
more	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) more() bool {$/;"	f
more	./cmd/compile/internal/gc/lex.go	/^func more(pp *string) bool {$/;"	f
more	./runtime/heapdump.go	/^\/\/ serializing a type more than once.  That's ok.$/;"	t
moreBits	./compress/flate/inflate.go	/^func (f *decompressor) moreBits() error {$/;"	f
moreBits	./syscall/unzip_nacl.go	/^func (f *decompressor) moreBits() {$/;"	f
moreMessage	./net/textproto/reader.go	/^		var moreMessage string$/;"	v
moreprod	./cmd/yacc/yacc.go	/^func moreprod() {$/;"	f
morestack	./cmd/link/internal/ld/lib.go	/^var morestack *LSym$/;"	v
morestack	./runtime/stubs.go	/^func morestack()$/;"	f
morestackc	./runtime/stack1.go	/^func morestackc() {$/;"	f
mount	./syscall/zsyscall_linux_386.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	f
mount	./syscall/zsyscall_linux_amd64.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	f
mount	./syscall/zsyscall_linux_arm.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	f
mount	./syscall/zsyscall_linux_arm64.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	f
mount	./syscall/zsyscall_linux_ppc64.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	f
mount	./syscall/zsyscall_linux_ppc64le.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	f
mount	./syscall/zsyscall_plan9_386.go	/^func mount(fd int, afd int, old string, flag int, aname string) (err error) {$/;"	f
mount	./syscall/zsyscall_plan9_amd64.go	/^func mount(fd int, afd int, old string, flag int, aname string) (err error) {$/;"	f
mountPointReparseBuffer	./syscall/ztypes_windows.go	/^type mountPointReparseBuffer struct {$/;"	t
mov	./cmd/internal/obj/arm/asm5.go	/^func mov(ctxt *obj.Link, p *obj.Prog) uint32 {$/;"	f
mov	./cmd/internal/obj/ppc64/obj9.go	/^	var mov int$/;"	v
movcon	./cmd/internal/obj/arm64/asm7.go	/^func movcon(v int64) int {$/;"	f
moveToFrontDecoder	./compress/bzip2/move_to_front.go	/^type moveToFrontDecoder []byte$/;"	t
move_0	./runtime/memmove_386.s	/^move_0:$/;"	l
move_0	./runtime/memmove_amd64.s	/^move_0:$/;"	l
move_0	./runtime/memmove_plan9_386.s	/^move_0:$/;"	l
move_0	./runtime/memmove_plan9_amd64.s	/^move_0:$/;"	l
move_129through256	./runtime/memmove_amd64.s	/^move_129through256:$/;"	l
move_17through32	./runtime/memmove_386.s	/^move_17through32:$/;"	l
move_17through32	./runtime/memmove_amd64.s	/^move_17through32:$/;"	l
move_1or2	./runtime/memmove_386.s	/^move_1or2:$/;"	l
move_1or2	./runtime/memmove_amd64.s	/^move_1or2:$/;"	l
move_1or2	./runtime/memmove_plan9_386.s	/^move_1or2:$/;"	l
move_1or2	./runtime/memmove_plan9_amd64.s	/^move_1or2:$/;"	l
move_256through2048	./runtime/memmove_amd64.s	/^move_256through2048:$/;"	l
move_33through64	./runtime/memmove_386.s	/^move_33through64:$/;"	l
move_33through64	./runtime/memmove_amd64.s	/^move_33through64:$/;"	l
move_3or4	./runtime/memmove_386.s	/^move_3or4:$/;"	l
move_3or4	./runtime/memmove_amd64.s	/^move_3or4:$/;"	l
move_3or4	./runtime/memmove_plan9_386.s	/^move_3or4:$/;"	l
move_3or4	./runtime/memmove_plan9_amd64.s	/^move_3or4:$/;"	l
move_5through8	./runtime/memmove_386.s	/^move_5through8:$/;"	l
move_5through8	./runtime/memmove_amd64.s	/^move_5through8:$/;"	l
move_5through8	./runtime/memmove_plan9_386.s	/^move_5through8:$/;"	l
move_5through8	./runtime/memmove_plan9_amd64.s	/^move_5through8:$/;"	l
move_65through128	./runtime/memmove_386.s	/^move_65through128:$/;"	l
move_65through128	./runtime/memmove_amd64.s	/^move_65through128:$/;"	l
move_9through16	./runtime/memmove_386.s	/^move_9through16:$/;"	l
move_9through16	./runtime/memmove_amd64.s	/^move_9through16:$/;"	l
move_9through16	./runtime/memmove_plan9_386.s	/^move_9through16:$/;"	l
move_9through16	./runtime/memmove_plan9_amd64.s	/^move_9through16:$/;"	l
movesize	./cmd/internal/obj/arm64/asm7.go	/^func movesize(a int) int {$/;"	f
movetomodule	./cmd/link/internal/ld/dwarf.go	/^func movetomodule(parent *DWDie) {$/;"	f
mozBindingBytes	./html/template/css.go	/^var mozBindingBytes = []byte("mozbinding")$/;"	v
mp	./runtime/lock_sema.go	/^	var mp *m$/;"	v
mp	./runtime/mprof.go	/^func (b *bucket) mp() *memRecord {$/;"	f
mp4Sig	./net/http/sniff.go	/^type mp4Sig int$/;"	t
mp4ftype	./net/http/sniff.go	/^var mp4ftype = []byte("ftyp")$/;"	v
mpaddcflt	./cmd/compile/internal/gc/mparith3.go	/^func mpaddcflt(a *Mpflt, c float64) {$/;"	f
mpaddfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpaddfixfix(a, b *Mpint, quiet int) {$/;"	f
mpaddfltflt	./cmd/compile/internal/gc/mparith3.go	/^func mpaddfltflt(a *Mpflt, b *Mpflt) {$/;"	f
mpandfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpandfixfix(a, b *Mpint) {$/;"	f
mpandnotfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpandnotfixfix(a, b *Mpint) {$/;"	f
mpatofix	./cmd/compile/internal/gc/mparith2.go	/^func mpatofix(a *Mpint, as string) {$/;"	f
mpatoflt	./cmd/compile/internal/gc/mparith3.go	/^func mpatoflt(a *Mpflt, as string) {$/;"	f
mpcmpfixc	./cmd/compile/internal/gc/mparith2.go	/^func mpcmpfixc(b *Mpint, c int64) int {$/;"	f
mpcmpfltc	./cmd/compile/internal/gc/mparith3.go	/^func mpcmpfltc(b *Mpflt, c float64) int {$/;"	f
mpcmpfltflt	./cmd/compile/internal/gc/mparith3.go	/^func mpcmpfltflt(a *Mpflt, b *Mpflt) int {$/;"	f
mpdivfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpdivfixfix(a, b *Mpint) {$/;"	f
mpdivfltflt	./cmd/compile/internal/gc/mparith3.go	/^func mpdivfltflt(a *Mpflt, b *Mpflt) {$/;"	f
mpgetflt	./cmd/compile/internal/gc/mparith3.go	/^func mpgetflt(a *Mpflt) float64 {$/;"	f
mpgetflt32	./cmd/compile/internal/gc/mparith3.go	/^func mpgetflt32(a *Mpflt) float64 {$/;"	f
mplshfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mplshfixfix(a, b *Mpint) {$/;"	f
mpmodfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpmodfixfix(a, b *Mpint) {$/;"	f
mpmovefixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpmovefixfix(a, b *Mpint) {$/;"	f
mpmovefltfix	./cmd/compile/internal/gc/mparith2.go	/^func mpmovefltfix(a *Mpint, b *Mpflt) int {$/;"	f
mpmovefltflt	./cmd/compile/internal/gc/mparith3.go	/^func mpmovefltflt(a *Mpflt, b *Mpflt) {$/;"	f
mpmulcflt	./cmd/compile/internal/gc/mparith3.go	/^func mpmulcflt(a *Mpflt, c float64) {$/;"	f
mpmulfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpmulfixfix(a, b *Mpint) {$/;"	f
mpmulfltflt	./cmd/compile/internal/gc/mparith3.go	/^func mpmulfltflt(a *Mpflt, b *Mpflt) {$/;"	f
mpnegfix	./cmd/compile/internal/gc/mparith2.go	/^func mpnegfix(a *Mpint) {$/;"	f
mpnegflt	./cmd/compile/internal/gc/mparith3.go	/^func mpnegflt(a *Mpflt) {$/;"	f
mporfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mporfixfix(a, b *Mpint) {$/;"	f
mpreinit	./runtime/os1_darwin.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_dragonfly.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_freebsd.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_linux.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_nacl.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_netbsd.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_openbsd.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_plan9.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os1_windows.go	/^func mpreinit(mp *m) {$/;"	f
mpreinit	./runtime/os3_solaris.go	/^func mpreinit(mp *m) {$/;"	f
mprof_GC	./runtime/mprof.go	/^func mprof_GC() {$/;"	f
mprshfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mprshfixfix(a, b *Mpint) {$/;"	f
mpsetovf	./cmd/compile/internal/gc/mparith2.go	/^func mpsetovf(a *Mpint) {$/;"	f
mpsubfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpsubfixfix(a, b *Mpint) {$/;"	f
mpsubfltflt	./cmd/compile/internal/gc/mparith3.go	/^func mpsubfltflt(a *Mpflt, b *Mpflt) {$/;"	f
mptestovf	./cmd/compile/internal/gc/mparith2.go	/^func mptestovf(a *Mpint, extra int) bool {$/;"	f
mput	./runtime/proc1.go	/^func mput(mp *m) {$/;"	f
mpxorfixfix	./cmd/compile/internal/gc/mparith2.go	/^func mpxorfixfix(a, b *Mpint) {$/;"	f
mpzero	./cmd/compile/internal/gc/walk.go	/^var mpzero Mpint$/;"	v
mr	./io/multi_test.go	/^	var mr Reader$/;"	v
ms	./cmd/link/internal/ld/macho.go	/^	var ms *MachoSeg$/;"	v
ms1	./runtime/debug/garbage_test.go	/^	var ms1, ms2 runtime.MemStats$/;"	v
msDosTimeToTime	./archive/zip/struct.go	/^func msDosTimeToTime(dosDate, dosTime uint16) time.Time {$/;"	f
msb32	./cmd/compile/internal/big/float.go	/^func msb32(x nat) uint32 {$/;"	f
msb32	./math/big/float.go	/^func msb32(x nat) uint32 {$/;"	f
msb64	./cmd/compile/internal/big/float.go	/^func msb64(x nat) uint64 {$/;"	f
msb64	./math/big/float.go	/^func msb64(x nat) uint64 {$/;"	f
mscratch	./runtime/runtime2.go	/^type mscratch struct {$/;"	t
msdosModeToFileMode	./archive/zip/struct.go	/^func msdosModeToFileMode(m uint32) (mode os.FileMode) {$/;"	f
msect	./cmd/link/internal/ld/macho.go	/^	var msect *MachoSect$/;"	v
mset	./go/types/decl.go	/^	var mset objset$/;"	v
mset	./go/types/methodset.go	/^		var mset methodSet$/;"	v
mset	./go/types/type.go	/^	var mset objset$/;"	v
msg	./cmd/compile/internal/gc/plive.go	/^	var msg []string$/;"	v
msg	./cmd/vet/shift.go	/^	var msg string$/;"	v
msg	./crypto/ecdsa/ecdsa_test.go	/^	var msg []byte$/;"	v
msg	./flag/flag.go	/^		var msg string$/;"	v
msg	./go/types/expr.go	/^		var msg string$/;"	v
msg	./go/types/expr.go	/^	var msg string$/;"	v
msg	./go/types/labels.go	/^		var msg string$/;"	v
msg	./go/types/stmt.go	/^		var msg string$/;"	v
msg	./go/types/stmt.go	/^	var msg string$/;"	v
msg	./net/smtp/smtp.go	/^		var msg []byte$/;"	v
msg	./runtime/race/testdata/chan_test.go	/^	type msg struct {$/;"	t
msg	./syscall/srpc_nacl.go	/^type msg struct {$/;"	t
msg	./syscall/syscall_bsd.go	/^	var msg Msghdr$/;"	v
msg	./syscall/syscall_linux.go	/^	var msg Msghdr$/;"	v
msg	./syscall/syscall_solaris.go	/^	var msg Msghdr$/;"	v
msgHdr	./syscall/srpc_nacl.go	/^type msgHdr struct {$/;"	t
msgReceiver	./syscall/srpc_nacl.go	/^type msgReceiver struct {$/;"	t
msgSender	./syscall/srpc_nacl.go	/^type msgSender struct {$/;"	t
msgq	./syscall/net_nacl.go	/^type msgq struct {$/;"	t
msgs	./syscall/netlink_linux.go	/^	var msgs []NetlinkMessage$/;"	v
msgs	./syscall/sockcmsg_unix.go	/^	var msgs []SocketControlMessage$/;"	v
msigsave	./runtime/os1_darwin.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_dragonfly.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_freebsd.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_linux.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_nacl.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_netbsd.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_openbsd.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_plan9.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os1_windows.go	/^func msigsave(mp *m) {$/;"	f
msigsave	./runtime/os3_solaris.go	/^func msigsave(mp *m) {$/;"	f
mspan	./runtime/mheap.go	/^type mspan struct {$/;"	t
mspinning	./runtime/proc1.go	/^func mspinning() {$/;"	f
mstart	./runtime/proc1.go	/^func mstart() {$/;"	f
mstart1	./runtime/proc1.go	/^func mstart1() {$/;"	f
mstart_nacl	./runtime/os1_nacl.go	/^func mstart_nacl()$/;"	f
mstates	./cmd/yacc/yacc.go	/^var mstates = make([]int, NSTATES) \/\/ chain of overflows of term\/nonterm generation lists$/;"	v
mstats	./runtime/debug/garbage_test.go	/^	var mstats runtime.MemStats$/;"	v
mstats	./runtime/mstats.go	/^type mstats struct {$/;"	t
mt	./runtime/chan_test.go	/^	type mt struct{}$/;"	t
mtime	./cmd/dist/util.go	/^func mtime(p string) time.Time {$/;"	f
mtime	./syscall/fs_nacl.go	/^func (fs *fsys) mtime(ip *inode) {$/;"	f
mtimeTick	./cmd/go/go_test.go	/^var mtimeTick time.Duration$/;"	v
mts	./runtime/runtime2.go	/^type mts struct {$/;"	t
mtype	./cmd/compile/internal/gc/subr.go	/^		var mtype int$/;"	v
mu	./cmd/vet/testdata/copylock_range.go	/^	for _, mu = range m { \/\/ ERROR "range var mu copies Lock: sync.Mutex"$/;"	v
mu	./cmd/vet/testdata/copylock_range.go	/^	for _, mu = range s { \/\/ ERROR "range var mu copies Lock: sync.Mutex"$/;"	v
mu	./cmd/vet/testdata/copylock_range.go	/^	for i, mu = range s { \/\/ ERROR "range var mu copies Lock: sync.Mutex"$/;"	v
mu	./cmd/vet/testdata/copylock_range.go	/^	for mu = range c { \/\/ ERROR "range var mu copies Lock: sync.Mutex"$/;"	v
mu	./cmd/vet/testdata/copylock_range.go	/^	for mu, _ = range m { \/\/ ERROR "range var mu copies Lock: sync.Mutex"$/;"	v
mu	./cmd/vet/testdata/copylock_range.go	/^	var mu sync.Mutex$/;"	v
mu	./net/dial_test.go	/^	var mu sync.Mutex$/;"	v
mu	./net/fd_mutex_test.go	/^	var mu fdMutex$/;"	v
mu	./net/http/serve_test.go	/^	var mu sync.Mutex \/\/ guard stateLog and connID$/;"	v
mu	./net/http/transport_test.go	/^	var mu sync.Mutex \/\/ guards following$/;"	v
mu	./net/http/transport_test.go	/^	var mu sync.Mutex$/;"	v
mu	./runtime/pprof/pprof_test.go	/^	var mu sync.Mutex$/;"	v
mu	./runtime/race/testdata/mop_test.go	/^	var mu sync.Mutex$/;"	v
mu	./runtime/race/testdata/mutex_test.go	/^	var mu sync.Mutex$/;"	v
mu	./runtime/race/testdata/rwmutex_test.go	/^	var mu sync.RWMutex$/;"	v
mu	./runtime/race/testdata/sync_test.go	/^	var mu sync.Mutex$/;"	v
mu	./runtime/trace/trace_stack_test.go	/^	var mu sync.Mutex$/;"	v
mu	./sync/atomic/value_test.go	/^	var mu sync.Mutex \/\/ used only by writers$/;"	v
mu	./sync/mutex_test.go	/^		var mu PaddedMutex$/;"	v
mu	./sync/mutex_test.go	/^	var mu Mutex$/;"	v
mu	./sync/rwmutex_test.go	/^	var mu RWMutex$/;"	v
mu1	./runtime/race/testdata/mutex_test.go	/^	var mu1 sync.Mutex$/;"	v
mu1	./runtime/race/testdata/rwmutex_test.go	/^	var mu1 sync.Mutex$/;"	v
mu2	./runtime/race/testdata/mutex_test.go	/^	var mu2 sync.Mutex$/;"	v
mu2	./runtime/race/testdata/rwmutex_test.go	/^	var mu2 sync.RWMutex$/;"	v
muintptr	./runtime/runtime2.go	/^type muintptr uintptr$/;"	t
mul	./cmd/compile/internal/big/bits_test.go	/^func (x Bits) mul(y Bits) Bits {$/;"	f
mul	./cmd/compile/internal/big/hilbert_test.go	/^func (a *matrix) mul(b *matrix) *matrix {$/;"	f
mul	./cmd/compile/internal/big/nat.go	/^func (z nat) mul(x, y nat) nat {$/;"	f
mul	./cmd/compile/internal/gc/subr.go	/^		var mul int64$/;"	v
mul	./crypto/aes/aes_test.go	/^func mul(b, c uint32) uint32 {$/;"	f
mul	./crypto/cipher/gcm.go	/^func (g *gcm) mul(y *gcmFieldElement) {$/;"	f
mul	./math/big/bits_test.go	/^func (x Bits) mul(y Bits) Bits {$/;"	f
mul	./math/big/hilbert_test.go	/^func (a *matrix) mul(b *matrix) *matrix {$/;"	f
mul	./math/big/nat.go	/^func (z nat) mul(x, y nat) nat {$/;"	f
mul	./runtime/softfloat64_test.go	/^func mul(x, y float64) float64 { return x * y }$/;"	f
mulAddVWW	./cmd/compile/internal/big/arith_decl.go	/^func mulAddVWW(z, x []Word, y, r Word) (c Word) {$/;"	f
mulAddVWW	./math/big/arith_decl.go	/^func mulAddVWW(z, x []Word, y, r Word) (c Word)$/;"	f
mulAddVWW	./math/big/arith_decl_pure.go	/^func mulAddVWW(z, x []Word, y, r Word) (c Word) {$/;"	f
mulAddVWW_g	./cmd/compile/internal/big/arith.go	/^func mulAddVWW_g(z, x []Word, y, r Word) (c Word) {$/;"	f
mulAddVWW_g	./math/big/arith.go	/^func mulAddVWW_g(z, x []Word, y, r Word) (c Word) {$/;"	f
mulAddWW	./cmd/compile/internal/big/nat.go	/^func (z nat) mulAddWW(x nat, y, r Word) nat {$/;"	f
mulAddWW	./math/big/nat.go	/^func (z nat) mulAddWW(x nat, y, r Word) nat {$/;"	f
mulAddWWWTests	./cmd/compile/internal/big/arith_test.go	/^var mulAddWWWTests = []struct {$/;"	v
mulAddWWWTests	./math/big/arith_test.go	/^var mulAddWWWTests = []struct {$/;"	v
mulAddWWW_g	./cmd/compile/internal/big/arith.go	/^func mulAddWWW_g(x, y, c Word) (z1, z0 Word) {$/;"	f
mulAddWWW_g	./math/big/arith.go	/^func mulAddWWW_g(x, y, c Word) (z1, z0 Word) {$/;"	f
mulBytes	./cmd/compile/internal/big/int_test.go	/^func mulBytes(x, y []byte) []byte {$/;"	f
mulBytes	./math/big/int_test.go	/^func mulBytes(x, y []byte) []byte {$/;"	f
mulDenom	./cmd/compile/internal/big/rat.go	/^func mulDenom(z, x, y nat) nat {$/;"	f
mulDenom	./math/big/rat.go	/^func mulDenom(z, x, y nat) nat {$/;"	f
mulRange	./cmd/compile/internal/big/nat.go	/^func (z nat) mulRange(a, b uint64) nat {$/;"	f
mulRange	./go/types/hilbert_test.go	/^func (g *gen) mulRange(a, b int) {$/;"	f
mulRange	./math/big/nat.go	/^func (z nat) mulRange(a, b uint64) nat {$/;"	f
mulRangesN	./cmd/compile/internal/big/nat_test.go	/^var mulRangesN = []struct {$/;"	v
mulRangesN	./math/big/nat_test.go	/^var mulRangesN = []struct {$/;"	v
mulRangesZ	./cmd/compile/internal/big/int_test.go	/^var mulRangesZ = []struct {$/;"	v
mulRangesZ	./math/big/int_test.go	/^var mulRangesZ = []struct {$/;"	v
mulWW	./cmd/compile/internal/big/arith_decl.go	/^func mulWW(x, y Word) (z1, z0 Word) {$/;"	f
mulWW	./math/big/arith_decl.go	/^func mulWW(x, y Word) (z1, z0 Word)$/;"	f
mulWW	./math/big/arith_decl_pure.go	/^func mulWW(x, y Word) (z1, z0 Word) {$/;"	f
mulWWTests	./cmd/compile/internal/big/arith_test.go	/^var mulWWTests = []struct {$/;"	v
mulWWTests	./math/big/arith_test.go	/^var mulWWTests = []struct {$/;"	v
mulWW_g	./cmd/compile/internal/big/arith.go	/^func mulWW_g(x, y Word) (z1, z0 Word) {$/;"	f
mulWW_g	./math/big/arith.go	/^func mulWW_g(x, y Word) (z1, z0 Word) {$/;"	f
mullu	./runtime/softfloat64.go	/^func mullu(u, v uint64) (lo, hi uint64) {$/;"	f
multi	./cmd/vet/testdata/print.go	/^func multi() []interface{} {$/;"	f
multiExecTests	./text/template/multi_test.go	/^var multiExecTests = []execTest{$/;"	v
multiParseTest	./text/template/multi_test.go	/^type multiParseTest struct {$/;"	t
multiParseTests	./text/template/multi_test.go	/^var multiParseTests = []multiParseTest{$/;"	v
multiReader	./io/multi.go	/^type multiReader struct {$/;"	t
multiSorter	./sort/example_multi_test.go	/^type multiSorter struct {$/;"	t
multiTests	./fmt/scan_test.go	/^var multiTests = []ScanfMultiTest{$/;"	v
multiWriter	./io/multi.go	/^type multiWriter struct {$/;"	t
multicastRIBContains	./net/listen_test.go	/^func multicastRIBContains(ip IP) (bool, error) {$/;"	f
multipartByReader	./net/http/request.go	/^var multipartByReader = &multipart.Form{$/;"	v
multipartReader	./net/http/request.go	/^func (r *Request) multipartReader() (*multipart.Reader, error) {$/;"	f
multiple	./encoding/gob/type_test.go	/^\/\/ Should be OK to register the same type multiple times, as long as they're$/;"	t
multipleDefaults	./go/types/stmt.go	/^func (check *Checker) multipleDefaults(list []ast.Stmt) {$/;"	f
munmap	./runtime/os1_nacl.go	/^func munmap(addr unsafe.Pointer, n uintptr)               {}$/;"	f
munmap	./runtime/os3_solaris.go	/^func munmap(addr unsafe.Pointer, n uintptr) {$/;"	f
munmap	./runtime/stubs2.go	/^func munmap(addr unsafe.Pointer, n uintptr)$/;"	f
munmap	./syscall/zsyscall_darwin_386.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_darwin_amd64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_darwin_arm.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_darwin_arm64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_dragonfly_amd64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_freebsd_386.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_freebsd_amd64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_freebsd_arm.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_linux_386.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_linux_amd64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_linux_arm.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_linux_arm64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_linux_ppc64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_linux_ppc64le.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_netbsd_386.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_netbsd_amd64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_netbsd_arm.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_openbsd_386.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_openbsd_amd64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_openbsd_arm.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
munmap	./syscall/zsyscall_solaris_amd64.go	/^func munmap(addr uintptr, length uintptr) (err error) {$/;"	f
must	./cmd/compile/internal/gc/subr.go	/^		\/\/ standard algorithm, so the element type must not be$/;"	t
must	./cmd/compile/internal/gc/subr.go	/^		\/\/ standard memequal, so the element type must not be$/;"	t
must	./cmd/compile/internal/gc/subr.go	/^\/\/ Any cyclic type must go through a named type, and if one is$/;"	t
must	./cmd/compile/internal/gc/syntax.go	/^	Norace         bool \/\/ func must not have race detector annotations$/;"	f
must	./cmd/compile/internal/gc/typecheck.go	/^		\/\/ Also, the underlying type must be a struct, map, slice, or array.$/;"	t
must	./cmd/go/go_test.go	/^func (tg *testgoData) must(err error) {$/;"	f
must	./cmd/vet/types.go	/^	\/\/ The type must be a signature, but be sure for safety.$/;"	t
must	./encoding/gob/decode.go	/^	\/\/ The concrete type must be registered.$/;"	t
must	./encoding/json/encode.go	/^\/\/ The map's key type must be string; the map keys are used as JSON object$/;"	t
must	./go/ast/filter.go	/^		\/\/ the receiver type must be a type name$/;"	t
must	./go/format/format.go	/^\/\/ The node type must be *ast.File, *printer.CommentedNode, []ast.Decl,$/;"	t
must	./go/printer/printer.go	/^\/\/ The node type must be *ast.File, *CommentedNode, []ast.Decl, []ast.Stmt,$/;"	t
must	./go/printer/testdata/parser.go	/^	\/\/ recv type must be of the form ["*"] identifier$/;"	t
must	./go/types/builtins.go	/^			check.invalidArg(arg0.Pos(), "cannot make %s; type must be slice, map, or channel", arg0)$/;"	t
must	./go/types/expr.go	/^	\/\/ If x is the lhs of a shift, its final type must be integer.$/;"	t
must	./go/types/expr.go	/^and assigns it it's final type, that type must be an integer type, and a$/;"	t
must	./go/types/ordering.go	/^					\/\/ Embedded interface: The type must be a (possibly$/;"	t
must	./go/types/type.go	/^		panic("types.Named.SetUnderlying: underlying type must not be *Named")$/;"	t
must	./go/types/type.go	/^		panic("types.Named.SetUnderlying: underlying type must not be nil")$/;"	t
must	./go/types/type.go	/^		panic("types.NewNamed: underlying type must not be *Named")$/;"	t
must	./go/types/type.go	/^\/\/ The underlying type must not be a *Named.$/;"	t
must	./go/types/typexpr.go	/^				\/\/ spec: "An embedded type must be specified as a type name$/;"	t
must	./go/types/typexpr.go	/^		\/\/ for operands of the key type; thus the key type must not be a$/;"	t
must	./go/types/typexpr.go	/^		\/\/ spec: "The receiver type must be of the form T or *T where T is a type name."$/;"	t
must	./net/rpc/server.go	/^		\/\/ Reply type must be exported.$/;"	t
must	./reflect/type.go	/^		panic("reflect.FuncOf: last arg of variadic func must be slice")$/;"	f
must	./reflect/type.go	/^\/\/ a nil *rtype must be replaced by a nil Type, but in gccgo this$/;"	t
mustBe	./reflect/value.go	/^func (f flag) mustBe(expected Kind) {$/;"	f
mustBeAssignable	./reflect/value.go	/^func (f flag) mustBeAssignable() {$/;"	f
mustBeExported	./reflect/value.go	/^func (f flag) mustBeExported() {$/;"	f
mustBeNil	./testing/cover.go	/^func mustBeNil(err error) {$/;"	f
mustCIDR	./net/addrselect.go	/^func mustCIDR(s string) *IPNet {$/;"	f
mustEnv	./cmd/dist/test.go	/^func mustEnv(k string) string {$/;"	f
mustFind	./cmd/link/internal/ld/dwarf.go	/^func mustFind(die *DWDie, name string) *DWDie {$/;"	f
mustFind	./syscall/dll_windows.go	/^func (p *LazyProc) mustFind() {$/;"	f
mustGet	./net/http/serve_test.go	/^func mustGet(t *testing.T, url string, headers ...string) {$/;"	f
mustGetTypeInfo	./encoding/gob/type.go	/^func mustGetTypeInfo(rt reflect.Type) *typeInfo {$/;"	f
mustLoad	./syscall/dll_windows.go	/^func (d *LazyDLL) mustLoad() {$/;"	f
mustNewRequest	./net/http/httputil/dump_test.go	/^func mustNewRequest(method, url string, body io.Reader) *http.Request {$/;"	f
mustNotExist	./cmd/go/go_test.go	/^func (tg *testgoData) mustNotExist(path string) {$/;"	f
mustPanic	./crypto/aes/aes_test.go	/^func mustPanic(t *testing.T, msg string, f func()) {$/;"	f
mustPanic	./crypto/cipher/cipher_test.go	/^func mustPanic(t *testing.T, msg string, f func()) {$/;"	f
mustParseURL	./net/http/cookiejar/jar_test.go	/^func mustParseURL(s string) *url.URL {$/;"	f
mustParseURL	./net/http/httputil/dump_test.go	/^func mustParseURL(s string) *url.URL {$/;"	f
mustParseURL	./net/http/requestwrite_test.go	/^func mustParseURL(s string) *url.URL {$/;"	f
mustReadRune	./fmt/scan.go	/^func (s *ss) mustReadRune() (r rune) {$/;"	f
mustRemoveAll	./net/http/fs_test.go	/^func mustRemoveAll(dir string) {$/;"	f
mustStat	./net/http/fs_test.go	/^func mustStat(t *testing.T, fileName string) os.FileInfo {$/;"	f
mustTypecheck	./go/types/api_test.go	/^func mustTypecheck(t *testing.T, path, source string, info *Info) string {$/;"	f
mustgetc	./encoding/xml/xml.go	/^func (d *Decoder) mustgetc() (b byte, ok bool) {$/;"	f
mutex	./runtime/race/testdata/atomic_test.go	/^	var mutex sync.Mutex$/;"	v
mutex	./runtime/race/testdata/sync_test.go	/^	var mutex sync.Mutex$/;"	v
mutex	./runtime/runtime2.go	/^type mutex struct {$/;"	t
mutexBit	./net/fd_mutex.go	/^	var mutexBit, mutexWait, mutexMask uint64$/;"	v
mutexSema	./net/fd_mutex.go	/^	var mutexSema *uint32$/;"	v
mutualCipherSuite	./crypto/tls/cipher_suites.go	/^func mutualCipherSuite(have []uint16, want uint16) *cipherSuite {$/;"	f
mutualProtocol	./crypto/tls/handshake_client.go	/^func mutualProtocol(protos, preferenceProtos []string) (string, bool) {$/;"	f
mutualVersion	./crypto/tls/common.go	/^func (c *Config) mutualVersion(vers uint16) (uint16, bool) {$/;"	f
muxEntry	./net/http/server.go	/^type muxEntry struct {$/;"	t
mxString	./net/lookup_test.go	/^func mxString(mxs []*MX) string {$/;"	f
myError	./runtime/chanbarrier_test.go	/^type myError struct {$/;"	t
myError	./text/template/exec_test.go	/^var myError = errors.New("my error")$/;"	v
myHeap	./container/heap/heap_test.go	/^type myHeap []int$/;"	t
myInt	./cmd/api/testdata/src/pkg/p1/p1.go	/^type myInt int$/;"	t
myPipe	./net/rpc/jsonrpc/all_test.go	/^func myPipe() (*pipe, *pipe) {$/;"	f
myStringReader	./fmt/scan_test.go	/^type myStringReader struct {$/;"	t
myStruct	./testing/quick/quick_test.go	/^type myStruct struct {$/;"	t
myStructProperty	./testing/quick/quick_test.go	/^func myStructProperty(in myStruct) bool { return in.x == 42 }$/;"	f
my_enum	./debug/dwarf/testdata/typedef.c	/^typedef enum my_enum {$/;"	g	file:
my_struct	./debug/dwarf/testdata/typedef.c	/^typedef struct my_struct {$/;"	s	file:
my_struct1	./debug/dwarf/testdata/typedef.c	/^typedef struct my_struct1 {$/;"	s	file:
my_union	./debug/dwarf/testdata/typedef.c	/^typedef union my_union {$/;"	u	file:
myatof32	./strconv/fp_test.go	/^func myatof32(s string) (f float32, ok bool) {$/;"	f
myatof64	./strconv/fp_test.go	/^func myatof64(s string) (f float64, ok bool) {$/;"	f
mybool	./go/types/api_test.go	/^		\/\/ {`package p2; type mybool bool; var m map[string]complex128; var b mybool; func _() { _, b = m["foo"] }`,$/;"	t
myimportpath	./cmd/compile/internal/gc/go.go	/^var myimportpath string$/;"	v
mywhatsys	./cmd/link/internal/ld/lib.go	/^func mywhatsys() {$/;"	f
n0	./net/http/internal/chunked.go	/^		var n0 int$/;"	v
n1	./cmd/compile/internal/amd64/ggen.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/amd64/ggen.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/amd64/gsubr.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm/cgen.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm/cgen64.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm/ggen.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm/ggen.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm/gsubr.go	/^				var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm/gsubr.go	/^			var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm/gsubr.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm64/ggen.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm64/ggen.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/arm64/gsubr.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/gc/cgen.go	/^					var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/cgen.go	/^				var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/cgen.go	/^			var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/cgen.go	/^			var n1, n2 Node$/;"	v
n1	./cmd/compile/internal/gc/cgen.go	/^		var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/cgen.go	/^	var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/cgen.go	/^	var n1, n2 Node$/;"	v
n1	./cmd/compile/internal/gc/cplx.go	/^			var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/cplx.go	/^		var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/cplx.go	/^	var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/sinit.go	/^	var n1 Node$/;"	v
n1	./cmd/compile/internal/gc/typecheck.go	/^	var n1 int$/;"	v
n1	./cmd/compile/internal/gc/walk.go	/^		var n1 *Node$/;"	v
n1	./cmd/compile/internal/ppc64/ggen.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/ppc64/ggen.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/ppc64/gsubr.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/x86/ggen.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/x86/ggen.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/x86/gsubr.go	/^				var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/x86/gsubr.go	/^			var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/x86/gsubr.go	/^		var n1 gc.Node$/;"	v
n1	./cmd/compile/internal/x86/gsubr.go	/^	var n1 gc.Node$/;"	v
n1	./cmd/pprof/internal/profile/legacy_profile.go	/^	var n1, n2, n3, n4, n5 uint64$/;"	v
n1b	./cmd/compile/internal/amd64/ggen.go	/^	var n1b gc.Node$/;"	v
n2	./cmd/compile/internal/amd64/ggen.go	/^	var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/arm/cgen.go	/^	var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/arm/ggen.go	/^			var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/arm/ggen.go	/^	var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/arm64/ggen.go	/^	var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/gc/cgen.go	/^						var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/cgen.go	/^				var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/cgen.go	/^			var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/cgen.go	/^		var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/cgen.go	/^	var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/cplx.go	/^			var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/cplx.go	/^		var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/cplx.go	/^	var n2 Node$/;"	v
n2	./cmd/compile/internal/gc/typecheck.go	/^	var n2 int$/;"	v
n2	./cmd/compile/internal/ppc64/ggen.go	/^	var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/x86/ggen.go	/^		var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/x86/ggen.go	/^	var n2 gc.Node$/;"	v
n2	./cmd/compile/internal/x86/gsubr.go	/^	var n2 gc.Node$/;"	v
n2b	./cmd/compile/internal/amd64/ggen.go	/^	var n2b gc.Node$/;"	v
n3	./cmd/compile/internal/amd64/ggen.go	/^			var n3 gc.Node$/;"	v
n3	./cmd/compile/internal/amd64/ggen.go	/^	var n3 gc.Node$/;"	v
n3	./cmd/compile/internal/arm/ggen.go	/^	var n3 gc.Node$/;"	v
n3	./cmd/compile/internal/arm64/ggen.go	/^			var n3 gc.Node$/;"	v
n3	./cmd/compile/internal/arm64/ggen.go	/^	var n3 gc.Node$/;"	v
n3	./cmd/compile/internal/gc/cgen.go	/^			var n3 Node$/;"	v
n3	./cmd/compile/internal/gc/cgen.go	/^		var n3 Node$/;"	v
n3	./cmd/compile/internal/gc/cplx.go	/^		var n3 Node$/;"	v
n3	./cmd/compile/internal/gc/cplx.go	/^	var n3 Node$/;"	v
n3	./cmd/compile/internal/ppc64/ggen.go	/^			var n3 gc.Node$/;"	v
n3	./cmd/compile/internal/ppc64/ggen.go	/^	var n3 gc.Node$/;"	v
n3	./cmd/compile/internal/x86/ggen.go	/^			var n3 gc.Node$/;"	v
n32	./debug/macho/file.go	/^			var n32 Nlist32$/;"	v
n4	./cmd/compile/internal/amd64/ggen.go	/^		var n4 gc.Node$/;"	v
n4	./cmd/compile/internal/amd64/ggen.go	/^	var n4 gc.Node$/;"	v
n4	./cmd/compile/internal/arm64/ggen.go	/^		var n4 gc.Node$/;"	v
n4	./cmd/compile/internal/gc/cgen.go	/^			var n4 Node$/;"	v
n4	./cmd/compile/internal/gc/cplx.go	/^		var n4 Node$/;"	v
n4	./cmd/compile/internal/gc/cplx.go	/^	var n4 Node$/;"	v
n4	./cmd/compile/internal/ppc64/ggen.go	/^		var n4 gc.Node$/;"	v
n4	./cmd/compile/internal/x86/ggen.go	/^	var n4 gc.Node$/;"	v
n5	./cmd/compile/internal/amd64/ggen.go	/^		var n5 gc.Node$/;"	v
n5	./cmd/compile/internal/arm64/ggen.go	/^		var n5 gc.Node$/;"	v
n5	./cmd/compile/internal/gc/cplx.go	/^	var n5 Node$/;"	v
n5	./cmd/compile/internal/ppc64/ggen.go	/^		var n5 gc.Node$/;"	v
n6	./cmd/compile/internal/gc/cplx.go	/^	var n6 Node$/;"	v
nBits	./image/jpeg/writer.go	/^	var nBits uint32$/;"	v
nCodes	./image/jpeg/huffman.go	/^		var nCodes [maxCodeLength]int32$/;"	v
nErr	./bytes/reader_test.go	/^	type nErr struct {$/;"	t
nIsInfinityMask	./crypto/elliptic/p256.go	/^	var nIsInfinityMask, index, pIsNoninfiniteMask, mask uint32$/;"	v
nPix	./image/gif/reader.go	/^	var nPix []uint8$/;"	v
nSuccess	./net/http/transport_test.go	/^	var nSuccess = 0$/;"	v
nSwitchLabel	./cmd/compile/internal/gc/swt.go	/^var nSwitchLabel int$/;"	v
nUpper	./time/format.go	/^	var nUpper int$/;"	v
na	./cmd/compile/internal/gc/subr.go	/^		var na *Node$/;"	v
naclClose	./syscall/zsyscall_nacl_386.go	/^func naclClose(fd int) (err error) {$/;"	f
naclClose	./syscall/zsyscall_nacl_amd64p32.go	/^func naclClose(fd int) (err error) {$/;"	f
naclClose	./syscall/zsyscall_nacl_arm.go	/^func naclClose(fd int) (err error) {$/;"	f
naclFile	./syscall/fd_nacl.go	/^type naclFile struct {$/;"	t
naclFstat	./syscall/zsyscall_nacl_386.go	/^func naclFstat(fd int, stat *Stat_t) (err error) {$/;"	f
naclFstat	./syscall/zsyscall_nacl_amd64p32.go	/^func naclFstat(fd int, stat *Stat_t) (err error) {$/;"	f
naclFstat	./syscall/zsyscall_nacl_arm.go	/^func naclFstat(fd int, stat *Stat_t) (err error) {$/;"	f
naclGetRandomBytes	./syscall/zsyscall_nacl_386.go	/^func naclGetRandomBytes(b []byte) (err error) {$/;"	f
naclGetRandomBytes	./syscall/zsyscall_nacl_amd64p32.go	/^func naclGetRandomBytes(b []byte) (err error) {$/;"	f
naclGetRandomBytes	./syscall/zsyscall_nacl_arm.go	/^func naclGetRandomBytes(b []byte) (err error) {$/;"	f
naclRead	./syscall/zsyscall_nacl_386.go	/^func naclRead(fd int, b []byte) (n int, err error) {$/;"	f
naclRead	./syscall/zsyscall_nacl_amd64p32.go	/^func naclRead(fd int, b []byte) (n int, err error) {$/;"	f
naclRead	./syscall/zsyscall_nacl_arm.go	/^func naclRead(fd int, b []byte) (n int, err error) {$/;"	f
naclSeek	./syscall/zsyscall_nacl_386.go	/^func naclSeek(fd int, off *int64, whence int) (err error) {$/;"	f
naclSeek	./syscall/zsyscall_nacl_amd64p32.go	/^func naclSeek(fd int, off *int64, whence int) (err error) {$/;"	f
naclSeek	./syscall/zsyscall_nacl_arm.go	/^func naclSeek(fd int, off *int64, whence int) (err error) {$/;"	f
naclWrite	./syscall/fd_nacl.go	/^func naclWrite(fd int, b []byte) int$/;"	f
nacl_cond_broadcast	./runtime/os_nacl.go	/^func nacl_cond_broadcast(cond int32) int32$/;"	f
nacl_cond_create	./runtime/os_nacl.go	/^func nacl_cond_create(flag int32) int32$/;"	f
nacl_cond_signal	./runtime/os_nacl.go	/^func nacl_cond_signal(cond int32) int32$/;"	f
nacl_cond_timed_wait_abs	./runtime/os_nacl.go	/^func nacl_cond_timed_wait_abs(cond, lock int32, ts *timespec) int32$/;"	f
nacl_cond_wait	./runtime/os_nacl.go	/^func nacl_cond_wait(cond, n int32) int32$/;"	f
nacl_exception_handler	./runtime/os_nacl.go	/^func nacl_exception_handler(fn uintptr, arg unsafe.Pointer) int32$/;"	f
nacl_exception_stack	./runtime/os_nacl.go	/^func nacl_exception_stack(p uintptr, size int32) int32$/;"	f
nacl_mutex_create	./runtime/os_nacl.go	/^func nacl_mutex_create(flag int32) int32$/;"	f
nacl_mutex_lock	./runtime/os_nacl.go	/^func nacl_mutex_lock(mutex int32) int32$/;"	f
nacl_mutex_trylock	./runtime/os_nacl.go	/^func nacl_mutex_trylock(mutex int32) int32$/;"	f
nacl_mutex_unlock	./runtime/os_nacl.go	/^func nacl_mutex_unlock(mutex int32) int32$/;"	f
nacl_nanosleep	./runtime/os_nacl.go	/^func nacl_nanosleep(ts, extra *timespec) int32$/;"	f
nacl_sem_create	./runtime/os_nacl.go	/^func nacl_sem_create(flag int32) int32$/;"	f
nacl_sem_post	./runtime/os_nacl.go	/^func nacl_sem_post(sem int32) int32$/;"	f
nacl_sem_wait	./runtime/os_nacl.go	/^func nacl_sem_wait(sem int32) int32$/;"	f
nacl_thread_create	./runtime/os_nacl.go	/^func nacl_thread_create(fn uintptr, stk, tls, xx unsafe.Pointer) int32$/;"	f
nacladdr	./cmd/internal/obj/x86/obj6.go	/^func nacladdr(ctxt *obj.Link, p *obj.Prog, a *obj.Addr) {$/;"	f
naclbpfix	./cmd/internal/obj/x86/asm6.go	/^var naclbpfix = []uint8{0x4c, 0x01, 0xfd} \/\/ ADDQ R15, BP$/;"	v
naclmovs	./cmd/internal/obj/x86/asm6.go	/^var naclmovs = []uint8{$/;"	v
naclpad	./cmd/internal/obj/x86/asm6.go	/^func naclpad(ctxt *obj.Link, s *obj.LSym, c int32, pad int32) int32 {$/;"	f
naclpad	./reflect/all_test.go	/^func naclpad() []byte {$/;"	f
naclret	./cmd/internal/obj/x86/asm6.go	/^var naclret = []uint8{$/;"	v
naclret8	./cmd/internal/obj/x86/asm6.go	/^var naclret8 = []uint8{$/;"	v
naclspfix	./cmd/internal/obj/x86/asm6.go	/^var naclspfix = []uint8{0x4c, 0x01, 0xfc} \/\/ ADDQ R15, SP$/;"	v
naclstos	./cmd/internal/obj/x86/asm6.go	/^var naclstos = []uint8{$/;"	v
nacltrunc	./cmd/internal/obj/x86/asm6.go	/^func nacltrunc(ctxt *obj.Link, reg int) {$/;"	f
nadj	./math/lgamma.go	/^	var nadj float64$/;"	v
nam	./cmd/compile/internal/gc/pgen.go	/^	var nam *Node$/;"	v
nam	./cmd/compile/internal/gc/sinit.go	/^		var nam Node$/;"	v
nam	./cmd/compile/internal/gc/sinit.go	/^	var nam Node$/;"	v
name	./cmd/cgo/gcc.go	/^			\/\/ Substitute definition for mangled type name.$/;"	t
name	./cmd/cgo/gcc.go	/^		\/\/ If this is a struct, union, or enum type name, no need to guess the kind.$/;"	t
name	./cmd/compile/internal/gc/closure.go	/^			var name *Sym$/;"	v
name	./cmd/compile/internal/gc/closure.go	/^	var name *Node$/;"	v
name	./cmd/compile/internal/gc/fmt.go	/^		var name string$/;"	v
name	./cmd/compile/internal/gc/go.y	/^name:$/;"	l
name	./cmd/compile/internal/gc/obj.go	/^	var name string$/;"	v
name	./cmd/compile/internal/gc/reflect.go	/^	\/\/ %-T is the complete, unambiguous type name.$/;"	t
name	./cmd/compile/internal/gc/subr.go	/^		v.U = rcvr.Type.Sym.Name \/\/ type name$/;"	t
name	./cmd/compile/internal/gc/subr.go	/^	\/\/ need a type name$/;"	t
name	./cmd/compile/internal/gc/swt.go	/^	var name *Node$/;"	v
name	./cmd/compile/internal/gc/syntax.go	/^	ONAME    \/\/ var, const or func name$/;"	f
name	./cmd/compile/internal/gc/syntax.go	/^	OTYPE    \/\/ type name$/;"	t
name	./cmd/internal/obj/objfile.go	/^		var name string$/;"	v
name	./cmd/internal/obj/pass.go	/^	var name string$/;"	v
name	./cmd/link/internal/ld/dwarf.go	/^		Diag("dwarf: type name doesn't start with \\".type\\": %s", gotype.Name)$/;"	t
name	./cmd/link/internal/ld/elf.go	/^	var name string$/;"	v
name	./cmd/link/internal/ld/go.go	/^	var name string$/;"	v
name	./cmd/link/internal/ld/ldelf.go	/^	var name string$/;"	v
name	./cmd/link/internal/ld/ldmacho.go	/^	var name string$/;"	v
name	./cmd/link/internal/ld/ldpe.go	/^	var name string$/;"	v
name	./cmd/link/internal/ld/lib.go	/^	var name string$/;"	v
name	./cmd/pprof/internal/report/report.go	/^	var name string$/;"	v
name	./cmd/vet/composite.go	/^		\/\/ A simple type name like t or T does not need keys either,$/;"	t
name	./cmd/vet/types.go	/^	warnf("invalid type name %q", name)$/;"	t
name	./cmd/yacc/yacc.go	/^		\/\/ get, and look up, a type name (union member name)$/;"	t
name	./database/sql/example_test.go	/^		var name string$/;"	v
name	./database/sql/sql.go	/^\/\/         var name string$/;"	v
name	./database/sql/sql.go	/^\/\/  var name string$/;"	v
name	./database/sql/sql_test.go	/^	var name *string \/\/ nil pointer$/;"	v
name	./database/sql/sql_test.go	/^	var name *string$/;"	v
name	./database/sql/sql_test.go	/^	var name []byte$/;"	v
name	./database/sql/sql_test.go	/^	var name string$/;"	v
name	./debug/elf/file.go	/^		var name string$/;"	v
name	./debug/gosym/symtab.go	/^\/\/ ReceiverName returns the receiver type name of this symbol,$/;"	t
name	./debug/pe/file.go	/^			var name string$/;"	v
name	./debug/pe/file.go	/^		var name string$/;"	v
name	./encoding/asn1/asn1.go	/^\/\/ If the type name of a slice element ends with "SET" then it's treated as if$/;"	t
name	./encoding/gob/codec_test.go	/^	\/\/ An instance triggering a type name of 1.6 GB.$/;"	t
name	./encoding/gob/codec_test.go	/^	\/\/ An instance triggering a type name of length ~102 GB.$/;"	t
name	./encoding/gob/decode.go	/^		errorf("invalid type name length %d", nr)$/;"	t
name	./encoding/gob/decode.go	/^		errorf("invalid type name length %d: exceeds input size", nr)$/;"	t
name	./encoding/gob/doc.go	/^the initial type name, interface values are wrapped the same way; in effect, the$/;"	t
name	./encoding/gob/type.go	/^\/\/ internal type name.  That name will identify the concrete type of a value$/;"	t
name	./encoding/gob/type.go	/^func (t *CommonType) name() string { return t.Name }$/;"	f
name	./encoding/gob/type.go	/^func (t typeId) name() string {$/;"	f
name	./encoding/xml/marshal.go	/^	\/\/ 3. type name$/;"	t
name	./encoding/xml/xml.go	/^		var name Name$/;"	v
name	./encoding/xml/xml.go	/^func (d *Decoder) name() (s string, ok bool) {$/;"	f
name	./expvar/expvar.go	/^		log.Panicln("Reuse of exported var name:", name)$/;"	v
name	./flag/flag.go	/^			break \/\/ Only one back quote; use type name.$/;"	t
name	./go/ast/ast.go	/^		Name    *Ident        \/\/ type name$/;"	t
name	./go/ast/filter.go	/^		funcs := make(map[string]int) \/\/ map of func name -> decls index$/;"	f
name	./go/doc/filter.go	/^			\/\/ type name doesn't match, but we may have matching consts, vars, factories or methods$/;"	t
name	./go/doc/reader.go	/^				\/\/ more than one type name - do not associate$/;"	t
name	./go/doc/reader.go	/^			\/\/ use the previous type name (w\/o more type information$/;"	t
name	./go/doc/reader.go	/^	\/\/            If there is exactly one type name that is sufficiently$/;"	t
name	./go/doc/reader.go	/^	\/\/ Heuristic: For each typed entry, determine the type name, if any.$/;"	t
name	./go/doc/reader.go	/^	name string       \/\/ type name$/;"	t
name	./go/doc/reader.go	/^\/\/ predeclared) type. The namedType for a type name is always found via$/;"	t
name	./go/internal/gcimporter/exportdata.go	/^		var name string$/;"	v
name	./go/internal/gcimporter/gcimporter.go	/^		\/\/ anonymous field - typ must be T or *T and T must be a type name$/;"	t
name	./go/printer/nodes.go	/^		\/\/ a type name$/;"	t
name	./go/types/object.go	/^	anonymous bool \/\/ if set, the variable is an anonymous struct field, and name is the type name$/;"	t
name	./go/types/resolver.go	/^					\/\/ Associate method with receiver base type name, if possible.$/;"	t
name	./go/types/type.go	/^\/\/ TypeName returns the type name for the named type t.$/;"	t
name	./go/types/typexpr.go	/^				\/\/ T or as a pointer to a non-interface type name *T, and T$/;"	t
name	./net/fd_plan9.go	/^func (fd *netFD) name() string {$/;"	f
name	./net/fd_unix.go	/^func (fd *netFD) name() string {$/;"	f
name	./net/interface_bsd.go	/^		var name [syscall.IFNAMSIZ]byte$/;"	v
name	./net/ip_test.go	/^func name(f interface{}) string {$/;"	f
name	./net/rpc/server.go	/^	\/\/ so we need to check the type name as well.$/;"	t
name	./os/stat_plan9.go	/^	var name string$/;"	v
name	./regexp/testdata/testregex.c	/^static const struct { int code; char* name; } codes[] =$/;"	m	struct:__anon1	file:
name	./runtime/hash_test.go	/^func (k *BytesKey) name() string {$/;"	f
name	./runtime/hash_test.go	/^func (k *EfaceKey) name() string {$/;"	f
name	./runtime/hash_test.go	/^func (k *IfaceKey) name() string {$/;"	f
name	./runtime/hash_test.go	/^func (k *Int32Key) name() string {$/;"	f
name	./runtime/hash_test.go	/^func (k *Int64Key) name() string {$/;"	f
name	./syscall/mksyscall_windows.go	/^* If go func name needs to be different from it's winapi dll name,$/;"	f
name	./syscall/mksyscall_windows.go	/^\/\/ StrconvType returns Go type name used for OS string for f.$/;"	t
name	./syscall/syscall_darwin.go	/^		var name = string(bytes[0:dirent.Namlen])$/;"	v
name	./syscall/syscall_dragonfly.go	/^		var name = string(bytes[0:dirent.Namlen])$/;"	v
name	./syscall/syscall_freebsd.go	/^		var name = string(bytes[0:dirent.Namlen])$/;"	v
name	./syscall/syscall_linux.go	/^		var name = string(bytes[0:clen(bytes[:])])$/;"	v
name	./syscall/syscall_nacl.go	/^		var name = string(bytes[0:clen(bytes[:])])$/;"	v
name	./syscall/syscall_netbsd.go	/^		var name = string(bytes[0:dirent.Namlen])$/;"	v
name	./syscall/syscall_openbsd.go	/^		var name = string(bytes[0:dirent.Namlen])$/;"	v
name	./syscall/syscall_solaris.go	/^		var name = string(bytes[0:clen(bytes[:])])$/;"	v
name	./text/template/parse/parse.go	/^	var name string$/;"	v
nameConstraints	./crypto/x509/x509.go	/^type nameConstraints struct {$/;"	t
nameConstraintsIntermediate1	./crypto/x509/verify_test.go	/^var nameConstraintsIntermediate1 = `-----BEGIN CERTIFICATE-----$/;"	v
nameConstraintsIntermediate2	./crypto/x509/verify_test.go	/^var nameConstraintsIntermediate2 = `-----BEGIN CERTIFICATE-----$/;"	v
nameConstraintsLeaf	./crypto/x509/verify_test.go	/^var nameConstraintsLeaf = `-----BEGIN CERTIFICATE-----$/;"	v
nameFilter	./go/parser/parser_test.go	/^func nameFilter(filename string) bool {$/;"	f
nameKeys	./cmd/cgo/main.go	/^func nameKeys(m map[string]*Name) []string {$/;"	f
nameList	./net/dnsclient_unix.go	/^func (conf *dnsConfig) nameList(name string) []string {$/;"	f
nameOf	./go/ast/filter.go	/^func nameOf(f *FuncDecl) string {$/;"	f
nameSpace	./html/template/template.go	/^type nameSpace struct {$/;"	t
nameTest	./debug/elf/elf_test.go	/^type nameTest struct {$/;"	t
nameTests	./debug/elf/elf_test.go	/^var nameTests = []nameTest{$/;"	v
nameToC	./cmd/cgo/gcc.go	/^var nameToC = map[string]string{$/;"	v
nameToKey	./crypto/x509/verify_test.go	/^func nameToKey(name *pkix.Name) string {$/;"	f
nameType	./encoding/xml/typeinfo.go	/^var nameType = reflect.TypeOf(Name{})$/;"	v
nameValuePair11	./net/http/fcgi/fcgi_test.go	/^func nameValuePair11(nameData, valueData string) []byte {$/;"	f
name_or_type	./cmd/compile/internal/gc/go.y	/^name_or_type:$/;"	l
named	./go/types/typexpr.go	/^	var named, anonymous bool$/;"	v
namedCurveFromOID	./crypto/x509/x509.go	/^func namedCurveFromOID(oid asn1.ObjectIdentifier) elliptic.Curve {$/;"	f
namedType	./go/doc/reader.go	/^type namedType struct {$/;"	t
namei	./syscall/fs_nacl.go	/^func (fs *fsys) namei(path string, parent bool) (ip *inode, elem string, err error) {$/;"	f
names	./cmd/cgo/gcc.go	/^	var names, needType []*Name$/;"	v
names	./cmd/compile/internal/gc/fmt.go	/^\/\/	  'h' omit 'func' and receiver from function types, short type names$/;"	t
names	./cmd/compile/internal/gc/subr.go	/^\/\/ modify the tree with missing type names.$/;"	t
names	./cmd/dist/util.go	/^	var names []string$/;"	v
names	./cmd/pprof/internal/profile/profile.go	/^	var names []string$/;"	v
names	./cmd/vet/main.go	/^	var names []string$/;"	v
names	./debug/macho/file.go	/^	var names = [...]string{"abbrev", "info", "line", "str"}$/;"	v
names	./debug/pe/file.go	/^	var names = [...]string{"abbrev", "info", "line", "str"}$/;"	v
names	./go/doc/reader.go	/^			\/\/ only possible for qualified type names;$/;"	t
names	./go/parser/parser.go	/^		return false \/\/ all other nodes are not type names$/;"	t
names	./go/parser/parser.go	/^	\/\/ a list of identifiers looks like a list of type names$/;"	t
names	./go/printer/testdata/parser.go	/^		return false \/\/ all other nodes are not type names$/;"	t
names	./go/printer/testdata/parser.go	/^	\/\/ a list of identifiers looks like a list of type names$/;"	t
names	./go/types/check.go	/^	methods  map[string][]*Func    \/\/ maps type names to associated methods$/;"	t
names	./go/types/predicates.go	/^		\/\/ Two named types are identical if their type names originate$/;"	t
names	./go/types/resolver.go	/^\/\/ methods with receiver base type names.$/;"	t
namesize	./cmd/go/note.go	/^			var namesize, descsize, noteType int32$/;"	v
namesize	./cmd/link/internal/ld/lib.go	/^			var namesize, descsize, noteType int32$/;"	v
nametomib	./syscall/syscall_darwin.go	/^func nametomib(name string) (mib []_C_int, err error) {$/;"	f
nametomib	./syscall/syscall_dragonfly.go	/^func nametomib(name string) (mib []_C_int, err error) {$/;"	f
nametomib	./syscall/syscall_freebsd.go	/^func nametomib(name string) (mib []_C_int, err error) {$/;"	f
nametomib	./syscall/syscall_netbsd.go	/^func nametomib(name string) (mib []_C_int, err error) {$/;"	f
nametomib	./syscall/syscall_openbsd.go	/^func nametomib(name string) (mib []_C_int, err error) {$/;"	f
nan	./math/all_test.go	/^var nan = Float64frombits(0xFFF8000000000000) \/\/ SSE2 DIVSD 0\/0$/;"	v
nan	./runtime/complex.go	/^func nan() float64 {$/;"	f
nan_zero_inf	./math/frexp_386.s	/^nan_zero_inf:$/;"	l
nanolocaltests	./time/time_test.go	/^var nanolocaltests = []TimeTest{$/;"	v
nanotime	./runtime/os1_plan9.go	/^func nanotime() int64 {$/;"	f
nanotime	./runtime/os1_windows.go	/^func nanotime() int64 {$/;"	f
nanotime	./runtime/os3_solaris.go	/^func nanotime() int64 {$/;"	f
nanotime	./runtime/os_nacl.go	/^func nanotime() int64$/;"	f
nanotime	./runtime/stubs2.go	/^func nanotime() int64$/;"	f
nanotime1	./runtime/os3_solaris.go	/^func nanotime1()$/;"	f
nanoutctests	./time/time_test.go	/^var nanoutctests = []TimeTest{$/;"	v
narch	./debug/macho/fat.go	/^	var narch uint32$/;"	v
nat	./cmd/compile/internal/big/nat.go	/^type nat []Word$/;"	t
nat	./math/big/nat.go	/^type nat []Word$/;"	t
natFromString	./cmd/compile/internal/big/nat_test.go	/^func natFromString(s string) nat {$/;"	f
natFromString	./math/big/nat_test.go	/^func natFromString(s string) nat {$/;"	f
natScanTests	./cmd/compile/internal/big/natconv_test.go	/^var natScanTests = []struct {$/;"	v
natScanTests	./math/big/natconv_test.go	/^var natScanTests = []struct {$/;"	v
nb	./cmd/internal/gcprog/gcprog.go	/^	var nb uint$/;"	v
nb	./compress/flate/inflate.go	/^		var nb uint$/;"	v
nb	./encoding/ascii85/ascii85.go	/^	var nb int$/;"	v
nb	./os/dir_unix.go	/^		var nb, nc int$/;"	v
nb	./syscall/unzip_nacl.go	/^		var nb uint$/;"	v
nbits	./runtime/mbitmap.go	/^	var nbits uintptr$/;"	v
nblank	./cmd/compile/internal/gc/go.go	/^var nblank *Node$/;"	v
nbuf	./runtime/heapdump.go	/^var nbuf uintptr$/;"	v
nc	./cmd/compile/internal/arm/ggen.go	/^	var nc gc.Node$/;"	v
ncase	./cmd/compile/internal/gc/select.go	/^	var ncase *Node$/;"	v
ncmd	./cmd/link/internal/ld/ldmacho.go	/^	var ncmd uint32$/;"	v
ncoffsym	./cmd/link/internal/ld/pe.go	/^var ncoffsym int$/;"	v
ncon	./cmd/compile/internal/arm/gsubr.go	/^func ncon(i uint32) *gc.Node {$/;"	f
ncon	./cmd/compile/internal/x86/gsubr.go	/^func ncon(i uint32) *gc.Node {$/;"	f
ncon_n	./cmd/compile/internal/arm/gsubr.go	/^var ncon_n gc.Node$/;"	v
ncon_n	./cmd/compile/internal/x86/gsubr.go	/^var ncon_n gc.Node$/;"	v
ncopy	./net/http/transfer.go	/^	var ncopy int64$/;"	v
ndebug	./cmd/link/internal/ld/macho.go	/^var ndebug int$/;"	v
ne	./text/template/funcs.go	/^func ne(arg1, arg2 interface{}) (bool, error) {$/;"	f
nearEqual	./math/rand/rand_test.go	/^func nearEqual(a, b, closeEnough, maxError float64) bool {$/;"	f
need	./debug/elf/file.go	/^	var need []verneed$/;"	v
needaddgcproc	./runtime/proc1.go	/^func needaddgcproc() bool {$/;"	f
needc	./cmd/compile/internal/amd64/peep.go	/^func needc(p *obj.Prog) bool {$/;"	f
needc	./cmd/compile/internal/x86/peep.go	/^func needc(p *obj.Prog) bool {$/;"	f
needle	./bytes/example_test.go	/^	var needle []byte$/;"	v
needlib	./cmd/link/internal/ld/elf.go	/^	var needlib *Elflib$/;"	v
needm	./runtime/asm_386.s	/^needm:$/;"	l
needm	./runtime/asm_amd64.s	/^needm:$/;"	l
needm	./runtime/proc1.go	/^func needm(x byte) {$/;"	f
needsEncoding	./mime/encodedword.go	/^func needsEncoding(s string) bool {$/;"	f
needsSniff	./net/http/server.go	/^func (w *response) needsSniff() bool {$/;"	f
needsize	./cmd/compile/internal/gc/subr.go	/^	var needsize int$/;"	v
needsize	./cmd/compile/internal/gc/walk.go	/^	var needsize int$/;"	v
needtls	./runtime/asm_386.s	/^needtls:$/;"	l
needtls	./runtime/asm_amd64.s	/^needtls:$/;"	l
needtls	./runtime/asm_amd64p32.s	/^needtls:$/;"	l
needwritebarrier	./cmd/compile/internal/gc/walk.go	/^func needwritebarrier(l *Node, r *Node) bool {$/;"	f
neg	./cmd/compile/internal/big/ratconv.go	/^	var neg bool$/;"	v
neg	./math/big/ratconv.go	/^	var neg bool$/;"	v
negateClass	./regexp/syntax/parse.go	/^func negateClass(r []rune) []rune {$/;"	f
negativeReader	./bufio/bufio_test.go	/^type negativeReader int$/;"	t
neginf	./runtime/complex.go	/^func neginf() float64 {$/;"	f
nelem	./runtime/cgo/libcgo.h	/^#define nelem(/;"	d
nelfstr	./cmd/link/internal/ld/elf.go	/^var nelfstr int$/;"	v
nend	./cmd/compile/internal/arm/cgen.go	/^	var nend gc.Node$/;"	v
nend	./cmd/compile/internal/arm64/cgen.go	/^	var nend gc.Node$/;"	v
nend	./cmd/compile/internal/ppc64/cgen.go	/^	var nend gc.Node$/;"	v
neonstate64	./runtime/defs_darwin_arm64.go	/^type neonstate64 struct {$/;"	t
nerr	./runtime/softfloat64_test.go	/^var nerr int$/;"	v
nerrors	./cmd/cgo/util.go	/^var nerrors int$/;"	v
nerrors	./cmd/compile/internal/gc/go.go	/^var nerrors int$/;"	v
nerrors	./cmd/yacc/yacc.go	/^var nerrors = 0                   \/\/ number of errors$/;"	v
nestedCall	./runtime/syscall_windows_test.go	/^func nestedCall(t *testing.T, f func()) {$/;"	f
nestedDirectivesInput	./encoding/xml/xml_test.go	/^var nestedDirectivesInput = `$/;"	v
nestedDirectivesTokens	./encoding/xml/xml_test.go	/^var nestedDirectivesTokens = []Token{$/;"	v
nestedStruct	./encoding/asn1/marshal_test.go	/^type nestedStruct struct {$/;"	t
net	./syscall/net_nacl.go	/^var net = struct {$/;"	v
netAddr	./syscall/net_nacl.go	/^type netAddr struct {$/;"	t
netConn	./log/syslog/syslog.go	/^type netConn struct {$/;"	t
netErr	./net/ipsock_plan9.go	/^func netErr(e error) {$/;"	f
netFD	./net/fd_plan9.go	/^type netFD struct {$/;"	t
netFD	./net/fd_unix.go	/^type netFD struct {$/;"	t
netFD	./net/fd_windows.go	/^type netFD struct {$/;"	t
netFD	./net/ipsock_plan9.go	/^func (fd *netFD) netFD() (*netFD, error) {$/;"	f
netFile	./syscall/net_nacl.go	/^type netFile struct {$/;"	t
net_op	./runtime/netpoll_windows.go	/^type net_op struct {$/;"	t
net_runtimeNano	./runtime/time.go	/^func net_runtimeNano() int64 {$/;"	f
net_runtime_Semacquire	./runtime/sema.go	/^func net_runtime_Semacquire(addr *uint32) {$/;"	f
net_runtime_Semrelease	./runtime/sema.go	/^func net_runtime_Semrelease(addr *uint32) {$/;"	f
net_runtime_pollClose	./runtime/netpoll.go	/^func net_runtime_pollClose(pd *pollDesc) {$/;"	f
net_runtime_pollOpen	./runtime/netpoll.go	/^func net_runtime_pollOpen(fd uintptr) (*pollDesc, int) {$/;"	f
net_runtime_pollReset	./runtime/netpoll.go	/^func net_runtime_pollReset(pd *pollDesc, mode int) int {$/;"	f
net_runtime_pollServerInit	./runtime/netpoll.go	/^func net_runtime_pollServerInit() {$/;"	f
net_runtime_pollSetDeadline	./runtime/netpoll.go	/^func net_runtime_pollSetDeadline(pd *pollDesc, d int64, mode int) {$/;"	f
net_runtime_pollUnblock	./runtime/netpoll.go	/^func net_runtime_pollUnblock(pd *pollDesc) {$/;"	f
net_runtime_pollWait	./runtime/netpoll.go	/^func net_runtime_pollWait(pd *pollDesc, mode int) int {$/;"	f
net_runtime_pollWaitCanceled	./runtime/netpoll.go	/^func net_runtime_pollWaitCanceled(pd *pollDesc, mode int) {$/;"	f
netfd	./net/fd_windows.go	/^	var netfd *netFD$/;"	v
netipv6zone	./cmd/fix/netipv6zone.go	/^func netipv6zone(f *ast.File) bool {$/;"	f
netipv6zoneFix	./cmd/fix/netipv6zone.go	/^var netipv6zoneFix = fix{$/;"	v
netipv6zoneTests	./cmd/fix/netipv6zone_test.go	/^var netipv6zoneTests = []testCase{$/;"	v
netlinkMessageHeaderAndData	./syscall/netlink_linux.go	/^func netlinkMessageHeaderAndData(b []byte) (*NlMsghdr, []byte, int, error) {$/;"	f
netlinkRouteAttrAndValue	./syscall/netlink_linux.go	/^func netlinkRouteAttrAndValue(b []byte) (*RtAttr, []byte, int, error) {$/;"	f
netpoll	./runtime/netpoll_epoll.go	/^func netpoll(block bool) *g {$/;"	f
netpoll	./runtime/netpoll_kqueue.go	/^func netpoll(block bool) *g {$/;"	f
netpoll	./runtime/netpoll_nacl.go	/^func netpoll(block bool) *g {$/;"	f
netpoll	./runtime/netpoll_solaris.go	/^func netpoll(block bool) *g {$/;"	f
netpoll	./runtime/netpoll_stub.go	/^func netpoll(block bool) (gp *g) {$/;"	f
netpoll	./runtime/netpoll_windows.go	/^func netpoll(block bool) *g {$/;"	f
netpollDeadline	./runtime/netpoll.go	/^func netpollDeadline(arg interface{}, seq uintptr) {$/;"	f
netpollReadDeadline	./runtime/netpoll.go	/^func netpollReadDeadline(arg interface{}, seq uintptr) {$/;"	f
netpollWriteDeadline	./runtime/netpoll.go	/^func netpollWriteDeadline(arg interface{}, seq uintptr) {$/;"	f
netpollarm	./runtime/netpoll_epoll.go	/^func netpollarm(pd *pollDesc, mode int) {$/;"	f
netpollarm	./runtime/netpoll_kqueue.go	/^func netpollarm(pd *pollDesc, mode int) {$/;"	f
netpollarm	./runtime/netpoll_nacl.go	/^func netpollarm(pd *pollDesc, mode int) {$/;"	f
netpollarm	./runtime/netpoll_solaris.go	/^func netpollarm(pd *pollDesc, mode int) {$/;"	f
netpollarm	./runtime/netpoll_windows.go	/^func netpollarm(pd *pollDesc, mode int) {$/;"	f
netpollblock	./runtime/netpoll.go	/^func netpollblock(pd *pollDesc, mode int32, waitio bool) bool {$/;"	f
netpollblockcommit	./runtime/netpoll.go	/^func netpollblockcommit(gp *g, gpp unsafe.Pointer) bool {$/;"	f
netpollcheckerr	./runtime/netpoll.go	/^func netpollcheckerr(pd *pollDesc, mode int32) int {$/;"	f
netpollclose	./runtime/netpoll_epoll.go	/^func netpollclose(fd uintptr) int32 {$/;"	f
netpollclose	./runtime/netpoll_kqueue.go	/^func netpollclose(fd uintptr) int32 {$/;"	f
netpollclose	./runtime/netpoll_nacl.go	/^func netpollclose(fd uintptr) int32 {$/;"	f
netpollclose	./runtime/netpoll_solaris.go	/^func netpollclose(fd uintptr) int32 {$/;"	f
netpollclose	./runtime/netpoll_windows.go	/^func netpollclose(fd uintptr) int32 {$/;"	f
netpolldeadlineimpl	./runtime/netpoll.go	/^func netpolldeadlineimpl(pd *pollDesc, seq uintptr, read, write bool) {$/;"	f
netpollinit	./runtime/netpoll.go	/^\/\/ func netpollinit()			\/\/ to initialize the poller$/;"	f
netpollinit	./runtime/netpoll_epoll.go	/^func netpollinit() {$/;"	f
netpollinit	./runtime/netpoll_kqueue.go	/^func netpollinit() {$/;"	f
netpollinit	./runtime/netpoll_nacl.go	/^func netpollinit() {$/;"	f
netpollinit	./runtime/netpoll_solaris.go	/^func netpollinit() {$/;"	f
netpollinit	./runtime/netpoll_windows.go	/^func netpollinit() {$/;"	f
netpollinited	./runtime/netpoll.go	/^func netpollinited() bool {$/;"	f
netpollinited	./runtime/netpoll_stub.go	/^func netpollinited() bool {$/;"	f
netpolllasterr	./runtime/netpoll_solaris.go	/^var netpolllasterr int32$/;"	v
netpollopen	./runtime/netpoll.go	/^\/\/ func netpollopen(fd uintptr, pd *pollDesc) int32	\/\/ to arm edge-triggered notifications$/;"	f
netpollopen	./runtime/netpoll_epoll.go	/^func netpollopen(fd uintptr, pd *pollDesc) int32 {$/;"	f
netpollopen	./runtime/netpoll_kqueue.go	/^func netpollopen(fd uintptr, pd *pollDesc) int32 {$/;"	f
netpollopen	./runtime/netpoll_nacl.go	/^func netpollopen(fd uintptr, pd *pollDesc) int32 {$/;"	f
netpollopen	./runtime/netpoll_solaris.go	/^func netpollopen(fd uintptr, pd *pollDesc) int32 {$/;"	f
netpollopen	./runtime/netpoll_windows.go	/^func netpollopen(fd uintptr, pd *pollDesc) int32 {$/;"	f
netpollready	./runtime/netpoll.go	/^\/\/ func netpollready(gpp **g, pd *pollDesc, mode int32)$/;"	f
netpollready	./runtime/netpoll.go	/^func netpollready(gpp *guintptr, pd *pollDesc, mode int32) {$/;"	f
netpollunblock	./runtime/netpoll.go	/^func netpollunblock(pd *pollDesc, mode int32, ioready bool) *g {$/;"	f
netpollupdate	./runtime/netpoll_solaris.go	/^func netpollupdate(pd *pollDesc, set, clear uint32) {$/;"	f
netproto	./syscall/net_nacl.go	/^type netproto struct {$/;"	t
netprotoAF_INET	./syscall/net_nacl.go	/^var netprotoAF_INET = &netproto{$/;"	v
netprotos	./syscall/net_nacl.go	/^var netprotos = map[int]*netproto{$/;"	v
network	./encoding/gob/example_encdec_test.go	/^	var network bytes.Buffer \/\/ Stand-in for the network.$/;"	v
network	./encoding/gob/example_interface_test.go	/^	var network bytes.Buffer \/\/ Stand-in for the network.$/;"	v
network	./encoding/gob/example_test.go	/^	var network bytes.Buffer        \/\/ Stand-in for a network connection$/;"	v
networkNumberAndMask	./net/ip.go	/^func networkNumberAndMask(n *IPNet) (ip IP, m IPMask) {$/;"	f
networkNumberAndMaskTests	./net/ip_test.go	/^var networkNumberAndMaskTests = []struct {$/;"	v
neverCallThisFunction	./runtime/stubs.go	/^type neverCallThisFunction struct{}$/;"	t
neverEnding	./net/http/cgi/matryoshka_test.go	/^type neverEnding byte$/;"	t
neverEnding	./net/http/httputil/dump.go	/^type neverEnding byte$/;"	t
neverEnding	./net/http/serve_test.go	/^type neverEnding byte$/;"	t
neverEnding	./net/timeout_test.go	/^type neverEnding byte$/;"	t
new	./builtin/builtin.go	/^func new(Type) *Type$/;"	f
new	./html/template/template.go	/^func (t *Template) new(name string) *Template {$/;"	f
new	./net/fd_mutex.go	/^		var new uint64$/;"	v
new	./net/http/cgi/testdata/test.cgi	/^sub new {$/;"	s
new	./runtime/mheap.go	/^		var new []*mspan$/;"	v
new	./runtime/netpoll.go	/^		var new uintptr$/;"	v
newAction	./text/template/parse/node.go	/^func (t *Tree) newAction(pos Pos, line int, pipe *PipeNode) *ActionNode {$/;"	f
newAddr	./cmd/asm/internal/asm/asm.go	/^func newAddr(x obj.Addr) *obj.Addr {$/;"	f
newAddr	./net/interface_bsd.go	/^func newAddr(ifi *Interface, m *syscall.InterfaceAddrMessage) (*IPNet, error) {$/;"	f
newAddr	./net/interface_linux.go	/^func newAddr(ifi *Interface, ifam *syscall.IfAddrmsg, attrs []syscall.NetlinkRouteAttr) Addr {$/;"	f
newArrayEncoder	./encoding/json/encode.go	/^func newArrayEncoder(t reflect.Type) encoderFunc {$/;"	f
newArrayType	./encoding/gob/type.go	/^func newArrayType(name string) *arrayType {$/;"	f
newBitReader	./compress/bzip2/bit_reader.go	/^func newBitReader(r io.Reader) bitReader {$/;"	f
newBitState	./regexp/backtrack.go	/^func newBitState(prog *syntax.Prog) *bitState {$/;"	f
newBlock	./crypto/tls/conn.go	/^func (hc *halfConn) newBlock() *block {$/;"	f
newBool	./cmd/pprof/internal/driver/driver.go	/^func newBool(b bool) *bool {$/;"	f
newBool	./encoding/asn1/asn1_test.go	/^func newBool(b bool) *bool { return &b }$/;"	f
newBool	./text/template/parse/node.go	/^func (t *Tree) newBool(pos Pos, true bool) *BoolNode {$/;"	f
newBoolValue	./flag/flag.go	/^func newBoolValue(val bool, p *bool) *boolValue {$/;"	f
newBucket	./runtime/mprof.go	/^func newBucket(typ bucketType, nstk int) *bucket {$/;"	f
newBufioReader	./net/http/server.go	/^func newBufioReader(r io.Reader) *bufio.Reader {$/;"	f
newBufioWriterSize	./net/http/server.go	/^func newBufioWriterSize(w io.Writer, size int) *bufio.Writer {$/;"	f
newBuiltin	./go/types/object.go	/^func newBuiltin(id builtinId) *Builtin {$/;"	f
newByteq	./syscall/net_nacl.go	/^func newByteq() *byteq {$/;"	f
newCBC	./crypto/cipher/cbc.go	/^func newCBC(b Block, iv []byte) *cbc {$/;"	f
newCFB	./crypto/cipher/cfb.go	/^func newCFB(block Block, iv []byte, decrypt bool) Stream {$/;"	f
newCaseLabel	./cmd/compile/internal/gc/swt.go	/^func newCaseLabel() *Node {$/;"	f
newChain	./text/template/parse/node.go	/^func (t *Tree) newChain(pos Pos, node Node) *ChainNode {$/;"	f
newChild	./net/http/fcgi/child.go	/^func newChild(rwc io.ReadWriteCloser, handler http.Handler) *child {$/;"	f
newCipher	./crypto/des/des_test.go	/^func newCipher(key []byte) *desCipher {$/;"	f
newClient	./syscall/srpc_nacl.go	/^func newClient(fd int) (*srpcClient, error) {$/;"	f
newClient2Client	./net/smtp/smtp_test.go	/^var newClient2Client = `EHLO localhost$/;"	v
newClient2Server	./net/smtp/smtp_test.go	/^var newClient2Server = `220 hello world$/;"	v
newClientClient	./net/smtp/smtp_test.go	/^var newClientClient = `EHLO localhost$/;"	v
newClientServer	./net/smtp/smtp_test.go	/^var newClientServer = `220 hello world$/;"	v
newCommand	./text/template/parse/node.go	/^func (t *Tree) newCommand(pos Pos) *CommandNode {$/;"	f
newCondAddrEncoder	./encoding/json/encode.go	/^func newCondAddrEncoder(canAddrEnc, elseEnc encoderFunc) encoderFunc {$/;"	f
newConn	./net/http/fcgi/fcgi.go	/^func newConn(rwc io.ReadWriteCloser) *conn {$/;"	f
newConn	./net/http/server.go	/^func (srv *Server) newConn(rwc net.Conn) (c *conn, err error) {$/;"	f
newContext	./cmd/go/context.go	/^func newContext(c *build.Context) *Context {$/;"	f
newCounter	./cmd/cover/cover.go	/^func (f *File) newCounter(start, end token.Pos, numStmt int) ast.Stmt {$/;"	f
newDT	./encoding/gob/codec_test.go	/^func newDT() DT {$/;"	f
newData	./encoding/gob/encoder_test.go	/^	var newData map[string]interface{}$/;"	v
newDecBuffer	./encoding/gob/codec_test.go	/^func newDecBuffer(data []byte) *decBuffer {$/;"	f
newDecodeState	./encoding/gob/codec_test.go	/^func newDecodeState(buf *decBuffer) *decoderState {$/;"	f
newDecodeStateFromData	./encoding/gob/codec_test.go	/^func newDecodeStateFromData(data []byte) *decoderState {$/;"	f
newDecoderState	./encoding/gob/decode.go	/^func (dec *Decoder) newDecoderState(buf *decBuffer) *decoderState {$/;"	f
newDir	./os/os_test.go	/^func newDir(testName string, t *testing.T) (name string) {$/;"	f
newDot	./text/template/parse/node.go	/^func (t *Tree) newDot(pos Pos) *DotNode {$/;"	f
newDualStackListener	./net/mockserver_test.go	/^func newDualStackListener() (lns []*TCPListener, err error) {$/;"	f
newDualStackPacketListener	./net/mockserver_test.go	/^func newDualStackPacketListener() (cs []*UDPConn, err error) {$/;"	f
newDualStackServer	./net/mockserver_test.go	/^func newDualStackServer(lns []streamListener) (*dualStackServer, error) {$/;"	f
newDurationValue	./flag/flag.go	/^func newDurationValue(val time.Duration, p *time.Duration) *durationValue {$/;"	f
newElfPhdr	./cmd/link/internal/ld/elf.go	/^func newElfPhdr() *ElfPhdr {$/;"	f
newElfShdr	./cmd/link/internal/ld/elf.go	/^func newElfShdr(name int64) *ElfShdr {$/;"	f
newElse	./text/template/parse/node.go	/^func (t *Tree) newElse(pos Pos, line int) *elseNode {$/;"	f
newEncodeState	./encoding/json/encode.go	/^func newEncodeState() *encodeState {$/;"	f
newEncoderState	./encoding/gob/codec_test.go	/^func newEncoderState(b *encBuffer) *encoderState {$/;"	f
newEncoderState	./encoding/gob/encode.go	/^func (enc *Encoder) newEncoderState(b *encBuffer) *encoderState {$/;"	f
newEnd	./text/template/parse/node.go	/^func (t *Tree) newEnd(pos Pos) *endNode {$/;"	f
newEntry	./net/http/cookiejar/jar.go	/^func (j *Jar) newEntry(c *http.Cookie, now time.Time, defPath, host string) (e entry, remove bool, err error) {$/;"	f
newEscaper	./html/template/escape.go	/^func newEscaper(t *Template) *escaper {$/;"	f
newFD	./net/fd_plan9.go	/^func newFD(net, name string, ctl, data *os.File, laddr, raddr Addr) (*netFD, error) {$/;"	f
newFD	./net/fd_unix.go	/^func newFD(sysfd, family, sotype int, net string) (*netFD, error) {$/;"	f
newFD	./net/fd_windows.go	/^func newFD(sysfd syscall.Handle, family, sotype int, net string) (*netFD, error) {$/;"	f
newFD	./syscall/fd_nacl.go	/^func newFD(impl fileImpl) int {$/;"	f
newField	./text/template/parse/node.go	/^func (t *Tree) newField(pos Pos, ident string) *FieldNode {$/;"	f
newFile	./os/file_windows.go	/^func newFile(h syscall.Handle, name string) *File {$/;"	f
newFile	./os/os_test.go	/^func newFile(testName string, t *testing.T) (f *File) {$/;"	f
newFileFD	./net/file_plan9.go	/^func newFileFD(f *os.File) (net *netFD, err error) {$/;"	f
newFileFD	./net/file_unix.go	/^func newFileFD(f *os.File) (*netFD, error) {$/;"	f
newFinishedHash	./crypto/tls/prf.go	/^func newFinishedHash(version uint16, cipherSuite *cipherSuite) finishedHash {$/;"	f
newFlateWriter	./archive/zip/register.go	/^func newFlateWriter(w io.Writer) io.WriteCloser {$/;"	f
newFloat64	./cmd/pprof/internal/driver/driver.go	/^func newFloat64(fl float64) *float64 {$/;"	f
newFloat64Value	./flag/flag.go	/^func newFloat64Value(val float64, p *float64) *float64Value {$/;"	f
newFn	./syscall/mksyscall_windows.go	/^func newFn(s string) (*Fn, error) {$/;"	f
newForkableWriter	./encoding/asn1/marshal.go	/^func newForkableWriter() *forkableWriter {$/;"	f
newFsys	./syscall/fs_nacl.go	/^func newFsys() *fsys {$/;"	f
newGobEncoderType	./encoding/gob/type.go	/^func newGobEncoderType(name string) *gobEncoderType {$/;"	f
newGraph	./cmd/pprof/internal/report/report.go	/^func newGraph(rpt *Report) (g graph, err error) {$/;"	f
newHandlerTest	./net/http/serve_test.go	/^func newHandlerTest(h Handler) handlerTest {$/;"	f
newHashSet	./runtime/hash_test.go	/^func newHashSet() *HashSet {$/;"	f
newHilbert	./cmd/compile/internal/big/hilbert_test.go	/^func newHilbert(n int) *matrix {$/;"	f
newHilbert	./math/big/hilbert_test.go	/^func newHilbert(n int) *matrix {$/;"	f
newHuffmanBitWriter	./compress/flate/huffman_bit_writer.go	/^func newHuffmanBitWriter(w io.Writer) *huffmanBitWriter {$/;"	f
newHuffmanEncoder	./compress/flate/huffman_code.go	/^func newHuffmanEncoder(size int) *huffmanEncoder {$/;"	f
newHuffmanTree	./compress/bzip2/huffman.go	/^func newHuffmanTree(lengths []uint8) (huffmanTree, error) {$/;"	f
newIPConn	./net/iprawsock_posix.go	/^func newIPConn(fd *netFD) *IPConn { return &IPConn{conn{fd}} }$/;"	f
newIdentCmd	./html/template/escape.go	/^func newIdentCmd(identifier string, pos parse.Pos) *parse.CommandNode {$/;"	f
newIf	./text/template/parse/node.go	/^func (t *Tree) newIf(pos Pos, line int, pipe *PipeNode, list, elseList *ListNode) *IfNode {$/;"	f
newImageFromDescriptor	./image/gif/reader.go	/^func (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {$/;"	f
newIndex	./compress/flate/deflate.go	/^				var newIndex int$/;"	v
newInode	./syscall/fs_nacl.go	/^func (fs *fsys) newInode() *inode {$/;"	f
newInputBytes	./regexp/exec.go	/^func (m *machine) newInputBytes(b []byte) input {$/;"	f
newInputReader	./regexp/exec.go	/^func (m *machine) newInputReader(r io.RuneReader) input {$/;"	f
newInputString	./regexp/exec.go	/^func (m *machine) newInputString(s string) input {$/;"	f
newInt	./cmd/pprof/internal/driver/driver.go	/^func newInt(i int) *int {$/;"	f
newInt	./encoding/asn1/asn1_test.go	/^func newInt(n int) *int { return &n }$/;"	f
newInt	./text/template/exec_test.go	/^func newInt(n int) *int {$/;"	f
newInt64	./encoding/asn1/asn1_test.go	/^func newInt64(n int64) *int64 { return &n }$/;"	f
newInt64Value	./flag/flag.go	/^func newInt64Value(val int64, p *int64) *int64Value {$/;"	f
newIntSlice	./text/template/exec_test.go	/^func newIntSlice(n ...int) *[]int {$/;"	f
newIntValue	./cmd/internal/obj/flag.go	/^func newIntValue(val int32, p *int32) *int32Value {$/;"	f
newIntValue	./flag/flag.go	/^func newIntValue(val int, p *int) *intValue {$/;"	f
newInverseHilbert	./cmd/compile/internal/big/hilbert_test.go	/^func newInverseHilbert(n int) *matrix {$/;"	f
newInverseHilbert	./math/big/hilbert_test.go	/^func newInverseHilbert(n int) *matrix {$/;"	f
newLink	./net/interface_bsd.go	/^func newLink(m *syscall.InterfaceMessage) (*Interface, error) {$/;"	f
newLink	./net/interface_linux.go	/^func newLink(ifim *syscall.IfInfomsg, attrs []syscall.NetlinkRouteAttr) *Interface {$/;"	f
newList	./cmd/cover/cover.go	/^	var newList []ast.Stmt$/;"	v
newList	./text/template/parse/node.go	/^func (t *Tree) newList(pos Pos) *ListNode {$/;"	f
newLiteral	./regexp/syntax/parse.go	/^func (p *parser) newLiteral(r rune, flags Flags) *Regexp {$/;"	f
newLocInfo	./cmd/pprof/internal/report/report.go	/^func newLocInfo(l *profile.Location) []nodeInfo {$/;"	f
newLocalListener	./crypto/tls/tls_test.go	/^func newLocalListener(t *testing.T) net.Listener {$/;"	f
newLocalListener	./net/http/httptest/server.go	/^func newLocalListener() net.Listener {$/;"	f
newLocalListener	./net/http/transport_test.go	/^func newLocalListener(t *testing.T) net.Listener {$/;"	f
newLocalListener	./net/mockserver_test.go	/^func newLocalListener(network string) (Listener, error) {$/;"	f
newLocalListener	./net/smtp/smtp_test.go	/^func newLocalListener(t *testing.T) net.Listener {$/;"	f
newLocalPacketListener	./net/mockserver_test.go	/^func newLocalPacketListener(network string) (PacketConn, error) {$/;"	f
newLocalPacketServer	./net/mockserver_test.go	/^func newLocalPacketServer(network string) (*localPacketServer, error) {$/;"	f
newLocalServer	./net/mockserver_test.go	/^func (pl *packetListener) newLocalServer() (*localPacketServer, error) {$/;"	f
newLocalServer	./net/mockserver_test.go	/^func (sl *streamListener) newLocalServer() (*localServer, error) {$/;"	f
newLocalServer	./net/mockserver_test.go	/^func newLocalServer(network string) (*localServer, error) {$/;"	f
newLoggingConn	./net/http/server.go	/^func newLoggingConn(baseName string, c net.Conn) net.Conn {$/;"	f
newLookupIP	./net/lookup_windows.go	/^func newLookupIP(name string) ([]IPAddr, error) {$/;"	f
newLookupPort	./net/lookup_windows.go	/^func newLookupPort(network, service string) (int, error) {$/;"	f
newMTFDecoder	./compress/bzip2/move_to_front.go	/^func newMTFDecoder(symbols []byte) moveToFrontDecoder {$/;"	f
newMTFDecoderWithRange	./compress/bzip2/move_to_front.go	/^func newMTFDecoderWithRange(n int) moveToFrontDecoder {$/;"	f
newMachoLoad	./cmd/link/internal/ld/macho.go	/^func newMachoLoad(type_ uint32, ndata uint32) *MachoLoad {$/;"	f
newMachoSect	./cmd/link/internal/ld/macho.go	/^func newMachoSect(seg *MachoSeg, name string, segname string) *MachoSect {$/;"	f
newMachoSeg	./cmd/link/internal/ld/macho.go	/^func newMachoSeg(name string, msect int) *MachoSeg {$/;"	f
newMapEncoder	./encoding/json/encode.go	/^func newMapEncoder(t reflect.Type) encoderFunc {$/;"	f
newMapType	./encoding/gob/type.go	/^func newMapType(name string) *mapType {$/;"	f
newMapping	./cmd/pprof/internal/symbolizer/symbolizer.go	/^func newMapping(prof *profile.Profile, obj plugin.ObjTool, ui plugin.UI, force bool) (*mappingTable, error) {$/;"	f
newMatrix	./cmd/compile/internal/big/hilbert_test.go	/^func newMatrix(n, m int) *matrix {$/;"	f
newMatrix	./math/big/hilbert_test.go	/^func newMatrix(n, m int) *matrix {$/;"	f
newMpflt	./cmd/compile/internal/gc/mparith3.go	/^func newMpflt() *Mpflt {$/;"	f
newMsgq	./syscall/net_nacl.go	/^func newMsgq() *msgq {$/;"	f
newMulticastAddr	./net/interface_darwin.go	/^func newMulticastAddr(ifi *Interface, m *syscall.InterfaceMulticastAddrMessage) (*IPAddr, error) {$/;"	f
newMulticastAddr	./net/interface_freebsd.go	/^func newMulticastAddr(ifi *Interface, m *syscall.InterfaceMulticastAddrMessage) (*IPAddr, error) {$/;"	f
newNetlinkRouteRequest	./syscall/netlink_linux.go	/^func newNetlinkRouteRequest(proto, seq, family int) []byte {$/;"	f
newNil	./text/template/parse/node.go	/^func (t *Tree) newNil(pos Pos) *NilNode {$/;"	f
newNumber	./text/template/parse/node.go	/^func (t *Tree) newNumber(pos Pos, text string, typ itemType) (*NumberNode, error) {$/;"	f
newOSProcCreated	./runtime/norace_linux_test.go	/^func newOSProcCreated() {$/;"	f
newOSProcDone	./runtime/norace_linux_test.go	/^var newOSProcDone bool$/;"	v
newOp	./encoding/json/decode.go	/^	var newOp int$/;"	v
newPEDWARFSection	./cmd/link/internal/ld/pe.go	/^func newPEDWARFSection(name string, size int64) *IMAGE_SECTION_HEADER {$/;"	f
newPackage	./cmd/cgo/main.go	/^func newPackage(args []string) *Package {$/;"	f
newParser	./cmd/asm/internal/asm/operand_test.go	/^func newParser(goarch string) *Parser {$/;"	f
newPart	./mime/multipart/multipart.go	/^func newPart(mr *Reader) (*Part, error) {$/;"	f
newPeekReader	./encoding/gob/debug.go	/^func newPeekReader(r io.Reader) *peekReader {$/;"	f
newPipeline	./text/template/parse/node.go	/^func (t *Tree) newPipeline(pos Pos, line int, decl []*VariableNode) *PipeNode {$/;"	f
newPkgDot	./cmd/fix/fix.go	/^func newPkgDot(pos token.Pos, pkg, name string) ast.Expr {$/;"	f
newPopulateResponseWriter	./net/http/filetransport.go	/^func newPopulateResponseWriter() (*populateResponse, <-chan *Response) {$/;"	f
newPrinter	./fmt/print.go	/^func newPrinter() *pp {$/;"	f
newProcess	./os/exec.go	/^func newProcess(pid int, handle uintptr) *Process {$/;"	f
newPtrEncoder	./encoding/json/encode.go	/^func newPtrEncoder(t reflect.Type) encoderFunc {$/;"	f
newQueue	./regexp/onepass.go	/^func newQueue(size int) (q *queueOnePass) {$/;"	f
newRange	./text/template/parse/node.go	/^func (t *Tree) newRange(pos Pos, line int, pipe *PipeNode, list, elseList *ListNode) *RangeNode {$/;"	f
newRawAttributes	./crypto/x509/x509.go	/^func newRawAttributes(attributes []pkix.AttributeTypeAndValueSET) ([]asn1.RawValue, error) {$/;"	f
newReader	./crypto/rand/rand_unix.go	/^func newReader(entropy io.Reader) io.Reader {$/;"	f
newReader	./fmt/scan_test.go	/^func newReader(s string) *myStringReader {$/;"	f
newRegexp	./regexp/syntax/parse.go	/^func (p *parser) newRegexp(op Op) *Regexp {$/;"	f
newRequest	./net/http/cgi/host_test.go	/^func newRequest(httpreq string) *http.Request {$/;"	f
newRequest	./net/http/fcgi/child.go	/^func newRequest(reqId uint16, flags uint8) *request {$/;"	f
newRequestHostTests	./net/http/request_test.go	/^var newRequestHostTests = []struct {$/;"	v
newResolvConfTest	./net/dnsclient_unix_test.go	/^func newResolvConfTest() (*resolvConfTest, error) {$/;"	f
newResponse	./net/http/fcgi/child.go	/^func newResponse(c *child, req *request) *response {$/;"	f
newRot13Reader	./bufio/bufio_test.go	/^func newRot13Reader(r io.Reader) *rot13Reader {$/;"	f
newScanState	./fmt/scan.go	/^func newScanState(r io.Reader, nlIsSpace, nlIsEnd bool) (s *ss, old ssave) {$/;"	f
newScriptedReader	./bufio/bufio_test.go	/^func newScriptedReader(steps ...func(p []byte) (n int, err error)) io.Reader {$/;"	f
newSessionTicketMsg	./crypto/tls/handshake_messages.go	/^type newSessionTicketMsg struct {$/;"	t
newSliceEncoder	./encoding/json/encode.go	/^func newSliceEncoder(t reflect.Type) encoderFunc {$/;"	f
newSliceType	./encoding/gob/type.go	/^func newSliceType(name string) *sliceType {$/;"	f
newStack	./runtime/trace.go	/^func (tab *traceStackTable) newStack(n int) *traceStack {$/;"	f
newString	./cmd/pprof/internal/driver/driver.go	/^func newString(s string) *string {$/;"	f
newString	./encoding/asn1/asn1_test.go	/^func newString(s string) *string { return &s }$/;"	f
newString	./text/template/exec_test.go	/^func newString(s string) *string {$/;"	f
newString	./text/template/parse/node.go	/^func (t *Tree) newString(pos Pos, orig, text string) *StringNode {$/;"	f
newStringValue	./flag/flag.go	/^func newStringValue(val string, p *string) *stringValue {$/;"	f
newStructEncoder	./encoding/json/encode.go	/^func newStructEncoder(t reflect.Type) encoderFunc {$/;"	f
newStructType	./encoding/gob/type.go	/^func newStructType(name string) *structType {$/;"	f
newSyncBuffer	./compress/flate/deflate_test.go	/^func newSyncBuffer() *syncBuffer {$/;"	f
newTCPConn	./net/tcpsock_plan9.go	/^func newTCPConn(fd *netFD) *TCPConn {$/;"	f
newTCPConn	./net/tcpsock_posix.go	/^func newTCPConn(fd *netFD) *TCPConn {$/;"	f
newTLSTransport	./net/http/client_test.go	/^func newTLSTransport(t *testing.T, ts *httptest.Server) *Transport {$/;"	f
newTable	./debug/plan9obj/file.go	/^func newTable(symtab []byte, ptrsz int) ([]Sym, error) {$/;"	f
newTemplate	./text/template/parse/node.go	/^func (t *Tree) newTemplate(pos Pos, line int, name string, pipe *PipeNode) *TemplateNode {$/;"	f
newTestDB	./database/sql/sql_test.go	/^func newTestDB(t testing.TB, name string) *DB {$/;"	f
newTestJar	./net/http/cookiejar/jar_test.go	/^func newTestJar() *Jar {$/;"	f
newTestMultipartRequest	./net/http/request_test.go	/^func newTestMultipartRequest(t *testing.T) *Request {$/;"	f
newText	./text/template/parse/node.go	/^func (t *Tree) newText(pos Pos, text string) *TextNode {$/;"	f
newTextprotoReader	./net/http/request.go	/^func newTextprotoReader(br *bufio.Reader) *textproto.Reader {$/;"	f
newTrackingWriter	./cmd/go/list.go	/^func newTrackingWriter(w io.Writer) *TrackingWriter {$/;"	f
newTransferWriter	./net/http/transfer.go	/^func newTransferWriter(r interface{}) (t *transferWriter, err error) {$/;"	f
newTypeEncoder	./encoding/json/encode.go	/^func newTypeEncoder(t reflect.Type, allowAddr bool) encoderFunc {$/;"	f
newTypeObject	./encoding/gob/type.go	/^func newTypeObject(name string, ut *userTypeInfo, rt reflect.Type) (gobType, error) {$/;"	f
newUDPConn	./net/udpsock_plan9.go	/^func newUDPConn(fd *netFD) *UDPConn { return &UDPConn{conn{fd}} }$/;"	f
newUDPConn	./net/udpsock_posix.go	/^func newUDPConn(fd *netFD) *UDPConn { return &UDPConn{conn{fd}} }$/;"	f
newUint64Value	./flag/flag.go	/^func newUint64Value(val uint64, p *uint64) *uint64Value {$/;"	f
newUintValue	./flag/flag.go	/^func newUintValue(val uint, p *uint) *uintValue {$/;"	f
newUnit	./cmd/compile/internal/big/hilbert_test.go	/^func newUnit(n int) *matrix {$/;"	f
newUnit	./math/big/hilbert_test.go	/^func newUnit(n int) *matrix {$/;"	f
newUnixConn	./net/unixsock_posix.go	/^func newUnixConn(fd *netFD) *UnixConn { return &UnixConn{conn{fd}} }$/;"	f
newUser	./os/user/lookup_windows.go	/^func newUser(usid *syscall.SID, gid, dir string) (*User, error) {$/;"	f
newUserFromSid	./os/user/lookup_windows.go	/^func newUserFromSid(usid *syscall.SID) (*User, error) {$/;"	f
newValues	./net/http/request.go	/^		var newValues url.Values$/;"	v
newVariable	./text/template/parse/node.go	/^func (t *Tree) newVariable(pos Pos, ident string) *VariableNode {$/;"	f
newVars	./go/types/assignments.go	/^	var newVars []*Var$/;"	v
newWith	./text/template/parse/node.go	/^func (t *Tree) newWith(pos Pos, line int, pipe *PipeNode, list, elseList *ListNode) *WithNode {$/;"	f
newWriter	./net/http/fcgi/fcgi.go	/^func newWriter(c *conn, recType recType, reqId uint16) *bufWriter {$/;"	f
new_name	./cmd/compile/internal/gc/go.y	/^new_name:$/;"	l
new_name_list	./cmd/compile/internal/gc/go.y	/^new_name_list:$/;"	l
newabslocexprattr	./cmd/link/internal/ld/dwarf.go	/^func newabslocexprattr(die *DWDie, addr int64, sym *LSym) {$/;"	f
newarray	./runtime/malloc.go	/^func newarray(typ *_type, n uintptr) unsafe.Pointer {$/;"	f
newattr	./cmd/link/internal/ld/dwarf.go	/^func newattr(die *DWDie, attr uint16, cls int, value int64, data interface{}) *DWAttr {$/;"	f
newblock	./cmd/compile/internal/gc/plive.go	/^func newblock(prog *obj.Prog) *BasicBlock {$/;"	f
newcfaoffsetattr	./cmd/link/internal/ld/dwarf.go	/^func newcfaoffsetattr(die *DWDie, offs int32) {$/;"	f
newcfg	./cmd/compile/internal/gc/plive.go	/^func newcfg(firstp *obj.Prog) []*BasicBlock {$/;"	f
newdefer	./runtime/panic.go	/^func newdefer(siz int32) *_defer {$/;"	f
newdie	./cmd/link/internal/ld/dwarf.go	/^func newdie(parent *DWDie, abbrev int, name string) *DWDie {$/;"	f
newextram	./runtime/proc1.go	/^func newextram() {$/;"	f
newfuncname	./cmd/compile/internal/gc/dcl.go	/^func newfuncname(s *Sym) *Node {$/;"	f
newlab	./cmd/compile/internal/gc/gen.go	/^func newlab(n *Node) *Label {$/;"	f
newlabel_inl	./cmd/compile/internal/gc/inl.go	/^func newlabel_inl() *Node {$/;"	f
newlabel_inl_label	./cmd/compile/internal/gc/inl.go	/^var newlabel_inl_label int$/;"	v
newline	./encoding/json/indent.go	/^func newline(dst *bytes.Buffer, prefix, indent string, depth int) {$/;"	f
newlineBytes	./cmd/doc/pkg.go	/^var newlineBytes = []byte("\\n\\n") \/\/ We never ask for more than 2.$/;"	v
newlineCount	./go/scanner/scanner_test.go	/^func newlineCount(s string) int {$/;"	f
newlineFilteringReader	./encoding/base32/base32.go	/^type newlineFilteringReader struct {$/;"	t
newlineFilteringReader	./encoding/base64/base64.go	/^type newlineFilteringReader struct {$/;"	t
newlines	./cmd/doc/pkg.go	/^func (pkg *Package) newlines(n int) {$/;"	f
newliveness	./cmd/compile/internal/gc/plive.go	/^func newliveness(fn *Node, ptxt *obj.Prog, cfg []*BasicBlock, vars []*Node) *Liveness {$/;"	f
newm	./encoding/gob/type_test.go	/^	var newm map[string]int$/;"	v
newm	./runtime/proc1.go	/^func newm(fn func(), _p_ *p) {$/;"	f
newmemberoffsetattr	./cmd/link/internal/ld/dwarf.go	/^func newmemberoffsetattr(die *DWDie, offs int32) {$/;"	f
newname	./cmd/compile/internal/gc/dcl.go	/^func newname(s *Sym) *Node {$/;"	f
newobject	./cmd/compile/internal/gc/builtin/runtime.go	/^func newobject(typ *byte) *any$/;"	f
newobject	./runtime/malloc.go	/^func newobject(typ *_type) unsafe.Pointer {$/;"	f
newosproc	./runtime/os1_darwin.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_dragonfly.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_freebsd.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_linux.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_nacl.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_netbsd.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_openbsd.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_plan9.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os1_windows.go	/^func newosproc(mp *m, stk unsafe.Pointer) {$/;"	f
newosproc	./runtime/os3_solaris.go	/^func newosproc(mp *m, _ unsafe.Pointer) {$/;"	f
newosproc0	./runtime/os1_darwin.go	/^func newosproc0(stacksize uintptr, fn unsafe.Pointer, fnarg uintptr) {$/;"	f
newosproc0	./runtime/os1_linux.go	/^func newosproc0(stacksize uintptr, fn unsafe.Pointer) {$/;"	f
newpcdataprog	./cmd/compile/internal/gc/plive.go	/^func newpcdataprog(prog *obj.Prog, index int32) *obj.Prog {$/;"	f
newplist	./cmd/compile/internal/gc/gsubr.go	/^func newplist() *obj.Plist {$/;"	f
newproc	./runtime/proc1.go	/^func newproc(siz int32, fn *funcval) {$/;"	f
newproc1	./runtime/proc1.go	/^func newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g {$/;"	f
newrefattr	./cmd/link/internal/ld/dwarf.go	/^func newrefattr(die *DWDie, attr uint16, ref *DWDie) *DWAttr {$/;"	f
news	./encoding/gob/type_test.go	/^	var news []int$/;"	v
newselect	./cmd/compile/internal/gc/builtin/runtime.go	/^func newselect(sel *byte, selsize int64, size int32)$/;"	f
newselect	./runtime/select.go	/^func newselect(sel *hselect, selsize int64, size int32) {$/;"	f
newstack	./runtime/stack1.go	/^func newstack() {$/;"	f
nexport	./cmd/link/internal/ld/pe.go	/^var nexport int$/;"	v
next	./archive/tar/common.go	/^func (sp *slicer) next(n int) (b []byte) {$/;"	f
next	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) next() lex.Token {$/;"	f
next	./cmd/compile/internal/gc/bv.go	/^func (b *bulkBvec) next() Bvec {$/;"	f
next	./cmd/compile/internal/gc/plive.go	/^	var next *obj.Prog$/;"	v
next	./cmd/internal/obj/arm/obj5.go	/^	var next *obj.Prog$/;"	v
next	./cmd/link/internal/ld/dwarf.go	/^		var next *DWDie = curr.link$/;"	v
next	./cmd/link/internal/ld/go.go	/^	var next string$/;"	v
next	./container/list/list_test.go	/^	var next *Element$/;"	v
next	./debug/dwarf/line.go	/^		var next LineEntry$/;"	v
next	./debug/dwarf/testdata/typedef.c	/^	t_my_list *next;$/;"	m	struct:list	file:
next	./encoding/json/decode.go	/^func (d *decodeState) next() []byte {$/;"	f
next	./encoding/json/tags.go	/^		var next string$/;"	v
next	./go/ast/commentmap.go	/^func (r *commentListReader) next() {$/;"	f
next	./go/internal/gccgoimporter/parser.go	/^func (p *parser) next() {$/;"	f
next	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) next() {$/;"	f
next	./go/parser/parser.go	/^func (p *parser) next() {$/;"	f
next	./go/printer/testdata/parser.go	/^func (p *parser) next() {$/;"	f
next	./go/scanner/scanner.go	/^func (s *Scanner) next() {$/;"	f
next	./go/types/api_test.go	/^		func next() int { counter++; return counter }$/;"	f
next	./go/types/lookup.go	/^		var next []embeddedType \/\/ embedded types found at current depth$/;"	v
next	./go/types/methodset.go	/^		var next []embeddedType \/\/ embedded types found at current depth$/;"	v
next	./regexp/onepass.go	/^func (q *queueOnePass) next() (n uint32) {$/;"	f
next	./regexp/syntax/compile.go	/^func (l patchList) next(p *Prog) patchList {$/;"	f
next	./runtime/mbitmap.go	/^func (h heapBits) next() heapBits {$/;"	f
next	./strings/search.go	/^func (f *stringFinder) next(text string) int {$/;"	f
next	./text/scanner/scanner.go	/^func (s *Scanner) next() rune {$/;"	f
next	./text/template/parse/lex.go	/^func (l *lexer) next() rune {$/;"	f
next	./text/template/parse/parse.go	/^	var next Node$/;"	v
next	./text/template/parse/parse.go	/^func (t *Tree) next() item {$/;"	f
next0	./go/parser/parser.go	/^func (p *parser) next0() {$/;"	f
next0	./go/printer/testdata/parser.go	/^func (p *parser) next0() {$/;"	f
nextBarrierPC	./runtime/mgcmark.go	/^func nextBarrierPC() uintptr {$/;"	f
nextBlock	./compress/flate/inflate.go	/^func (f *decompressor) nextBlock() {$/;"	f
nextBlock	./syscall/unzip_nacl.go	/^func (f *decompressor) nextBlock() {$/;"	f
nextComment	./go/printer/printer.go	/^func (p *printer) nextComment() {$/;"	f
nextCount	./reflect/type.go	/^	var nextCount map[*structType]int$/;"	v
nextId	./encoding/gob/type.go	/^var nextId typeId       \/\/ incremented for each new type we build$/;"	v
nextInt	./encoding/gob/decoder.go	/^func (dec *Decoder) nextInt() int64 {$/;"	f
nextIsLiteral	./mime/mediatype.go	/^	var nextIsLiteral bool$/;"	v
nextItem	./text/template/parse/lex.go	/^func (l *lexer) nextItem() item {$/;"	f
nextJSCtx	./html/template/js.go	/^func nextJSCtx(s []byte, preceding jsCtx) jsCtx {$/;"	f
nextLine	./runtime/race/race_test.go	/^func nextLine(r *bufio.Reader) (string, error) {$/;"	f
nextNonSpace	./text/template/parse/parse.go	/^func (t *Tree) nextNonSpace() (token item) {$/;"	f
nextProtoMsg	./crypto/tls/handshake_messages.go	/^type nextProtoMsg struct {$/;"	t
nextRead	./encoding/base64/base64_test.go	/^type nextRead struct {$/;"	t
nextRune	./regexp/syntax/parse.go	/^func nextRune(s string) (c rune, t string, err error) {$/;"	f
nextStdChunk	./time/format.go	/^func nextStdChunk(layout string) (prefix string, std int, suffix string) {$/;"	f
nextSuffix	./io/ioutil/tempfile.go	/^func nextSuffix() string {$/;"	f
nextUint	./encoding/gob/decoder.go	/^func (dec *Decoder) nextUint() uint64 {$/;"	f
nextValue	./encoding/json/scanner.go	/^func nextValue(data []byte, scan *scanner) (value, rest []byte, err error) {$/;"	f
nextafter32	./math/all_test.go	/^var nextafter32 = []float32{$/;"	v
nextafter32SC	./math/all_test.go	/^var nextafter32SC = []float32{$/;"	v
nextafter64	./math/all_test.go	/^var nextafter64 = []float64{$/;"	v
nextafter64SC	./math/all_test.go	/^var nextafter64SC = []float64{$/;"	v
nextar	./cmd/link/internal/ld/lib.go	/^func nextar(bp *obj.Biobuf, off int64, a *ArHdr) int64 {$/;"	f
nextcode	./compress/flate/gen.go	/^	var nextcode [maxCodeLen]int$/;"	v
nextcode	./compress/flate/inflate.go	/^	var nextcode [maxCodeLen]int$/;"	v
nextcode	./syscall/unzip_nacl.go	/^	var nextcode [maxCodeLen]int$/;"	v
nextfileoff	./cmd/link/internal/ld/pe.go	/^var nextfileoff int$/;"	v
nextpc	./cmd/link/internal/ld/dwarf.go	/^	var nextpc uint32$/;"	v
nextport	./syscall/net_nacl.go	/^var nextport = 2$/;"	v
nextra	./net/http/transfer.go	/^			var nextra int64$/;"	v
nextsectoff	./cmd/link/internal/ld/pe.go	/^var nextsectoff int$/;"	v
nextt	./cmd/compile/internal/gc/dcl.go	/^	var nextt *Node$/;"	v
nflag	./cmd/nm/nm.go	/^type nflag int$/;"	t
ngotype	./cmd/compile/internal/gc/subr.go	/^func ngotype(n *Node) *Sym {$/;"	f
nhunk	./cmd/compile/internal/gc/go.go	/^var nhunk int32$/;"	v
nil	./builtin/builtin.go	/^var nil Type \/\/ Type must be a pointer, channel, func, interface, map, or slice type$/;"	v
nil	./runtime/cgo/libcgo.h	/^#define nil /;"	d
nilCloser	./net/http/fcgi/fcgi_test.go	/^type nilCloser struct {$/;"	t
nilFileMethodTests	./os/os_test.go	/^var nilFileMethodTests = []struct {$/;"	v
nilInterfaceValue	./encoding/gob/debug.go	/^func (deb *debugger) nilInterfaceValue(indent tab) int {$/;"	f
nilRegisterNumber	./cmd/asm/internal/arch/arch.go	/^func nilRegisterNumber(name string, n int16) (int16, bool) {$/;"	f
nilStruct	./encoding/xml/marshal_test.go	/^var nilStruct *Ship$/;"	v
nilfunc	./runtime/stack1.go	/^func nilfunc() {$/;"	f
nilinterequal	./runtime/alg.go	/^func nilinterequal(p, q unsafe.Pointer) bool {$/;"	f
nilinterhash	./runtime/alg.go	/^func nilinterhash(p unsafe.Pointer, h uintptr) uintptr {$/;"	f
nilonly	./cmd/compile/internal/gc/swt.go	/^	var nilonly string$/;"	v
nilopt	./cmd/compile/internal/gc/popt.go	/^func nilopt(firstp *obj.Prog) {$/;"	f
nilptr	./runtime/race/testdata/atomic_test.go	/^	var nilptr *int32$/;"	v
nilwalkback	./cmd/compile/internal/gc/popt.go	/^func nilwalkback(fcheck *Flow) {$/;"	f
nilwalkfwd	./cmd/compile/internal/gc/popt.go	/^func nilwalkfwd(fcheck *Flow) {$/;"	f
nkind	./cmd/link/internal/ld/macho.go	/^var nkind [NumSymKind]int$/;"	v
nl	./cmd/compile/internal/gc/const.go	/^		var nl *Node$/;"	v
nl	./cmd/compile/internal/gc/sinit.go	/^	var nl *Node$/;"	v
nl	./cmd/compile/internal/gc/walk.go	/^	var nl *Node$/;"	v
nl	./cmd/go/list.go	/^var nl = []byte{'\\n'}$/;"	v
nl	./encoding/pem/pem.go	/^var nl = []byte{'\\n'}$/;"	v
nl	./go/doc/comment.go	/^var nl = []byte("\\n")$/;"	v
nlen	./cmd/compile/internal/gc/cgen.go	/^				var nlen Node$/;"	v
nlen	./cmd/compile/internal/gc/cgen.go	/^		var nlen Node$/;"	v
nlimit	./go/printer/printer.go	/^func nlimit(n int) int {$/;"	f
nlines	./encoding/json/stream_test.go	/^func nlines(s string, n int) string {$/;"	f
nlmAlignOf	./syscall/netlink_linux.go	/^func nlmAlignOf(msglen int) int {$/;"	f
nlz	./cmd/compile/internal/big/arith.go	/^func nlz(x Word) uint {$/;"	f
nlz	./math/big/arith.go	/^func nlz(x Word) uint {$/;"	f
nlz64	./cmd/compile/internal/big/arith.go	/^func nlz64(x uint64) uint {$/;"	f
nlz64	./math/big/arith.go	/^func nlz64(x uint64) uint {$/;"	f
nm	./cmd/nm/nm.go	/^func nm(file string) {$/;"	f
nm1	./cmd/compile/internal/arm64/ggen.go	/^		var nm1 gc.Node$/;"	v
nm1	./cmd/compile/internal/ppc64/ggen.go	/^		var nm1 gc.Node$/;"	v
nmspinning	./runtime/proc1.go	/^	var nmspinning uint32$/;"	v
nn	./cmd/compile/internal/amd64/gsubr.go	/^		var nn *gc.Node$/;"	v
nn	./cmd/compile/internal/arm/gsubr.go	/^		var nn *gc.Node$/;"	v
nn	./cmd/compile/internal/arm/gsubr.go	/^	var nn *gc.Node$/;"	v
nn	./cmd/compile/internal/gc/dcl.go	/^	var nn *Node$/;"	v
nn	./cmd/compile/internal/gc/walk.go	/^	var nn *NodeList$/;"	v
nn	./cmd/compile/internal/gc/y.go	/^			var nn *NodeList$/;"	v
nn	./cmd/compile/internal/x86/gsubr.go	/^	var nn *gc.Node$/;"	v
nn	./cmd/link/internal/ld/dwarf.go	/^	var nn string$/;"	v
nn	./cmd/pprof/internal/report/report.go	/^			var nn *node$/;"	v
nn	./cmd/pprof/internal/report/report.go	/^		var nn *node$/;"	v
nn	./encoding/ascii85/ascii85.go	/^		var nn, nsrc, ndst int$/;"	v
nn	./encoding/asn1/marshal.go	/^	var nn int$/;"	v
nn	./io/io.go	/^		var nn int$/;"	v
nnonter	./cmd/yacc/yacc.go	/^var nnonter = -1 \/\/ the number of nonterminals$/;"	v
nnul	./debug/gosym/symtab.go	/^		var nnul int$/;"	v
nnul	./debug/plan9obj/file.go	/^		var nnul int$/;"	v
noAlloc	./reflect/all_test.go	/^func noAlloc(t *testing.T, n int, f func(int)) {$/;"	f
noBody	./net/http/readrequest_test.go	/^var noBody = ""$/;"	v
noBodyExpected	./net/http/transfer.go	/^func noBodyExpected(requestMethod string) bool {$/;"	f
noDeadline	./net/net.go	/^var noDeadline = time.Time{}$/;"	v
noError	./net/http/readrequest_test.go	/^var noError = ""$/;"	v
noNewlineLines	./bufio/scan_test.go	/^var noNewlineLines = []string{$/;"	v
noObjTool	./cmd/pprof/internal/plugin/plugin.go	/^type noObjTool struct{}$/;"	t
noRaceReturn	./runtime/race/testdata/regression_test.go	/^func noRaceReturn(c chan int) (a, b int) {$/;"	f
noReadFrom	./io/io_test.go	/^type noReadFrom struct {$/;"	t
noRows	./database/sql/driver/driver.go	/^type noRows struct{}$/;"	t
noSpace	./encoding/json/decode_test.go	/^func noSpace(c rune) rune {$/;"	f
noTrailer	./net/http/readrequest_test.go	/^var noTrailer Header = nil$/;"	v
noVCSSuffix	./cmd/go/vcs.go	/^func noVCSSuffix(match map[string]string) error {$/;"	f
noValue	./encoding/gob/decode.go	/^var noValue reflect.Value$/;"	v
nobanner	./make.bat	/^:nobanner$/;"	l
nobar	./runtime/asm_386.s	/^nobar:$/;"	l
nobar	./runtime/asm_amd64.s	/^nobar:$/;"	l
nobar	./runtime/asm_amd64p32.s	/^nobar:$/;"	l
nobar	./runtime/asm_arm.s	/^nobar:$/;"	l
nobar	./runtime/asm_arm64.s	/^nobar:$/;"	l
nobar	./runtime/asm_ppc64x.s	/^nobar:$/;"	l
nocache	./cmd/internal/obj/arm64/obj7.go	/^func nocache(p *obj.Prog) {$/;"	f
nocgo	./runtime/asm_arm64.s	/^nocgo:$/;"	l
nocgo	./runtime/asm_ppc64x.s	/^nocgo:$/;"	l
nocgo	./runtime/rt0_darwin_amd64.s	/^nocgo:$/;"	l
nocgo	./runtime/rt0_darwin_arm.s	/^nocgo:$/;"	l
nocgo	./runtime/rt0_linux_386.s	/^nocgo:$/;"	l
nocgo	./runtime/rt0_linux_amd64.s	/^nocgo:$/;"	l
nocgo	./runtime/rt0_linux_arm.s	/^nocgo:$/;"	l
nocgo	./runtime/tls_arm.s	/^nocgo:$/;"	l
nocgo	./runtime/tls_arm64.s	/^nocgo:$/;"	l
nocgo	./runtime/tls_ppc64x.s	/^nocgo:$/;"	l
nochange	./cmd/compile/internal/arm/peep.go	/^func nochange(r *gc.Flow, r2 *gc.Flow, p *obj.Prog) bool {$/;"	f
nocpuinfo	./runtime/asm_386.s	/^nocpuinfo:	$/;"	l
nocpuinfo	./runtime/asm_amd64.s	/^nocpuinfo:	$/;"	l
nocpuinfo	./runtime/asm_amd64p32.s	/^nocpuinfo:	$/;"	l
nod	./cmd/compile/internal/gc/cgen.go	/^		var nod Node$/;"	v
nod	./cmd/compile/internal/gc/cgen.go	/^	var nod Node$/;"	v
nod	./cmd/compile/internal/gc/pgen.go	/^	var nod Node$/;"	v
nod1	./cmd/compile/internal/gc/cgen.go	/^	var nod1 Node$/;"	v
nod1	./cmd/compile/internal/gc/obj.go	/^	var nod1 Node$/;"	v
nod1	./cmd/compile/internal/gc/pgen.go	/^	var nod1 Node$/;"	v
nod1	./cmd/compile/internal/gc/sinit.go	/^			var nod1 Node$/;"	v
nod2	./cmd/compile/internal/gc/cgen.go	/^		var nod2 Node$/;"	v
nodarg	./cmd/compile/internal/gc/gsubr.go	/^func nodarg(t *Type, fp int) *Node {$/;"	f
nodcplxlit	./cmd/compile/internal/gc/const.go	/^func nodcplxlit(r Val, i Val) *Node {$/;"	f
noddi	./cmd/compile/internal/amd64/cgen.go	/^	var noddi gc.Node$/;"	v
node	./cmd/cgo/out.go	/^		var node ast.Node$/;"	v
node	./cmd/compile/internal/gc/plive.go	/^	var node *Node$/;"	v
node	./cmd/compile/internal/gc/reg.go	/^	var node *Node$/;"	v
node	./cmd/pprof/internal/report/report.go	/^type node struct {$/;"	t
nodeEscState	./cmd/compile/internal/gc/esc.go	/^func (e *EscState) nodeEscState(n *Node) *NodeEscState {$/;"	f
nodeFmt	./go/doc/doc_test.go	/^func nodeFmt(node interface{}, fset *token.FileSet) string {$/;"	f
nodeInfo	./cmd/pprof/internal/report/report.go	/^type nodeInfo struct {$/;"	t
nodeList	./go/ast/commentmap.go	/^func nodeList(n Node) []Node {$/;"	f
nodeMap	./cmd/pprof/internal/report/report.go	/^type nodeMap map[nodeInfo]*node$/;"	t
nodeOrder	./cmd/pprof/internal/report/report.go	/^type nodeOrder int$/;"	t
nodeQueue	./go/types/initorder.go	/^type nodeQueue []*objNode$/;"	t
nodeSize	./go/printer/nodes.go	/^func (p *printer) nodeSize(n ast.Node, maxSize int) (size int) {$/;"	f
nodeSorter	./cmd/pprof/internal/report/report.go	/^type nodeSorter struct {$/;"	t
nodeStack	./go/ast/commentmap.go	/^type nodeStack []Node$/;"	t
nodedump	./cmd/compile/internal/gc/fmt.go	/^func nodedump(n *Node, flag int) string {$/;"	f
nodefmt	./cmd/compile/internal/gc/fmt.go	/^func nodefmt(n *Node, flag int) string {$/;"	f
nodes	./cmd/pprof/internal/report/report.go	/^type nodes []*node$/;"	t
nodes	./go/ast/ast.go	/^\/\/ Pos and End implementations for expression\/type nodes.$/;"	t
nodes	./go/ast/ast.go	/^\/\/ There are 3 main classes of nodes: Expressions and type nodes,$/;"	t
nodes	./go/ast/ast.go	/^\/\/ exprNode() ensures that only expression\/type nodes can be$/;"	t
nodes	./runtime/lfstack_test.go	/^	var nodes []*MyNode$/;"	v
nodesPerSymbol	./cmd/pprof/internal/report/report.go	/^func nodesPerSymbol(ns nodes, symbols []*objSymbol) map[*objSymbol]nodes {$/;"	f
nodfconst	./cmd/compile/internal/gc/cplx.go	/^func nodfconst(n *Node, t *Type, fval *Mpflt) {$/;"	f
nodfltconst	./cmd/compile/internal/gc/subr.go	/^func nodfltconst(v *Mpflt) *Node {$/;"	f
nodfp	./cmd/compile/internal/gc/go.go	/^var nodfp *Node$/;"	v
nodi	./cmd/compile/internal/gc/cgen.go	/^	var nodi Node$/;"	v
nodl	./cmd/compile/internal/amd64/cgen.go	/^	var nodl gc.Node$/;"	v
nodl	./cmd/compile/internal/gc/gen.go	/^	var nodl Node$/;"	v
nodlit	./cmd/compile/internal/gc/const.go	/^func nodlit(v Val) *Node {$/;"	f
nodnil	./cmd/compile/internal/gc/subr.go	/^func nodnil() *Node {$/;"	f
nodo	./cmd/compile/internal/gc/cgen.go	/^	var nodo Node$/;"	v
nodr	./cmd/compile/internal/amd64/cgen.go	/^	var nodr gc.Node$/;"	v
nodr	./cmd/compile/internal/gc/cgen.go	/^		var nodr Node$/;"	v
nodr	./cmd/compile/internal/gc/cgen.go	/^	var nodr Node$/;"	v
nodr	./cmd/compile/internal/gc/gen.go	/^	var nodr Node$/;"	v
nodsi	./cmd/compile/internal/amd64/cgen.go	/^	var nodsi gc.Node$/;"	v
nodsp	./cmd/compile/internal/gc/cgen.go	/^	var nodsp Node$/;"	v
noescape	./runtime/stubs.go	/^func noescape(p unsafe.Pointer) unsafe.Pointer {$/;"	f
noext	./go/internal/gcimporter/gcimporter.go	/^	var noext string$/;"	v
nofollow	./cmd/internal/obj/x86/obj6.go	/^func nofollow(a int) bool {$/;"	f
nog	./runtime/sys_linux_386.s	/^nog:$/;"	l
nog	./runtime/sys_linux_amd64.s	/^nog:$/;"	l
nog	./runtime/sys_linux_arm.s	/^nog:$/;"	l
nog	./runtime/sys_linux_arm64.s	/^nog:$/;"	l
nog	./runtime/sys_linux_ppc64x.s	/^nog:$/;"	l
nog	./runtime/sys_nacl_amd64p32.s	/^nog:$/;"	l
nog	./runtime/sys_nacl_arm.s	/^nog:$/;"	l
noinst_pkgs	./cmd/compile/internal/gc/racewalk.go	/^var noinst_pkgs = []string{"sync", "sync\/atomic"}$/;"	v
nointerface	./cmd/compile/internal/gc/go.go	/^var nointerface bool$/;"	v
nokeys	./cmd/compile/internal/gc/typecheck.go	/^func nokeys(l *NodeList) bool {$/;"	f
nolocal	./make.bat	/^:nolocal$/;"	l
nolocal	./run.bat	/^:nolocal$/;"	l
nolocalimports	./cmd/compile/internal/gc/go.go	/^var nolocalimports int$/;"	v
nolook	./cmd/yacc/yacc.go	/^var nolook = 0  \/\/ flag to turn off lookahead computations$/;"	v
nomatchnlTests	./regexp/syntax/parse_test.go	/^var nomatchnlTests = []parseTest{$/;"	v
nonAlphaNumRx	./go/doc/comment.go	/^var nonAlphaNumRx = regexp.MustCompile(`[^a-zA-Z0-9]`)$/;"	v
nonEmptyInterface	./reflect/value.go	/^type nonEmptyInterface struct {$/;"	t
nonEmptyStruct	./reflect/all_test.go	/^type nonEmptyStruct struct {$/;"	t
nonExistentPaths	./os/exec/lp_test.go	/^var nonExistentPaths = []string{$/;"	v
nonNilInterfaceValue	./encoding/gob/debug.go	/^func (deb *debugger) nonNilInterfaceValue(indent tab, nameLen int) {$/;"	f
nonSpace	./encoding/json/stream.go	/^func nonSpace(b []byte) bool {$/;"	f
nonStrictTokens	./encoding/xml/xml_test.go	/^var nonStrictTokens = []Token{$/;"	v
nonStringEntity	./encoding/xml/xml_test.go	/^var nonStringEntity = map[string]string{"": "oops!", "0a": "oops!"}$/;"	v
nonZeroRandomBytes	./crypto/rsa/pkcs1v15.go	/^func nonZeroRandomBytes(s []byte, rand io.Reader) (err error) {$/;"	f
nonZeroToAllOnes	./crypto/elliptic/p256.go	/^func nonZeroToAllOnes(x uint32) uint32 {$/;"	f
non_dcl_stmt	./cmd/compile/internal/gc/go.y	/^non_dcl_stmt:$/;"	l
non_expr_type	./cmd/compile/internal/gc/go.y	/^non_expr_type:$/;"	l
non_recvchantype	./cmd/compile/internal/gc/go.y	/^non_recvchantype:$/;"	l
nonblank	./cmd/api/goapi.go	/^	var nonblank []string$/;"	v
nonce	./crypto/cipher/benchmark_test.go	/^	var nonce [12]byte$/;"	v
nonemptyinterface	./cmd/vet/testdata/print.go	/^var nonemptyinterface = interface {$/;"	v
nonleaf	./runtime/proc_test.go	/^func nonleaf(stop chan int) bool {$/;"	f
nonlooping	./cmd/compile/internal/gc/esc.go	/^var nonlooping Label$/;"	v
nonnegconst	./cmd/compile/internal/gc/const.go	/^func nonnegconst(n *Node) int {$/;"	f
nontrst	./cmd/yacc/yacc.go	/^var nontrst []Symb$/;"	v
nonzero	./net/interface_linux.go	/^			var nonzero bool$/;"	v
noopConn	./net/http/serve_test.go	/^type noopConn struct{}$/;"	t
nop	./cmd/fix/fix.go	/^func nop(interface{}) {}$/;"	f
nop	./cmd/internal/obj/x86/asm6.go	/^var nop = [][16]uint8{$/;"	v
nop	./regexp/syntax/compile.go	/^func (c *compiler) nop() frag {$/;"	f
nop	./runtime/stubs.go	/^func nop() \/\/ call to prevent inlining of function body$/;"	f
nopCloser	./archive/zip/writer.go	/^type nopCloser struct {$/;"	t
nopCloser	./io/ioutil/ioutil.go	/^type nopCloser struct {$/;"	t
nopWriteCloser	./net/http/fcgi/fcgi_test.go	/^type nopWriteCloser struct {$/;"	t
nopkg	./cmd/compile/internal/gc/subr.go	/^var nopkg = &Pkg{$/;"	v
noprof	./cmd/vet/testdata/asm.go	/^func noprof(x int)$/;"	f
noptr	./cmd/link/internal/ld/data.go	/^	var noptr *Section$/;"	v
noptr	./cmd/vet/testdata/asm.go	/^func noptr(x int)$/;"	f
noptrbss	./cmd/link/internal/ld/data.go	/^	var noptrbss *Section$/;"	v
nor	./go/types/typexpr.go	/^\/\/ If e is neither a type nor nil, typOrNil returns Typ[Invalid].$/;"	t
norebuild	./run.bat	/^:norebuild$/;"	l
noreturn_symlist	./cmd/compile/internal/gc/popt.go	/^var noreturn_symlist [10]*Sym$/;"	v
norig	./cmd/compile/internal/gc/const.go	/^	var norig *Node$/;"	v
norm	./cmd/compile/internal/big/bits_test.go	/^func (x Bits) norm() Bits {$/;"	f
norm	./cmd/compile/internal/big/int_test.go	/^func norm(x nat) nat {$/;"	f
norm	./cmd/compile/internal/big/nat.go	/^func (z nat) norm() nat {$/;"	f
norm	./cmd/compile/internal/big/rat.go	/^func (z *Rat) norm() *Rat {$/;"	f
norm	./math/big/bits_test.go	/^func (x Bits) norm() Bits {$/;"	f
norm	./math/big/int_test.go	/^func norm(x nat) nat {$/;"	f
norm	./math/big/nat.go	/^func (z nat) norm() nat {$/;"	f
norm	./math/big/rat.go	/^func (z *Rat) norm() *Rat {$/;"	f
norm	./time/time.go	/^func norm(hi, lo, base int) (nhi, nlo int) {$/;"	f
normComplex	./go/constant/value.go	/^func normComplex(re, im *big.Rat) Value {$/;"	f
normFloat	./go/constant/value.go	/^func normFloat(x *big.Rat) Value {$/;"	f
normInt	./go/constant/value.go	/^func normInt(x *big.Int) Value {$/;"	f
normalize	./cmd/internal/obj/x86/obj6_test.go	/^func normalize(s string) string {$/;"	f
normalize	./math/bits.go	/^func normalize(x float64) (y float64, exp int) {$/;"	f
normalizeDir	./syscall/exec_windows.go	/^func normalizeDir(dir string) (name string, err error) {$/;"	f
nosave	./runtime/asm_amd64.s	/^nosave:$/;"	l
nosplit	./cmd/vet/testdata/asm.go	/^func nosplit(x int)$/;"	f
nosse2	./runtime/memclr_386.s	/^nosse2:$/;"	l
nosse2	./runtime/memmove_386.s	/^nosse2:$/;"	l
noswitch	./runtime/asm_386.s	/^noswitch:$/;"	l
noswitch	./runtime/asm_amd64.s	/^noswitch:$/;"	l
noswitch	./runtime/asm_amd64p32.s	/^noswitch:$/;"	l
noswitch	./runtime/asm_arm.s	/^noswitch:$/;"	l
noswitch	./runtime/asm_arm64.s	/^noswitch:$/;"	l
noswitch	./runtime/asm_ppc64x.s	/^noswitch:$/;"	l
noswitch	./runtime/sys_solaris_amd64.s	/^noswitch:$/;"	l
not	./bytes/bytes_test.go	/^func not(p predicate) predicate {$/;"	f
not	./cmd/cgo/out.go	/^	error_(e.Pos(), "Go type not supported in export: %s", gofmt(e))$/;"	t
not	./cmd/compile/internal/gc/y.go	/^	{124, 25, "nested func not allowed"},$/;"	f
not	./encoding/gob/encode.go	/^		errorf("type not registered for interface: %s", ut.base)$/;"	t
not	./encoding/xml/marshal_test.go	/^		t.Errorf("enc.EncodeToken: invalid type not caught")$/;"	t
not	./fmt/scan.go	/^			s.errorString("type not a pointer: " + val.Type().String())$/;"	t
not	./go/doc/reader.go	/^			\/\/ embedded but original receiver type not exported$/;"	t
not	./go/doc/reader.go	/^	\/\/ type not found - add one without declaration$/;"	t
not	./go/types/typexpr.go	/^					err = "type not defined in this package"$/;"	t
not	./html/template/escape_test.go	/^			"HTML doctype not case-insensitive",$/;"	t
not	./html/template/escape_test.go	/^			"HTML doctype not normalized",$/;"	t
not	./net/rpc/server.go	/^				log.Println("method", mname, "reply type not a pointer:", replyType)$/;"	t
not	./net/rpc/server.go	/^				log.Println("method", mname, "reply type not exported:", replyType)$/;"	t
not	./net/rpc/server.go	/^				log.Println(mname, "argument type not exported:", argType)$/;"	t
not	./reflect/all_test.go	/^	\/\/ check construction and use of type not in binary$/;"	t
not	./runtime/os2_nacl.go	/^	_ESOCKTNOSUPPORT = 94  \/* Socket type not supported *\/$/;"	t
not	./strings/strings_test.go	/^func not(p predicate) predicate {$/;"	f
not	./syscall/tables_nacl.go	/^	ESOCKTNOSUPPORT Errno = 94  \/* Socket type not supported *\/$/;"	t
not	./syscall/tables_nacl.go	/^	ESOCKTNOSUPPORT: "Socket type not supported",$/;"	t
not	./syscall/zerrors_darwin_386.go	/^	44:  "socket type not supported",$/;"	t
not	./syscall/zerrors_darwin_amd64.go	/^	44:  "socket type not supported",$/;"	t
not	./syscall/zerrors_darwin_arm.go	/^	44:  "socket type not supported",$/;"	t
not	./syscall/zerrors_darwin_arm64.go	/^	44:  "socket type not supported",$/;"	t
not	./syscall/zerrors_dragonfly_amd64.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_freebsd_386.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_freebsd_amd64.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_freebsd_arm.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_linux_386.go	/^	94:  "socket type not supported",$/;"	t
not	./syscall/zerrors_linux_amd64.go	/^	94:  "socket type not supported",$/;"	t
not	./syscall/zerrors_linux_arm.go	/^	94:  "socket type not supported",$/;"	t
not	./syscall/zerrors_linux_arm64.go	/^	94:  "socket type not supported",$/;"	t
not	./syscall/zerrors_linux_ppc64.go	/^	94:  "socket type not supported",$/;"	t
not	./syscall/zerrors_linux_ppc64le.go	/^	94:  "socket type not supported",$/;"	t
not	./syscall/zerrors_netbsd_386.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_netbsd_amd64.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_netbsd_arm.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_openbsd_386.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_openbsd_amd64.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_openbsd_arm.go	/^	44: "socket type not supported",$/;"	t
not	./syscall/zerrors_solaris_amd64.go	/^	121: "socket type not supported",$/;"	t
not	./syscall/zerrors_windows.go	/^	ESOCKTNOSUPPORT - APPLICATION_ERROR: "socket type not supported",$/;"	t
not	./text/template/funcs.go	/^func not(arg interface{}) (truth bool) {$/;"	f
notAFunction	./text/template/exec.go	/^func (s *state) notAFunction(args []parse.Node, final reflect.Value) {$/;"	f
notBacktrack	./regexp/backtrack.go	/^var notBacktrack *bitState = nil$/;"	v
notBefore	./crypto/tls/generate_cert.go	/^	var notBefore time.Time$/;"	v
notEOF	./fmt/scan.go	/^func (s *ss) notEOF() {$/;"	f
notEncodableTimes	./time/time_test.go	/^var notEncodableTimes = []struct {$/;"	v
notExported	./go/doc/testdata/b.go	/^type notExported int$/;"	t
notFinite	./math/exp_amd64.s	/^notFinite:$/;"	l
notJSONEncodableTimes	./time/time_test.go	/^var notJSONEncodableTimes = []struct {$/;"	v
notNegInf	./math/exp_amd64.s	/^notNegInf: \/\/ NaN or +Inf, return x$/;"	l
notOnePass	./regexp/onepass.go	/^var notOnePass *onePassProg = nil$/;"	v
notPercentDStruct	./cmd/vet/testdata/print.go	/^type notPercentDStruct struct {$/;"	t
notPercentDV	./cmd/vet/testdata/print.go	/^var notPercentDV notPercentDStruct$/;"	v
notSpace	./fmt/scan.go	/^func notSpace(r rune) bool {$/;"	f
notTests	./cmd/compile/internal/big/int_test.go	/^var notTests = []struct {$/;"	v
notTests	./math/big/int_test.go	/^var notTests = []struct {$/;"	v
not_finite	./math/exp2_386.s	/^not_finite:$/;"	l
not_finite	./math/exp_386.s	/^not_finite:$/;"	l
not_finite	./math/expm1_386.s	/^not_finite:$/;"	l
not_finite	./math/hypot_386.s	/^not_finite:$/;"	l
not_neginf	./math/exp2_386.s	/^not_neginf:$/;"	l
not_neginf	./math/exp_386.s	/^not_neginf:$/;"	l
not_neginf	./math/expm1_386.s	/^not_neginf:$/;"	l
notab	./regexp/exec_test.go	/^var notab = MustCompilePOSIX(`[^\\t]+`)$/;"	v
notags	./runtime/mkduff.go	/^func notags(w io.Writer) { fmt.Fprintln(w) }$/;"	f
note	./regexp/testdata/testregex.c	/^note(unsigned long level, char* msg, unsigned long skip, unsigned long test)$/;"	f	file:
note	./runtime/runtime2.go	/^type note struct {$/;"	t
noteBodies	./go/doc/reader.go	/^func noteBodies(notes []*Note) []string {$/;"	f
noteClientGone	./net/http/server.go	/^func (c *conn) noteClientGone() {$/;"	f
noteData	./runtime/sigqueue_plan9.go	/^type noteData struct {$/;"	t
noteEOFReader	./net/http/transport.go	/^type noteEOFReader struct {$/;"	t
noteQueue	./runtime/sigqueue_plan9.go	/^type noteQueue struct {$/;"	t
noteUnusedDriverStatement	./database/sql/sql.go	/^func (db *DB) noteUnusedDriverStatement(c *driverConn, si driver.Stmt) {$/;"	f
noteclear	./runtime/lock_futex.go	/^func noteclear(n *note) {$/;"	f
noteclear	./runtime/lock_sema.go	/^func noteclear(n *note) {$/;"	f
noted	./runtime/os_plan9.go	/^func noted(mode int32) int32$/;"	f
notefile	./runtime/os1_plan9.go	/^var notefile = []byte("\/note\\x00")$/;"	v
noteq	./runtime/asm_ppc64x.s	/^noteq:$/;"	l
notequal	./runtime/asm_arm.s	/^notequal:$/;"	l
notequal	./runtime/asm_arm64.s	/^notequal:$/;"	l
notesleep	./runtime/lock_futex.go	/^func notesleep(n *note) {$/;"	f
notesleep	./runtime/lock_sema.go	/^func notesleep(n *note) {$/;"	f
notest	./cmd/go/test.go	/^func (b *builder) notest(a *action) error {$/;"	f
notetsleep	./runtime/lock_futex.go	/^func notetsleep(n *note, ns int64) bool {$/;"	f
notetsleep	./runtime/lock_sema.go	/^func notetsleep(n *note, ns int64) bool {$/;"	f
notetsleep_internal	./runtime/lock_futex.go	/^func notetsleep_internal(n *note, ns int64) bool {$/;"	f
notetsleep_internal	./runtime/lock_sema.go	/^func notetsleep_internal(n *note, ns int64, gp *g, deadline int64) bool {$/;"	f
notetsleepg	./runtime/lock_futex.go	/^func notetsleepg(n *note, ns int64) bool {$/;"	f
notetsleepg	./runtime/lock_sema.go	/^func notetsleepg(n *note, ns int64) bool {$/;"	f
notewakeup	./runtime/lock_futex.go	/^func notewakeup(n *note) {$/;"	f
notewakeup	./runtime/lock_sema.go	/^func notewakeup(n *note) {$/;"	f
notfound	./runtime/asm_arm64.s	/^notfound:$/;"	l
notfound	./runtime/asm_ppc64x.s	/^notfound:$/;"	l
notify	./runtime/os_plan9.go	/^func notify(fn unsafe.Pointer) int32$/;"	f
notintel	./runtime/asm_386.s	/^notintel:$/;"	l
notintel	./runtime/asm_amd64.s	/^notintel:$/;"	l
notletterTest	./unicode/letter_test.go	/^var notletterTest = []rune{$/;"	v
notls	./runtime/sys_nacl_amd64p32.s	/^notls:$/;"	l
notneg	./runtime/asm_arm64.s	/^notneg:$/;"	l
notstringer	./cmd/vet/testdata/print.go	/^type notstringer struct {$/;"	t
notstringerarray	./cmd/vet/testdata/print.go	/^type notstringerarray [4]float64$/;"	t
notstringerarrayv	./cmd/vet/testdata/print.go	/^var notstringerarrayv notstringerarray$/;"	v
notstringerv	./cmd/vet/testdata/print.go	/^var notstringerv notstringer$/;"	v
notupperTest	./unicode/letter_test.go	/^var notupperTest = []rune{$/;"	v
now	./cmd/api/testdata/src/pkg/p1/p1.go	/^	var now Time$/;"	v
now	./database/sql/driver/types_test.go	/^var now = time.Now()$/;"	v
now	./runtime/mgc.go	/^	var now, pauseStart, pauseNS int64$/;"	v
now	./syscall/fs_nacl.go	/^func now() (sec int64, nsec int32)$/;"	f
now	./time/time.go	/^func now() (sec int64, nsec int32)$/;"	f
np	./cmd/internal/obj/x86/asm6.go	/^		var np int$/;"	v
np	./debug/gosym/symtab.go	/^			var np, na int$/;"	v
nprod	./cmd/yacc/yacc.go	/^var nprod = 1      \/\/ number of productions$/;"	v
nr	./cmd/compile/internal/amd64/gsubr.go	/^	var nr gc.Node$/;"	v
nr	./cmd/compile/internal/gc/const.go	/^		var nr *Node$/;"	v
nr	./cmd/compile/internal/gc/sinit.go	/^	var nr *Node$/;"	v
nr	./cmd/compile/internal/gc/walk.go	/^	var nr *Node$/;"	v
nreg	./cmd/compile/internal/gc/reg.go	/^	var nreg int$/;"	v
nrgba64Model	./image/color/color.go	/^func nrgba64Model(c Color) Color {$/;"	f
nrgbaModel	./image/color/color.go	/^func nrgbaModel(c Color) Color {$/;"	f
ns	./cmd/compile/internal/gc/reflect.go	/^		var ns *Sym$/;"	v
ns	./database/sql/convert_test.go	/^	var ns NullString$/;"	v
ns	./encoding/gob/encoder_test.go	/^	var ns NonStruct$/;"	v
ns	./syscall/srpc_nacl.go	/^	var ns int32 = -1$/;"	v
nsClient	./syscall/srpc_nacl.go	/^var nsClient = nsConnect()$/;"	v
nsConnect	./syscall/srpc_nacl.go	/^func nsConnect() *srpcClient {$/;"	f
nsDurationTests	./time/time_test.go	/^var nsDurationTests = []struct {$/;"	v
nsPerOp	./go/doc/testdata/benchmark.go	/^func (b *B) nsPerOp() int64 {$/;"	f
nsPerOp	./testing/benchmark.go	/^func (b *B) nsPerOp() int64 {$/;"	f
nsString	./net/lookup_test.go	/^func nsString(nss []*NS) string {$/;"	f
nsavederrors	./cmd/compile/internal/gc/go.go	/^var nsavederrors int$/;"	v
nsclean	./cmd/compile/internal/arm/gsubr.go	/^var nsclean int$/;"	v
nsclean	./cmd/compile/internal/x86/gsubr.go	/^var nsclean int$/;"	v
nsec	./runtime/os1_netbsd.go	/^		var nsec int32$/;"	v
nsec	./runtime/os1_openbsd.go	/^		var nsec int32$/;"	v
nsec	./runtime/os_plan9.go	/^func nsec(*int64) int64$/;"	f
nsec	./syscall/syscall_plan9.go	/^func nsec() int64 {$/;"	f
nsecs	./runtime/os1_darwin.go	/^		var nsecs int32$/;"	v
nsect	./cmd/link/internal/ld/macho.go	/^var nsect int$/;"	v
nseg	./cmd/link/internal/ld/macho.go	/^var nseg int$/;"	v
nslookup	./net/lookup_windows_test.go	/^func nslookup(qtype, name string) (string, error) {$/;"	f
nslookupCNAME	./net/lookup_windows_test.go	/^func nslookupCNAME(name string) (cname string, err error) {$/;"	f
nslookupMX	./net/lookup_windows_test.go	/^func nslookupMX(name string) (mx []*MX, err error) {$/;"	f
nslookupNS	./net/lookup_windows_test.go	/^func nslookupNS(name string) (ns []*NS, err error) {$/;"	f
nslookupTXT	./net/lookup_windows_test.go	/^func nslookupTXT(name string) (txt []string, err error) {$/;"	f
nslookupTestServers	./net/lookup_windows_test.go	/^var nslookupTestServers = []string{"mail.golang.com", "gmail.com"}$/;"	v
nsname	./encoding/xml/xml.go	/^func (d *Decoder) nsname() (name Name, ok bool) {$/;"	f
nsortsym	./cmd/link/internal/ld/macho.go	/^var nsortsym int$/;"	v
nsp	./encoding/gob/encoder_test.go	/^	var nsp NonStruct$/;"	v
nssConf	./net/nss.go	/^type nssConf struct {$/;"	t
nssCriterion	./net/nss.go	/^type nssCriterion struct {$/;"	t
nssHostTest	./net/conf_test.go	/^type nssHostTest struct {$/;"	t
nssSource	./net/nss.go	/^type nssSource struct {$/;"	t
nssStr	./net/conf_test.go	/^func nssStr(s string) *nssConf { return parseNSSConf(strings.NewReader(s)) }$/;"	f
nstate	./cmd/yacc/yacc.go	/^var nstate = 0                      \/\/ number of states$/;"	v
nstk	./runtime/mprof.go	/^	var nstk int$/;"	v
nstk	./runtime/trace.go	/^		var nstk int$/;"	v
nswap	./cmd/compile/internal/x86/gsubr.go	/^func nswap(a *gc.Node, b *gc.Node) {$/;"	f
nsyntaxerrors	./cmd/compile/internal/gc/go.go	/^var nsyntaxerrors int$/;"	v
nt	./cmd/compile/internal/arm/ggen.go	/^		var nt gc.Node$/;"	v
nt	./cmd/compile/internal/gc/cgen.go	/^			var nt Node$/;"	v
nt	./cmd/compile/internal/gc/subr.go	/^	var nt *Type$/;"	v
nt	./cmd/compile/internal/x86/ggen.go	/^		var nt gc.Node$/;"	v
nt	./cmd/compile/internal/x86/ggen.go	/^	var nt gc.Node$/;"	v
nt_generation	./runtime/sys_darwin_386.s	/^#define	nt_generation	0x68$/;"	d
nt_generation	./runtime/sys_darwin_amd64.s	/^#define	nt_generation	0x68$/;"	d
nt_ns_base	./runtime/sys_darwin_386.s	/^#define	nt_ns_base	0x60$/;"	d
nt_ns_base	./runtime/sys_darwin_amd64.s	/^#define	nt_ns_base	0x60$/;"	d
nt_scale	./runtime/sys_darwin_386.s	/^#define	nt_scale	0x58$/;"	d
nt_scale	./runtime/sys_darwin_amd64.s	/^#define	nt_scale	0x58$/;"	d
nt_shift	./runtime/sys_darwin_386.s	/^#define	nt_shift	0x5c$/;"	d
nt_shift	./runtime/sys_darwin_amd64.s	/^#define	nt_shift	0x5c$/;"	d
nt_tsc_base	./runtime/sys_darwin_386.s	/^#define	nt_tsc_base	0x50$/;"	d
nt_tsc_base	./runtime/sys_darwin_amd64.s	/^#define	nt_tsc_base	0x50$/;"	d
ntmp	./cmd/compile/internal/amd64/gsubr.go	/^		var ntmp gc.Node$/;"	v
ntmp	./cmd/compile/internal/arm64/gsubr.go	/^		var ntmp gc.Node$/;"	v
ntmp	./cmd/compile/internal/arm64/gsubr.go	/^	var ntmp gc.Node$/;"	v
ntmp	./cmd/compile/internal/ppc64/gsubr.go	/^		var ntmp gc.Node$/;"	v
ntmp	./cmd/compile/internal/ppc64/gsubr.go	/^	var ntmp gc.Node$/;"	v
ntokens	./cmd/yacc/yacc.go	/^var ntokens = 0 \/\/ number of tokens$/;"	v
nts	./cmd/pprof/internal/report/report.go	/^	var nts tags$/;"	v
ntstates	./cmd/yacc/yacc.go	/^var ntstates []int                 \/\/ states generated by nonterminal gotos$/;"	v
ntyp	./reflect/type.go	/^				var ntyp *rtype$/;"	v
ntype	./cmd/compile/internal/gc/go.y	/^ntype:$/;"	l
ntypeStrings	./debug/elf/elf.go	/^var ntypeStrings = []intName{$/;"	v
ntypecheckdeftype	./cmd/compile/internal/gc/typecheck.go	/^var ntypecheckdeftype int$/;"	v
ntypes	./cmd/yacc/yacc.go	/^var ntypes int             \/\/ number of types defined$/;"	v
nudge	./html/template/escape.go	/^func nudge(c context) context {$/;"	f
null	./net/rpc/jsonrpc/server.go	/^var null = json.RawMessage([]byte("null"))$/;"	v
nullDir	./syscall/dir_plan9.go	/^var nullDir = Dir{$/;"	v
nullFile	./syscall/fs_nacl.go	/^type nullFile struct{}$/;"	t
nullLiteral	./encoding/json/decode.go	/^var nullLiteral = []byte("null")$/;"	v
nullTestRow	./database/sql/sql_test.go	/^type nullTestRow struct {$/;"	t
nullTestRun	./database/sql/sql_test.go	/^func nullTestRun(t *testing.T, spec nullTestSpec) {$/;"	f
nullTestSpec	./database/sql/sql_test.go	/^type nullTestSpec struct {$/;"	t
numArgsInSignature	./cmd/vet/types.go	/^func (f *File) numArgsInSignature(call *ast.CallExpr) int {$/;"	f
numBytes	./archive/tar/reader.go	/^func (rfr *regFileReader) numBytes() int64 {$/;"	f
numBytes	./archive/tar/reader.go	/^func (sfr *sparseFileReader) numBytes() int64 {$/;"	f
numBytes	./archive/tar/reader.go	/^func (tr *Reader) numBytes() int64 {$/;"	f
numBytesReader	./archive/tar/reader.go	/^type numBytesReader interface {$/;"	t
numCodegens	./compress/flate/huffman_bit_writer.go	/^	var numCodegens int$/;"	v
numDeps	./database/sql/sql_test.go	/^func (db *DB) numDeps() int {$/;"	f
numDepsPollUntil	./database/sql/sql_test.go	/^func (db *DB) numDepsPollUntil(want int, d time.Duration) int {$/;"	f
numErrorTest	./strconv/atoi_test.go	/^type numErrorTest struct {$/;"	t
numErrorTests	./strconv/atoi_test.go	/^var numErrorTests = []numErrorTest{$/;"	v
numFreeConns	./database/sql/sql_test.go	/^func (db *DB) numFreeConns() int {$/;"	f
numImport	./cmd/compile/internal/gc/export.go	/^var numImport = make(map[string]int)$/;"	v
numKeys	./cmd/pprof/internal/profile/encode.go	/^		var numKeys []string$/;"	v
numLeadingCRorLF	./net/http/server.go	/^func numLeadingCRorLF(v []byte) (n int) {$/;"	f
numOpenFDS	./os/exec/exec_test.go	/^func numOpenFDS(t *testing.T) (n int, lsof []byte) {$/;"	f
numOpenFDsAndroid	./os/exec/exec_test.go	/^func numOpenFDsAndroid(t *testing.T) (n int, lsof []byte) {$/;"	f
numPrepares	./database/sql/sql_test.go	/^func numPrepares(t *testing.T, db *DB) int {$/;"	f
numReqs	./net/http/serve_test.go	/^		var numReqs int$/;"	v
numReqs	./net/http/serve_test.go	/^	var numReqs int$/;"	v
numaux	./cmd/link/internal/ld/ldpe.go	/^	var numaux int$/;"	v
number	./encoding/gob/doc.go	/^	04	\/\/ the type number, 2, represents an integer$/;"	t
number	./encoding/gob/doc.go	/^	ff 82	\/\/ the type number, 65 (1 byte (-FF) followed by 65<<1)$/;"	t
number	./go/internal/gccgoimporter/parser.go	/^		p.errorf("expected type number, got %s (%q)", scanner.TokenString(p.tok), p.lit)$/;"	t
number	./go/internal/gccgoimporter/parser.go	/^	typeMap  map[int]types.Type        \/\/ type number -> type$/;"	t
numberTest	./text/template/parse/parse_test.go	/^type numberTest struct {$/;"	t
numberTests	./encoding/json/decode_test.go	/^var numberTests = []struct {$/;"	v
numberTests	./text/template/parse/parse_test.go	/^var numberTests = []numberTest{$/;"	v
numberType	./encoding/json/decode.go	/^var numberType = reflect.TypeOf(Number(""))$/;"	v
numbers	./cmd/compile/internal/gc/reg.go	/^\/\/ Bits represents a set of Vars, stored as a bit set of var numbers$/;"	v
numbers	./reflect/all_test.go	/^		var numbers = []string{$/;"	v
numbval	./cmd/yacc/yacc.go	/^var numbval int    \/\/ value of an input number$/;"	v
numelfsym	./cmd/link/internal/ld/symtab.go	/^var numelfsym int = 1 \/\/ 0 is reserved$/;"	v
numerators	./runtime/vlop_arm_test.go	/^var numerators = randomNumerators()$/;"	v
numeric	./archive/tar/writer.go	/^func (tw *Writer) numeric(b []byte, x int64, allowPax bool, paxKeyword string, paxHeaders map[string]string) {$/;"	f
numlive	./cmd/compile/internal/gc/plive.go	/^	var numlive int32$/;"	v
nv	./cmd/compile/internal/gc/sinit.go	/^		var nv *Node$/;"	v
nw	./archive/tar/writer.go	/^		var nw int$/;"	v
nw	./os/file_windows.go	/^		var nw uint32$/;"	v
nw	./strings/replace.go	/^		var nw int$/;"	v
nx	./cmd/compile/internal/gc/subr.go	/^		var nx *Node$/;"	v
nxti	./cmd/yacc/yacc.go	/^func nxti() int {$/;"	f
nz	./cmd/compile/internal/arm/ggen.go	/^	var nz gc.Node$/;"	v
nz	./cmd/compile/internal/arm64/ggen.go	/^			var nz gc.Node$/;"	v
nz	./cmd/compile/internal/ppc64/ggen.go	/^			var nz gc.Node$/;"	v
nz	./cmd/compile/internal/x86/ggen.go	/^		var nz gc.Node$/;"	v
o1	./cmd/internal/obj/arm/asm5.go	/^	var o1 uint32$/;"	v
o1	./cmd/internal/obj/arm64/asm7.go	/^	var o1 int32$/;"	v
o1	./cmd/link/internal/ppc64/asm.go	/^			var o1 uint32$/;"	v
o1	./cmd/link/internal/ppc64/asm.go	/^		var o1 uint32$/;"	v
o1	./cmd/link/internal/ppc64/asm.go	/^	var o1 uint32$/;"	v
o1	./encoding/gob/codec_test.go	/^	var o1 outi8$/;"	v
o2	./encoding/gob/codec_test.go	/^	var o2 outi16$/;"	v
o3	./encoding/gob/codec_test.go	/^	var o3 outi32$/;"	v
o4	./encoding/gob/codec_test.go	/^	var o4 outu8$/;"	v
o5	./encoding/gob/codec_test.go	/^	var o5 outu16$/;"	v
o6	./encoding/gob/codec_test.go	/^	var o6 outu32$/;"	v
o7	./encoding/gob/codec_test.go	/^	var o7 outf32$/;"	v
o8	./encoding/gob/codec_test.go	/^	var o8 outc64$/;"	v
oaddi	./cmd/internal/obj/arm64/asm7.go	/^func oaddi(ctxt *obj.Link, o1 int32, v int32, r int, rt int) uint32 {$/;"	f
oarg_type_list_ocomma	./cmd/compile/internal/gc/go.y	/^oarg_type_list_ocomma:$/;"	l
oary	./cmd/compile/internal/amd64/gsubr.go	/^		var oary [10]int64$/;"	v
oary	./cmd/compile/internal/arm/gsubr.go	/^		var oary [10]int64$/;"	v
oary	./cmd/compile/internal/arm/gsubr.go	/^	var oary [10]int64$/;"	v
oary	./cmd/compile/internal/x86/gsubr.go	/^	var oary [10]int64$/;"	v
oaslit	./cmd/compile/internal/gc/sinit.go	/^func oaslit(n *Node, init **NodeList) bool {$/;"	f
obj	./cmd/vet/nilfunc.go	/^	var obj types.Object$/;"	v
obj	./cmd/vet/print.go	/^	var obj *ast.Object$/;"	v
obj	./debug/gosym/symtab.go	/^	var obj *Obj$/;"	v
obj	./go/types/assignments.go	/^		var obj *Var$/;"	v
obj	./go/types/stmt.go	/^				var obj *Var$/;"	v
objDecl	./go/types/decl.go	/^func (check *Checker) objDecl(obj Object, def *Named, path []*TypeName) {$/;"	f
objDir	./cmd/cgo/main.go	/^var objDir = flag.String("objdir", "", "object directory")$/;"	v
objKindStrings	./go/ast/scope.go	/^var objKindStrings = [...]string{$/;"	v
objNode	./go/types/initorder.go	/^type objNode struct {$/;"	t
objReader	./cmd/internal/goobj/read.go	/^type objReader struct {$/;"	t
objSymbol	./cmd/pprof/internal/report/report.go	/^type objSymbol struct {$/;"	t
objSymbols	./cmd/pprof/internal/report/report.go	/^type objSymbols []*objSymbol$/;"	t
objSyms	./cmd/pprof/internal/report/report.go	/^	var objSyms []*objSymbol$/;"	v
objTool	./cmd/pprof/pprof.go	/^type objTool struct {$/;"	t
objdump	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^func objdump(ext *ExtDis) error {$/;"	f
objdump	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func objdump(ext *ExtDis) error {$/;"	f
objdumpManualTests	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^var objdumpManualTests = `$/;"	v
objdumpManualTests	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^var objdumpManualTests = `$/;"	v
object	./encoding/json/decode.go	/^func (d *decodeState) object(v reflect.Value) {$/;"	f
object	./go/internal/gcimporter/gcimporter.go	/^	\/\/ The type object may have been imported before and thus already$/;"	t
object	./go/internal/gcimporter/gcimporter.go	/^	\/\/ This ensures that all imports refer to the same type object for$/;"	t
object	./go/internal/gcimporter/gcimporter.go	/^	\/\/ determine receiver base type object$/;"	t
object	./go/internal/gcimporter/gcimporter.go	/^	\/\/ methods always belong to the same package as the base type object$/;"	t
object	./go/types/object.go	/^type object struct {$/;"	t
objectIdentifierTest	./encoding/asn1/asn1_test.go	/^type objectIdentifierTest struct {$/;"	t
objectIdentifierTestData	./encoding/asn1/asn1_test.go	/^var objectIdentifierTestData = []objectIdentifierTest{$/;"	v
objectInterface	./encoding/json/decode.go	/^func (d *decodeState) objectInterface() map[string]interface{} {$/;"	f
objects	./go/types/resolver_test.go	/^				var objects int$/;"	v
objfile	./cmd/link/internal/ld/lib.go	/^func objfile(lib *Library) {$/;"	f
objfile	./cmd/pprof/internal/report/report.go	/^	var objfile string$/;"	v
objfin	./runtime/debug/heapdump_test.go	/^func objfin(x *Obj) {$/;"	f
objset	./go/types/objset.go	/^type objset map[string]Object \/\/ initialized lazily$/;"	t
objtype	./runtime/mfinal_test.go	/^type objtype [objsize]byte$/;"	t
obvious	./cmd/compile/internal/gc/cgen.go	/^	\/\/ The func obvious below checks for out-of-order constant indexes.$/;"	f
oclass	./cmd/internal/obj/ppc64/asm9.go	/^func oclass(a *obj.Addr) int {$/;"	f
oclass	./cmd/internal/obj/x86/asm6.go	/^func oclass(ctxt *obj.Link, p *obj.Prog, a *obj.Addr) int {$/;"	f
ocmp	./cmd/internal/obj/arm/asm5.go	/^type ocmp []Optab$/;"	t
ocmp	./cmd/internal/obj/arm64/asm7.go	/^type ocmp []Optab$/;"	t
ocmp	./cmd/internal/obj/ppc64/asm9.go	/^type ocmp []Optab$/;"	t
ocomma	./cmd/compile/internal/gc/go.y	/^ocomma:$/;"	l
octal	./archive/tar/reader.go	/^func (tr *Reader) octal(b []byte) int64 {$/;"	f
octal	./archive/tar/writer.go	/^func (tw *Writer) octal(b []byte, x int64) {$/;"	f
oexpr	./cmd/compile/internal/gc/go.y	/^oexpr:$/;"	l
oexpr_list	./cmd/compile/internal/gc/go.y	/^oexpr_list:$/;"	l
of	./archive/tar/common.go	/^	Typeflag   byte      \/\/ type of header entry$/;"	t
of	./builtin/builtin.go	/^\/\/ the type of c.$/;"	t
of	./cmd/cgo/doc.go	/^for __cgo__N to learn the type of each identifier. (The types also$/;"	t
of	./cmd/cgo/gcc.go	/^\/\/ Opaque type of n bytes.$/;"	t
of	./cmd/cgo/main.go	/^	Type     *Type  \/\/ the type of xxx$/;"	t
of	./cmd/cgo/out.go	/^		\/\/ Get the return type of the wrapper function$/;"	t
of	./cmd/compile/internal/gc/cgen.go	/^		\/\/ type of the index$/;"	t
of	./cmd/compile/internal/gc/closure.go	/^		xfunc.Type = f.Type \/\/ update type of ODCLFUNC$/;"	t
of	./cmd/compile/internal/gc/esc.go	/^		\/\/ might yield the type of an element.  To be enhanced...$/;"	t
of	./cmd/compile/internal/gc/lex.go	/^	\/\/ (the type of x in const x = "hello").$/;"	t
of	./cmd/compile/internal/gc/lex.go	/^	\/\/ (the type of x in var x string or var x = "hello").$/;"	t
of	./cmd/compile/internal/gc/lex.go	/^	\/\/ logically, the type of a string literal.$/;"	t
of	./cmd/compile/internal/gc/reflect.go	/^		\/\/ The latter is the type of an auto-generated wrapper.$/;"	t
of	./cmd/compile/internal/gc/reflect.go	/^	\/\/ the type of the overflow field to uintptr in this case.$/;"	t
of	./cmd/compile/internal/gc/swt.go	/^	facename *Node \/\/ node for the concrete type of the variable being switched on$/;"	t
of	./cmd/compile/internal/gc/swt.go	/^	hashname *Node \/\/ node for the hash of the type of the variable being switched on$/;"	t
of	./cmd/compile/internal/gc/swt.go	/^	typ     uint8  \/\/ type of case$/;"	t
of	./cmd/compile/internal/gc/walk.go	/^			\/\/ Update type of OCALLFUNC node.$/;"	t
of	./cmd/compile/internal/gc/walk.go	/^	\/\/ Resolve slice type of multi-valued return.$/;"	t
of	./cmd/compile/internal/gc/walk.go	/^ * l is an lv and rt is the type of an rv$/;"	t
of	./cmd/fix/typecheck.go	/^			\/\/ (x) has type of x.$/;"	t
of	./cmd/fix/typecheck.go	/^			\/\/ Otherwise, use type of function to determine arguments.$/;"	t
of	./cmd/fix/typecheck.go	/^			\/\/ x.(type) has type of x.$/;"	t
of	./cmd/fix/typecheck.go	/^			\/\/ x[i:j] has type of x.$/;"	t
of	./cmd/fix/typecheck.go	/^			\/\/ x[i] has key type of x's type.$/;"	t
of	./cmd/fix/typecheck.go	/^	\/\/ set sets the type of n to typ.$/;"	t
of	./cmd/fix/typecheck.go	/^	\/\/ to know the type of the function we are checking.$/;"	t
of	./cmd/fix/typecheck.go	/^\/\/ The prefix "type " is the type of a type.$/;"	t
of	./cmd/fix/typecheck.go	/^\/\/ dot returns the type of "typ.name", making its decision$/;"	t
of	./cmd/fix/typecheck.go	/^\/\/ typeof returns the type of the given name, which may be of$/;"	t
of	./cmd/internal/obj/x86/asm6.go	/^ * oclass in span.c computes the specific Ytype of an operand and then the set$/;"	t
of	./cmd/link/internal/ld/lib.go	/^	\/\/ type of R_386_TLS_GD or R_X86_64_TLSGD. The Go linker does not$/;"	t
of	./cmd/vet/deadcode.go	/^	\/\/ when the specific type of x is known, so the cases cannot$/;"	t
of	./cmd/vet/testdata/print.go	/^	fmt.Printf("%s", nonemptyinterface)        \/\/ correct (the dynamic type of nonemptyinterface may be a stringer)$/;"	t
of	./cmd/vet/types.go	/^		\/\/ If the static type of the argument is empty interface, there's little we can do.$/;"	t
of	./cmd/vet/types.go	/^		\/\/ Whether x is valid for %s depends on the type of the argument to f. One day$/;"	t
of	./cmd/vet/types.go	/^	\/\/ Check the type of the function or method declaration$/;"	t
of	./cmd/vet/types.go	/^	\/\/ Check the type of the method declaration$/;"	t
of	./cmd/yacc/yacc.go	/^							errorf("redeclaration of type of %v", tokname)$/;"	t
of	./cmd/yacc/yacc.go	/^					errorf("must specify type of $%v", j)$/;"	t
of	./cmd/yacc/yacc.go	/^\/\/ determine the type of a symbol$/;"	t
of	./compress/flate/token.go	/^\/\/ Returns the type of a token$/;"	t
of	./crypto/tls/common.go	/^\/\/ CurveID is the type of a TLS identifier for an elliptic curve. See$/;"	t
of	./crypto/tls/conn.go	/^	\/\/ No valid TLS record has a type of 0x80, however SSLv2 handshakes$/;"	t
of	./crypto/tls/handshake_client.go	/^		return fmt.Errorf("tls: server's certificate contains an unsupported type of public key: %T", certs[0].PublicKey)$/;"	t
of	./crypto/x509/x509.go	/^\/\/ pemType is the type of a PEM encoded CRL.$/;"	t
of	./database/sql/driver/driver.go	/^	\/\/ column index.  If the type of a specific column isn't known$/;"	t
of	./database/sql/fakedb_test.go	/^	panic("invalid fakedb column type of " + typ)$/;"	t
of	./database/sql/fakedb_test.go	/^	return nil, fmt.Errorf("unimplemented statement Exec command type of %q", s.cmd)$/;"	t
of	./debug/dwarf/open.go	/^\/\/ the DWARF method of the File type of the appropriate package debug\/elf,$/;"	t
of	./debug/dwarf/type.go	/^		\/\/		AttrType: type of member [required]$/;"	t
of	./debug/dwarf/type.go	/^		\/\/		AttrType: type of parameter$/;"	t
of	./debug/dwarf/type.go	/^		\/\/	AttrType: type of return value if any$/;"	t
of	./encoding/asn1/asn1.go	/^\/\/ If the type of the first field of a structure is RawContent then the raw$/;"	t
of	./encoding/asn1/asn1_test.go	/^	\/\/ (There's no "timeType" in fieldParameters to determine what type of$/;"	t
of	./encoding/asn1/common.go	/^\/\/   the tag: the type of the object$/;"	t
of	./encoding/binary/binary.go	/^\/\/ occupied by the header. If the type of v is not acceptable, dataSize returns -1.$/;"	t
of	./encoding/gob/doc.go	/^	\/\/ The type of wireType itself is known (it's built in, as is the type of$/;"	t
of	./encoding/gob/doc.go	/^field number is defined by the type of the encoded struct: the first field of the$/;"	t
of	./encoding/gob/doc.go	/^the type of v and all its elements and then it sends the pair (typeid, encoded-v)$/;"	t
of	./encoding/gob/encoder.go	/^	\/\/ Identify the type of this top-level value.$/;"	t
of	./encoding/gob/encoder_test.go	/^	badTypeCheck(new(ET4), true, "different type of field", t)$/;"	t
of	./encoding/gob/gobencdec_test.go	/^\/\/ Test that we can use a pointer then a value type of a GobEncoder$/;"	t
of	./encoding/gob/gobencdec_test.go	/^\/\/ Test that we can use a value then a pointer type of a GobEncoder$/;"	t
of	./encoding/json/decode.go	/^	Type   reflect.Type \/\/ type of Go value it could not be assigned to$/;"	t
of	./encoding/json/decode.go	/^	\/\/ Check type of target.$/;"	t
of	./encoding/json/decode.go	/^	\/\/ Check type of target: struct or map[string]T$/;"	t
of	./flag/flag.go	/^\/\/ type of the flag's value, or the empty string if the flag is boolean.$/;"	t
of	./fmt/doc.go	/^		%T	a Go-syntax representation of the type of the value$/;"	t
of	./fmt/scan.go	/^\/\/ scanOne scans a single value, deriving the scanner from the type of the argument.$/;"	t
of	./go/ast/filter.go	/^\/\/ fieldName assumes that x is the type of an anonymous field and$/;"	t
of	./go/doc/example.go	/^		\/\/ as the key should be resolved by the type of the$/;"	t
of	./go/doc/reader.go	/^\/\/ baseTypeName returns the name of the base type of x (or "")$/;"	t
of	./go/doc/reader.go	/^\/\/ recordAnonymousField registers fieldType as the type of an$/;"	t
of	./go/parser/interface.go	/^\/\/ only used when recording position information. The type of the argument$/;"	t
of	./go/types/api.go	/^\/\/ TypeOf returns the type of expression e, or nil if not found.$/;"	t
of	./go/types/builtins.go	/^			\/\/ if the type of s is an array or pointer to an array and$/;"	t
of	./go/types/builtins.go	/^		\/\/ append(s S, x ...T) S, where T is the element type of S$/;"	t
of	./go/types/decl.go	/^	\/\/ The type of C is the (named) type of A which is incomplete,$/;"	t
of	./go/types/decl.go	/^	\/\/ The underlying type of named may be itself a named type that is$/;"	t
of	./go/types/decl.go	/^	\/\/ determine underlying type of named$/;"	t
of	./go/types/decl.go	/^\/\/ underlying returns the underlying type of typ; possibly by following$/;"	t
of	./go/types/expr.go	/^			\/\/ expression is an untyped constant, the type of the$/;"	t
of	./go/types/expr.go	/^	\/\/ to the type of the second operand, or vice versa."$/;"	t
of	./go/types/expr.go	/^\/\/ If hint != nil, it is the type of a composite literal element.$/;"	t
of	./go/types/expr.go	/^\/\/ convertUntyped attempts to set the type of an untyped value to the target type.$/;"	t
of	./go/types/expr.go	/^\/\/ typeAssertion checks that x.(T) is legal; xtyp must be the type of x.$/;"	t
of	./go/types/expr.go	/^\/\/ updateExprType updates the type of x to typ and invokes itself$/;"	t
of	./go/types/lookup.go	/^			\/\/ spec: "A method call x.m() is valid if the method set of (the type of) x$/;"	t
of	./go/types/lookup.go	/^	\/\/        dynamic type of x implements the interface T."$/;"	t
of	./go/types/lookup.go	/^\/\/ field or method. If addressable is set, T is the type of an addressable$/;"	t
of	./go/types/selection.go	/^		\/\/ The type of x.f is a function (without receiver)$/;"	t
of	./go/types/selection.go	/^		\/\/ The type of x.f is a method with its receiver type set$/;"	t
of	./go/types/selection.go	/^		\/\/ to the type of x.$/;"	t
of	./go/types/selection.go	/^	\/\/ In all other cases, the type of x.f is the type of x.$/;"	t
of	./go/types/selection.go	/^	recv     Type   \/\/ type of x$/;"	t
of	./go/types/selection.go	/^\/\/ Recv returns the type of x in x.f.$/;"	t
of	./go/types/selection.go	/^\/\/ Type returns the type of x.f, which may be different from the type of f.$/;"	t
of	./go/types/selection.go	/^\/\/ traversed to get from (the type of) x to f, starting at embedding depth 0.$/;"	t
of	./go/types/stmt.go	/^				\/\/ has the type of the expression in the TypeSwitchGuard."$/;"	t
of	./go/types/type.go	/^	\/\/ Underlying returns the underlying type of a type.$/;"	t
of	./go/types/type.go	/^\/\/ A Type represents a type of Go.$/;"	t
of	./go/types/type.go	/^\/\/ Elem returns element type of array a.$/;"	t
of	./go/types/type.go	/^\/\/ Elem returns the element type of channel c.$/;"	t
of	./go/types/type.go	/^\/\/ Elem returns the element type of map m.$/;"	t
of	./go/types/type.go	/^\/\/ Elem returns the element type of slice s.$/;"	t
of	./go/types/type.go	/^\/\/ Embedded returns the i'th embedded type of interface t for 0 <= i < t.NumEmbeddeds().$/;"	t
of	./go/types/type.go	/^\/\/ Key returns the key type of map m.$/;"	t
of	./go/types/type.go	/^\/\/ Tuples are used as components of signatures and to represent the type of multiple$/;"	t
of	./go/types/typexpr.go	/^\/\/ ident type-checks identifier e and initializes x with the value or type of e.$/;"	t
of	./html/template/attr.go	/^\/\/ type of the named attribute.$/;"	t
of	./html/template/content.go	/^\/\/ stringify converts its arguments to a string and the type of the content.$/;"	t
of	./html/template/template.go	/^\/\/ FuncMap is the type of the map defining the mapping from names to$/;"	t
of	./image/png/reader.go	/^		\/\/ Read the length and chunk type of the next chunk, and check that$/;"	t
of	./image/png/reader.go	/^\/\/ The type of Image returned depends on the PNG contents.$/;"	t
of	./internal/syscall/windows/registry/registry_test.go	/^			t.Fatalf("reading value type of %s of %s failed: %v", name, kname, err)$/;"	t
of	./internal/syscall/windows/registry/value.go	/^\/\/ SetBinaryValue sets the data and type of a name value$/;"	t
of	./internal/syscall/windows/registry/value.go	/^\/\/ SetDWordValue sets the data and type of a name value$/;"	t
of	./internal/syscall/windows/registry/value.go	/^\/\/ SetExpandStringValue sets the data and type of a name value$/;"	t
of	./internal/syscall/windows/registry/value.go	/^\/\/ SetQWordValue sets the data and type of a name value$/;"	t
of	./internal/syscall/windows/registry/value.go	/^\/\/ SetStringValue sets the data and type of a name value$/;"	t
of	./internal/syscall/windows/registry/value.go	/^\/\/ SetStringsValue sets the data and type of a name value$/;"	t
of	./net/http/sniff.go	/^	\/\/ match returns the MIME type of the data, or "" if unknown.$/;"	t
of	./net/net.go	/^	\/\/ Type is the type of string that was expected, such as$/;"	t
of	./net/net.go	/^\/\/ A ParseError is the error type of literal network address parsers.$/;"	t
of	./net/rpc/server.go	/^		\/\/ The return type of the method must be error.$/;"	t
of	./net/rpc/server.go	/^	as a service with the name of the type of the object.  After registration, exported$/;"	t
of	./net/rpc/server.go	/^	typ    reflect.Type           \/\/ type of the receiver$/;"	t
of	./path/filepath/path.go	/^\/\/ WalkFunc is the type of the function called for each file or directory$/;"	t
of	./reflect/makefunc.go	/^	\/\/ v.Type returns the actual type of the method value.$/;"	t
of	./reflect/makefunc.go	/^\/\/ has the number and type of arguments given by typ.$/;"	t
of	./reflect/makefunc.go	/^\/\/ must have the number and type of results given by typ.$/;"	t
of	./reflect/type.go	/^	\/\/ In returns the type of a function type's i'th input parameter.$/;"	t
of	./reflect/type.go	/^	\/\/ Out returns the type of a function type's i'th output parameter.$/;"	t
of	./reflect/type.go	/^	typ     *rtype  \/\/ type of field$/;"	t
of	./reflect/type.go	/^\/\/ If rcvr != nil, rcvr specifies the type of the receiver.$/;"	t
of	./reflect/type.go	/^\/\/ TypeOf returns the reflection Type that represents the dynamic type of i.$/;"	t
of	./reflect/value.go	/^	\/\/ typ holds the type of the value represented by a Value.$/;"	t
of	./reflect/value.go	/^\/\/ type of the function's corresponding input parameter.$/;"	t
of	./runtime/heapdump.go	/^	\/\/ Dump a map from itab* to the type of its data field.$/;"	t
of	./runtime/mfinal.go	/^	fint *_type         \/\/ type of first argument of fn$/;"	t
of	./runtime/mfinal.go	/^	ot   *ptrtype       \/\/ type of ptr to object$/;"	t
of	./runtime/netpoll_solaris.go	/^	\/\/ We don't register for any specific type of events yet, that's$/;"	t
of	./runtime/netpoll_solaris.go	/^\/\/ passing the correct type of event set (POLLIN\/POLLOUT). As we made$/;"	t
of	./runtime/panic.go	/^var deferType *_type \/\/ type of _defer struct$/;"	t
of	./runtime/runtime2.go	/^\/\/ assembly manipulation, we change the type of the field to uintptr,$/;"	t
of	./runtime/stack1.go	/^		\/\/ GC to avoid the following type of situation:$/;"	t
of	./sort/example_keys_test.go	/^\/\/ By is the type of a "less" function that defines the ordering of its Planet arguments.$/;"	t
of	./strconv/quote.go	/^\/\/ The second argument, quote, specifies the type of literal being parsed$/;"	t
of	./syscall/dir_plan9.go	/^	Type uint8  \/\/ the type of the file (syscall.QTDIR for example)$/;"	t
of	./syscall/mksyscall_windows.go	/^\/\/ HelperType returns type of parameter p used in helper function.$/;"	t
of	./syscall/security_windows.go	/^\/\/ getInfo retrieves a specified type of information about an access token.$/;"	t
of	./syscall/syscall_windows.go	/^		\/\/ the path is not a symlink or junction but another type of reparse$/;"	t
of	./text/template/exec.go	/^				\/\/ Validate against the type of the actual parameter.$/;"	t
of	./text/template/exec.go	/^				\/\/ Validate against the type of the elements of the variadic slice.$/;"	t
of	./text/template/funcs.go	/^\/\/ FuncMap is the type of the map defining the mapping from names to functions.$/;"	t
of	./text/template/parse/lex.go	/^	typ itemType \/\/ The type of this item.$/;"	t
of	./text/template/parse/lex.go	/^\/\/ itemType identifies the type of lex items.$/;"	t
of	./text/template/parse/node.go	/^\/\/ NodeType identifies the type of a parse tree node.$/;"	t
of	./unsafe/unsafe.go	/^\/\/ part of the unsafe package.  It represents the type of an arbitrary Go expression.$/;"	t
ofb	./crypto/cipher/ofb.go	/^type ofb struct {$/;"	t
ofbTest	./crypto/cipher/ofb_test.go	/^type ofbTest struct {$/;"	t
ofbTests	./crypto/cipher/ofb_test.go	/^var ofbTests = []ofbTest{$/;"	v
off	./cmd/fix/typecheck.go	/^			\/\/ pop function type off stack$/;"	t
off	./cmd/link/internal/ld/data.go	/^	var off int32$/;"	v
off	./cmd/link/internal/ld/elf.go	/^	var off int$/;"	v
off	./cmd/link/internal/ld/ldmacho.go	/^	var off uint32$/;"	v
off	./cmd/link/internal/ld/lib.go	/^	var off int32$/;"	v
off	./cmd/link/internal/ld/pcln.go	/^	var off int32$/;"	v
off1	./net/dnsmsg.go	/^	var off1 int$/;"	v
offConv	./cmd/internal/obj/util.go	/^func offConv(off int64) string {$/;"	f
offmod	./cmd/compile/internal/gc/align.go	/^func offmod(t *Type) {$/;"	f
offs	./cmd/link/internal/ld/dwarf.go	/^	var offs int64$/;"	v
offset	./cmd/cover/cover.go	/^func (f *File) offset(pos token.Pos) int {$/;"	f
offset	./compress/flate/token.go	/^func (t token) offset() uint32 { return uint32(t) & offsetMask }$/;"	f
offset	./debug/dwarf/entry.go	/^func (r *Reader) offset() Offset {$/;"	f
offset	./debug/dwarf/typeunit.go	/^func (tur *typeUnitReader) offset() Offset {$/;"	f
offset	./reflect/type.go	/^	var offset uintptr$/;"	v
offsetBase	./compress/flate/huffman_bit_writer.go	/^var offsetBase = []uint32{$/;"	v
offsetCode	./compress/flate/token.go	/^func offsetCode(off uint32) uint32 {$/;"	f
offsetCodes	./compress/flate/token.go	/^var offsetCodes = [...]uint32{$/;"	v
offsetEncoding	./compress/flate/huffman_bit_writer.go	/^	var offsetEncoding = fixedOffsetEncoding$/;"	v
offsetExtraBits	./compress/flate/huffman_bit_writer.go	/^var offsetExtraBits = []int8{$/;"	v
offsetMin	./time/time.go	/^	var offsetMin int16 \/\/ minutes east of UTC. -1 is UTC.$/;"	v
offsetToUnit	./debug/dwarf/unit.go	/^func (d *Data) offsetToUnit(off Offset) int {$/;"	f
offsetof	./go/types/sizes.go	/^func (conf *Config) offsetof(typ Type, index []int) int64 {$/;"	f
offsetshift	./cmd/internal/obj/arm64/asm7.go	/^func offsetshift(ctxt *obj.Link, v int64, c int) int64 {$/;"	f
offsetsof	./go/types/sizes.go	/^func (conf *Config) offsetsof(T *Struct) []int64 {$/;"	f
oflag	./cmd/yacc/yacc.go	/^var oflag string  \/\/ -o [y.go]		- y.go file$/;"	v
ofsr	./cmd/internal/obj/arm/asm5.go	/^func ofsr(ctxt *obj.Link, a int, r int, v int32, b int, sc int, p *obj.Prog) uint32 {$/;"	f
oh	./cmd/link/internal/ld/pe.go	/^var oh IMAGE_OPTIONAL_HEADER$/;"	v
oh32	./debug/pe/file.go	/^	var oh32 OptionalHeader32$/;"	v
oh64	./cmd/link/internal/ld/pe.go	/^var oh64 PE64_IMAGE_OPTIONAL_HEADER$/;"	v
oh64	./debug/pe/file.go	/^	var oh64 OptionalHeader64$/;"	v
ohidden_funarg_list	./cmd/compile/internal/gc/go.y	/^ohidden_funarg_list:$/;"	l
ohidden_funres	./cmd/compile/internal/gc/go.y	/^ohidden_funres:$/;"	l
ohidden_interfacedcl_list	./cmd/compile/internal/gc/go.y	/^ohidden_interfacedcl_list:$/;"	l
ohidden_structdcl_list	./cmd/compile/internal/gc/go.y	/^ohidden_structdcl_list:$/;"	l
oiEqualTest	./encoding/asn1/asn1_test.go	/^type oiEqualTest struct {$/;"	t
oiEqualTests	./encoding/asn1/asn1_test.go	/^var oiEqualTests = []oiEqualTest{$/;"	v
oidExtensionRequest	./crypto/x509/x509.go	/^var oidExtensionRequest = asn1.ObjectIdentifier{1, 2, 840, 113549, 1, 9, 14}$/;"	v
oidFromExtKeyUsage	./crypto/x509/x509.go	/^func oidFromExtKeyUsage(eku ExtKeyUsage) (oid asn1.ObjectIdentifier, ok bool) {$/;"	f
oidFromNamedCurve	./crypto/x509/x509.go	/^func oidFromNamedCurve(curve elliptic.Curve) (asn1.ObjectIdentifier, bool) {$/;"	f
oidInAttributeTypeAndValue	./crypto/x509/pkix/pkix.go	/^func oidInAttributeTypeAndValue(oid asn1.ObjectIdentifier, atv []AttributeTypeAndValue) bool {$/;"	f
oidInExtensions	./crypto/x509/x509.go	/^func oidInExtensions(oid asn1.ObjectIdentifier, extensions []pkix.Extension) bool {$/;"	f
oids	./crypto/x509/x509.go	/^		var oids []asn1.ObjectIdentifier$/;"	v
ok	./all.bat	/^:ok$/;"	l
ok	./cmd/asm/internal/asm/endtoend_test.go	/^	var ok bool$/;"	v
ok	./cmd/asm/internal/asm/expr_test.go	/^		var ok bool$/;"	v
ok	./cmd/asm/main.go	/^	var ok bool$/;"	v
ok	./cmd/compile/internal/big/float_test.go	/^	var ok bool$/;"	v
ok	./cmd/compile/internal/big/intconv_test.go	/^			var ok bool$/;"	v
ok	./cmd/compile/internal/gc/lex.go	/^		var ok bool$/;"	v
ok	./crypto/rsa/rsa.go	/^			var ok bool$/;"	v
ok	./crypto/tls/conn.go	/^			var ok bool$/;"	v
ok	./crypto/tls/handshake_server.go	/^	var ok bool$/;"	v
ok	./crypto/tls/key_agreement.go	/^	var ok bool$/;"	v
ok	./debug/elf/file.go	/^		var ok bool$/;"	v
ok	./encoding/gob/decode.go	/^	var ok bool$/;"	v
ok	./encoding/xml/xml.go	/^			var ok bool$/;"	v
ok	./go/types/conversions.go	/^	var ok bool$/;"	v
ok	./log/log.go	/^		var ok bool$/;"	v
ok	./make.bat	/^:ok$/;"	l
ok	./math/big/float_test.go	/^	var ok bool$/;"	v
ok	./math/big/intconv_test.go	/^			var ok bool$/;"	v
ok	./mime/mediatype.go	/^			var ok bool$/;"	v
ok	./net/dnsmsg.go	/^	var ok bool$/;"	v
ok	./net/fd_plan9.go	/^func (fd *netFD) ok() bool { return fd != nil && fd.ctl != nil }$/;"	f
ok	./net/http/cgi/child.go	/^	var ok bool$/;"	v
ok	./net/http/request.go	/^	var ok bool$/;"	v
ok	./net/http/response.go	/^		var ok bool$/;"	v
ok	./net/http/response.go	/^	var ok bool$/;"	v
ok	./net/mac.go	/^			var ok bool$/;"	v
ok	./net/net.go	/^func (c *conn) ok() bool { return c != nil && c.fd != nil }$/;"	f
ok	./race.bat	/^:ok$/;"	l
ok	./reflect/all_test.go	/^	var ok bool$/;"	v
ok	./runtime/asm_386.s	/^ok:$/;"	l
ok	./runtime/asm_amd64.s	/^ok:$/;"	l
ok	./runtime/asm_amd64p32.s	/^ok:$/;"	l
ok	./runtime/asm_arm64.s	/^ok:$/;"	l
ok	./runtime/atomic_arm.go	/^	var ok bool$/;"	v
ok	./runtime/atomic_arm64.s	/^ok:$/;"	l
ok	./runtime/proc1.go	/^		var ok bool$/;"	v
ok	./runtime/symtab.go	/^		var ok bool$/;"	v
ok	./runtime/sys_darwin_arm64.s	/^ok:$/;"	l
ok	./runtime/sys_linux_arm64.s	/^ok:$/;"	l
ok	./strconv/fp_test.go	/^			var ok bool$/;"	v
ok	./sync/atomic/asm_arm.s	/^ok:$/;"	l
ok	./sync/atomic/asm_arm64.s	/^ok:$/;"	l
ok	./syscall/asm_darwin_386.s	/^ok:$/;"	l
ok	./syscall/asm_darwin_amd64.s	/^ok:$/;"	l
ok	./syscall/asm_darwin_arm.s	/^ok:$/;"	l
ok	./syscall/asm_darwin_arm64.s	/^ok:$/;"	l
ok	./syscall/asm_dragonfly_amd64.s	/^ok:$/;"	l
ok	./syscall/asm_freebsd_386.s	/^ok:$/;"	l
ok	./syscall/asm_freebsd_amd64.s	/^ok:$/;"	l
ok	./syscall/asm_linux_386.s	/^ok:$/;"	l
ok	./syscall/asm_linux_amd64.s	/^ok:$/;"	l
ok	./syscall/asm_linux_arm.s	/^ok:$/;"	l
ok	./syscall/asm_linux_arm64.s	/^ok:$/;"	l
ok	./syscall/asm_linux_ppc64x.s	/^ok:$/;"	l
ok	./syscall/asm_nacl_386.s	/^ok:$/;"	l
ok	./syscall/asm_nacl_amd64p32.s	/^ok:$/;"	l
ok	./syscall/asm_nacl_arm.s	/^ok:$/;"	l
ok	./syscall/asm_netbsd_386.s	/^ok:$/;"	l
ok	./syscall/asm_netbsd_amd64.s	/^ok:$/;"	l
ok	./syscall/asm_openbsd_386.s	/^ok:$/;"	l
ok	./syscall/asm_openbsd_amd64.s	/^ok:$/;"	l
ok	./syscall/dir_plan9.go	/^	var ok bool$/;"	v
ok	./syscall/syscall_unix_test.go	/^		var ok bool$/;"	v
ok	./testing/quick/quick.go	/^		var ok bool$/;"	v
ok	./time/zoneinfo_read.go	/^		var ok bool$/;"	v
ok1	./regexp/syntax/parse.go	/^	var ok1 bool$/;"	v
ok1	./syscall/asm_darwin_386.s	/^ok1:$/;"	l
ok1	./syscall/asm_darwin_amd64.s	/^ok1:$/;"	l
ok1	./syscall/asm_darwin_arm.s	/^ok1:$/;"	l
ok1	./syscall/asm_dragonfly_amd64.s	/^ok1:$/;"	l
ok1	./syscall/asm_freebsd_386.s	/^ok1:$/;"	l
ok1	./syscall/asm_freebsd_amd64.s	/^ok1:$/;"	l
ok1	./syscall/asm_linux_386.s	/^ok1:$/;"	l
ok1	./syscall/asm_linux_amd64.s	/^ok1:$/;"	l
ok1	./syscall/asm_linux_arm.s	/^ok1:$/;"	l
ok1	./syscall/asm_linux_ppc64x.s	/^ok1:$/;"	l
ok1	./syscall/asm_netbsd_386.s	/^ok1:$/;"	l
ok1	./syscall/asm_netbsd_amd64.s	/^ok1:$/;"	l
ok1	./syscall/asm_openbsd_386.s	/^ok1:$/;"	l
ok1	./syscall/asm_openbsd_amd64.s	/^ok1:$/;"	l
ok2	./syscall/asm_darwin_386.s	/^ok2:$/;"	l
ok2	./syscall/asm_darwin_amd64.s	/^ok2:$/;"	l
ok2	./syscall/asm_darwin_arm.s	/^ok2:$/;"	l
ok2	./syscall/asm_dragonfly_amd64.s	/^ok2:$/;"	l
ok2	./syscall/asm_freebsd_386.s	/^ok2:$/;"	l
ok2	./syscall/asm_freebsd_amd64.s	/^ok2:$/;"	l
ok2	./syscall/asm_linux_386.s	/^ok2:$/;"	l
ok2	./syscall/asm_linux_amd64.s	/^ok2:$/;"	l
ok2	./syscall/asm_linux_arm.s	/^ok2:$/;"	l
ok2	./syscall/asm_linux_ppc64x.s	/^ok2:$/;"	l
ok2	./syscall/asm_netbsd_386.s	/^ok2:$/;"	l
ok2	./syscall/asm_netbsd_amd64.s	/^ok2:$/;"	l
ok2	./syscall/asm_openbsd_386.s	/^ok2:$/;"	l
ok2	./syscall/asm_openbsd_amd64.s	/^ok2:$/;"	l
ok3	./syscall/asm_plan9_386.s	/^ok3:$/;"	l
ok3	./syscall/asm_plan9_amd64.s	/^ok3:$/;"	l
ok4	./cmd/compile/internal/big/int_test.go	/^		var ok4 bool$/;"	v
ok4	./math/big/int_test.go	/^		var ok4 bool$/;"	v
ok4	./syscall/asm_plan9_386.s	/^ok4:$/;"	l
ok4	./syscall/asm_plan9_amd64.s	/^ok4:$/;"	l
ok6	./syscall/asm_darwin_386.s	/^ok6:$/;"	l
ok6	./syscall/asm_darwin_amd64.s	/^ok6:$/;"	l
ok6	./syscall/asm_darwin_arm.s	/^ok6:$/;"	l
ok6	./syscall/asm_dragonfly_amd64.s	/^ok6:$/;"	l
ok6	./syscall/asm_freebsd_386.s	/^ok6:$/;"	l
ok6	./syscall/asm_freebsd_amd64.s	/^ok6:$/;"	l
ok6	./syscall/asm_linux_386.s	/^ok6:$/;"	l
ok6	./syscall/asm_linux_amd64.s	/^ok6:$/;"	l
ok6	./syscall/asm_linux_arm.s	/^ok6:$/;"	l
ok6	./syscall/asm_linux_ppc64x.s	/^ok6:$/;"	l
ok6	./syscall/asm_netbsd_386.s	/^ok6:$/;"	l
ok6	./syscall/asm_netbsd_amd64.s	/^ok6:$/;"	l
ok6	./syscall/asm_openbsd_386.s	/^ok6:$/;"	l
ok6	./syscall/asm_openbsd_amd64.s	/^ok6:$/;"	l
ok6	./syscall/asm_plan9_386.s	/^ok6:$/;"	l
ok6	./syscall/asm_plan9_amd64.s	/^ok6:$/;"	l
ok7	./syscall/asm_linux_amd64.s	/^ok7:$/;"	l
ok9	./syscall/asm_darwin_386.s	/^ok9:$/;"	l
ok9	./syscall/asm_darwin_amd64.s	/^ok9:$/;"	l
ok9	./syscall/asm_darwin_arm.s	/^ok9:$/;"	l
ok9	./syscall/asm_dragonfly_amd64.s	/^ok9:$/;"	l
ok9	./syscall/asm_freebsd_386.s	/^ok9:$/;"	l
ok9	./syscall/asm_freebsd_amd64.s	/^ok9:$/;"	l
ok9	./syscall/asm_netbsd_386.s	/^ok9:$/;"	l
ok9	./syscall/asm_netbsd_amd64.s	/^ok9:$/;"	l
ok9	./syscall/asm_openbsd_386.s	/^ok9:$/;"	l
ok9	./syscall/asm_openbsd_amd64.s	/^ok9:$/;"	l
okPrintfArg	./cmd/vet/print.go	/^func (f *File) okPrintfArg(call *ast.CallExpr, state *formatState) (ok bool) {$/;"	f
okVerb	./fmt/scan.go	/^func (s *ss) okVerb(verb rune, okVerbs, typ string) bool {$/;"	f
okseek	./syscall/asm_linux_386.s	/^okseek:$/;"	l
okseek	./syscall/asm_linux_arm.s	/^okseek:$/;"	l
oksock	./syscall/asm_linux_386.s	/^oksock:$/;"	l
oksock1	./syscall/asm_linux_386.s	/^oksock1:$/;"	l
oldGoogleCode	./cmd/go/vcs.go	/^func oldGoogleCode(match map[string]string) error {$/;"	f
oldHTMLEscape	./strings/replace_test.go	/^func oldHTMLEscape(s string) string {$/;"	f
oldLookupIP	./net/lookup_windows.go	/^func oldLookupIP(name string) ([]IPAddr, error) {$/;"	f
oldLookupPort	./net/lookup_windows.go	/^func oldLookupPort(network, service string) (int, error) {$/;"	f
oldPC	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^	var oldPC, prevPC int$/;"	v
oldSystemRoots	./crypto/x509/verify_test.go	/^		var oldSystemRoots *CertPool$/;"	v
oldax	./cmd/compile/internal/amd64/ggen.go	/^	var oldax gc.Node$/;"	v
oldax	./cmd/compile/internal/x86/ggen.go	/^	var oldax gc.Node$/;"	v
oldcx	./cmd/compile/internal/amd64/cgen.go	/^	var oldcx gc.Node$/;"	v
oldcx	./cmd/compile/internal/amd64/ggen.go	/^	var oldcx gc.Node$/;"	v
oldcx	./cmd/compile/internal/x86/ggen.go	/^	var oldcx gc.Node$/;"	v
olddx	./cmd/compile/internal/amd64/ggen.go	/^	var olddx gc.Node$/;"	v
olddx	./cmd/compile/internal/x86/ggen.go	/^	var olddx gc.Node$/;"	v
oldfdref	./syscall/fd_nacl.go	/^	var oldfdref int$/;"	v
oldmask	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) oldmask() uint32 { return 0 }$/;"	f
oldmask	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) oldmask() uint32 { return 0 }$/;"	f
oldmask	./runtime/signal_linux_arm.go	/^func (c *sigctxt) oldmask() uint32   { return c.regs().oldmask }$/;"	f
oldmask	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) oldmask() uint32 { return ^uint32(0) }$/;"	f
oldmask	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) oldmask() uint32  { return 0 }$/;"	f
oldmask	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) oldmask() uint32 { return 0 }$/;"	f
oldn1	./cmd/compile/internal/amd64/ggen.go	/^	var oldn1 gc.Node$/;"	v
oldname	./cmd/compile/internal/gc/dcl.go	/^func oldname(s *Sym) *Node {$/;"	f
oldstksize	./cmd/compile/internal/gc/pgen.go	/^	var oldstksize int64$/;"	v
oldval	./cmd/link/internal/ld/pcln.go	/^	var oldval int32$/;"	v
olen	./syscall/syscall_netbsd.go	/^	var olen uintptr$/;"	v
olhr	./cmd/internal/obj/arm/asm5.go	/^func olhr(ctxt *obj.Link, v int32, b int, r int, sc int) uint32 {$/;"	f
olhrr	./cmd/internal/obj/arm/asm5.go	/^func olhrr(ctxt *obj.Link, i int, b int, r int, sc int) uint32 {$/;"	f
oliteral	./cmd/compile/internal/gc/go.y	/^oliteral:$/;"	l
olr	./cmd/internal/obj/arm/asm5.go	/^func olr(ctxt *obj.Link, v int32, b int, r int, sc int) uint32 {$/;"	f
olrr	./cmd/internal/obj/arm/asm5.go	/^func olrr(ctxt *obj.Link, i int, b int, r int, sc int) uint32 {$/;"	f
olsr12u	./cmd/internal/obj/arm64/asm7.go	/^func olsr12u(ctxt *obj.Link, o int32, v int32, b int, r int) uint32 {$/;"	f
olsr9s	./cmd/internal/obj/arm64/asm7.go	/^func olsr9s(ctxt *obj.Link, o int32, v int32, b int, r int) uint32 {$/;"	f
olsxrr	./cmd/internal/obj/arm64/asm7.go	/^func olsxrr(ctxt *obj.Link, as int, rt int, r1 int, r2 int) uint32 {$/;"	f
omitEmptyTest	./encoding/asn1/marshal_test.go	/^type omitEmptyTest struct {$/;"	t
omit_pkgs	./cmd/compile/internal/gc/racewalk.go	/^var omit_pkgs = []string{"runtime", "runtime\/race"}$/;"	v
omits	./cmd/cgo/out.go	/^		\/\/ However, our version of the type omits the magic$/;"	t
omitted	./go/printer/nodes.go	/^		\/\/ composite literal elements that are composite literals themselves may have the type omitted$/;"	t
omovlit	./cmd/internal/obj/arm64/asm7.go	/^func omovlit(ctxt *obj.Link, as int, p *obj.Prog, a *obj.Addr, dr int) uint32 {$/;"	f
omvl	./cmd/internal/obj/arm/asm5.go	/^func omvl(ctxt *obj.Link, p *obj.Prog, a *obj.Addr, dr int) uint32 {$/;"	f
on	./cmd/compile/internal/gc/reflect.go	/^			Fatal("receiver with no type on %v method %v %v\\n", mt, f.Sym, f)$/;"	t
on	./cmd/compile/internal/gc/typecheck.go	/^ * if this assignment is the definition of a var on the left side,$/;"	v
on	./cmd/compile/internal/gc/walk.go	/^	var on *Node$/;"	v
on	./cmd/fix/typecheck.go	/^		\/\/ push function type on stack$/;"	t
on	./cmd/internal/obj/stringer.go	/^	var on = false$/;"	v
on	./cmd/vet/testdata/print.go	/^\/\/ Fix for issue 7149: Missing return type on String method caused fault.$/;"	t
on	./encoding/asn1/asn1.go	/^	\/\/ when it sees a string, so if we see a different string type on the$/;"	t
on	./encoding/gob/example_interface_test.go	/^	\/\/ The decode will fail unless the concrete type on the wire has been$/;"	t
on	./go/types/issues_test.go	/^\/\/ are Uses, not Defs; and also that the (illegal) use of a non-var on$/;"	v
on	./net/error_test.go	/^	return fmt.Errorf("unexpected type on 1st nested level: %T", nestedErr)$/;"	t
on	./net/error_test.go	/^	return fmt.Errorf("unexpected type on 2nd nested level: %T", nestedErr)$/;"	t
on	./net/error_test.go	/^	return fmt.Errorf("unexpected type on 3rd nested level: %T", nestedErr)$/;"	t
on	./net/net.go	/^	\/\/ Net is the network type on which this error occurred,$/;"	t
on	./testing/quick/quick.go	/^	\/\/ Generate returns a random instance of the type on which it is a$/;"	t
onExitFlushLoop	./net/http/httputil/reverseproxy.go	/^var onExitFlushLoop func()$/;"	v
once	./mime/type.go	/^var once sync.Once \/\/ guards initMime$/;"	v
once	./sync/example_test.go	/^	var once sync.Once$/;"	v
once	./sync/once.go	/^\/\/ 	var once Once$/;"	v
once	./sync/once_test.go	/^	var once Once$/;"	v
onceProcessSignals	./cmd/go/signal.go	/^var onceProcessSignals sync.Once$/;"	v
onceReadProtocols	./net/lookup_unix.go	/^var onceReadProtocols sync.Once$/;"	v
onceReadServices	./net/port_unix.go	/^var onceReadServices sync.Once$/;"	v
onceStartServer	./net/fd_windows.go	/^var onceStartServer sync.Once$/;"	v
one	./cmd/compile/internal/amd64/gsubr.go	/^		var one gc.Node$/;"	v
one	./crypto/ecdsa/ecdsa.go	/^var one = new(big.Int).SetInt64(1)$/;"	v
one	./sync/once_test.go	/^type one int$/;"	t
oneArg	./text/template/exec_test.go	/^func oneArg(a string) string {$/;"	f
oneByteReader	./testing/iotest/reader.go	/^type oneByteReader struct {$/;"	t
oneConnListener	./net/http/serve_test.go	/^type oneConnListener struct {$/;"	t
oneLineFunc	./cmd/doc/pkg.go	/^func (pkg *Package) oneLineFunc(decl *ast.FuncDecl) {$/;"	f
oneLineTypeDecl	./cmd/doc/pkg.go	/^func (pkg *Package) oneLineTypeDecl(spec *ast.TypeSpec) {$/;"	f
oneLineValueGenDecl	./cmd/doc/pkg.go	/^func (pkg *Package) oneLineValueGenDecl(decl *ast.GenDecl) {$/;"	f
onePass	./regexp/onepass_test.go	/^var onePass = &onePassProg{}$/;"	v
onePassCopy	./regexp/onepass.go	/^func onePassCopy(prog *syntax.Prog) *onePassProg {$/;"	f
onePassInst	./regexp/onepass.go	/^type onePassInst struct {$/;"	t
onePassNext	./regexp/onepass.go	/^func onePassNext(i *onePassInst, r rune) uint32 {$/;"	f
onePassPrefix	./regexp/onepass.go	/^func onePassPrefix(p *syntax.Prog) (prefix string, complete bool, pc uint32) {$/;"	f
onePassProg	./regexp/onepass.go	/^type onePassProg struct {$/;"	t
onePassTests	./regexp/onepass_test.go	/^var onePassTests = []struct {$/;"	v
onearg	./cmd/compile/internal/gc/typecheck.go	/^func onearg(n *Node, f string, args ...interface{}) int {$/;"	f
onebitlivepointermap	./cmd/compile/internal/gc/plive.go	/^func onebitlivepointermap(lv *Liveness, liveout Bvec, vars []*Node, args Bvec, locals Bvec) {$/;"	f
onebitwalktype1	./cmd/compile/internal/gc/plive.go	/^func onebitwalktype1(t *Type, xoffset *int64, bv Bvec) {$/;"	f
onebitwritesymbol	./cmd/compile/internal/gc/plive.go	/^func onebitwritesymbol(arr []Bvec, sym *Sym) {$/;"	f
onepass	./regexp/exec.go	/^func (m *machine) onepass(i input, pos int) bool {$/;"	f
oneptrmask	./runtime/mgcmark.go	/^var oneptrmask = [...]uint8{1}$/;"	v
onew_name	./cmd/compile/internal/gc/go.y	/^onew_name:$/;"	l
ongothread	./runtime/cgo/signal_darwin_arm.s	/^ongothread:$/;"	l
ongothread	./runtime/cgo/signal_darwin_arm64.s	/^ongothread:$/;"	l
onlist	./cmd/compile/internal/gc/subr.go	/^func onlist(l *TypePairList, t1 *Type, t2 *Type) bool {$/;"	f
only	./cmd/fix/typecheck.go	/^					\/\/ Variable has specific type only when there is$/;"	t
only	./go/parser/parser.go	/^		\/\/ function type only$/;"	t
only	./go/printer/testdata/parser.go	/^			p.error(pos, "can use '...' with last parameter type only")$/;"	t
only	./go/printer/testdata/parser.go	/^		\/\/ function type only$/;"	t
only	./internal/syscall/windows/registry/value.go	/^\/\/ If no buffer is provided, GetValue returns the value's type only.$/;"	t
only	./net/dnsmsg.go	/^	\/\/ valid dnsQuestion.qtype only$/;"	t
onlyPOSIX	./regexp/syntax/parse_test.go	/^var onlyPOSIX = []string{$/;"	v
onlyPerl	./regexp/syntax/parse_test.go	/^var onlyPerl = []string{$/;"	v
onlyReader	./bufio/bufio_test.go	/^type onlyReader struct {$/;"	t
onlyWriter	./bufio/bufio_test.go	/^type onlyWriter struct {$/;"	t
oops	./errors/example_test.go	/^func oops() error {$/;"	f
op	./cmd/asm/internal/asm/parse.go	/^	var op int16$/;"	v
op	./cmd/compile/internal/arm/cgen.go	/^	var op int$/;"	v
op	./cmd/compile/internal/arm64/cgen.go	/^	var op int$/;"	v
op	./cmd/compile/internal/gc/typecheck.go	/^		var op int$/;"	v
op	./cmd/compile/internal/ppc64/cgen.go	/^	var op int$/;"	v
op	./cmd/internal/obj/arm/asm5.go	/^	var op *obj.Prog$/;"	v
op	./cmd/internal/obj/x86/asm6.go	/^	var op int$/;"	v
op	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^	var op string$/;"	v
op	./cmd/vet/bool.go	/^	var op boolOp$/;"	v
op	./database/sql/sql_test.go	/^				var op string$/;"	v
op	./encoding/gob/decode.go	/^	var op decOp$/;"	v
op	./encoding/gob/encode.go	/^	var op encOp$/;"	v
op	./go/doc/comment.go	/^type op int$/;"	t
op	./go/types/expr.go	/^func (check *Checker) op(m opPredicates, x *operand, op token.Token) bool {$/;"	f
op	./go/types/stmt.go	/^		var op token.Token$/;"	v
op	./regexp/syntax/parse.go	/^func (p *parser) op(op Op) *Regexp {$/;"	f
op	./regexp/syntax/prog.go	/^	var op EmptyOp = EmptyNoWordBoundary$/;"	v
op	./regexp/syntax/prog.go	/^func (i *Inst) op() InstOp {$/;"	f
op	./runtime/netpoll_windows.go	/^	var op *net_op$/;"	v
op0	./cmd/internal/obj/arm64/asm7.go	/^func op0(ctxt *obj.Link, a int) uint32 {$/;"	f
opAddr	./net/iprawsock.go	/^func (a *IPAddr) opAddr() Addr {$/;"	f
opAddr	./net/tcpsock.go	/^func (a *TCPAddr) opAddr() Addr {$/;"	f
opAddr	./net/udpsock.go	/^func (a *UDPAddr) opAddr() Addr {$/;"	f
opAddr	./net/unixsock.go	/^func (a *UnixAddr) opAddr() Addr {$/;"	f
opNames	./cmd/internal/rsc.io/x86/x86asm/tables.go	/^var opNames = [...]string{$/;"	v
opNames	./regexp/syntax/parse_test.go	/^var opNames = []string{$/;"	v
opPredicates	./go/types/expr.go	/^type opPredicates map[token.Token]func(Type) bool$/;"	t
opSet	./cmd/internal/obj/util.go	/^type opSet struct {$/;"	t
opTests	./go/constant/value_test.go	/^var opTests = []string{$/;"	v
opaque	./image/png/writer.go	/^func opaque(m image.Image) bool {$/;"	f
opaquer	./image/png/writer.go	/^type opaquer interface {$/;"	t
opbfm	./cmd/internal/obj/arm64/asm7.go	/^func opbfm(ctxt *obj.Link, a int, r int, s int, rf int, rt int) uint32 {$/;"	f
opbit	./cmd/internal/obj/arm64/asm7.go	/^func opbit(ctxt *obj.Link, a int) uint32 {$/;"	f
opbra	./cmd/internal/obj/arm/asm5.go	/^func opbra(ctxt *obj.Link, a int, sc int) uint32 {$/;"	f
opbra	./cmd/internal/obj/arm64/asm7.go	/^func opbra(ctxt *obj.Link, a int) uint32 {$/;"	f
opbrr	./cmd/internal/obj/arm64/asm7.go	/^func opbrr(ctxt *obj.Link, a int) uint32 {$/;"	f
opc	./cmd/internal/obj/arm/asm5.go	/^	var opc int32$/;"	v
opcode	./cmd/link/internal/ld/dwarf.go	/^		var opcode int64 = OPCODE_BASE + (delta_lc - LINE_BASE) + (LINE_RANGE * delta_pc)$/;"	v
open	./cmd/yacc/yacc.go	/^func open(s string) *bufio.Reader {$/;"	f
open	./net/parse.go	/^func open(name string) (*file, error) {$/;"	f
open	./runtime/os3_solaris.go	/^func open(path *byte, mode, perm int32) int32 {$/;"	f
open	./runtime/os_nacl.go	/^func open(name *byte, mode, perm int32) int32$/;"	f
open	./runtime/os_plan9.go	/^func open(name *byte, mode, perm int32) int32$/;"	f
open	./runtime/os_windows.go	/^func open(name *byte, mode, perm int32) int32 {$/;"	f
open	./runtime/stubs2.go	/^func open(name *byte, mode, perm int32) int32$/;"	f
open	./syscall/fs_nacl.go	/^func (fs *fsys) open(name string, openmode int, mode uint32) (fileImpl, error) {$/;"	f
open	./syscall/zsyscall_plan9_386.go	/^func open(path string, mode int) (fd int, err error) {$/;"	f
open	./syscall/zsyscall_plan9_amd64.go	/^func open(path string, mode int) (fd int, err error) {$/;"	f
open	./time/sys_plan9.go	/^func open(name string) (uintptr, error) {$/;"	f
open	./time/sys_unix.go	/^func open(name string) (uintptr, error) {$/;"	f
open	./time/sys_windows.go	/^func open(name string) (uintptr, error) {$/;"	f
open	./unicode/maketables.go	/^func open(url string) *reader {$/;"	f
openDir	./os/file_windows.go	/^func openDir(name string) (file *File, err error) {$/;"	f
openElf	./cmd/internal/objfile/elf.go	/^func openElf(r *os.File) (rawFile, error) {$/;"	f
openErrorTest	./os/os_test.go	/^type openErrorTest struct {$/;"	t
openErrorTests	./os/os_test.go	/^var openErrorTests = []openErrorTest{$/;"	v
openExportFile	./go/internal/gccgoimporter/importer.go	/^func openExportFile(fpath string) (reader io.ReadSeeker, closer io.Closer, err error) {$/;"	f
openFile	./os/file_windows.go	/^func openFile(name string, flag int, perm FileMode) (file *File, err error) {$/;"	f
openGoobj	./cmd/internal/objfile/goobj.go	/^func openGoobj(r *os.File) (rawFile, error) {$/;"	f
openLabelScope	./go/parser/parser.go	/^func (p *parser) openLabelScope() {$/;"	f
openLabelScope	./go/printer/testdata/parser.go	/^func (p *parser) openLabelScope() {$/;"	f
openMacho	./cmd/internal/objfile/macho.go	/^func openMacho(r *os.File) (rawFile, error) {$/;"	f
openNamedService	./syscall/srpc_nacl.go	/^func openNamedService(name string, mode int32) (fd int, err error) {$/;"	f
openNewConnection	./database/sql/sql.go	/^func (db *DB) openNewConnection() {$/;"	f
openNull	./syscall/fs_nacl.go	/^func openNull() (devFile, error)                               { return &nullFile{}, nil }$/;"	f
openPE	./cmd/internal/objfile/pe.go	/^func openPE(r *os.File) (rawFile, error) {$/;"	f
openPlan9	./cmd/internal/objfile/plan9obj.go	/^func openPlan9(r *os.File) (rawFile, error) {$/;"	f
openRandom	./syscall/fs_nacl.go	/^func openRandom() (devFile, error) {$/;"	f
openScope	./go/parser/parser.go	/^func (p *parser) openScope() {$/;"	f
openScope	./go/printer/testdata/parser.go	/^func (p *parser) openScope() {$/;"	f
openScope	./go/types/stmt.go	/^func (check *Checker) openScope(s ast.Stmt, comment string) {$/;"	f
openZero	./syscall/fs_nacl.go	/^func openZero() (devFile, error)                               { return &zeroFile{}, nil }$/;"	f
openat	./syscall/zsyscall_linux_386.go	/^func openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {$/;"	f
openat	./syscall/zsyscall_linux_amd64.go	/^func openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {$/;"	f
openat	./syscall/zsyscall_linux_arm.go	/^func openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {$/;"	f
openat	./syscall/zsyscall_linux_arm64.go	/^func openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {$/;"	f
openat	./syscall/zsyscall_linux_ppc64.go	/^func openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {$/;"	f
openat	./syscall/zsyscall_linux_ppc64le.go	/^func openat(dirfd int, path string, flags int, mode uint32) (fd int, err error) {$/;"	f
openers	./cmd/internal/objfile/objfile.go	/^var openers = []func(*os.File) (rawFile, error){$/;"	v
openup	./cmd/yacc/yacc.go	/^func openup() {$/;"	f
operand	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) operand(a *obj.Addr) bool {$/;"	f
operand	./go/types/operand.go	/^type operand struct {$/;"	t
operand	./text/template/parse/parse.go	/^func (t *Tree) operand() Node {$/;"	f
operandMode	./go/types/operand.go	/^type operandMode byte$/;"	t
operandModeString	./go/types/operand.go	/^var operandModeString = [...]string{$/;"	v
operandString	./go/types/operand.go	/^func operandString(x *operand, qf Qualifier) string {$/;"	f
operandTest	./cmd/asm/internal/asm/operand_test.go	/^type operandTest struct {$/;"	t
operation	./net/fd_windows.go	/^type operation struct {$/;"	t
opextr	./cmd/internal/obj/arm64/asm7.go	/^func opextr(ctxt *obj.Link, a int, v int32, rn int, rm int, rt int) uint32 {$/;"	f
opimm	./cmd/internal/obj/arm64/asm7.go	/^func opimm(ctxt *obj.Link, a int) uint32 {$/;"	f
opindex	./cmd/internal/obj/x86/asm6.go	/^var opindex [(ALAST + 1) & obj.AMask]*Optab$/;"	v
opirr	./cmd/internal/obj/arm64/asm7.go	/^func opirr(ctxt *obj.Link, a int) uint32 {$/;"	f
opirr	./cmd/internal/obj/ppc64/asm9.go	/^func opirr(ctxt *obj.Link, a int) int32 {$/;"	f
opldr12	./cmd/internal/obj/arm64/asm7.go	/^func opldr12(ctxt *obj.Link, a int) uint32 {$/;"	f
opldr9	./cmd/internal/obj/arm64/asm7.go	/^func opldr9(ctxt *obj.Link, a int) uint32 {$/;"	f
opldrpp	./cmd/internal/obj/arm64/asm7.go	/^func opldrpp(ctxt *obj.Link, a int) uint32 {$/;"	f
opload	./cmd/internal/obj/arm64/asm7.go	/^func opload(ctxt *obj.Link, a int) uint32 {$/;"	f
opload	./cmd/internal/obj/ppc64/asm9.go	/^func opload(ctxt *obj.Link, a int) int32 {$/;"	f
oploadx	./cmd/internal/obj/ppc64/asm9.go	/^func oploadx(ctxt *obj.Link, a int) int32 {$/;"	f
oplook	./cmd/internal/obj/arm/asm5.go	/^func oplook(ctxt *obj.Link, p *obj.Prog) *Optab {$/;"	f
oplook	./cmd/internal/obj/arm64/asm7.go	/^func oplook(ctxt *obj.Link, p *obj.Prog) *Optab {$/;"	f
oplook	./cmd/internal/obj/ppc64/asm9.go	/^func oplook(ctxt *obj.Link, p *obj.Prog) *Optab {$/;"	f
opnames	./cmd/compile/internal/gc/opnames.go	/^var opnames = []string{$/;"	v
opprec	./cmd/compile/internal/gc/fmt.go	/^var opprec = []int{$/;"	v
oprange	./cmd/internal/obj/arm/asm5.go	/^var oprange [ALAST & obj.AMask]Oprang$/;"	v
oprange	./cmd/internal/obj/arm64/asm7.go	/^var oprange [ALAST]Oprange$/;"	v
oprange	./cmd/internal/obj/ppc64/asm9.go	/^var oprange [ALAST & obj.AMask]Oprang$/;"	v
oprrr	./cmd/internal/obj/arm/asm5.go	/^func oprrr(ctxt *obj.Link, a int, sc int) uint32 {$/;"	f
oprrr	./cmd/internal/obj/arm64/asm7.go	/^func oprrr(ctxt *obj.Link, a int) uint32 {$/;"	f
oprrr	./cmd/internal/obj/ppc64/asm9.go	/^func oprrr(ctxt *obj.Link, a int) int32 {$/;"	f
opset	./cmd/internal/obj/arm/asm5.go	/^func opset(a, b0 uint16) {$/;"	f
opset	./cmd/internal/obj/ppc64/asm9.go	/^func opset(a, b0 int16) {$/;"	f
opstore	./cmd/internal/obj/arm64/asm7.go	/^func opstore(ctxt *obj.Link, a int) uint32 {$/;"	f
opstore	./cmd/internal/obj/ppc64/asm9.go	/^func opstore(ctxt *obj.Link, a int) int32 {$/;"	f
opstorex	./cmd/internal/obj/ppc64/asm9.go	/^func opstorex(ctxt *obj.Link, a int) int32 {$/;"	f
opstr	./cmd/internal/rsc.io/arm/armasm/tables.go	/^var opstr = [...]string{$/;"	v
opstr12	./cmd/internal/obj/arm64/asm7.go	/^func opstr12(ctxt *obj.Link, a int) uint32 {$/;"	f
opstr9	./cmd/internal/obj/arm64/asm7.go	/^func opstr9(ctxt *obj.Link, a int) uint32 {$/;"	f
optFlags	./cmd/pprof/internal/driver/interactive.go	/^func optFlags(p *profile.Profile, input string, f *flags) (*flags, error) {$/;"	f
optab	./cmd/internal/obj/arm/asm5.go	/^var optab = []Optab{$/;"	v
optab	./cmd/internal/obj/arm64/asm7.go	/^var optab = []Optab{$/;"	v
optab	./cmd/internal/obj/ppc64/asm9.go	/^var optab = []Optab{$/;"	v
optab	./cmd/internal/obj/x86/asm6.go	/^var optab =$/;"	v
optab	./go/constant/value_test.go	/^var optab = map[string]token.Token{$/;"	v
optimize	./strconv/atof.go	/^var optimize = true \/\/ can change for testing$/;"	v
option	./text/template/option.go	/^type option struct {$/;"	t
optionalRawValueTest	./encoding/asn1/marshal_test.go	/^type optionalRawValueTest struct {$/;"	t
optionalsExpected	./encoding/json/encode_test.go	/^var optionalsExpected = `{$/;"	v
optoas	./cmd/compile/internal/amd64/gsubr.go	/^func optoas(op int, t *gc.Type) int {$/;"	f
optoas	./cmd/compile/internal/arm/gsubr.go	/^func optoas(op int, t *gc.Type) int {$/;"	f
optoas	./cmd/compile/internal/arm64/gsubr.go	/^func optoas(op int, t *gc.Type) int {$/;"	f
optoas	./cmd/compile/internal/ppc64/gsubr.go	/^func optoas(op int, t *gc.Type) int {$/;"	f
optoas	./cmd/compile/internal/x86/gsubr.go	/^func optoas(op int, t *gc.Type) int {$/;"	f
opts	./crypto/rsa/pss_test.go	/^	var opts PSSOptions$/;"	v
optst	./cmd/yacc/yacc.go	/^var optst [][]int$/;"	v
opxrrr	./cmd/internal/obj/arm64/asm7.go	/^func opxrrr(ctxt *obj.Link, a int) uint32 {$/;"	f
or	./cmd/cgo/doc.go	/^name is a type or an ordinary identifier, so there will be no syntax$/;"	t
or	./cmd/cgo/gcc.go	/^	\/\/ whether name denotes a type or an expression.$/;"	t
or	./cmd/compile/internal/big/nat.go	/^func (z nat) or(x, y nat) nat {$/;"	f
or	./cmd/compile/internal/gc/subr.go	/^	\/\/ and either src or dst is not a named type or$/;"	t
or	./cmd/compile/internal/gc/typecheck.go	/^		 * type or expr$/;"	t
or	./cmd/doc/pkg.go	/^\/\/ oneLineValueGenDecl prints a var or const declaration as a single line.$/;"	v
or	./encoding/binary/binary.go	/^\/\/ sizeof returns the size >= 0 of variables for the given type or -1 if the type is not acceptable.$/;"	t
or	./encoding/gob/doc.go	/^from the transmitted type or value will be ignored in the destination.  If a field$/;"	t
or	./encoding/gob/type.go	/^	\/\/ If the field is a chan or func or pointer thereto, don't send it.$/;"	f
or	./fmt/doc.go	/^		Wrong type or unknown verb: %!verb(type=value)$/;"	t
or	./go/ast/ast.go	/^	\/\/ constant, type or variable declaration. A valid Lparen position$/;"	t
or	./go/doc/doc.go	/^	Names []string \/\/ var or const names in declaration order$/;"	v
or	./go/doc/doc.go	/^\/\/ Value is the documentation for a (possibly grouped) var or const declaration.$/;"	v
or	./go/doc/reader.go	/^\/\/ readFunc processes a func or method declaration.$/;"	f
or	./go/parser/interface.go	/^\/\/ be a valid Go (type or value) expression.$/;"	t
or	./go/parser/parser.go	/^			p.error(pos, "missing variable type or initialization")$/;"	t
or	./go/parser/parser.go	/^		\/\/ channel type or receive expression$/;"	t
or	./go/parser/parser.go	/^		\/\/ is a channel type or a receive operation - we only know$/;"	t
or	./go/parser/parser.go	/^		\/\/ pointer type or unary "*" expression$/;"	t
or	./go/parser/parser.go	/^\/\/ The result may be a type or even a raw type ([...]int). Callers must$/;"	t
or	./go/parser/short_test.go	/^	`package p; var x \/* ERROR "missing variable type or initialization" *\/ , y, z;`, \/\/ issue 9639$/;"	t
or	./go/printer/testdata/parser.go	/^		\/\/ channel type or receive expression$/;"	t
or	./go/printer/testdata/parser.go	/^		\/\/ pointer type or unary "*" expression$/;"	t
or	./go/printer/testdata/parser.go	/^\/\/ TODO(gri): parseExpr may return a type or even a raw type ([..]int) -$/;"	t
or	./go/types/assignments.go	/^		\/\/ type or the blank identifier, the constant is first converted to type$/;"	t
or	./go/types/decl.go	/^		var last *ast.ValueSpec \/\/ last ValueSpec with type or init exprs seen$/;"	t
or	./go/types/expr.go	/^	\/\/ The lhs must be of integer type or be representable$/;"	t
or	./go/types/expr.go	/^	\/\/ integer type or be an untyped constant that can be converted to$/;"	t
or	./go/types/resolver.go	/^				var last *ast.ValueSpec \/\/ last ValueSpec with type or init exprs seen$/;"	t
or	./go/types/resolver.go	/^			check.errorf(s.Pos(), "missing type or init expr")$/;"	t
or	./image/jpeg/reader.go	/^\/\/ the name of the type or function that they annotate.$/;"	t
or	./math/big/nat.go	/^func (z nat) or(x, y nat) nat {$/;"	f
or	./net/http/transfer.go	/^	\/\/ Logic based on response type or status$/;"	t
or	./net/rpc/server.go	/^\/\/ It returns an error if the receiver is not an exported type or has$/;"	t
or	./runtime/os2_nacl.go	/^	_EFTYPE          = 2049        \/* Inappropriate file type or format *\/$/;"	t
or	./syscall/tables_nacl.go	/^	EFTYPE          Errno = 2049       \/* Inappropriate file type or format *\/$/;"	t
or	./syscall/tables_nacl.go	/^	EFTYPE:          "Inappropriate file type or format",$/;"	t
or	./syscall/zerrors_darwin_386.go	/^	79:  "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_darwin_amd64.go	/^	79:  "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_darwin_arm.go	/^	79:  "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_darwin_arm64.go	/^	79:  "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_dragonfly_amd64.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_freebsd_386.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_freebsd_amd64.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_freebsd_arm.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_netbsd_386.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_netbsd_amd64.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_netbsd_arm.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_openbsd_386.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_openbsd_amd64.go	/^	79: "inappropriate file type or format",$/;"	t
or	./syscall/zerrors_openbsd_arm.go	/^	79: "inappropriate file type or format",$/;"	t
or	./text/template/funcs.go	/^func or(arg0 interface{}, args ...interface{}) interface{} {$/;"	f
ord	./cmd/compile/internal/big/float.go	/^func (x *Float) ord() int {$/;"	f
ord	./go/constant/value.go	/^func ord(x Value) int {$/;"	f
ord	./math/big/float.go	/^func (x *Float) ord() int {$/;"	f
order	./cmd/compile/internal/gc/order.go	/^	var order Order$/;"	v
order	./cmd/compile/internal/gc/order.go	/^func order(fn *Node) {$/;"	f
order	./compress/lzw/reader_test.go	/^		var order Order$/;"	v
order	./debug/gosym/symtab.go	/^	var order binary.ByteOrder = binary.BigEndian$/;"	v
order	./debug/plan9obj/file.go	/^	var order binary.ByteOrder = binary.BigEndian$/;"	v
order	./go/types/object.go	/^func (obj *object) order() uint32       { return obj.order_ }$/;"	f
order	./go/types/ordering.go	/^	var order []Object$/;"	v
order	./time/sleep_test.go	/^	var order []int$/;"	v
orderaddrtemp	./cmd/compile/internal/gc/order.go	/^func orderaddrtemp(np **Node, order *Order) {$/;"	f
orderblock	./cmd/compile/internal/gc/order.go	/^func orderblock(l **NodeList) {$/;"	f
ordercall	./cmd/compile/internal/gc/order.go	/^func ordercall(n *Node, order *Order) {$/;"	f
ordercallargs	./cmd/compile/internal/gc/order.go	/^func ordercallargs(l **NodeList, order *Order) {$/;"	f
ordercheapexpr	./cmd/compile/internal/gc/order.go	/^func ordercheapexpr(n *Node, order *Order) *Node {$/;"	f
ordercopyexpr	./cmd/compile/internal/gc/order.go	/^func ordercopyexpr(n *Node, t *Type, order *Order, clear int) *Node {$/;"	f
orderedSetObjects	./go/types/ordering.go	/^func orderedSetObjects(set map[Object]bool) []Object {$/;"	f
orderexpr	./cmd/compile/internal/gc/order.go	/^func orderexpr(np **Node, order *Order, lhs *Node) {$/;"	f
orderexprinplace	./cmd/compile/internal/gc/order.go	/^func orderexprinplace(np **Node, outer *Order) {$/;"	f
orderexprlist	./cmd/compile/internal/gc/order.go	/^func orderexprlist(l *NodeList, order *Order) {$/;"	f
orderexprlistinplace	./cmd/compile/internal/gc/order.go	/^func orderexprlistinplace(l *NodeList, order *Order) {$/;"	f
orderinit	./cmd/compile/internal/gc/order.go	/^func orderinit(n *Node, order *Order) {$/;"	f
ordermapassign	./cmd/compile/internal/gc/order.go	/^func ordermapassign(n *Node, order *Order) {$/;"	f
ordersafeexpr	./cmd/compile/internal/gc/order.go	/^func ordersafeexpr(n *Node, order *Order) *Node {$/;"	f
orderstmt	./cmd/compile/internal/gc/order.go	/^func orderstmt(n *Node, order *Order) {$/;"	f
orderstmtinplace	./cmd/compile/internal/gc/order.go	/^func orderstmtinplace(np **Node) {$/;"	f
orderstmtlist	./cmd/compile/internal/gc/order.go	/^func orderstmtlist(l *NodeList, order *Order) {$/;"	f
ordertemp	./cmd/compile/internal/gc/order.go	/^func ordertemp(t *Type, order *Order, clear bool) *Node {$/;"	f
ordinal	./regexp/testdata/testregex.c	/^	int		ordinal;$/;"	m	struct:Disc_s	file:
oregclass	./cmd/internal/obj/arm64/asm7.go	/^func oregclass(l int64) int {$/;"	f
origEnv	./cmd/go/main.go	/^var origEnv []string$/;"	v
origZoneDirs	./time/zoneinfo_unix.go	/^var origZoneDirs = zoneDirs$/;"	v
osDefaultInheritEnv	./net/http/cgi/host.go	/^var osDefaultInheritEnv = map[string][]string{$/;"	v
osError	./text/tabwriter/tabwriter.go	/^type osError struct {$/;"	t
os_beforeExit	./runtime/proc.go	/^func os_beforeExit() {$/;"	f
os_runtime_args	./runtime/runtime.go	/^func os_runtime_args() []string { return append([]string{}, argslice...) }$/;"	f
os_sigpipe	./runtime/os_nacl.go	/^func os_sigpipe() {$/;"	f
os_sigpipe	./runtime/os_plan9.go	/^func os_sigpipe() {$/;"	f
os_sigpipe	./runtime/os_windows.go	/^func os_sigpipe() {$/;"	f
os_sigpipe	./runtime/signal_unix.go	/^func os_sigpipe() {$/;"	f
osabiStrings	./debug/elf/elf.go	/^var osabiStrings = []intName{$/;"	v
osemi	./cmd/compile/internal/gc/go.y	/^osemi:$/;"	l
oset	./runtime/os1_darwin.go	/^	var oset uint32$/;"	v
oset	./runtime/os1_dragonfly.go	/^	var oset sigset$/;"	v
oset	./runtime/os1_freebsd.go	/^	var oset sigset$/;"	v
oset	./runtime/os1_linux.go	/^	var oset sigset$/;"	v
oshr	./cmd/internal/obj/arm/asm5.go	/^func oshr(ctxt *obj.Link, r int, v int32, b int, sc int) uint32 {$/;"	f
oshrr	./cmd/internal/obj/arm/asm5.go	/^func oshrr(ctxt *obj.Link, r int, i int, b int, sc int) uint32 {$/;"	f
osimple_stmt	./cmd/compile/internal/gc/go.y	/^osimple_stmt:$/;"	l
osinit	./runtime/os1_darwin.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_dragonfly.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_freebsd.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_linux.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_nacl.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_netbsd.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_openbsd.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_plan9.go	/^func osinit() {$/;"	f
osinit	./runtime/os1_windows.go	/^func osinit() {$/;"	f
osinit	./runtime/os3_solaris.go	/^func osinit() {$/;"	f
osr	./cmd/internal/obj/arm/asm5.go	/^func osr(ctxt *obj.Link, a int, r int, v int32, b int, sc int) uint32 {$/;"	f
osrr	./cmd/internal/obj/arm/asm5.go	/^func osrr(ctxt *obj.Link, r int, i int, b int, sc int) uint32 {$/;"	f
osummary	./cmd/yacc/yacc.go	/^func osummary() {$/;"	f
osyield	./runtime/os1_darwin.go	/^func osyield() {$/;"	f
osyield	./runtime/os1_plan9.go	/^func osyield() {$/;"	f
osyield	./runtime/os1_windows.go	/^func osyield() {$/;"	f
osyield	./runtime/os3_solaris.go	/^func osyield() {$/;"	f
osyield	./runtime/os_dragonfly.go	/^func osyield()$/;"	f
osyield	./runtime/os_freebsd.go	/^func osyield()$/;"	f
osyield	./runtime/os_linux.go	/^func osyield()$/;"	f
osyield	./runtime/os_nacl.go	/^func osyield()$/;"	f
osyield	./runtime/os_netbsd.go	/^func osyield()$/;"	f
osyield	./runtime/os_openbsd.go	/^func osyield()$/;"	f
osyield1	./runtime/os3_solaris.go	/^func osyield1()$/;"	f
othermutex	./runtime/race/testdata/sync_test.go	/^	var othermutex *sync.RWMutex$/;"	v
others	./cmd/yacc/yacc.go	/^func others() {$/;"	f
othertype	./cmd/compile/internal/gc/go.y	/^othertype:$/;"	l
otxt	./cmd/internal/obj/ppc64/asm9.go	/^	var otxt int64$/;"	v
out	./cmd/compile/internal/big/int_test.go	/^	var out []*Int$/;"	v
out	./cmd/compile/internal/big/nat_test.go	/^		var out nat$/;"	v
out	./cmd/compile/internal/big/rat_test.go	/^	var out []*Rat$/;"	v
out	./cmd/compile/internal/gc/racewalk.go	/^		var out *NodeList$/;"	v
out	./cmd/compile/internal/gc/reflect.go	/^	var out *NodeList$/;"	v
out	./cmd/compile/internal/gc/subr.go	/^	var out *NodeList$/;"	v
out	./cmd/cover/func.go	/^	var out *bufio.Writer$/;"	v
out	./cmd/cover/html.go	/^	var out *os.File$/;"	v
out	./cmd/dist/test.go	/^func (t *tester) out(v string) {$/;"	f
out	./cmd/dist/util.go	/^	var out []string$/;"	v
out	./cmd/go/get.go	/^	var out []string$/;"	v
out	./cmd/go/main.go	/^	var out []string$/;"	v
out	./cmd/internal/obj/arm/asm5.go	/^	var out [6 + 3]uint32$/;"	v
out	./cmd/internal/obj/arm64/asm7.go	/^	var out [6]uint32$/;"	v
out	./cmd/internal/obj/ppc64/asm9.go	/^	var out [6]uint32$/;"	v
out	./cmd/internal/rsc.io/arm/armasm/decode_test.go	/^		var out string$/;"	v
out	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^	var out uint32$/;"	v
out	./cmd/internal/rsc.io/x86/x86asm/decode_test.go	/^		var out string$/;"	v
out	./cmd/link/internal/ld/dwarf.go	/^			dwfunc.child = dwvar.link \/\/ take dwvar out from the top of the list$/;"	v
out	./cmd/link/internal/ld/pcln.go	/^	var out Pcdata$/;"	v
out	./cmd/pprof/pprof.go	/^	var out []*plugin.Sym$/;"	v
out	./crypto/cipher/benchmark_test.go	/^	var out []byte$/;"	v
out	./crypto/md5/gen.go	/^	var out []int$/;"	v
out	./crypto/tls/handshake_client_test.go	/^	var out bytes.Buffer$/;"	v
out	./crypto/x509/x509.go	/^		var out nameConstraints$/;"	v
out	./debug/dwarf/type.go	/^	\/\/ If the parse fails, take the type out of the cache$/;"	t
out	./debug/elf/file_test.go	/^	var out bytes.Buffer$/;"	v
out	./encoding/asn1/marshal.go	/^	var out bytes.Buffer$/;"	v
out	./encoding/gob/encoder_test.go	/^	var out []*Bug3$/;"	v
out	./encoding/gob/encoder_test.go	/^	var out []int$/;"	v
out	./encoding/hex/hex_test.go	/^		var out bytes.Buffer$/;"	v
out	./encoding/json/example_test.go	/^	var out bytes.Buffer$/;"	v
out	./flag/flag.go	/^func (f *FlagSet) out() io.Writer {$/;"	f
out	./go/internal/gccgoimporter/importer.go	/^		var out []byte$/;"	v
out	./image/draw/draw.go	/^	var out color.RGBA64$/;"	v
out	./math/big/int_test.go	/^	var out []*Int$/;"	v
out	./math/big/nat_test.go	/^		var out nat$/;"	v
out	./math/big/rat_test.go	/^	var out []*Rat$/;"	v
out	./net/dial_test.go	/^		var out addrList$/;"	v
out	./net/http/cgi/matryoshka_test.go	/^	var out bytes.Buffer$/;"	v
out	./net/http/request_test.go	/^	var out bytes.Buffer$/;"	v
out	./net/ip_test.go	/^		var out = IP{1, 2, 3, 4}$/;"	v
out	./net/ip_test.go	/^		var out IP$/;"	v
out	./net/lookup_windows_test.go	/^	var out bytes.Buffer$/;"	v
out	./net/rpc/jsonrpc/all_test.go	/^	var out bytes.Buffer$/;"	v
out	./os/exec/example_test.go	/^	var out bytes.Buffer$/;"	v
out	./os/exec/exec_test.go	/^	var out bytes.Buffer$/;"	v
out	./reflect/all_test.go	/^		var out []int$/;"	v
out	./runtime/vlop_arm.s	/^out:$/;"	l
out1	./runtime/vlop_arm.s	/^out1:$/;"	l
outOfRangeSelector	./compress/bzip2/bzip2_test.go	/^var outOfRangeSelector = []byte{$/;"	v
outTest	./unicode/script_test.go	/^var outTest = []T{ \/\/ not really worth being thorough$/;"	v
outbuf	./runtime/crash_unix_test.go	/^	var outbuf bytes.Buffer$/;"	v
outc64	./encoding/gob/codec_test.go	/^	type outc64 struct {$/;"	t
outcomes	./mime/quotedprintable/reader_test.go	/^	var outcomes []string$/;"	v
outer	./cmd/compile/internal/gc/closure.go	/^	var outer *Node$/;"	v
outer	./cmd/link/internal/ld/ldmacho.go	/^	var outer *LSym$/;"	v
outer	./reflect/all_test.go	/^type outer struct {$/;"	t
outervalue	./cmd/compile/internal/gc/walk.go	/^func outervalue(n *Node) *Node {$/;"	f
outf32	./encoding/gob/codec_test.go	/^	type outf32 struct {$/;"	t
outfile	./cmd/compile/internal/gc/go.go	/^var outfile string$/;"	v
outfile	./cmd/internal/obj/objfile.go	/^var outfile string$/;"	v
outi16	./encoding/gob/codec_test.go	/^	type outi16 struct {$/;"	t
outi32	./encoding/gob/codec_test.go	/^	type outi32 struct {$/;"	t
outi8	./encoding/gob/codec_test.go	/^	type outi8 struct {$/;"	t
output	./cmd/pack/pack.go	/^func (ar *Archive) output(entry *Entry, w io.Writer) {$/;"	f
output	./cmd/pprof/internal/report/report.go	/^	var output float64$/;"	v
output	./cmd/yacc/yacc.go	/^func output() {$/;"	f
output	./crypto/tls/handshake_server_test.go	/^	var output bytes.Buffer$/;"	v
output	./crypto/x509/root_darwin_arm_gen.go	/^var output = flag.String("output", "root_darwin_armx.go", "file name to write")$/;"	v
output	./encoding/gob/decgen.go	/^var output = flag.String("output", "dec_helpers.go", "file name to write")$/;"	v
output	./encoding/gob/encgen.go	/^var output = flag.String("output", "enc_helpers.go", "file name to write")$/;"	v
output	./net/http/serve_test.go	/^		var output bytes.Buffer$/;"	v
output	./net/http/serve_test.go	/^	var output bytes.Buffer$/;"	v
output	./unicode/maketables.go	/^var output *bufio.Writer \/\/ points to os.Stdout or to "gofmt > outputFile"$/;"	v
outputBuf	./archive/tar/reader_test.go	/^	var outputBuf bytes.Buffer$/;"	v
outputFile	./unicode/maketables.go	/^var outputFile = flag.String("output",$/;"	v
outputLock	./cmd/dist/util.go	/^var outputLock sync.Mutex$/;"	v
outputPrefix	./go/doc/example.go	/^var outputPrefix = regexp.MustCompile(`(?i)^[[:space:]]*output:`)$/;"	v
outsideUTCRange	./encoding/asn1/marshal.go	/^func outsideUTCRange(t time.Time) bool {$/;"	f
outu16	./encoding/gob/codec_test.go	/^	type outu16 struct {$/;"	t
outu32	./encoding/gob/codec_test.go	/^	type outu32 struct {$/;"	t
outu8	./encoding/gob/codec_test.go	/^	type outu8 struct {$/;"	t
overflow	./cmd/compile/internal/gc/const.go	/^func overflow(v Val, t *Type) {$/;"	f
overflow	./encoding/binary/varint.go	/^var overflow = errors.New("binary: varint overflows a 64-bit integer")$/;"	v
overflow	./encoding/gob/decode.go	/^func overflow(name string) error {$/;"	f
overflow	./math/exp_amd64.s	/^overflow: \/\/ return +Inf$/;"	l
overflow	./runtime/hashmap.go	/^func (b *bmap) overflow(t *maptype) *bmap {$/;"	f
overflowError	./runtime/panic.go	/^var overflowError = error(errorString("integer overflow"))$/;"	v
overflowFloat32	./reflect/value.go	/^func overflowFloat32(x float64) bool {$/;"	f
overflowPad	./reflect/type.go	/^	var overflowPad uintptr$/;"	v
overflowTests	./fmt/scan_test.go	/^var overflowTests = []ScanTest{$/;"	v
overlap_cplx	./cmd/compile/internal/gc/cplx.go	/^func overlap_cplx(f *Node, t *Node) bool {$/;"	f
overlap_reg	./cmd/compile/internal/gc/reg.go	/^func overlap_reg(o1 int64, w1 int, o2 int64, w2 int) bool {$/;"	f
overlapped	./runtime/defs_windows_386.go	/^type overlapped struct {$/;"	t
overlapped	./runtime/defs_windows_amd64.go	/^type overlapped struct {$/;"	t
overlappedEntry	./runtime/netpoll_windows.go	/^type overlappedEntry struct {$/;"	t
p	./go/types/hilbert_test.go	/^func (g *gen) p(format string, args ...interface{}) {$/;"	f
p	./go/types/issues_test.go	/^	const want = `L3 defs func p._()$/;"	f
p0	./cmd/link/internal/ld/go.go	/^	var p0, p1 int$/;"	v
p0R2	./math/j0.go	/^var p0R2 = [6]float64{$/;"	v
p0R3	./math/j0.go	/^var p0R3 = [6]float64{$/;"	v
p0R5	./math/j0.go	/^var p0R5 = [6]float64{$/;"	v
p0R8	./math/j0.go	/^var p0R8 = [6]float64{$/;"	v
p0S2	./math/j0.go	/^var p0S2 = [5]float64{$/;"	v
p0S3	./math/j0.go	/^var p0S3 = [5]float64{$/;"	v
p0S5	./math/j0.go	/^var p0S5 = [5]float64{$/;"	v
p0S8	./math/j0.go	/^var p0S8 = [5]float64{$/;"	v
p1	./cmd/compile/internal/amd64/ggen.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/amd64/peep.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm/cgen64.go	/^			var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm/cgen64.go	/^		var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm/ggen.go	/^		var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm/ggen.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm/peep.go	/^		var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm/peep.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm64/ggen.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/arm64/peep.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/gc/cgen.go	/^					var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/ppc64/ggen.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/ppc64/peep.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/x86/cgen64.go	/^		var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/x86/ggen.go	/^		var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/x86/ggen.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/compile/internal/x86/peep.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/internal/obj/arm/obj5.go	/^	var p1 *obj.Prog$/;"	v
p1	./cmd/internal/obj/ppc64/obj9.go	/^	var p1 *obj.Prog$/;"	v
p1R2	./math/j1.go	/^var p1R2 = [6]float64{$/;"	v
p1R3	./math/j1.go	/^var p1R3 = [6]float64{$/;"	v
p1R5	./math/j1.go	/^var p1R5 = [6]float64{$/;"	v
p1R8	./math/j1.go	/^var p1R8 = [6]float64{$/;"	v
p1S2	./math/j1.go	/^var p1S2 = [5]float64{$/;"	v
p1S3	./math/j1.go	/^var p1S3 = [5]float64{$/;"	v
p1S5	./math/j1.go	/^var p1S5 = [5]float64{$/;"	v
p1S8	./math/j1.go	/^var p1S8 = [5]float64{$/;"	v
p2	./cmd/compile/internal/amd64/ggen.go	/^	var p2 *obj.Prog$/;"	v
p2	./cmd/compile/internal/arm/cgen64.go	/^		var p2 *obj.Prog$/;"	v
p2	./cmd/compile/internal/arm/ggen.go	/^		var p2 *obj.Prog$/;"	v
p2	./cmd/compile/internal/arm64/ggen.go	/^	var p2 *obj.Prog$/;"	v
p2	./cmd/compile/internal/gc/cgen.go	/^			var p2 *obj.Prog \/\/ to be patched to panicindex.$/;"	v
p2	./cmd/compile/internal/gc/gen.go	/^		var p2 *obj.Prog$/;"	v
p2	./cmd/compile/internal/ppc64/ggen.go	/^	var p2 *obj.Prog$/;"	v
p2	./cmd/compile/internal/x86/ggen.go	/^	var p2 *obj.Prog$/;"	v
p2	./cmd/internal/obj/arm/obj5.go	/^	var p2 *obj.Prog$/;"	v
p2	./cmd/internal/obj/ppc64/obj9.go	/^	var p2 *obj.Prog$/;"	v
p224	./crypto/elliptic/p224.go	/^var p224 p224Curve$/;"	v
p224Add	./crypto/elliptic/p224.go	/^func p224Add(out, a, b *p224FieldElement) {$/;"	f
p224AddJacobian	./crypto/elliptic/p224.go	/^func p224AddJacobian(x3, y3, z3, x1, y1, z1, x2, y2, z2 *p224FieldElement) {$/;"	f
p224AlternativeToBig	./crypto/elliptic/p224_test.go	/^func p224AlternativeToBig(in *p224FieldElement) *big.Int {$/;"	f
p224BaseMultTests	./crypto/elliptic/elliptic_test.go	/^var p224BaseMultTests = []baseMultTest{$/;"	v
p224Contract	./crypto/elliptic/p224.go	/^func p224Contract(out, in *p224FieldElement) {$/;"	f
p224CopyConditional	./crypto/elliptic/p224.go	/^func p224CopyConditional(out, in *p224FieldElement, control uint32) {$/;"	f
p224Curve	./crypto/elliptic/p224.go	/^type p224Curve struct {$/;"	t
p224DoubleJacobian	./crypto/elliptic/p224.go	/^func p224DoubleJacobian(x3, y3, z3, x1, y1, z1 *p224FieldElement) {$/;"	f
p224FieldElement	./crypto/elliptic/p224.go	/^type p224FieldElement [8]uint32$/;"	t
p224FromBig	./crypto/elliptic/p224.go	/^func p224FromBig(out *p224FieldElement, in *big.Int) {$/;"	f
p224Invert	./crypto/elliptic/p224.go	/^func p224Invert(out, in *p224FieldElement) {$/;"	f
p224IsZero	./crypto/elliptic/p224.go	/^func p224IsZero(a *p224FieldElement) uint32 {$/;"	f
p224LargeFieldElement	./crypto/elliptic/p224.go	/^type p224LargeFieldElement [15]uint64$/;"	t
p224Mul	./crypto/elliptic/p224.go	/^func p224Mul(out, a, b *p224FieldElement, tmp *p224LargeFieldElement) {$/;"	f
p224P	./crypto/elliptic/p224.go	/^var p224P = [8]uint32{1, 0, 0, 0xffff000, 0xfffffff, 0xfffffff, 0xfffffff, 0xfffffff}$/;"	v
p224Reduce	./crypto/elliptic/p224.go	/^func p224Reduce(a *p224FieldElement) {$/;"	f
p224ReduceLarge	./crypto/elliptic/p224.go	/^func p224ReduceLarge(out *p224FieldElement, in *p224LargeFieldElement) {$/;"	f
p224ScalarMult	./crypto/elliptic/p224.go	/^func p224ScalarMult(outX, outY, outZ, inX, inY, inZ *p224FieldElement, scalar []byte) {$/;"	f
p224Square	./crypto/elliptic/p224.go	/^func p224Square(out, a *p224FieldElement, tmp *p224LargeFieldElement) {$/;"	f
p224Sub	./crypto/elliptic/p224.go	/^func p224Sub(out, a, b *p224FieldElement) {$/;"	f
p224ToAffine	./crypto/elliptic/p224.go	/^func p224ToAffine(x, y, z *p224FieldElement) (*big.Int, *big.Int) {$/;"	f
p224ToBig	./crypto/elliptic/p224.go	/^func p224ToBig(in *p224FieldElement) *big.Int {$/;"	f
p224ZeroModP31	./crypto/elliptic/p224.go	/^var p224ZeroModP31 = []uint32{two31p3, two31m3, two31m3, two31m15m3, two31m3, two31m3, two31m3, two31m3}$/;"	v
p224ZeroModP63	./crypto/elliptic/p224.go	/^var p224ZeroModP63 = [8]uint64{two63p35, two63m35, two63m35, two63m35, two63m35m19, two63m35, two63m35, two63m35}$/;"	v
p256Assign	./crypto/elliptic/p256.go	/^func p256Assign(out, in *[p256Limbs]uint32) {$/;"	f
p256CopyConditional	./crypto/elliptic/p256.go	/^func p256CopyConditional(out, in *[p256Limbs]uint32, mask uint32) {$/;"	f
p256Curve	./crypto/elliptic/p256.go	/^type p256Curve struct {$/;"	t
p256Diff	./crypto/elliptic/p256.go	/^func p256Diff(out, in, in2 *[p256Limbs]uint32) {$/;"	f
p256FromBig	./crypto/elliptic/p256.go	/^func p256FromBig(out *[p256Limbs]uint32, in *big.Int) {$/;"	f
p256GetBit	./crypto/elliptic/p256.go	/^func p256GetBit(scalar *[32]uint8, bit uint) uint32 {$/;"	f
p256GetScalar	./crypto/elliptic/p256.go	/^func p256GetScalar(out *[32]byte, in []byte) {$/;"	f
p256Invert	./crypto/elliptic/p256.go	/^func p256Invert(out, in *[p256Limbs]uint32) {$/;"	f
p256Mul	./crypto/elliptic/p256.go	/^func p256Mul(out, in, in2 *[p256Limbs]uint32) {$/;"	f
p256PointAdd	./crypto/elliptic/p256.go	/^func p256PointAdd(xOut, yOut, zOut, x1, y1, z1, x2, y2, z2 *[p256Limbs]uint32) {$/;"	f
p256PointAddMixed	./crypto/elliptic/p256.go	/^func p256PointAddMixed(xOut, yOut, zOut, x1, y1, z1, x2, y2 *[p256Limbs]uint32) {$/;"	f
p256PointDouble	./crypto/elliptic/p256.go	/^func p256PointDouble(xOut, yOut, zOut, x, y, z *[p256Limbs]uint32) {$/;"	f
p256PointToAffine	./crypto/elliptic/p256.go	/^func p256PointToAffine(xOut, yOut, x, y, z *[p256Limbs]uint32) {$/;"	f
p256Precomputed	./crypto/elliptic/p256.go	/^var p256Precomputed = [p256Limbs * 2 * 15 * 2]uint32{$/;"	v
p256ReduceCarry	./crypto/elliptic/p256.go	/^func p256ReduceCarry(inout *[p256Limbs]uint32, carry uint32) {$/;"	f
p256ReduceDegree	./crypto/elliptic/p256.go	/^func p256ReduceDegree(out *[p256Limbs]uint32, tmp [17]uint64) {$/;"	f
p256Scalar3	./crypto/elliptic/p256.go	/^func p256Scalar3(out *[p256Limbs]uint32) {$/;"	f
p256Scalar4	./crypto/elliptic/p256.go	/^func p256Scalar4(out *[p256Limbs]uint32) {$/;"	f
p256Scalar8	./crypto/elliptic/p256.go	/^func p256Scalar8(out *[p256Limbs]uint32) {$/;"	f
p256ScalarBaseMult	./crypto/elliptic/p256.go	/^func p256ScalarBaseMult(xOut, yOut, zOut *[p256Limbs]uint32, scalar *[32]uint8) {$/;"	f
p256ScalarMult	./crypto/elliptic/p256.go	/^func p256ScalarMult(xOut, yOut, zOut, x, y *[p256Limbs]uint32, scalar *[32]uint8) {$/;"	f
p256SelectAffinePoint	./crypto/elliptic/p256.go	/^func p256SelectAffinePoint(xOut, yOut *[p256Limbs]uint32, table []uint32, index uint32) {$/;"	f
p256SelectJacobianPoint	./crypto/elliptic/p256.go	/^func p256SelectJacobianPoint(xOut, yOut, zOut *[p256Limbs]uint32, table *[16][3][p256Limbs]uint32, index uint32) {$/;"	f
p256Square	./crypto/elliptic/p256.go	/^func p256Square(out, in *[p256Limbs]uint32) {$/;"	f
p256Sum	./crypto/elliptic/p256.go	/^func p256Sum(out, in, in2 *[p256Limbs]uint32) {$/;"	f
p256ToAffine	./crypto/elliptic/p256.go	/^func p256ToAffine(x, y, z *[p256Limbs]uint32) (xOut, yOut *big.Int) {$/;"	f
p256ToBig	./crypto/elliptic/p256.go	/^func p256ToBig(in *[p256Limbs]uint32) *big.Int {$/;"	f
p256Zero31	./crypto/elliptic/p256.go	/^var p256Zero31 = [p256Limbs]uint32{two31m3, two30m2, two31m2, two30p13m2, two31m2, two30m2, two31p24m2, two30m27m2, two31m2}$/;"	v
p3	./cmd/compile/internal/arm/cgen64.go	/^		var p3 *obj.Prog$/;"	v
p384	./crypto/elliptic/elliptic.go	/^var p384 *CurveParams$/;"	v
p4	./cmd/compile/internal/arm/cgen64.go	/^		var p4 *obj.Prog$/;"	v
p5	./cmd/compile/internal/arm/cgen64.go	/^		var p5 *obj.Prog$/;"	v
p521	./crypto/elliptic/elliptic.go	/^var p521 *CurveParams$/;"	v
p6	./cmd/compile/internal/arm/cgen64.go	/^		var p6 *obj.Prog$/;"	v
pHash	./crypto/tls/prf.go	/^func pHash(result, secret, seed []byte, hash func() hash.Hash) {$/;"	f
pIsNoninfiniteMask	./crypto/elliptic/p256.go	/^	var pIsNoninfiniteMask, mask, tableOffset uint32$/;"	v
pValue	./fmt/fmt_test.go	/^var pValue P$/;"	v
p_data	./crypto/md5/md5block_arm.s	/^#define p_data	data-8(SP)	\/\/ current data pointer$/;"	d
p_data	./crypto/sha1/sha1block_arm.s	/^#define p_data	data-8(SP)	\/\/ current data pointer (unused?)$/;"	d
p_end	./crypto/md5/md5block_arm.s	/^#define p_end	end-4(SP)	\/\/ pointer to the end of data$/;"	d
p_end	./crypto/sha1/sha1block_arm.s	/^#define p_end	end-4(SP)		\/\/ pointer to the end of data$/;"	d
pack	./syscall/srpc_nacl.go	/^func (m *msg) pack() error {$/;"	f
packDomainName	./net/dnsmsg.go	/^func packDomainName(s string, msg []byte, off int) (off1 int, ok bool) {$/;"	f
packEface	./reflect/value.go	/^func packEface(v Value) interface{} {$/;"	f
packRR	./net/dnsmsg.go	/^func packRR(rr dnsRR, msg []byte, off int) (off2 int, ok bool) {$/;"	f
packStruct	./net/dnsmsg.go	/^func packStruct(any dnsStruct, msg []byte, off int) (off1 int, ok bool) {$/;"	f
packUint32	./runtime/print1_write_android.go	/^func packUint32(b []byte, v uint32) {$/;"	f
package	./cmd/compile/internal/gc/go.y	/^package:$/;"	l
packageCache	./cmd/go/pkg.go	/^var packageCache = map[string]*Package{}$/;"	v
packageClause	./cmd/doc/pkg.go	/^func (pkg *Package) packageClause(checkUserPath bool) {$/;"	f
packageDoc	./cmd/doc/pkg.go	/^func (pkg *Package) packageDoc() {$/;"	f
packageList	./cmd/go/pkg.go	/^func packageList(roots []*Package) []*Package {$/;"	f
packageName	./syscall/mksyscall_windows.go	/^var packageName string$/;"	v
packageObjects	./go/types/resolver.go	/^func (check *Checker) packageObjects(objList []Object) {$/;"	f
packagename	./syscall/mksyscall_windows.go	/^func packagename() string {$/;"	f
packages	./cmd/go/pkg.go	/^func packages(args []string) []*Package {$/;"	f
packagesAndErrors	./cmd/go/pkg.go	/^func packagesAndErrors(args []string) []*Package {$/;"	f
packagesForBuild	./cmd/go/pkg.go	/^func packagesForBuild(args []string) []*Package {$/;"	f
packedAttribute	./cmd/cgo/out.go	/^func (p *Package) packedAttribute() string {$/;"	f
packetConnFile	./net/file_test.go	/^type packetConnFile interface {$/;"	t
packetConnTestData	./net/packetconn_test.go	/^func packetConnTestData(t *testing.T, network string) ([]byte, func()) {$/;"	f
packetConnTests	./net/packetconn_test.go	/^var packetConnTests = []struct {$/;"	v
packetListener	./net/mockserver_test.go	/^type packetListener struct {$/;"	t
packetTransceiver	./net/mockserver_test.go	/^func packetTransceiver(c PacketConn, wb []byte, dst Addr, ch chan<- error) {$/;"	f
packetTransponder	./net/mockserver_test.go	/^func packetTransponder(c PacketConn, ch chan<- error) {$/;"	f
packname	./cmd/compile/internal/gc/go.y	/^packname:$/;"	l
pad	./cmd/cgo/gcc.go	/^func (c *typeConv) pad(fld []*ast.Field, sizes []int64, size int64) ([]*ast.Field, []int64) {$/;"	f
pad	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func pad(enc []byte) []byte {$/;"	f
pad	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func pad(enc []byte) []byte {$/;"	f
pad	./fmt/format.go	/^func (f *fmt) pad(b []byte) {$/;"	f
pad	./net/http/fcgi/fcgi.go	/^var pad [maxPad]byte$/;"	v
pad	./regexp/regexp.go	/^func (re *Regexp) pad(a []int) []int {$/;"	f
pad	./runtime/proc_test.go	/^	var pad [128]uint64$/;"	v
padDead	./runtime/gcinfo_test.go	/^func padDead(mask []byte) []byte {$/;"	f
padSpaceBytes	./fmt/format.go	/^var padSpaceBytes = make([]byte, nByte)$/;"	v
padString	./fmt/format.go	/^func (f *fmt) padString(s string) {$/;"	f
padToBlockSize	./crypto/tls/conn.go	/^func padToBlockSize(payload []byte, blockSize int) (prefix, finalBlock []byte) {$/;"	f
padZeroBytes	./fmt/format.go	/^var padZeroBytes = make([]byte, nByte)$/;"	v
padded	./reflect/all_test.go	/^	type padded struct {$/;"	t
padding	./cmd/compile/internal/big/ftoa.go	/^	var padding int$/;"	v
padding	./math/big/ftoa.go	/^	var padding int$/;"	v
paddingTests	./crypto/tls/conn_test.go	/^var paddingTests = []struct {$/;"	v
paeth	./image/png/paeth.go	/^func paeth(a, b, c uint8) uint8 {$/;"	f
pageID	./runtime/malloc.go	/^type pageID uintptr$/;"	t
pagesToSweep	./runtime/mgc.go	/^	var pagesToSweep uintptr$/;"	v
paint1	./cmd/compile/internal/gc/reg.go	/^func paint1(f *Flow, bn int) {$/;"	f
paint2	./cmd/compile/internal/gc/reg.go	/^func paint2(f *Flow, bn int, depth int) uint64 {$/;"	f
paint3	./cmd/compile/internal/gc/reg.go	/^func paint3(f *Flow, bn int, rb uint64, rn int) {$/;"	f
pair	./html/template/doc.go	/^  <script>var pair = {"A": "foo", "B": "bar"};<\/script>$/;"	v
pair	./html/template/doc.go	/^  <script>var pair = {{.}};<\/script>$/;"	v
pair	./reflect/all_test.go	/^type pair struct {$/;"	t
pairedParensPrefixLen	./go/doc/comment.go	/^func pairedParensPrefixLen(s string) int {$/;"	f
pairedParensPrefixLenTests	./go/doc/comment_test.go	/^var pairedParensPrefixLenTests = []struct {$/;"	v
pairs	./encoding/ascii85/ascii85_test.go	/^var pairs = []testpair{$/;"	v
pairs	./encoding/base32/base32_test.go	/^var pairs = []testpair{$/;"	v
pairs	./encoding/base64/base64_test.go	/^var pairs = []testpair{$/;"	v
pairs	./go/types/predicates.go	/^\/\/ An ifacePair is a node in a stack of interface type pairs compared for identity.$/;"	t
pal	./image/png/writer.go	/^	var pal color.Palette$/;"	v
palette	./image/draw/bench_test.go	/^var palette = color.Palette{$/;"	v
paletted	./image/png/reader_test.go	/^	var paletted *image.Paletted$/;"	v
palettesEqual	./image/gif/writer_test.go	/^func palettesEqual(p, q color.Palette) bool {$/;"	f
pallValue	./encoding/json/decode_test.go	/^var pallValue = All{$/;"	v
pallValueCompact	./encoding/json/decode_test.go	/^var pallValueCompact = strings.Map(noSpace, pallValueIndent)$/;"	v
pallValueIndent	./encoding/json/decode_test.go	/^var pallValueIndent = `{$/;"	v
panic	./builtin/builtin.go	/^func panic(v interface{})$/;"	f
panic	./cmd/vet/testdata/deadcode.go	/^	var panic = func(int) {}$/;"	v
panic64	./sync/atomic/doc.go	/^func panic64() {$/;"	f
panicHandler	./go/constant/value_test.go	/^func panicHandler(v *Value) {$/;"	f
panicOnError	./cmd/asm/internal/asm/parse.go	/^var panicOnError bool$/;"	v
panicOnSeek	./net/http/fs_test.go	/^type panicOnSeek struct{ io.ReadSeeker }$/;"	t
panicStr	./cmd/compile/internal/big/natconv_test.go	/^	var panicStr string$/;"	v
panicStr	./math/big/natconv_test.go	/^	var panicStr string$/;"	v
panicWriter	./text/tabwriter/tabwriter_test.go	/^type panicWriter struct{}$/;"	t
panicdiv	./cmd/compile/internal/amd64/ggen.go	/^var panicdiv *gc.Node$/;"	v
panicdiv	./cmd/compile/internal/arm64/ggen.go	/^var panicdiv *gc.Node$/;"	v
panicdiv	./cmd/compile/internal/ppc64/ggen.go	/^var panicdiv *gc.Node$/;"	v
panicdiv	./cmd/compile/internal/x86/ggen.go	/^var panicdiv *gc.Node$/;"	v
panicdivide	./cmd/compile/internal/gc/builtin/runtime.go	/^func panicdivide()$/;"	f
panicdivide	./runtime/panic.go	/^func panicdivide() {$/;"	f
panicdottype	./cmd/compile/internal/gc/builtin/runtime.go	/^func panicdottype(have, want, iface *byte)$/;"	f
panicdottype	./runtime/iface.go	/^func panicdottype(have, want, iface *_type) {$/;"	f
panicfloat	./runtime/panic.go	/^func panicfloat() {$/;"	f
panicindex	./cmd/compile/internal/gc/builtin/runtime.go	/^func panicindex()$/;"	f
panicindex	./runtime/panic.go	/^func panicindex() {$/;"	f
paniclk	./runtime/panic1.go	/^var paniclk mutex$/;"	v
panicmem	./runtime/cgo/signal_darwin_armx.go	/^func panicmem()$/;"	f
panicmem	./runtime/panic.go	/^func panicmem() {$/;"	f
panicoverflow	./runtime/panic.go	/^func panicoverflow() {$/;"	f
panics	./reflect/all_test.go	/^	\/\/ check that invalid key type panics$/;"	t
panics	./sync/atomic/value.go	/^\/\/ Store of an inconsistent type panics, as does Store(nil).$/;"	t
panicslice	./cmd/compile/internal/gc/builtin/runtime.go	/^func panicslice()$/;"	f
panicslice	./cmd/compile/internal/gc/go.go	/^var panicslice *Node$/;"	v
panicslice	./runtime/panic.go	/^func panicslice() {$/;"	f
panictests	./fmt/fmt_test.go	/^var panictests = []struct {$/;"	v
panicwrap	./cmd/compile/internal/gc/builtin/runtime.go	/^func panicwrap(string, string, string)$/;"	f
panicwrap	./runtime/error.go	/^func panicwrap(pkg, typ, meth string) {$/;"	f
parLineBeg	./go/printer/nodes.go	/^			var parLineBeg int$/;"	v
parLineEnd	./go/printer/nodes.go	/^			var parLineEnd = p.lineFor(par.Type.End())$/;"	v
parallel	./cmd/go/go_test.go	/^func (tg *testgoData) parallel() {$/;"	f
parallelReader	./sync/rwmutex_test.go	/^func parallelReader(m *RWMutex, clocked, cunlock, cdone chan bool) {$/;"	f
param	./cmd/compile/internal/gc/gen.go	/^		\/\/ if func param, need separate temporary$/;"	f
param	./cmd/compile/internal/gc/syntax.go	/^	\/\/ ONAME func param with PHEAP$/;"	f
paramBytes	./crypto/x509/x509.go	/^		var paramBytes []byte$/;"	v
parameterized	./cmd/internal/obj/pcln.go	/^\/\/ returned by valfunc parameterized by arg. The invocation of valfunc to update the$/;"	f
parameterized	./cmd/link/internal/ld/pcln.go	/^\/\/ returned by valfunc parameterized by arg. The invocation of valfunc to update the$/;"	f
parameters	./go/printer/nodes.go	/^func (p *printer) parameters(fields *ast.FieldList) {$/;"	f
paramoutheap	./cmd/compile/internal/gc/walk.go	/^func paramoutheap(fn *Node) bool {$/;"	f
params	./cmd/cgo/out.go	/^		\/\/ We know the type params are correct, because$/;"	t
params	./cmd/cgo/out.go	/^		\/\/ the Go equivalents had good type params.$/;"	t
params	./go/parser/parser.go	/^	var params []*ast.Field$/;"	v
params	./go/printer/testdata/parser.go	/^	var params []*ast.Field$/;"	v
params	./go/types/builtins.go	/^		var params []Type$/;"	v
params	./go/types/call.go	/^		var params []*Var$/;"	v
params	./go/types/selection.go	/^		var params []*Var$/;"	v
params	./net/rpc/jsonrpc/server.go	/^	var params [1]interface{}$/;"	v
paramstoheap	./cmd/compile/internal/gc/walk.go	/^func paramstoheap(argin **Type, out int) *NodeList {$/;"	f
parenExpr	./cmd/api/testdata/src/pkg/p1/p1.go	/^var parenExpr = (1 + 5)$/;"	v
parens	./go/types/typestring.go	/^		var parens bool$/;"	v
parent	./syscall/exec_unix_test.go	/^func parent() (pid, pgrp int) {$/;"	f
parentStack	./encoding/xml/marshal.go	/^type parentStack struct {$/;"	t
parfor	./runtime/parfor.go	/^type parfor struct {$/;"	t
parforalloc	./runtime/parfor.go	/^func parforalloc(nthrmax uint32) *parfor {$/;"	f
parfordo	./runtime/parfor.go	/^func parfordo(desc *parfor) {$/;"	f
parforsetup	./runtime/parfor.go	/^func parforsetup(desc *parfor, nthr, n uint32, wait bool, body func(*parfor, uint32)) {$/;"	f
parforthread	./runtime/parfor.go	/^type parforthread struct {$/;"	t
park_m	./runtime/proc1.go	/^func park_m(gp *g) {$/;"	f
parkunlock_c	./runtime/proc1.go	/^func parkunlock_c(gp *g, lock unsafe.Pointer) bool {$/;"	f
parse	./cmd/cgo/ast.go	/^func parse(name string, flags parser.Mode) *ast.File {$/;"	f
parse	./cmd/pprof/internal/profile/legacy_profile.go	/^	var parse func([]byte) (uint64, []byte)$/;"	v
parse	./debug/gosym/pclntab.go	/^func (t *LineTable) parse(targetPC uint64, targetLine int) (b []byte, pc uint64, line int) {$/;"	f
parse	./debug/gosym/pclntab_test.go	/^func parse(file string, f *elf.File, t *testing.T) (*elf.File, *Table) {$/;"	f
parse	./net/url/url.go	/^func parse(rawurl string, viaRequest bool) (url *URL, err error) {$/;"	f
parse	./text/template/parse/parse.go	/^func (t *Tree) parse(treeSet map[string]*Tree) (next Node) {$/;"	f
parse	./time/format.go	/^func parse(layout, value string, defaultLocation, local *Location) (Time, error) {$/;"	f
parseARMCondition	./cmd/asm/internal/arch/arm.go	/^func parseARMCondition(cond string, ls, scond map[string]uint8) (uint8, bool) {$/;"	f
parseAbbrev	./debug/dwarf/entry.go	/^func (d *Data) parseAbbrev(off uint32, vers int) (abbrevTable, error) {$/;"	f
parseAcceptError	./net/error_test.go	/^func parseAcceptError(nestedErr error) error {$/;"	f
parseAdditionalSections	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseAdditionalSections(l string, b *bytes.Buffer, p *Profile) (err error) {$/;"	f
parseAddress	./net/mail/message.go	/^func (p *addrParser) parseAddress() (addr *Address, err error) {$/;"	f
parseAddressList	./net/mail/message.go	/^func (p *addrParser) parseAddressList() ([]*Address, error) {$/;"	f
parseArchive	./cmd/internal/goobj/read.go	/^func (r *objReader) parseArchive() error {$/;"	f
parseArgNumber	./fmt/print.go	/^func parseArgNumber(format string) (index int, wid int, ok bool) {$/;"	f
parseArgs	./cmd/doc/main.go	/^func parseArgs(args []string) (*build.Package, string, string) {$/;"	f
parseArrayOrSliceType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseArrayOrSliceType(pkg *types.Package) types.Type {$/;"	f
parseArrayType	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseArrayType() types.Type {$/;"	f
parseArrayType	./go/parser/parser.go	/^func (p *parser) parseArrayType() ast.Expr {$/;"	f
parseArrayType	./go/printer/testdata/parser.go	/^func (p *parser) parseArrayType(ellipsisOk bool) ast.Expr {$/;"	f
parseAuthority	./net/url/url.go	/^func parseAuthority(authority string) (user *Userinfo, host string, err error) {$/;"	f
parseBase128Int	./encoding/asn1/asn1.go	/^func parseBase128Int(bytes []byte, initOffset int) (ret, offset int, err error) {$/;"	f
parseBasicAuth	./net/http/request.go	/^func parseBasicAuth(auth string) (username, password string, ok bool) {$/;"	f
parseBasicAuthTests	./net/http/request_test.go	/^var parseBasicAuthTests = []struct {$/;"	v
parseBasicType	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseBasicType() types.Type {$/;"	f
parseBigInt	./encoding/asn1/asn1.go	/^func parseBigInt(bytes []byte) *big.Int {$/;"	f
parseBinaryExpr	./go/parser/parser.go	/^func (p *parser) parseBinaryExpr(lhs bool, prec1 int) ast.Expr {$/;"	f
parseBinaryExpr	./go/printer/testdata/parser.go	/^func (p *parser) parseBinaryExpr(lhs bool, prec1 int) ast.Expr {$/;"	f
parseBitString	./encoding/asn1/asn1.go	/^func parseBitString(bytes []byte) (ret BitString, err error) {$/;"	f
parseBlockStmt	./go/parser/parser.go	/^func (p *parser) parseBlockStmt() *ast.BlockStmt {$/;"	f
parseBlockStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseBlockStmt() *ast.BlockStmt {$/;"	f
parseBody	./go/parser/parser.go	/^func (p *parser) parseBody(scope *ast.Scope) *ast.BlockStmt {$/;"	f
parseBody	./go/printer/testdata/parser.go	/^func (p *parser) parseBody(scope *ast.Scope) *ast.BlockStmt {$/;"	f
parseBool	./cmd/pprof/internal/driver/interactive.go	/^func parseBool(v string) (bool, error) {$/;"	f
parseBool	./encoding/asn1/asn1.go	/^func parseBool(bytes []byte) (ret bool, err error) {$/;"	f
parseBranchStmt	./go/parser/parser.go	/^func (p *parser) parseBranchStmt(tok token.Token) *ast.BranchStmt {$/;"	f
parseBranchStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseBranchStmt(tok token.Token) *ast.BranchStmt {$/;"	f
parseCIDRTests	./net/ip_test.go	/^var parseCIDRTests = []struct {$/;"	v
parseCPU	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseCPU(b []byte) (*Profile, error) {$/;"	f
parseCPUSamples	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseCPUSamples(b []byte, parse func(b []byte) (uint64, []byte), adjust bool, p *Profile) ([]byte, map[uint64]*Location, error) {$/;"	f
parseCallExpr	./go/parser/parser.go	/^func (p *parser) parseCallExpr(callType string) *ast.CallExpr {$/;"	f
parseCallExpr	./go/printer/testdata/parser.go	/^func (p *parser) parseCallExpr() *ast.CallExpr {$/;"	f
parseCallOrConversion	./go/parser/parser.go	/^func (p *parser) parseCallOrConversion(fun ast.Expr) *ast.CallExpr {$/;"	f
parseCallOrConversion	./go/printer/testdata/parser.go	/^func (p *parser) parseCallOrConversion(fun ast.Expr) *ast.CallExpr {$/;"	f
parseCaseClause	./go/parser/parser.go	/^func (p *parser) parseCaseClause(typeSwitch bool) *ast.CaseClause {$/;"	f
parseCaseClause	./go/printer/testdata/parser.go	/^func (p *parser) parseCaseClause(exprSwitch bool) *ast.CaseClause {$/;"	f
parseCategory	./unicode/maketables.go	/^func parseCategory(line string) (state State) {$/;"	f
parseCertificate	./crypto/x509/x509.go	/^func parseCertificate(in *certificate) (*Certificate, error) {$/;"	f
parseCertificateRequest	./crypto/x509/x509.go	/^func parseCertificateRequest(in *certificateRequest) (*CertificateRequest, error) {$/;"	f
parseChanType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseChanType(pkg *types.Package) types.Type {$/;"	f
parseChanType	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseChanType() types.Type {$/;"	f
parseChanType	./go/parser/parser.go	/^func (p *parser) parseChanType() *ast.ChanType {$/;"	f
parseChanType	./go/printer/testdata/parser.go	/^func (p *parser) parseChanType() *ast.ChanType {$/;"	f
parseChunk	./image/png/reader.go	/^func (d *decoder) parseChunk() error {$/;"	f
parseClass	./regexp/syntax/parse.go	/^func (p *parser) parseClass(s string) (rest string, err error) {$/;"	f
parseClassChar	./regexp/syntax/parse.go	/^func (p *parser) parseClassChar(s, wholeClass string) (r rune, rest string, err error) {$/;"	f
parseCloseError	./net/error_test.go	/^func parseCloseError(nestedErr error) error {$/;"	f
parseCodeLine	./net/textproto/reader.go	/^func parseCodeLine(line string, expectCode int) (code int, continued bool, message string, err error) {$/;"	f
parseCommClause	./go/parser/parser.go	/^func (p *parser) parseCommClause() *ast.CommClause {$/;"	f
parseCommClause	./go/printer/testdata/parser.go	/^func (p *parser) parseCommClause() *ast.CommClause {$/;"	f
parseCommonError	./net/error_test.go	/^func parseCommonError(nestedErr error) error {$/;"	f
parseConst	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseConst(pkg *types.Package) *types.Const {$/;"	f
parseConstDecl	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseConstDecl() {$/;"	f
parseConstSpec	./go/printer/testdata/parser.go	/^func parseConstSpec(p *parser, doc *ast.CommentGroup, iota int) ast.Spec {$/;"	f
parseConstValue	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseConstValue() (val constant.Value, typ types.Type) {$/;"	f
parseContentDisposition	./mime/multipart/multipart.go	/^func (p *Part) parseContentDisposition() {$/;"	f
parseContentLength	./net/http/transfer.go	/^func parseContentLength(cl string) (int64, error) {$/;"	f
parseContentTypeTest	./net/http/request_test.go	/^type parseContentTypeTest struct {$/;"	t
parseContentTypeTests	./net/http/request_test.go	/^var parseContentTypeTests = []parseContentTypeTest{$/;"	v
parseContention	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseContention(b []byte) (p *Profile, err error) {$/;"	f
parseContentionSample	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseContentionSample(line string, period, cpuHz int64) (value []int64, addrs []uint64, err error) {$/;"	f
parseContext	./cmd/api/goapi.go	/^func parseContext(c string) *build.Context {$/;"	f
parseContinuation	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^func parseContinuation(line []byte, enc []byte) []byte {$/;"	f
parseContinuation	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func parseContinuation(line []byte, enc []byte) []byte {$/;"	f
parseControl	./text/template/parse/parse.go	/^func (t *Tree) parseControl(allowElseIf bool, context string) (pos Pos, line int, pipe *PipeNode, list, elseList *ListNode) {$/;"	f
parseCookieValue	./net/http/cookie.go	/^func parseCookieValue(raw string, allowDoubleQuote bool) (string, bool) {$/;"	f
parseCpuList	./go/doc/testdata/testing.go	/^func parseCpuList() {$/;"	f
parseCpuList	./testing/testing.go	/^func parseCpuList() {$/;"	f
parseCriteria	./net/nss.go	/^func parseCriteria(x []byte) (c []nssCriterion, err error) {$/;"	f
parseDate	./net/mail/message.go	/^func parseDate(date string) (time.Time, error) {$/;"	f
parseDecl	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseDecl() {$/;"	f
parseDecl	./go/parser/parser.go	/^func (p *parser) parseDecl(sync func(*parser)) ast.Decl {$/;"	f
parseDecl	./go/printer/testdata/parser.go	/^func (p *parser) parseDecl() ast.Decl {$/;"	f
parseDeclList	./go/printer/testdata/parser.go	/^func (p *parser) parseDeclList() (list []ast.Decl) {$/;"	f
parseDeferStmt	./go/parser/parser.go	/^func (p *parser) parseDeferStmt() ast.Stmt {$/;"	f
parseDeferStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseDeferStmt() ast.Stmt {$/;"	f
parseDefinition	./text/template/parse/parse.go	/^func (t *Tree) parseDefinition(treeSet map[string]*Tree) {$/;"	f
parseDialError	./net/error_test.go	/^func parseDialError(nestedErr error) error {$/;"	f
parseDirective	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseDirective() {$/;"	f
parseDotIdent	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseDotIdent() string {$/;"	f
parseDurationTests	./time/time_test.go	/^var parseDurationTests = []struct {$/;"	v
parseECPrivateKey	./crypto/x509/sec1.go	/^func parseECPrivateKey(namedCurveOID *asn1.ObjectIdentifier, der []byte) (key *ecdsa.PrivateKey, err error) {$/;"	f
parseElement	./go/parser/parser.go	/^func (p *parser) parseElement() ast.Expr {$/;"	f
parseElement	./go/printer/testdata/parser.go	/^func (p *parser) parseElement(keyOk bool) ast.Expr {$/;"	f
parseElementList	./go/parser/parser.go	/^func (p *parser) parseElementList() (list []ast.Expr) {$/;"	f
parseElementList	./go/printer/testdata/parser.go	/^func (p *parser) parseElementList() (list []ast.Expr) {$/;"	f
parseErrorTests	./time/format_test.go	/^var parseErrorTests = []ParseErrorTest{$/;"	v
parseEscape	./regexp/syntax/parse.go	/^func (p *parser) parseEscape(s string) (r rune, rest string, err error) {$/;"	f
parseEvents	./cmd/trace/main.go	/^func parseEvents() ([]*trace.Event, error) {$/;"	f
parseEvents	./internal/trace/parser.go	/^func parseEvents(rawEvents []rawEvent) (events []*Event, err error) {$/;"	f
parseExport	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseExport() *types.Package {$/;"	f
parseExportedName	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseExportedName() (pkg *types.Package, name string) {$/;"	f
parseExportedName	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseExportedName() (pkg *types.Package, name string) {$/;"	f
parseExpr	./cmd/gofmt/rewrite.go	/^func parseExpr(s, what string) ast.Expr {$/;"	f
parseExpr	./go/parser/parser.go	/^func (p *parser) parseExpr(lhs bool) ast.Expr {$/;"	f
parseExpr	./go/printer/testdata/parser.go	/^func (p *parser) parseExpr(lhs bool) ast.Expr {$/;"	f
parseExprList	./go/parser/parser.go	/^func (p *parser) parseExprList(lhs bool) (list []ast.Expr) {$/;"	f
parseExprList	./go/printer/testdata/parser.go	/^func (p *parser) parseExprList(lhs bool) (list []ast.Expr) {$/;"	f
parseField	./encoding/asn1/asn1.go	/^func parseField(v reflect.Value, bytes []byte, initOffset int, params fieldParameters) (offset int, err error) {$/;"	f
parseField	./encoding/csv/reader.go	/^func (r *Reader) parseField() (haveField bool, delim rune, err error) {$/;"	f
parseField	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseField(pkg *types.Package) (field *types.Var, tag string) {$/;"	f
parseField	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseField() (*types.Var, string) {$/;"	f
parseFieldDecl	./go/parser/parser.go	/^func (p *parser) parseFieldDecl(scope *ast.Scope) *ast.Field {$/;"	f
parseFieldDecl	./go/printer/testdata/parser.go	/^func (p *parser) parseFieldDecl(scope *ast.Scope) *ast.Field {$/;"	f
parseFieldParameters	./encoding/asn1/common.go	/^func parseFieldParameters(str string) (ret fieldParameters) {$/;"	f
parseFieldParametersTest	./encoding/asn1/asn1_test.go	/^type parseFieldParametersTest struct {$/;"	t
parseFieldParametersTestData	./encoding/asn1/asn1_test.go	/^var parseFieldParametersTestData []parseFieldParametersTest = []parseFieldParametersTest{$/;"	v
parseFile	./cmd/api/goapi.go	/^func (w *Walker) parseFile(dir, file string) (*ast.File, error) {$/;"	f
parseFile	./go/parser/parser.go	/^func (p *parser) parseFile() *ast.File {$/;"	f
parseFile	./go/printer/testdata/parser.go	/^func (p *parser) parseFile() *ast.File {$/;"	f
parseFiles	./go/types/check_test.go	/^func parseFiles(t *testing.T, filenames []string) ([]*ast.File, []error) {$/;"	f
parseFiles	./html/template/template.go	/^func parseFiles(t *Template, filenames ...string) (*Template, error) {$/;"	f
parseFiles	./text/template/helper.go	/^func parseFiles(t *Template, filenames ...string) (*Template, error) {$/;"	f
parseFixPrint	./cmd/fix/main_test.go	/^func parseFixPrint(t *testing.T, fn func(*ast.File) bool, desc, in string, mustBeGofmt bool) (out string, fixed, ok bool) {$/;"	f
parseFlags	./cmd/cover/cover.go	/^func parseFlags() error {$/;"	f
parseFlags	./cmd/vet/print.go	/^func (s *formatState) parseFlags() {$/;"	f
parseForStmt	./go/parser/parser.go	/^func (p *parser) parseForStmt() ast.Stmt {$/;"	f
parseForStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseForStmt() ast.Stmt {$/;"	f
parseFowlerResult	./regexp/exec_test.go	/^func parseFowlerResult(s string) (ok, compiled, matched bool, pos []int) {$/;"	f
parseFunc	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseFunc(pkg *types.Package) *types.Func {$/;"	f
parseFunc	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseFunc(recv *types.Var) *types.Signature {$/;"	f
parseFunc	./go/printer/example_test.go	/^func parseFunc(filename, functionname string) (fun *ast.FuncDecl, fset *token.FileSet) {$/;"	f
parseFuncDecl	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseFuncDecl() {$/;"	f
parseFuncDecl	./go/parser/parser.go	/^func (p *parser) parseFuncDecl() *ast.FuncDecl {$/;"	f
parseFuncDecl	./go/printer/testdata/parser.go	/^func (p *parser) parseFuncDecl() *ast.FuncDecl {$/;"	f
parseFuncType	./go/parser/parser.go	/^func (p *parser) parseFuncType() (*ast.FuncType, *ast.Scope) {$/;"	f
parseFuncType	./go/printer/testdata/parser.go	/^func (p *parser) parseFuncType() (*ast.FuncType, *ast.Scope) {$/;"	f
parseFuncTypeOrLit	./go/parser/parser.go	/^func (p *parser) parseFuncTypeOrLit() ast.Expr {$/;"	f
parseFuncTypeOrLit	./go/printer/testdata/parser.go	/^func (p *parser) parseFuncTypeOrLit() ast.Expr {$/;"	f
parseFunctionType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseFunctionType(pkg *types.Package) *types.Signature {$/;"	f
parseGMT	./time/format.go	/^func parseGMT(value string) int {$/;"	f
parseGenDecl	./go/parser/parser.go	/^func (p *parser) parseGenDecl(keyword token.Token, f parseSpecFunction) *ast.GenDecl {$/;"	f
parseGenDecl	./go/printer/testdata/parser.go	/^func (p *parser) parseGenDecl(keyword token.Token, f parseSpecFunction) *ast.GenDecl {$/;"	f
parseGeneralizedTime	./encoding/asn1/asn1.go	/^func parseGeneralizedTime(bytes []byte) (ret time.Time, err error) {$/;"	f
parseGlob	./html/template/template.go	/^func parseGlob(t *Template, pattern string) (*Template, error) {$/;"	f
parseGlob	./text/template/helper.go	/^func parseGlob(t *Template, pattern string) (*Template, error) {$/;"	f
parseGoCount	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseGoCount(b []byte) (*Profile, error) {$/;"	f
parseGoStmt	./go/parser/parser.go	/^func (p *parser) parseGoStmt() ast.Stmt {$/;"	f
parseGoStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseGoStmt() ast.Stmt {$/;"	f
parseHTTPVersionTests	./net/http/request_test.go	/^var parseHTTPVersionTests = []struct {$/;"	v
parseHeap	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseHeap(b []byte) (p *Profile, err error) {$/;"	f
parseHeapSample	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseHeapSample(line string, rate int64, sampling string) (value []int64, blocksize int64, addrs []uint64, err error) {$/;"	f
parseHex	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func parseHex(hex []byte, raw []byte) ([]byte, bool) {$/;"	f
parseHex	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func parseHex(hex []byte, raw []byte) ([]byte, bool) {$/;"	f
parseHexAddresses	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseHexAddresses(s string) []uint64 {$/;"	f
parseHexUint	./net/http/internal/chunked.go	/^func parseHexUint(v []byte) (n uint64, err error) {$/;"	f
parseHost	./net/url/url.go	/^func parseHost(host string) (string, error) {$/;"	f
parseIA5String	./encoding/asn1/asn1.go	/^func parseIA5String(bytes []byte) (ret string, err error) {$/;"	f
parseIDAT	./image/png/reader.go	/^func (d *decoder) parseIDAT(length uint32) (err error) {$/;"	f
parseIEND	./image/png/reader.go	/^func (d *decoder) parseIEND(length uint32) error {$/;"	f
parseIHDR	./image/png/reader.go	/^func (d *decoder) parseIHDR(length uint32) error {$/;"	f
parseIPTests	./net/ip_test.go	/^var parseIPTests = []struct {$/;"	v
parseIPv4	./net/ip.go	/^func parseIPv4(s string) IP {$/;"	f
parseIPv6	./net/ip.go	/^func parseIPv6(s string, zoneAllowed bool) (ip IP, zone string) {$/;"	f
parseIdent	./go/parser/parser.go	/^func (p *parser) parseIdent() *ast.Ident {$/;"	f
parseIdent	./go/printer/testdata/parser.go	/^func (p *parser) parseIdent() *ast.Ident {$/;"	f
parseIdentList	./go/parser/parser.go	/^func (p *parser) parseIdentList() (list []*ast.Ident) {$/;"	f
parseIdentList	./go/printer/testdata/parser.go	/^func (p *parser) parseIdentList() (list []*ast.Ident) {$/;"	f
parseIfStmt	./go/parser/parser.go	/^func (p *parser) parseIfStmt() *ast.IfStmt {$/;"	f
parseIfStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseIfStmt() *ast.IfStmt {$/;"	f
parseImportDecl	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseImportDecl() {$/;"	f
parseImportSpec	./go/parser/parser.go	/^func (p *parser) parseImportSpec(doc *ast.CommentGroup, _ token.Token, _ int) ast.Spec {$/;"	f
parseImportSpec	./go/printer/testdata/parser.go	/^func parseImportSpec(p *parser, doc *ast.CommentGroup, _ int) ast.Spec {$/;"	f
parseIndex	./cmd/vet/print.go	/^func (s *formatState) parseIndex() bool {$/;"	f
parseIndexOrSlice	./go/parser/parser.go	/^func (p *parser) parseIndexOrSlice(x ast.Expr) ast.Expr {$/;"	f
parseIndexOrSlice	./go/printer/testdata/parser.go	/^func (p *parser) parseIndexOrSlice(x ast.Expr) ast.Expr {$/;"	f
parseInitData	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseInitData() {$/;"	f
parseInitDataDirective	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseInitDataDirective() {$/;"	f
parseInt	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseInt() int64 {$/;"	f
parseInt	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseInt() string {$/;"	f
parseInt	./regexp/syntax/parse.go	/^func (p *parser) parseInt(s string) (n int, rest string, ok bool) {$/;"	f
parseInt32	./encoding/asn1/asn1.go	/^func parseInt32(bytes []byte) (int32, error) {$/;"	f
parseInt64	./encoding/asn1/asn1.go	/^func parseInt64(bytes []byte) (ret int64, err error) {$/;"	f
parseInterfaceMessage	./syscall/route_freebsd_32bit.go	/^func (any *anyMessage) parseInterfaceMessage(b []byte) *InterfaceMessage {$/;"	f
parseInterfaceMessage	./syscall/route_freebsd_64bit.go	/^func (any *anyMessage) parseInterfaceMessage(b []byte) *InterfaceMessage {$/;"	f
parseInterfaceTable	./net/interface_bsd.go	/^func parseInterfaceTable(ifindex int, msgs []syscall.RoutingMessage) ([]Interface, error) {$/;"	f
parseInterfaceType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseInterfaceType(pkg *types.Package) types.Type {$/;"	f
parseInterfaceType	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseInterfaceType() types.Type {$/;"	f
parseInterfaceType	./go/parser/parser.go	/^func (p *parser) parseInterfaceType() *ast.InterfaceType {$/;"	f
parseInterfaceType	./go/printer/testdata/parser.go	/^func (p *parser) parseInterfaceType() *ast.InterfaceType {$/;"	f
parseLegacy	./cmd/pprof/internal/profile/profile.go	/^func parseLegacy(data []byte) (*Profile, error) {$/;"	f
parseLexer	./text/template/parse/lex_test.go	/^func (t *Tree) parseLexer(lex *lexer, text string) (tree *Tree, err error) {$/;"	f
parseLhsList	./go/parser/parser.go	/^func (p *parser) parseLhsList() []ast.Expr {$/;"	f
parseLhsList	./go/printer/testdata/parser.go	/^func (p *parser) parseLhsList() []ast.Expr {$/;"	f
parseLine	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^func parseLine(line []byte, encstart []byte) (addr uint32, enc []byte, text string) {$/;"	f
parseLine	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func parseLine(line []byte, encstart []byte) (addr uint32, enc []byte, text string) {$/;"	f
parseLinePlan9	./cmd/internal/rsc.io/x86/x86asm/plan9ext_test.go	/^func parseLinePlan9(line []byte, encstart []byte) (addr uint32, enc []byte, text string) {$/;"	f
parseLineXed	./cmd/internal/rsc.io/x86/x86asm/xedext_test.go	/^func parseLineXed(line []byte, encstart []byte) (addr uint32, enc []byte, text string) {$/;"	f
parseLinkLayerAddr	./syscall/route_bsd.go	/^func parseLinkLayerAddr(b []byte) (*SockaddrDatalink, int, error) {$/;"	f
parseLiteralIP	./net/hosts.go	/^func parseLiteralIP(addr string) string {$/;"	f
parseLiteralValue	./go/parser/parser.go	/^func (p *parser) parseLiteralValue(typ ast.Expr) ast.Expr {$/;"	f
parseLiteralValue	./go/printer/testdata/parser.go	/^func (p *parser) parseLiteralValue(typ ast.Expr) ast.Expr {$/;"	f
parseMACTests	./net/mac_test.go	/^var parseMACTests = []struct {$/;"	v
parseMagic	./debug/plan9obj/file.go	/^func parseMagic(magic []byte) (uint32, error) {$/;"	f
parseMapType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseMapType(pkg *types.Package) types.Type {$/;"	f
parseMapType	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseMapType() types.Type {$/;"	f
parseMapType	./go/parser/parser.go	/^func (p *parser) parseMapType() *ast.MapType {$/;"	f
parseMapType	./go/printer/testdata/parser.go	/^func (p *parser) parseMapType() *ast.MapType {$/;"	f
parseMappingEntry	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseMappingEntry(l string) (*Mapping, error) {$/;"	f
parseMetaGoImports	./cmd/go/bootstrap.go	/^func parseMetaGoImports(r io.Reader) ([]metaImport, error) {$/;"	f
parseMetaGoImports	./cmd/go/discovery.go	/^func parseMetaGoImports(r io.Reader) (imports []metaImport, err error) {$/;"	f
parseMetaGoImportsTests	./cmd/go/pkg_test.go	/^var parseMetaGoImportsTests = []struct {$/;"	v
parseMethodDecl	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseMethodDecl() {$/;"	f
parseMethodSpec	./go/parser/parser.go	/^func (p *parser) parseMethodSpec(scope *ast.Scope) *ast.Field {$/;"	f
parseMethodSpec	./go/printer/testdata/parser.go	/^func (p *parser) parseMethodSpec(scope *ast.Scope) *ast.Field {$/;"	f
parseNSSConf	./net/nss.go	/^func parseNSSConf(r io.Reader) *nssConf {$/;"	f
parseNSSConfFile	./net/nss.go	/^func parseNSSConfFile(file string) *nssConf {$/;"	f
parseName	./cmd/fix/fix.go	/^func parseName(s string) (ptr bool, pkg, nam string) {$/;"	f
parseName	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseName() string {$/;"	f
parseName	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseName(materializePkg bool) (pkg *types.Package, name string) {$/;"	f
parseNamedClass	./regexp/syntax/parse.go	/^func (p *parser) parseNamedClass(s string, r []rune) (out []rune, rest string, err error) {$/;"	f
parseNamedType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseNamedType(n int) types.Type {$/;"	f
parseNanoseconds	./time/format.go	/^func parseNanoseconds(value string, nbytes int) (ns int, rangeErrString string, err error) {$/;"	f
parseNetwork	./net/dial.go	/^func parseNetwork(net string) (afnet string, proto int, err error) {$/;"	f
parseNetworkLayerAddr	./syscall/route_bsd.go	/^func parseNetworkLayerAddr(b []byte, family byte) (Sockaddr, error) {$/;"	f
parseNum	./cmd/vet/print.go	/^func (s *formatState) parseNum() bool {$/;"	f
parseNumber	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseNumber() (typ *types.Basic, val exact.Value) {$/;"	f
parseObject	./cmd/internal/goobj/read.go	/^func (r *objReader) parseObject(prefix []byte) error {$/;"	f
parseObjectIdentifier	./encoding/asn1/asn1.go	/^func parseObjectIdentifier(bytes []byte) (s []int, err error) {$/;"	f
parseOne	./flag/flag.go	/^func (f *FlagSet) parseOne() (bool, error) {$/;"	f
parseOperand	./go/parser/parser.go	/^func (p *parser) parseOperand(lhs bool) ast.Expr {$/;"	f
parseOperand	./go/printer/testdata/parser.go	/^func (p *parser) parseOperand(lhs bool) ast.Expr {$/;"	f
parseOptions	./cmd/pprof/internal/driver/driver.go	/^func parseOptions(f *flags) (o *report.Options, p commands.PostProcessor, err error) {$/;"	f
parseOutput	./cmd/internal/obj/x86/obj6_test.go	/^func parseOutput(t *testing.T, td *ParsedTestData, asmout []byte) {$/;"	f
parsePAX	./archive/tar/reader.go	/^func parsePAX(r io.Reader) (map[string]string, error) {$/;"	f
parsePAXTime	./archive/tar/reader.go	/^func parsePAXTime(t string) (time.Time, error) {$/;"	f
parsePLTE	./image/png/reader.go	/^func (d *decoder) parsePLTE(length uint32) error {$/;"	f
parsePackage	./cmd/doc/pkg.go	/^func parsePackage(writer io.Writer, pkg *build.Package, userPath string) *Package {$/;"	f
parsePackage	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parsePackage() *types.Package {$/;"	f
parsePackageId	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parsePackageId() string {$/;"	f
parsePackageInit	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parsePackageInit() PackageInit {$/;"	f
parsePackageName	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parsePackageName() string {$/;"	f
parseParam	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseParam(pkg *types.Package) (param *types.Var, isVariadic bool) {$/;"	f
parseParamList	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseParamList(pkg *types.Package) (*types.Tuple, bool) {$/;"	f
parseParameter	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseParameter() (par *types.Var, isVariadic bool) {$/;"	f
parseParameterList	./go/parser/parser.go	/^func (p *parser) parseParameterList(scope *ast.Scope, ellipsisOk bool) (params []*ast.Field) {$/;"	f
parseParameterList	./go/printer/testdata/parser.go	/^func (p *parser) parseParameterList(scope *ast.Scope, ellipsisOk bool) (params []*ast.Field) {$/;"	f
parseParameters	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseParameters() (list []*types.Var, isVariadic bool) {$/;"	f
parseParameters	./go/parser/parser.go	/^func (p *parser) parseParameters(scope *ast.Scope, ellipsisOk bool) *ast.FieldList {$/;"	f
parseParameters	./go/printer/testdata/parser.go	/^func (p *parser) parseParameters(scope *ast.Scope, ellipsisOk bool) *ast.FieldList {$/;"	f
parseParams	./net/http/fcgi/child.go	/^func (r *request) parseParams() {$/;"	f
parsePerlClassEscape	./regexp/syntax/parse.go	/^func (p *parser) parsePerlClassEscape(s string, r []rune) (out []rune, rest string) {$/;"	f
parsePerlFlags	./regexp/syntax/parse.go	/^func (p *parser) parsePerlFlags(s string) (rest string, err error) {$/;"	f
parsePlan9Addr	./net/ipsock_plan9.go	/^func parsePlan9Addr(s string) (ip IP, iport int, err error) {$/;"	f
parsePointerType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parsePointerType(pkg *types.Package) types.Type {$/;"	f
parsePointerType	./go/parser/parser.go	/^func (p *parser) parsePointerType() *ast.StarExpr {$/;"	f
parsePointerType	./go/printer/testdata/parser.go	/^func (p *parser) parsePointerType() *ast.StarExpr {$/;"	f
parsePort	./net/port.go	/^func parsePort(net, port string) (int, error) {$/;"	f
parsePostForm	./net/http/request.go	/^func parsePostForm(r *Request) (vs url.Values, err error) {$/;"	f
parsePrecision	./cmd/vet/print.go	/^func (s *formatState) parsePrecision() bool {$/;"	f
parsePrimaryExpr	./go/parser/parser.go	/^func (p *parser) parsePrimaryExpr(lhs bool) ast.Expr {$/;"	f
parsePrimaryExpr	./go/printer/testdata/parser.go	/^func (p *parser) parsePrimaryExpr(lhs bool) ast.Expr {$/;"	f
parsePrintableString	./encoding/asn1/asn1.go	/^func parsePrintableString(bytes []byte) (ret string, err error) {$/;"	f
parsePrintfVerb	./cmd/vet/print.go	/^func (f *File) parsePrintfVerb(call *ast.CallExpr, name, format string, firstArg, argNum int) *formatState {$/;"	f
parsePrivateKey	./crypto/tls/tls.go	/^func parsePrivateKey(der []byte) (crypto.PrivateKey, error) {$/;"	f
parseProcNetIGMP	./net/interface_linux.go	/^func parseProcNetIGMP(path string, ifi *Interface) []Addr {$/;"	f
parseProcNetIGMP6	./net/interface_linux.go	/^func parseProcNetIGMP6(path string, ifi *Interface) []Addr {$/;"	f
parseProfile	./runtime/pprof/pprof_test.go	/^func parseProfile(t *testing.T, bytes []byte, f func(uintptr, []uintptr)) {$/;"	f
parsePublicKey	./crypto/x509/x509.go	/^func parsePublicKey(algo PublicKeyAlgorithm, keyData *publicKeyInfo) (interface{}, error) {$/;"	f
parseQualifiedName	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseQualifiedName() (path, name string) {$/;"	f
parseQualifiedName	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseQualifiedName() (id, name string) {$/;"	f
parseQualifiedNameStr	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseQualifiedNameStr(unquotedName string) (pkgpath, name string) {$/;"	f
parseQuery	./net/url/url.go	/^func parseQuery(m Values, query string) (err error) {$/;"	f
parseRange	./net/http/fs.go	/^func parseRange(s string, size int64) ([]httpRange, error) {$/;"	f
parseRawAttributes	./crypto/x509/x509.go	/^func parseRawAttributes(rawAttributes []asn1.RawValue) []pkix.AttributeTypeAndValueSET {$/;"	f
parseReadError	./net/error_test.go	/^func parseReadError(nestedErr error) error {$/;"	f
parseReceiver	./go/printer/testdata/parser.go	/^func (p *parser) parseReceiver(scope *ast.Scope) *ast.FieldList {$/;"	f
parseRecord	./encoding/csv/reader.go	/^func (r *Reader) parseRecord() (fields []string, err error) {$/;"	f
parseRepeat	./regexp/syntax/parse.go	/^func (p *parser) parseRepeat(s string) (min, max int, rest string, ok bool) {$/;"	f
parseRequestLine	./net/http/request.go	/^func parseRequestLine(line string) (method, requestURI, proto string, ok bool) {$/;"	f
parseRequestURLTests	./net/url/url_test.go	/^var parseRequestURLTests = []struct {$/;"	v
parseResult	./go/parser/parser.go	/^func (p *parser) parseResult(scope *ast.Scope) *ast.FieldList {$/;"	f
parseResult	./go/printer/testdata/parser.go	/^func (p *parser) parseResult(scope *ast.Scope) *ast.FieldList {$/;"	f
parseResult	./regexp/exec_test.go	/^func parseResult(t *testing.T, file string, lineno int, res string) []int {$/;"	f
parseResultList	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseResultList(pkg *types.Package) *types.Tuple {$/;"	f
parseReturnStmt	./go/parser/parser.go	/^func (p *parser) parseReturnStmt() *ast.ReturnStmt {$/;"	f
parseReturnStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseReturnStmt() *ast.ReturnStmt {$/;"	f
parseRhs	./go/parser/parser.go	/^func (p *parser) parseRhs() ast.Expr {$/;"	f
parseRhs	./go/printer/testdata/parser.go	/^func (p *parser) parseRhs() ast.Expr {$/;"	f
parseRhsList	./go/parser/parser.go	/^func (p *parser) parseRhsList() []ast.Expr {$/;"	f
parseRhsList	./go/printer/testdata/parser.go	/^func (p *parser) parseRhsList() []ast.Expr {$/;"	f
parseRhsOrType	./go/parser/parser.go	/^func (p *parser) parseRhsOrType() ast.Expr {$/;"	f
parseRightParen	./regexp/syntax/parse.go	/^func (p *parser) parseRightParen() error {$/;"	f
parseRouteMessage	./syscall/route_freebsd_32bit.go	/^func (any *anyMessage) parseRouteMessage(b []byte) *RouteMessage {$/;"	f
parseRouteMessage	./syscall/route_freebsd_64bit.go	/^func (any *anyMessage) parseRouteMessage(b []byte) *RouteMessage {$/;"	f
parseRoutingMessageHeader	./syscall/route_ifma_test.go	/^func parseRoutingMessageHeader(m syscall.RoutingMessage) (addrFlags, error) {$/;"	f
parseRoutingMessageHeader	./syscall/route_noifma_test.go	/^func parseRoutingMessageHeader(m syscall.RoutingMessage) (addrFlags, error) {$/;"	f
parseRoutingSockaddrs	./syscall/route_ifma_test.go	/^func parseRoutingSockaddrs(m syscall.RoutingMessage) ([]syscall.Sockaddr, error) {$/;"	f
parseRoutingSockaddrs	./syscall/route_noifma_test.go	/^func parseRoutingSockaddrs(m syscall.RoutingMessage) ([]syscall.Sockaddr, error) {$/;"	f
parseSANExtension	./crypto/x509/x509.go	/^func parseSANExtension(value []byte) (dnsNames, emailAddresses []string, ipAddresses []net.IP, err error) {$/;"	f
parseScale	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) parseScale(s string) int8 {$/;"	f
parseScript	./unicode/maketables.go	/^func parseScript(line string, scripts map[string][]Script) {$/;"	f
parseSelectStmt	./go/parser/parser.go	/^func (p *parser) parseSelectStmt() *ast.SelectStmt {$/;"	f
parseSelectStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseSelectStmt() *ast.SelectStmt {$/;"	f
parseSelector	./go/parser/parser.go	/^func (p *parser) parseSelector(x ast.Expr) ast.Expr {$/;"	f
parseSelector	./go/printer/testdata/parser.go	/^func (p *parser) parseSelector(x ast.Expr) ast.Expr {$/;"	f
parseSequenceOf	./encoding/asn1/asn1.go	/^func parseSequenceOf(bytes []byte, sliceType reflect.Type, elemType reflect.Type) (ret reflect.Value, err error) {$/;"	f
parseSignature	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseSignature(recv *types.Var) *types.Signature {$/;"	f
parseSignature	./go/parser/parser.go	/^func (p *parser) parseSignature(scope *ast.Scope) (params, results *ast.FieldList) {$/;"	f
parseSignature	./go/printer/testdata/parser.go	/^func (p *parser) parseSignature(scope *ast.Scope) (params, results *ast.FieldList) {$/;"	f
parseSimpleStmt	./go/parser/parser.go	/^func (p *parser) parseSimpleStmt(mode int) (ast.Stmt, bool) {$/;"	f
parseSimpleStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseSimpleStmt(labelOk bool) ast.Stmt {$/;"	f
parseSockaddrInet	./syscall/route_bsd.go	/^func parseSockaddrInet(b []byte, family byte) (Sockaddr, error) {$/;"	f
parseSockaddrLink	./syscall/route_bsd.go	/^func parseSockaddrLink(b []byte) (*SockaddrDatalink, error) {$/;"	f
parseSpecFunction	./go/parser/parser.go	/^type parseSpecFunction func(doc *ast.CommentGroup, keyword token.Token, iota int) ast.Spec$/;"	t
parseSpecFunction	./go/printer/testdata/parser.go	/^type parseSpecFunction func(p *parser, doc *ast.CommentGroup, iota int) ast.Spec$/;"	t
parseStmt	./go/parser/parser.go	/^func (p *parser) parseStmt() (s ast.Stmt) {$/;"	f
parseStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseStmt() (s ast.Stmt) {$/;"	f
parseStmtList	./go/parser/parser.go	/^func (p *parser) parseStmtList() (list []ast.Stmt) {$/;"	f
parseStmtList	./go/printer/testdata/parser.go	/^func (p *parser) parseStmtList() (list []ast.Stmt) {$/;"	f
parseString	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseString() string {$/;"	f
parseStructType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseStructType(pkg *types.Package) types.Type {$/;"	f
parseStructType	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseStructType() types.Type {$/;"	f
parseStructType	./go/parser/parser.go	/^func (p *parser) parseStructType() *ast.StructType {$/;"	f
parseStructType	./go/printer/testdata/parser.go	/^func (p *parser) parseStructType() *ast.StructType {$/;"	f
parseSwitchStmt	./go/parser/parser.go	/^func (p *parser) parseSwitchStmt() ast.Stmt {$/;"	f
parseSwitchStmt	./go/printer/testdata/parser.go	/^func (p *parser) parseSwitchStmt() ast.Stmt {$/;"	f
parseSymbol	./cmd/doc/main.go	/^func parseSymbol(str string) (symbol, method string) {$/;"	f
parseSymtab	./debug/macho/file.go	/^func (f *File) parseSymtab(symdat, strtab, cmddat []byte, hdr *SymtabCmd, offset int64) (*Symtab, error) {$/;"	f
parseT61String	./encoding/asn1/asn1.go	/^func parseT61String(bytes []byte) (ret string, err error) {$/;"	f
parseTag	./encoding/json/tags.go	/^func parseTag(tag string) (string, tagOptions) {$/;"	f
parseTagAndLength	./encoding/asn1/asn1.go	/^func parseTagAndLength(bytes []byte, initOffset int) (ret tagAndLength, offset int, err error) {$/;"	f
parseTagFilterRange	./cmd/pprof/internal/driver/driver.go	/^func parseTagFilterRange(filter string) func(int64, string) bool {$/;"	f
parseTest	./mime/multipart/multipart_test.go	/^type parseTest struct {$/;"	t
parseTest	./net/url/url_test.go	/^type parseTest struct {$/;"	t
parseTest	./regexp/syntax/parse_test.go	/^type parseTest struct {$/;"	t
parseTest	./text/template/parse/parse_test.go	/^type parseTest struct {$/;"	t
parseTestData	./cmd/internal/obj/x86/obj6_test.go	/^func parseTestData(t *testing.T) *ParsedTestData {$/;"	f
parseTestData	./crypto/tls/handshake_test.go	/^func parseTestData(r io.Reader) (flows [][]byte, err error) {$/;"	f
parseTests	./mime/multipart/multipart_test.go	/^var parseTests = []parseTest{$/;"	v
parseTests	./net/mail/message_test.go	/^var parseTests = []struct {$/;"	v
parseTests	./net/url/url_test.go	/^var parseTests = []parseTest{$/;"	v
parseTests	./regexp/syntax/parse_test.go	/^var parseTests = []parseTest{$/;"	v
parseTests	./text/template/parse/parse_test.go	/^var parseTests = []parseTest{$/;"	v
parseTests	./time/format_test.go	/^var parseTests = []ParseTest{$/;"	v
parseThread	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseThread(b []byte) (*Profile, error) {$/;"	f
parseThreadSample	./cmd/pprof/internal/profile/legacy_profile.go	/^func parseThreadSample(b *bytes.Buffer) (nextl string, addrs []uint64, err error) {$/;"	f
parseTimeTests	./net/http/header_test.go	/^var parseTimeTests = []struct {$/;"	v
parseTimeZone	./time/format.go	/^func parseTimeZone(value string) (length int, ok bool) {$/;"	f
parseTimeZoneTests	./time/format_test.go	/^var parseTimeZoneTests = []ParseTimeZoneTest{$/;"	v
parseTrace	./runtime/trace/trace_test.go	/^func parseTrace(t *testing.T, r io.Reader) ([]*trace.Event, map[uint64]*trace.GDesc, error) {$/;"	f
parseType	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseType(pkg *types.Package) (t types.Type) {$/;"	f
parseType	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseType() types.Type {$/;"	f
parseType	./go/parser/parser.go	/^func (p *parser) parseType() ast.Expr {$/;"	f
parseType	./go/printer/testdata/parser.go	/^func (p *parser) parseType() ast.Expr {$/;"	f
parseTypeAssertion	./go/parser/parser.go	/^func (p *parser) parseTypeAssertion(x ast.Expr) ast.Expr {$/;"	f
parseTypeAssertion	./go/printer/testdata/parser.go	/^func (p *parser) parseTypeAssertion(x ast.Expr) ast.Expr {$/;"	f
parseTypeDecl	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseTypeDecl() {$/;"	f
parseTypeDefinition	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseTypeDefinition(pkg *types.Package, n int) types.Type {$/;"	f
parseTypeList	./go/parser/parser.go	/^func (p *parser) parseTypeList() (list []ast.Expr) {$/;"	f
parseTypeList	./go/printer/testdata/parser.go	/^func (p *parser) parseTypeList() (list []ast.Expr) {$/;"	f
parseTypeName	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseTypeName() *types.TypeName {$/;"	f
parseTypeName	./go/parser/parser.go	/^func (p *parser) parseTypeName() ast.Expr {$/;"	f
parseTypeName	./go/printer/testdata/parser.go	/^func (p *parser) parseTypeName() ast.Expr {$/;"	f
parseTypeSpec	./go/parser/parser.go	/^func (p *parser) parseTypeSpec(doc *ast.CommentGroup, _ token.Token, _ int) ast.Spec {$/;"	f
parseTypeSpec	./go/printer/testdata/parser.go	/^func parseTypeSpec(p *parser, doc *ast.CommentGroup, _ int) ast.Spec {$/;"	f
parseTypes	./debug/dwarf/typeunit.go	/^func (d *Data) parseTypes(name string, types []byte) error {$/;"	f
parseUTCTime	./encoding/asn1/asn1.go	/^func parseUTCTime(bytes []byte) (ret time.Time, err error) {$/;"	f
parseUTF8String	./encoding/asn1/asn1.go	/^func parseUTF8String(bytes []byte) (ret string, err error) {$/;"	f
parseUnaryExpr	./go/parser/parser.go	/^func (p *parser) parseUnaryExpr(lhs bool) ast.Expr {$/;"	f
parseUnaryExpr	./go/printer/testdata/parser.go	/^func (p *parser) parseUnaryExpr(lhs bool) ast.Expr {$/;"	f
parseUncompressed	./cmd/pprof/internal/profile/profile.go	/^func parseUncompressed(data []byte) (*Profile, error) {$/;"	f
parseUnicodeClass	./regexp/syntax/parse.go	/^func (p *parser) parseUnicodeClass(s string, r []rune) (out []rune, rest string, err error) {$/;"	f
parseUnits	./debug/dwarf/unit.go	/^func (d *Data) parseUnits() ([]unit, error) {$/;"	f
parseUnquotedQualifiedName	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseUnquotedQualifiedName() (path, name string) {$/;"	f
parseUnquotedString	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseUnquotedString() string {$/;"	f
parseValue	./go/parser/parser.go	/^func (p *parser) parseValue(keyOk bool) ast.Expr {$/;"	f
parseValueSpec	./go/parser/parser.go	/^func (p *parser) parseValueSpec(doc *ast.CommentGroup, keyword token.Token, iota int) ast.Spec {$/;"	f
parseVar	./go/internal/gccgoimporter/parser.go	/^func (p *parser) parseVar(pkg *types.Package) *types.Var {$/;"	f
parseVarDecl	./go/internal/gcimporter/gcimporter.go	/^func (p *parser) parseVarDecl() {$/;"	f
parseVarList	./go/parser/parser.go	/^func (p *parser) parseVarList(isParam bool) (list []ast.Expr, typ ast.Expr) {$/;"	f
parseVarList	./go/printer/testdata/parser.go	/^func (p *parser) parseVarList(isParam bool) (list []ast.Expr, typ ast.Expr) {$/;"	f
parseVarSpec	./go/printer/testdata/parser.go	/^func parseVarSpec(p *parser, doc *ast.CommentGroup, _ int) ast.Spec {$/;"	f
parseVarType	./go/parser/parser.go	/^func (p *parser) parseVarType(isParam bool) ast.Expr {$/;"	f
parseVarType	./go/printer/testdata/parser.go	/^func (p *parser) parseVarType(isParam bool) ast.Expr {$/;"	f
parseVerticalBar	./regexp/syntax/parse.go	/^func (p *parser) parseVerticalBar() error {$/;"	f
parseWriteError	./net/error_test.go	/^func parseWriteError(nestedErr error) error {$/;"	f
parsed	./go/parser/parser.go	/^		\/\/ the channel type parsed already:$/;"	t
parsedFile	./cmd/vet/main.go	/^		var parsedFile *ast.File$/;"	v
parsedFileCache	./cmd/api/goapi.go	/^var parsedFileCache = make(map[string]*ast.File)$/;"	v
parsedHostname	./log/syslog/syslog_test.go	/^			var parsedHostname, timestamp string$/;"	v
parsedHostname	./log/syslog/syslog_test.go	/^		var parsedHostname, timestamp string$/;"	v
parsedTime	./time/time_test.go	/^type parsedTime struct {$/;"	t
parsedebugvars	./runtime/runtime1.go	/^func parsedebugvars() {$/;"	f
parsemethod	./cmd/link/internal/ld/go.go	/^func parsemethod(pp *string, methp *string) int {$/;"	f
parsenum	./fmt/print.go	/^func parsenum(s string, start, end int) (num int, isnum bool, newi int) {$/;"	f
parseparam	./syscall/mksyscall.pl	/^sub parseparam($) {$/;"	s
parseparam	./syscall/mksyscall_solaris.pl	/^sub parseparam($) {$/;"	s
parseparamlist	./syscall/mksyscall.pl	/^sub parseparamlist($) {$/;"	s
parseparamlist	./syscall/mksyscall_solaris.pl	/^sub parseparamlist($) {$/;"	s
parsepkgdata	./cmd/link/internal/ld/go.go	/^func parsepkgdata(file string, pkg string, pp *string, prefixp *string, namep *string, defp *string) int {$/;"	f
parser	./debug/dwarf/const.go	/^\/\/ the opPlusUconst operator is expected by the type parser.$/;"	t
parser	./go/internal/gccgoimporter/parser.go	/^type parser struct {$/;"	t
parser	./go/internal/gcimporter/gcimporter.go	/^type parser struct {$/;"	t
parser	./go/parser/parser.go	/^type parser struct {$/;"	t
parser	./go/printer/testdata/parser.go	/^type parser struct {$/;"	t
parser	./regexp/syntax/parse.go	/^type parser struct {$/;"	t
parserline	./cmd/compile/internal/gc/subr.go	/^func parserline() int {$/;"	f
parsetRNS	./image/png/reader.go	/^func (d *decoder) parsetRNS(length uint32) error {$/;"	f
parsetag	./cmd/compile/internal/gc/esc.go	/^func parsetag(note *string) uint16 {$/;"	f
parsing	./cmd/compile/internal/gc/lex.go	/^var parsing bool$/;"	v
part	./mime/multipart/writer.go	/^type part struct {$/;"	t
partReader	./mime/multipart/multipart.go	/^type partReader struct {$/;"	t
partialBlock	./crypto/cipher/gcm.go	/^		var partialBlock [gcmBlockSize]byte$/;"	v
partialDeadline	./net/dial.go	/^func partialDeadline(now, deadline time.Time, addrsRemaining int) (time.Time, error) {$/;"	f
partialValue	./crypto/rsa/pss_test.go	/^		var partialValue string$/;"	v
partition	./net/ipsock.go	/^func (addrs addrList) partition(strategy func(Addr) bool) (primaries, fallbacks addrList) {$/;"	f
parts	./syscall/syscall_netbsd.go	/^	var parts []string$/;"	v
passFDChild	./syscall/syscall_unix_test.go	/^func passFDChild() {$/;"	f
passed	./go/doc/testdata/benchmark.go	/^\/\/ B is a type passed to Benchmark functions to manage benchmark$/;"	t
passed	./go/doc/testdata/testing.go	/^\/\/ T is a type passed to Test functions to manage test state and support formatted test logs.$/;"	t
passed	./reflect/type.go	/^		panic("reflect: nil type passed to Type.AssignableTo")$/;"	t
passed	./reflect/type.go	/^		panic("reflect: nil type passed to Type.ConvertibleTo")$/;"	t
passed	./reflect/type.go	/^		panic("reflect: nil type passed to Type.Implements")$/;"	t
passed	./reflect/type.go	/^		panic("reflect: non-interface type passed to Type.Implements")$/;"	t
passed	./regexp/testdata/testregex.c	/^	int		passed;$/;"	m	struct:__anon2	file:
passed	./testing/benchmark.go	/^\/\/ B is a type passed to Benchmark functions to manage benchmark$/;"	t
passed	./testing/testing.go	/^\/\/ M is a type passed to a TestMain function to run the actual tests.$/;"	t
passed	./testing/testing.go	/^\/\/ T is a type passed to Test functions to manage test state and support formatted test logs.$/;"	t
passes	./cmd/vet/testdata/copylock_func.go	/^	BadClosure = func(sync.Mutex) {} \/\/ ERROR "func passes Lock by value: sync.Mutex"$/;"	f
past	./syscall/net_nacl.go	/^func past(deadline int64) bool {$/;"	f
patch	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) patch() {$/;"	f
patch	./regexp/syntax/compile.go	/^func (l patchList) patch(p *Prog, val uint32) {$/;"	f
patchList	./regexp/syntax/compile.go	/^type patchList uint32$/;"	t
path	./cmd/go/go_test.go	/^func (tg *testgoData) path(name string) string {$/;"	f
path	./go/parser/parser.go	/^	var path string$/;"	v
path	./go/printer/testdata/parser.go	/^	var path *ast.BasicLit$/;"	v
pathFor	./cmd/doc/main.go	/^func pathFor(root, pkg string) (result string) {$/;"	f
pathMatch	./net/http/cookiejar/jar.go	/^func (e *entry) pathMatch(requestPath string) bool {$/;"	f
pathMatch	./net/http/server.go	/^func pathMatch(pattern, path string) bool {$/;"	f
pathTests	./encoding/xml/read_test.go	/^var pathTests = []interface{}{$/;"	v
pathbuf	./os/file_windows.go	/^	var pathbuf []byte$/;"	v
pathf	./cmd/dist/util.go	/^func pathf(format string, args ...interface{}) string {$/;"	f
pathtoprefix	./cmd/compile/internal/gc/subr.go	/^func pathtoprefix(s string) string {$/;"	f
pathtoprefix	./cmd/link/internal/ld/lib.go	/^func pathtoprefix(s string) string {$/;"	f
pattern	./html/template/error.go	/^	\/\/     <script>var pattern = \/foo[{{.Chars}}]\/<\/script>$/;"	v
pattern	./runtime/runtime-gdb.py	/^	pattern = re.compile(r'^map\\[.*\\].*$')$/;"	v	class:MapTypePrinter
pattern	./runtime/runtime-gdb.py	/^	pattern = re.compile(r'^struct \\[\\]')$/;"	v	class:SliceTypePrinter
pattern	./runtime/runtime-gdb.py	/^	pattern = re.compile(r'^struct hchan<.*>$')$/;"	v	class:ChanTypePrinter
pattern	./runtime/runtime-gdb.py	/^	pattern = re.compile(r'^struct string( \\*)?$')$/;"	v	class:StringTypePrinter
pauseTotal	./runtime/malloc_test.go	/^	var pauseTotal uint64$/;"	v
paxHeader	./archive/tar/writer.go	/^func paxHeader(msg string) string {$/;"	f
pbit16	./syscall/dir_plan9.go	/^func pbit16(b []byte, v uint16) []byte {$/;"	f
pbit32	./syscall/dir_plan9.go	/^func pbit32(b []byte, v uint32) []byte {$/;"	f
pbit64	./syscall/dir_plan9.go	/^func pbit64(b []byte, v uint64) []byte {$/;"	f
pbit8	./syscall/dir_plan9.go	/^func pbit8(b []byte, v uint8) []byte {$/;"	f
pbuf	./internal/syscall/windows/registry/value.go	/^	var pbuf *byte$/;"	v
pc	./runtime/defs_plan9_386.go	/^func (c *sigctxt) pc() uintptr { return uintptr(c.u.pc) }$/;"	f
pc	./runtime/defs_plan9_amd64.go	/^func (c *sigctxt) pc() uintptr { return uintptr(c.u.ip) }$/;"	f
pc	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) pc() uint32      { return c.regs().pc }$/;"	f
pc	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) pc() uint64    { return c.regs().pc }$/;"	f
pc	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) pc() uint32      { return c.regs().__gregs[15] }$/;"	f
pc	./runtime/signal_linux_arm.go	/^func (c *sigctxt) pc() uint32        { return c.regs().pc }$/;"	f
pc	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) pc() uint64        { return c.regs().pc }$/;"	f
pc	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) pc() uint64    { return c.regs().nip }$/;"	f
pc	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) pc() uint32      { return c.regs().pc }$/;"	f
pc	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) pc() uint32       { return c.regs().__gregs[_REG_R15] }$/;"	f
pc	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) pc() uint32      { return c.regs().sc_pc }$/;"	f
pcArray	./internal/trace/parser.go	/^	var pcArray []uint64$/;"	v
pcdatavalue	./runtime/symtab.go	/^func pcdatavalue(f *_func, table int32, targetpc uintptr) int32 {$/;"	f
pcfile	./cmd/link/internal/ld/dwarf.go	/^	var pcfile Pciter$/;"	v
pciterinit	./cmd/internal/obj/pcln.go	/^func pciterinit(ctxt *Link, it *Pciter, d *Pcdata) {$/;"	f
pciterinit	./cmd/link/internal/ld/pcln.go	/^func pciterinit(ctxt *Link, it *Pciter, d *Pcdata) {$/;"	f
pciternext	./cmd/internal/obj/pcln.go	/^func pciternext(it *Pciter) {$/;"	f
pciternext	./cmd/link/internal/ld/pcln.go	/^func pciternext(it *Pciter) {$/;"	f
pcline	./cmd/link/internal/ld/dwarf.go	/^	var pcline Pciter$/;"	v
pclmulqOps	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^var pclmulqOps = []string{$/;"	v
pcln	./cmd/internal/objfile/elf.go	/^func (f *elfFile) pcln() (textStart uint64, symtab, pclntab []byte, err error) {$/;"	f
pcln	./cmd/internal/objfile/goobj.go	/^func (f *goobjFile) pcln() (textStart uint64, symtab, pclntab []byte, err error) {$/;"	f
pcln	./cmd/internal/objfile/macho.go	/^func (f *machoFile) pcln() (textStart uint64, symtab, pclntab []byte, err error) {$/;"	f
pcln	./cmd/internal/objfile/pe.go	/^func (f *peFile) pcln() (textStart uint64, symtab, pclntab []byte, err error) {$/;"	f
pcln	./cmd/internal/objfile/plan9obj.go	/^func (f *plan9File) pcln() (textStart uint64, symtab, pclntab []byte, err error) {$/;"	f
pcln	./cmd/link/internal/ld/pcln.go	/^	var pcln *Pcln$/;"	v
pclntab	./cmd/link/internal/ld/pcln.go	/^func pclntab() {$/;"	f
pclntabFiletabOffset	./cmd/link/internal/ld/pcln.go	/^var pclntabFiletabOffset int32$/;"	v
pclntabFirstFunc	./cmd/link/internal/ld/pcln.go	/^var pclntabFirstFunc *LSym$/;"	v
pclntabLastFunc	./cmd/link/internal/ld/pcln.go	/^var pclntabLastFunc *LSym$/;"	v
pclntabNfunc	./cmd/link/internal/ld/pcln.go	/^var pclntabNfunc int32$/;"	v
pclntabPclntabOffset	./cmd/link/internal/ld/pcln.go	/^var pclntabPclntabOffset int32$/;"	v
pclntab_zpcln	./cmd/link/internal/ld/pcln.go	/^var pclntab_zpcln Pcln$/;"	v
pcloc	./cmd/compile/internal/gc/go.go	/^var pcloc int32$/;"	v
pcsize	./cmd/internal/obj/x86/obj6.go	/^	var pcsize int$/;"	v
pcsp	./cmd/link/internal/ld/dwarf.go	/^	var pcsp Pciter$/;"	v
pcsp	./cmd/link/internal/ld/lib.go	/^	var pcsp Pciter$/;"	v
pctofileline	./cmd/internal/obj/pcln.go	/^func pctofileline(ctxt *Link, sym *LSym, oldval int32, p *Prog, phase int32, arg interface{}) int32 {$/;"	f
pctopcdata	./cmd/internal/obj/pcln.go	/^func pctopcdata(ctxt *Link, sym *LSym, oldval int32, p *Prog, phase int32, arg interface{}) int32 {$/;"	f
pctospadj	./cmd/internal/obj/pcln.go	/^func pctospadj(ctxt *Link, sym *LSym, oldval int32, p *Prog, phase int32, arg interface{}) int32 {$/;"	f
pcvalue	./debug/gosym/pclntab.go	/^func (t *LineTable) pcvalue(off uint32, entry, targetpc uint64) int32 {$/;"	f
pcvalue	./runtime/symtab.go	/^func pcvalue(f *_func, off int32, targetpc uintptr, strict bool) int32 {$/;"	f
pdesc	./internal/trace/parser.go	/^	type pdesc struct {$/;"	t
pdesc	./runtime/proc1.go	/^var pdesc [_MaxGomaxprocs]struct {$/;"	v
pe64	./cmd/link/internal/ld/pe.go	/^var pe64 int$/;"	v
peFile	./cmd/internal/objfile/pe.go	/^type peFile struct {$/;"	t
pedanticReadAll	./net/http/client_test.go	/^func pedanticReadAll(r io.Reader) (b []byte, err error) {$/;"	f
peek	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) peek() lex.ScanToken {$/;"	f
peek	./encoding/gob/debug.go	/^func (p *peekReader) peek(b []byte) (n int, err error) {$/;"	f
peek	./encoding/json/stream.go	/^func (dec *Decoder) peek() (byte, error) {$/;"	f
peek	./fmt/scan.go	/^func (s *ss) peek(ok string) bool {$/;"	f
peek	./net/mail/message.go	/^func (p *addrParser) peek() byte {$/;"	f
peek	./text/template/parse/lex.go	/^func (l *lexer) peek() rune {$/;"	f
peek	./text/template/parse/parse.go	/^func (t *Tree) peek() item {$/;"	f
peekBufferIsEmptyPart	./mime/multipart/multipart.go	/^func (mr *Reader) peekBufferIsEmptyPart(peek []byte) bool {$/;"	f
peekBufferSeparatorIndex	./mime/multipart/multipart.go	/^func (mr *Reader) peekBufferSeparatorIndex(peek []byte) (idx int, isEnd bool) {$/;"	f
peekNonSpace	./text/template/parse/parse.go	/^func (t *Tree) peekNonSpace() (token item) {$/;"	f
peekReader	./encoding/gob/debug.go	/^type peekReader struct {$/;"	t
peekline	./cmd/yacc/yacc.go	/^var peekline = 0$/;"	v
peekrune	./cmd/yacc/yacc.go	/^var peekrune rune$/;"	v
peemitreloc	./cmd/link/internal/ld/pe.go	/^func peemitreloc(text, data *IMAGE_SECTION_HEADER) {$/;"	f
peep	./cmd/compile/internal/amd64/peep.go	/^func peep(firstp *obj.Prog) {$/;"	f
peep	./cmd/compile/internal/arm/peep.go	/^func peep(firstp *obj.Prog) {$/;"	f
peep	./cmd/compile/internal/arm64/peep.go	/^func peep(firstp *obj.Prog) {$/;"	f
peep	./cmd/compile/internal/ppc64/peep.go	/^func peep(firstp *obj.Prog) {$/;"	f
peep	./cmd/compile/internal/x86/peep.go	/^func peep(firstp *obj.Prog) {$/;"	f
peer	./net/unix_test.go	/^		var peer Addr$/;"	v
pegenasmsym	./cmd/link/internal/ld/pe.go	/^func pegenasmsym(put func(*LSym, string, int, int64, int64, int, *LSym)) {$/;"	f
peimporteddlls	./cmd/link/internal/ld/pe.go	/^func peimporteddlls() []string {$/;"	f
pem	./crypto/tls/tls_test.go	/^	var pem []byte$/;"	v
pemBlockForKey	./crypto/tls/generate_cert.go	/^func pemBlockForKey(priv interface{}) *pem.Block {$/;"	f
pemCRLPrefix	./crypto/x509/x509.go	/^var pemCRLPrefix = []byte("-----BEGIN X509 CRL")$/;"	v
pemData	./encoding/pem/pem_test.go	/^var pemData = `verify return:0$/;"	v
pemEnd	./encoding/pem/pem.go	/^var pemEnd = []byte("\\n-----END ")$/;"	v
pemEndOfLine	./encoding/pem/pem.go	/^var pemEndOfLine = []byte("-----")$/;"	v
pemOut	./crypto/tls/handshake_client_test.go	/^	var pemOut bytes.Buffer$/;"	v
pemPrivateKey	./crypto/x509/x509_test.go	/^var pemPrivateKey = `-----BEGIN RSA PRIVATE KEY-----$/;"	v
pemPrivateKey	./crypto/x509/x509_test_import.go	/^var pemPrivateKey = `-----BEGIN RSA PRIVATE KEY-----$/;"	v
pemPrivateKey2	./encoding/pem/pem_test.go	/^var pemPrivateKey2 = `-----BEGIN RSA PRIVATE KEY-----$/;"	v
pemPublicKey	./crypto/x509/x509_test.go	/^var pemPublicKey = `-----BEGIN PUBLIC KEY-----$/;"	v
pemStart	./encoding/pem/pem.go	/^var pemStart = []byte("\\n-----BEGIN ")$/;"	v
pemType	./crypto/tls/handshake_client_test.go	/^	var pemType string$/;"	v
pemType	./crypto/x509/x509.go	/^var pemType = "X509 CRL"$/;"	v
pemap	./cmd/link/internal/ld/ldpe.go	/^func pemap(peobj *PeObj, sect *PeSect) int {$/;"	f
pempty	./cmd/yacc/yacc.go	/^var pempty []int \/\/ vector of nonterminals nontrivially deriving e$/;"	v
pensect	./cmd/link/internal/ld/pe.go	/^var pensect int$/;"	v
per	./cmd/fix/typecheck.go	/^			\/\/ Field is one instance of the type per name.$/;"	t
percentCovered	./cmd/cover/html.go	/^func percentCovered(p *Profile) float64 {$/;"	f
percentDStruct	./cmd/vet/testdata/print.go	/^type percentDStruct struct {$/;"	t
percentDV	./cmd/vet/testdata/print.go	/^var percentDV percentDStruct$/;"	v
percentHexUnescape	./mime/mediatype.go	/^func percentHexUnescape(s string) (string, error) {$/;"	f
percentSStruct	./cmd/vet/testdata/print.go	/^type percentSStruct struct {$/;"	t
percentSV	./cmd/vet/testdata/print.go	/^var percentSV percentSStruct$/;"	v
percentSlashTag	./encoding/json/tagkey_test.go	/^type percentSlashTag struct {$/;"	t
percentage	./cmd/pprof/internal/report/report.go	/^func percentage(value, total int64) string {$/;"	f
pereloc1	./cmd/link/internal/amd64/asm.go	/^func pereloc1(r *ld.Reloc, sectoff int64) bool {$/;"	f
pereloc1	./cmd/link/internal/x86/asm.go	/^func pereloc1(r *ld.Reloc, sectoff int64) bool {$/;"	f
perelocsect	./cmd/link/internal/ld/pe.go	/^func perelocsect(sect *Section, first *LSym) int {$/;"	f
period	./cmd/doc/main.go	/^	var period int$/;"	v
period	./cmd/pprof/internal/profile/legacy_profile.go	/^		var period int64$/;"	v
perl	./net/http/cgi/host_test.go	/^	var perl string$/;"	v
perlGroup	./regexp/syntax/perl_groups.go	/^var perlGroup = map[string]charGroup{$/;"	v
permSizes	./math/rand/regress_test.go	/^	var permSizes = []int{0, 1, 5, 8, 9, 10, 16}$/;"	v
permutation	./runtime/hash_test.go	/^func permutation(t *testing.T, s []uint32, n int) {$/;"	f
permutationFunction	./crypto/des/const.go	/^var permutationFunction = [32]byte{$/;"	v
permuteBlock	./crypto/des/block.go	/^func permuteBlock(src uint64, permutation []uint8) (block uint64) {$/;"	f
permuteFinalBlock	./crypto/des/block.go	/^func permuteFinalBlock(block uint64) uint64 {$/;"	f
permuteInitialBlock	./crypto/des/block.go	/^func permuteInitialBlock(block uint64) uint64 {$/;"	f
permutedChoice1	./crypto/des/const.go	/^var permutedChoice1 = [56]byte{$/;"	v
permutedChoice2	./crypto/des/const.go	/^var permutedChoice2 = [48]byte{$/;"	v
perpetuumMobile	./runtime/proc_test.go	/^func perpetuumMobile() {$/;"	f
persistConn	./net/http/transport.go	/^type persistConn struct {$/;"	t
persistent	./runtime/malloc.go	/^	var persistent *persistentAlloc$/;"	v
persistentAlloc	./runtime/malloc.go	/^type persistentAlloc struct {$/;"	t
persistentMemSink	./runtime/pprof/mprof_test.go	/^var persistentMemSink *Obj32$/;"	v
persistentalloc	./runtime/malloc.go	/^func persistentalloc(size, align uintptr, sysStat *uint64) unsafe.Pointer {$/;"	f
persistentalloc1	./runtime/malloc.go	/^func persistentalloc1(size, align uintptr, sysStat *uint64) unsafe.Pointer {$/;"	f
person	./os/exec/example_test.go	/^	var person struct {$/;"	v
pescmp	./cmd/link/internal/ld/pe.go	/^type pescmp []*LSym$/;"	t
pewrite	./cmd/link/internal/ld/pe.go	/^func pewrite() {$/;"	f
pexpr	./cmd/compile/internal/gc/go.y	/^pexpr:$/;"	l
pexpr_no_paren	./cmd/compile/internal/gc/go.y	/^pexpr_no_paren:$/;"	l
pfStrings	./debug/elf/elf.go	/^var pfStrings = []intName{$/;"	v
pfirst	./cmd/yacc/yacc.go	/^var pfirst []Lkset$/;"	v
pgo	./cmd/yacc/yacc.go	/^var pgo []int$/;"	v
phdr	./cmd/link/internal/ld/elf.go	/^var phdr [NSECT]*ElfPhdr$/;"	v
phentsize	./debug/elf/file.go	/^	var phentsize, phnum int$/;"	v
phoff	./debug/elf/file.go	/^	var phoff int64$/;"	v
photo	./database/sql/sql_test.go	/^	var photo RawBytes$/;"	v
photo	./database/sql/sql_test.go	/^	var photo []byte$/;"	v
phsh	./cmd/link/internal/ld/elf.go	/^func phsh(ph *ElfPhdr, sh *ElfShdr) {$/;"	f
pi	./cmd/compile/internal/big/natconv_test.go	/^var pi = "3" +$/;"	v
pi	./encoding/binary/example_test.go	/^	var pi float64 = math.Pi$/;"	v
pi	./encoding/binary/example_test.go	/^	var pi float64$/;"	v
pi	./math/big/natconv_test.go	/^var pi = "3" +$/;"	v
pi	./reflect/all_test.go	/^	var pi *int$/;"	v
pi	./reflect/all_test.go	/^	var pi struct {$/;"	v
pickStrategy	./crypto/rand/rand_linux.go	/^func pickStrategy() {$/;"	f
pickTLS12HashForSignature	./crypto/tls/key_agreement.go	/^func pickTLS12HashForSignature(sigType uint8, clientList []signatureAndHash) (uint8, error) {$/;"	f
pid	./log/syslog/syslog_test.go	/^			var pid int$/;"	v
pid	./log/syslog/syslog_test.go	/^		var pid int$/;"	v
pid	./runtime/os1_plan9.go	/^var pid = []byte("#c\/pid\\x00")$/;"	v
pid	./runtime/runtime_linux_test.go	/^var pid, tid int$/;"	v
pidebug	./cmd/yacc/yacc.go	/^var pidebug = 0 \/\/ debugging flag for putitem$/;"	v
pidleget	./runtime/proc1.go	/^func pidleget() *p {$/;"	f
pidleput	./runtime/proc1.go	/^func pidleput(_p_ *p) {$/;"	f
pieces	./cmd/cgo/ast.go	/^	var pieces []string$/;"	v
pin	./sync/pool.go	/^func (p *Pool) pin() *poolLocal {$/;"	f
pinSlow	./sync/pool.go	/^func (p *Pool) pinSlow() *poolLocal {$/;"	f
ping	./cmd/go/vcs.go	/^func (v *vcsCmd) ping(scheme, repo string) error {$/;"	f
pipe	./io/pipe.go	/^type pipe struct {$/;"	t
pipe	./net/pipe.go	/^type pipe struct {$/;"	t
pipe	./net/rpc/jsonrpc/all_test.go	/^type pipe struct {$/;"	t
pipe	./syscall/syscall_solaris.go	/^func pipe() (r uintptr, w uintptr, err uintptr)$/;"	f
pipe	./syscall/zsyscall_darwin_386.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_darwin_amd64.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_darwin_arm.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_darwin_arm64.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_dragonfly_amd64.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_freebsd_386.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_freebsd_amd64.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_freebsd_arm.go	/^func pipe() (r int, w int, err error) {$/;"	f
pipe	./syscall/zsyscall_linux_386.go	/^func pipe(p *[2]_C_int) (err error) {$/;"	f
pipe	./syscall/zsyscall_linux_amd64.go	/^func pipe(p *[2]_C_int) (err error) {$/;"	f
pipe	./syscall/zsyscall_netbsd_386.go	/^func pipe() (fd1 int, fd2 int, err error) {$/;"	f
pipe	./syscall/zsyscall_netbsd_amd64.go	/^func pipe() (fd1 int, fd2 int, err error) {$/;"	f
pipe	./syscall/zsyscall_netbsd_arm.go	/^func pipe() (fd1 int, fd2 int, err error) {$/;"	f
pipe	./syscall/zsyscall_openbsd_386.go	/^func pipe(p *[2]_C_int) (err error) {$/;"	f
pipe	./syscall/zsyscall_openbsd_amd64.go	/^func pipe(p *[2]_C_int) (err error) {$/;"	f
pipe	./syscall/zsyscall_openbsd_arm.go	/^func pipe(p *[2]_C_int) (err error) {$/;"	f
pipe	./syscall/zsyscall_plan9_386.go	/^func pipe(p *[2]int32) (err error) {$/;"	f
pipe	./syscall/zsyscall_plan9_amd64.go	/^func pipe(p *[2]int32) (err error) {$/;"	f
pipe	./text/template/parse/parse.go	/^	var pipe *PipeNode$/;"	v
pipe2	./syscall/zsyscall_linux_386.go	/^func pipe2(p *[2]_C_int, flags int) (err error) {$/;"	f
pipe2	./syscall/zsyscall_linux_amd64.go	/^func pipe2(p *[2]_C_int, flags int) (err error) {$/;"	f
pipe2	./syscall/zsyscall_linux_arm.go	/^func pipe2(p *[2]_C_int, flags int) (err error) {$/;"	f
pipe2	./syscall/zsyscall_linux_arm64.go	/^func pipe2(p *[2]_C_int, flags int) (err error) {$/;"	f
pipe2	./syscall/zsyscall_linux_ppc64.go	/^func pipe2(p *[2]_C_int, flags int) (err error) {$/;"	f
pipe2	./syscall/zsyscall_linux_ppc64le.go	/^func pipe2(p *[2]_C_int, flags int) (err error) {$/;"	f
pipeAddr	./net/pipe.go	/^type pipeAddr int$/;"	t
pipeAddr	./net/rpc/jsonrpc/all_test.go	/^type pipeAddr int$/;"	t
pipeFile	./syscall/fd_nacl.go	/^type pipeFile struct {$/;"	t
pipeResult	./io/pipe.go	/^type pipeResult struct {$/;"	t
pipeReturn	./io/pipe_test.go	/^type pipeReturn struct {$/;"	t
pipeTest	./io/pipe_test.go	/^type pipeTest struct {$/;"	t
pipeTests	./io/pipe_test.go	/^var pipeTests = []pipeTest{$/;"	v
pipeline	./text/template/parse/parse.go	/^func (t *Tree) pipeline(context string) (pipe *PipeNode) {$/;"	f
pixString	./image/jpeg/reader_test.go	/^func pixString(pix []byte, stride, x, y int) string {$/;"	f
pkcs1AdditionalRSAPrime	./crypto/x509/pkcs1.go	/^type pkcs1AdditionalRSAPrime struct {$/;"	t
pkcs1PrivateKey	./crypto/x509/pkcs1.go	/^type pkcs1PrivateKey struct {$/;"	t
pkcs1v15HashInfo	./crypto/rsa/pkcs1v15.go	/^func pkcs1v15HashInfo(hash crypto.Hash, inLen int) (hashLen int, prefix []byte, err error) {$/;"	f
pkcs8	./crypto/x509/pkcs8.go	/^type pkcs8 struct {$/;"	t
pkcs8ECPrivateKeyHex	./crypto/x509/pkcs8_test.go	/^var pkcs8ECPrivateKeyHex = `3081ed020100301006072a8648ce3d020106052b810400230481d53081d20201010441850d81618c5da1aec74c2eed608ba816038506975e6427237c2def150c96a3b13efbfa1f89f1be15cdf4d0ac26422e680e65a0ddd4ad3541ad76165fbf54d6e34ba18189038186000400da97bcedba1eb6d30aeb93c9f9a1454598fa47278df27d6f60ea73eb672d8dc528a9b67885b5b5dcef93c9824f7449ab512ee6a27e76142f56b94b474cfd697e810046c8ca70419365245c1d7d44d0db82c334073835d002232714548abbae6e5700f5ef315ee08b929d8581383dcf2d1c98c2f8a9fccbf79c9579f7b2fd8a90115ac2`$/;"	v
pkcs8RSAPrivateKeyHex	./crypto/x509/pkcs8_test.go	/^var pkcs8RSAPrivateKeyHex = `30820278020100300d06092a864886f70d0101010500048202623082025e02010002818100cfb1b5bf9685ffa97b4f99df4ff122b70e59ac9b992f3bc2b3dde17d53c1a34928719b02e8fd17839499bfbd515bd6ef99c7a1c47a239718fe36bfd824c0d96060084b5f67f0273443007a24dfaf5634f7772c9346e10eb294c2306671a5a5e719ae24b4de467291bc571014b0e02dec04534d66a9bb171d644b66b091780e8d020301000102818100b595778383c4afdbab95d2bfed12b3f93bb0a73a7ad952f44d7185fd9ec6c34de8f03a48770f2009c8580bcd275e9632714e9a5e3f32f29dc55474b2329ff0ebc08b3ffcb35bc96e6516b483df80a4a59cceb71918cbabf91564e64a39d7e35dce21cb3031824fdbc845dba6458852ec16af5dddf51a8397a8797ae0337b1439024100ea0eb1b914158c70db39031dd8904d6f18f408c85fbbc592d7d20dee7986969efbda081fdf8bc40e1b1336d6b638110c836bfdc3f314560d2e49cd4fbde1e20b024100e32a4e793b574c9c4a94c8803db5152141e72d03de64e54ef2c8ed104988ca780cd11397bc359630d01b97ebd87067c5451ba777cf045ca23f5912f1031308c702406dfcdbbd5a57c9f85abc4edf9e9e29153507b07ce0a7ef6f52e60dcfebe1b8341babd8b789a837485da6c8d55b29bbb142ace3c24a1f5b54b454d01b51e2ad03024100bd6a2b60dee01e1b3bfcef6a2f09ed027c273cdbbaf6ba55a80f6dcc64e4509ee560f84b4f3e076bd03b11e42fe71a3fdd2dffe7e0902c8584f8cad877cdc945024100aa512fa4ada69881f1d8bb8ad6614f192b83200aef5edf4811313d5ef30a86cbd0a90f7b025c71ea06ec6b34db6306c86b1040670fd8654ad7291d066d06d031`$/;"	v
pkdebug	./cmd/yacc/yacc.go	/^var pkdebug = 0 \/\/ debugging flag for apack$/;"	v
pkg	./cmd/compile/internal/gc/export.go	/^ * return the type pkg.name, forward declaring if needed$/;"	t
pkg	./cmd/compile/internal/gc/obj.go	/^	var pkg *Pkg$/;"	v
pkg	./cmd/compile/internal/gc/y.go	/^			var pkg *Pkg$/;"	v
pkgArgs	./cmd/go/test.go	/^	var pkgArgs []string$/;"	v
pkgBuilder	./go/ast/resolve.go	/^type pkgBuilder struct {$/;"	t
pkgExts	./go/internal/gcimporter/gcimporter.go	/^var pkgExts = [...]string{".a", ".o"}$/;"	v
pkgFilenames	./go/types/stdlib_test.go	/^func pkgFilenames(dir string) ([]string, error) {$/;"	f
pkgFiles	./go/types/self_test.go	/^func pkgFiles(fset *token.FileSet, path string) ([]*ast.File, error) {$/;"	f
pkgFor	./go/types/api_test.go	/^func pkgFor(path, source string, info *Info) (*Package, error) {$/;"	f
pkgImports	./go/types/resolver.go	/^	var pkgImports = make(map[*Package]bool)$/;"	v
pkgMap	./cmd/compile/internal/gc/subr.go	/^var pkgMap = make(map[string]*Pkg)$/;"	v
pkgMap	./unicode/maketables.go	/^		var pkgMap map[string]*unicode.RangeTable$/;"	v
pkgNames	./cmd/api/goapi.go	/^	var pkgNames []string$/;"	v
pkgPath	./cmd/vet/composite.go	/^func pkgPath(f *File, pkgName string) (path string) {$/;"	f
pkgerror	./cmd/compile/internal/gc/subr.go	/^	var pkgerror string$/;"	v
pkgname	./go/internal/gccgoimporter/parser.go	/^	var pkgname string$/;"	v
pkgnotused	./cmd/compile/internal/gc/lex.go	/^func pkgnotused(lineno int, path string, name string) {$/;"	f
pkgpath	./cmd/link/internal/ld/pobj.go	/^			var pkgpath, file string$/;"	v
pkgs	./cmd/compile/internal/gc/subr.go	/^var pkgs []*Pkg$/;"	v
pkgs	./cmd/go/main.go	/^	var pkgs []string$/;"	v
pkgs	./cmd/go/pkg.go	/^	var pkgs []*Package$/;"	v
pkgtype	./cmd/compile/internal/gc/export.go	/^func pkgtype(s *Sym) *Type {$/;"	f
pki	./crypto/x509/x509.go	/^	var pki publicKeyInfo$/;"	v
pkixPublicKey	./crypto/x509/x509.go	/^type pkixPublicKey struct {$/;"	t
pktconn	./syscall/net_nacl.go	/^type pktconn struct {$/;"	t
pktmsg	./syscall/net_nacl.go	/^type pktmsg struct {$/;"	t
pl	./cmd/compile/internal/gc/pgen.go	/^	var pl *obj.Plist$/;"	v
plainAuth	./net/smtp/auth.go	/^type plainAuth struct {$/;"	t
plan9	./cmd/internal/rsc.io/x86/x86asm/plan9ext_test.go	/^func plan9(ext *ExtDis) error {$/;"	f
plan9Arg	./cmd/internal/rsc.io/arm/armasm/plan9x.go	/^func plan9Arg(inst *Inst, pc uint64, symname func(uint64) (string, uint64), arg Arg) string {$/;"	f
plan9Arg	./cmd/internal/rsc.io/x86/x86asm/plan9x.go	/^func plan9Arg(inst *Inst, pc uint64, symname func(uint64) (string, uint64), arg Arg) string {$/;"	f
plan9File	./cmd/internal/objfile/plan9obj.go	/^type plan9File struct {$/;"	t
plan9ManualTests	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^var plan9ManualTests = `$/;"	v
plan9Reg	./cmd/internal/rsc.io/x86/x86asm/plan9x.go	/^var plan9Reg = [...]string{$/;"	v
plan9Shift	./cmd/internal/rsc.io/arm/armasm/plan9x.go	/^var plan9Shift = []string{"<<", ">>", "->", "@>", "@x>"}$/;"	v
plan9Suffix	./cmd/internal/rsc.io/x86/x86asm/plan9x.go	/^var plan9Suffix = [maxOp + 1]bool{$/;"	v
plan9Unsupported	./cmd/internal/rsc.io/x86/x86asm/plan9x_test.go	/^var plan9Unsupported = strings.Fields(`$/;"	v
plan9_semacquire	./runtime/os_plan9.go	/^func plan9_semacquire(addr *uint32, block int32) int32$/;"	f
plan9_semrelease	./runtime/os_plan9.go	/^func plan9_semrelease(addr *uint32, count int32) int32$/;"	f
plan9_tsemacquire	./runtime/os_plan9.go	/^func plan9_tsemacquire(addr *uint32, ms int32) int32$/;"	f
plan9quote	./cmd/compile/internal/gc/util.go	/^func plan9quote(s string) string {$/;"	f
planetSorter	./sort/example_keys_test.go	/^type planetSorter struct {$/;"	t
planets	./sort/example_keys_test.go	/^var planets = []Planet{$/;"	v
playExample	./go/doc/example.go	/^func playExample(file *ast.File, body *ast.BlockStmt) *ast.File {$/;"	f
playExampleFile	./go/doc/example.go	/^func playExampleFile(file *ast.File) *ast.File {$/;"	f
playback	./runtime/sys_nacl_amd64p32.s	/^playback:$/;"	l
pleaseDoNotInlineMe	./runtime/race/testdata/regression_test.go	/^	var pleaseDoNotInlineMe stack$/;"	v
plink	./cmd/internal/obj/objfile.go	/^	var plink *Prog$/;"	v
plus	./regexp/syntax/compile.go	/^func (c *compiler) plus(f1 frag, nongreedy bool) frag {$/;"	f
pmode	./go/printer/printer.go	/^type pmode int$/;"	t
pname	./cmd/link/internal/ld/ld.go	/^	var pname string$/;"	v
pname	./cmd/link/internal/ld/lib.go	/^	var pname string$/;"	v
pnote	./cmd/link/internal/ld/elf.go	/^	var pnote *ElfPhdr$/;"	v
pointer	./reflect/value.go	/^func (v Value) pointer() unsafe.Pointer {$/;"	f
pointers	./reflect/type.go	/^func (t *rtype) pointers() bool { return t.kind&kindNoPointers == 0 }$/;"	f
poisonStack	./runtime/gc_test.go	/^func poisonStack() uintptr {$/;"	f
polar	./math/cmplx/cmath_test.go	/^var polar = []ff{$/;"	v
polarSC	./math/cmplx/cmath_test.go	/^var polarSC = []ff{$/;"	v
policies	./crypto/x509/x509.go	/^				var policies []policyInformation$/;"	v
policyInformation	./crypto/x509/x509.go	/^type policyInformation struct {$/;"	t
policyTable	./net/addrselect.go	/^type policyTable []policyTableEntry$/;"	t
policyTableEntry	./net/addrselect.go	/^type policyTableEntry struct {$/;"	t
pollCache	./runtime/netpoll.go	/^type pollCache struct {$/;"	t
pollDesc	./net/fd_poll_nacl.go	/^type pollDesc struct {$/;"	t
pollDesc	./net/fd_poll_runtime.go	/^type pollDesc struct {$/;"	t
pollDesc	./runtime/netpoll.go	/^type pollDesc struct {$/;"	t
pone	./math/j1.go	/^func pone(x float64) float64 {$/;"	f
pool	./cmd/internal/obj/arm/asm5.go	/^var pool struct {$/;"	v
pool	./cmd/internal/obj/arm64/asm7.go	/^var pool struct {$/;"	v
poolCleanup	./sync/pool.go	/^func poolCleanup() {$/;"	f
poolLocal	./sync/pool.go	/^type poolLocal struct {$/;"	t
poolcleanup	./runtime/mgc.go	/^var poolcleanup func()$/;"	v
pooledFlateWriter	./archive/zip/register.go	/^type pooledFlateWriter struct {$/;"	t
pop	./cmd/go/pkg.go	/^func (s *importStack) pop() {$/;"	f
pop	./encoding/xml/xml.go	/^func (d *Decoder) pop() *stack {$/;"	f
pop	./go/ast/commentmap.go	/^func (s *nodeStack) pop(pos token.Pos) (top Node) {$/;"	f
pop	./runtime/race/testdata/regression_test.go	/^func (s *stack) pop() int {$/;"	f
pop	./runtime/sigqueue_plan9.go	/^func (q *noteQueue) pop() string {$/;"	f
pop	./text/template/exec.go	/^func (s *state) pop(mark int) {$/;"	f
popEOF	./encoding/xml/xml.go	/^func (d *Decoder) popEOF() bool {$/;"	f
popElement	./encoding/xml/xml.go	/^func (d *Decoder) popElement(t *EndElement) bool {$/;"	f
popParseState	./encoding/json/scanner.go	/^func (s *scanner) popParseState() {$/;"	f
popPrefix	./encoding/xml/marshal.go	/^func (p *printer) popPrefix() {$/;"	f
popVars	./text/template/parse/parse.go	/^func (t *Tree) popVars(n int) {$/;"	f
popWriter	./encoding/gob/encoder.go	/^func (enc *Encoder) popWriter() {$/;"	f
popdcl	./cmd/compile/internal/gc/dcl.go	/^func popdcl() {$/;"	f
pops	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^var pops = []byte{$/;"	v
poptemp	./cmd/compile/internal/gc/order.go	/^func poptemp(mark *NodeList, order *Order) {$/;"	f
poptodcl	./cmd/compile/internal/gc/dcl.go	/^func poptodcl() {$/;"	f
populateHeaders	./mime/multipart/multipart.go	/^func (bp *Part) populateHeaders() error {$/;"	f
populateResponse	./net/http/filetransport.go	/^type populateResponse struct {$/;"	t
port	./net/listen_test.go	/^func (c *UDPConn) port() string {$/;"	f
port	./net/listen_test.go	/^func (ln *TCPListener) port() string {$/;"	f
port	./net/mockserver_test.go	/^		var port int$/;"	v
portMap	./net/http/transport.go	/^var portMap = map[string]string{$/;"	v
portTests	./net/port_test.go	/^var portTests = []struct {$/;"	v
port_associate	./runtime/netpoll_solaris.go	/^func port_associate(port, source int32, object uintptr, events uint32, user uintptr) int32 {$/;"	f
port_create	./runtime/netpoll_solaris.go	/^func port_create() int32 {$/;"	f
port_dissociate	./runtime/netpoll_solaris.go	/^func port_dissociate(port, source int32, object uintptr) int32 {$/;"	f
port_getn	./runtime/netpoll_solaris.go	/^func port_getn(port int32, evs *portevent, max uint32, nget *uint32, timeout *timespec) int32 {$/;"	f
portevent	./runtime/defs1_solaris_amd64.go	/^type portevent struct {$/;"	t
portfd	./runtime/netpoll_solaris.go	/^var portfd int32 = -1$/;"	v
portion	./reflect/value.go	/^	\/\/ Now, fill in the type portion.  We're very careful here not$/;"	t
pos	./cmd/compile/internal/gc/plive.go	/^	var pos int32$/;"	v
pos	./go/ast/filter.go	/^	var pos token.Pos$/;"	v
pos	./go/parser/parser_test.go	/^		var pos, end token.Pos$/;"	v
pos	./go/types/operand.go	/^func (x *operand) pos() token.Pos {$/;"	f
posFor	./go/printer/printer.go	/^func (p *printer) posFor(pos token.Pos) token.Position {$/;"	f
posMsgRx	./go/types/check_test.go	/^var posMsgRx = regexp.MustCompile(`^(.*:[0-9]+:[0-9]+): *(.*)`)$/;"	v
posSpan	./go/ast/import.go	/^type posSpan struct {$/;"	t
posTable	./debug/dwarf/line_test.go	/^	var posTable []LineReaderPos$/;"	v
posType	./cmd/fix/fix.go	/^var posType = reflect.TypeOf(token.Pos(0))$/;"	v
posinf	./runtime/complex.go	/^func posinf() float64 {$/;"	f
position	./go/token/position.go	/^func (f *File) position(p Pos, adjusted bool) (pos Position) {$/;"	f
positiveAtoi	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) positiveAtoi(str string) int64 {$/;"	f
posixGroup	./regexp/syntax/perl_groups.go	/^var posixGroup = map[string]charGroup{$/;"	v
post	./cmd/compile/internal/gc/order.go	/^		var post *NodeList$/;"	v
postDecode	./cmd/pprof/internal/profile/encode.go	/^func (p *Profile) postDecode() error {$/;"	f
postNote	./os/signal/signal_plan9_test.go	/^func postNote(pid int, note string) error {$/;"	f
postProcessTrace	./internal/trace/parser.go	/^func postProcessTrace(events []*Event) error {$/;"	f
postnote	./runtime/os1_plan9.go	/^func postnote(pid uint64, msg []byte) int {$/;"	f
postorder	./cmd/compile/internal/gc/popt.go	/^func postorder(r *Flow, rpo2r []*Flow, n int32) int32 {$/;"	f
pow	./cmd/compile/internal/big/natconv.go	/^func pow(x Word, n int) (p Word) {$/;"	f
pow	./cmd/compile/internal/gc/walk.go	/^	var pow int$/;"	v
pow	./math/all_test.go	/^var pow = []float64{$/;"	v
pow	./math/big/natconv.go	/^func pow(x Word, n int) (p Word) {$/;"	f
pow	./math/cmplx/cmath_test.go	/^var pow = []complex128{$/;"	v
pow	./strings/strings.go	/^	var pow, sq uint32 = 1, primeRK$/;"	v
pow10	./cmd/compile/internal/big/floatconv.go	/^func (z *Float) pow10(n int64) *Float {$/;"	f
pow10	./math/big/floatconv.go	/^func (z *Float) pow10(n int64) *Float {$/;"	f
pow10SC	./math/all_test.go	/^var pow10SC = []float64{$/;"	v
pow10tab	./cmd/compile/internal/big/floatconv.go	/^var pow10tab = [...]float64{$/;"	v
pow10tab	./math/big/floatconv.go	/^var pow10tab = [...]float64{$/;"	v
pow10tab	./math/pow10.go	/^var pow10tab [70]float64$/;"	v
pow2	./strconv/fp_test.go	/^func pow2(i int) float64 {$/;"	f
powSC	./math/all_test.go	/^var powSC = []float64{$/;"	v
powSC	./math/cmplx/cmath_test.go	/^var powSC = []complex128{$/;"	v
powers	./cmd/compile/internal/big/nat.go	/^	var powers [1 << n]nat$/;"	v
powers	./math/big/nat.go	/^	var powers [1 << n]nat$/;"	v
powersOfTen	./strconv/extfloat.go	/^var powersOfTen = [...]extFloat{$/;"	v
powtab	./strconv/atof.go	/^var powtab = []int{1, 3, 6, 9, 13, 16, 19, 23, 26}$/;"	v
powtwo	./cmd/compile/internal/gc/subr.go	/^func powtwo(n *Node) int {$/;"	f
powx	./crypto/aes/const.go	/^var powx = [16]byte{$/;"	v
pp	./cmd/compile/internal/gc/lex.go	/^	var pp **Idir$/;"	v
pp	./cmd/internal/obj/x86/asm6.go	/^		var pp obj.Prog$/;"	v
pp	./cmd/yacc/yacc.go	/^	var pp, qq int$/;"	v
pp	./fmt/print.go	/^type pp struct {$/;"	t
pp	./syscall/syscall_linux_386.go	/^	var pp [2]_C_int$/;"	v
pp	./syscall/syscall_linux_amd64.go	/^	var pp [2]_C_int$/;"	v
pp	./syscall/syscall_linux_arm.go	/^	var pp [2]_C_int$/;"	v
pp	./syscall/syscall_linux_arm64.go	/^	var pp [2]_C_int$/;"	v
pp	./syscall/syscall_linux_ppc64x.go	/^	var pp [2]_C_int$/;"	v
pp	./syscall/syscall_openbsd.go	/^	var pp [2]_C_int$/;"	v
pp	./syscall/syscall_plan9.go	/^	var pp [2]int32$/;"	v
ppFree	./fmt/print.go	/^var ppFree = sync.Pool{$/;"	v
ppc64OperandTests	./cmd/asm/internal/asm/operand_test.go	/^var ppc64OperandTests = []operandTest{$/;"	v
ppc64RegisterNumber	./cmd/asm/internal/arch/ppc64.go	/^func ppc64RegisterNumber(name string, n int16) (int16, bool) {$/;"	f
pph	./cmd/link/internal/ld/elf.go	/^	var pph *ElfPhdr$/;"	v
ppp	./go/doc/synopsis.go	/^	var ppp, pp, p rune$/;"	v
pprevtextp	./cmd/link/internal/ppc64/asm.go	/^	var pprevtextp **ld.LSym$/;"	v
pragcgo	./cmd/compile/internal/gc/lex.go	/^func pragcgo(text string) {$/;"	f
pragcgobuf	./cmd/compile/internal/gc/go.go	/^var pragcgobuf string$/;"	v
prasm	./cmd/internal/obj/arm/asm5.go	/^func prasm(p *obj.Prog) {$/;"	f
prasm	./cmd/internal/obj/arm64/asm7.go	/^func prasm(p *obj.Prog) {$/;"	f
prasm	./cmd/internal/obj/ppc64/asm9.go	/^func prasm(p *obj.Prog) {$/;"	f
praw	./net/http/requestwrite_test.go	/^			var praw bytes.Buffer$/;"	v
prd	./cmd/yacc/yacc.go	/^	var prd []int$/;"	v
prdptr	./cmd/yacc/yacc.go	/^var prdptr [][]int \/\/ pointers to descriptions of productions$/;"	v
pre	./encoding/asn1/marshal.go	/^			var pre *forkableWriter$/;"	v
preEncode	./cmd/pprof/internal/profile/encode.go	/^func (p *Profile) preEncode() {$/;"	f
prePendingDial	./net/http/transport.go	/^var prePendingDial, postPendingDial func()$/;"	v
pread	./os/file_plan9.go	/^func (f *File) pread(b []byte, off int64) (n int, err error) {$/;"	f
pread	./os/file_unix.go	/^func (f *File) pread(b []byte, off int64) (n int, err error) {$/;"	f
pread	./os/file_windows.go	/^func (f *File) pread(b []byte, off int64) (n int, err error) {$/;"	f
pread	./runtime/os_plan9.go	/^func pread(fd int32, buf unsafe.Pointer, nbytes int32, offset int64) int32$/;"	f
pread	./syscall/fd_nacl.go	/^func (*defaultFileImpl) pread([]byte, int64) (int, error)  { return 0, ENOSYS }$/;"	f
pread	./syscall/fd_nacl.go	/^func (f *naclFile) pread(b []byte, offset int64) (int, error) {$/;"	f
pread	./syscall/fs_nacl.go	/^func (f *fsysFile) pread(b []byte, offset int64) (int, error) {$/;"	f
pread	./syscall/fs_nacl.go	/^func (f *nullFile) pread(b []byte, offset int64) (int, error)  { return 0, nil }$/;"	f
pread	./syscall/fs_nacl.go	/^func (f *zeroFile) pread(b []byte, offset int64) (int, error) {$/;"	f
pread	./syscall/fs_nacl.go	/^func (f randomFile) pread(b []byte, offset int64) (int, error) {$/;"	f
preadLocked	./syscall/fs_nacl.go	/^func (f *fsysFile) preadLocked(b []byte, offset int64) (int, error) {$/;"	f
preadn	./time/sys_plan9.go	/^func preadn(fd uintptr, buf []byte, off int) error {$/;"	f
preadn	./time/sys_unix.go	/^func preadn(fd uintptr, buf []byte, off int) error {$/;"	f
preadn	./time/sys_windows.go	/^func preadn(fd uintptr, buf []byte, off int) error {$/;"	f
prealloc	./cmd/compile/internal/gc/order.go	/^var prealloc = map[*Node]*Node{}$/;"	v
prec	./go/types/expr.go	/^		var prec uint$/;"	v
prec	./time/time.go	/^		var prec int$/;"	v
precList	./cmd/compile/internal/big/float_test.go	/^var precList = [...]uint{1, 2, 5, 8, 10, 16, 23, 24, 32, 50, 53, 64, 100, 128, 500, 511, 512, 513, 1000, 10000}$/;"	v
precList	./math/big/float_test.go	/^var precList = [...]uint{1, 2, 5, 8, 10, 16, 23, 24, 32, 50, 53, 64, 100, 128, 500, 511, 512, 513, 1000, 10000}$/;"	v
precftn	./cmd/yacc/yacc.go	/^func precftn(r, t, s int) {$/;"	f
precomp	./crypto/elliptic/p256.go	/^	var precomp [16][3][p256Limbs]uint32$/;"	v
pred	./cmd/compile/internal/arm/peep.go	/^	var pred int$/;"	v
pred	./cmd/compile/internal/gc/plive.go	/^	var pred *BasicBlock$/;"	v
predString	./go/types/api_test.go	/^func predString(tv TypeAndValue) string {$/;"	f
predecessors	./cmd/pprof/internal/report/report.go	/^func predecessors(e *edgeInfo, n *node) map[*node]bool {$/;"	f
predeclaredConstants	./go/doc/reader.go	/^var predeclaredConstants = map[string]bool{$/;"	v
predeclaredConsts	./go/types/universe.go	/^var predeclaredConsts = [...]struct {$/;"	v
predeclaredFuncs	./go/doc/reader.go	/^var predeclaredFuncs = map[string]bool{$/;"	v
predeclaredFuncs	./go/types/universe.go	/^var predeclaredFuncs = [...]struct {$/;"	v
predeclaredTypes	./go/doc/reader.go	/^var predeclaredTypes = map[string]bool{$/;"	v
predefine	./cmd/asm/internal/lex/input.go	/^func predefine(defines flags.MultiFlag) map[string]*Macro {$/;"	f
predicable	./cmd/compile/internal/arm/peep.go	/^func predicable(p *obj.Prog) bool {$/;"	f
predicate	./bytes/bytes_test.go	/^type predicate struct {$/;"	t
predicate	./cmd/compile/internal/arm/peep.go	/^func predicate(g *gc.Graph) {$/;"	f
predicate	./strings/strings_test.go	/^type predicate struct {$/;"	t
predicates	./go/types/predicates.go	/^\/\/ This file implements commonly used type predicates.$/;"	t
predinfo	./cmd/compile/internal/arm/peep.go	/^var predinfo = []struct {$/;"	v
preempt	./runtime/proc_test.go	/^var preempt = func() int {$/;"	v
preemptall	./runtime/proc1.go	/^func preemptall() bool {$/;"	f
preemptone	./runtime/proc1.go	/^func preemptone(_p_ *p) bool {$/;"	f
preferenceList	./crypto/tls/handshake_server.go	/^	var preferenceList, supportedList []uint16$/;"	v
prefetch	./runtime/mbitmap.go	/^func (h heapBits) prefetch() {$/;"	f
prefetchnta	./runtime/stubs.go	/^func prefetchnta(addr uintptr)$/;"	f
prefetcht0	./runtime/stubs.go	/^func prefetcht0(addr uintptr)$/;"	f
prefetcht1	./runtime/stubs.go	/^func prefetcht1(addr uintptr)$/;"	f
prefetcht2	./runtime/stubs.go	/^func prefetcht2(addr uintptr)$/;"	f
prefillTests	./encoding/json/decode_test.go	/^	var prefillTests = []struct {$/;"	v
prefix	./archive/tar/reader.go	/^		var prefix string$/;"	v
prefix	./cmd/asm/internal/asm/parse.go	/^	var prefix rune$/;"	v
prefix	./cmd/link/internal/ld/elf.go	/^	var prefix string$/;"	v
prefix	./cmd/link/internal/ld/go.go	/^	var prefix string$/;"	v
prefix	./cmd/yacc/yacc.go	/^var prefix string \/\/ name prefix for identifiers, default yy$/;"	v
prefix	./crypto/rsa/pss.go	/^	var prefix [8]byte$/;"	v
prefix	./go/scanner/scanner.go	/^var prefix = []byte("\/\/line ")$/;"	v
prefix	./regexp/syntax/simplify.go	/^		var prefix *Regexp$/;"	v
prefixBits	./cmd/internal/rsc.io/x86/x86asm/intel.go	/^	var prefixBits uint32$/;"	v
prefixByte	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^var prefixByte = map[string]byte{$/;"	v
prefixBytes	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^	var prefixBytes = []byte{0x66, 0x67, 0xF0, 0xF2, 0xF3, 0x3E, 0x36, 0x66, 0x67}$/;"	v
prefixDirectory	./cmd/vet/main.go	/^func prefixDirectory(directory string, names []string) {$/;"	f
prefixIsLessThan	./strconv/decimal.go	/^func prefixIsLessThan(b []byte, s string) bool {$/;"	f
prefixNames	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^var prefixNames = map[Prefix]string{$/;"	v
prefixNode	./strings/replace.go	/^			var prefixNode *trieNode$/;"	v
prefixToSegment	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^func prefixToSegment(p Prefix) Reg {$/;"	f
prefixof	./cmd/internal/obj/x86/asm6.go	/^func prefixof(ctxt *obj.Link, p *obj.Prog, a *obj.Addr) int {$/;"	f
prepare	./database/sql/sql.go	/^func (db *DB) prepare(query string, strategy connReuseStrategy) (*Stmt, error) {$/;"	f
prepareCipherSpec	./crypto/tls/conn.go	/^func (hc *halfConn) prepareCipherSpec(version uint16, cipher interface{}, mac macFunction) {$/;"	f
prepareCreate	./database/sql/fakedb_test.go	/^func (c *fakeConn) prepareCreate(stmt *fakeStmt, parts []string) (driver.Stmt, error) {$/;"	f
prepareInsert	./database/sql/fakedb_test.go	/^func (c *fakeConn) prepareInsert(stmt *fakeStmt, parts []string) (driver.Stmt, error) {$/;"	f
prepareLocked	./database/sql/sql.go	/^func (dc *driverConn) prepareLocked(query string) (driver.Stmt, error) {$/;"	f
prepareSelect	./database/sql/fakedb_test.go	/^func (c *fakeConn) prepareSelect(stmt *fakeStmt, parts []string) (driver.Stmt, error) {$/;"	f
preprocess	./cmd/internal/obj/arm/obj5.go	/^func preprocess(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
preprocess	./cmd/internal/obj/arm64/obj7.go	/^func preprocess(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
preprocess	./cmd/internal/obj/ppc64/obj9.go	/^func preprocess(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
preprocess	./cmd/internal/obj/x86/obj6.go	/^func preprocess(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
preprocess	./cmd/pprof/internal/driver/driver.go	/^func preprocess(prof *profile.Profile, ui plugin.UI, f *flags) error {$/;"	f
preprocess	./cmd/pprof/internal/report/report.go	/^func (g *graph) preprocess(rpt *Report) (origCount, droppedNodes, droppedEdges int) {$/;"	f
pres	./cmd/yacc/yacc.go	/^var pres [][][]int \/\/ vector of pointers to productions yielding each nonterminal$/;"	v
present	./image/image.go	/^	var present [256]bool$/;"	v
presentInMap	./fmt/fmt_test.go	/^func presentInMap(s string, a []string, t *testing.T) {$/;"	f
prettyName	./cmd/pprof/internal/report/report.go	/^func (info *nodeInfo) prettyName() string {$/;"	f
prev	./cmd/compile/internal/gc/plive.go	/^		var prev *obj.Prog$/;"	v
prev	./cmd/link/internal/ld/dwarf.go	/^	var prev *DWDie$/;"	v
prev	./go/parser/error_test.go	/^	var prev token.Pos \/\/ position of last non-comment, non-semicolon token$/;"	v
prev	./go/types/check_test.go	/^		var prev token.Pos \/\/ position of last non-comment, non-semicolon token$/;"	v
prevMatchEmpty	./strings/replace.go	/^	var prevMatchEmpty bool$/;"	v
prevState	./unicode/maketables.go	/^	var prevState = &caseState{} \/\/ the state of the previous character$/;"	v
prevType	./go/doc/exports.go	/^		var prevType ast.Expr$/;"	v
prevl	./cmd/compile/internal/amd64/peep.go	/^func prevl(r0 *gc.Flow, reg int) bool {$/;"	f
prevlineno	./cmd/compile/internal/gc/go.go	/^var prevlineno int32$/;"	v
prevp	./runtime/mem_plan9.go	/^	var prevp *memHdr$/;"	v
prf10	./crypto/tls/prf.go	/^func prf10(result, secret, label, seed []byte) {$/;"	f
prf12	./crypto/tls/prf.go	/^func prf12(hashFunc func() hash.Hash) func(result, secret, label, seed []byte) {$/;"	f
prf30	./crypto/tls/prf.go	/^func prf30(result, secret, label, seed []byte) {$/;"	f
prfAndHashForVersion	./crypto/tls/prf.go	/^func prfAndHashForVersion(version uint16, suite *cipherSuite) (func(result, secret, label, seed []byte), crypto.Hash) {$/;"	f
prfForVersion	./crypto/tls/prf.go	/^func prfForVersion(version uint16, suite *cipherSuite) func(result, secret, label, seed []byte) {$/;"	f
primaries	./net/dial.go	/^	var primaries, fallbacks addrList$/;"	v
primaryErr	./net/dial.go	/^	var primaryErr error$/;"	v
primaryLabel	./net/ipsock.go	/^	var primaryLabel bool$/;"	v
primes	./cmd/compile/internal/big/int_test.go	/^var primes = []string{$/;"	v
primes	./math/big/int_test.go	/^var primes = []string{$/;"	v
print	./builtin/builtin.go	/^func print(args ...Type)$/;"	f
print	./cmd/cover/cover.go	/^func (f *File) print(w io.Writer) {$/;"	f
print	./encoding/gob/debug.go	/^func (t tab) print() {$/;"	f
print	./go/ast/print.go	/^func (p *printer) print(x reflect.Value) {$/;"	f
print	./go/printer/printer.go	/^func (p *printer) print(args ...interface{}) {$/;"	f
print	./unicode/maketables.go	/^func print(args ...interface{}) {$/;"	f
printArg	./fmt/print.go	/^func (p *pp) printArg(arg interface{}, verb rune, depth int) (wasString bool) {$/;"	f
printAssembly	./cmd/pprof/internal/report/report.go	/^func printAssembly(w io.Writer, rpt *Report, obj plugin.ObjTool) error {$/;"	f
printBuiltin	./encoding/gob/debug.go	/^func (deb *debugger) printBuiltin(indent tab, id typeId) {$/;"	f
printCallgrind	./cmd/pprof/internal/report/report.go	/^func printCallgrind(w io.Writer, rpt *Report) error {$/;"	f
printCaseOrbit	./unicode/maketables.go	/^func printCaseOrbit() {$/;"	f
printCaseRange	./unicode/maketables.go	/^func printCaseRange(lo, hi *caseState) {$/;"	f
printCasefold	./unicode/maketables.go	/^func printCasefold() {$/;"	f
printCases	./unicode/maketables.go	/^func printCases() {$/;"	f
printCatFold	./unicode/maketables.go	/^func printCatFold(name string, m map[string]map[rune]bool) {$/;"	f
printCategories	./unicode/maketables.go	/^func printCategories() {$/;"	f
printCommonType	./encoding/gob/debug.go	/^func (deb *debugger) printCommonType(indent tab, kind string, common *CommonType) {$/;"	f
printContents	./cmd/pack/pack.go	/^func (ar *Archive) printContents(entry *Entry) {$/;"	f
printCountProfile	./runtime/pprof/pprof.go	/^func printCountProfile(w io.Writer, debug int, name string, p countProfile) error {$/;"	f
printDOT	./cmd/pprof/internal/report/report.go	/^func printDOT(w io.Writer, rpt *Report) error {$/;"	f
printFunctionClosing	./cmd/pprof/internal/report/source.go	/^func printFunctionClosing(w io.Writer) {$/;"	f
printFunctionHeader	./cmd/pprof/internal/report/source.go	/^func printFunctionHeader(w io.Writer, name, path string, flatSum, cumSum int64, rpt *Report) {$/;"	f
printFunctionSourceLine	./cmd/pprof/internal/report/source.go	/^func printFunctionSourceLine(w io.Writer, fn *node, assembly nodes, rpt *Report) {$/;"	f
printHeader	./cmd/pprof/internal/report/source.go	/^func printHeader(w io.Writer, rpt *Report) {$/;"	f
printInflightSockets	./net/main_test.go	/^func printInflightSockets() {$/;"	f
printLatinProperties	./unicode/maketables.go	/^func printLatinProperties() {$/;"	f
printList	./cmd/vet/print.go	/^var printList = map[string]int{$/;"	v
printMaps	./encoding/gob/decgen.go	/^func printMaps(b *bytes.Buffer, upperClass string) {$/;"	f
printMaps	./encoding/gob/encgen.go	/^func printMaps(b *bytes.Buffer, upperClass string) {$/;"	f
printMethodDoc	./cmd/doc/pkg.go	/^func (pkg *Package) printMethodDoc(symbol, method string) bool {$/;"	f
printNode	./go/printer/printer.go	/^func (p *printer) printNode(node interface{}) error {$/;"	f
printNode	./strings/export_test.go	/^func (r *genericReplacer) printNode(t *trieNode, depth int) (s string) {$/;"	f
printOrgans	./sort/example_wrapper_test.go	/^func printOrgans(s []*Organ) {$/;"	f
printPageClosing	./cmd/pprof/internal/report/source.go	/^func printPageClosing(w io.Writer) {$/;"	f
printPlan9	./image/color/palette/gen.go	/^func printPlan9(w io.Writer) {$/;"	f
printProduct	./go/types/hilbert_test.go	/^	g.p("func printProduct() {\\n")$/;"	f
printProduct	./go/types/hilbert_test.go	/^func (g *gen) printProduct(n int) {$/;"	f
printRange	./unicode/maketables.go	/^func printRange(lo, hi, stride uint32, size int, count *int) (int, *int) {$/;"	f
printReflectValue	./fmt/print.go	/^func (p *pp) printReflectValue(value reflect.Value, verb rune, depth int) (wasString bool) {$/;"	f
printRunningGoroutines	./net/main_test.go	/^func printRunningGoroutines() {$/;"	f
printScriptOrProperty	./unicode/maketables.go	/^func printScriptOrProperty(doProps bool) {$/;"	f
printSizes	./unicode/maketables.go	/^func printSizes() {$/;"	f
printSocketStats	./net/main_test.go	/^func printSocketStats() {$/;"	f
printSource	./cmd/pprof/internal/report/source.go	/^func printSource(w io.Writer, rpt *Report) error {$/;"	f
printStackRecord	./runtime/pprof/pprof.go	/^func printStackRecord(w io.Writer, stk []uintptr, allFrames bool) {$/;"	f
printStderr	./cmd/go/run.go	/^func printStderr(args ...interface{}) (int, error) {$/;"	f
printStruct	./net/dnsmsg.go	/^func printStruct(any dnsStruct) string {$/;"	f
printTags	./cmd/pprof/internal/report/report.go	/^func printTags(w io.Writer, rpt *Report) error {$/;"	f
printTest	./cmd/go/test.go	/^func (b *builder) printTest(a *action) error {$/;"	f
printText	./cmd/pprof/internal/report/report.go	/^func printText(w io.Writer, rpt *Report) error {$/;"	f
printTrace	./go/parser/parser.go	/^func (p *parser) printTrace(a ...interface{}) {$/;"	f
printTrace	./go/printer/testdata/parser.go	/^func (p *parser) printTrace(a ...interface{}) {$/;"	f
printTree	./cmd/pprof/internal/report/report.go	/^func printTree(w io.Writer, rpt *Report) error {$/;"	f
printUsage	./cmd/addr2line/main.go	/^func printUsage(w *os.File) {$/;"	f
printUsage	./cmd/go/main.go	/^func printUsage(w io.Writer) {$/;"	f
printValue	./fmt/print.go	/^func (p *pp) printValue(value reflect.Value, verb rune, depth int) (wasString bool) {$/;"	f
printValue	./text/template/exec.go	/^func (s *state) printValue(n parse.Node, v reflect.Value) {$/;"	f
printVerb	./cmd/vet/print.go	/^type printVerb struct {$/;"	t
printVerbs	./cmd/vet/print.go	/^var printVerbs = []printVerb{$/;"	v
printWebSafe	./image/color/palette/gen.go	/^func printWebSafe(w io.Writer) {$/;"	f
printWebSource	./cmd/pprof/internal/report/source.go	/^func printWebSource(w io.Writer, rpt *Report, obj plugin.ObjTool) error {$/;"	f
printWireType	./encoding/gob/debug.go	/^func (deb *debugger) printWireType(indent tab, wire *wireType) {$/;"	f
print_function	./runtime/runtime-gdb.py	/^from __future__ import print_function$/;"	i
printableStringTest	./encoding/asn1/marshal_test.go	/^type printableStringTest struct {$/;"	t
printableValue	./text/template/exec.go	/^func printableValue(v reflect.Value) (interface{}, bool) {$/;"	f
printany	./runtime/error.go	/^func printany(i interface{}) {$/;"	f
printargs	./cmd/compile/internal/gc/walk.go	/^	var printargs *NodeList$/;"	v
printbitset	./cmd/compile/internal/gc/plive.go	/^func printbitset(printed int, name string, vars []*Node, bits Bvec) int {$/;"	f
printblock	./cmd/compile/internal/gc/plive.go	/^func printblock(bb *BasicBlock) {$/;"	f
printbool	./cmd/compile/internal/gc/builtin/runtime.go	/^func printbool(bool)$/;"	f
printbool	./runtime/print1.go	/^func printbool(v bool) {$/;"	f
printbyte	./runtime/print1.go	/^func printbyte(c byte) {$/;"	f
printcfg	./cmd/compile/internal/gc/plive.go	/^func printcfg(cfg []*BasicBlock) {$/;"	f
printcomplex	./cmd/compile/internal/gc/builtin/runtime.go	/^func printcomplex(complex128)$/;"	f
printcomplex	./runtime/print1.go	/^func printcomplex(c complex128) {$/;"	f
printcreatedby	./runtime/traceback.go	/^func printcreatedby(gp *g) {$/;"	f
printed	./cmd/compile/internal/gc/plive.go	/^	var printed int$/;"	v
printeface	./cmd/compile/internal/gc/builtin/runtime.go	/^func printeface(any)$/;"	f
printeface	./runtime/print1.go	/^func printeface(e interface{}) {$/;"	f
printeffects	./cmd/compile/internal/gc/plive.go	/^func printeffects(p *obj.Prog, uevar Bvec, varkill Bvec, avarinit Bvec) {$/;"	f
printer	./encoding/xml/marshal.go	/^type printer struct {$/;"	t
printer	./go/ast/print.go	/^type printer struct {$/;"	t
printer	./go/printer/printer.go	/^type printer struct {$/;"	t
printerconfig	./cmd/fix/printerconfig.go	/^func printerconfig(f *ast.File) bool {$/;"	f
printerconfigFix	./cmd/fix/printerconfig.go	/^var printerconfigFix = fix{$/;"	v
printerconfigTests	./cmd/fix/printerconfig_test.go	/^var printerconfigTests = []testCase{$/;"	v
printf	./cmd/vet/testdata/print.go	/^func printf(format string, args ...interface{}) {$/;"	f
printf	./go/ast/print.go	/^func (p *printer) printf(format string, args ...interface{}) {$/;"	f
printf	./net/http/cgi/host.go	/^func (h *Handler) printf(format string, v ...interface{}) {$/;"	f
printf	./unicode/maketables.go	/^func printf(format string, args ...interface{}) {$/;"	f
printfArgType	./cmd/vet/print.go	/^type printfArgType int$/;"	t
printfList	./cmd/vet/print.go	/^var printfList = map[string]int{$/;"	v
printfloat	./cmd/compile/internal/gc/builtin/runtime.go	/^func printfloat(float64)$/;"	f
printfloat	./runtime/print1.go	/^func printfloat(v float64) {$/;"	f
printfuncs	./cmd/vet/print.go	/^var printfuncs = flag.String("printfuncs", "", "comma-separated list of print function names to check")$/;"	v
printgolden	./math/rand/regress_test.go	/^var printgolden = flag.Bool("printgolden", false, "print golden results for regression test")$/;"	v
printhex	./cmd/compile/internal/gc/builtin/runtime.go	/^func printhex(uint64)$/;"	f
printhex	./runtime/print1.go	/^func printhex(v uint64) {$/;"	f
printiface	./cmd/compile/internal/gc/builtin/runtime.go	/^func printiface(any)$/;"	f
printiface	./runtime/print1.go	/^func printiface(i fInterface) {$/;"	f
printint	./cmd/compile/internal/gc/builtin/runtime.go	/^func printint(int64)$/;"	f
printint	./runtime/print1.go	/^func printint(v int64) {$/;"	f
println	./builtin/builtin.go	/^func println(args ...Type)$/;"	f
println	./unicode/maketables.go	/^func println(args ...interface{}) {$/;"	f
printlock	./cmd/compile/internal/gc/builtin/runtime.go	/^func printlock()$/;"	f
printlock	./runtime/print1.go	/^func printlock() {$/;"	f
printnl	./cmd/compile/internal/gc/builtin/runtime.go	/^func printnl()$/;"	f
printnl	./runtime/print1.go	/^func printnl() {$/;"	f
printnode	./cmd/compile/internal/gc/plive.go	/^func printnode(node *Node) {$/;"	f
printpanics	./runtime/panic.go	/^func printpanics(p *_panic) {$/;"	f
printpc	./runtime/print1.go	/^func printpc(p unsafe.Pointer) {$/;"	f
printpointer	./cmd/compile/internal/gc/builtin/runtime.go	/^func printpointer(any)$/;"	f
printpointer	./runtime/print1.go	/^func printpointer(p unsafe.Pointer) {$/;"	f
printprog	./cmd/compile/internal/gc/plive.go	/^func printprog(p *obj.Prog) {$/;"	f
printslice	./cmd/compile/internal/gc/builtin/runtime.go	/^func printslice(any)$/;"	f
printslice	./runtime/print1.go	/^func printslice(s []byte) {$/;"	f
printsp	./cmd/compile/internal/gc/builtin/runtime.go	/^func printsp()$/;"	f
printsp	./runtime/print1.go	/^func printsp() {$/;"	f
printstring	./cmd/compile/internal/gc/builtin/runtime.go	/^func printstring(string)$/;"	f
printstring	./runtime/print1.go	/^func printstring(s string) {$/;"	f
printuint	./cmd/compile/internal/gc/builtin/runtime.go	/^func printuint(uint64)$/;"	f
printuint	./runtime/print1.go	/^func printuint(v uint64) {$/;"	f
printunlock	./cmd/compile/internal/gc/builtin/runtime.go	/^func printunlock()$/;"	f
printunlock	./runtime/print1.go	/^func printunlock() {$/;"	f
printvars	./cmd/compile/internal/gc/plive.go	/^func printvars(name string, bv Bvec, vars []*Node) {$/;"	f
priority	./cmd/internal/rsc.io/arm/armasm/decode.go	/^	var priority int8$/;"	v
priv	./crypto/dsa/dsa_test.go	/^	var priv PrivateKey$/;"	v
priv	./crypto/tls/generate_cert.go	/^	var priv interface{}$/;"	v
priv	./crypto/x509/pkcs1.go	/^	var priv pkcs1PrivateKey$/;"	v
priv	./reflect/all_test.go	/^	var priv Private$/;"	v
privKey	./crypto/x509/pkcs8.go	/^	var privKey pkcs8$/;"	v
privKey	./crypto/x509/sec1.go	/^	var privKey ecPrivateKey$/;"	v
private	./go/doc/testdata/f.go	/^type private struct{}$/;"	t
private	./testing/testing.go	/^func (c *common) private() {}$/;"	f
privateKey	./encoding/pem/pem_test.go	/^var privateKey = &Block{Type: "RSA PRIVATE KEY",$/;"	v
privateKey2	./encoding/pem/pem_test.go	/^var privateKey2 = &Block{$/;"	v
privateTypeMethod	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (myInt) privateTypeMethod()           {}$/;"	f
prlimit	./syscall/zsyscall_linux_386.go	/^func prlimit(pid int, resource int, old *Rlimit, newlimit *Rlimit) (err error) {$/;"	f
prlimit	./syscall/zsyscall_linux_amd64.go	/^func prlimit(pid int, resource int, old *Rlimit, newlimit *Rlimit) (err error) {$/;"	f
prlimit	./syscall/zsyscall_linux_arm.go	/^func prlimit(pid int, resource int, old *Rlimit, newlimit *Rlimit) (err error) {$/;"	f
prlimit	./syscall/zsyscall_linux_arm64.go	/^func prlimit(pid int, resource int, old *Rlimit, newlimit *Rlimit) (err error) {$/;"	f
prlimit	./syscall/zsyscall_linux_ppc64.go	/^func prlimit(pid int, resource int, old *Rlimit, newlimit *Rlimit) (err error) {$/;"	f
prlimit	./syscall/zsyscall_linux_ppc64le.go	/^func prlimit(pid int, resource int, old *Rlimit, newlimit *Rlimit) (err error) {$/;"	f
prlook	./cmd/yacc/yacc.go	/^func prlook(p Lkset) {$/;"	f
probablyPrime	./cmd/compile/internal/big/nat.go	/^func (n nat) probablyPrime(reps int) bool {$/;"	f
probablyPrime	./math/big/nat.go	/^func (n nat) probablyPrime(reps int) bool {$/;"	f
probe	./net/ipsock_plan9.go	/^func probe(filename, query string) bool {$/;"	f
probeIPv4Stack	./net/ipsock_plan9.go	/^func probeIPv4Stack() bool {$/;"	f
probeIPv4Stack	./net/ipsock_posix.go	/^func probeIPv4Stack() bool {$/;"	f
probeIPv6Stack	./net/ipsock_plan9.go	/^func probeIPv6Stack() (supportsIPv6, supportsIPv4map bool) {$/;"	f
probeIPv6Stack	./net/ipsock_posix.go	/^func probeIPv6Stack() (supportsIPv6, supportsIPv4map bool) {$/;"	f
probes	./net/ipsock_posix.go	/^	var probes = []struct {$/;"	v
proc	./cmd/trace/trace.go	/^func (ctx *traceContext) proc(ev *trace.Event) uint64 {$/;"	f
procEntry	./syscall/syscall_windows.go	/^	var procEntry ProcessEntry32$/;"	v
procInst	./encoding/xml/xml.go	/^func procInst(param, s string) string {$/;"	f
procInstEncodingTest	./encoding/xml/xml_test.go	/^type procInstEncodingTest struct {$/;"	t
procInstTests	./encoding/xml/xml_test.go	/^var procInstTests = []struct {$/;"	v
procPin	./runtime/proc1.go	/^func procPin() int {$/;"	f
procUnpin	./runtime/proc1.go	/^func procUnpin() {$/;"	f
procdir	./runtime/os1_plan9.go	/^var procdir = []byte("\/proc\/")$/;"	v
process	./os/signal/signal.go	/^func process(sig os.Signal) {$/;"	f
processApp0Marker	./image/jpeg/reader.go	/^func (d *decoder) processApp0Marker(n int) error {$/;"	f
processApp14Marker	./image/jpeg/reader.go	/^func (d *decoder) processApp14Marker(n int) error {$/;"	f
processBackward	./image/draw/draw.go	/^func processBackward(dst Image, r image.Rectangle, src image.Image, sp image.Point) bool {$/;"	f
processCertsFromClient	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) processCertsFromClient(certificates [][]byte) (crypto.PublicKey, error) {$/;"	f
processClientKeyExchange	./crypto/tls/key_agreement.go	/^func (ka *ecdheKeyAgreement) processClientKeyExchange(config *Config, cert *Certificate, ckx *clientKeyExchangeMsg, version uint16) ([]byte, error) {$/;"	f
processClientKeyExchange	./crypto/tls/key_agreement.go	/^func (ka rsaKeyAgreement) processClientKeyExchange(config *Config, cert *Certificate, ckx *clientKeyExchangeMsg, version uint16) ([]byte, error) {$/;"	f
processDHT	./image/jpeg/huffman.go	/^func (d *decoder) processDHT(n int) error {$/;"	f
processDQT	./image/jpeg/reader.go	/^func (d *decoder) processDQT(n int) error {$/;"	f
processDRI	./image/jpeg/reader.go	/^func (d *decoder) processDRI(n int) error {$/;"	f
processFile	./cmd/fix/main.go	/^func processFile(filename string, useStdin bool) error {$/;"	f
processFile	./cmd/gofmt/gofmt.go	/^func processFile(filename string, in io.Reader, out io.Writer, stdin bool) error {$/;"	f
processFlags	./cmd/pprof/internal/driver/driver.go	/^func processFlags(p *profile.Profile, ui plugin.UI, f *flags) error {$/;"	f
processLog	./runtime/race/race_test.go	/^func processLog(testName string, tsanLog []string) string {$/;"	f
processSOF	./image/jpeg/reader.go	/^func (d *decoder) processSOF(n int) error {$/;"	f
processSOS	./image/jpeg/scan.go	/^func (d *decoder) processSOS(n int) error {$/;"	f
processServerHello	./crypto/tls/handshake_client.go	/^func (hs *clientHandshakeState) processServerHello() (bool, error) {$/;"	f
processServerKeyExchange	./crypto/tls/key_agreement.go	/^func (ka *ecdheKeyAgreement) processServerKeyExchange(config *Config, clientHello *clientHelloMsg, serverHello *serverHelloMsg, cert *x509.Certificate, skx *serverKeyExchangeMsg) error {$/;"	f
processServerKeyExchange	./crypto/tls/key_agreement.go	/^func (ka rsaKeyAgreement) processServerKeyExchange(config *Config, clientHello *clientHelloMsg, serverHello *serverHelloMsg, cert *x509.Certificate, skx *serverKeyExchangeMsg) error {$/;"	f
processSignals	./cmd/go/signal.go	/^func processSignals() {$/;"	f
procresize	./runtime/proc1.go	/^func procresize(nprocs int32) *p {$/;"	f
procs	./syscall/exec_plan9.go	/^var procs struct {$/;"	v
procyield	./runtime/stubs.go	/^func procyield(cycles uint32)$/;"	f
prodNN	./cmd/compile/internal/big/nat_test.go	/^var prodNN = []argNN{$/;"	v
prodNN	./math/big/nat_test.go	/^var prodNN = []argNN{$/;"	v
prodVW	./cmd/compile/internal/big/arith_test.go	/^var prodVW = []argVW{$/;"	v
prodVW	./math/big/arith_test.go	/^var prodVW = []argVW{$/;"	v
prodVWW	./cmd/compile/internal/big/arith_test.go	/^var prodVWW = []argVWW{$/;"	v
prodVWW	./math/big/arith_test.go	/^var prodVWW = []argVWW{$/;"	v
prodZZ	./cmd/compile/internal/big/int_test.go	/^var prodZZ = []argZZ{$/;"	v
prodZZ	./math/big/int_test.go	/^var prodZZ = []argZZ{$/;"	v
product	./go/types/hilbert_test.go	/^func (g *gen) product(n int) {$/;"	f
prof	./runtime/pprof/pprof_test.go	/^		var prof bytes.Buffer$/;"	v
prof	./runtime/pprof/pprof_test.go	/^	var prof bytes.Buffer$/;"	v
prof	./runtime/proc1.go	/^var prof struct {$/;"	v
profile	./cmd/cover/cover.go	/^var profile string \/\/ The profile to read; the value of -html or -func$/;"	v
profileDecoder	./cmd/pprof/internal/profile/encode.go	/^var profileDecoder = []decoder{$/;"	v
profileFunctionNames	./cmd/pprof/internal/driver/interactive.go	/^var profileFunctionNames = []string{}$/;"	v
profileWriter	./runtime/pprof/pprof.go	/^func profileWriter(w io.Writer) {$/;"	f
profilealloc	./runtime/malloc.go	/^func profilealloc(mp *m, x unsafe.Pointer, size uintptr) {$/;"	f
profileloop	./runtime/os1_windows.go	/^func profileloop()$/;"	f
profileloop1	./runtime/os1_windows.go	/^func profileloop1(param uintptr) uint32 {$/;"	f
profilem	./runtime/os1_windows.go	/^func profilem(mp *m) {$/;"	f
profiles	./runtime/pprof/pprof.go	/^var profiles struct {$/;"	v
profiletimer	./runtime/os1_windows.go	/^var profiletimer uintptr$/;"	v
proflock	./runtime/mprof.go	/^var proflock mutex$/;"	v
prog	./cmd/go/go_test.go	/^	var prog string$/;"	v
prog	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^	var prog elf.Prog32$/;"	v
prog	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var prog elf.Prog32$/;"	v
prog	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var prog elf.Prog64$/;"	v
prog	./debug/plan9obj/plan9obj.go	/^type prog struct {$/;"	t
progMachine	./regexp/exec.go	/^func progMachine(p *syntax.Prog, op *onePassProg) *machine {$/;"	f
progToPointerMask	./runtime/mbitmap.go	/^func progToPointerMask(prog *byte, size uintptr) bitvector {$/;"	f
progbits	./cmd/internal/gcprog/gcprog.go	/^func progbits(p []byte) int64 {$/;"	f
progcarryflags	./cmd/compile/internal/amd64/prog.go	/^func progcarryflags(p *obj.Prog) uint32 {$/;"	f
progedit	./cmd/internal/obj/arm/obj5.go	/^func progedit(ctxt *obj.Link, p *obj.Prog) {$/;"	f
progedit	./cmd/internal/obj/arm64/obj7.go	/^func progedit(ctxt *obj.Link, p *obj.Prog) {$/;"	f
progedit	./cmd/internal/obj/ppc64/obj9.go	/^func progedit(ctxt *obj.Link, p *obj.Prog) {$/;"	f
progedit	./cmd/internal/obj/x86/obj6.go	/^func progedit(ctxt *obj.Link, p *obj.Prog) {$/;"	f
progedit_tlsfallback	./cmd/internal/obj/arm/obj5.go	/^var progedit_tlsfallback *obj.LSym$/;"	v
progeffects	./cmd/compile/internal/gc/plive.go	/^func progeffects(prog *obj.Prog, vars []*Node, uevar Bvec, varkill Bvec, avarinit Bvec) {$/;"	f
progflags	./cmd/compile/internal/amd64/prog.go	/^func progflags(p *obj.Prog) uint32 {$/;"	f
proginfo	./cmd/compile/internal/amd64/prog.go	/^func proginfo(p *obj.Prog) {$/;"	f
proginfo	./cmd/compile/internal/arm/prog.go	/^func proginfo(p *obj.Prog) {$/;"	f
proginfo	./cmd/compile/internal/arm64/prog.go	/^func proginfo(p *obj.Prog) {$/;"	f
proginfo	./cmd/compile/internal/ppc64/prog.go	/^func proginfo(p *obj.Prog) {$/;"	f
proginfo	./cmd/compile/internal/x86/prog.go	/^func proginfo(p *obj.Prog) {$/;"	f
program	./crypto/md5/gen.go	/^var program = `\/\/ Copyright 2013 The Go Authors. All rights reserved.$/;"	v
program	./go/types/hilbert_test.go	/^func program(n int, out string) []byte {$/;"	f
progtable	./cmd/compile/internal/amd64/prog.go	/^var progtable = [x86.ALAST]obj.ProgInfo{$/;"	v
progtable	./cmd/compile/internal/arm/prog.go	/^var progtable = [arm.ALAST]obj.ProgInfo{$/;"	v
progtable	./cmd/compile/internal/arm64/prog.go	/^var progtable = [arm64.ALAST]obj.ProgInfo{$/;"	v
progtable	./cmd/compile/internal/ppc64/prog.go	/^var progtable = [ppc64.ALAST]obj.ProgInfo{$/;"	v
progtable	./cmd/compile/internal/x86/prog.go	/^var progtable = [x86.ALAST]obj.ProgInfo{$/;"	v
prohibitionaryDialArgTests	./net/dial_test.go	/^var prohibitionaryDialArgTests = []struct {$/;"	v
prop	./cmd/compile/internal/gc/reg.go	/^func prop(f *Flow, ref Bits, cal Bits) {$/;"	f
properties	./unicode/maketables.go	/^	println("var properties = [MaxLatin1+1]uint8{")$/;"	v
properties	./unicode/tables.go	/^var properties = [MaxLatin1 + 1]uint8{$/;"	v
property	./unicode/maketables.go	/^		var property string$/;"	v
proplist	./unicode/maketables.go	/^var proplist = flag.String("props",$/;"	v
props	./unicode/maketables.go	/^var props = make(map[string][]Script) \/\/ a property looks like a script; can share the format$/;"	v
protocolString	./net/internal/socktest/switch_posix.go	/^func protocolString(proto int) string {$/;"	f
protocolString	./net/internal/socktest/switch_stub.go	/^func protocolString(proto int) string { return "<nil>" }$/;"	f
protocols	./net/lookup.go	/^var protocols = map[string]int{$/;"	v
provided	./encoding/gob/type.go	/^	\/\/ Store the name and type provided by the user....$/;"	t
provides	./expvar/expvar.go	/^\/\/ Package expvar provides a standardized interface to public variables, such$/;"	v
proxy	./net/http/proxy_test.go	/^		var proxy *url.URL$/;"	v
proxy	./net/http/transport.go	/^	var proxy string$/;"	v
proxyAuth	./net/http/transport.go	/^func (cm *connectMethod) proxyAuth() string {$/;"	f
proxyFromEnvTest	./net/http/transport_test.go	/^type proxyFromEnvTest struct {$/;"	t
proxyFromEnvTests	./net/http/transport_test.go	/^var proxyFromEnvTests = []proxyFromEnvTest{$/;"	v
proxyQueryTests	./net/http/httputil/reverseproxy_test.go	/^var proxyQueryTests = []struct {$/;"	v
prw	./syscall/fd_nacl.go	/^func (f *naclFile) prw(b []byte, offset int64, rw func([]byte) (int, error)) (int, error) {$/;"	f
ps	./os/os_test.go	/^	var ps *ProcessState$/;"	v
pseudo	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) pseudo(op int, word string, operands [][]lex.Token) {$/;"	f
pseudoUnix	./time/zoneinfo_windows.go	/^func pseudoUnix(year int, d *syscall.Systemtime) int64 {$/;"	f
pseudocall	./cmd/compile/internal/gc/go.y	/^pseudocall:$/;"	l
pstate	./cmd/yacc/yacc.go	/^var pstate = make([]int, NSTATES+2) \/\/ index into statemem to the descriptions of the states$/;"	v
pstate	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) pstate() uint64    { return c.regs().pstate }$/;"	f
pstatefield	./cmd/internal/obj/arm64/asm7.go	/^var pstatefield = []struct {$/;"	v
pstring	./syscall/dir_plan9.go	/^func pstring(b []byte, s string) []byte {$/;"	f
ptStrings	./debug/elf/elf.go	/^var ptStrings = []intName{$/;"	v
ptest	./cmd/go/test.go	/^	var ptest, pxtest, pmain *Package$/;"	v
pthread	./runtime/defs1_solaris_amd64.go	/^type pthread uint32$/;"	t
pthread_attr_destroy	./runtime/os3_solaris.go	/^func pthread_attr_destroy(attr *pthreadattr) int32 {$/;"	f
pthread_attr_getstack	./runtime/os3_solaris.go	/^func pthread_attr_getstack(attr *pthreadattr, addr unsafe.Pointer, size *uint64) int32 {$/;"	f
pthread_attr_init	./runtime/os3_solaris.go	/^func pthread_attr_init(attr *pthreadattr) int32 {$/;"	f
pthread_attr_setdetachstate	./runtime/os3_solaris.go	/^func pthread_attr_setdetachstate(attr *pthreadattr, state int32) int32 {$/;"	f
pthread_attr_setstack	./runtime/os3_solaris.go	/^func pthread_attr_setstack(attr *pthreadattr, addr uintptr, size uint64) int32 {$/;"	f
pthread_create	./runtime/cgo/gcc_openbsd_386.c	/^pthread_create(pthread_t *thread, const pthread_attr_t *attr,$/;"	f
pthread_create	./runtime/cgo/gcc_openbsd_amd64.c	/^pthread_create(pthread_t *thread, const pthread_attr_t *attr,$/;"	f
pthread_create	./runtime/os3_solaris.go	/^func pthread_create(thread *pthread, attr *pthreadattr, fn uintptr, arg unsafe.Pointer) int32 {$/;"	f
pthreadattr	./runtime/defs1_solaris_amd64.go	/^type pthreadattr struct {$/;"	t
ptr	./cmd/compile/internal/gc/cgen.go	/^		var ptr Node$/;"	v
ptr	./cmd/compile/internal/gc/subr.go	/^		var ptr int$/;"	v
ptr	./cmd/compile/internal/gc/swt.go	/^					var ptr int$/;"	v
ptr	./cmd/compile/internal/gc/typecheck.go	/^			var ptr int$/;"	v
ptr	./runtime/mcache.go	/^func (p gclinkptr) ptr() *gclink {$/;"	f
ptr	./runtime/mgcwork.go	/^func (wp wbufptr) ptr() *workbuf {$/;"	f
ptr	./runtime/runtime2.go	/^func (gp guintptr) ptr() *g   { return (*g)(unsafe.Pointer(gp)) }$/;"	f
ptr	./runtime/runtime2.go	/^func (mp muintptr) ptr() *m   { return (*m)(unsafe.Pointer(mp)) }$/;"	f
ptr	./runtime/runtime2.go	/^func (pp puintptr) ptr() *p   { return (*p)(unsafe.Pointer(pp)) }$/;"	f
ptr	./syscall/syscall_bsd.go	/^	var ptr unsafe.Pointer$/;"	v
ptr	./syscall/syscall_linux.go	/^	var ptr unsafe.Pointer$/;"	v
ptr	./syscall/syscall_solaris.go	/^	var ptr unsafe.Pointer$/;"	v
ptrEncoder	./encoding/json/encode.go	/^type ptrEncoder struct {$/;"	t
ptrMap	./reflect/type.go	/^var ptrMap struct {$/;"	v
ptrRecv	./go/types/methodset.go	/^func ptrRecv(f *Func) bool {$/;"	f
ptrSize	./runtime/cgo/signal_darwin_armx.go	/^	var ptrSize = unsafe.Sizeof(uintptr(0))$/;"	v
ptrSizeMap	./cmd/cgo/main.go	/^var ptrSizeMap = map[string]int64{$/;"	v
ptrTo	./reflect/type.go	/^func (t *rtype) ptrTo() *rtype {$/;"	f
ptrType	./reflect/type.go	/^type ptrType struct {$/;"	t
ptrace	./syscall/zsyscall_darwin_386.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_darwin_amd64.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_darwin_arm.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_darwin_arm64.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_linux_386.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_linux_amd64.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_linux_arm.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_linux_arm64.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_linux_ppc64.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptrace	./syscall/zsyscall_linux_ppc64le.go	/^func ptrace(request int, pid int, addr uintptr, data uintptr) (err error) {$/;"	f
ptracePeek	./syscall/syscall_linux.go	/^func ptracePeek(req int, pid int, addr uintptr, out []byte) (count int, err error) {$/;"	f
ptracePoke	./syscall/syscall_linux.go	/^func ptracePoke(pokeReq int, peekReq int, pid int, addr uintptr, data []byte) (count int, err error) {$/;"	f
ptrbit	./runtime/stack1.go	/^func ptrbit(bv *gobitvector, i uintptr) uint8 {$/;"	f
ptrdata	./reflect/type.go	/^	var ptrdata uintptr$/;"	v
ptregs	./runtime/defs_linux_ppc64.go	/^type ptregs struct {$/;"	t
ptregs	./runtime/defs_linux_ppc64le.go	/^type ptregs struct {$/;"	t
ptrmethod	./runtime/debug/stack_test.go	/^func (t *T) ptrmethod() []byte {$/;"	f
ptrnames	./runtime/stack1.go	/^var ptrnames = []string{$/;"	v
ptrsz	./debug/gosym/symtab.go	/^	var ptrsz int$/;"	v
ptrto1	./cmd/compile/internal/gc/subr.go	/^func ptrto1(t *Type) *Type {$/;"	f
ptrtype	./cmd/compile/internal/gc/go.y	/^ptrtype:$/;"	l
ptrtype	./runtime/type.go	/^type ptrtype struct {$/;"	t
ptxt	./cmd/compile/internal/gc/pgen.go	/^	var ptxt *obj.Prog$/;"	v
pub	./crypto/tls/handshake_server.go	/^		var pub crypto.PublicKey$/;"	v
pub	./crypto/tls/handshake_server.go	/^	var pub crypto.PublicKey \/\/ public key for client auth, if any$/;"	v
pub	./reflect/all_test.go	/^	var pub Public$/;"	v
pubType	./crypto/x509/x509.go	/^	var pubType PublicKeyAlgorithm$/;"	v
publicKey	./crypto/tls/generate_cert.go	/^func publicKey(priv interface{}) interface{} {$/;"	f
publicKeyAlgorithm	./crypto/x509/x509.go	/^	var publicKeyAlgorithm pkix.AlgorithmIdentifier$/;"	v
publicKeyBytes	./crypto/x509/x509.go	/^	var publicKeyBytes []byte$/;"	v
publicKeyInfo	./crypto/x509/x509.go	/^type publicKeyInfo struct {$/;"	t
publicationBarrier	./runtime/stubs.go	/^func publicationBarrier()$/;"	f
pubnameso	./cmd/link/internal/ld/dwarf.go	/^var pubnameso int64$/;"	v
pubnamessize	./cmd/link/internal/ld/dwarf.go	/^var pubnamessize int64$/;"	v
pubtypeso	./cmd/link/internal/ld/dwarf.go	/^var pubtypeso int64$/;"	v
pubtypessize	./cmd/link/internal/ld/dwarf.go	/^var pubtypessize int64$/;"	v
puintptr	./runtime/runtime2.go	/^type puintptr uintptr$/;"	t
punctuationTag	./encoding/json/tagkey_test.go	/^type punctuationTag struct {$/;"	t
punycodeTestCases	./net/http/cookiejar/punycode_test.go	/^var punycodeTestCases = [...]struct {$/;"	v
pure_go	./cmd/compile/internal/gc/go.go	/^var pure_go int$/;"	v
purgecachedstats	./runtime/mstats.go	/^func purgecachedstats(c *mcache) {$/;"	f
push	./cmd/compile/internal/gc/dcl.go	/^func push() *Sym {$/;"	f
push	./cmd/go/pkg.go	/^func (s *importStack) push(p string) {$/;"	f
push	./encoding/xml/marshal.go	/^func (s *parentStack) push(parents []string) error {$/;"	f
push	./encoding/xml/xml.go	/^func (d *Decoder) push(kind int) *stack {$/;"	f
push	./go/ast/commentmap.go	/^func (s *nodeStack) push(n Node) {$/;"	f
push	./regexp/backtrack.go	/^func (b *bitState) push(pc uint32, pos int, arg int) {$/;"	f
push	./regexp/syntax/parse.go	/^func (p *parser) push(re *Regexp) *Regexp {$/;"	f
push	./runtime/race/testdata/regression_test.go	/^func (s *stack) push(x int) {$/;"	f
push	./runtime/sigqueue_plan9.go	/^func (q *noteQueue) push(item *byte) bool {$/;"	f
push	./text/template/exec.go	/^func (s *state) push(name string, value reflect.Value) {$/;"	f
pushEOF	./encoding/xml/xml.go	/^func (d *Decoder) pushEOF() {$/;"	f
pushElement	./encoding/xml/xml.go	/^func (d *Decoder) pushElement(name Name) {$/;"	f
pushNs	./encoding/xml/xml.go	/^func (d *Decoder) pushNs(local string, url string, ok bool) {$/;"	f
pushParseState	./encoding/json/scanner.go	/^func (s *scanner) pushParseState(p int) {$/;"	f
pushScope	./cmd/api/goapi.go	/^func (w *Walker) pushScope(name string) (popFunc func()) {$/;"	f
pushSection	./debug/macho/file.go	/^func (f *File) pushSection(sh *Section, r io.ReaderAt) {$/;"	f
pushWriter	./encoding/gob/encoder.go	/^func (enc *Encoder) pushWriter(w io.Writer) {$/;"	f
pushback	./cmd/compile/internal/amd64/peep.go	/^func pushback(r0 *gc.Flow) {$/;"	f
pushdcl	./cmd/compile/internal/gc/dcl.go	/^func pushdcl(s *Sym) *Sym {$/;"	f
pushedio	./cmd/compile/internal/gc/go.go	/^var pushedio Io$/;"	v
pushpop	./cmd/internal/obj/x86/obj6.go	/^func pushpop(a int) bool {$/;"	f
pushtype	./cmd/compile/internal/gc/typecheck.go	/^func pushtype(n *Node, t *Type) {$/;"	f
put	./regexp/regexp.go	/^func (re *Regexp) put(z *machine) {$/;"	f
put	./runtime/mgcwork.go	/^func (ww *gcWork) put(obj uintptr) {$/;"	f
put	./runtime/trace.go	/^func (tab *traceStackTable) put(pcs []uintptr) uint32 {$/;"	f
put2	./compress/gzip/gzip.go	/^func put2(p []byte, v uint16) {$/;"	f
put4	./cmd/internal/obj/x86/asm6.go	/^func put4(ctxt *obj.Link, v int32) {$/;"	f
put4	./compress/gzip/gzip.go	/^func put4(p []byte, v uint32) {$/;"	f
put8	./cmd/internal/obj/x86/asm6.go	/^func put8(ctxt *obj.Link, v int64) {$/;"	f
putBuffer	./mime/encodedword.go	/^func putBuffer(buf *bytes.Buffer) {$/;"	f
putBufioReader	./net/http/server.go	/^func putBufioReader(br *bufio.Reader) {$/;"	f
putBufioWriter	./net/http/server.go	/^func putBufioWriter(bw *bufio.Writer) {$/;"	f
putConn	./database/sql/sql.go	/^func (db *DB) putConn(dc *driverConn, err error) {$/;"	f
putConn	./net/mockserver_test.go	/^func (dss *dualStackServer) putConn(c Conn) error {$/;"	f
putConnDBLocked	./database/sql/sql.go	/^func (db *DB) putConnDBLocked(dc *driverConn, err error) bool {$/;"	f
putConnHook	./database/sql/sql.go	/^var putConnHook func(*DB, *driverConn)$/;"	v
putIdleConn	./net/http/transport.go	/^func (t *Transport) putIdleConn(pconn *persistConn) bool {$/;"	f
putTextprotoReader	./net/http/request.go	/^func putTextprotoReader(r *textproto.Reader) {$/;"	f
putUint64	./crypto/cipher/gcm.go	/^func putUint64(out []byte, v uint64) {$/;"	f
putattr	./cmd/link/internal/ld/dwarf.go	/^func putattr(abbrev int, form int, cls int, value int64, data interface{}) {$/;"	f
putattrs	./cmd/link/internal/ld/dwarf.go	/^func putattrs(abbrev int, attr *DWAttr) {$/;"	f
putdie	./cmd/link/internal/ld/dwarf.go	/^func putdie(die *DWDie) {$/;"	f
putdies	./cmd/link/internal/ld/dwarf.go	/^func putdies(die *DWDie) {$/;"	f
putelfsectionsym	./cmd/link/internal/ld/symtab.go	/^func putelfsectionsym(s *LSym, shndx int) {$/;"	f
putelfstr	./cmd/link/internal/ld/symtab.go	/^func putelfstr(s string) int {$/;"	f
putelfsym	./cmd/link/internal/ld/symtab.go	/^func putelfsym(x *LSym, s string, t int, addr int64, size int64, ver int, go_ *LSym) {$/;"	f
putelfsyment	./cmd/link/internal/ld/symtab.go	/^func putelfsyment(off int, addr int64, size int64, info int, shndx int, other int) {$/;"	f
putelfsymshndx	./cmd/link/internal/ld/symtab.go	/^func putelfsymshndx(sympos int64, shndx int) {$/;"	f
putempty	./runtime/mgcwork.go	/^func putempty(b *workbuf, entry int) {$/;"	f
putfull	./runtime/mgcwork.go	/^func putfull(b *workbuf, entry int) {$/;"	f
putitem	./cmd/yacc/yacc.go	/^func putitem(p Pitem, set Lkset) {$/;"	f
putpartial	./runtime/mgcwork.go	/^func putpartial(b *workbuf, entry int) {$/;"	f
putpccfadelta	./cmd/link/internal/ld/dwarf.go	/^func putpccfadelta(deltapc int64, cfa int64) {$/;"	f
putpclcdelta	./cmd/link/internal/ld/dwarf.go	/^func putpclcdelta(delta_pc int64, delta_lc int64) {$/;"	f
putplan9sym	./cmd/link/internal/ld/symtab.go	/^func putplan9sym(x *LSym, s string, t int, addr int64, size int64, ver int, go_ *LSym) {$/;"	f
putrune	./cmd/yacc/yacc.go	/^func putrune(f *bufio.Writer, c int) {$/;"	f
pwd	./cmd/doc/main.go	/^func pwd() string {$/;"	f
pwd	./cmd/go/go_test.go	/^func (tg *testgoData) pwd() string {$/;"	f
pwd	./os/user/lookup_unix.go	/^	var pwd C.struct_passwd$/;"	v
pwrite	./os/file_plan9.go	/^func (f *File) pwrite(b []byte, off int64) (n int, err error) {$/;"	f
pwrite	./os/file_unix.go	/^func (f *File) pwrite(b []byte, off int64) (n int, err error) {$/;"	f
pwrite	./os/file_windows.go	/^func (f *File) pwrite(b []byte, off int64) (n int, err error) {$/;"	f
pwrite	./runtime/os_plan9.go	/^func pwrite(fd int32, buf unsafe.Pointer, nbytes int32, offset int64) int32$/;"	f
pwrite	./syscall/fd_nacl.go	/^func (*defaultFileImpl) pwrite([]byte, int64) (int, error) { return 0, ENOSYS }$/;"	f
pwrite	./syscall/fd_nacl.go	/^func (f *naclFile) pwrite(b []byte, offset int64) (int, error) {$/;"	f
pwrite	./syscall/fs_nacl.go	/^func (f *fsysFile) pwrite(b []byte, offset int64) (int, error) {$/;"	f
pwrite	./syscall/fs_nacl.go	/^func (f *nullFile) pwrite(b []byte, offset int64) (int, error) { return len(b), nil }$/;"	f
pwrite	./syscall/fs_nacl.go	/^func (f *zeroFile) pwrite(b []byte, offset int64) (int, error) { return len(b), nil }$/;"	f
pwrite	./syscall/fs_nacl.go	/^func (f randomFile) pwrite(b []byte, offset int64) (int, error) {$/;"	f
pwriteLocked	./syscall/fs_nacl.go	/^func (f *fsysFile) pwriteLocked(b []byte, offset int64) (int, error) {$/;"	f
px	./crypto/elliptic/p256.go	/^	var px, py, pz, tx, ty, tz [p256Limbs]uint32$/;"	v
px	./crypto/elliptic/p256.go	/^	var px, py, tx, ty, tz [p256Limbs]uint32$/;"	v
px	./crypto/elliptic/p256.go	/^	var px, py, x1, y1, z1 [p256Limbs]uint32$/;"	v
pzero	./math/j0.go	/^func pzero(x float64) float64 {$/;"	f
q0R2	./math/j0.go	/^var q0R2 = [6]float64{$/;"	v
q0R3	./math/j0.go	/^var q0R3 = [6]float64{$/;"	v
q0R5	./math/j0.go	/^var q0R5 = [6]float64{$/;"	v
q0R8	./math/j0.go	/^var q0R8 = [6]float64{$/;"	v
q0S2	./math/j0.go	/^var q0S2 = [6]float64{$/;"	v
q0S3	./math/j0.go	/^var q0S3 = [6]float64{$/;"	v
q0S5	./math/j0.go	/^var q0S5 = [6]float64{$/;"	v
q0S8	./math/j0.go	/^var q0S8 = [6]float64{$/;"	v
q1	./cmd/internal/obj/arm/obj5.go	/^	var q1 *obj.Prog$/;"	v
q1	./cmd/internal/obj/arm64/obj7.go	/^	var q1 *obj.Prog$/;"	v
q1	./cmd/internal/obj/ppc64/obj9.go	/^	var q1 *obj.Prog$/;"	v
q1	./cmd/internal/obj/x86/obj6.go	/^	var q1 *obj.Prog$/;"	v
q1R2	./math/j1.go	/^var q1R2 = [6]float64{$/;"	v
q1R3	./math/j1.go	/^var q1R3 = [6]float64{$/;"	v
q1R5	./math/j1.go	/^var q1R5 = [6]float64{$/;"	v
q1R8	./math/j1.go	/^var q1R8 = [6]float64{$/;"	v
q1S2	./math/j1.go	/^var q1S2 = [6]float64{$/;"	v
q1S3	./math/j1.go	/^var q1S3 = [6]float64{$/;"	v
q1S5	./math/j1.go	/^var q1S5 = [6]float64{$/;"	v
q1S8	./math/j1.go	/^var q1S8 = [6]float64{$/;"	v
q2	./cmd/internal/obj/arm/obj5.go	/^	var q2 *obj.Prog$/;"	v
q2	./cmd/internal/obj/arm64/obj7.go	/^	var q2 *obj.Prog$/;"	v
qDecode	./mime/encodedword.go	/^func qDecode(s string) ([]byte, error) {$/;"	f
qhi	./runtime/vlrt.go	/^	var qhi uint32$/;"	v
qone	./math/j1.go	/^func qone(x float64) float64 {$/;"	f
qpos	./go/ast/commentmap.go	/^		var qpos token.Position$/;"	v
qq	./runtime/race.go	/^var qq = [...]byte{'?', '?', 0}$/;"	v
qsufsort	./index/suffixarray/qsufsort.go	/^func qsufsort(data []byte) []int {$/;"	f
qtype	./net/dnsclient.go	/^				\/\/ of type qtype, but we don't$/;"	t
qualifier	./go/types/errors.go	/^func (check *Checker) qualifier(pkg *Package) string {$/;"	f
quantErrorCurr	./image/draw/draw.go	/^	var quantErrorCurr, quantErrorNext [][4]int32$/;"	v
quantIndex	./image/jpeg/writer.go	/^type quantIndex int$/;"	t
query	./database/sql/sql.go	/^func (db *DB) query(query string, args []interface{}, strategy connReuseStrategy) (*Rows, error) {$/;"	f
query	./net/http/cookiejar/jar_test.go	/^type query struct {$/;"	t
query	./net/http/server.go	/^			var query string$/;"	v
query	./net/lookup_plan9.go	/^func query(filename, query string, bufSize int) (res []string, err error) {$/;"	f
queryCS	./net/lookup_plan9.go	/^func queryCS(net, host, service string) (res []string, err error) {$/;"	f
queryCS1	./net/lookup_plan9.go	/^func queryCS1(net string, ip IP, port int) (clone, dest string, err error) {$/;"	f
queryConn	./database/sql/sql.go	/^func (db *DB) queryConn(dc *driverConn, releaseConn func(error), query string, args []interface{}) (*Rows, error) {$/;"	f
queryDNS	./net/lookup_plan9.go	/^func queryDNS(addr string, typ string) (res []string, err error) {$/;"	f
quest	./regexp/syntax/compile.go	/^func (c *compiler) quest(f1 frag, nongreedy bool) frag {$/;"	f
queue	./regexp/exec.go	/^type queue struct {$/;"	t
queue	./runtime/sema.go	/^func (root *semaRoot) queue(addr *uint32, s *sudog) {$/;"	f
queue	./syscall/net_nacl.go	/^type queue struct {$/;"	t
queueOnePass	./regexp/onepass.go	/^type queueOnePass struct {$/;"	t
queuefinalizer	./runtime/mfinal.go	/^func queuefinalizer(p unsafe.Pointer, fn *funcval, nret uintptr, fint *_type, ot *ptrtype) {$/;"	f
queuemethod	./cmd/compile/internal/gc/typecheck.go	/^func queuemethod(n *Node) {$/;"	f
quickSort	./sort/sort.go	/^func quickSort(data Interface, a, b, maxDepth int) {$/;"	f
quoTests	./cmd/compile/internal/big/int_test.go	/^var quoTests = []struct {$/;"	v
quoTests	./math/big/int_test.go	/^var quoTests = []struct {$/;"	v
quotToFloat32	./cmd/compile/internal/big/rat.go	/^func quotToFloat32(a, b nat) (f float32, exact bool) {$/;"	f
quotToFloat32	./math/big/rat.go	/^func quotToFloat32(a, b nat) (f float32, exact bool) {$/;"	f
quotToFloat64	./cmd/compile/internal/big/rat.go	/^func quotToFloat64(a, b nat) (f float64, exact bool) {$/;"	f
quotToFloat64	./math/big/rat.go	/^func quotToFloat64(a, b nat) (f float64, exact bool) {$/;"	f
quote	./regexp/regexp.go	/^func quote(s string) string {$/;"	f
quote	./regexp/testdata/testregex.c	/^quote(char* s, int len, unsigned long test)$/;"	f	file:
quote	./time/format.go	/^func quote(s string) string {$/;"	f
quoteChar	./encoding/json/scanner.go	/^func quoteChar(c int) string {$/;"	f
quoteEscaper	./mime/multipart/writer.go	/^var quoteEscaper = strings.NewReplacer("\\\\", "\\\\\\\\", `"`, "\\\\\\"")$/;"	v
quoteRuneTest	./strconv/quote_test.go	/^type quoteRuneTest struct {$/;"	t
quoteString	./net/mail/message.go	/^func quoteString(s string) string {$/;"	f
quoteTest	./strconv/quote_test.go	/^type quoteTest struct {$/;"	t
quoteWith	./strconv/quote.go	/^func quoteWith(s string, quote byte, ASCIIonly bool) string {$/;"	f
quoted	./fmt/format.go	/^	var quoted []byte$/;"	v
quoted	./fmt/format.go	/^	var quoted string$/;"	v
quotedString	./fmt/scan.go	/^func (s *ss) quotedString() string {$/;"	f
quoterunetests	./strconv/quote_test.go	/^var quoterunetests = []quoteRuneTest{$/;"	v
quotetests	./strconv/quote_test.go	/^var quotetests = []quoteTest{$/;"	v
qzero	./math/j0.go	/^func qzero(x float64) float64 {$/;"	f
r0	./cmd/compile/internal/arm/cgen.go	/^		var r0 gc.Node$/;"	v
r0	./cmd/compile/internal/arm/ggen.go	/^	var r0 gc.Node$/;"	v
r0	./cmd/compile/internal/arm64/ggen.go	/^	var r0 gc.Node$/;"	v
r0	./cmd/compile/internal/ppc64/ggen.go	/^	var r0 gc.Node$/;"	v
r0	./container/ring/ring_test.go	/^	var r0 *Ring$/;"	v
r0	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r0() uint32      { return c.regs().r[0] }$/;"	f
r0	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r0() uint64    { return c.regs().x[0] }$/;"	f
r0	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r0() uint32      { return c.regs().__gregs[0] }$/;"	f
r0	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r0() uint32        { return c.regs().r0 }$/;"	f
r0	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r0() uint64        { return c.regs().regs[0] }$/;"	f
r0	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r0() uint64    { return c.regs().gpr[0] }$/;"	f
r0	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r0() uint32      { return c.regs().r0 }$/;"	f
r0	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r0() uint32       { return c.regs().__gregs[_REG_R0] }$/;"	f
r0	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r0() uint32      { return c.regs().sc_r0 }$/;"	f
r0	./syscall/syscall_plan9.go	/^	var r0 uintptr$/;"	v
r1	./cmd/compile/internal/amd64/gsubr.go	/^		var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/amd64/gsubr.go	/^	var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/amd64/gsubr.go	/^	var r1, r2, g1, g2 gc.Node$/;"	v
r1	./cmd/compile/internal/amd64/peep.go	/^		var r1 *gc.Flow$/;"	v
r1	./cmd/compile/internal/amd64/peep.go	/^	var r1 *gc.Flow$/;"	v
r1	./cmd/compile/internal/arm/cgen.go	/^		var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm/cgen64.go	/^	var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm/ggen.go	/^	var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm/ggen.go	/^	var r1, r2, g1, g2 gc.Node$/;"	v
r1	./cmd/compile/internal/arm/gsubr.go	/^			var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm/gsubr.go	/^		var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm/gsubr.go	/^	var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm/peep.go	/^	var r1 *gc.Flow$/;"	v
r1	./cmd/compile/internal/arm64/gsubr.go	/^			var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm64/gsubr.go	/^	var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/arm64/gsubr.go	/^	var r1, r2, g1, g2 gc.Node$/;"	v
r1	./cmd/compile/internal/arm64/peep.go	/^	var r1 *gc.Flow$/;"	v
r1	./cmd/compile/internal/gc/cgen.go	/^		var r1 Node$/;"	v
r1	./cmd/compile/internal/gc/gen.go	/^	var r1, r2 Node$/;"	v
r1	./cmd/compile/internal/gc/popt.go	/^	var r1 *Flow$/;"	v
r1	./cmd/compile/internal/gc/reg.go	/^	var r1 *Flow$/;"	v
r1	./cmd/compile/internal/gc/reg.go	/^	var r1 *Reg$/;"	v
r1	./cmd/compile/internal/gc/unsafe.go	/^		var r1 *Node$/;"	v
r1	./cmd/compile/internal/ppc64/gsubr.go	/^			var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/ppc64/gsubr.go	/^		var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/ppc64/gsubr.go	/^	var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/ppc64/gsubr.go	/^	var r1, r2, g1, g2 gc.Node$/;"	v
r1	./cmd/compile/internal/ppc64/peep.go	/^	var r1 *gc.Flow$/;"	v
r1	./cmd/compile/internal/x86/gsubr.go	/^			var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/x86/gsubr.go	/^		var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/x86/gsubr.go	/^	var r1 gc.Node$/;"	v
r1	./cmd/compile/internal/x86/gsubr.go	/^	var r1, r2, g1, g2 gc.Node$/;"	v
r1	./cmd/compile/internal/x86/peep.go	/^		var r1 *gc.Flow$/;"	v
r1	./cmd/compile/internal/x86/peep.go	/^	var r1 *gc.Flow$/;"	v
r1	./fmt/scan_test.go	/^var r1, r2, r3 rune$/;"	v
r1	./regexp/syntax/prog_test.go	/^		var r1 rune = -1$/;"	v
r1	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r1() uint32      { return c.regs().r[1] }$/;"	f
r1	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r1() uint64    { return c.regs().x[1] }$/;"	f
r1	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r1() uint32      { return c.regs().__gregs[1] }$/;"	f
r1	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r1() uint32        { return c.regs().r1 }$/;"	f
r1	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r1() uint64        { return c.regs().regs[1] }$/;"	f
r1	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r1() uint64    { return c.regs().gpr[1] }$/;"	f
r1	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r1() uint32      { return c.regs().r1 }$/;"	f
r1	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r1() uint32       { return c.regs().__gregs[_REG_R1] }$/;"	f
r1	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r1() uint32      { return c.regs().sc_r1 }$/;"	f
r10	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r10() uint64     { return c.regs().r10 }$/;"	f
r10	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r10() uint32     { return c.regs().r[10] }$/;"	f
r10	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r10() uint64   { return c.regs().x[10] }$/;"	f
r10	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r10() uint64     { return c.regs().mc_r10 }$/;"	f
r10	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r10() uint64     { return c.regs().mc_r10 }$/;"	f
r10	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r10() uint32     { return c.regs().__gregs[10] }$/;"	f
r10	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r10() uint64     { return c.regs().r10 }$/;"	f
r10	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r10() uint32       { return c.regs().r10 }$/;"	f
r10	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r10() uint64       { return c.regs().regs[10] }$/;"	f
r10	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r10() uint64   { return c.regs().gpr[10] }$/;"	f
r10	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r10() uint64     { return c.regs().r10 }$/;"	f
r10	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r10() uint32     { return c.regs().r10 }$/;"	f
r10	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r10() uint64     { return c.regs().__gregs[_REG_R10] }$/;"	f
r10	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r10() uint32      { return c.regs().__gregs[_REG_R10] }$/;"	f
r10	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r10() uint64     { return c.regs().sc_r10 }$/;"	f
r10	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r10() uint32     { return c.regs().sc_r10 }$/;"	f
r10	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r10() uint64     { return uint64(c.regs().gregs[_REG_R10]) }$/;"	f
r11	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r11() uint64     { return c.regs().r11 }$/;"	f
r11	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r11() uint64   { return c.regs().x[11] }$/;"	f
r11	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r11() uint64     { return c.regs().mc_r11 }$/;"	f
r11	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r11() uint64     { return c.regs().mc_r11 }$/;"	f
r11	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r11() uint64     { return c.regs().r11 }$/;"	f
r11	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r11() uint64       { return c.regs().regs[11] }$/;"	f
r11	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r11() uint64   { return c.regs().gpr[11] }$/;"	f
r11	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r11() uint64     { return c.regs().r11 }$/;"	f
r11	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r11() uint64     { return c.regs().__gregs[_REG_R11] }$/;"	f
r11	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r11() uint64     { return c.regs().sc_r11 }$/;"	f
r11	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r11() uint64     { return uint64(c.regs().gregs[_REG_R11]) }$/;"	f
r12	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r12() uint64     { return c.regs().r12 }$/;"	f
r12	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r12() uint64   { return c.regs().x[12] }$/;"	f
r12	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r12() uint64     { return c.regs().mc_r12 }$/;"	f
r12	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r12() uint64     { return c.regs().mc_r12 }$/;"	f
r12	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r12() uint64     { return c.regs().r12 }$/;"	f
r12	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r12() uint64       { return c.regs().regs[12] }$/;"	f
r12	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r12() uint64   { return c.regs().gpr[12] }$/;"	f
r12	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r12() uint64     { return c.regs().r12 }$/;"	f
r12	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r12() uint64     { return c.regs().__gregs[_REG_R12] }$/;"	f
r12	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r12() uint64     { return c.regs().sc_r12 }$/;"	f
r12	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r12() uint64     { return uint64(c.regs().gregs[_REG_R12]) }$/;"	f
r13	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r13() uint64     { return c.regs().r13 }$/;"	f
r13	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r13() uint64   { return c.regs().x[13] }$/;"	f
r13	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r13() uint64     { return c.regs().mc_r13 }$/;"	f
r13	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r13() uint64     { return c.regs().mc_r13 }$/;"	f
r13	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r13() uint64     { return c.regs().r13 }$/;"	f
r13	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r13() uint64       { return c.regs().regs[13] }$/;"	f
r13	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r13() uint64   { return c.regs().gpr[13] }$/;"	f
r13	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r13() uint64     { return c.regs().r13 }$/;"	f
r13	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r13() uint64     { return c.regs().__gregs[_REG_R13] }$/;"	f
r13	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r13() uint64     { return c.regs().sc_r13 }$/;"	f
r13	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r13() uint64     { return uint64(c.regs().gregs[_REG_R13]) }$/;"	f
r14	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r14() uint64     { return c.regs().r14 }$/;"	f
r14	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r14() uint64   { return c.regs().x[14] }$/;"	f
r14	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r14() uint64     { return c.regs().mc_r14 }$/;"	f
r14	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r14() uint64     { return c.regs().mc_r14 }$/;"	f
r14	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r14() uint64     { return c.regs().r14 }$/;"	f
r14	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r14() uint64       { return c.regs().regs[14] }$/;"	f
r14	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r14() uint64   { return c.regs().gpr[14] }$/;"	f
r14	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r14() uint64     { return c.regs().r14 }$/;"	f
r14	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r14() uint64     { return c.regs().__gregs[_REG_R14] }$/;"	f
r14	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r14() uint64     { return c.regs().sc_r14 }$/;"	f
r14	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r14() uint64     { return uint64(c.regs().gregs[_REG_R14]) }$/;"	f
r15	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r15() uint64     { return c.regs().r15 }$/;"	f
r15	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r15() uint64   { return c.regs().x[15] }$/;"	f
r15	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r15() uint64     { return c.regs().mc_r15 }$/;"	f
r15	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r15() uint64     { return c.regs().mc_r15 }$/;"	f
r15	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r15() uint64     { return c.regs().r15 }$/;"	f
r15	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r15() uint64       { return c.regs().regs[15] }$/;"	f
r15	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r15() uint64   { return c.regs().gpr[15] }$/;"	f
r15	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r15() uint64     { return c.regs().r15 }$/;"	f
r15	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r15() uint64     { return c.regs().__gregs[_REG_R15] }$/;"	f
r15	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r15() uint64     { return c.regs().sc_r15 }$/;"	f
r15	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r15() uint64     { return uint64(c.regs().gregs[_REG_R15]) }$/;"	f
r16	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r16() uint64   { return c.regs().x[16] }$/;"	f
r16	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r16() uint64       { return c.regs().regs[16] }$/;"	f
r16	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r16() uint64   { return c.regs().gpr[16] }$/;"	f
r16	./unicode/letter_test.go	/^	var r16 []Range16$/;"	v
r17	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r17() uint64   { return c.regs().x[17] }$/;"	f
r17	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r17() uint64       { return c.regs().regs[17] }$/;"	f
r17	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r17() uint64   { return c.regs().gpr[17] }$/;"	f
r18	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r18() uint64   { return c.regs().x[18] }$/;"	f
r18	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r18() uint64       { return c.regs().regs[18] }$/;"	f
r18	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r18() uint64   { return c.regs().gpr[18] }$/;"	f
r19	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r19() uint64   { return c.regs().x[19] }$/;"	f
r19	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r19() uint64       { return c.regs().regs[19] }$/;"	f
r19	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r19() uint64   { return c.regs().gpr[19] }$/;"	f
r1b	./container/ring/ring_test.go	/^	var r1b Ring$/;"	v
r2	./cmd/compile/internal/amd64/gsubr.go	/^		var r2 gc.Node$/;"	v
r2	./cmd/compile/internal/arm/cgen.go	/^		var r2 gc.Node$/;"	v
r2	./cmd/compile/internal/arm/cgen64.go	/^	var r2 gc.Node$/;"	v
r2	./cmd/compile/internal/arm/gsubr.go	/^		var r2 gc.Node$/;"	v
r2	./cmd/compile/internal/big/nat.go	/^		var r2 Word$/;"	v
r2	./cmd/compile/internal/gc/cgen.go	/^	var r2 Node$/;"	v
r2	./cmd/compile/internal/ppc64/gsubr.go	/^	var r2 gc.Node$/;"	v
r2	./cmd/compile/internal/x86/gsubr.go	/^			var r2 gc.Node$/;"	v
r2	./cmd/compile/internal/x86/gsubr.go	/^		var r2 gc.Node$/;"	v
r2	./math/big/nat.go	/^		var r2 Word$/;"	v
r2	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r2() uint32      { return c.regs().r[2] }$/;"	f
r2	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r2() uint64    { return c.regs().x[2] }$/;"	f
r2	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r2() uint32      { return c.regs().__gregs[2] }$/;"	f
r2	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r2() uint32        { return c.regs().r2 }$/;"	f
r2	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r2() uint64        { return c.regs().regs[2] }$/;"	f
r2	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r2() uint64    { return c.regs().gpr[2] }$/;"	f
r2	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r2() uint32      { return c.regs().r2 }$/;"	f
r2	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r2() uint32       { return c.regs().__gregs[_REG_R2] }$/;"	f
r2	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r2() uint32      { return c.regs().sc_r2 }$/;"	f
r20	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r20() uint64   { return c.regs().x[20] }$/;"	f
r20	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r20() uint64       { return c.regs().regs[20] }$/;"	f
r20	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r20() uint64   { return c.regs().gpr[20] }$/;"	f
r21	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r21() uint64   { return c.regs().x[21] }$/;"	f
r21	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r21() uint64       { return c.regs().regs[21] }$/;"	f
r21	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r21() uint64   { return c.regs().gpr[21] }$/;"	f
r22	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r22() uint64   { return c.regs().x[22] }$/;"	f
r22	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r22() uint64       { return c.regs().regs[22] }$/;"	f
r22	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r22() uint64   { return c.regs().gpr[22] }$/;"	f
r23	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r23() uint64   { return c.regs().x[23] }$/;"	f
r23	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r23() uint64       { return c.regs().regs[23] }$/;"	f
r23	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r23() uint64   { return c.regs().gpr[23] }$/;"	f
r24	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r24() uint64   { return c.regs().x[24] }$/;"	f
r24	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r24() uint64       { return c.regs().regs[24] }$/;"	f
r24	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r24() uint64   { return c.regs().gpr[24] }$/;"	f
r25	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r25() uint64   { return c.regs().x[25] }$/;"	f
r25	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r25() uint64       { return c.regs().regs[25] }$/;"	f
r25	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r25() uint64   { return c.regs().gpr[25] }$/;"	f
r26	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r26() uint64   { return c.regs().x[26] }$/;"	f
r26	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r26() uint64       { return c.regs().regs[26] }$/;"	f
r26	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r26() uint64   { return c.regs().gpr[26] }$/;"	f
r27	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r27() uint64   { return c.regs().x[27] }$/;"	f
r27	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r27() uint64       { return c.regs().regs[27] }$/;"	f
r27	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r27() uint64   { return c.regs().gpr[27] }$/;"	f
r28	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r28() uint64   { return c.regs().x[28] }$/;"	f
r28	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r28() uint64       { return c.regs().regs[28] }$/;"	f
r28	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r28() uint64   { return c.regs().gpr[28] }$/;"	f
r29	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r29() uint64   { return c.regs().fp }$/;"	f
r29	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r29() uint64       { return c.regs().regs[29] }$/;"	f
r29	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r29() uint64   { return c.regs().gpr[29] }$/;"	f
r3	./cmd/compile/internal/amd64/gsubr.go	/^		var r3 gc.Node$/;"	v
r3	./cmd/compile/internal/arm/peep.go	/^						var r3 *gc.Flow$/;"	v
r3	./cmd/compile/internal/ppc64/gsubr.go	/^		var r3 gc.Node$/;"	v
r3	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r3() uint32      { return c.regs().r[3] }$/;"	f
r3	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r3() uint64    { return c.regs().x[3] }$/;"	f
r3	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r3() uint32      { return c.regs().__gregs[3] }$/;"	f
r3	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r3() uint32        { return c.regs().r3 }$/;"	f
r3	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r3() uint64        { return c.regs().regs[3] }$/;"	f
r3	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r3() uint64    { return c.regs().gpr[3] }$/;"	f
r3	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r3() uint32      { return c.regs().r3 }$/;"	f
r3	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r3() uint32       { return c.regs().__gregs[_REG_R3] }$/;"	f
r3	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r3() uint32      { return c.regs().sc_r3 }$/;"	f
r30	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r30() uint64   { return c.regs().gpr[30] }$/;"	f
r31	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r31() uint64   { return c.regs().gpr[31] }$/;"	f
r386Strings	./debug/elf/elf.go	/^var r386Strings = []intName{$/;"	v
r4	./cmd/compile/internal/amd64/gsubr.go	/^		var r4 gc.Node$/;"	v
r4	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r4() uint32      { return c.regs().r[4] }$/;"	f
r4	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r4() uint64    { return c.regs().x[4] }$/;"	f
r4	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r4() uint32      { return c.regs().__gregs[4] }$/;"	f
r4	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r4() uint32        { return c.regs().r4 }$/;"	f
r4	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r4() uint64        { return c.regs().regs[4] }$/;"	f
r4	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r4() uint64    { return c.regs().gpr[4] }$/;"	f
r4	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r4() uint32      { return c.regs().r4 }$/;"	f
r4	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r4() uint32       { return c.regs().__gregs[_REG_R4] }$/;"	f
r4	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r4() uint32      { return c.regs().sc_r4 }$/;"	f
r5	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r5() uint32      { return c.regs().r[5] }$/;"	f
r5	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r5() uint64    { return c.regs().x[5] }$/;"	f
r5	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r5() uint32      { return c.regs().__gregs[5] }$/;"	f
r5	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r5() uint32        { return c.regs().r5 }$/;"	f
r5	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r5() uint64        { return c.regs().regs[5] }$/;"	f
r5	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r5() uint64    { return c.regs().gpr[5] }$/;"	f
r5	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r5() uint32      { return c.regs().r5 }$/;"	f
r5	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r5() uint32       { return c.regs().__gregs[_REG_R5] }$/;"	f
r5	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r5() uint32      { return c.regs().sc_r5 }$/;"	f
r6	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r6() uint32      { return c.regs().r[6] }$/;"	f
r6	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r6() uint64    { return c.regs().x[6] }$/;"	f
r6	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r6() uint32      { return c.regs().__gregs[6] }$/;"	f
r6	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r6() uint32        { return c.regs().r6 }$/;"	f
r6	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r6() uint64        { return c.regs().regs[6] }$/;"	f
r6	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r6() uint64    { return c.regs().gpr[6] }$/;"	f
r6	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r6() uint32      { return c.regs().r6 }$/;"	f
r6	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r6() uint32       { return c.regs().__gregs[_REG_R6] }$/;"	f
r6	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r6() uint32      { return c.regs().sc_r6 }$/;"	f
r7	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r7() uint32      { return c.regs().r[7] }$/;"	f
r7	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r7() uint64    { return c.regs().x[7] }$/;"	f
r7	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r7() uint32      { return c.regs().__gregs[7] }$/;"	f
r7	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r7() uint32        { return c.regs().r7 }$/;"	f
r7	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r7() uint64        { return c.regs().regs[7] }$/;"	f
r7	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r7() uint64    { return c.regs().gpr[7] }$/;"	f
r7	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r7() uint32      { return c.regs().r7 }$/;"	f
r7	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r7() uint32       { return c.regs().__gregs[_REG_R7] }$/;"	f
r7	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r7() uint32      { return c.regs().sc_r7 }$/;"	f
r8	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r8() uint64      { return c.regs().r8 }$/;"	f
r8	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r8() uint32      { return c.regs().r[8] }$/;"	f
r8	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r8() uint64    { return c.regs().x[8] }$/;"	f
r8	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r8() uint64      { return c.regs().mc_r8 }$/;"	f
r8	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r8() uint64      { return c.regs().mc_r8 }$/;"	f
r8	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r8() uint32      { return c.regs().__gregs[8] }$/;"	f
r8	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r8() uint64      { return c.regs().r8 }$/;"	f
r8	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r8() uint32        { return c.regs().r8 }$/;"	f
r8	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r8() uint64        { return c.regs().regs[8] }$/;"	f
r8	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r8() uint64    { return c.regs().gpr[8] }$/;"	f
r8	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r8() uint64      { return c.regs().r8 }$/;"	f
r8	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r8() uint32      { return c.regs().r8 }$/;"	f
r8	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r8() uint64      { return c.regs().__gregs[_REG_R8] }$/;"	f
r8	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r8() uint32       { return c.regs().__gregs[_REG_R8] }$/;"	f
r8	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r8() uint64      { return c.regs().sc_r8 }$/;"	f
r8	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r8() uint32      { return c.regs().sc_r8 }$/;"	f
r8	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r8() uint64      { return uint64(c.regs().gregs[_REG_R8]) }$/;"	f
r9	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) r9() uint64      { return c.regs().r9 }$/;"	f
r9	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) r9() uint32      { return c.regs().r[9] }$/;"	f
r9	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) r9() uint64    { return c.regs().x[9] }$/;"	f
r9	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) r9() uint64      { return c.regs().mc_r9 }$/;"	f
r9	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) r9() uint64      { return c.regs().mc_r9 }$/;"	f
r9	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) r9() uint32      { return c.regs().__gregs[9] }$/;"	f
r9	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) r9() uint64      { return c.regs().r9 }$/;"	f
r9	./runtime/signal_linux_arm.go	/^func (c *sigctxt) r9() uint32        { return c.regs().r9 }$/;"	f
r9	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) r9() uint64        { return c.regs().regs[9] }$/;"	f
r9	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) r9() uint64    { return c.regs().gpr[9] }$/;"	f
r9	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) r9() uint64      { return c.regs().r9 }$/;"	f
r9	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) r9() uint32      { return c.regs().r9 }$/;"	f
r9	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) r9() uint64      { return c.regs().__gregs[_REG_R8] }$/;"	f
r9	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) r9() uint32       { return c.regs().__gregs[_REG_R9] }$/;"	f
r9	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) r9() uint64      { return c.regs().sc_r9 }$/;"	f
r9	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) r9() uint32      { return c.regs().sc_r9 }$/;"	f
r9	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) r9() uint64      { return uint64(c.regs().gregs[_REG_R9]) }$/;"	f
rZipBytes	./archive/zip/reader_test.go	/^func rZipBytes() []byte {$/;"	f
ra	./cmd/compile/internal/gc/cplx.go	/^	var ra Node$/;"	v
ra	./cmd/internal/obj/arm64/asm7.go	/^		var ra int$/;"	v
raarch64Strings	./debug/elf/elf.go	/^var raarch64Strings = []intName{$/;"	v
raceAcquire	./net/race.go	/^func raceAcquire(addr unsafe.Pointer) {$/;"	f
raceAcquire	./net/race0.go	/^func raceAcquire(addr unsafe.Pointer) {$/;"	f
raceAcquire	./sync/race.go	/^func raceAcquire(addr unsafe.Pointer) {$/;"	f
raceAcquire	./sync/race0.go	/^func raceAcquire(addr unsafe.Pointer) {$/;"	f
raceAcquire	./syscall/race.go	/^func raceAcquire(addr unsafe.Pointer) {$/;"	f
raceAcquire	./syscall/race0.go	/^func raceAcquire(addr unsafe.Pointer) {$/;"	f
raceDetectorSupported	./cmd/dist/test.go	/^func (t *tester) raceDetectorSupported() bool {$/;"	f
raceDisable	./sync/race.go	/^func raceDisable() {$/;"	f
raceDisable	./sync/race0.go	/^func raceDisable() {$/;"	f
raceEnable	./sync/race.go	/^func raceEnable() {$/;"	f
raceEnable	./sync/race0.go	/^func raceEnable() {$/;"	f
raceEnabled	./net/http/header.go	/^var raceEnabled = false \/\/ set by race.go$/;"	v
raceExclude	./cmd/go/pkg.go	/^var raceExclude = map[string]bool{$/;"	v
raceRead	./sync/race.go	/^func raceRead(addr unsafe.Pointer) {$/;"	f
raceRead	./sync/race0.go	/^func raceRead(addr unsafe.Pointer) {$/;"	f
raceReadObjectPC	./runtime/race.go	/^func raceReadObjectPC(t *_type, addr unsafe.Pointer, callerpc, pc uintptr) {$/;"	f
raceReadObjectPC	./runtime/race0.go	/^func raceReadObjectPC(t *_type, addr unsafe.Pointer, callerpc, pc uintptr)  { throw("race") }$/;"	f
raceReadRange	./net/race.go	/^func raceReadRange(addr unsafe.Pointer, len int) {$/;"	f
raceReadRange	./net/race0.go	/^func raceReadRange(addr unsafe.Pointer, len int) {$/;"	f
raceReadRange	./syscall/race.go	/^func raceReadRange(addr unsafe.Pointer, len int) {$/;"	f
raceReadRange	./syscall/race0.go	/^func raceReadRange(addr unsafe.Pointer, len int) {$/;"	f
raceRelease	./sync/race.go	/^func raceRelease(addr unsafe.Pointer) {$/;"	f
raceRelease	./sync/race0.go	/^func raceRelease(addr unsafe.Pointer) {$/;"	f
raceReleaseMerge	./net/race.go	/^func raceReleaseMerge(addr unsafe.Pointer) {$/;"	f
raceReleaseMerge	./net/race0.go	/^func raceReleaseMerge(addr unsafe.Pointer) {$/;"	f
raceReleaseMerge	./sync/race.go	/^func raceReleaseMerge(addr unsafe.Pointer) {$/;"	f
raceReleaseMerge	./sync/race0.go	/^func raceReleaseMerge(addr unsafe.Pointer) {$/;"	f
raceReleaseMerge	./syscall/race.go	/^func raceReleaseMerge(addr unsafe.Pointer) {$/;"	f
raceReleaseMerge	./syscall/race0.go	/^func raceReleaseMerge(addr unsafe.Pointer) {$/;"	f
raceTest	./cmd/dist/test.go	/^func (t *tester) raceTest() error {$/;"	f
raceWrite	./sync/race.go	/^func raceWrite(addr unsafe.Pointer) {$/;"	f
raceWrite	./sync/race0.go	/^func raceWrite(addr unsafe.Pointer) {$/;"	f
raceWriteObjectPC	./runtime/race.go	/^func raceWriteObjectPC(t *_type, addr unsafe.Pointer, callerpc, pc uintptr) {$/;"	f
raceWriteObjectPC	./runtime/race0.go	/^func raceWriteObjectPC(t *_type, addr unsafe.Pointer, callerpc, pc uintptr) { throw("race") }$/;"	f
raceWriteRange	./net/race.go	/^func raceWriteRange(addr unsafe.Pointer, len int) {$/;"	f
raceWriteRange	./net/race0.go	/^func raceWriteRange(addr unsafe.Pointer, len int) {$/;"	f
raceWriteRange	./syscall/race.go	/^func raceWriteRange(addr unsafe.Pointer, len int) {$/;"	f
raceWriteRange	./syscall/race0.go	/^func raceWriteRange(addr unsafe.Pointer, len int) {$/;"	f
raceacquire	./runtime/race0.go	/^func raceacquire(addr unsafe.Pointer)                                       { throw("race") }$/;"	f
raceacquire	./runtime/race1.go	/^func raceacquire(addr unsafe.Pointer) {$/;"	f
raceacquireg	./runtime/race0.go	/^func raceacquireg(gp *g, addr unsafe.Pointer)                               { throw("race") }$/;"	f
raceacquireg	./runtime/race1.go	/^func raceacquireg(gp *g, addr unsafe.Pointer) {$/;"	f
racearenaend	./runtime/race1.go	/^var racearenaend uintptr$/;"	v
racearenastart	./runtime/race1.go	/^var racearenastart uintptr$/;"	v
racecall	./runtime/race1.go	/^func racecall(*byte, uintptr, uintptr, uintptr, uintptr)$/;"	f
racecallatomic_data	./runtime/race_amd64.s	/^racecallatomic_data:$/;"	l
racecallatomic_ignore	./runtime/race_amd64.s	/^racecallatomic_ignore:$/;"	l
racecallatomic_ok	./runtime/race_amd64.s	/^racecallatomic_ok:$/;"	l
racecgosync	./runtime/cgocall.go	/^var racecgosync uint64 \/\/ represents possible synchronization in C code$/;"	v
racectx	./runtime/race1.go	/^	var racectx uintptr$/;"	v
racedataend	./runtime/race1.go	/^var racedataend uintptr$/;"	v
racedatastart	./runtime/race1.go	/^var racedatastart uintptr$/;"	v
racefingo	./runtime/race0.go	/^func racefingo()                                                            { throw("race") }$/;"	f
racefingo	./runtime/race1.go	/^func racefingo() {$/;"	f
racefini	./runtime/race0.go	/^func racefini()                                                             { throw("race") }$/;"	f
racefini	./runtime/race1.go	/^func racefini() {$/;"	f
racefuncenter	./cmd/compile/internal/gc/builtin/runtime.go	/^func racefuncenter(uintptr)$/;"	f
racefuncenter	./runtime/race1.go	/^func racefuncenter(uintptr)$/;"	f
racefuncexit	./cmd/compile/internal/gc/builtin/runtime.go	/^func racefuncexit()$/;"	f
racefuncexit	./runtime/race1.go	/^func racefuncexit()$/;"	f
racegoend	./runtime/race0.go	/^func racegoend()                                                            { throw("race") }$/;"	f
racegoend	./runtime/race1.go	/^func racegoend() {$/;"	f
racegostart	./runtime/race0.go	/^func racegostart(pc uintptr) uintptr                                        { throw("race"); return 0 }$/;"	f
racegostart	./runtime/race1.go	/^func racegostart(pc uintptr) uintptr {$/;"	f
raceinit	./runtime/race0.go	/^func raceinit() uintptr                                                     { throw("race"); return 0 }$/;"	f
raceinit	./runtime/race1.go	/^func raceinit() uintptr {$/;"	f
racemalloc	./runtime/race0.go	/^func racemalloc(p unsafe.Pointer, sz uintptr)                               { throw("race") }$/;"	f
racemalloc	./runtime/race1.go	/^func racemalloc(p unsafe.Pointer, sz uintptr) {$/;"	f
racemapshadow	./runtime/race0.go	/^func racemapshadow(addr unsafe.Pointer, size uintptr)                       { throw("race") }$/;"	f
racemapshadow	./runtime/race1.go	/^func racemapshadow(addr unsafe.Pointer, size uintptr) {$/;"	f
racepkg	./cmd/compile/internal/gc/go.go	/^var racepkg *Pkg \/\/ package runtime\/race$/;"	v
racer	./net/dial_gen.go	/^	type racer struct {$/;"	t
racer	./net/dnsclient_unix.go	/^	type racer struct {$/;"	t
racer	./runtime/race/output_test.go	/^func racer(x *int, done chan bool) {$/;"	f
raceread	./cmd/compile/internal/gc/builtin/runtime.go	/^func raceread(uintptr)$/;"	f
racereadpc	./runtime/race.go	/^func racereadpc(addr unsafe.Pointer, callpc, pc uintptr)$/;"	f
racereadpc	./runtime/race0.go	/^func racereadpc(addr unsafe.Pointer, callerpc, pc uintptr)                  { throw("race") }$/;"	f
racereadrange	./cmd/compile/internal/gc/builtin/runtime.go	/^func racereadrange(addr, size uintptr)$/;"	f
racereadrangepc	./runtime/race0.go	/^func racereadrangepc(addr unsafe.Pointer, sz, callerpc, pc uintptr)         { throw("race") }$/;"	f
racereadrangepc	./runtime/race1.go	/^func racereadrangepc(addr unsafe.Pointer, sz, callpc, pc uintptr) {$/;"	f
racereadrangepc1	./runtime/race1.go	/^func racereadrangepc1(uintptr, uintptr, uintptr)$/;"	f
racerelease	./runtime/race0.go	/^func racerelease(addr unsafe.Pointer)                                       { throw("race") }$/;"	f
racerelease	./runtime/race1.go	/^func racerelease(addr unsafe.Pointer) {$/;"	f
racereleaseg	./runtime/race0.go	/^func racereleaseg(gp *g, addr unsafe.Pointer)                               { throw("race") }$/;"	f
racereleaseg	./runtime/race1.go	/^func racereleaseg(gp *g, addr unsafe.Pointer) {$/;"	f
racereleasemerge	./runtime/race0.go	/^func racereleasemerge(addr unsafe.Pointer)                                  { throw("race") }$/;"	f
racereleasemerge	./runtime/race1.go	/^func racereleasemerge(addr unsafe.Pointer) {$/;"	f
racereleasemergeg	./runtime/race0.go	/^func racereleasemergeg(gp *g, addr unsafe.Pointer)                          { throw("race") }$/;"	f
racereleasemergeg	./runtime/race1.go	/^func racereleasemergeg(gp *g, addr unsafe.Pointer) {$/;"	f
racesymbolize	./runtime/race.go	/^func racesymbolize(ctx *symbolizeContext) {$/;"	f
racesymbolizethunk	./runtime/race1.go	/^func racesymbolizethunk(uintptr)$/;"	f
racesync	./runtime/chan.go	/^func racesync(c *hchan, sg *sudog) {$/;"	f
racewalk	./cmd/compile/internal/gc/racewalk.go	/^func racewalk(fn *Node) {$/;"	f
racewalklist	./cmd/compile/internal/gc/racewalk.go	/^func racewalklist(l *NodeList, init **NodeList) {$/;"	f
racewalknode	./cmd/compile/internal/gc/racewalk.go	/^func racewalknode(np **Node, init **NodeList, wr int, skip int) {$/;"	f
racewrite	./cmd/compile/internal/gc/builtin/runtime.go	/^func racewrite(uintptr)$/;"	f
racewritepc	./runtime/race.go	/^func racewritepc(addr unsafe.Pointer, callpc, pc uintptr)$/;"	f
racewritepc	./runtime/race0.go	/^func racewritepc(addr unsafe.Pointer, callerpc, pc uintptr)                 { throw("race") }$/;"	f
racewriterange	./cmd/compile/internal/gc/builtin/runtime.go	/^func racewriterange(addr, size uintptr)$/;"	f
racewriterangepc	./runtime/race0.go	/^func racewriterangepc(addr unsafe.Pointer, sz, callerpc, pc uintptr)        { throw("race") }$/;"	f
racewriterangepc	./runtime/race1.go	/^func racewriterangepc(addr unsafe.Pointer, sz, callpc, pc uintptr) {$/;"	f
racewriterangepc1	./runtime/race1.go	/^func racewriterangepc1(uintptr, uintptr, uintptr)$/;"	f
raddr	./cmd/compile/internal/arm/gsubr.go	/^func raddr(n *gc.Node, p *obj.Prog) {$/;"	f
raddr	./cmd/compile/internal/arm64/gsubr.go	/^func raddr(n *gc.Node, p *obj.Prog) {$/;"	f
raise	./runtime/os3_solaris.go	/^func raise(sig int32) \/* int32 *\/ {$/;"	f
raise	./runtime/os_darwin.go	/^func raise(sig int32)$/;"	f
raise	./runtime/os_dragonfly.go	/^func raise(sig int32)$/;"	f
raise	./runtime/os_freebsd.go	/^func raise(sig int32)$/;"	f
raise	./runtime/os_linux.go	/^func raise(sig int32)$/;"	f
raise	./runtime/os_netbsd.go	/^func raise(sig int32)$/;"	f
raise	./runtime/os_openbsd.go	/^func raise(sig int32)$/;"	f
raisebadsignal	./runtime/os1_nacl.go	/^func raisebadsignal(sig int32) {$/;"	f
raisebadsignal	./runtime/os1_plan9.go	/^func raisebadsignal(sig int32) {$/;"	f
raisebadsignal	./runtime/signal1_unix.go	/^func raisebadsignal(sig int32) {$/;"	f
raisebadsignal	./runtime/signal_windows.go	/^func raisebadsignal(sig int32) {$/;"	f
raiseproc	./runtime/os3_solaris.go	/^func raiseproc(sig int32) \/* int32 *\/ {$/;"	f
raiseproc	./runtime/os_darwin.go	/^func raiseproc(int32)$/;"	f
raiseproc	./runtime/os_dragonfly.go	/^func raiseproc(sig int32)$/;"	f
raiseproc	./runtime/os_freebsd.go	/^func raiseproc(sig int32)$/;"	f
raiseproc	./runtime/os_linux.go	/^func raiseproc(sig int32)$/;"	f
raiseproc	./runtime/os_nacl.go	/^func raiseproc(sig int32) {$/;"	f
raiseproc	./runtime/os_netbsd.go	/^func raiseproc(sig int32)$/;"	f
raiseproc	./runtime/os_openbsd.go	/^func raiseproc(sig int32)$/;"	f
ralphaStrings	./debug/elf/elf.go	/^var ralphaStrings = []intName{$/;"	v
rand	./crypto/rsa/pkcs1v15_test.go	/^		var rand io.Reader$/;"	v
rand	./crypto/tls/common.go	/^func (c *Config) rand() io.Reader {$/;"	f
rand	./io/ioutil/tempfile.go	/^var rand uint32$/;"	v
rand	./runtime/vlop_arm_test.go	/^func (r *randstate) rand() uint32 {$/;"	f
randBytes	./runtime/hash_test.go	/^func randBytes(r *rand.Rand, b []byte) {$/;"	f
randFieldElement	./crypto/ecdsa/ecdsa.go	/^func randFieldElement(c elliptic.Curve, rand io.Reader) (k *big.Int, err error) {$/;"	f
randFloat32	./testing/quick/quick.go	/^func randFloat32(rand *rand.Rand) float32 {$/;"	f
randFloat64	./testing/quick/quick.go	/^func randFloat64(rand *rand.Rand) float64 {$/;"	f
randInt	./cmd/compile/internal/big/gcd_test.go	/^func randInt(r *rand.Rand, size uint) *Int {$/;"	f
randInt	./math/big/gcd_test.go	/^func randInt(r *rand.Rand, size uint) *Int {$/;"	f
randInt64	./testing/quick/quick.go	/^func randInt64(rand *rand.Rand) int64 { return rand.Int63() - 1<<62 }$/;"	f
randKeyName	./internal/syscall/windows/registry/registry_test.go	/^func randKeyName(prefix string) string {$/;"	f
randmu	./io/ioutil/tempfile.go	/^var randmu sync.Mutex$/;"	v
random	./cmd/compile/internal/big/nat.go	/^func (z nat) random(rand *rand.Rand, limit nat, n int) nat {$/;"	f
random	./math/big/nat.go	/^func (z nat) random(rand *rand.Rand, limit nat, n int) nat {$/;"	f
random	./runtime/hash_test.go	/^func (k *BytesKey) random(r *rand.Rand) {$/;"	f
random	./runtime/hash_test.go	/^func (k *EfaceKey) random(r *rand.Rand) {$/;"	f
random	./runtime/hash_test.go	/^func (k *IfaceKey) random(r *rand.Rand) {$/;"	f
random	./runtime/hash_test.go	/^func (k *Int32Key) random(r *rand.Rand) {$/;"	f
random	./runtime/hash_test.go	/^func (k *Int64Key) random(r *rand.Rand) {$/;"	f
randomBoundary	./mime/multipart/writer.go	/^func randomBoundary() string {$/;"	f
randomBytes	./crypto/tls/handshake_messages_test.go	/^func randomBytes(n int, rand *rand.Rand) []byte {$/;"	f
randomFile	./syscall/fs_nacl.go	/^type randomFile struct{}$/;"	t
randomNumber	./runtime/os_linux_arm.go	/^var randomNumber uint32$/;"	v
randomNumber	./runtime/os_linux_arm64.go	/^var randomNumber uint32$/;"	v
randomNumerators	./runtime/vlop_arm_test.go	/^func randomNumerators() []uint32 {$/;"	f
randomString	./crypto/tls/handshake_messages_test.go	/^func randomString(n int, rand *rand.Rand) string {$/;"	f
randomTrap	./internal/syscall/unix/getrandom_linux.go	/^var randomTrap = map[string]uintptr{$/;"	v
randomUnsupported	./internal/syscall/unix/getrandom_linux.go	/^var randomUnsupported int32 \/\/ atomic$/;"	v
randstate	./runtime/vlop_arm_test.go	/^type randstate struct {$/;"	t
range16Count	./unicode/maketables.go	/^var range16Count = 0  \/\/ Number of entries in the 16-bit range tables.$/;"	v
range32Count	./unicode/maketables.go	/^var range32Count = 0  \/\/ Number of entries in the 32-bit range tables.$/;"	v
rangeControl	./text/template/parse/parse.go	/^func (t *Tree) rangeControl() Node {$/;"	f
rangeError	./strconv/atoi.go	/^func rangeError(fn, str string) *NumError {$/;"	f
rangeMutex	./cmd/vet/testdata/copylock_range.go	/^func rangeMutex() {$/;"	f
range_stmt	./cmd/compile/internal/gc/go.y	/^range_stmt:$/;"	l
ranges	./net/http/fs.go	/^	var ranges []httpRange$/;"	v
ranges	./regexp/syntax/parse.go	/^type ranges struct {$/;"	t
rangesMIMESize	./net/http/fs.go	/^func rangesMIMESize(ranges []httpRange, contentType string, contentSize int64) (encSize int64) {$/;"	f
rarmStrings	./debug/elf/elf.go	/^var rarmStrings = []intName{$/;"	v
ratBinArg	./cmd/compile/internal/big/rat_test.go	/^type ratBinArg struct {$/;"	t
ratBinArg	./math/big/rat_test.go	/^type ratBinArg struct {$/;"	t
ratBinFun	./cmd/compile/internal/big/rat_test.go	/^type ratBinFun func(z, x, y *Rat) *Rat$/;"	t
ratBinFun	./math/big/rat_test.go	/^type ratBinFun func(z, x, y *Rat) *Rat$/;"	t
ratBinTests	./cmd/compile/internal/big/rat_test.go	/^var ratBinTests = []struct {$/;"	v
ratBinTests	./math/big/rat_test.go	/^var ratBinTests = []struct {$/;"	v
ratCmpTests	./cmd/compile/internal/big/rat_test.go	/^var ratCmpTests = []struct {$/;"	v
ratCmpTests	./math/big/rat_test.go	/^var ratCmpTests = []struct {$/;"	v
ratDenoms	./cmd/compile/internal/big/rat_test.go	/^var ratDenoms = []string{$/;"	v
ratDenoms	./math/big/rat_test.go	/^var ratDenoms = []string{$/;"	v
ratNums	./cmd/compile/internal/big/rat_test.go	/^var ratNums = []string{$/;"	v
ratNums	./math/big/rat_test.go	/^var ratNums = []string{$/;"	v
ratToFloat32	./go/constant/go13.go	/^func ratToFloat32(x *big.Rat) (float32, bool) {$/;"	f
ratToFloat32	./go/constant/go14.go	/^func ratToFloat32(x *big.Rat) (float32, bool) {$/;"	f
ratTok	./cmd/compile/internal/big/ratconv.go	/^func ratTok(ch rune) bool {$/;"	f
ratTok	./math/big/ratconv.go	/^func ratTok(ch rune) bool {$/;"	f
rather	./go/types/eval.go	/^\/\/ level untyped constants will return an untyped type rather then the$/;"	t
rather	./go/types/expr.go	/^		\/\/ Update operand types to the default type rather then$/;"	t
ratio	./cmd/pprof/internal/report/report.go	/^	var ratio float64$/;"	v
raw	./runtime/symtab.go	/^func (f *Func) raw() *_func {$/;"	f
rawAttributes	./crypto/x509/x509.go	/^	var rawAttributes []asn1.RawValue$/;"	v
rawContentsStruct	./encoding/asn1/marshal_test.go	/^type rawContentsStruct struct {$/;"	t
rawEvent	./internal/trace/parser.go	/^type rawEvent struct {$/;"	t
rawExpr	./go/types/expr.go	/^func (check *Checker) rawExpr(x *operand, e ast.Expr, hint Type) exprKind {$/;"	f
rawFile	./cmd/internal/objfile/objfile.go	/^type rawFile interface {$/;"	t
rawRef	./encoding/base64/base64_test.go	/^func rawRef(ref string) string {$/;"	f
rawResponse	./net/http/serve_test.go	/^func (ht handlerTest) rawResponse(req string) string {$/;"	f
rawStructTest	./encoding/asn1/asn1_test.go	/^type rawStructTest struct {$/;"	t
rawSysvicall6	./syscall/syscall_solaris.go	/^func rawSysvicall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
rawToken	./encoding/xml/xml.go	/^func (d *Decoder) rawToken() (Token, error) {$/;"	f
rawTokens	./encoding/xml/xml_test.go	/^var rawTokens = []Token{$/;"	v
rawTokensAltEncoding	./encoding/xml/xml_test.go	/^var rawTokensAltEncoding = []Token{$/;"	v
rawUrlRef	./encoding/base64/base64_test.go	/^func rawUrlRef(ref string) string {$/;"	f
rawValues	./crypto/x509/x509.go	/^	var rawValues []asn1.RawValue$/;"	v
rawbyteslice	./runtime/string.go	/^func rawbyteslice(size int) (b []byte) {$/;"	f
rawgins	./cmd/compile/internal/arm64/gsubr.go	/^func rawgins(as int, f *gc.Node, t *gc.Node) *obj.Prog {$/;"	f
rawgins	./cmd/compile/internal/ppc64/gsubr.go	/^func rawgins(as int, f *gc.Node, t *gc.Node) *obj.Prog {$/;"	f
rawmem	./runtime/malloc.go	/^func rawmem(size uintptr) unsafe.Pointer {$/;"	f
rawruneslice	./runtime/string.go	/^func rawruneslice(size int) (b []rune) {$/;"	f
rawsa	./net/fd_windows.go	/^	var rawsa [2]syscall.RawSockaddrAny$/;"	v
rawsocketcall	./syscall/syscall_linux_386.go	/^func rawsocketcall(call int, a0, a1, a2, a3, a4, a5 uintptr) (n int, err Errno)$/;"	f
rawstring	./runtime/string.go	/^func rawstring(size int) (s string, b []byte) {$/;"	f
rawstringtmp	./runtime/string.go	/^func rawstringtmp(buf *tmpBuf, l int) (s string, b []byte) {$/;"	f
rax	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rax() uint64     { return c.regs().rax }$/;"	f
rax	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rax() uint64     { return c.regs().mc_rax }$/;"	f
rax	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rax() uint64     { return c.regs().mc_rax }$/;"	f
rax	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rax() uint64     { return c.regs().rax }$/;"	f
rax	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rax() uint64     { return c.regs().rax }$/;"	f
rax	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rax() uint64     { return c.regs().__gregs[_REG_RAX] }$/;"	f
rax	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rax() uint64     { return c.regs().sc_rax }$/;"	f
rax	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rax() uint64     { return uint64(c.regs().gregs[_REG_RAX]) }$/;"	f
rb	./io/io_test.go	/^	var rb bytes.Buffer$/;"	v
rb	./io/io_test.go	/^	var rb dataAndErrorBuffer$/;"	v
rbp	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rbp() uint64     { return c.regs().rbp }$/;"	f
rbp	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rbp() uint64     { return c.regs().mc_rbp }$/;"	f
rbp	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rbp() uint64     { return c.regs().mc_rbp }$/;"	f
rbp	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rbp() uint64     { return c.regs().rbp }$/;"	f
rbp	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rbp() uint64     { return c.regs().rbp }$/;"	f
rbp	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rbp() uint64     { return c.regs().__gregs[_REG_RBP] }$/;"	f
rbp	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rbp() uint64     { return c.regs().sc_rbp }$/;"	f
rbp	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rbp() uint64     { return uint64(c.regs().gregs[_REG_RBP]) }$/;"	f
rbx	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rbx() uint64     { return c.regs().rbx }$/;"	f
rbx	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rbx() uint64     { return c.regs().mc_rbx }$/;"	f
rbx	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rbx() uint64     { return c.regs().mc_rbx }$/;"	f
rbx	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rbx() uint64     { return c.regs().rbx }$/;"	f
rbx	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rbx() uint64     { return c.regs().rbx }$/;"	f
rbx	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rbx() uint64     { return c.regs().__gregs[_REG_RBX] }$/;"	f
rbx	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rbx() uint64     { return c.regs().sc_rbx }$/;"	f
rbx	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rbx() uint64     { return uint64(c.regs().gregs[_REG_RBX]) }$/;"	f
rbyoff	./cmd/link/internal/ld/ldelf.go	/^type rbyoff []Reloc$/;"	t
rc	./archive/zip/reader_test.go	/^		var rc *ReadCloser$/;"	v
rc4Test	./crypto/rc4/rc4_test.go	/^type rc4Test struct {$/;"	t
rcdataEscaper	./html/template/html.go	/^func rcdataEscaper(args ...interface{}) string {$/;"	f
rclass	./cmd/internal/obj/arm64/asm7.go	/^func rclass(r int16) int {$/;"	f
rclose	./io/pipe.go	/^func (p *pipe) rclose(err error) {$/;"	f
rcmp	./cmd/compile/internal/gc/reg.go	/^type rcmp []Rgn$/;"	t
rcvd	./log/syslog/syslog_test.go	/^	var rcvd string$/;"	v
rcvr	./cmd/compile/internal/gc/dcl.go	/^	var rcvr *NodeList$/;"	v
rcvr	./cmd/compile/internal/gc/subr.go	/^	var rcvr *Type$/;"	v
rcvr	./cmd/compile/internal/gc/y.go	/^			var rcvr, t *Node$/;"	v
rcx	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rcx() uint64     { return c.regs().rcx }$/;"	f
rcx	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rcx() uint64     { return c.regs().mc_rcx }$/;"	f
rcx	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rcx() uint64     { return c.regs().mc_rcx }$/;"	f
rcx	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rcx() uint64     { return c.regs().rcx }$/;"	f
rcx	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rcx() uint64     { return c.regs().rcx }$/;"	f
rcx	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rcx() uint64     { return c.regs().__gregs[_REG_RCX] }$/;"	f
rcx	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rcx() uint64     { return c.regs().sc_rcx }$/;"	f
rcx	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rcx() uint64     { return uint64(c.regs().gregs[_REG_RCX]) }$/;"	f
rd	./cmd/internal/goobj/read.go	/^	var rd objReader$/;"	v
rdat	./io/pipe_test.go	/^	var rdat = make([]byte, 1024)$/;"	v
rddata	./cmd/link/internal/ld/objfile.go	/^func rddata(f *obj.Biobuf) []byte {$/;"	f
rdi	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rdi() uint64     { return c.regs().rdi }$/;"	f
rdi	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rdi() uint64     { return c.regs().mc_rdi }$/;"	f
rdi	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rdi() uint64     { return c.regs().mc_rdi }$/;"	f
rdi	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rdi() uint64     { return c.regs().rdi }$/;"	f
rdi	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rdi() uint64     { return c.regs().rdi }$/;"	f
rdi	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rdi() uint64     { return c.regs().__gregs[_REG_RDI] }$/;"	f
rdi	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rdi() uint64     { return c.regs().sc_rdi }$/;"	f
rdi	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rdi() uint64     { return uint64(c.regs().gregs[_REG_RDI]) }$/;"	f
rdint	./cmd/link/internal/ld/objfile.go	/^func rdint(f *obj.Biobuf) int {$/;"	f
rdint16	./cmd/link/internal/ld/objfile.go	/^func rdint16(f *obj.Biobuf) int16 {$/;"	f
rdint32	./cmd/link/internal/ld/objfile.go	/^func rdint32(f *obj.Biobuf) int32 {$/;"	f
rdint64	./cmd/link/internal/ld/objfile.go	/^func rdint64(f *obj.Biobuf) int64 {$/;"	f
rdstring	./cmd/link/internal/ld/objfile.go	/^func rdstring(f *obj.Biobuf) string {$/;"	f
rdsym	./cmd/link/internal/ld/objfile.go	/^func rdsym(ctxt *Link, f *obj.Biobuf, pkg string) *LSym {$/;"	f
rduint8	./cmd/link/internal/ld/objfile.go	/^func rduint8(f *obj.Biobuf) uint8 {$/;"	f
rdx	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rdx() uint64     { return c.regs().rdx }$/;"	f
rdx	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rdx() uint64     { return c.regs().mc_rdx }$/;"	f
rdx	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rdx() uint64     { return c.regs().mc_rdx }$/;"	f
rdx	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rdx() uint64     { return c.regs().rdx }$/;"	f
rdx	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rdx() uint64     { return c.regs().rdx }$/;"	f
rdx	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rdx() uint64     { return c.regs().__gregs[_REG_RDX] }$/;"	f
rdx	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rdx() uint64     { return c.regs().sc_rdx }$/;"	f
rdx	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rdx() uint64     { return uint64(c.regs().gregs[_REG_RDX]) }$/;"	f
re	./go/constant/value.go	/^		var re, im big.Rat$/;"	v
re	./go/types/builtins_test.go	/^	{"complex", `type F32 float32; var re, im F32; _ = complex(re, im)`, `func(p.F32, p.F32) complex64`},$/;"	v
re	./go/types/builtins_test.go	/^	{"complex", `type F64 float64; var re, im F64; _ = complex(re, im)`, `func(p.F64, p.F64) complex128`},$/;"	v
re	./go/types/builtins_test.go	/^	{"complex", `var re float32; _ = complex(re, 1.0)`, `func(float32, float32) complex64`},$/;"	v
re	./net/http/transport.go	/^	var re responseAndError$/;"	v
re	./runtime/runtime-gdb.py	/^import re$/;"	i
read	./compress/bzip2/bzip2.go	/^func (bz2 *reader) read(buf []byte) (int, error) {$/;"	f
read	./io/pipe.go	/^func (p *pipe) read(b []byte) (n int, err error) {$/;"	f
read	./net/http/fcgi/fcgi.go	/^func (br *beginRequest) read(content []byte) error {$/;"	f
read	./net/http/fcgi/fcgi.go	/^func (rec *record) read(r io.Reader) (err error) {$/;"	f
read	./os/file_plan9.go	/^func (f *File) read(b []byte) (n int, err error) {$/;"	f
read	./os/file_unix.go	/^func (f *File) read(b []byte) (n int, err error) {$/;"	f
read	./os/file_windows.go	/^func (f *File) read(b []byte) (n int, err error) {$/;"	f
read	./runtime/os1_plan9.go	/^func read(fd int32, buf unsafe.Pointer, n int32) int32 {$/;"	f
read	./runtime/os3_solaris.go	/^func read(fd int32, buf unsafe.Pointer, nbyte int32) int32 {$/;"	f
read	./runtime/os_nacl.go	/^func read(fd int32, p unsafe.Pointer, n int32) int32$/;"	f
read	./runtime/os_windows.go	/^func read(fd int32, p unsafe.Pointer, n int32) int32 {$/;"	f
read	./runtime/stubs2.go	/^func read(fd int32, p unsafe.Pointer, n int32) int32$/;"	f
read	./syscall/fd_nacl.go	/^func (*defaultFileImpl) read([]byte) (int, error)          { return 0, ENOSYS }$/;"	f
read	./syscall/fd_nacl.go	/^func (f *naclFile) read(b []byte) (int, error) {$/;"	f
read	./syscall/fd_nacl.go	/^func (f *pipeFile) read(b []byte) (int, error) {$/;"	f
read	./syscall/fs_nacl.go	/^func (f *fsysFile) read(b []byte) (int, error) {$/;"	f
read	./syscall/net_nacl.go	/^func (f *netFile) read(b []byte) (int, error) {$/;"	f
read	./syscall/net_nacl.go	/^func (q *byteq) read(b []byte, deadline int64) (int, error) {$/;"	f
read	./syscall/net_nacl.go	/^func (q *msgq) read(deadline int64) (interface{}, error) {$/;"	f
read	./syscall/zsyscall_darwin_386.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_darwin_amd64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_darwin_arm.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_darwin_arm64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_dragonfly_amd64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_freebsd_386.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_freebsd_amd64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_freebsd_arm.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_linux_386.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_linux_amd64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_linux_arm.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_linux_arm64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_linux_ppc64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_linux_ppc64le.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_netbsd_386.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_netbsd_amd64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_netbsd_arm.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_openbsd_386.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_openbsd_amd64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_openbsd_arm.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./syscall/zsyscall_solaris_amd64.go	/^func read(fd int, p []byte) (n int, err error) {$/;"	f
read	./time/zoneinfo_read.go	/^func (d *data) read(n int) []byte {$/;"	f
read2	./compress/gzip/gunzip.go	/^func (z *Reader) read2() (uint32, error) {$/;"	f
readAligned4	./cmd/go/note.go	/^func readAligned4(r io.Reader, sz int32) ([]byte, error) {$/;"	f
readAll	./io/ioutil/ioutil.go	/^func readAll(r io.Reader, capacity int64) (b []byte, err error) {$/;"	f
readBlock	./compress/bzip2/bzip2.go	/^func (bz2 *reader) readBlock() (err error) {$/;"	f
readBlock	./image/gif/reader.go	/^func (d *decoder) readBlock() (int, error) {$/;"	f
readBuf	./archive/zip/reader.go	/^type readBuf []byte$/;"	t
readBuildID	./cmd/go/pkg.go	/^func readBuildID(p *Package) (id string, err error) {$/;"	f
readByte	./cmd/internal/goobj/read.go	/^func (r *objReader) readByte() byte {$/;"	f
readByte	./fmt/scan.go	/^func (r *readRune) readByte() (b byte, err error) {$/;"	f
readByte	./image/jpeg/reader.go	/^func (d *decoder) readByte() (x byte, err error) {$/;"	f
readByteStuffedByte	./image/jpeg/reader.go	/^func (d *decoder) readByteStuffedByte() (x byte, err error) {$/;"	f
readBytes	./bufio/bufio_test.go	/^func readBytes(buf *Reader) string {$/;"	f
readBytesTests	./bytes/buffer_test.go	/^var readBytesTests = []struct {$/;"	v
readClientHello	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) readClientHello() (isResume bool, err error) {$/;"	f
readClose	./net/http/client.go	/^type readClose struct {$/;"	t
readCodeLine	./net/textproto/reader.go	/^func (r *Reader) readCodeLine(expectCode int) (code int, continued bool, message string, err error) {$/;"	f
readColorTable	./image/gif/reader.go	/^func (d *decoder) readColorTable(fields byte) (color.Palette, error) {$/;"	f
readCommand	./cmd/pprof/internal/driver/interactive.go	/^func readCommand(p *profile.Profile, ui plugin.UI, f *flags) (string, error) {$/;"	f
readConsole	./os/file_windows.go	/^func (f *File) readConsole(b []byte) (n int, err error) {$/;"	f
readContinuedLineSlice	./net/textproto/reader.go	/^func (r *Reader) readContinuedLineSlice() ([]byte, error) {$/;"	f
readCookies	./net/http/cookie.go	/^func readCookies(h Header, filter string) []*Cookie {$/;"	f
readCookiesTests	./net/http/cookie_test.go	/^var readCookiesTests = []struct {$/;"	v
readDNSResponse	./net/dnsclient_unix.go	/^func (c *TCPConn) readDNSResponse() (*dnsMsg, error) {$/;"	f
readDNSResponse	./net/dnsclient_unix.go	/^func (c *UDPConn) readDNSResponse() (*dnsMsg, error) {$/;"	f
readData	./cmd/internal/goobj/read.go	/^func (r *objReader) readData() Data {$/;"	f
readDataDescriptor	./archive/zip/reader.go	/^func readDataDescriptor(r io.Reader, f *File) error {$/;"	f
readDeadline	./syscall/net_nacl.go	/^func (f *netFile) readDeadline() int64 {$/;"	f
readDirNames	./path/filepath/path.go	/^func readDirNames(dirname string) ([]string, error) {$/;"	f
readDirectory64End	./archive/zip/reader.go	/^func readDirectory64End(r io.ReaderAt, offset int64, d *directoryEnd) (err error) {$/;"	f
readDirectoryEnd	./archive/zip/reader.go	/^func readDirectoryEnd(r io.ReaderAt, size int64) (dir *directoryEnd, err error) {$/;"	f
readDirectoryHeader	./archive/zip/reader.go	/^func readDirectoryHeader(f *File, r io.Reader) error {$/;"	f
readDoc	./go/doc/reader.go	/^func (r *reader) readDoc(comment *ast.CommentGroup) {$/;"	f
readELFGoBuildID	./cmd/go/note.go	/^func readELFGoBuildID(filename string, f *os.File, data []byte) (buildid string, err error) {$/;"	f
readELFNote	./cmd/go/note.go	/^func readELFNote(filename, name string, typ int32) ([]byte, error) {$/;"	f
readErr	./bufio/bufio.go	/^func (b *Reader) readErr() error {$/;"	f
readExtension	./image/gif/reader.go	/^func (d *decoder) readExtension() error {$/;"	f
readFile	./go/doc/reader.go	/^func (r *reader) readFile(src *ast.File) {$/;"	f
readFile	./go/parser/performance_test.go	/^func readFile(filename string) []byte {$/;"	f
readFile	./time/sys_plan9.go	/^func readFile(name string) ([]byte, error) {$/;"	f
readFile	./time/sys_unix.go	/^func readFile(name string) ([]byte, error) {$/;"	f
readFile	./time/sys_windows.go	/^func readFile(name string) ([]byte, error) {$/;"	f
readFileEntry	./debug/dwarf/line.go	/^func (r *LineReader) readFileEntry() (bool, error) {$/;"	f
readFinished	./crypto/tls/handshake_client.go	/^func (hs *clientHandshakeState) readFinished(out []byte) error {$/;"	f
readFinished	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) readFinished(out []byte) error {$/;"	f
readFloat	./strconv/atof.go	/^func readFloat(s string) (mantissa uint64, exp int, neg, trunc, ok bool) {$/;"	f
readFrom	./net/fd_unix.go	/^func (fd *netFD) readFrom(p []byte) (n int, sa syscall.Sockaddr, err error) {$/;"	f
readFrom	./net/fd_windows.go	/^func (fd *netFD) readFrom(buf []byte) (int, syscall.Sockaddr, error) {$/;"	f
readFromBlock	./compress/bzip2/bzip2.go	/^func (bz2 *reader) readFromBlock(buf []byte) int {$/;"	f
readFromTimeoutTests	./net/timeout_test.go	/^var readFromTimeoutTests = []struct {$/;"	v
readFromUntil	./crypto/tls/conn.go	/^func (b *block) readFromUntil(r io.Reader, n int) error {$/;"	f
readFull	./cmd/internal/goobj/read.go	/^func (r *objReader) readFull(b []byte) error {$/;"	f
readFull	./image/jpeg/reader.go	/^func (d *decoder) readFull(p []byte) error {$/;"	f
readFull	./net/parse.go	/^func readFull(r io.Reader) (all []byte, err error) {$/;"	f
readFunc	./go/doc/reader.go	/^func (r *reader) readFunc(fun *ast.FuncDecl) {$/;"	f
readGCStats	./runtime/debug/stubs.go	/^func readGCStats(*[]time.Duration)$/;"	f
readGCStats	./runtime/mstats.go	/^func readGCStats(pauses *[]uint64) {$/;"	f
readGCStats_m	./runtime/mstats.go	/^func readGCStats_m(pauses *[]uint64) {$/;"	f
readGIF	./image/gif/writer_test.go	/^func readGIF(filename string) (*GIF, error) {$/;"	f
readGNUSparseMap0x1	./archive/tar/reader.go	/^func readGNUSparseMap0x1(headers map[string]string) ([]sparseEntry, error) {$/;"	f
readGNUSparseMap1x0	./archive/tar/reader.go	/^func readGNUSparseMap1x0(r io.Reader) ([]sparseEntry, error) {$/;"	f
readGopackHeader	./go/internal/gcimporter/exportdata.go	/^func readGopackHeader(r *bufio.Reader) (name string, size int, err error) {$/;"	f
readGraphicControl	./image/gif/reader.go	/^func (d *decoder) readGraphicControl() error {$/;"	f
readHandshake	./crypto/tls/conn.go	/^func (c *Conn) readHandshake() (interface{}, error) {$/;"	f
readHeader	./archive/tar/reader.go	/^func (tr *Reader) readHeader() *Header {$/;"	f
readHeader	./compress/gzip/gunzip.go	/^func (z *Reader) readHeader(save bool) error {$/;"	f
readHeader	./debug/dwarf/line.go	/^func (r *LineReader) readHeader() error {$/;"	f
readHeaderAndScreenDescriptor	./image/gif/reader.go	/^func (d *decoder) readHeaderAndScreenDescriptor() error {$/;"	f
readHexByte	./mime/encodedword.go	/^func readHexByte(a, b byte) (byte, error) {$/;"	f
readHexByte	./mime/quotedprintable/reader.go	/^func readHexByte(v []byte) (b byte, err error) {$/;"	f
readHole	./archive/tar/reader.go	/^func (sfr *sparseFileReader) readHole(b []byte, toOffset int64) int {$/;"	f
readHosts	./net/hosts.go	/^func readHosts() {$/;"	f
readHuffman	./compress/flate/inflate.go	/^func (f *decompressor) readHuffman() error {$/;"	f
readHuffman	./syscall/unzip_nacl.go	/^func (f *decompressor) readHuffman() {$/;"	f
readImagePass	./image/png/reader.go	/^func (d *decoder) readImagePass(r io.Reader, pass int, allocateOnly bool) (image.Image, error) {$/;"	f
readImg	./image/gif/writer_test.go	/^func readImg(filename string) (image.Image, error) {$/;"	f
readInt	./cmd/internal/goobj/read.go	/^func (r *objReader) readInt() int {$/;"	f
readInt	./index/suffixarray/suffixarray.go	/^func readInt(r io.Reader, buf []byte) (int, error) {$/;"	f
readLSB	./compress/lzw/reader.go	/^func (d *decoder) readLSB() (uint16, error) {$/;"	f
readLine	./net/http/internal/chunked.go	/^func readLine(b *bufio.Reader) (p []byte, err error) {$/;"	f
readLine	./net/parse.go	/^func (f *file) readLine() (s string, ok bool) {$/;"	f
readLineNewlinesTests	./bufio/bufio_test.go	/^var readLineNewlinesTests = []struct {$/;"	v
readLineResult	./bufio/bufio_test.go	/^type readLineResult struct {$/;"	t
readLineSlice	./net/textproto/reader.go	/^func (r *Reader) readLineSlice() ([]byte, error) {$/;"	f
readLines	./bufio/bufio_test.go	/^func readLines(b *Reader) string {$/;"	f
readLock	./net/fd_plan9.go	/^func (fd *netFD) readLock() error {$/;"	f
readLock	./net/fd_unix.go	/^func (fd *netFD) readLock() error {$/;"	f
readLock	./net/fd_windows.go	/^func (fd *netFD) readLock() error {$/;"	f
readLocked	./net/http/transfer.go	/^func (b *body) readLocked(p []byte) (n int, err error) {$/;"	f
readLogger	./testing/iotest/logger.go	/^type readLogger struct {$/;"	t
readLoop	./net/http/transport.go	/^func (pc *persistConn) readLoop() {$/;"	f
readMSB	./compress/lzw/reader.go	/^func (d *decoder) readMSB() (uint16, error) {$/;"	f
readMaker	./bufio/bufio_test.go	/^type readMaker struct {$/;"	t
readMakers	./bufio/bufio_test.go	/^var readMakers = []readMaker{$/;"	v
readMessage	./encoding/gob/decoder.go	/^func (dec *Decoder) readMessage(nbytes int) {$/;"	f
readMetadata	./cmd/pack/pack.go	/^func (ar *Archive) readMetadata() *Entry {$/;"	f
readMsg	./net/fd_unix.go	/^func (fd *netFD) readMsg(p []byte, oob []byte) (n, oobn, flags int, sa syscall.Sockaddr, err error) {$/;"	f
readMsg	./net/fd_windows.go	/^func (fd *netFD) readMsg(p []byte, oob []byte) (n, oobn, flags int, sa syscall.Sockaddr, err error) {$/;"	f
readName	./encoding/xml/xml.go	/^func (d *Decoder) readName() (ok bool) {$/;"	f
readNote	./go/doc/reader.go	/^func (r *reader) readNote(list []*ast.Comment) {$/;"	f
readNotes	./go/doc/reader.go	/^func (r *reader) readNotes(comments []*ast.CommentGroup) {$/;"	f
readOldGNUSparseMap	./archive/tar/reader.go	/^func (tr *Reader) readOldGNUSparseMap(header []byte) []sparseEntry {$/;"	f
readOp	./bytes/buffer.go	/^type readOp int$/;"	t
readPNG	./image/png/reader_test.go	/^func readPNG(filename string) (image.Image, error) {$/;"	f
readPackage	./go/doc/reader.go	/^func (r *reader) readPackage(pkg *ast.Package, mode Mode) {$/;"	f
readPkgdef	./cmd/pack/pack.go	/^func readPkgdef(file string) (data []byte, err error) {$/;"	f
readPlan9Addr	./net/ipsock_plan9.go	/^func readPlan9Addr(proto, filename string) (addr Addr, err error) {$/;"	f
readPng	./image/jpeg/writer_test.go	/^func readPng(filename string) (image.Image, error) {$/;"	f
readProtocols	./net/lookup_unix.go	/^func readProtocols() {$/;"	f
readRecord	./crypto/tls/conn.go	/^func (c *Conn) readRecord(want recordType) error {$/;"	f
readRequest	./net/http/server.go	/^func (c *conn) readRequest() (w *response, err error) {$/;"	f
readRequest	./net/rpc/server.go	/^func (server *Server) readRequest(codec ServerCodec) (service *service, mtype *methodType, req *Request, argv, replyv reflect.Value, keepReading bool, err error) {$/;"	f
readRequestErrorTests	./net/http/request_test.go	/^var readRequestErrorTests = []struct {$/;"	v
readRequestHeader	./net/rpc/server.go	/^func (server *Server) readRequestHeader(codec ServerCodec) (service *service, mtype *methodType, req *Request, keepReading bool, err error) {$/;"	f
readResponseCloseInMiddleTests	./net/http/response_test.go	/^var readResponseCloseInMiddleTests = []struct {$/;"	v
readResponseTest	./net/textproto/reader_test.go	/^type readResponseTest struct {$/;"	t
readResponseTests	./net/textproto/reader_test.go	/^var readResponseTests = []readResponseTest{$/;"	v
readRune	./encoding/csv/reader.go	/^func (r *Reader) readRune() (rune, error) {$/;"	f
readRune	./fmt/scan.go	/^type readRune struct {$/;"	t
readRuneSegments	./bufio/bufio_test.go	/^func readRuneSegments(t *testing.T, segments []string) {$/;"	f
readRuneSegments	./text/scanner/scanner_test.go	/^func readRuneSegments(t *testing.T, segments []string) {$/;"	f
readServices	./net/port_unix.go	/^func readServices() {$/;"	f
readSessionTicket	./crypto/tls/handshake_client.go	/^func (hs *clientHandshakeState) readSessionTicket() error {$/;"	f
readSetCookies	./net/http/cookie.go	/^func readSetCookies(h Header) []*Cookie {$/;"	f
readSetCookiesTests	./net/http/cookie_test.go	/^var readSetCookiesTests = []struct {$/;"	v
readSize	./net/http/fcgi/fcgi.go	/^func readSize(s []byte) (uint32, int) {$/;"	f
readSlice	./bytes/buffer.go	/^func (b *Buffer) readSlice(delim byte) (line []byte, err error) {$/;"	f
readSlice	./index/suffixarray/suffixarray.go	/^func readSlice(r io.Reader, buf []byte, data []int) (n int, err error) {$/;"	f
readSource	./go/parser/interface.go	/^func readSource(filename string, src interface{}) ([]byte, error) {$/;"	f
readState	./net/fd_mutex_test.go	/^	var readState [2]uint64$/;"	v
readString	./cmd/internal/goobj/read.go	/^func (r *objReader) readString() string {$/;"	f
readString	./compress/gzip/gunzip.go	/^func (z *Reader) readString() (string, error) {$/;"	f
readString	./net/http/fcgi/fcgi.go	/^func readString(s []byte, size uint32) string {$/;"	f
readSymID	./cmd/internal/goobj/read.go	/^func (r *objReader) readSymID() SymID {$/;"	f
readTemplate	./go/doc/doc_test.go	/^func readTemplate(filename string) *template.Template {$/;"	f
readTestFile	./archive/zip/reader_test.go	/^func readTestFile(t *testing.T, zt ZipTest, ft ZipTestFile, f *File) {$/;"	f
readTestZip	./archive/zip/reader_test.go	/^func readTestZip(t *testing.T, zt ZipTest) {$/;"	f
readTests	./encoding/csv/reader_test.go	/^var readTests = []struct {$/;"	v
readTimeoutTests	./net/timeout_test.go	/^var readTimeoutTests = []struct {$/;"	v
readTrace	./internal/trace/parser.go	/^func readTrace(r io.Reader) ([]rawEvent, error) {$/;"	f
readTrailer	./net/http/transfer.go	/^func (b *body) readTrailer() error {$/;"	f
readTransfer	./net/http/transfer.go	/^func readTransfer(msg interface{}, r *bufio.Reader) (err error) {$/;"	f
readType	./debug/dwarf/type.go	/^func (d *Data) readType(name string, r typeReader, off Offset, typeCache map[Offset]Type) (Type, error) {$/;"	f
readType	./go/doc/reader.go	/^func (r *reader) readType(decl *ast.GenDecl, spec *ast.TypeSpec) {$/;"	f
readUnaligned32	./runtime/unaligned1.go	/^func readUnaligned32(p unsafe.Pointer) uint32 {$/;"	f
readUnaligned32	./runtime/unaligned2.go	/^func readUnaligned32(p unsafe.Pointer) uint32 {$/;"	f
readUnaligned64	./runtime/unaligned1.go	/^func readUnaligned64(p unsafe.Pointer) uint64 {$/;"	f
readUnaligned64	./runtime/unaligned2.go	/^func readUnaligned64(p unsafe.Pointer) uint64 {$/;"	f
readUnlock	./net/fd_plan9.go	/^func (fd *netFD) readUnlock() {$/;"	f
readUnlock	./net/fd_unix.go	/^func (fd *netFD) readUnlock() {$/;"	f
readUnlock	./net/fd_windows.go	/^func (fd *netFD) readUnlock() {$/;"	f
readVal	./internal/trace/parser.go	/^func readVal(r io.Reader, off0 int) (v uint64, off int, err error) {$/;"	f
readValue	./encoding/json/stream.go	/^func (dec *Decoder) readValue() (int, error) {$/;"	f
readValue	./go/doc/reader.go	/^func (r *reader) readValue(decl *ast.GenDecl) {$/;"	f
readWindowsZones	./time/genzabbrs.go	/^func readWindowsZones() (zones, error) {$/;"	f
readdir	./os/dir_plan9.go	/^func (file *File) readdir(n int) ([]FileInfo, error) {$/;"	f
readdir	./os/file_unix.go	/^func (f *File) readdir(n int) (fi []FileInfo, err error) {$/;"	f
readdir	./os/file_windows.go	/^func (file *File) readdir(n int) (fi []FileInfo, err error) {$/;"	f
readdirnames	./os/dir_plan9.go	/^func (file *File) readdirnames(n int) (names []string, err error) {$/;"	f
readdirnames	./os/dir_unix.go	/^func (f *File) readdirnames(n int) (names []string, err error) {$/;"	f
readdirnames	./os/dir_windows.go	/^func (file *File) readdirnames(n int) (names []string, err error) {$/;"	f
readdirnames	./syscall/exec_plan9.go	/^func readdirnames(dirfd int) (names []string, err error) {$/;"	f
readdupdevice	./syscall/exec_plan9.go	/^func readdupdevice() (fds []int, err error) {$/;"	f
readelfsym	./cmd/link/internal/ld/ldelf.go	/^func readelfsym(elfobj *ElfObj, i int, sym *ElfSym, needSym int) (err error) {$/;"	f
readelfsymboldata	./cmd/link/internal/ld/lib.go	/^func readelfsymboldata(f *elf.File, sym *elf.Symbol) []byte {$/;"	f
readenv	./syscall/env_plan9.go	/^func readenv(key string) (string, error) {$/;"	f
reader	./compress/bzip2/bzip2.go	/^type reader struct {$/;"	t
reader	./compress/zlib/reader.go	/^type reader struct {$/;"	t
reader	./crypto/rand/rand_unix.go	/^type reader struct {$/;"	t
reader	./go/doc/reader.go	/^type reader struct {$/;"	t
reader	./image/format.go	/^type reader interface {$/;"	t
reader	./image/gif/reader.go	/^type reader interface {$/;"	t
reader	./io/pipe_test.go	/^func reader(t *testing.T, r Reader, c chan int) {$/;"	f
reader	./net/http/request.go	/^		var reader io.Reader = r.Body$/;"	v
reader	./net/textproto/reader_test.go	/^func reader(s string) *Reader {$/;"	f
reader	./sync/rwmutex_test.go	/^func reader(rwm *RWMutex, num_iterations int, activity *int32, cdone chan bool) {$/;"	f
reader	./unicode/maketables.go	/^type reader struct {$/;"	t
readerAndCloser	./net/http/transport.go	/^type readerAndCloser struct {$/;"	t
readerErrors	./image/png/reader_test.go	/^var readerErrors = []struct {$/;"	v
readerFromHex	./compress/bzip2/bzip2_test.go	/^func readerFromHex(s string) io.Reader {$/;"	f
readerOnly	./archive/tar/reader_test.go	/^	type readerOnly struct {$/;"	t
readers	./bufio/bufio_test.go	/^	var readers = []func(*Reader, byte) ([]byte, error){$/;"	v
readfile	./cmd/dist/util.go	/^func readfile(file string) string {$/;"	f
readgogc	./runtime/mgc.go	/^func readgogc() int32 {$/;"	f
readgstatus	./runtime/proc1.go	/^func readgstatus(gp *g) uint32 {$/;"	f
readlen	./syscall/syscall_solaris.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_darwin_386.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_darwin_amd64.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_darwin_arm.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_darwin_arm64.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_dragonfly_amd64.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_freebsd_386.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_freebsd_amd64.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_freebsd_arm.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_linux_386.go	/^func readlen(fd int, p *byte, np int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_linux_amd64.go	/^func readlen(fd int, p *byte, np int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_linux_arm.go	/^func readlen(fd int, p *byte, np int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_linux_arm64.go	/^func readlen(fd int, p *byte, np int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_linux_ppc64.go	/^func readlen(fd int, p *byte, np int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_linux_ppc64le.go	/^func readlen(fd int, p *byte, np int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_netbsd_386.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_netbsd_amd64.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_netbsd_arm.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_openbsd_386.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_openbsd_amd64.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlen	./syscall/zsyscall_openbsd_arm.go	/^func readlen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
readlinkat	./syscall/zsyscall_linux_386.go	/^func readlinkat(dirfd int, path string, buf []byte) (n int, err error) {$/;"	f
readlinkat	./syscall/zsyscall_linux_amd64.go	/^func readlinkat(dirfd int, path string, buf []byte) (n int, err error) {$/;"	f
readlinkat	./syscall/zsyscall_linux_arm.go	/^func readlinkat(dirfd int, path string, buf []byte) (n int, err error) {$/;"	f
readlinkat	./syscall/zsyscall_linux_arm64.go	/^func readlinkat(dirfd int, path string, buf []byte) (n int, err error) {$/;"	f
readlinkat	./syscall/zsyscall_linux_ppc64.go	/^func readlinkat(dirfd int, path string, buf []byte) (n int, err error) {$/;"	f
readlinkat	./syscall/zsyscall_linux_ppc64le.go	/^func readlinkat(dirfd int, path string, buf []byte) (n int, err error) {$/;"	f
readmemstats_m	./runtime/mstats.go	/^func readmemstats_m(stats *MemStats) {$/;"	f
readnote	./cmd/link/internal/ld/lib.go	/^func readnote(f *elf.File, name []byte, typ int32) ([]byte, error) {$/;"	f
readnum	./syscall/syscall_plan9.go	/^func readnum(path string) (uint, error) {$/;"	f
readpesym	./cmd/link/internal/ld/ldpe.go	/^func readpesym(peobj *PeObj, i int, y **PeSym) (err error) {$/;"	f
reads	./bufio/bufio_test.go	/^func reads(buf *Reader, m int) string {$/;"	f
readsym	./cmd/link/internal/ld/objfile.go	/^func readsym(ctxt *Link, f *obj.Biobuf, pkg string, pn string) {$/;"	f
readsym_ndup	./cmd/link/internal/ld/objfile.go	/^var readsym_ndup int$/;"	v
readvarint	./cmd/internal/gcprog/gcprog.go	/^func readvarint(p []byte) (int64, []byte) {$/;"	f
readvarint	./debug/gosym/pclntab.go	/^func (t *LineTable) readvarint(pp *[]byte) uint32 {$/;"	f
readvarint	./runtime/symtab.go	/^func readvarint(p []byte) (newp []byte, val uint32) {$/;"	f
readwithpad	./cmd/link/internal/ld/lib.go	/^func readwithpad(r io.Reader, sz int32) ([]byte, error) {$/;"	f
ready	./runtime/proc1.go	/^func ready(gp *g, traceskip int) {$/;"	f
real	./builtin/builtin.go	/^func real(c ComplexType) FloatType$/;"	f
realtime	./runtime/sys_nacl_amd64p32.s	/^realtime:$/;"	l
reboot	./syscall/zsyscall_linux_386.go	/^func reboot(magic1 uint, magic2 uint, cmd int, arg string) (err error) {$/;"	f
reboot	./syscall/zsyscall_linux_amd64.go	/^func reboot(magic1 uint, magic2 uint, cmd int, arg string) (err error) {$/;"	f
reboot	./syscall/zsyscall_linux_arm.go	/^func reboot(magic1 uint, magic2 uint, cmd int, arg string) (err error) {$/;"	f
reboot	./syscall/zsyscall_linux_arm64.go	/^func reboot(magic1 uint, magic2 uint, cmd int, arg string) (err error) {$/;"	f
reboot	./syscall/zsyscall_linux_ppc64.go	/^func reboot(magic1 uint, magic2 uint, cmd int, arg string) (err error) {$/;"	f
reboot	./syscall/zsyscall_linux_ppc64le.go	/^func reboot(magic1 uint, magic2 uint, cmd int, arg string) (err error) {$/;"	f
rec	./encoding/gob/codec_test.go	/^	var rec Rec$/;"	v
rec	./net/dnsmsg.go	/^	var rec dnsRR$/;"	v
rec	./net/http/fcgi/child.go	/^	var rec record$/;"	v
rec	./net/http/fcgi/fcgi_test.go	/^	var rec record$/;"	v
recType	./net/http/fcgi/fcgi.go	/^type recType uint8$/;"	t
receiveExtend	./image/jpeg/huffman.go	/^func (d *decoder) receiveExtend(t uint8) (int32, error) {$/;"	f
received	./encoding/gob/decoder.go	/^		dec.err = errors.New("gob: duplicate type received")$/;"	t
receiverType	./encoding/xml/read.go	/^func receiverType(val interface{}) string {$/;"	f
recipients	./text/template/example_test.go	/^	var recipients = []Recipient{$/;"	v
recompileForTest	./cmd/go/test.go	/^func recompileForTest(pmain, preal, ptest *Package, testDir string) {$/;"	f
record	./archive/tar/reader.go	/^		var record []byte$/;"	v
record	./crypto/tls/common.go	/^type record struct {$/;"	t
record	./net/http/fcgi/fcgi.go	/^type record struct {$/;"	t
record	./runtime/mprof.go	/^func record(r *MemProfileRecord, b *bucket) {$/;"	f
recordAnonymousField	./go/doc/reader.go	/^func (r *reader) recordAnonymousField(parent *namedType, fieldType ast.Expr) (fname string) {$/;"	f
recordBuiltinType	./go/types/check.go	/^func (check *Checker) recordBuiltinType(f ast.Expr, sig *Signature) {$/;"	f
recordCommaOkTypes	./go/types/check.go	/^func (check *Checker) recordCommaOkTypes(x ast.Expr, a [2]Type) {$/;"	f
recordDef	./go/types/check.go	/^func (check *Checker) recordDef(id *ast.Ident, obj Object) {$/;"	f
recordImplicit	./go/types/check.go	/^func (check *Checker) recordImplicit(node ast.Node, obj Object) {$/;"	f
recordLine	./go/printer/printer.go	/^func (p *printer) recordLine(linePtr *int) {$/;"	f
recordLines	./runtime/symtab_test.go	/^func recordLines(a, b, c int) {$/;"	f
recordScope	./go/types/check.go	/^func (check *Checker) recordScope(node ast.Node, scope *Scope) {$/;"	f
recordSelection	./go/types/check.go	/^func (check *Checker) recordSelection(x *ast.SelectorExpr, kind SelectionKind, recv Type, obj Object, index []int, indirect bool) {$/;"	f
recordType	./crypto/tls/common.go	/^type recordType uint8$/;"	t
recordTypeAndValue	./go/types/check.go	/^func (check *Checker) recordTypeAndValue(x ast.Expr, mode operandMode, typ Type, val constant.Value) {$/;"	f
recordUntyped	./go/types/check.go	/^func (check *Checker) recordUntyped() {$/;"	f
recordUse	./go/types/check.go	/^func (check *Checker) recordUse(id *ast.Ident, obj Object) {$/;"	f
recorded	./go/types/builtins_test.go	/^			t.Errorf("%s: no type recorded for %s", src0, ExprString(fun))$/;"	t
recordingConn	./crypto/tls/handshake_client_test.go	/^	var recordingConn *recordingConn$/;"	v
recordingConn	./crypto/tls/handshake_server_test.go	/^	var recordingConn *recordingConn$/;"	v
recordingConn	./crypto/tls/handshake_test.go	/^type recordingConn struct {$/;"	t
recordingTransport	./net/http/client_test.go	/^type recordingTransport struct {$/;"	t
recordspan	./runtime/mheap.go	/^func recordspan(vh unsafe.Pointer, p unsafe.Pointer) {$/;"	f
recover	./builtin/builtin.go	/^func recover() interface{}$/;"	f
recover	./text/template/parse/parse.go	/^func (t *Tree) recover(errp *error) {$/;"	f
recovers	./runtime/traceback.go	/^		\/\/ deferproc a second time (if the corresponding deferred func recovers).$/;"	f
recovery	./runtime/panic1.go	/^func recovery(gp *g) {$/;"	f
recurCount	./fmt/fmt_test.go	/^var recurCount = 0$/;"	v
recursiveMap	./encoding/gob/encoder_test.go	/^	type recursiveMap map[string]recursiveMap$/;"	t
recursiveMapV	./cmd/vet/testdata/print.go	/^var recursiveMapV = make(RecursiveMap)$/;"	v
recursivePtrStringer	./cmd/vet/testdata/print.go	/^type recursivePtrStringer int$/;"	t
recursiveSlice	./encoding/gob/encoder_test.go	/^	type recursiveSlice []recursiveSlice$/;"	t
recursiveSliceV	./cmd/vet/testdata/print.go	/^var recursiveSliceV = &RecursiveSlice{}$/;"	v
recursiveStringer	./cmd/vet/print.go	/^func (f *File) recursiveStringer(e ast.Expr) bool {$/;"	f
recursiveStringer	./cmd/vet/testdata/print.go	/^type recursiveStringer int$/;"	t
recursiveStruct1V	./cmd/vet/testdata/print.go	/^var recursiveStruct1V = &RecursiveStruct1{}$/;"	v
recursiveStructV	./cmd/vet/testdata/print.go	/^var recursiveStructV = &RecursiveStruct{}$/;"	v
recv	./go/parser/parser.go	/^	var recv *ast.FieldList$/;"	v
recv	./go/printer/testdata/parser.go	/^	var recv *ast.FieldList$/;"	v
recv	./go/types/typexpr.go	/^		var recv *Var$/;"	v
recv	./reflect/value.go	/^func (v Value) recv(nb bool) (val Value, ok bool) {$/;"	f
recv	./syscall/srpc_nacl.go	/^func (r *msgReceiver) recv() (*msg, error) {$/;"	f
recvMessage	./encoding/gob/decoder.go	/^func (dec *Decoder) recvMessage() bool {$/;"	f
recvString	./go/doc/reader.go	/^func recvString(recv ast.Expr) string {$/;"	f
recvTyp	./go/types/typexpr.go	/^	var recvTyp Type = iface$/;"	v
recvType	./encoding/gob/decoder.go	/^func (dec *Decoder) recvType(id typeId) {$/;"	f
recvchantype	./cmd/compile/internal/gc/go.y	/^recvchantype:$/;"	l
recvclosed	./runtime/chan.go	/^func recvclosed(c *hchan, ep unsafe.Pointer) (selected, recevied bool) {$/;"	f
recvfrom	./syscall/net_nacl.go	/^func (f *netFile) recvfrom(p []byte, flags int) (n int, from Sockaddr, err error) {$/;"	f
recvfrom	./syscall/syscall_linux_386.go	/^func recvfrom(s int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_darwin_386.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_darwin_amd64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_darwin_arm.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_darwin_arm64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_dragonfly_amd64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_freebsd_386.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_freebsd_amd64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_freebsd_arm.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_linux_amd64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_linux_arm.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_linux_arm64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_linux_ppc64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_linux_ppc64le.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_netbsd_386.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_netbsd_amd64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_netbsd_arm.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_openbsd_386.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_openbsd_amd64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_openbsd_arm.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvfrom	./syscall/zsyscall_solaris_amd64.go	/^func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {$/;"	f
recvmsg	./syscall/syscall_linux_386.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_darwin_386.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_darwin_amd64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_darwin_arm.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_darwin_arm64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_dragonfly_amd64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_freebsd_386.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_freebsd_amd64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_freebsd_arm.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_linux_amd64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_linux_arm.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_linux_arm64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_linux_ppc64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_linux_ppc64le.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_netbsd_386.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_netbsd_amd64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_netbsd_arm.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_openbsd_386.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_openbsd_amd64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_openbsd_arm.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
recvmsg	./syscall/zsyscall_solaris_amd64.go	/^func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
redeclaration	./cmd/yacc/yacc.go	/^							errorf("type redeclaration of nonterminal %v",$/;"	t
redeclaration	./cmd/yacc/yacc.go	/^							errorf("type redeclaration of token %s",$/;"	t
redeclare	./cmd/compile/internal/gc/dcl.go	/^func redeclare(s *Sym, where string) {$/;"	f
redirectHandler	./net/http/server.go	/^type redirectHandler struct {$/;"	t
reduceDepth	./go/printer/nodes.go	/^func reduceDepth(depth int) int {$/;"	f
reducePi	./math/cmplx/tan.go	/^func reducePi(x float64) float64 {$/;"	f
reduceSlice	./cmd/compile/internal/gc/walk.go	/^func reduceSlice(n *Node) *Node {$/;"	f
redundantFuncs	./html/template/escape.go	/^var redundantFuncs = map[string]map[string]bool{$/;"	v
reentersyscall	./runtime/proc1.go	/^func reentersyscall(pc, sp uintptr) {$/;"	f
reexportdep	./cmd/compile/internal/gc/export.go	/^func reexportdep(n *Node) {$/;"	f
reexportdeplist	./cmd/compile/internal/gc/export.go	/^func reexportdeplist(ll *NodeList) {$/;"	f
refererForURL	./net/http/client.go	/^func refererForURL(lastReq, newReq *url.URL) string {$/;"	f
refersTo	./cmd/fix/fix.go	/^func refersTo(n ast.Node, x *ast.Ident) bool {$/;"	f
refill	./crypto/cipher/ctr.go	/^func (x *ctr) refill() {$/;"	f
refill	./crypto/cipher/ofb.go	/^func (x *ofb) refill() {$/;"	f
refill	./encoding/json/stream.go	/^func (dec *Decoder) refill() error {$/;"	f
refine	./image/jpeg/scan.go	/^func (d *decoder) refine(b *block, h *huffman, zigStart, zigEnd, delta int32) error {$/;"	f
refineNonZeroes	./image/jpeg/scan.go	/^func (d *decoder) refineNonZeroes(b *block, zig, zigEnd, nz, delta int32) (int32, error) {$/;"	f
reflectValue	./encoding/json/encode.go	/^func (e *encodeState) reflectValue(v reflect.Value) {$/;"	f
reflect_chancap	./runtime/chan.go	/^func reflect_chancap(c *hchan) int {$/;"	f
reflect_chanclose	./runtime/chan.go	/^func reflect_chanclose(c *hchan) {$/;"	f
reflect_chanlen	./runtime/chan.go	/^func reflect_chanlen(c *hchan) int {$/;"	f
reflect_chanrecv	./runtime/chan.go	/^func reflect_chanrecv(t *chantype, c *hchan, nb bool, elem unsafe.Pointer) (selected bool, received bool) {$/;"	f
reflect_chansend	./runtime/chan.go	/^func reflect_chansend(t *chantype, c *hchan, elem unsafe.Pointer, nb bool) (selected bool) {$/;"	f
reflect_gcbits	./runtime/mbitmap.go	/^func reflect_gcbits(x interface{}) []byte {$/;"	f
reflect_ifaceE2I	./runtime/iface.go	/^func reflect_ifaceE2I(inter *interfacetype, e interface{}, dst *fInterface) {$/;"	f
reflect_ismapkey	./runtime/hashmap.go	/^func reflect_ismapkey(t *_type) bool {$/;"	f
reflect_makechan	./runtime/chan.go	/^func reflect_makechan(t *chantype, size int64) *hchan {$/;"	f
reflect_makemap	./runtime/hashmap.go	/^func reflect_makemap(t *maptype) *hmap {$/;"	f
reflect_mapaccess	./runtime/hashmap.go	/^func reflect_mapaccess(t *maptype, h *hmap, key unsafe.Pointer) unsafe.Pointer {$/;"	f
reflect_mapassign	./runtime/hashmap.go	/^func reflect_mapassign(t *maptype, h *hmap, key unsafe.Pointer, val unsafe.Pointer) {$/;"	f
reflect_mapdelete	./runtime/hashmap.go	/^func reflect_mapdelete(t *maptype, h *hmap, key unsafe.Pointer) {$/;"	f
reflect_mapiterinit	./runtime/hashmap.go	/^func reflect_mapiterinit(t *maptype, h *hmap) *hiter {$/;"	f
reflect_mapiterkey	./runtime/hashmap.go	/^func reflect_mapiterkey(it *hiter) unsafe.Pointer {$/;"	f
reflect_mapiternext	./runtime/hashmap.go	/^func reflect_mapiternext(it *hiter) {$/;"	f
reflect_maplen	./runtime/hashmap.go	/^func reflect_maplen(h *hmap) int {$/;"	f
reflect_memclr	./runtime/stubs.go	/^func reflect_memclr(ptr unsafe.Pointer, n uintptr) {$/;"	f
reflect_memmove	./runtime/stubs.go	/^func reflect_memmove(to, from unsafe.Pointer, n uintptr) {$/;"	f
reflect_rselect	./runtime/select.go	/^func reflect_rselect(cases []runtimeSelect) (chosen int, recvOK bool) {$/;"	f
reflect_typedmemmove	./runtime/mbarrier.go	/^func reflect_typedmemmove(typ *_type, dst, src unsafe.Pointer) {$/;"	f
reflect_typedmemmovepartial	./runtime/mbarrier.go	/^func reflect_typedmemmovepartial(typ *_type, dst, src unsafe.Pointer, off, size uintptr) {$/;"	f
reflect_typedslicecopy	./runtime/mbarrier.go	/^func reflect_typedslicecopy(elemType *_type, dst, src slice) int {$/;"	f
reflect_typelinks	./runtime/runtime1.go	/^func reflect_typelinks() [][]*_type {$/;"	f
reflect_unsafe_New	./runtime/malloc.go	/^func reflect_unsafe_New(typ *_type) unsafe.Pointer {$/;"	f
reflect_unsafe_NewArray	./runtime/malloc.go	/^func reflect_unsafe_NewArray(typ *_type, n uintptr) unsafe.Pointer {$/;"	f
reflectcall	./runtime/stubs.go	/^func reflectcall(argtype *_type, fn, arg unsafe.Pointer, argsize uint32, retoffset uint32)$/;"	f
reg	./cmd/compile/internal/amd64/gsubr.go	/^	var reg gc.Node$/;"	v
reg	./cmd/compile/internal/arm/ggen.go	/^	var reg int$/;"	v
reg	./cmd/compile/internal/gc/cgen.go	/^					var reg Node$/;"	v
reg	./cmd/compile/internal/gc/cgen.go	/^		var reg Node$/;"	v
reg	./cmd/compile/internal/gc/gsubr.go	/^var reg [100]int       \/\/ count of references to reg$/;"	v
reg	./cmd/compile/internal/gc/pgen.go	/^		var reg Node$/;"	v
reg	./cmd/compile/internal/ppc64/ggen.go	/^	var reg gc.Node$/;"	v
reg	./cmd/compile/internal/x86/gsubr.go	/^	var reg gc.Node$/;"	v
reg	./cmd/internal/obj/x86/asm6.go	/^var reg [MAXREG]int$/;"	v
regBytes	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^func regBytes(a Arg) int {$/;"	f
regCreateKeyEx	./internal/syscall/windows/registry/zsyscall_windows.go	/^func regCreateKeyEx(key syscall.Handle, subkey *uint16, reserved uint32, class *uint16, options uint32, desired uint32, sa *syscall.SecurityAttributes, result *syscall.Handle, disposition *uint32) (regerrno error) {$/;"	f
regDeleteKey	./internal/syscall/windows/registry/zsyscall_windows.go	/^func regDeleteKey(key syscall.Handle, subkey *uint16) (regerrno error) {$/;"	f
regDeleteValue	./internal/syscall/windows/registry/zsyscall_windows.go	/^func regDeleteValue(key syscall.Handle, name *uint16) (regerrno error) {$/;"	f
regEnumValue	./internal/syscall/windows/registry/zsyscall_windows.go	/^func regEnumValue(key syscall.Handle, index uint32, name *uint16, nameLen *uint32, reserved *uint32, valtype *uint32, buf *byte, buflen *uint32) (regerrno error) {$/;"	f
regFileReader	./archive/tar/reader.go	/^type regFileReader struct {$/;"	t
regListConv	./cmd/internal/obj/util.go	/^func regListConv(list int) string {$/;"	f
regNames	./cmd/internal/rsc.io/x86/x86asm/inst.go	/^var regNames = [...]string{$/;"	v
regSet	./cmd/internal/obj/util.go	/^type regSet struct {$/;"	t
regSetValueEx	./internal/syscall/windows/registry/zsyscall_windows.go	/^func regSetValueEx(key syscall.Handle, valueName *uint16, reserved uint32, vtype uint32, buf *byte, bufsize uint32) (regerrno error) {$/;"	f
regSpace	./cmd/internal/obj/util.go	/^var regSpace []regSet$/;"	v
regconsttyp	./cmd/compile/internal/amd64/peep.go	/^func regconsttyp(a *obj.Addr) bool {$/;"	f
regexpPrecederKeywords	./html/template/js.go	/^var regexpPrecederKeywords = map[string]bool{$/;"	v
register	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) register(name string, prefix rune) (r1, r2 int16, scale int8, ok bool) {$/;"	f
register	./cmd/fix/fix.go	/^func register(f fix) {$/;"	f
register	./cmd/vet/main.go	/^func register(name, usage string, fn func(*File, ast.Node), types ...ast.Node) {$/;"	f
register	./net/rpc/server.go	/^func (server *Server) register(rcvr interface{}, name string, useName bool) error {$/;"	f
registerBasics	./encoding/gob/type.go	/^func registerBasics() {$/;"	f
registerIndirect	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) registerIndirect(a *obj.Addr, prefix rune) {$/;"	f
registerList	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) registerList(a *obj.Addr) {$/;"	f
registerNumber	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) registerNumber(name string) uint16 {$/;"	f
registerRaceBenchTest	./cmd/dist/test.go	/^func (t *tester) registerRaceBenchTest(pkg string) {$/;"	f
registerReference	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) registerReference(name string) (int16, bool) {$/;"	f
registerShift	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) registerShift(name string, prefix rune) int64 {$/;"	f
registerStdTest	./cmd/dist/test.go	/^func (t *tester) registerStdTest(pkg string) {$/;"	f
registerTest	./cmd/dist/test.go	/^func (t *tester) registerTest(name, dirBanner, bin string, args ...string) {$/;"	f
registerTests	./cmd/dist/test.go	/^func (t *tester) registerTests() {$/;"	f
regmmst	./runtime/defs_darwin_386.go	/^type regmmst struct {$/;"	t
regmmst	./runtime/defs_darwin_amd64.go	/^type regmmst struct {$/;"	t
regname	./cmd/compile/internal/amd64/reg.go	/^var regname = []string{$/;"	v
regname	./cmd/compile/internal/arm/reg.go	/^var regname = []string{$/;"	v
regname	./cmd/compile/internal/arm64/reg.go	/^var regname = []string{$/;"	v
regname	./cmd/compile/internal/ppc64/reg.go	/^var regname = []string{$/;"	v
regname	./cmd/compile/internal/x86/reg.go	/^var regname = []string{$/;"	v
regnames	./cmd/compile/internal/amd64/reg.go	/^func regnames(n *int) []string {$/;"	f
regnames	./cmd/compile/internal/arm/reg.go	/^func regnames(n *int) []string {$/;"	f
regnames	./cmd/compile/internal/arm64/reg.go	/^func regnames(n *int) []string {$/;"	f
regnames	./cmd/compile/internal/ppc64/reg.go	/^func regnames(n *int) []string {$/;"	f
regnames	./cmd/compile/internal/x86/reg.go	/^func regnames(n *int) []string {$/;"	f
regnodes	./cmd/compile/internal/gc/reg.go	/^var regnodes [64]*Node$/;"	v
regoff	./cmd/internal/obj/arm/asm5.go	/^func regoff(ctxt *obj.Link, a *obj.Addr) int32 {$/;"	f
regoff	./cmd/internal/obj/arm64/asm7.go	/^func regoff(ctxt *obj.Link, a *obj.Addr) uint32 {$/;"	f
regoff	./cmd/internal/obj/ppc64/asm9.go	/^func regoff(ctxt *obj.Link, a *obj.Addr) int32 {$/;"	f
regopt	./cmd/compile/internal/gc/reg.go	/^func regopt(firstp *obj.Prog) {$/;"	f
regressGolden	./math/rand/regress_test.go	/^		fmt.Printf("var regressGolden = []interface{}{\\n")$/;"	v
regressGolden	./math/rand/regress_test.go	/^var regressGolden = []interface{}{$/;"	v
regrex	./cmd/internal/obj/x86/asm6.go	/^var regrex [MAXREG + 1]int$/;"	v
regs	./runtime/signal_darwin_386.go	/^func (c *sigctxt) regs() *regs32   { return &(*ucontext)(c.ctxt).uc_mcontext.ss }$/;"	f
regs	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) regs() *regs64   { return &(*ucontext)(c.ctxt).uc_mcontext.ss }$/;"	f
regs	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) regs() *regs32   { return &(*ucontext)(c.ctxt).uc_mcontext.ss }$/;"	f
regs	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) regs() *regs64 { return &(*ucontext)(c.ctxt).uc_mcontext.ss }$/;"	f
regs	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) regs() *mcontext {$/;"	f
regs	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) regs() *mcontext { return &(*ucontext)(c.ctxt).uc_mcontext }$/;"	f
regs	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) regs() *mcontext {$/;"	f
regs	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) regs() *mcontext { return &(*ucontext)(c.ctxt).uc_mcontext }$/;"	f
regs	./runtime/signal_linux_386.go	/^func (c *sigctxt) regs() *sigcontext { return &(*ucontext)(c.ctxt).uc_mcontext }$/;"	f
regs	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) regs() *sigcontext {$/;"	f
regs	./runtime/signal_linux_arm.go	/^func (c *sigctxt) regs() *sigcontext { return &(*ucontext)(c.ctxt).uc_mcontext }$/;"	f
regs	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) regs() *sigcontext { return &(*ucontext)(c.ctxt).uc_mcontext }$/;"	f
regs	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) regs() *ptregs { return (*ucontext)(c.ctxt).uc_mcontext.regs }$/;"	f
regs	./runtime/signal_nacl_386.go	/^func (c *sigctxt) regs() *excregs386 { return &(*exccontext)(c.ctxt).regs }$/;"	f
regs	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) regs() *excregsamd64 {$/;"	f
regs	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) regs() *excregsarm { return &(*exccontext)(c.ctxt).regs }$/;"	f
regs	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) regs() *mcontextt { return &(*ucontextt)(c.ctxt).uc_mcontext }$/;"	f
regs	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) regs() *mcontextt {$/;"	f
regs	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) regs() *mcontextt { return &(*ucontextt)(c.ctxt).uc_mcontext }$/;"	f
regs	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) regs() *sigcontext {$/;"	f
regs	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) regs() *sigcontext {$/;"	f
regs	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) regs() *sigcontext {$/;"	f
regs	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) regs() *mcontext {$/;"	f
regs32	./runtime/defs_darwin_386.go	/^type regs32 struct {$/;"	t
regs32	./runtime/defs_darwin_amd64.go	/^type regs32 struct {$/;"	t
regs32	./runtime/defs_darwin_arm.go	/^type regs32 struct {$/;"	t
regs64	./runtime/defs_darwin_386.go	/^type regs64 struct {$/;"	t
regs64	./runtime/defs_darwin_amd64.go	/^type regs64 struct {$/;"	t
regs64	./runtime/defs_darwin_arm64.go	/^type regs64 struct {$/;"	t
regstk	./cmd/compile/internal/gc/gsubr.go	/^var regstk [100][]byte \/\/ allocation sites, when -v is given$/;"	v
regtyp	./cmd/compile/internal/amd64/peep.go	/^func regtyp(a *obj.Addr) bool {$/;"	f
regtyp	./cmd/compile/internal/arm/peep.go	/^func regtyp(a *obj.Addr) bool {$/;"	f
regtyp	./cmd/compile/internal/arm64/peep.go	/^func regtyp(a *obj.Addr) bool {$/;"	f
regtyp	./cmd/compile/internal/ppc64/peep.go	/^func regtyp(a *obj.Addr) bool {$/;"	f
regtyp	./cmd/compile/internal/x86/peep.go	/^func regtyp(a *obj.Addr) bool {$/;"	f
regxmm	./runtime/defs_darwin_386.go	/^type regxmm struct {$/;"	t
regxmm	./runtime/defs_darwin_amd64.go	/^type regxmm struct {$/;"	t
regzer	./cmd/compile/internal/ppc64/peep.go	/^func regzer(a *obj.Addr) int {$/;"	f
rel	./cmd/internal/obj/x86/asm6.go	/^	var rel obj.Reloc$/;"	v
rel	./cmd/link/internal/ld/ldmacho.go	/^	var rel *LdMachoRel$/;"	v
rel	./debug/elf/file.go	/^	var rel Rel32$/;"	v
rela	./cmd/link/internal/ld/ldelf.go	/^	var rela int$/;"	v
rela	./debug/elf/file.go	/^	var rela Rela32$/;"	v
rela	./debug/elf/file.go	/^	var rela Rela64$/;"	v
relabel	./crypto/md5/gen.go	/^func relabel(s string) string {$/;"	f
release	./os/exec_plan9.go	/^func (p *Process) release() error {$/;"	f
release	./os/exec_unix.go	/^func (p *Process) release() error {$/;"	f
release	./os/exec_windows.go	/^func (p *Process) release() error {$/;"	f
releaseConn	./database/sql/sql.go	/^func (dc *driverConn) releaseConn(err error) {$/;"	f
releaseSema	./net/dnsclient_unix.go	/^func (conf *resolverConfig) releaseSema() {$/;"	f
releaseSudog	./runtime/proc.go	/^func releaseSudog(s *sudog) {$/;"	f
releaseThread	./net/net.go	/^func releaseThread() {$/;"	f
releasem	./runtime/runtime1.go	/^func releasem(mp *m) {$/;"	f
releasep	./runtime/proc1.go	/^func releasep() *p {$/;"	f
relinv	./cmd/internal/obj/arm/obj5.go	/^func relinv(a int) int {$/;"	f
relinv	./cmd/internal/obj/arm64/obj7.go	/^func relinv(a int) int {$/;"	f
relinv	./cmd/internal/obj/ppc64/obj9.go	/^func relinv(a int) int {$/;"	f
relinv	./cmd/internal/obj/x86/obj6.go	/^func relinv(a int16) int16 {$/;"	f
reloadPackage	./cmd/go/pkg.go	/^func reloadPackage(arg string, stk *importStack) *Package {$/;"	f
reloc	./cmd/link/internal/ld/data.go	/^func reloc() {$/;"	f
relocationTest	./debug/elf/file_test.go	/^type relocationTest struct {$/;"	t
relocationTestEntry	./debug/elf/file_test.go	/^type relocationTestEntry struct {$/;"	t
relocationTests	./debug/elf/file_test.go	/^var relocationTests = []relocationTest{$/;"	v
relocsym	./cmd/link/internal/ld/data.go	/^func relocsym(s *LSym) {$/;"	f
relplt	./cmd/link/internal/ld/data.go	/^		var relplt *LSym$/;"	v
relput4	./cmd/internal/obj/x86/asm6.go	/^func relput4(ctxt *obj.Link, p *obj.Prog, a *obj.Addr) {$/;"	f
reltests	./path/filepath/path_test.go	/^var reltests = []RelTests{$/;"	v
reltype	./cmd/link/internal/ld/ldelf.go	/^func reltype(pn string, elftype int, siz *uint8) int {$/;"	f
remain	./net/sendfile_dragonfly.go	/^	var remain int64 = 0$/;"	v
remain	./net/sendfile_freebsd.go	/^	var remain int64 = 0$/;"	v
remain	./net/sendfile_linux.go	/^	var remain int64 = 1 << 62 \/\/ by default, copy until EOF$/;"	v
remain	./net/sendfile_solaris.go	/^	var remain int64 = 0$/;"	v
remainder	./math/all_test.go	/^var remainder = []float64{$/;"	v
remainder	./math/remainder.go	/^func remainder(x, y float64) float64 {$/;"	f
remapFunctionIDs	./cmd/pprof/internal/profile/legacy_profile.go	/^func (p *Profile) remapFunctionIDs() {$/;"	f
remapLocationIDs	./cmd/pprof/internal/profile/legacy_profile.go	/^func (p *Profile) remapLocationIDs() {$/;"	f
remapMappingIDs	./cmd/pprof/internal/profile/legacy_profile.go	/^func (p *Profile) remapMappingIDs() {$/;"	f
remember	./go/doc/reader.go	/^func (r *reader) remember(typ *ast.InterfaceType) {$/;"	f
rememberUntyped	./go/types/check.go	/^func (check *Checker) rememberUntyped(e ast.Expr, lhs bool, mode operandMode, typ *Basic, val constant.Value) {$/;"	f
remote	./cmd/compile/internal/gc/lex.go	/^		var remote string$/;"	v
remote	./cmd/link/internal/ld/go.go	/^	var remote string$/;"	v
remove	./container/list/list.go	/^func (l *List) remove(e *Element) *Element {$/;"	f
remove	./net/http/transport_test.go	/^func (tcs *testConnSet) remove(c net.Conn) {$/;"	f
remove	./syscall/zsyscall_plan9_386.go	/^func remove(path string) (err error) {$/;"	f
remove	./syscall/zsyscall_plan9_amd64.go	/^func remove(path string) (err error) {$/;"	f
removeClosedStmtLocked	./database/sql/sql.go	/^func (s *Stmt) removeClosedStmtLocked() {$/;"	f
removeComment	./net/parse.go	/^func removeComment(line []byte) []byte {$/;"	f
removeDep	./database/sql/sql.go	/^func (db *DB) removeDep(x finalCloser, dep interface{}) error {$/;"	f
removeDepLocked	./database/sql/sql.go	/^func (db *DB) removeDepLocked(x finalCloser, dep interface{}) func() error {$/;"	f
removeEmptyDeclGroups	./cmd/gofmt/simplify.go	/^func removeEmptyDeclGroups(f *ast.File) {$/;"	f
removeErrorField	./go/doc/exports.go	/^func removeErrorField(ityp *ast.InterfaceType) {$/;"	f
removeFile	./cmd/go/clean.go	/^func removeFile(f string) {$/;"	f
removeFirstVarDecl	./go/ast/example_test.go	/^func removeFirstVarDecl(list []ast.Decl) []ast.Decl {$/;"	f
removeFutile	./internal/trace/parser.go	/^func removeFutile(events []*Event) ([]*Event, error) {$/;"	f
removeLeadingDuplicates	./net/http/cgi/host.go	/^func removeLeadingDuplicates(env []string) (ret []string) {$/;"	f
removeLeadingRegexp	./regexp/syntax/parse.go	/^func (p *parser) removeLeadingRegexp(re *Regexp, reuse bool) *Regexp {$/;"	f
removeLeadingString	./regexp/syntax/parse.go	/^func (p *parser) removeLeadingString(re *Regexp, n int) *Regexp {$/;"	f
removeNewlinesMapper	./encoding/base32/base32.go	/^var removeNewlinesMapper = func(r rune) rune {$/;"	v
removeNodes	./cmd/pprof/internal/report/report.go	/^func removeNodes(toRemove nodes, bridge, residual bool) {$/;"	f
removeOpenStmt	./database/sql/sql.go	/^func (dc *driverConn) removeOpenStmt(si driver.Stmt) {$/;"	f
removePadding	./crypto/tls/conn.go	/^func removePadding(payload []byte) ([]byte, byte) {$/;"	f
removePaddingSSL30	./crypto/tls/conn.go	/^func removePaddingSSL30(payload []byte) ([]byte, byte) {$/;"	f
removeRedundantEdges	./cmd/pprof/internal/report/report.go	/^func removeRedundantEdges(ns nodes) {$/;"	f
removeStar	./go/doc/reader.go	/^func removeStar(s string) string {$/;"	f
removeWhitespace	./encoding/pem/pem.go	/^func removeWhitespace(data []byte) []byte {$/;"	f
removeZone	./net/http/request.go	/^func removeZone(host string) string {$/;"	f
removed	./cmd/pprof/internal/report/report.go	/^		var removed nodes$/;"	v
removefinalizer	./runtime/mheap.go	/^func removefinalizer(p unsafe.Pointer) {$/;"	f
removespecial	./runtime/mheap.go	/^func removespecial(p unsafe.Pointer, kind uint8) *special {$/;"	f
removevardef	./cmd/compile/internal/gc/pgen.go	/^func removevardef(firstp *obj.Prog) {$/;"	f
rename	./cmd/fix/fix.go	/^type rename struct {$/;"	t
rename	./os/file_plan9.go	/^func rename(oldname, newname string) error {$/;"	f
rename	./os/file_unix.go	/^func rename(oldname, newname string) error {$/;"	f
rename	./os/file_windows.go	/^func rename(oldname, newname string) error {$/;"	f
renameFix	./cmd/fix/fix.go	/^func renameFix(tab []rename) func(*ast.File) bool {$/;"	f
renameFixTab	./cmd/fix/fix.go	/^func renameFixTab(f *ast.File, tab []rename) bool {$/;"	f
renameTop	./cmd/fix/fix.go	/^func renameTop(f *ast.File, old, new string) bool {$/;"	f
renamedByte	./encoding/json/encode_test.go	/^type renamedByte byte$/;"	t
renamedByteSlice	./encoding/json/encode_test.go	/^type renamedByteSlice []byte$/;"	t
renamedRenamedByteSlice	./encoding/json/encode_test.go	/^type renamedRenamedByteSlice []renamedByte$/;"	t
renameinit	./cmd/compile/internal/gc/init.go	/^func renameinit() *Sym {$/;"	f
renameinit_initgen	./cmd/compile/internal/gc/init.go	/^var renameinit_initgen int$/;"	v
renumberfiles	./cmd/link/internal/ld/pcln.go	/^func renumberfiles(ctxt *Link, files []*LSym, d *Pcdata) {$/;"	f
reorder1	./cmd/compile/internal/gc/walk.go	/^func reorder1(all *NodeList) *NodeList {$/;"	f
reorder3	./cmd/compile/internal/gc/walk.go	/^func reorder3(all *NodeList) *NodeList {$/;"	f
reorder3save	./cmd/compile/internal/gc/walk.go	/^func reorder3save(np **Node, all *NodeList, stop *NodeList, early **NodeList) {$/;"	f
reorderTests	./fmt/fmt_test.go	/^var reorderTests = []struct {$/;"	v
rep	./compress/flate/inflate.go	/^		var rep int$/;"	v
rep	./reflect/all_test.go	/^func rep(n int, b []byte) []byte { return bytes.Repeat(b, n) }$/;"	f
rep	./syscall/unzip_nacl.go	/^		var rep int$/;"	v
reparseDataBuffer	./syscall/ztypes_windows.go	/^type reparseDataBuffer struct {$/;"	t
repeat	./regexp/syntax/parse.go	/^func (p *parser) repeat(op Op, min, max int, before, after, lastRepeat string) (string, error) {$/;"	f
repeatIsValid	./regexp/syntax/parse.go	/^func repeatIsValid(re *Regexp, n int) bool {$/;"	f
repeatReader	./net/http/serve_test.go	/^type repeatReader struct {$/;"	t
repeatedByte	./archive/zip/zip_test.go	/^type repeatedByte struct {$/;"	t
repl	./html/template/css.go	/^		var repl string$/;"	v
repl	./html/template/js.go	/^		var repl string$/;"	v
replace	./html/template/js.go	/^func replace(s string, replacementTable []string) string {$/;"	f
replaceAll	./regexp/regexp.go	/^func (re *Regexp) replaceAll(bsrc []byte, src string, nmatch int, repl func(dst []byte, m []int) []byte) []byte {$/;"	f
replaceFuncTests	./regexp/all_test.go	/^var replaceFuncTests = []ReplaceFuncTest{$/;"	v
replaceLiteralTests	./regexp/all_test.go	/^var replaceLiteralTests = []ReplaceTest{$/;"	v
replaceReqCanceler	./net/http/transport.go	/^func (t *Transport) replaceReqCanceler(r *Request, fn func()) bool {$/;"	f
replaceTests	./regexp/all_test.go	/^var replaceTests = []ReplaceTest{$/;"	v
replacementTable	./html/escape.go	/^var replacementTable = [...]rune{$/;"	v
replacer	./strings/replace.go	/^type replacer interface {$/;"	t
reply	./crypto/tls/handshake_server_test.go	/^	var reply interface{}$/;"	v
reply	./net/rpc/client_test.go	/^	var reply Reply$/;"	v
reply	./net/rpc/server.go	/^		var reply int$/;"	v
reply	./net/rpc/server_test.go	/^	var reply Reply$/;"	v
repoRoot	./cmd/go/vcs.go	/^type repoRoot struct {$/;"	t
repoRootForImportDynamic	./cmd/go/vcs.go	/^func repoRootForImportDynamic(importPath string, security securityMode) (*repoRoot, error) {$/;"	f
repoRootForImportPath	./cmd/go/vcs.go	/^func repoRootForImportPath(importPath string, security securityMode) (*repoRoot, error) {$/;"	f
repoRootFromVCSPaths	./cmd/go/vcs.go	/^func repoRootFromVCSPaths(importPath, scheme string, security securityMode, vcsPaths []*vcsPath) (*repoRoot, error) {$/;"	f
repoURL	./cmd/go/vcs.go	/^	var repoURL *url.URL$/;"	v
report	./cmd/fix/main.go	/^func report(err error) {$/;"	f
report	./cmd/gofmt/gofmt.go	/^func report(err error) {$/;"	f
report	./cmd/vet/main.go	/^var report = map[string]*triState{$/;"	v
report	./go/doc/testdata/testing.go	/^func (t *T) report() {$/;"	f
report	./regexp/testdata/testregex.c	/^report(char* comment, char* fun, char* re, char* s, int len, char* msg, int flags, unsigned long test)$/;"	f	file:
report	./testing/testing.go	/^func (t *T) report() {$/;"	f
reportAltDecl	./go/types/decl.go	/^func (check *Checker) reportAltDecl(obj Object) {$/;"	f
reportCycle	./go/types/initorder.go	/^func (check *Checker) reportCycle(cycle []*objNode, i int) {$/;"	f
reportError	./testing/quick/quick_test.go	/^func reportError(property string, err error, t *testing.T) {$/;"	f
representable	./go/types/expr.go	/^func (check *Checker) representable(x *operand, typ *Basic) {$/;"	f
representableConst	./go/types/expr.go	/^func representableConst(x constant.Value, conf *Config, as BasicKind, rounded *constant.Value) bool {$/;"	f
representation	./cmd/cgo/gcc.go	/^\/\/ Otherwise, repr is used unprocessed as the type representation.$/;"	t
representation	./cmd/cgo/gcc.go	/^\/\/ Set modifies the type representation.$/;"	t
representation	./cmd/cgo/gcc.go	/^\/\/ String returns the current type representation.  Format arguments$/;"	t
representation	./reflect/makefunc.go	/^\/\/ reflect can tell, but the true func representation can be handled$/;"	f
representation	./runtime/type.go	/^\/\/ Runtime type representation.$/;"	t
representing	./cmd/compile/internal/gc/go.go	/^	Bucket *Type \/\/ internal type representing a hash bucket$/;"	t
representing	./cmd/compile/internal/gc/go.go	/^	Hiter  *Type \/\/ internal type representing hash iterator state$/;"	t
representing	./cmd/compile/internal/gc/go.go	/^	Hmap   *Type \/\/ internal type representing a Hmap (map header object)$/;"	t
representing	./cmd/compile/internal/gc/reflect.go	/^\/\/ Builds a type representing a Bucket structure for$/;"	t
representing	./cmd/compile/internal/gc/reflect.go	/^\/\/ Builds a type representing a Hmap structure for the given map type.$/;"	t
representing	./reflect/type.go	/^\/\/ funcLayout computes a struct type representing the layout of the$/;"	t
representing	./runtime/type.go	/^	bucket        *_type \/\/ internal type representing a hash bucket$/;"	t
representing	./runtime/type.go	/^	hmap          *_type \/\/ internal type representing a hmap$/;"	t
represents	./time/sleep.go	/^\/\/ The Timer type represents a single event.$/;"	t
req	./net/http/client_test.go	/^	var req *Request$/;"	v
req	./net/http/fs_test.go	/^	var req Request$/;"	v
req	./net/http/httputil/reverseproxy_test.go	/^func req(t *testing.T, v string) *http.Request {$/;"	f
req	./net/http/serve_test.go	/^		var req Request$/;"	v
req	./net/http/serve_test.go	/^	var req *Request$/;"	v
req	./net/http/server.go	/^	var req *Request$/;"	v
reqBytes	./net/http/readrequest_test.go	/^func reqBytes(req string) []byte {$/;"	f
reqBytes	./net/http/serve_test.go	/^func reqBytes(req string) []byte {$/;"	f
reqTest	./net/http/readrequest_test.go	/^type reqTest struct {$/;"	t
reqTests	./net/http/readrequest_test.go	/^var reqTests = []reqTest{$/;"	v
reqWriteExcludeHeader	./net/http/request.go	/^var reqWriteExcludeHeader = map[string]bool{$/;"	v
reqWriteExcludeHeaderDump	./net/http/httputil/dump.go	/^var reqWriteExcludeHeaderDump = map[string]bool{$/;"	v
reqWriteTest	./net/http/requestwrite_test.go	/^type reqWriteTest struct {$/;"	t
reqWriteTests	./net/http/requestwrite_test.go	/^var reqWriteTests = []reqWriteTest{$/;"	v
reqchans	./runtime/stack_test.go	/^		var reqchans [G]chan int$/;"	v
reqmu	./net/http/client.go	/^	var reqmu sync.Mutex \/\/ guards req$/;"	v
request	./net/http/fcgi/child.go	/^type request struct {$/;"	t
requestAndChan	./net/http/transport.go	/^type requestAndChan struct {$/;"	t
requestCanceler	./net/http/httputil/reverseproxy.go	/^type requestCanceler interface {$/;"	t
requestTooLarge	./net/http/server.go	/^func (w *response) requestTooLarge() {$/;"	f
requested	./crypto/tls/conn.go	/^		return c.in.setErrorLocked(errors.New("tls: unknown record type requested"))$/;"	t
requests	./sync/atomic/value_test.go	/^func requests() chan int {$/;"	f
required	./cmd/api/goapi.go	/^	var required []string$/;"	v
requritests	./net/url/url_test.go	/^var requritests = []RequestURITest{$/;"	v
res	./database/sql/sql.go	/^	var res Result$/;"	v
res	./encoding/asn1/asn1_test.go	/^		var res []string$/;"	v
res	./encoding/binary/binary_test.go	/^var res = []int32{0x01020304, 0x05060708}$/;"	v
res	./go/ast/commentmap_test.go	/^var res = map[string]string{$/;"	v
res	./index/suffixarray/suffixarray_test.go	/^	var res []int$/;"	v
res	./internal/format/format.go	/^	var res []byte$/;"	v
res	./net/cgo_unix.go	/^	var res *C.struct_addrinfo$/;"	v
res	./net/http/serve_test.go	/^	var res = []byte("Hello world.\\n")$/;"	v
res	./runtime/mfinal.go	/^	var res *g$/;"	v
res	./strings/strings_test.go	/^		var res bytes.Buffer$/;"	v
res2	./encoding/base32/base32_test.go	/^	var res2 []byte$/;"	v
res2	./encoding/base64/base64_test.go	/^	var res2 []byte$/;"	v
reseed	./io/ioutil/tempfile.go	/^func reseed() uint32 {$/;"	f
reserve	./crypto/tls/conn.go	/^func (b *block) reserve(n int) {$/;"	f
reserved	./runtime/malloc.go	/^			var reserved bool$/;"	v
reserved	./runtime/malloc.go	/^	var reserved bool$/;"	v
reservedimports	./cmd/compile/internal/gc/subr.go	/^var reservedimports = []string{$/;"	v
reset	./bufio/bufio.go	/^func (b *Reader) reset(buf []byte, r io.Reader) {$/;"	f
reset	./compress/flate/deflate.go	/^func (d *compressor) reset(w io.Writer) {$/;"	f
reset	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) reset(writer io.Writer) {$/;"	f
reset	./encoding/gob/timing_test.go	/^func (b *benchmarkBuf) reset() {$/;"	f
reset	./encoding/json/scanner.go	/^func (s *scanner) reset() {$/;"	f
reset	./net/http/transport.go	/^func (e *envOnce) reset() {$/;"	f
reset	./net/rpc/jsonrpc/client.go	/^func (r *clientResponse) reset() {$/;"	f
reset	./net/rpc/jsonrpc/server.go	/^func (r *serverRequest) reset() {$/;"	f
reset	./regexp/backtrack.go	/^func (b *bitState) reset(end int, ncap int) {$/;"	f
reset	./regexp/onepass.go	/^func (q *queueOnePass) reset() {$/;"	f
reset	./text/tabwriter/tabwriter.go	/^func (b *Writer) reset() {$/;"	f
resetReadOnlyFlagAll	./cmd/go/go_test.go	/^func (tg *testgoData) resetReadOnlyFlagAll(path string) {$/;"	f
resetSeq	./crypto/tls/conn.go	/^func (hc *halfConn) resetSeq() {$/;"	f
resetSpace	./go/printer/printer.go	/^func (p *trimmer) resetSpace() {$/;"	f
resetState	./debug/dwarf/line.go	/^func (r *LineReader) resetState() {$/;"	f
resetTable	./cmd/compile/internal/big/natconv_test.go	/^func resetTable(table []divisor) {$/;"	f
resetTable	./math/big/natconv_test.go	/^func resetTable(table []divisor) {$/;"	f
resetcpuprofiler	./runtime/os1_nacl.go	/^func resetcpuprofiler(hz int32)                           {}$/;"	f
resetcpuprofiler	./runtime/os1_windows.go	/^func resetcpuprofiler(hz int32) {$/;"	f
resetcpuprofiler	./runtime/os3_plan9.go	/^func resetcpuprofiler(hz int32) {$/;"	f
resetcpuprofiler	./runtime/signal1_unix.go	/^func resetcpuprofiler(hz int32) {$/;"	f
resetspinning	./runtime/proc1.go	/^func resetspinning() {$/;"	f
resize	./crypto/tls/conn.go	/^func (b *block) resize(n int) {$/;"	f
resizef	./regexp/testdata/testregex.c	/^resizef(void* handle, void* data, size_t size)$/;"	f	file:
resolution	./go/types/check.go	/^	trace = false \/\/ turn on for detailed type resolution traces$/;"	t
resolvConf	./net/dnsclient_unix.go	/^var resolvConf resolverConfig$/;"	v
resolvConfTest	./net/dnsclient_unix_test.go	/^type resolvConfTest struct {$/;"	t
resolve	./cmd/compile/internal/gc/typecheck.go	/^func resolve(n *Node) *Node {$/;"	f
resolve	./go/ast/resolve.go	/^func resolve(scope *Scope, ident *Ident) bool {$/;"	f
resolve	./go/parser/parser.go	/^func (p *parser) resolve(x ast.Expr) {$/;"	f
resolve	./go/printer/testdata/parser.go	/^func (p *parser) resolve(x ast.Expr) {$/;"	f
resolveAddrList	./net/dial.go	/^func resolveAddrList(op, net, addr string, deadline time.Time) (addrList, error) {$/;"	f
resolveCNAME	./net/lookup_windows.go	/^func resolveCNAME(name *uint16, r *syscall.DNSRecord) *uint16 {$/;"	f
resolveIPAddrTest	./net/ipraw_test.go	/^type resolveIPAddrTest struct {$/;"	t
resolveIPAddrTests	./net/ipraw_test.go	/^var resolveIPAddrTests = []resolveIPAddrTest{$/;"	v
resolveOrder	./go/types/ordering.go	/^func (check *Checker) resolveOrder() []Object {$/;"	f
resolvePath	./net/url/url.go	/^func resolvePath(base, ref string) string {$/;"	f
resolvePathTests	./net/url/url_test.go	/^var resolvePathTests = []struct {$/;"	v
resolveReferenceTests	./net/url/url_test.go	/^var resolveReferenceTests = []struct {$/;"	v
resolveTCPAddrTest	./net/tcp_test.go	/^type resolveTCPAddrTest struct {$/;"	t
resolveTCPAddrTests	./net/tcp_test.go	/^var resolveTCPAddrTests = []resolveTCPAddrTest{$/;"	v
resolveTestImporter	./go/types/resolver_test.go	/^type resolveTestImporter struct {$/;"	t
resolveUDPAddrTest	./net/udp_test.go	/^type resolveUDPAddrTest struct {$/;"	t
resolveUDPAddrTests	./net/udp_test.go	/^var resolveUDPAddrTests = []resolveUDPAddrTest{$/;"	v
resolverConfig	./net/dnsclient_unix.go	/^type resolverConfig struct {$/;"	t
resolves	./go/types/typexpr.go	/^	\/\/          type resolves to an invalid type and is ignored).$/;"	t
resp	./cmd/go/vcs.go	/^	var resp struct {$/;"	v
resp	./net/http/serve_test.go	/^	var resp [5]*Response$/;"	v
resp	./net/http/transport.go	/^		var resp *Response$/;"	v
resp	./net/rpc/jsonrpc/all_test.go	/^		var resp ArithAddResp$/;"	v
resp	./net/rpc/jsonrpc/all_test.go	/^	var resp ArithAddResp$/;"	v
respExcludeHeader	./net/http/response.go	/^var respExcludeHeader = map[string]bool{$/;"	v
respHeaderTimer	./net/http/transport.go	/^	var respHeaderTimer <-chan time.Time$/;"	v
respTest	./net/http/response_test.go	/^type respTest struct {$/;"	t
respTests	./net/http/response_test.go	/^var respTests = []respTest{$/;"	v
respWriteTest	./net/http/responsewrite_test.go	/^type respWriteTest struct {$/;"	t
response	./net/http/cgi/child.go	/^type response struct {$/;"	t
response	./net/http/fcgi/child.go	/^type response struct {$/;"	t
response	./net/http/serve_test.go	/^var response = bytes.Repeat([]byte(someResponse), 2<<10\/len(someResponse))$/;"	v
response	./net/http/server.go	/^type response struct {$/;"	t
response	./net/rpc/client.go	/^	var response Response$/;"	v
response	./runtime/chanbarrier_test.go	/^type response struct {$/;"	t
responseAndError	./net/http/transport.go	/^type responseAndError struct {$/;"	t
responseLocationTest	./net/http/response_test.go	/^type responseLocationTest struct {$/;"	t
responseLocationTests	./net/http/response_test.go	/^var responseLocationTests = []responseLocationTest{$/;"	v
responseWriterJustWriter	./net/http/request_test.go	/^type responseWriterJustWriter struct {$/;"	t
resptr	./cmd/compile/internal/gc/walk.go	/^		var resptr *Node \/\/ &res$/;"	v
resrv	./cmd/yacc/yacc.go	/^var resrv = []Resrv{$/;"	v
rest	./crypto/x509/x509.go	/^	var rest []byte$/;"	v
rest	./net/url/url.go	/^	var rest string$/;"	v
restartg	./runtime/proc1.go	/^func restartg(gp *g) {$/;"	f
restore	./runtime/rt0_linux_386.s	/^restore:$/;"	l
restore	./runtime/rt0_linux_amd64.s	/^restore:$/;"	l
restoreSpecialFlags	./fmt/print.go	/^func (p *pp) restoreSpecialFlags(plusV, sharpV bool) {$/;"	f
restoreregs	./runtime/cgo/gcc_ppc64x.S	/^restoreregs:$/;"	l
restrictlookup	./cmd/compile/internal/gc/subr.go	/^func restrictlookup(name string, pkg *Pkg) *Sym {$/;"	f
restx	./cmd/compile/internal/amd64/ggen.go	/^func restx(x *gc.Node, oldx *gc.Node) {$/;"	f
restx	./cmd/compile/internal/x86/ggen.go	/^func restx(x *gc.Node, oldx *gc.Node) {$/;"	f
result	./compress/flate/gen.go	/^		var result byte$/;"	v
result	./encoding/asn1/asn1.go	/^		var result interface{}$/;"	v
result	./encoding/asn1/asn1_test.go	/^	var result implicitTaggedTimeTest$/;"	v
result	./encoding/asn1/asn1_test.go	/^	var result invalidUTF8Test$/;"	v
result	./encoding/asn1/asn1_test.go	/^	var result truncatedExplicitTagTest$/;"	v
result	./flag/flag_test.go	/^	var result string$/;"	v
result	./go/types/builtins.go	/^	var result *Tuple$/;"	v
result	./io/pipe_test.go	/^	var result string$/;"	v
result	./net/lookup_windows.go	/^	type result struct {$/;"	t
result	./net/lookup_windows.go	/^	var result *syscall.AddrinfoW$/;"	v
result	./net/timeout_test.go	/^	type result struct {$/;"	t
result	./os/user/lookup_unix.go	/^	var result *C.struct_passwd$/;"	v
result	./runtime/complex_test.go	/^var result complex128$/;"	v
result	./runtime/syscall_windows_test.go	/^	type result struct {$/;"	t
result	./text/template/parse/parse_test.go	/^		var result string$/;"	v
resultFromStatement	./database/sql/sql.go	/^func resultFromStatement(ds driverStmt, args ...interface{}) (Result, error) {$/;"	f
results	./cmd/vet/method.go	/^	var results []ast.Expr$/;"	v
results	./go/internal/gcimporter/gcimporter.go	/^	var results []*types.Var$/;"	v
resumecheckwidth	./cmd/compile/internal/gc/align.go	/^func resumecheckwidth() {$/;"	f
resvd	./cmd/compile/internal/amd64/gsubr.go	/^var resvd = []int{$/;"	v
resvd	./cmd/compile/internal/arm/gsubr.go	/^var resvd = []int{$/;"	v
resvd	./cmd/compile/internal/arm64/gsubr.go	/^var resvd = []int{$/;"	v
resvd	./cmd/compile/internal/ppc64/gsubr.go	/^var resvd = []int{$/;"	v
resvd	./cmd/compile/internal/x86/gsubr.go	/^var resvd = []int{$/;"	v
ret	./cmd/compile/internal/gc/reflect.go	/^	var ret bool$/;"	v
ret	./cmd/pprof/internal/driver/driver.go	/^	var ret string$/;"	v
ret	./cmd/pprof/internal/report/report.go	/^	var ret int64$/;"	v
ret	./cmd/pprof/internal/report/report.go	/^	var ret string$/;"	v
ret	./crypto/elliptic/p224.go	/^	var ret uint32$/;"	v
ret	./reflect/type.go	/^	var ret []*rtype$/;"	v
ret	./reflect/value.go	/^	var ret []Value$/;"	v
ret	./runtime/mgcsweep.go	/^	var ret uintptr$/;"	v
ret	./runtime/os1_nacl.go	/^	var ret int32$/;"	v
ret	./runtime/race_amd64.s	/^ret:$/;"	l
ret	./runtime/sys_darwin_386.s	/^ret:$/;"	l
ret	./runtime/sys_darwin_arm.s	/^ret:$/;"	l
ret	./runtime/sys_darwin_arm64.s	/^ret:$/;"	l
ret	./runtime/sys_freebsd_386.s	/^ret:$/;"	l
ret	./runtime/sys_nacl_386.s	/^ret:$/;"	l
ret	./runtime/sys_openbsd_386.s	/^ret:$/;"	l
ret	./runtime/sys_windows_386.s	/^ret:$/;"	l
ret	./runtime/sys_windows_amd64.s	/^ret:$/;"	l
ret	./syscall/exec_plan9.go	/^		var ret forkRet$/;"	v
retake	./runtime/proc1.go	/^func retake(now int64) uint32 {$/;"	f
retargs	./cmd/compile/internal/gc/closure.go	/^	var retargs *NodeList$/;"	v
retjmp	./cmd/internal/obj/arm64/obj7.go	/^	var retjmp *obj.LSym$/;"	v
return0	./runtime/stubs.go	/^func return0()$/;"	f
returnCorruptCRC32Zip	./archive/zip/reader_test.go	/^func returnCorruptCRC32Zip() (r io.ReaderAt, size int64) {$/;"	f
returnCorruptNotStreamedZip	./archive/zip/reader_test.go	/^func returnCorruptNotStreamedZip() (r io.ReaderAt, size int64) {$/;"	f
returnEmpty	./reflect/all_test.go	/^func returnEmpty() emptyStruct {$/;"	f
returnInt	./text/template/exec_test.go	/^func returnInt() int {$/;"	f
returnNonEmpty	./reflect/all_test.go	/^func returnNonEmpty(i int) nonEmptyStruct {$/;"	f
returnRecursiveZip	./archive/zip/reader_test.go	/^func returnRecursiveZip() (r io.ReaderAt, size int64) {$/;"	f
return_y	./math/big/arith_arm64.s	/^return_y: \/\/ z is empty; copy y to c$/;"	l
returnbyte	./cmd/vet/testdata/asm.go	/^func returnbyte(x int) byte$/;"	f
returned	./reflect/all_test.go	/^		t.Errorf("constructed func returned %f, want %f", f, 3.14)$/;"	f
returnint	./cmd/vet/testdata/asm.go	/^func returnint() int$/;"	f
returnintmissing	./cmd/vet/testdata/asm.go	/^func returnintmissing() int$/;"	f
returnnamed	./cmd/vet/testdata/asm.go	/^func returnnamed(x byte) (r1 int, r2 int16, r3 string, r4 byte)$/;"	f
returnsfromheap	./cmd/compile/internal/gc/walk.go	/^func returnsfromheap(argin **Type) *NodeList {$/;"	f
retvar	./cmd/compile/internal/gc/inl.go	/^func retvar(t *Type, i int) *Node {$/;"	f
rety	./math/big/arith_arm64.s	/^rety: \/\/ z is empty; copy y to c$/;"	l
reuse	./regexp/syntax/parse.go	/^func (p *parser) reuse(re *Regexp) {$/;"	f
reusePackage	./cmd/go/pkg.go	/^func reusePackage(p *Package, stk *importStack) *Package {$/;"	f
revAddrTests	./net/lookup_test.go	/^var revAddrTests = []struct {$/;"	v
reverse	./sort/sort.go	/^type reverse struct {$/;"	t
reverseBits	./compress/flate/reverse_bits.go	/^func reverseBits(number uint16, bitLength byte) uint16 {$/;"	f
reverseBits	./crypto/cipher/gcm.go	/^func reverseBits(i int) int {$/;"	f
reverseBitsInAByte	./crypto/x509/x509.go	/^func reverseBitsInAByte(in byte) byte {$/;"	f
reverseBitsTest	./compress/flate/deflate_test.go	/^type reverseBitsTest struct {$/;"	t
reverseBitsTests	./compress/flate/deflate_test.go	/^var reverseBitsTests = []*reverseBitsTest{$/;"	v
reverseByte	./compress/flate/gen.go	/^var reverseByte [256]byte$/;"	v
reverseByte	./compress/flate/reverse_bits.go	/^var reverseByte = [256]byte{$/;"	v
reverseByte	./syscall/unzip_nacl.go	/^var reverseByte = [256]byte{$/;"	v
reverseUint16	./compress/flate/reverse_bits.go	/^func reverseUint16(v uint16) uint16 {$/;"	f
reverseaddr	./net/dnsclient.go	/^func reverseaddr(addr string) (arpa string, err error) {$/;"	f
reverselist	./cmd/link/internal/ld/dwarf.go	/^func reverselist(list **DWDie) {$/;"	f
reversepostorder	./cmd/compile/internal/gc/plive.go	/^func reversepostorder(root *BasicBlock, rpo *int32) {$/;"	f
reversetree	./cmd/link/internal/ld/dwarf.go	/^func reversetree(list **DWDie) {$/;"	f
revise	./runtime/mgc.go	/^func (c *gcControllerState) revise() {$/;"	f
rewindmorestack	./runtime/sys_arm.go	/^func rewindmorestack(buf *gobuf) {$/;"	f
rewindmorestack	./runtime/sys_arm64.go	/^func rewindmorestack(buf *gobuf) {$/;"	f
rewindmorestack	./runtime/sys_ppc64x.go	/^func rewindmorestack(buf *gobuf) {$/;"	f
rewindmorestack	./runtime/sys_x86.go	/^func rewindmorestack(buf *gobuf) {$/;"	f
rewriteFile	./cmd/gofmt/rewrite.go	/^func rewriteFile(pattern, replace ast.Expr, p *ast.File) *ast.File {$/;"	f
rewriteImport	./cmd/fix/fix.go	/^func rewriteImport(f *ast.File, oldPath, newPath string) (rewrote bool) {$/;"	f
rewriteImportFn	./cmd/fix/import_test.go	/^func rewriteImportFn(oldnew ...string) func(*ast.File) bool {$/;"	f
rewriteRef	./cmd/cgo/gcc.go	/^func (p *Package) rewriteRef(f *File) {$/;"	f
rewriteUses	./cmd/fix/fix.go	/^func rewriteUses(x *ast.Ident, f, fnot func(token.Pos) ast.Expr, scope []ast.Stmt) {$/;"	f
rewriteVal	./cmd/gofmt/rewrite.go	/^	var rewriteVal func(val reflect.Value) reflect.Value$/;"	v
rexPrefixes	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func rexPrefixes(try func([]byte)) {$/;"	f
rf	./cmd/internal/obj/arm64/asm7.go	/^		var rf int$/;"	v
rfc1423Algo	./crypto/x509/pem_decrypt.go	/^type rfc1423Algo struct {$/;"	t
rfc1423Algos	./crypto/x509/pem_decrypt.go	/^var rfc1423Algos = []rfc1423Algo{{$/;"	v
rfc2047Decoder	./net/mail/message.go	/^var rfc2047Decoder = mime.WordDecoder{$/;"	v
rfc3339Formats	./time/format_test.go	/^var rfc3339Formats = []TimeFormatTest{$/;"	v
rfc6724policyTable	./net/addrselect.go	/^var rfc6724policyTable = policyTable{$/;"	v
rflags	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rflags() uint64  { return c.regs().rflags }$/;"	f
rflags	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rflags() uint64  { return c.regs().mc_rflags }$/;"	f
rflags	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rflags() uint64  { return c.regs().mc_rflags }$/;"	f
rflags	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rflags() uint64  { return c.regs().eflags }$/;"	f
rflags	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rflags() uint64  { return uint64(c.regs().rflags) }$/;"	f
rflags	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rflags() uint64  { return c.regs().__gregs[_REG_RFLAGS] }$/;"	f
rflags	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rflags() uint64  { return c.regs().sc_rflags }$/;"	f
rflags	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rflags() uint64  { return uint64(c.regs().gregs[_REG_RFLAGS]) }$/;"	f
rfork	./runtime/os_plan9.go	/^func rfork(flags int32) int32$/;"	f
rg	./runtime/netpoll.go	/^	var rg *g$/;"	v
rg	./runtime/netpoll.go	/^	var rg, wg *g$/;"	v
rg	./runtime/netpoll.go	/^	var rg, wg guintptr$/;"	v
rgb	./cmd/cover/html.go	/^func rgb(n int) string {$/;"	f
rgba64Model	./image/color/color.go	/^func rgba64Model(c Color) Color {$/;"	f
rgbaModel	./image/color/color.go	/^func rgbaModel(c Color) Color {$/;"	f
rgbaToYCbCr	./image/jpeg/writer.go	/^func rgbaToYCbCr(m *image.RGBA, p image.Point, yBlock, cbBlock, crBlock *block) {$/;"	f
rgp	./cmd/compile/internal/gc/reg.go	/^	var rgp *Rgn$/;"	v
rgz	./net/http/transport_test.go	/^var rgz = []byte{$/;"	v
rhat	./cmd/compile/internal/big/nat.go	/^			var rhat Word$/;"	v
rhat	./math/big/nat.go	/^			var rhat Word$/;"	v
rhs	./go/printer/testdata/parser.go	/^			var rhs ast.Expr$/;"	v
rhs	./go/types/stmt.go	/^			var rhs ast.Expr \/\/ rhs of RecvStmt, or nil$/;"	v
rhs	./go/types/stmt.go	/^		var rhs ast.Expr$/;"	v
ri	./cmd/compile/internal/gc/walk.go	/^		var ri *Node$/;"	v
ri	./cmd/link/internal/ld/elf.go	/^	var ri int$/;"	v
ri	./cmd/link/internal/ld/macho.go	/^	var ri int$/;"	v
ri	./cmd/link/internal/ld/pe.go	/^	var ri int$/;"	v
right	./cmd/compile/internal/big/intconv.go	/^	var right int  \/\/ space characters to right of digits for left justification ("%-8d")$/;"	v
right	./debug/dwarf/testdata/typedef.c	/^	struct tree *left, *right;$/;"	m	struct:tree	typeref:struct:tree::	file:
right	./math/big/intconv.go	/^	var right int  \/\/ space characters to right of digits for left justification ("%-8d")$/;"	v
rightShift	./strconv/decimal.go	/^func rightShift(a *decimal, k uint) {$/;"	f
rightShiftTests	./cmd/compile/internal/big/nat_test.go	/^var rightShiftTests = []shiftTest{$/;"	v
rightShiftTests	./math/big/nat_test.go	/^var rightShiftTests = []shiftTest{$/;"	v
rip	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rip() uint64     { return c.regs().rip }$/;"	f
rip	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rip() uint64     { return c.regs().mc_rip }$/;"	f
rip	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rip() uint64     { return c.regs().mc_rip }$/;"	f
rip	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rip() uint64     { return c.regs().rip }$/;"	f
rip	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rip() uint64     { return c.regs().rip }$/;"	f
rip	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rip() uint64     { return c.regs().__gregs[_REG_RIP] }$/;"	f
rip	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rip() uint64     { return c.regs().sc_rip }$/;"	f
rip	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rip() uint64     { return uint64(c.regs().gregs[_REG_RIP]) }$/;"	f
rl	./cmd/compile/internal/gc/walk.go	/^			var rl *NodeList$/;"	v
rl	./sync/rwmutex_test.go	/^	var rl Locker$/;"	v
rleBuffer	./archive/zip/zip_test.go	/^type rleBuffer struct {$/;"	t
rlen	./cmd/compile/internal/gc/cgen.go	/^	var rlen Node$/;"	v
rlimit	./runtime/os2_linux.go	/^type rlimit struct {$/;"	t
rlimit	./syscall/syscall_unix_test.go	/^	var rlimit, zero syscall.Rlimit$/;"	v
rlimit32	./syscall/syscall_linux_386.go	/^type rlimit32 struct {$/;"	t
rlimit32	./syscall/syscall_linux_arm.go	/^type rlimit32 struct {$/;"	t
rlines	./cmd/yacc/yacc.go	/^var rlines []int   \/\/ line number for this rule$/;"	v
rlo	./runtime/vlrt.go	/^	var rlo uint32$/;"	v
rlocker	./sync/rwmutex.go	/^type rlocker RWMutex$/;"	t
rm1	./cmd/compile/internal/gc/cplx.go	/^	var rm1 Node$/;"	v
rm2	./cmd/compile/internal/gc/cplx.go	/^	var rm2 Node$/;"	v
rmach_semcreatemsg	./runtime/os1_darwin.go	/^type rmach_semcreatemsg struct {$/;"	t
rmtemp	./cmd/link/internal/ld/lib.go	/^func rmtemp() {$/;"	f
rnd	./cmd/compile/internal/big/arith_test.go	/^var rnd = rand.New(rand.NewSource(0))$/;"	v
rnd	./math/big/arith_test.go	/^var rnd = rand.New(rand.NewSource(0))$/;"	v
rndNat	./cmd/compile/internal/big/nat_test.go	/^func rndNat(n int) nat {$/;"	f
rndNat	./math/big/nat_test.go	/^func rndNat(n int) nat {$/;"	f
rndV	./cmd/compile/internal/big/arith_test.go	/^func rndV(n int) []Word {$/;"	f
rndV	./math/big/arith_test.go	/^func rndV(n int) []Word {$/;"	f
rndW	./cmd/compile/internal/big/arith_test.go	/^func rndW() Word {$/;"	f
rndW	./math/big/arith_test.go	/^func rndW() Word {$/;"	f
rng	./math/rand/rand.go	/^	var rng rngSource$/;"	v
rngReader	./crypto/rand/rand_windows.go	/^type rngReader struct {$/;"	t
rngSource	./math/rand/rng.go	/^type rngSource struct {$/;"	t
rnops	./cmd/compile/internal/amd64/peep.go	/^func rnops(r *gc.Flow) *gc.Flow {$/;"	f
rnops	./cmd/compile/internal/x86/peep.go	/^func rnops(r *gc.Flow) *gc.Flow {$/;"	f
robotsTxtHandler	./net/http/client_test.go	/^var robotsTxtHandler = HandlerFunc(func(w ResponseWriter, r *Request) {$/;"	v
rodata	./cmd/link/internal/ld/data.go	/^	var rodata *Section$/;"	v
rodata	./cmd/vet/testdata/asm.go	/^func rodata(x int)$/;"	f
root	./cmd/pprof/internal/svg/svgpan.go	/^var root = document.documentElement;$/;"	v
rot13	./bytes/bytes_test.go	/^func rot13(r rune) rune {$/;"	f
rot13	./strings/strings_test.go	/^func rot13(r rune) rune {$/;"	f
rot13Reader	./bufio/bufio_test.go	/^type rot13Reader struct {$/;"	t
rotate	./crypto/md5/gen.go	/^func rotate() string {$/;"	f
rotate	./sort/sort.go	/^func rotate(data Interface, a, m, b int) {$/;"	f
rotl_15	./runtime/hash32.go	/^func rotl_15(x uint32) uint32 {$/;"	f
rotl_31	./runtime/hash64.go	/^func rotl_31(x uint64) uint64 {$/;"	f
rotw	./crypto/aes/block.go	/^func rotw(w uint32) uint32 { return w<<8 | w>>24 }$/;"	f
round	./cmd/compile/internal/big/bits_test.go	/^func (x Bits) round(prec uint, mode RoundingMode) *Float {$/;"	f
round	./cmd/compile/internal/big/decimal.go	/^func (x *decimal) round(n int) {$/;"	f
round	./cmd/compile/internal/big/float.go	/^func (z *Float) round(sbit uint) {$/;"	f
round	./math/big/bits_test.go	/^func (x Bits) round(prec uint, mode RoundingMode) *Float {$/;"	f
round	./math/big/decimal.go	/^func (x *decimal) round(n int) {$/;"	f
round	./math/big/float.go	/^func (z *Float) round(sbit uint) {$/;"	f
round	./runtime/stubs.go	/^func round(n, a uintptr) uintptr {$/;"	f
round2	./runtime/stack1.go	/^func round2(x int32) int32 {$/;"	f
roundDown	./cmd/compile/internal/big/decimal.go	/^func (x *decimal) roundDown(n int) {$/;"	f
roundDown	./math/big/decimal.go	/^func (x *decimal) roundDown(n int) {$/;"	f
roundDown10	./go/doc/testdata/benchmark.go	/^func roundDown10(n int) int {$/;"	f
roundDown10	./testing/benchmark.go	/^func roundDown10(n int) int {$/;"	f
roundDownTests	./testing/benchmark_test.go	/^var roundDownTests = []struct {$/;"	v
roundFloat32	./go/types/expr.go	/^func roundFloat32(x constant.Value) constant.Value {$/;"	f
roundFloat64	./go/types/expr.go	/^func roundFloat64(x constant.Value) constant.Value {$/;"	f
roundIntTest	./strconv/decimal_test.go	/^type roundIntTest struct {$/;"	t
roundShortest	./strconv/ftoa.go	/^func roundShortest(d *decimal, mant uint64, exp int, flt *floatInfo) {$/;"	f
roundTest	./strconv/decimal_test.go	/^type roundTest struct {$/;"	t
roundTrip	./net/http/transport.go	/^func (pc *persistConn) roundTrip(req *transportRequest) (resp *Response, err error) {$/;"	f
roundTripCases	./strconv/atof_test.go	/^var roundTripCases = []struct {$/;"	v
roundTripParseTest	./mime/multipart/multipart_test.go	/^func roundTripParseTest() parseTest {$/;"	f
roundTripTests	./net/http/transport_test.go	/^var roundTripTests = []struct {$/;"	v
roundUp	./cmd/compile/internal/big/decimal.go	/^func (x *decimal) roundUp(n int) {$/;"	f
roundUp	./crypto/tls/conn.go	/^func roundUp(a, b int) int {$/;"	f
roundUp	./go/doc/testdata/benchmark.go	/^func roundUp(n int) int {$/;"	f
roundUp	./math/big/decimal.go	/^func (x *decimal) roundUp(n int) {$/;"	f
roundUp	./testing/benchmark.go	/^func roundUp(n int) int {$/;"	f
roundUpTests	./testing/benchmark_test.go	/^var roundUpTests = []struct {$/;"	v
roundinttests	./strconv/decimal_test.go	/^var roundinttests = []roundIntTest{$/;"	v
roundtests	./strconv/decimal_test.go	/^var roundtests = []roundTest{$/;"	v
roundupsize	./runtime/msize.go	/^func roundupsize(size uintptr) uintptr {$/;"	f
routeStats	./net/interface_test.go	/^type routeStats struct {$/;"	t
row	./database/sql/fakedb_test.go	/^type row struct {$/;"	t
row	./database/sql/sql_test.go	/^	type row struct {$/;"	t
rows	./database/sql/sql.go	/^	var rows *Rows$/;"	v
rowsCloseHook	./database/sql/sql.go	/^var rowsCloseHook func(*Rows, *error)$/;"	v
rowsCursor	./database/sql/fakedb_test.go	/^type rowsCursor struct {$/;"	t
rowsCursorNextHook	./database/sql/fakedb_test.go	/^var rowsCursorNextHook func(dest []driver.Value) error$/;"	v
rowsi	./database/sql/sql.go	/^	var rowsi driver.Rows$/;"	v
rowsiFromStatement	./database/sql/sql.go	/^func rowsiFromStatement(ds driverStmt, args ...interface{}) (driver.Rows, error) {$/;"	f
rp	./archive/zip/zip_test.go	/^	var rp *repeatedByte$/;"	v
rp	./cmd/link/internal/ld/ldelf.go	/^	var rp *Reloc$/;"	v
rp	./cmd/link/internal/ld/ldmacho.go	/^	var rp *Reloc$/;"	v
rp	./cmd/link/internal/ld/ldpe.go	/^	var rp *Reloc$/;"	v
rpc	./runtime/extern.go	/^	var rpc [2]uintptr$/;"	v
rpi	./cmd/link/internal/ld/ldmacho.go	/^	var rpi int$/;"	v
rpolca	./cmd/compile/internal/gc/popt.go	/^func rpolca(idom []int32, rpo1 int32, rpo2 int32) int32 {$/;"	f
rppc64Strings	./debug/elf/elf.go	/^var rppc64Strings = []intName{$/;"	v
rppcStrings	./debug/elf/elf.go	/^var rppcStrings = []intName{$/;"	v
rr	./cmd/compile/internal/gc/sinit.go	/^		var rr *Node$/;"	v
rr	./cmd/compile/internal/x86/cgen64.go	/^	var rr gc.Node$/;"	v
rr	./runtime/rt0_linux_arm.s	/^rr:$/;"	l
rr_mk	./net/dnsmsg.go	/^var rr_mk = map[int]func() dnsRR{$/;"	v
rs	./cmd/link/internal/ld/data.go	/^	var rs *LSym$/;"	v
rsa	./net/fd_unix.go	/^	var rsa syscall.Sockaddr$/;"	v
rsa	./net/sock_posix.go	/^	var rsa syscall.Sockaddr$/;"	v
rsa	./syscall/syscall_bsd.go	/^	var rsa RawSockaddrAny$/;"	v
rsa	./syscall/syscall_freebsd.go	/^	var rsa RawSockaddrAny$/;"	v
rsa	./syscall/syscall_linux.go	/^	var rsa RawSockaddrAny$/;"	v
rsa	./syscall/syscall_solaris.go	/^	var rsa RawSockaddrAny$/;"	v
rsa	./syscall/syscall_unix.go	/^	var rsa RawSockaddrAny$/;"	v
rsa	./syscall/syscall_windows.go	/^	var rsa RawSockaddrAny$/;"	v
rsaAlignOf	./syscall/route_bsd.go	/^func rsaAlignOf(salen int) int {$/;"	f
rsaAvail	./crypto/tls/handshake_client.go	/^		var rsaAvail, ecdsaAvail bool$/;"	v
rsaCertPEM	./crypto/tls/tls_test.go	/^var rsaCertPEM = `-----BEGIN CERTIFICATE-----$/;"	v
rsaKA	./crypto/tls/cipher_suites.go	/^func rsaKA(version uint16) keyAgreement {$/;"	f
rsaKeyAgreement	./crypto/tls/key_agreement.go	/^type rsaKeyAgreement struct{}$/;"	t
rsaKeyPEM	./crypto/tls/tls_test.go	/^var rsaKeyPEM = `-----BEGIN RSA PRIVATE KEY-----$/;"	v
rsaPrivateKey	./crypto/rsa/pkcs1v15_test.go	/^var rsaPrivateKey = &PrivateKey{$/;"	v
rsaPrivateKey	./crypto/x509/x509_test.go	/^var rsaPrivateKey = &rsa.PrivateKey{$/;"	v
rsaPublicKey	./crypto/x509/pkcs1.go	/^type rsaPublicKey struct {$/;"	t
rsect	./cmd/link/internal/ld/ldelf.go	/^	var rsect *ElfSect$/;"	v
rsect	./cmd/link/internal/ld/ldpe.go	/^	var rsect *PeSect$/;"	v
rselect	./reflect/value.go	/^func rselect([]runtimeSelect) (chosen int, recvOK bool)$/;"	f
rshTests	./cmd/compile/internal/big/int_test.go	/^var rshTests = []intShiftTest{$/;"	v
rshTests	./math/big/int_test.go	/^var rshTests = []intShiftTest{$/;"	v
rshVW	./cmd/compile/internal/big/arith_test.go	/^var rshVW = []argVW{$/;"	v
rshVW	./math/big/arith_test.go	/^var rshVW = []argVW{$/;"	v
rsi	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rsi() uint64     { return c.regs().rsi }$/;"	f
rsi	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rsi() uint64     { return c.regs().mc_rsi }$/;"	f
rsi	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rsi() uint64     { return c.regs().mc_rsi }$/;"	f
rsi	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rsi() uint64     { return c.regs().rsi }$/;"	f
rsi	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rsi() uint64     { return c.regs().rsi }$/;"	f
rsi	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rsi() uint64     { return c.regs().__gregs[_REG_RSI] }$/;"	f
rsi	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rsi() uint64     { return c.regs().sc_rsi }$/;"	f
rsi	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rsi() uint64     { return uint64(c.regs().gregs[_REG_RSI]) }$/;"	f
rsname	./cmd/link/internal/ld/data.go	/^	var rsname string$/;"	v
rsp	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) rsp() uint64     { return c.regs().rsp }$/;"	f
rsp	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) rsp() uint64     { return c.regs().mc_rsp }$/;"	f
rsp	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) rsp() uint64     { return c.regs().mc_rsp }$/;"	f
rsp	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) rsp() uint64     { return c.regs().rsp }$/;"	f
rsp	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) rsp() uint64     { return c.regs().rsp }$/;"	f
rsp	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) rsp() uint64     { return c.regs().__gregs[_REG_RSP] }$/;"	f
rsp	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) rsp() uint64     { return c.regs().sc_rsp }$/;"	f
rsp	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) rsp() uint64     { return uint64(c.regs().gregs[_REG_RSP]) }$/;"	f
rsparcStrings	./debug/elf/elf.go	/^var rsparcStrings = []intName{$/;"	v
rsrcsym	./cmd/link/internal/ld/pe.go	/^var rsrcsym *LSym$/;"	v
rsrv	./net/fd_windows.go	/^var rsrv, wsrv *ioSrv$/;"	v
rt	./cmd/compile/internal/gc/walk.go	/^	var rt *Type$/;"	v
rt	./encoding/gob/type.go	/^\/\/ newTypeObject allocates a gobType for the reflection type rt.$/;"	t
rt	./encoding/gob/type.go	/^\/\/ userType returns, and saves, the information associated with user-provided type rt.$/;"	t
rt	./encoding/gob/type.go	/^\/\/ validType returns, and saves, the information associated with user-provided type rt.$/;"	t
rt	./net/http/transport.go	/^		var rt RoundTripper$/;"	v
rt0	./encoding/gob/codec_test.go	/^	var rt0 RT0$/;"	v
rt0_go	./runtime/stubs.go	/^func rt0_go()$/;"	f
rt1	./encoding/gob/codec_test.go	/^	var rt1 RT1$/;"	v
rt_sigaction	./runtime/os_linux.go	/^func rt_sigaction(sig uintptr, new, old *sigactiont, size uintptr) int32$/;"	f
rtaAlignOf	./syscall/netlink_linux.go	/^func rtaAlignOf(attrlen int) int {$/;"	f
rtprio	./runtime/defs_dragonfly_amd64.go	/^type rtprio struct {$/;"	t
rtprio	./runtime/defs_freebsd_386.go	/^type rtprio struct {$/;"	t
rtprio	./runtime/defs_freebsd_amd64.go	/^type rtprio struct {$/;"	t
rtprio	./runtime/defs_freebsd_arm.go	/^type rtprio struct {$/;"	t
rtsigprocmask	./runtime/os_linux.go	/^func rtsigprocmask(sig uint32, new, old *sigset, size int32)$/;"	f
rtype	./reflect/type.go	/^type rtype struct {$/;"	t
rubyTests	./time/format_test.go	/^var rubyTests = []ParseTest{$/;"	v
run	./cmd/cgo/util.go	/^func run(stdin []byte, argv []string) (stdout, stderr []byte, ok bool) {$/;"	f
run	./cmd/compile/internal/gc/swt.go	/^		var run int$/;"	v
run	./cmd/cover/cover_test.go	/^func run(c *exec.Cmd, t *testing.T) {$/;"	f
run	./cmd/dist/test.go	/^func (t *tester) run() {$/;"	f
run	./cmd/dist/util.go	/^func run(dir string, mode int, cmd ...string) string {$/;"	f
run	./cmd/doc/doc_test.go	/^func run(c *exec.Cmd, t *testing.T) []byte {$/;"	f
run	./cmd/go/generate.go	/^func (g *Generator) run() (ok bool) {$/;"	f
run	./cmd/go/go_test.go	/^func (tg *testgoData) run(args ...string) {$/;"	f
run	./cmd/go/main.go	/^func run(cmdargs ...interface{}) {$/;"	f
run	./cmd/go/vcs.go	/^func (v *vcsCmd) run(dir string, cmd string, keyval ...string) error {$/;"	f
run	./cmd/vet/vet_test.go	/^func run(c *exec.Cmd, t *testing.T) bool {$/;"	f
run	./crypto/tls/handshake_client_test.go	/^func (test *clientTest) run(t *testing.T, write bool) {$/;"	f
run	./crypto/tls/handshake_server_test.go	/^func (test *serverTest) run(t *testing.T, write bool) {$/;"	f
run	./go/doc/testdata/benchmark.go	/^func (b *B) run() BenchmarkResult {$/;"	f
run	./net/http/cookiejar/jar_test.go	/^func (test jarTest) run(t *testing.T, jar *Jar) {$/;"	f
run	./os/exec/lp_windows_test.go	/^func (test commandTest) run(t *testing.T, rootDir, printpathExe string) {$/;"	f
run	./os/exec/lp_windows_test.go	/^func (test lookPathTest) run(t *testing.T, tmpdir, printpathExe string) {$/;"	f
run	./os/os_test.go	/^func run(t *testing.T, cmd []string) string {$/;"	f
run	./regexp/exec_test.go	/^var run = []func(*Regexp, *Regexp, string) ([]int, string){$/;"	v
run	./runtime/syscall_windows_test.go	/^func (test *cbTest) run(t *testing.T, dllpath string) {$/;"	f
run	./sync/once_test.go	/^func run(t *testing.T, once *Once, o *one, c chan bool) {$/;"	f
run	./testing/benchmark.go	/^func (b *B) run() BenchmarkResult {$/;"	f
run	./text/template/parse/lex.go	/^func (l *lexer) run() {$/;"	f
run1	./cmd/go/vcs.go	/^func (v *vcsCmd) run1(dir string, cmdline string, keyval []string, verbose bool) ([]byte, error) {$/;"	f
runAddr2Line	./cmd/addr2line/addr2line_test.go	/^func runAddr2Line(t *testing.T, exepath, addr string) (funcname, path, lineno string) {$/;"	f
runBadTest	./cmd/asm/internal/asm/expr_test.go	/^func runBadTest(i int, test badExprTest, t *testing.T) (err error) {$/;"	f
runCgiTest	./net/http/cgi/host_test.go	/^func runCgiTest(t *testing.T, h *Handler, httpreq string, expectedMap map[string]string) *httptest.ResponseRecorder {$/;"	f
runClean	./cmd/go/clean.go	/^func runClean(cmd *Command, args []string) {$/;"	f
runClientTestForVersion	./crypto/tls/handshake_client_test.go	/^func runClientTestForVersion(t *testing.T, template *clientTest, prefix, option string) {$/;"	f
runClientTestTLS10	./crypto/tls/handshake_client_test.go	/^func runClientTestTLS10(t *testing.T, template *clientTest) {$/;"	f
runClientTestTLS11	./crypto/tls/handshake_client_test.go	/^func runClientTestTLS11(t *testing.T, template *clientTest) {$/;"	f
runClientTestTLS12	./crypto/tls/handshake_client_test.go	/^func runClientTestTLS12(t *testing.T, template *clientTest) {$/;"	f
runDoc	./cmd/go/doc.go	/^func runDoc(cmd *Command, args []string) {$/;"	f
runEnv	./cmd/go/env.go	/^func runEnv(cmd *Command, args []string) {$/;"	f
runExample	./testing/example.go	/^func runExample(eg InternalExample) (ok bool) {$/;"	f
runFail	./cmd/go/go_test.go	/^func (tg *testgoData) runFail(args ...string) {$/;"	f
runFix	./cmd/go/fix.go	/^func runFix(cmd *Command, args []string) {$/;"	f
runFmt	./cmd/go/fmt.go	/^func runFmt(cmd *Command, args []string) {$/;"	f
runFull	./regexp/exec_test.go	/^func runFull(re, refull *Regexp, text string) ([]int, string) {$/;"	f
runFullLongest	./regexp/exec_test.go	/^func runFullLongest(re, refull *Regexp, text string) ([]int, string) {$/;"	f
runGCD	./cmd/compile/internal/big/gcd_test.go	/^func runGCD(b *testing.B, aSize, bSize uint) {$/;"	f
runGCD	./math/big/gcd_test.go	/^func runGCD(b *testing.B, aSize, bSize uint) {$/;"	f
runGCProg	./runtime/mbitmap.go	/^func runGCProg(prog, trailer, dst *byte, size int) uintptr {$/;"	f
runGcc	./cmd/cgo/gcc.go	/^func runGcc(stdin []byte, args []string) (string, string) {$/;"	f
runGenerate	./cmd/go/generate.go	/^func runGenerate(cmd *Command, args []string) {$/;"	f
runGet	./cmd/go/get.go	/^func runGet(cmd *Command, args []string) {$/;"	f
runGit	./cmd/go/go_test.go	/^func (tg *testgoData) runGit(dir string, args ...string) {$/;"	f
runImporterTest	./go/internal/gccgoimporter/importer_test.go	/^func runImporterTest(t *testing.T, imp Importer, initmap map[*types.Package]InitData, test *importerTest) {$/;"	f
runIndexAnyTests	./bytes/bytes_test.go	/^func runIndexAnyTests(t *testing.T, f func(s []byte, chars string) int, funcName string, testCases []BinOpTest) {$/;"	f
runIndexTests	./bytes/bytes_test.go	/^func runIndexTests(t *testing.T, f func(s, sep []byte) int, funcName string, testCases []BinOpTest) {$/;"	f
runIndexTests	./strings/strings_test.go	/^func runIndexTests(t *testing.T, f func(s, sep string) int, funcName string, testCases []IndexTest) {$/;"	f
runList	./cmd/go/list.go	/^func runList(cmd *Command, args []string) {$/;"	f
runMachine	./cmd/yacc/yacc.go	/^func runMachine(tokens []string) (state, token int) {$/;"	f
runModWTests	./cmd/compile/internal/big/nat_test.go	/^func runModWTests(t *testing.T, tests []modWTest) {$/;"	f
runModWTests	./math/big/nat_test.go	/^func runModWTests(t *testing.T, tests []modWTest) {$/;"	f
runN	./go/doc/testdata/benchmark.go	/^func (b *B) runN(n int) {$/;"	f
runN	./testing/benchmark.go	/^func (b *B) runN(n int) {$/;"	f
runOnFirstRead	./net/http/httputil/reverseproxy.go	/^type runOnFirstRead struct {$/;"	t
runOne	./os/exec/lp_windows_test.go	/^func (test commandTest) runOne(rootDir string, env []string, dir, arg0 string) error {$/;"	f
runOne	./runtime/syscall_windows_test.go	/^func (test *cbTest) runOne(t *testing.T, dll *syscall.DLL, proc string, cb uintptr) {$/;"	f
runOut	./cmd/go/main.go	/^func runOut(dir string, cmdargs ...interface{}) []byte {$/;"	f
runOutput	./cmd/go/vcs.go	/^func (v *vcsCmd) runOutput(dir string, cmd string, keyval ...string) ([]byte, error) {$/;"	f
runParallel	./runtime/atomic_test.go	/^func runParallel(N, iter int, f func()) {$/;"	f
runPartial	./regexp/exec_test.go	/^func runPartial(re, refull *Regexp, text string) ([]int, string) {$/;"	f
runPartialLongest	./regexp/exec_test.go	/^func runPartialLongest(re, refull *Regexp, text string) ([]int, string) {$/;"	f
runPktSyslog	./log/syslog/syslog_test.go	/^func runPktSyslog(c net.PacketConn, done chan<- string) {$/;"	f
runProg	./os/exec/lp_windows_test.go	/^func (test lookPathTest) runProg(t *testing.T, env []string, args ...string) (string, error) {$/;"	f
runProgram	./cmd/go/run.go	/^func (b *builder) runProgram(a *action) error {$/;"	f
runResponseChecks	./net/http/cgi/host_test.go	/^func runResponseChecks(t *testing.T, rw *httptest.ResponseRecorder, expectedMap map[string]string) {$/;"	f
runRun	./cmd/go/run.go	/^func runRun(cmd *Command, args []string) {$/;"	f
runSafePointFn	./runtime/proc1.go	/^func runSafePointFn() {$/;"	f
runSearchWrappers	./sort/search_test.go	/^func runSearchWrappers() {$/;"	f
runSelect	./reflect/all_test.go	/^func runSelect(cases []SelectCase, info []caseInfo) (chosen int, recv Value, recvOK bool, panicErr interface{}) {$/;"	f
runServerTestForVersion	./crypto/tls/handshake_server_test.go	/^func runServerTestForVersion(t *testing.T, template *serverTest, prefix, option string) {$/;"	f
runServerTestSSLv3	./crypto/tls/handshake_server_test.go	/^func runServerTestSSLv3(t *testing.T, template *serverTest) {$/;"	f
runServerTestTLS10	./crypto/tls/handshake_server_test.go	/^func runServerTestTLS10(t *testing.T, template *serverTest) {$/;"	f
runServerTestTLS11	./crypto/tls/handshake_server_test.go	/^func runServerTestTLS11(t *testing.T, template *serverTest) {$/;"	f
runServerTestTLS12	./crypto/tls/handshake_server_test.go	/^func runServerTestTLS12(t *testing.T, template *serverTest) {$/;"	f
runStdin	./cmd/go/run.go	/^func runStdin(cmdline []string) {$/;"	f
runStreamSyslog	./log/syslog/syslog_test.go	/^func runStreamSyslog(l net.Listener, done chan<- string, wg *sync.WaitGroup) {$/;"	f
runStringTests	./bytes/bytes_test.go	/^func runStringTests(t *testing.T, f func([]byte) []byte, funcName string, testCases []StringTest) {$/;"	f
runStringTests	./strings/strings_test.go	/^func runStringTests(t *testing.T, f func(string) string, funcName string, testCases []StringTest) {$/;"	f
runTest	./cmd/go/test.go	/^func (b *builder) runTest(a *action) error {$/;"	f
runTest	./cmd/go/test.go	/^func runTest(cmd *Command, args []string) {$/;"	f
runTest	./cmd/gofmt/gofmt_test.go	/^func runTest(t *testing.T, in, out string) {$/;"	f
runTests	./runtime/race/race_test.go	/^func runTests() ([]byte, error) {$/;"	f
runTool	./cmd/go/tool.go	/^func runTool(cmd *Command, args []string) {$/;"	f
runVerboseOnly	./cmd/go/vcs.go	/^func (v *vcsCmd) runVerboseOnly(dir string, cmd string, keyval ...string) error {$/;"	f
runVersion	./cmd/go/version.go	/^func runVersion(cmd *Command, args []string) {$/;"	f
runVet	./cmd/go/vet.go	/^func runVet(cmd *Command, args []string) {$/;"	f
runVetFiles	./cmd/go/vet.go	/^func runVetFiles(p *Package, files []string) {$/;"	f
runbench	./go/types/self_test.go	/^func runbench(t *testing.T, path string, ignoreFuncBodies bool) {$/;"	f
runcheck	./go/printer/printer_test.go	/^func runcheck(t *testing.T, source, golden string, mode checkMode) {$/;"	f
rune	./builtin/builtin.go	/^type rune rune$/;"	t
rune	./cmd/compile/internal/gc/go.go	/^	Rune bool \/\/ set if syntax indicates default type rune$/;"	t
rune	./regexp/syntax/compile.go	/^func (c *compiler) rune(r []rune, flags Flags) frag {$/;"	f
runeMergeTests	./regexp/onepass_test.go	/^var runeMergeTests = []struct {$/;"	v
runeScanner	./fmt/scan_test.go	/^type runeScanner struct {$/;"	t
runeSlice	./regexp/onepass.go	/^type runeSlice []rune$/;"	t
runeSlice	./unicode/maketables.go	/^type runeSlice []rune$/;"	t
runeTmp	./strconv/quote.go	/^	var runeTmp [utf8.UTFMax]byte$/;"	v
runeUnreader	./fmt/scan.go	/^type runeUnreader interface {$/;"	t
rune_	./cmd/compile/internal/gc/lex.go	/^	var rune_ uint$/;"	v
runecounttests	./unicode/utf8/utf8_test.go	/^var runecounttests = []RuneCountTest{$/;"	v
runelentests	./unicode/utf8/utf8_test.go	/^var runelentests = []RuneLenTest{$/;"	v
runes	./encoding/json/fold_test.go	/^	var runes []rune$/;"	v
runes	./reflect/value.go	/^func (v Value) runes() []rune {$/;"	f
runesEqual	./bytes/bytes_test.go	/^func runesEqual(a, b []rune) bool {$/;"	f
runesEqual	./strings/strings_test.go	/^func runesEqual(a, b []rune) bool {$/;"	f
runetochar	./runtime/rune.go	/^func runetochar(str []byte, r rune) int {$/;"	f
runetype	./cmd/compile/internal/gc/go.go	/^var runetype *Type$/;"	v
runfinq	./runtime/mfinal.go	/^func runfinq() {$/;"	f
runnablePs	./runtime/proc1.go	/^	var runnablePs *p$/;"	v
runningGoroutines	./net/main_test.go	/^func runningGoroutines() []string {$/;"	f
runqempty	./runtime/proc1.go	/^func runqempty(_p_ *p) bool {$/;"	f
runqget	./runtime/proc1.go	/^func runqget(_p_ *p) (gp *g, inheritTime bool) {$/;"	f
runqgrab	./runtime/proc1.go	/^func runqgrab(_p_ *p, batch *[256]*g, batchHead uint32, stealRunNextG bool) uint32 {$/;"	f
runqput	./runtime/proc1.go	/^func runqput(_p_ *p, gp *g, next bool) {$/;"	f
runqputslow	./runtime/proc1.go	/^func runqputslow(_p_ *p, gp *g, h, t uint32) bool {$/;"	f
runqsteal	./runtime/proc1.go	/^func runqsteal(_p_, p2 *p, stealRunNextG bool) *g {$/;"	f
runtimeInitTime	./runtime/proc.go	/^var runtimeInitTime int64$/;"	v
runtimeNano	./net/fd_poll_runtime.go	/^func runtimeNano() int64$/;"	f
runtimeNano	./time/sleep.go	/^func runtimeNano() int64$/;"	f
runtimeProfile	./runtime/pprof/pprof.go	/^type runtimeProfile []runtime.StackRecord$/;"	t
runtimeSelect	./reflect/value.go	/^type runtimeSelect struct {$/;"	t
runtimeSelect	./runtime/select.go	/^type runtimeSelect struct {$/;"	t
runtimeTimer	./syscall/net_nacl.go	/^type runtimeTimer struct {$/;"	t
runtimeTimer	./time/sleep.go	/^type runtimeTimer struct {$/;"	t
runtime_AfterFork	./syscall/exec_bsd.go	/^func runtime_AfterFork()$/;"	f
runtime_AfterFork	./syscall/exec_linux.go	/^func runtime_AfterFork()$/;"	f
runtime_AfterFork	./syscall/exec_solaris.go	/^func runtime_AfterFork()$/;"	f
runtime_BeforeFork	./syscall/exec_bsd.go	/^func runtime_BeforeFork()$/;"	f
runtime_BeforeFork	./syscall/exec_linux.go	/^func runtime_BeforeFork()$/;"	f
runtime_BeforeFork	./syscall/exec_solaris.go	/^func runtime_BeforeFork()$/;"	f
runtime_Semacquire	./net/fd_mutex.go	/^func runtime_Semacquire(sema *uint32)$/;"	f
runtime_Semacquire	./sync/runtime.go	/^func runtime_Semacquire(s *uint32)$/;"	f
runtime_Semrelease	./net/fd_mutex.go	/^func runtime_Semrelease(sema *uint32)$/;"	f
runtime_Semrelease	./sync/runtime.go	/^func runtime_Semrelease(s *uint32)$/;"	f
runtime_Syncsemacquire	./sync/runtime.go	/^func runtime_Syncsemacquire(s *syncSema)$/;"	f
runtime_Syncsemcheck	./sync/runtime.go	/^func runtime_Syncsemcheck(size uintptr)$/;"	f
runtime_Syncsemrelease	./sync/runtime.go	/^func runtime_Syncsemrelease(s *syncSema, n uint32)$/;"	f
runtime_args	./os/proc.go	/^func runtime_args() []string \/\/ in package runtime$/;"	f
runtime_beforeExit	./os/proc.go	/^func runtime_beforeExit() \/\/ implemented in runtime$/;"	f
runtime_canSpin	./sync/runtime.go	/^func runtime_canSpin(i int) bool$/;"	f
runtime_cyclesPerSecond	./runtime/pprof/pprof.go	/^func runtime_cyclesPerSecond() int64$/;"	f
runtime_debug_WriteHeapDump	./runtime/heapdump.go	/^func runtime_debug_WriteHeapDump(fd uintptr) {$/;"	f
runtime_debug_freeOSMemory	./runtime/mheap.go	/^func runtime_debug_freeOSMemory() {$/;"	f
runtime_doSpin	./sync/runtime.go	/^func runtime_doSpin()$/;"	f
runtime_envs	./syscall/env_unix.go	/^func runtime_envs() []string \/\/ in package runtime$/;"	f
runtime_init	./runtime/proc.go	/^func runtime_init()$/;"	f
runtime_init_cond	./runtime/cgo/gcc_libinit.c	/^static pthread_cond_t runtime_init_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
runtime_init_done	./runtime/cgo/gcc_libinit.c	/^static int runtime_init_done;$/;"	v	file:
runtime_init_mu	./runtime/cgo/gcc_libinit.c	/^static pthread_mutex_t runtime_init_mu = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
runtime_pollClose	./net/fd_poll_runtime.go	/^func runtime_pollClose(ctx uintptr)$/;"	f
runtime_pollOpen	./net/fd_poll_runtime.go	/^func runtime_pollOpen(fd uintptr) (uintptr, int)$/;"	f
runtime_pollReset	./net/fd_poll_runtime.go	/^func runtime_pollReset(ctx uintptr, mode int) int$/;"	f
runtime_pollServerInit	./net/fd_poll_runtime.go	/^func runtime_pollServerInit()$/;"	f
runtime_pollSetDeadline	./net/fd_poll_runtime.go	/^func runtime_pollSetDeadline(ctx uintptr, d int64, mode int)$/;"	f
runtime_pollUnblock	./net/fd_poll_runtime.go	/^func runtime_pollUnblock(ctx uintptr)$/;"	f
runtime_pollWait	./net/fd_poll_runtime.go	/^func runtime_pollWait(ctx uintptr, mode int) int$/;"	f
runtime_pollWaitCanceled	./net/fd_poll_runtime.go	/^func runtime_pollWaitCanceled(ctx uintptr, mode int) int$/;"	f
runtime_pprof_runtime_cyclesPerSecond	./runtime/cpuprof.go	/^func runtime_pprof_runtime_cyclesPerSecond() int64 {$/;"	f
runtime_procPin	./sync/atomic/value.go	/^func runtime_procPin()$/;"	f
runtime_procPin	./sync/pool.go	/^func runtime_procPin() int$/;"	f
runtime_procUnpin	./sync/atomic/value.go	/^func runtime_procUnpin()$/;"	f
runtime_procUnpin	./sync/pool.go	/^func runtime_procUnpin()$/;"	f
runtime_registerPoolCleanup	./sync/pool.go	/^func runtime_registerPoolCleanup(cleanup func())$/;"	f
rusage	./os/exec_unix.go	/^	var rusage syscall.Rusage$/;"	v
rv	./cmd/compile/internal/gc/const.go	/^	var rv Val$/;"	v
rv	./os/user/lookup_unix.go	/^	var rv C.int$/;"	v
rvFloats	./text/template/exec.go	/^type rvFloats struct{ rvs }$/;"	t
rvInts	./text/template/exec.go	/^type rvInts struct{ rvs }$/;"	t
rvStrings	./text/template/exec.go	/^type rvStrings struct{ rvs }$/;"	t
rvUints	./text/template/exec.go	/^type rvUints struct{ rvs }$/;"	t
rvs	./text/template/exec.go	/^type rvs []reflect.Value$/;"	t
rwTestConn	./net/http/serve_test.go	/^type rwTestConn struct {$/;"	t
rwm	./sync/rwmutex_test.go	/^		var rwm PaddedRWMutex$/;"	v
rwm	./sync/rwmutex_test.go	/^	var rwm RWMutex$/;"	v
rx	./cmd/compile/internal/big/int_test.go	/^		var rx Int$/;"	v
rx	./cmd/compile/internal/big/rat_test.go	/^			var rx Rat$/;"	v
rx	./cmd/compile/internal/big/rat_test.go	/^		var rx Rat$/;"	v
rx	./math/big/int_test.go	/^		var rx Int$/;"	v
rx	./math/big/rat_test.go	/^			var rx Rat$/;"	v
rx	./math/big/rat_test.go	/^		var rx Rat$/;"	v
rx	./syscall/srpc_nacl.go	/^	var rx *srpc$/;"	v
rx86_64Strings	./debug/elf/elf.go	/^var rx86_64Strings = []intName{$/;"	v
s0	./crypto/aes/block.go	/^	var s0, s1, s2, s3, t0, t1, t2, t3 uint32$/;"	v
s1	./cmd/compile/internal/gc/align.go	/^	var s1 *Sym$/;"	v
s1	./cmd/compile/internal/gc/lex.go	/^	var s1 *Sym$/;"	v
s1	./cmd/compile/internal/gc/subr.go	/^	var s1 *Sym$/;"	v
s1	./cmd/compile/internal/gc/typecheck.go	/^			var s1 *Sym$/;"	v
s1	./cmd/link/internal/ld/ldmacho.go	/^	var s1 *LSym$/;"	v
s1	./cmd/vet/testdata/unsafeptr.go	/^	var s1 *reflect.StringHeader$/;"	v
s1	./encoding/json/decode_test.go	/^	var s1 []byte$/;"	v
s1	./fmt/scan_test.go	/^	var s1, s2 string$/;"	v
s1	./go/parser/parser.go	/^	var s1, s2 ast.Stmt$/;"	v
s1	./go/parser/parser.go	/^	var s1, s2, s3 ast.Stmt$/;"	v
s1	./go/printer/testdata/parser.go	/^	var s1, s2 ast.Stmt$/;"	v
s1	./go/printer/testdata/parser.go	/^	var s1, s2, s3 ast.Stmt$/;"	v
s1a	./go/parser/parser_test.go	/^type s1a struct { int }$/;"	t
s1b	./go/parser/parser_test.go	/^type s1b struct { *int }$/;"	t
s2	./cmd/vet/testdata/unsafeptr.go	/^	var s2 *reflect.SliceHeader$/;"	v
s2	./encoding/binary/binary_test.go	/^	var s2 Struct$/;"	v
s2	./encoding/json/encode_test.go	/^	var s2 StringTag$/;"	v
s2a	./go/parser/parser_test.go	/^type s2a struct { byte; int; s1a }$/;"	t
s2b	./go/parser/parser_test.go	/^type s2b struct { byte; int; *float }$/;"	t
s3	./cmd/vet/testdata/unsafeptr.go	/^	var s3 reflect.StringHeader$/;"	v
s3a	./go/parser/parser_test.go	/^type s3a struct { a, b int; c float }$/;"	t
s3b	./go/parser/parser_test.go	/^type s3b struct { a, b *s3b; c []float }$/;"	t
s4	./cmd/vet/testdata/unsafeptr.go	/^	var s4 reflect.SliceHeader$/;"	v
sBoxResult	./crypto/des/block.go	/^	var sBoxResult uint32$/;"	v
sBoxes	./crypto/des/const.go	/^var sBoxes = [8][4][16]uint8{$/;"	v
sa	./net/iprawsock_posix.go	/^	var sa syscall.Sockaddr$/;"	v
sa	./net/udpsock_posix.go	/^	var sa syscall.Sockaddr$/;"	v
sa	./net/unixsock_posix.go	/^	var sa syscall.Sockaddr$/;"	v
sa	./runtime/os1_darwin.go	/^	var sa sigactiont$/;"	v
sa	./runtime/os1_dragonfly.go	/^	var sa sigactiont$/;"	v
sa	./runtime/os1_freebsd.go	/^	var sa sigactiont$/;"	v
sa	./runtime/os1_linux.go	/^	var sa sigactiont$/;"	v
sa	./runtime/os1_netbsd.go	/^	var sa sigactiont$/;"	v
sa	./runtime/os1_openbsd.go	/^	var sa sigactiont$/;"	v
sa	./runtime/os3_solaris.go	/^	var sa sigactiont$/;"	v
sa	./syscall/syscall_windows.go	/^	var sa *SecurityAttributes$/;"	v
sa	./syscall/syscall_windows.go	/^	var sa SecurityAttributes$/;"	v
safePos	./go/parser/parser.go	/^func (p *parser) safePos(pos token.Pos) (res token.Pos) {$/;"	f
safeString	./encoding/gob/type.go	/^func (a *arrayType) safeString(seen map[typeId]bool) string {$/;"	f
safeString	./encoding/gob/type.go	/^func (g *gobEncoderType) safeString(seen map[typeId]bool) string {$/;"	f
safeString	./encoding/gob/type.go	/^func (m *mapType) safeString(seen map[typeId]bool) string {$/;"	f
safeString	./encoding/gob/type.go	/^func (s *sliceType) safeString(seen map[typeId]bool) string {$/;"	f
safeString	./encoding/gob/type.go	/^func (s *structType) safeString(seen map[typeId]bool) string {$/;"	f
safeString	./encoding/gob/type.go	/^func (t *CommonType) safeString(seen map[typeId]bool) string {$/;"	f
safeXORBytes	./crypto/cipher/xor.go	/^func safeXORBytes(dst, a, b []byte) int {$/;"	f
safeexpr	./cmd/compile/internal/gc/subr.go	/^func safeexpr(n *Node, init **NodeList) *Node {$/;"	f
safemode	./cmd/compile/internal/gc/go.go	/^var safemode int$/;"	v
safety	./unsafe/unsafe.go	/^	Package unsafe contains operations that step around the type safety of Go programs.$/;"	t
salen	./syscall/syscall_bsd.go	/^	var salen _Socklen$/;"	v
salen	./syscall/syscall_linux.go	/^	var salen _Socklen$/;"	v
salen	./syscall/syscall_solaris.go	/^	var salen _Socklen$/;"	v
saltLength	./crypto/rsa/pss.go	/^func (opts *PSSOptions) saltLength() int {$/;"	f
saltLengthCombinations	./crypto/rsa/pss_test.go	/^	var saltLengthCombinations = []struct {$/;"	v
samaddr	./cmd/compile/internal/amd64/gsubr.go	/^func samaddr(f *gc.Node, t *gc.Node) bool {$/;"	f
samaddr	./cmd/compile/internal/arm/gsubr.go	/^func samaddr(f *gc.Node, t *gc.Node) bool {$/;"	f
samaddr	./cmd/compile/internal/x86/gsubr.go	/^func samaddr(f *gc.Node, t *gc.Node) bool {$/;"	f
same	./regexp/exec_test.go	/^func same(x, y []int) bool {$/;"	f
same	./runtime/asm_386.s	/^same:$/;"	l
same	./runtime/asm_amd64p32.s	/^same:$/;"	l
same	./runtime/softfloat64_test.go	/^func same(f, g float64) bool {$/;"	f
same	./time/time_test.go	/^func same(t Time, u *parsedTime) bool {$/;"	f
sameFile	./os/stat_darwin.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_dragonfly.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_freebsd.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_linux.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_nacl.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_netbsd.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_openbsd.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_plan9.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/stat_solaris.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameFile	./os/types_windows.go	/^func sameFile(fs1, fs2 *fileStat) bool {$/;"	f
sameId	./go/types/object.go	/^func (obj *object) sameId(pkg *Package, name string) bool {$/;"	f
sameInts	./reflect/all_test.go	/^func sameInts(x, y []int) bool {$/;"	f
sameSlice	./go/types/api_test.go	/^func sameSlice(a, b []int) bool {$/;"	f
sameaddr	./cmd/compile/internal/amd64/peep.go	/^func sameaddr(a *obj.Addr, v *obj.Addr) bool {$/;"	f
sameaddr	./cmd/compile/internal/arm/peep.go	/^func sameaddr(a *obj.Addr, v *obj.Addr) bool {$/;"	f
sameaddr	./cmd/compile/internal/arm64/peep.go	/^func sameaddr(a *obj.Addr, v *obj.Addr) bool {$/;"	f
sameaddr	./cmd/compile/internal/ppc64/peep.go	/^func sameaddr(a *obj.Addr, v *obj.Addr) bool {$/;"	f
sameaddr	./cmd/compile/internal/x86/peep.go	/^func sameaddr(a *obj.Addr, v *obj.Addr) bool {$/;"	f
sameas	./cmd/compile/internal/gc/align.go	/^	var sameas int$/;"	v
samebytes	./runtime/asm_arm.s	/^samebytes:$/;"	l
samebytes	./runtime/asm_arm64.s	/^samebytes:$/;"	l
samecheap	./cmd/compile/internal/gc/walk.go	/^func samecheap(a *Node, b *Node) bool {$/;"	f
samelist	./cmd/compile/internal/gc/walk.go	/^func samelist(a *NodeList, b *NodeList) bool {$/;"	f
samesafeexpr	./cmd/compile/internal/gc/typecheck.go	/^func samesafeexpr(l *Node, r *Node) bool {$/;"	f
sampleDecoder	./cmd/pprof/internal/profile/encode.go	/^var sampleDecoder = []decoder{$/;"	v
sampleFormat	./cmd/pprof/internal/driver/driver.go	/^func sampleFormat(p *profile.Profile, f *flags) (sampleValueFunc, string, string) {$/;"	f
sampleIndex	./cmd/pprof/internal/driver/driver.go	/^func sampleIndex(p *profile.Profile, flag **bool,$/;"	f
sampleValueFunc	./cmd/pprof/internal/driver/driver.go	/^type sampleValueFunc func(*profile.Sample) int64$/;"	t
samples	./runtime/pprof/pprof_test.go	/^	var samples uintptr$/;"	v
sanitizeCookieName	./net/http/cookie.go	/^func sanitizeCookieName(n string) string {$/;"	f
sanitizeCookiePath	./net/http/cookie.go	/^func sanitizeCookiePath(v string) string {$/;"	f
sanitizeCookieValue	./net/http/cookie.go	/^func sanitizeCookieValue(v string) string {$/;"	f
sanitizeImportPath	./go/printer/nodes.go	/^func sanitizeImportPath(lit *ast.BasicLit) *ast.BasicLit {$/;"	f
sanitizeOrWarn	./net/http/cookie.go	/^func sanitizeOrWarn(fieldName string, valid func(byte) bool, v string) string {$/;"	f
sas	./syscall/route_bsd.go	/^	var sas [RTAX_MAX]Sockaddr$/;"	v
sas	./syscall/route_darwin.go	/^	var sas [RTAX_MAX]Sockaddr$/;"	v
sas	./syscall/route_dragonfly.go	/^	var sas [RTAX_MAX]Sockaddr$/;"	v
sas	./syscall/route_freebsd.go	/^	var sas [RTAX_MAX]Sockaddr$/;"	v
satAdd8	./cmd/compile/internal/gc/esc.go	/^func satAdd8(x, y int8) int8 {$/;"	f
satInc8	./cmd/compile/internal/gc/esc.go	/^func satInc8(x int8) int8 {$/;"	f
satan	./math/atan.go	/^func satan(x float64) float64 {$/;"	f
save	./cmd/compile/internal/gc/align.go	/^	var save Iter$/;"	v
save	./cmd/compile/internal/gc/pgen.go	/^		var save Iter$/;"	v
save	./runtime/proc1.go	/^func save(pc, sp uintptr) {$/;"	f
save	./runtime/runtime2.go	/^\/\/ In one of the few places it is updated by Go code - func save - it must be$/;"	f
saveDot	./cmd/internal/rsc.io/arm/armasm/gnu.go	/^var saveDot = strings.NewReplacer($/;"	v
saveError	./encoding/json/decode.go	/^func (d *decodeState) saveError(err error) {$/;"	f
saveExport	./cmd/cgo/ast.go	/^func (f *File) saveExport(x interface{}, context string) {$/;"	f
saveExport2	./cmd/cgo/ast.go	/^func (f *File) saveExport2(x interface{}, context string) {$/;"	f
saveRef	./cmd/cgo/ast.go	/^func (f *File) saveRef(x interface{}, context string) {$/;"	f
saveSVGToFile	./cmd/pprof/internal/commands/commands.go	/^func saveSVGToFile() PostProcessor {$/;"	f
saved	./crypto/sha1/sha1block_arm.s	/^#define saved	abcde-(8+4*80+4*5)(SP)	\/\/ saved sha1 registers a,b,c,d,e - these must be last (unused?)$/;"	d
savedOffset	./encoding/xml/read.go	/^		var savedOffset int$/;"	v
savedOffset	./encoding/xml/xml.go	/^func (d *Decoder) savedOffset() int {$/;"	f
savedata	./cmd/internal/obj/data.go	/^func savedata(ctxt *Link, s *LSym, p *Prog, pn string) {$/;"	f
saveerrors	./cmd/compile/internal/gc/lex.go	/^func saveerrors() {$/;"	f
saveg	./runtime/mprof.go	/^func saveg(pc, sp uintptr, gp *g, r *StackRecord) {$/;"	f
savel	./cmd/compile/internal/gc/walk.go	/^	var savel Iter$/;"	v
saveorig	./cmd/compile/internal/gc/const.go	/^func saveorig(n *Node) *Node {$/;"	f
saveorignode	./cmd/compile/internal/gc/subr.go	/^func saveorignode(n *Node) {$/;"	f
saver	./cmd/compile/internal/gc/walk.go	/^	var saver Iter$/;"	v
saveregs	./runtime/cgo/gcc_ppc64x.S	/^saveregs:$/;"	l
savet	./cmd/compile/internal/gc/gsubr.go	/^		var savet Iter$/;"	v
savet	./cmd/compile/internal/gc/subr.go	/^	var savet Iter$/;"	v
savet	./cmd/compile/internal/gc/walk.go	/^	var savet Iter$/;"	v
savex	./cmd/compile/internal/amd64/ggen.go	/^func savex(dr int, x *gc.Node, oldx *gc.Node, res *gc.Node, t *gc.Type) {$/;"	f
savex	./cmd/compile/internal/x86/ggen.go	/^func savex(dr int, x *gc.Node, oldx *gc.Node, res *gc.Node, t *gc.Type) {$/;"	f
sbit	./cmd/compile/internal/big/float.go	/^	var sbit uint$/;"	v
sbit	./math/big/float.go	/^	var sbit uint$/;"	v
sbox0	./crypto/aes/const.go	/^var sbox0 = [256]byte{$/;"	v
sbox1	./crypto/aes/const.go	/^var sbox1 = [256]byte{$/;"	v
sbrk	./runtime/mem_plan9.go	/^func sbrk(n uintptr) unsafe.Pointer {$/;"	f
sbuf	./runtime/mgc.go	/^		var sbuf [24]byte$/;"	v
scalarBytes	./crypto/elliptic/p256.go	/^	var scalarBytes []byte$/;"	v
scalarReversed	./crypto/elliptic/p256.go	/^	var scalarReversed [32]byte$/;"	v
scale	./image/jpeg/writer.go	/^	var scale int$/;"	v
scale	./image/jpeg/writer.go	/^func scale(dst *block, src *[4]block) {$/;"	f
scale	./math/cmplx/sqrt.go	/^	var scale float64$/;"	v
scaleDenom	./cmd/compile/internal/big/rat.go	/^func scaleDenom(x *Int, f nat) *Int {$/;"	f
scaleDenom	./math/big/rat.go	/^func scaleDenom(x *Int, f nat) *Int {$/;"	f
scaleHeapSample	./cmd/pprof/internal/profile/legacy_profile.go	/^func scaleHeapSample(count, size, rate int64) (int64, int64) {$/;"	f
scaledValueLabel	./cmd/pprof/internal/report/report.go	/^func scaledValueLabel(value int64, fromUnit, toUnit string) string {$/;"	f
scan	./cmd/compile/internal/big/floatconv.go	/^func (z *Float) scan(r io.ByteScanner, base int) (f *Float, b int, err error) {$/;"	f
scan	./cmd/compile/internal/big/intconv.go	/^func (z *Int) scan(r io.ByteScanner, base int) (*Int, int, error) {$/;"	f
scan	./cmd/compile/internal/big/natconv.go	/^func (z nat) scan(r io.ByteScanner, base int, fracOk bool) (res nat, b, count int, err error) {$/;"	f
scan	./cmd/pack/pack.go	/^func (ar *Archive) scan(action func(*Entry)) {$/;"	f
scan	./encoding/json/decode_test.go	/^		var scan scanner$/;"	v
scan	./encoding/json/indent.go	/^	var scan scanner$/;"	v
scan	./encoding/json/scanner_test.go	/^	var scan scanner$/;"	v
scan	./image/jpeg/scan.go	/^	var scan [maxComponents]struct {$/;"	v
scan	./math/big/floatconv.go	/^func (z *Float) scan(r io.ByteScanner, base int) (f *Float, b int, err error) {$/;"	f
scan	./math/big/intconv.go	/^func (z *Int) scan(r io.ByteScanner, base int) (*Int, int, error) {$/;"	f
scan	./math/big/natconv.go	/^func (z nat) scan(r io.ByteScanner, base int, fracOk bool) (res nat, b, count int, err error) {$/;"	f
scan	./strconv/makeisprint.go	/^func scan(min, max rune) (rang, except []uint32) {$/;"	f
scanBasePrefix	./fmt/scan.go	/^func (s *ss) scanBasePrefix() (base int, digits string, found bool) {$/;"	f
scanBool	./fmt/scan.go	/^func (s *ss) scanBool(verb rune) bool {$/;"	f
scanChar	./text/scanner/scanner.go	/^func (s *Scanner) scanChar() {$/;"	f
scanChunk	./path/filepath/match.go	/^func scanChunk(pattern string) (star bool, chunk, rest string) {$/;"	f
scanChunk	./path/match.go	/^func scanChunk(pattern string) (star bool, chunk, rest string) {$/;"	f
scanComment	./go/scanner/scanner.go	/^func (s *Scanner) scanComment() string {$/;"	f
scanComment	./text/scanner/scanner.go	/^func (s *Scanner) scanComment(ch rune) rune {$/;"	f
scanComplex	./fmt/scan.go	/^func (s *ss) scanComplex(verb rune, n int) complex128 {$/;"	f
scanDigits	./text/scanner/scanner.go	/^func (s *Scanner) scanDigits(ch rune, base, n int) rune {$/;"	f
scanError	./fmt/scan.go	/^type scanError struct {$/;"	t
scanEscape	./go/scanner/scanner.go	/^func (s *Scanner) scanEscape(quote rune) bool {$/;"	f
scanEscape	./text/scanner/scanner.go	/^func (s *Scanner) scanEscape(quote rune) rune {$/;"	f
scanExponent	./cmd/compile/internal/big/ratconv.go	/^func scanExponent(r io.ByteScanner, binExpOk bool) (exp int64, base int, err error) {$/;"	f
scanExponent	./math/big/ratconv.go	/^func scanExponent(r io.ByteScanner, binExpOk bool) (exp int64, base int, err error) {$/;"	f
scanExponent	./text/scanner/scanner.go	/^func (s *Scanner) scanExponent(ch rune) rune {$/;"	f
scanFraction	./text/scanner/scanner.go	/^func (s *Scanner) scanFraction(ch rune) rune {$/;"	f
scanIdentifier	./go/scanner/scanner.go	/^func (s *Scanner) scanIdentifier() string {$/;"	f
scanIdentifier	./text/scanner/scanner.go	/^func (s *Scanner) scanIdentifier() rune {$/;"	f
scanInt	./fmt/scan.go	/^func (s *ss) scanInt(verb rune, bitSize int) int64 {$/;"	f
scanInts	./fmt/scan_test.go	/^func scanInts(r *RecursiveInt, b *bytes.Buffer) (err error) {$/;"	f
scanMantissa	./go/scanner/scanner.go	/^func (s *Scanner) scanMantissa(base int) {$/;"	f
scanMantissa	./text/scanner/scanner.go	/^func (s *Scanner) scanMantissa(ch rune) rune {$/;"	f
scanNum	./cmd/vet/print.go	/^func (s *formatState) scanNum() {$/;"	f
scanNumber	./fmt/scan.go	/^func (s *ss) scanNumber(digits string, haveDigits bool) string {$/;"	f
scanNumber	./go/scanner/scanner.go	/^func (s *Scanner) scanNumber(seenDecimalPoint bool) (token.Token, string) {$/;"	f
scanNumber	./text/scanner/scanner.go	/^func (s *Scanner) scanNumber(ch rune) (rune, rune) {$/;"	f
scanNumber	./text/template/parse/lex.go	/^func (l *lexer) scanNumber() bool {$/;"	f
scanOne	./fmt/scan.go	/^func (s *ss) scanOne(verb rune, arg interface{}) {$/;"	f
scanRawString	./go/scanner/scanner.go	/^func (s *Scanner) scanRawString() string {$/;"	f
scanRawString	./text/scanner/scanner.go	/^func (s *Scanner) scanRawString() {$/;"	f
scanRune	./fmt/scan.go	/^func (s *ss) scanRune(bitSize int) int64 {$/;"	f
scanRune	./go/scanner/scanner.go	/^func (s *Scanner) scanRune() string {$/;"	f
scanSign	./cmd/compile/internal/big/intconv.go	/^func scanSign(r io.ByteScanner) (neg bool, err error) {$/;"	f
scanSign	./math/big/intconv.go	/^func scanSign(r io.ByteScanner) (neg bool, err error) {$/;"	f
scanString	./go/scanner/scanner.go	/^func (s *Scanner) scanString() string {$/;"	f
scanString	./text/scanner/scanner.go	/^func (s *Scanner) scanString(quote rune) (n int) {$/;"	f
scanTests	./bufio/scan_test.go	/^var scanTests = []string{$/;"	v
scanTests	./cmd/compile/internal/big/intconv_test.go	/^var scanTests = []struct {$/;"	v
scanTests	./fmt/scan_test.go	/^var scanTests = []ScanTest{$/;"	v
scanTests	./math/big/intconv_test.go	/^var scanTests = []struct {$/;"	v
scanUint	./fmt/scan.go	/^func (s *ss) scanUint(verb rune, bitSize int) uint64 {$/;"	f
scanWhile	./encoding/json/decode.go	/^func (d *decodeState) scanWhile(op int) int {$/;"	f
scanblock	./runtime/mgcmark.go	/^func scanblock(b0, n0 uintptr, ptrmask *uint8, gcw *gcWork) {$/;"	f
scanfTests	./fmt/scan_test.go	/^var scanfTests = []ScanfTest{$/;"	v
scanframeworker	./runtime/mgcmark.go	/^func scanframeworker(frame *stkframe, unused unsafe.Pointer, gcw *gcWork) {$/;"	f
scang	./runtime/proc1.go	/^func scang(gp *g) {$/;"	f
scanner	./encoding/json/scanner.go	/^type scanner struct {$/;"	t
scannerErrorListTest	./cmd/vet/testdata/composite.go	/^var scannerErrorListTest = scanner.ErrorList{nil, nil}$/;"	v
scannerMode	./go/printer/testdata/parser.go	/^func scannerMode(mode uint) uint {$/;"	f
scanobject	./runtime/mgcmark.go	/^func scanobject(b uintptr, gcw *gcWork) {$/;"	f
scanstack	./runtime/mgcmark.go	/^func scanstack(gp *g) {$/;"	f
scase	./runtime/select.go	/^type scase struct {$/;"	t
scavengelist	./runtime/mheap.go	/^func scavengelist(list *mspan, now, limit uint64) uintptr {$/;"	f
sched_getaffinity	./runtime/os_linux.go	/^func sched_getaffinity(pid, len uintptr, buf *uintptr) int32$/;"	f
schedinit	./runtime/proc1.go	/^func schedinit() {$/;"	f
schedt	./runtime/runtime2.go	/^type schedt struct {$/;"	t
schedtrace	./runtime/proc1.go	/^func schedtrace(detailed bool) {$/;"	f
schedule	./runtime/proc1.go	/^func schedule() {$/;"	f
sclean	./cmd/compile/internal/arm/gsubr.go	/^var sclean [10]gc.Node$/;"	v
sclean	./cmd/compile/internal/x86/gsubr.go	/^var sclean [10]gc.Node$/;"	v
sconn	./net/http/transport_test.go	/^	var sconn struct {$/;"	v
scope	./go/types/eval.go	/^	var scope *Scope$/;"	v
scope	./net/addrselect.go	/^type scope uint8$/;"	t
scopePos	./go/types/object.go	/^func (obj *object) scopePos() token.Pos { return obj.scopePos_ }$/;"	f
scpSyntaxRe	./cmd/go/vcs.go	/^var scpSyntaxRe = regexp.MustCompile(`^([a-zA-Z0-9_]+)@([a-zA-Z0-9._-]+):(.*)$`)$/;"	v
scratch	./encoding/xml/marshal.go	/^			var scratch [64]byte$/;"	v
scratch	./runtime/os1_plan9.go	/^	var scratch int64$/;"	v
scratch	./syscall/syscall_plan9.go	/^	var scratch int64$/;"	v
scriptRe	./unicode/maketables.go	/^var scriptRe = regexp.MustCompile(`^([0-9A-F]+)(\\.\\.[0-9A-F]+)? *; ([A-Za-z_]+)$`)$/;"	v
scriptedReader	./bufio/bufio_test.go	/^type scriptedReader []func(p []byte) (n int, err error)$/;"	t
scriptlist	./unicode/maketables.go	/^var scriptlist = flag.String("scripts",$/;"	v
scripts	./unicode/maketables.go	/^var scripts = make(map[string][]Script)$/;"	v
sd	./time/genzabbrs.go	/^	var sd SupplementalData$/;"	v
sdata	./sort/search_test.go	/^var sdata = []string{0: "f", 1: "foo", 2: "foobar", 3: "x"}$/;"	v
searchFiles	./go/token/position.go	/^func searchFiles(a []*File, x int) int {$/;"	f
searchInts	./go/token/position.go	/^func searchInts(a []int, x int) int {$/;"	f
searchLineInfos	./go/token/position.go	/^func searchLineInfos(a []lineInfo, x int) int {$/;"	f
secaddr	./cmd/link/internal/ld/ldmacho.go	/^	var secaddr uint64$/;"	v
second	./encoding/xml/xml.go	/^var second = &unicode.RangeTable{$/;"	v
second	./net/http/client_test.go	/^	var second string$/;"	v
seconds	./archive/tar/reader.go	/^	var seconds, nanoseconds int64$/;"	v
secondsTimeZoneOffsetTests	./time/format_test.go	/^var secondsTimeZoneOffsetTests = []SecondsTimeZoneOffsetTest{$/;"	v
sect	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^	var sect elf.Section32$/;"	v
sect	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var sect elf.Section32$/;"	v
sect	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var sect elf.Section64$/;"	v
sect	./cmd/link/internal/ld/data.go	/^	var sect *Section$/;"	v
sect	./cmd/link/internal/ld/ldelf.go	/^	var sect *ElfSect$/;"	v
sect	./cmd/link/internal/ld/ldmacho.go	/^	var sect *LdMachoSect$/;"	v
sect	./cmd/link/internal/ld/ldpe.go	/^	var sect *PeSect$/;"	v
section	./cmd/link/internal/ld/ldelf.go	/^func section(elfobj *ElfObj, name string) *ElfSect {$/;"	f
section	./debug/dwarf/typeunit.go	/^	name  string \/\/ Name of .debug_type section.$/;"	t
sectionReadCloser	./mime/multipart/formdata.go	/^type sectionReadCloser struct {$/;"	t
sectionTrigger	./cmd/pprof/internal/profile/legacy_profile.go	/^func sectionTrigger(line string) sectionType {$/;"	f
sectionType	./cmd/pprof/internal/profile/legacy_profile.go	/^type sectionType int$/;"	t
sects	./debug/plan9obj/file.go	/^	var sects = []struct {$/;"	v
securityMode	./cmd/go/vcs.go	/^type securityMode int$/;"	t
seeUpcomingDoubleCRLF	./net/http/transfer.go	/^func seeUpcomingDoubleCRLF(r *bufio.Reader) bool {$/;"	f
seed	./crypto/tls/prf.go	/^	var seed [tlsRandomLength * 2]byte$/;"	v
seedrand	./math/rand/rng.go	/^func seedrand(x int32) int32 {$/;"	f
seek	./os/file_plan9.go	/^func (f *File) seek(offset int64, whence int) (ret int64, err error) {$/;"	f
seek	./os/file_unix.go	/^func (f *File) seek(offset int64, whence int) (ret int64, err error) {$/;"	f
seek	./os/file_windows.go	/^func (f *File) seek(offset int64, whence int) (ret int64, err error) {$/;"	f
seek	./runtime/os_plan9.go	/^func seek(fd int32, offset int64, whence int32) int64$/;"	f
seek	./syscall/fd_nacl.go	/^func (*defaultFileImpl) seek(int64, int) (int64, error)    { return 0, ENOSYS }$/;"	f
seek	./syscall/fd_nacl.go	/^func (f *naclFile) seek(off int64, whence int) (int64, error) {$/;"	f
seek	./syscall/fs_nacl.go	/^func (f *fsysFile) seek(offset int64, whence int) (int64, error) {$/;"	f
seek	./syscall/syscall_linux_386.go	/^func seek(fd int, offset int64, whence int) (newoffset int64, err Errno)$/;"	f
seek	./syscall/syscall_linux_arm.go	/^func seek(fd int, offset int64, whence int) (newoffset int64, err Errno)$/;"	f
seek	./syscall/syscall_plan9.go	/^func seek(placeholder uintptr, fd int, offset int64, whence int) (newoffset int64, err string)$/;"	f
seen	./go/types/lookup.go	/^	var seen map[*Named]bool$/;"	v
seen	./go/types/methodset.go	/^	var seen map[*Named]bool$/;"	v
seenlib	./cmd/link/internal/ld/go.go	/^var seenlib = make(map[string]bool)$/;"	v
seg	./cmd/link/internal/ld/macho.go	/^var seg [16]MachoSeg$/;"	v
seg	./cmd/link/internal/ld/macho_combine_dwarf.go	/^	var seg, sect interface{}$/;"	v
seg32	./debug/macho/file.go	/^			var seg32 Segment32$/;"	v
seg64	./debug/macho/file.go	/^			var seg64 Segment64$/;"	v
segment	./go/scanner/scanner_test.go	/^type segment struct {$/;"	t
segmentList	./bufio/bufio_test.go	/^var segmentList = [][]string{$/;"	v
segmentList	./text/scanner/scanner_test.go	/^var segmentList = [][]string{$/;"	v
segments	./go/scanner/scanner_test.go	/^var segments = []segment{$/;"	v
segro	./cmd/link/internal/ld/data.go	/^	var segro *Segment$/;"	v
sel	./go/parser/parser_test.go	/^		var sel *ast.SelectorExpr$/;"	v
selectCerts	./crypto/x509/root_darwin_arm_gen.go	/^func selectCerts() ([]*x509.Certificate, error) {$/;"	f
selectClientCertSignatureAlgorithm	./crypto/tls/prf.go	/^func (h finishedHash) selectClientCertSignatureAlgorithm(serverList []signatureAndHash, sigType uint8) (signatureAndHash, error) {$/;"	f
selectDir	./runtime/select.go	/^type selectDir int$/;"	t
selectNames	./cmd/compile/internal/gc/plive.go	/^var selectNames [4]*obj.LSym$/;"	v
selectTag	./cmd/go/get.go	/^func selectTag(goVersion string, tags []string) (match string) {$/;"	f
selectTagTestTags	./cmd/go/tag_test.go	/^var selectTagTestTags = []string{$/;"	v
selectTagTests	./cmd/go/tag_test.go	/^var selectTagTests = []struct {$/;"	v
selectWatch	./reflect/all_test.go	/^var selectWatch struct {$/;"	v
selectWatcher	./reflect/all_test.go	/^func selectWatcher() {$/;"	f
select_stmt	./cmd/compile/internal/gc/go.y	/^select_stmt:$/;"	l
selectdefault	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectdefault(sel *byte) (selected bool)$/;"	f
selectdefault	./runtime/select.go	/^func selectdefault(sel *hselect) (selected bool) {$/;"	f
selectdefaultImpl	./runtime/select.go	/^func selectdefaultImpl(sel *hselect, callerpc uintptr, so uintptr) {$/;"	f
selected	./net/http/cookiejar/jar.go	/^	var selected []entry$/;"	v
selectgo	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectgo(sel *byte)$/;"	f
selectgo	./runtime/select.go	/^func selectgo(sel *hselect) {$/;"	f
selectgoImpl	./runtime/select.go	/^func selectgoImpl(sel *hselect) (uintptr, uint16) {$/;"	f
selectnbrecv	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectnbrecv(chanType *byte, elem *any, hchan <-chan any) bool$/;"	f
selectnbrecv	./runtime/chan.go	/^func selectnbrecv(t *chantype, elem unsafe.Pointer, c *hchan) (selected bool) {$/;"	f
selectnbrecv2	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectnbrecv2(chanType *byte, elem *any, received *bool, hchan <-chan any) bool$/;"	f
selectnbrecv2	./runtime/chan.go	/^func selectnbrecv2(t *chantype, elem unsafe.Pointer, received *bool, c *hchan) (selected bool) {$/;"	f
selectnbsend	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectnbsend(chanType *byte, hchan chan<- any, elem *any) bool$/;"	f
selectnbsend	./runtime/chan.go	/^func selectnbsend(t *chantype, c *hchan, elem unsafe.Pointer) (selected bool) {$/;"	f
selector	./go/types/call.go	/^func (check *Checker) selector(x *operand, e *ast.SelectorExpr) {$/;"	f
selectrecv	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectrecv(sel *byte, hchan <-chan any, elem *any) (selected bool)$/;"	f
selectrecv	./runtime/select.go	/^func selectrecv(sel *hselect, c *hchan, elem unsafe.Pointer) (selected bool) {$/;"	f
selectrecv2	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectrecv2(sel *byte, hchan <-chan any, elem *any, received *bool) (selected bool)$/;"	f
selectrecv2	./runtime/select.go	/^func selectrecv2(sel *hselect, c *hchan, elem unsafe.Pointer, received *bool) (selected bool) {$/;"	f
selectrecvImpl	./runtime/select.go	/^func selectrecvImpl(sel *hselect, c *hchan, pc uintptr, elem unsafe.Pointer, received *bool, so uintptr) {$/;"	f
selectsend	./cmd/compile/internal/gc/builtin/runtime.go	/^func selectsend(sel *byte, hchan chan<- any, elem *any) (selected bool)$/;"	f
selectsend	./runtime/select.go	/^func selectsend(sel *hselect, c *hchan, elem unsafe.Pointer) (selected bool) {$/;"	f
selectsendImpl	./runtime/select.go	/^func selectsendImpl(sel *hselect, c *hchan, pc uintptr, elem unsafe.Pointer, so uintptr) {$/;"	f
selectsize	./runtime/select.go	/^func selectsize(size uintptr) uintptr {$/;"	f
selecttype	./cmd/compile/internal/gc/select.go	/^func selecttype(size int32) *Type {$/;"	f
selfConnect	./net/tcpsock_posix.go	/^func selfConnect(fd *netFD, err error) bool {$/;"	f
sellock	./runtime/select.go	/^func sellock(sel *hselect) {$/;"	f
selparkcommit	./runtime/select.go	/^func selparkcommit(gp *g, sel unsafe.Pointer) bool {$/;"	f
selunlock	./runtime/select.go	/^func selunlock(sel *hselect) {$/;"	f
selv	./cmd/compile/internal/gc/select.go	/^	var selv *Node$/;"	v
sem	./runtime/os3_solaris.go	/^	var sem *semt$/;"	v
sem_init	./runtime/os3_solaris.go	/^func sem_init(sem *semt, pshared int32, value uint32) int32 {$/;"	f
sem_post	./runtime/os3_solaris.go	/^func sem_post(sem *semt) int32 {$/;"	f
sem_reltimedwait_np	./runtime/os3_solaris.go	/^func sem_reltimedwait_np(sem *semt, timeout *timespec) int32 {$/;"	f
sem_wait	./runtime/os3_solaris.go	/^func sem_wait(sem *semt) int32 {$/;"	f
semaRoot	./runtime/sema.go	/^type semaRoot struct {$/;"	t
semacquire	./runtime/sema.go	/^func semacquire(addr *uint32, profile bool) {$/;"	f
semacreate	./runtime/os1_darwin.go	/^func semacreate() uintptr {$/;"	f
semacreate	./runtime/os1_nacl.go	/^func semacreate() uintptr {$/;"	f
semacreate	./runtime/os1_netbsd.go	/^func semacreate() uintptr {$/;"	f
semacreate	./runtime/os1_openbsd.go	/^func semacreate() uintptr {$/;"	f
semacreate	./runtime/os1_plan9.go	/^func semacreate() uintptr {$/;"	f
semacreate	./runtime/os1_windows.go	/^func semacreate() uintptr {$/;"	f
semacreate	./runtime/os3_solaris.go	/^func semacreate() uintptr {$/;"	f
semasleep	./runtime/os1_darwin.go	/^func semasleep(ns int64) int32 {$/;"	f
semasleep	./runtime/os1_nacl.go	/^func semasleep(ns int64) int32 {$/;"	f
semasleep	./runtime/os1_netbsd.go	/^func semasleep(ns int64) int32 {$/;"	f
semasleep	./runtime/os1_openbsd.go	/^func semasleep(ns int64) int32 {$/;"	f
semasleep	./runtime/os1_plan9.go	/^func semasleep(ns int64) int {$/;"	f
semasleep	./runtime/os1_windows.go	/^func semasleep(ns int64) int32 {$/;"	f
semasleep	./runtime/os3_solaris.go	/^func semasleep(ns int64) int32 {$/;"	f
semasleep1	./runtime/os1_darwin.go	/^func semasleep1(ns int64) int32 {$/;"	f
semawakeup	./runtime/os1_darwin.go	/^func semawakeup(mp *m) {$/;"	f
semawakeup	./runtime/os1_nacl.go	/^func semawakeup(mp *m) {$/;"	f
semawakeup	./runtime/os1_netbsd.go	/^func semawakeup(mp *m) {$/;"	f
semawakeup	./runtime/os1_openbsd.go	/^func semawakeup(mp *m) {$/;"	f
semawakeup	./runtime/os1_plan9.go	/^func semawakeup(mp *m) {$/;"	f
semawakeup	./runtime/os1_windows.go	/^func semawakeup(mp *m) {$/;"	f
semawakeup	./runtime/os3_solaris.go	/^func semawakeup(mp *m) {$/;"	f
semiWeakKeyTests	./crypto/des/des_test.go	/^var semiWeakKeyTests = []CryptTest{$/;"	v
semrelease	./runtime/sema.go	/^func semrelease(addr *uint32) {$/;"	f
semroot	./runtime/sema.go	/^func semroot(addr *uint32) *semaRoot {$/;"	f
semt	./runtime/defs1_solaris_amd64.go	/^type semt struct {$/;"	t
semtable	./runtime/sema.go	/^var semtable [semTabSize]struct {$/;"	v
send	./net/http/client.go	/^func (c *Client) send(req *Request) (*Response, error) {$/;"	f
send	./net/http/client.go	/^func send(req *Request, t RoundTripper) (resp *Response, err error) {$/;"	f
send	./net/rpc/client.go	/^func (client *Client) send(call *Call) {$/;"	f
send	./net/smtp/smtp_test.go	/^func (s smtpSender) send(f string) {$/;"	f
send	./reflect/value.go	/^func (v Value) send(x Value, nb bool) (selected bool) {$/;"	f
send	./syscall/srpc_nacl.go	/^func (s *msgSender) send(m *msg) error {$/;"	f
sendActualType	./encoding/gob/encoder.go	/^func (enc *Encoder) sendActualType(w io.Writer, state *encoderState, ut *userTypeInfo, actual reflect.Type) (sent bool) {$/;"	f
sendAlert	./crypto/tls/conn.go	/^func (c *Conn) sendAlert(err alert) error {$/;"	f
sendAlertLocked	./crypto/tls/conn.go	/^func (c *Conn) sendAlertLocked(err alert) error {$/;"	f
sendContent	./net/http/fs.go	/^	var sendContent io.Reader = content$/;"	v
sendCtrlBreak	./os/signal/signal_windows_test.go	/^func sendCtrlBreak(t *testing.T, pid int) {$/;"	f
sendExpectationFailed	./net/http/server.go	/^func (w *response) sendExpectationFailed() {$/;"	f
sendFile	./net/sendfile_dragonfly.go	/^func sendFile(c *netFD, r io.Reader) (written int64, err error, handled bool) {$/;"	f
sendFile	./net/sendfile_freebsd.go	/^func sendFile(c *netFD, r io.Reader) (written int64, err error, handled bool) {$/;"	f
sendFile	./net/sendfile_linux.go	/^func sendFile(c *netFD, r io.Reader) (written int64, err error, handled bool) {$/;"	f
sendFile	./net/sendfile_solaris.go	/^func sendFile(c *netFD, r io.Reader) (written int64, err error, handled bool) {$/;"	f
sendFile	./net/sendfile_stub.go	/^func sendFile(c *netFD, r io.Reader) (n int64, err error, handled bool) {$/;"	f
sendFile	./net/sendfile_windows.go	/^func sendFile(fd *netFD, r io.Reader) (written int64, err error, handled bool) {$/;"	f
sendFinished	./crypto/tls/handshake_client.go	/^func (hs *clientHandshakeState) sendFinished(out []byte) error {$/;"	f
sendFinished	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) sendFinished(out []byte) error {$/;"	f
sendMail	./net/smtp/smtp_test.go	/^func sendMail(hostPort string) error {$/;"	f
sendMailClient	./net/smtp/smtp_test.go	/^var sendMailClient = `EHLO localhost$/;"	v
sendMailServer	./net/smtp/smtp_test.go	/^var sendMailServer = `220 hello world$/;"	v
sendNote	./runtime/sigqueue_plan9.go	/^func sendNote(s *byte) bool {$/;"	f
sendResponse	./net/http/filetransport.go	/^func (pr *populateResponse) sendResponse() {$/;"	f
sendResponse	./net/rpc/server.go	/^func (server *Server) sendResponse(sending *sync.Mutex, req *Request, reply interface{}, codec ServerCodec, errmsg string) {$/;"	f
sendSessionTicket	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) sendSessionTicket() error {$/;"	f
sendTime	./time/sleep.go	/^func sendTime(c interface{}, seq uintptr) {$/;"	f
sendType	./encoding/gob/encoder.go	/^func (enc *Encoder) sendType(w io.Writer, state *encoderState, origt reflect.Type) (sent bool) {$/;"	f
sendTypeDescriptor	./encoding/gob/encoder.go	/^func (enc *Encoder) sendTypeDescriptor(w io.Writer, state *encoderState, ut *userTypeInfo) {$/;"	f
sendTypeId	./encoding/gob/encoder.go	/^func (enc *Encoder) sendTypeId(state *encoderState, ut *userTypeInfo) {$/;"	f
sendUncaughtSighup	./os/signal/signal_test.go	/^var sendUncaughtSighup = flag.Int("send_uncaught_sighup", 0, "send uncaught SIGHUP during TestStop")$/;"	v
sendfile	./syscall/syscall_darwin_386.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_darwin_amd64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_darwin_arm.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_darwin_arm64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_dragonfly_amd64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_freebsd_386.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_freebsd_amd64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_freebsd_arm.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_netbsd.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/syscall_openbsd.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/zsyscall_linux_386.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/zsyscall_linux_amd64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/zsyscall_linux_arm.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/zsyscall_linux_arm64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/zsyscall_linux_ppc64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/zsyscall_linux_ppc64le.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendfile	./syscall/zsyscall_solaris_amd64.go	/^func sendfile(outfd int, infd int, offset *int64, count int) (written int, err error) {$/;"	f
sendmsg	./syscall/syscall_linux_386.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_darwin_386.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_darwin_amd64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_darwin_arm.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_darwin_arm64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_dragonfly_amd64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_freebsd_386.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_freebsd_amd64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_freebsd_arm.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_linux_amd64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_linux_arm.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_linux_arm64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_linux_ppc64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_linux_ppc64le.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_netbsd_386.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_netbsd_amd64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_netbsd_arm.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_openbsd_386.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_openbsd_amd64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_openbsd_arm.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendmsg	./syscall/zsyscall_solaris_amd64.go	/^func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {$/;"	f
sendto	./syscall/net_nacl.go	/^func (f *netFile) sendto(p []byte, flags int, to Sockaddr) error {$/;"	f
sendto	./syscall/syscall_linux_386.go	/^func sendto(s int, p []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_darwin_386.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_darwin_amd64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_darwin_arm.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_darwin_arm64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_dragonfly_amd64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_freebsd_386.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_freebsd_amd64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_freebsd_arm.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_linux_amd64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_linux_arm.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_linux_arm64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_linux_ppc64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_linux_ppc64le.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_netbsd_386.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_netbsd_amd64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_netbsd_arm.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_openbsd_386.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_openbsd_amd64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_openbsd_arm.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
sendto	./syscall/zsyscall_solaris_amd64.go	/^func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {$/;"	f
separator	./go/ast/filter.go	/^var separator = &Comment{token.NoPos, "\/\/"}$/;"	v
seq	./crypto/x509/x509.go	/^	var seq asn1.RawValue$/;"	v
seq	./regexp/syntax/parse.go	/^	var seq, name string$/;"	v
sequencer	./net/textproto/pipeline.go	/^type sequencer struct {$/;"	t
serializedFile	./go/token/serialize.go	/^type serializedFile struct {$/;"	t
serializedFileSet	./go/token/serialize.go	/^type serializedFileSet struct {$/;"	t
serr	./crypto/tls/tls_test.go	/^	var serr error$/;"	v
serve	./net/http/fcgi/child.go	/^func (c *child) serve() {$/;"	f
serve	./net/http/httptest/server.go	/^var serve = flag.String("httptest.serve", "", "if non-empty, httptest.NewServer serves on this address and blocks")$/;"	v
serve	./net/http/serve_test.go	/^func serve(code int) HandlerFunc {$/;"	f
serve	./net/http/server.go	/^func (c *conn) serve() {$/;"	f
serveContent	./net/http/fs.go	/^func serveContent(w ResponseWriter, r *Request, name string, modtime time.Time, sizeFunc func() (int64, error), content io.ReadSeeker) {$/;"	f
serveFile	./net/http/fs.go	/^func serveFile(w ResponseWriter, r *Request, fs FileSystem, name string, redirect bool) {$/;"	f
serveMuxRegister	./net/http/serve_test.go	/^var serveMuxRegister = []struct {$/;"	v
serveMuxTests	./net/http/serve_test.go	/^var serveMuxTests = []struct {$/;"	v
serveMuxTests2	./net/http/serve_test.go	/^var serveMuxTests2 = []struct {$/;"	v
serveParam	./net/http/fs_test.go	/^	type serveParam struct {$/;"	t
serveRequest	./net/http/fcgi/child.go	/^func (c *child) serveRequest(req *request, body io.ReadCloser) {$/;"	f
serveSVGProfile	./cmd/trace/pprof.go	/^func serveSVGProfile(w http.ResponseWriter, r *http.Request, prof map[uint64]Record) {$/;"	f
server	./net/tcp_test.go	/^	var server Conn$/;"	v
serverCodec	./net/rpc/jsonrpc/server.go	/^type serverCodec struct {$/;"	t
serverConn	./log/syslog/syslog.go	/^type serverConn interface {$/;"	t
serverError	./net/rpc/server_test.go	/^	var serverError error$/;"	v
serverExpectTest	./net/http/serve_test.go	/^type serverExpectTest struct {$/;"	t
serverExpectTests	./net/http/serve_test.go	/^var serverExpectTests = []serverExpectTest{$/;"	v
serverFinishedLabel	./crypto/tls/prf.go	/^var serverFinishedLabel = []byte("server finished")$/;"	v
serverHandle	./net/smtp/smtp_test.go	/^func serverHandle(c net.Conn, t *testing.T) error {$/;"	f
serverHandleTLS	./net/smtp/smtp_test.go	/^func serverHandleTLS(c net.Conn, t *testing.T) error {$/;"	f
serverHandler	./net/http/server.go	/^type serverHandler struct {$/;"	t
serverHandshake	./crypto/tls/handshake_server.go	/^func (c *Conn) serverHandshake() error {$/;"	f
serverHandshakeState	./crypto/tls/handshake_server.go	/^type serverHandshakeState struct {$/;"	t
serverHeaders	./net/textproto/reader_test.go	/^var serverHeaders = strings.Replace(`Content-Type: text\/html; charset=utf-8$/;"	v
serverHello	./crypto/tls/handshake_server_test.go	/^	var serverHello serverHelloMsg$/;"	v
serverHelloDoneMsg	./crypto/tls/handshake_messages.go	/^type serverHelloDoneMsg struct{}$/;"	t
serverHelloMsg	./crypto/tls/handshake_messages.go	/^type serverHelloMsg struct {$/;"	t
serverInfo	./crypto/tls/handshake_client_test.go	/^		var serverInfo bytes.Buffer$/;"	v
serverInit	./crypto/tls/common.go	/^func (c *Config) serverInit() {$/;"	f
serverInit	./net/fd_poll_runtime.go	/^var serverInit sync.Once$/;"	v
serverKeyExchangeMsg	./crypto/tls/handshake_messages.go	/^type serverKeyExchangeMsg struct {$/;"	t
serverRequest	./net/rpc/jsonrpc/server.go	/^type serverRequest struct {$/;"	t
serverResponse	./net/rpc/jsonrpc/server.go	/^type serverResponse struct {$/;"	t
serverResumedSession	./crypto/tls/handshake_client.go	/^func (hs *clientHandshakeState) serverResumedSession() bool {$/;"	f
serverSum	./crypto/tls/prf.go	/^func (h finishedHash) serverSum(masterSecret []byte) []byte {$/;"	f
serverTest	./crypto/tls/handshake_server_test.go	/^type serverTest struct {$/;"	t
servers	./net/dnsclient_unix_test.go	/^func (conf *resolvConfTest) servers() []string {$/;"	f
service	./net/rpc/server.go	/^type service struct {$/;"	t
serviceArray	./net/rpc/debug.go	/^type serviceArray []debugService$/;"	t
services	./net/port_unix.go	/^var services = map[string]map[string]int{$/;"	v
services	./net/rpc/debug.go	/^	var services = make(serviceArray, len(server.serviceMap))$/;"	v
servicesError	./net/port_unix.go	/^var servicesError error$/;"	v
session	./crypto/tls/handshake_client.go	/^	var session *ClientSessionState$/;"	v
sessionState	./crypto/tls/ticket.go	/^type sessionState struct {$/;"	t
sessionTicket	./crypto/tls/handshake_server.go	/^	var sessionTicket = append([]uint8{}, hs.clientHello.sessionTicket...)$/;"	v
set	./cmd/api/goapi.go	/^func set(items []string) map[string]bool {$/;"	f
set	./cmd/compile/internal/big/hilbert_test.go	/^func (a *matrix) set(i, j int, x *Rat) {$/;"	f
set	./cmd/compile/internal/big/nat.go	/^func (z nat) set(x nat) nat {$/;"	f
set	./cmd/go/pkg.go	/^	var set = make(map[string]bool)$/;"	v
set	./cmd/gofmt/rewrite.go	/^func set(x, y reflect.Value) {$/;"	f
set	./go/doc/reader.go	/^func (mset methodSet) set(f *ast.FuncDecl) {$/;"	f
set	./math/big/hilbert_test.go	/^func (a *matrix) set(i, j int, x *Rat) {$/;"	f
set	./math/big/nat.go	/^func (z nat) set(x nat) nat {$/;"	f
set	./os/signal/signal.go	/^func (h *handler) set(sig int) {$/;"	f
set	./runtime/runtime2.go	/^func (gp *guintptr) set(g *g) { *gp = guintptr(unsafe.Pointer(g)) }$/;"	f
set	./runtime/runtime2.go	/^func (mp *muintptr) set(m *m) { *mp = muintptr(unsafe.Pointer(m)) }$/;"	f
set	./runtime/runtime2.go	/^func (pp *puintptr) set(p *p) { *pp = puintptr(unsafe.Pointer(p)) }$/;"	f
set	./runtime/stack_test.go	/^func set(p *int, x int) {$/;"	f
set	./strconv/atof.go	/^func (b *decimal) set(s string) (ok bool) {$/;"	f
setAddr	./net/fd_unix.go	/^func (fd *netFD) setAddr(laddr, raddr Addr) {$/;"	f
setAddr	./net/fd_windows.go	/^func (fd *netFD) setAddr(laddr, raddr Addr) {$/;"	f
setArch	./cmd/asm/internal/asm/operand_test.go	/^func setArch(goarch string) (*arch.Arch, *obj.Link) {$/;"	f
setArgInfo	./runtime/traceback.go	/^func setArgInfo(frame *stkframe, f *_func, needArgMap bool) {$/;"	f
setBadSignalMsg	./runtime/signal_windows.go	/^func setBadSignalMsg() {$/;"	f
setBig	./runtime/stack_test.go	/^func setBig(p *int, x int, b bigBuf) {$/;"	f
setBit	./cmd/compile/internal/big/nat.go	/^func (z nat) setBit(x nat, i uint, b uint) nat {$/;"	f
setBit	./math/big/nat.go	/^func (z nat) setBit(x nat, i uint, b uint) nat {$/;"	f
setBits64	./cmd/compile/internal/big/float.go	/^func (z *Float) setBits64(neg bool, x uint64) *Float {$/;"	f
setBits64	./math/big/float.go	/^func (z *Float) setBits64(neg bool, x uint64) *Float {$/;"	f
setBoolFlag	./cmd/go/testflag.go	/^func setBoolFlag(flag *bool, value string) {$/;"	f
setBroadcast	./net/interface_bsd_test.go	/^func (ti *testInterface) setBroadcast(suffix int) error {$/;"	f
setBroadcast	./net/interface_linux_test.go	/^func (ti *testInterface) setBroadcast(suffix int) error {$/;"	f
setBytes	./cmd/compile/internal/big/nat.go	/^func (z nat) setBytes(buf []byte) nat {$/;"	f
setBytes	./math/big/nat.go	/^func (z nat) setBytes(buf []byte) nat {$/;"	f
setCheckmarked	./runtime/mbitmap.go	/^func (h heapBits) setCheckmarked(size uintptr) {$/;"	f
setCipherSuite	./crypto/tls/handshake_server.go	/^func (hs *serverHandshakeState) setCipherSuite(id uint16, supportedCipherSuites []uint16, version uint16) bool {$/;"	f
setCleanstack	./runtime/syscall_windows.go	/^func (c *wincallbackcontext) setCleanstack(cleanstack bool) {$/;"	f
setComment	./go/printer/nodes.go	/^func (p *printer) setComment(g *ast.CommentGroup) {$/;"	f
setConst	./go/types/operand.go	/^func (x *operand) setConst(tok token.Token, lit string) {$/;"	f
setContexts	./cmd/api/goapi.go	/^func setContexts() {$/;"	f
setCookies	./net/http/cookiejar/jar.go	/^func (j *Jar) setCookies(u *url.URL, cookies []*http.Cookie, now time.Time) {$/;"	f
setCounterStmt	./cmd/cover/cover.go	/^func setCounterStmt(f *File, counter ast.Expr) ast.Stmt {$/;"	f
setDeadline	./net/fd_plan9.go	/^func (fd *netFD) setDeadline(t time.Time) error {$/;"	f
setDeadline	./net/fd_poll_nacl.go	/^func (fd *netFD) setDeadline(t time.Time) error {$/;"	f
setDeadline	./net/fd_poll_runtime.go	/^func (fd *netFD) setDeadline(t time.Time) error {$/;"	f
setDeadlineImpl	./net/fd_poll_nacl.go	/^func setDeadlineImpl(fd *netFD, t time.Time, mode int) error {$/;"	f
setDeadlineImpl	./net/fd_poll_runtime.go	/^func setDeadlineImpl(fd *netFD, t time.Time, mode int) error {$/;"	f
setDefaultListenerSockopts	./net/sockopt_bsd.go	/^func setDefaultListenerSockopts(s int) error {$/;"	f
setDefaultListenerSockopts	./net/sockopt_linux.go	/^func setDefaultListenerSockopts(s int) error {$/;"	f
setDefaultListenerSockopts	./net/sockopt_solaris.go	/^func setDefaultListenerSockopts(s int) error {$/;"	f
setDefaultListenerSockopts	./net/sockopt_stub.go	/^func setDefaultListenerSockopts(s int) error {$/;"	f
setDefaultListenerSockopts	./net/sockopt_windows.go	/^func setDefaultListenerSockopts(s syscall.Handle) error {$/;"	f
setDefaultMulticastSockopts	./net/sockopt_bsd.go	/^func setDefaultMulticastSockopts(s int) error {$/;"	f
setDefaultMulticastSockopts	./net/sockopt_linux.go	/^func setDefaultMulticastSockopts(s int) error {$/;"	f
setDefaultMulticastSockopts	./net/sockopt_solaris.go	/^func setDefaultMulticastSockopts(s int) error {$/;"	f
setDefaultMulticastSockopts	./net/sockopt_stub.go	/^func setDefaultMulticastSockopts(s int) error {$/;"	f
setDefaultMulticastSockopts	./net/sockopt_windows.go	/^func setDefaultMulticastSockopts(s syscall.Handle) error {$/;"	f
setDefaultSockopts	./net/sockopt_bsd.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	f
setDefaultSockopts	./net/sockopt_linux.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	f
setDefaultSockopts	./net/sockopt_solaris.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	f
setDefaultSockopts	./net/sockopt_stub.go	/^func setDefaultSockopts(s, family, sotype int, ipv6only bool) error {$/;"	f
setDefaultSockopts	./net/sockopt_windows.go	/^func setDefaultSockopts(s syscall.Handle, family, sotype int, ipv6only bool) error {$/;"	f
setDefaultValue	./encoding/asn1/asn1.go	/^func setDefaultValue(v reflect.Value, params fieldParameters) (ok bool) {$/;"	f
setDict	./compress/flate/inflate.go	/^func (f *decompressor) setDict(dict []byte) {$/;"	f
setDone	./os/exec.go	/^func (p *Process) setDone() {$/;"	f
setErr	./bufio/scan.go	/^func (s *Scanner) setErr(err error) {$/;"	f
setError	./encoding/gob/encoder.go	/^func (enc *Encoder) setError(err error) {$/;"	f
setErrorLocked	./crypto/tls/conn.go	/^func (hc *halfConn) setErrorLocked(err error) error {$/;"	f
setExit	./cmd/vet/main.go	/^func setExit(err int) {$/;"	f
setExitStatus	./cmd/go/main.go	/^func setExitStatus(n int) {$/;"	f
setExpAndRound	./cmd/compile/internal/big/float.go	/^func (z *Float) setExpAndRound(exp int64, sbit uint) {$/;"	f
setExpAndRound	./math/big/float.go	/^func (z *Float) setExpAndRound(exp int64, sbit uint) {$/;"	f
setExtensionType	./mime/type.go	/^func setExtensionType(extension, mimeType string) error {$/;"	f
setFile	./cmd/internal/obj/obj.go	/^func (h *LineHist) setFile(stk *LineStack, file string) {$/;"	f
setFrac64Tests	./cmd/compile/internal/big/rat_test.go	/^var setFrac64Tests = []struct {$/;"	v
setFrac64Tests	./math/big/rat_test.go	/^var setFrac64Tests = []struct {$/;"	v
setGCPercent	./runtime/debug/stubs.go	/^func setGCPercent(int32) int32$/;"	f
setGCPercent	./runtime/mgc.go	/^func setGCPercent(in int32) (out int32) {$/;"	f
setGCPhase	./runtime/mgc.go	/^func setGCPhase(x uint32) {$/;"	f
setGranularityToggle	./cmd/pprof/internal/driver/interactive.go	/^func setGranularityToggle(o string, fl *flags) {$/;"	f
setHeader	./net/http/server.go	/^	var setHeader extraHeader$/;"	v
setHookpostCloseConn	./database/sql/fakedb_test.go	/^func setHookpostCloseConn(fn func(*fakeConn, error)) {$/;"	f
setIPv4MreqToInterface	./net/sockopt_posix.go	/^func setIPv4MreqToInterface(mreq *syscall.IPMreq, ifi *Interface) error {$/;"	f
setIPv4MulticastInterface	./net/sockoptip_bsd.go	/^func setIPv4MulticastInterface(fd *netFD, ifi *Interface) error {$/;"	f
setIPv4MulticastInterface	./net/sockoptip_linux.go	/^func setIPv4MulticastInterface(fd *netFD, ifi *Interface) error {$/;"	f
setIPv4MulticastInterface	./net/sockoptip_stub.go	/^func setIPv4MulticastInterface(fd *netFD, ifi *Interface) error {$/;"	f
setIPv4MulticastInterface	./net/sockoptip_windows.go	/^func setIPv4MulticastInterface(fd *netFD, ifi *Interface) error {$/;"	f
setIPv4MulticastLoopback	./net/sockoptip_bsd.go	/^func setIPv4MulticastLoopback(fd *netFD, v bool) error {$/;"	f
setIPv4MulticastLoopback	./net/sockoptip_linux.go	/^func setIPv4MulticastLoopback(fd *netFD, v bool) error {$/;"	f
setIPv4MulticastLoopback	./net/sockoptip_stub.go	/^func setIPv4MulticastLoopback(fd *netFD, v bool) error {$/;"	f
setIPv4MulticastLoopback	./net/sockoptip_windows.go	/^func setIPv4MulticastLoopback(fd *netFD, v bool) error {$/;"	f
setIPv6MulticastInterface	./net/sockoptip_posix.go	/^func setIPv6MulticastInterface(fd *netFD, ifi *Interface) error {$/;"	f
setIPv6MulticastInterface	./net/sockoptip_stub.go	/^func setIPv6MulticastInterface(fd *netFD, ifi *Interface) error {$/;"	f
setIPv6MulticastLoopback	./net/sockoptip_posix.go	/^func setIPv6MulticastLoopback(fd *netFD, v bool) error {$/;"	f
setIPv6MulticastLoopback	./net/sockoptip_stub.go	/^func setIPv6MulticastLoopback(fd *netFD, v bool) error {$/;"	f
setId	./encoding/gob/type.go	/^func (t *CommonType) setId(id typeId) { t.Id = id }$/;"	f
setIntFlag	./cmd/go/testflag.go	/^func setIntFlag(flag *int, value string) {$/;"	f
setKeepAlive	./net/sockopt_plan9.go	/^func setKeepAlive(fd *netFD, keepalive bool) error {$/;"	f
setKeepAlive	./net/sockopt_posix.go	/^func setKeepAlive(fd *netFD, keepalive bool) error {$/;"	f
setKeepAlive	./net/sockopt_stub.go	/^func setKeepAlive(fd *netFD, keepalive bool) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_darwin.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_dragonfly.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_openbsd.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_plan9.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_solaris.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_stub.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_unix.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setKeepAlivePeriod	./net/tcpsockopt_windows.go	/^func setKeepAlivePeriod(fd *netFD, d time.Duration) error {$/;"	f
setLineComment	./go/printer/nodes.go	/^func (p *printer) setLineComment(text string) {$/;"	f
setLinger	./net/sockopt_posix.go	/^func setLinger(fd *netFD, sec int) error {$/;"	f
setLinger	./net/sockopt_stub.go	/^func setLinger(fd *netFD, sec int) error {$/;"	f
setMain	./cmd/pprof/internal/profile/profile.go	/^func (p *Profile) setMain() {$/;"	f
setMarked	./runtime/mbitmap.go	/^func (h heapBits) setMarked() {$/;"	f
setMarkedNonAtomic	./runtime/mbitmap.go	/^func (h heapBits) setMarkedNonAtomic() {$/;"	f
setMaxStack	./runtime/debug/stubs.go	/^func setMaxStack(int) int$/;"	f
setMaxStack	./runtime/rdebug.go	/^func setMaxStack(in int) (out int) {$/;"	f
setMaxThreads	./runtime/debug/stubs.go	/^func setMaxThreads(int) int$/;"	f
setMaxThreads	./runtime/proc1.go	/^func setMaxThreads(in int) (out int) {$/;"	f
setMimeInit	./mime/type_test.go	/^func setMimeInit(fn func()) (cleanup func()) {$/;"	f
setMimeTypes	./mime/type.go	/^func setMimeTypes(lowerExt, mixExt map[string]string) {$/;"	f
setNextBarrierPC	./runtime/mgcmark.go	/^func setNextBarrierPC(pc uintptr) {$/;"	f
setNoDelay	./net/tcpsockopt_posix.go	/^func setNoDelay(fd *netFD, noDelay bool) error {$/;"	f
setNoDelay	./net/tcpsockopt_stub.go	/^func setNoDelay(fd *netFD, noDelay bool) error {$/;"	f
setOp	./cmd/pack/pack.go	/^func setOp(arg string) {$/;"	f
setOption	./text/template/option.go	/^func (t *Template) setOption(opt string) {$/;"	f
setOrder	./go/types/object.go	/^func (obj *object) setOrder(order uint32)     { assert(order > 0); obj.order_ = order }$/;"	f
setPanicOnFault	./runtime/debug/stubs.go	/^func setPanicOnFault(bool) bool$/;"	f
setPanicOnFault	./runtime/rdebug.go	/^func setPanicOnFault(new bool) (old bool) {$/;"	f
setParent	./go/types/object.go	/^func (obj *object) setParent(parent *Scope)   { obj.parent = parent }$/;"	f
setPointToPoint	./net/interface_bsd_test.go	/^func (ti *testInterface) setPointToPoint(suffix int) error {$/;"	f
setPointToPoint	./net/interface_linux_test.go	/^func (ti *testInterface) setPointToPoint(suffix int) error {$/;"	f
setPseudoRegister	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) setPseudoRegister(addr *obj.Addr, reg string, isStatic bool, prefix rune) {$/;"	f
setReadBuffer	./net/fd_plan9.go	/^func setReadBuffer(fd *netFD, bytes int) error {$/;"	f
setReadBuffer	./net/sockopt_posix.go	/^func setReadBuffer(fd *netFD, bytes int) error {$/;"	f
setReadBuffer	./net/sockopt_stub.go	/^func setReadBuffer(fd *netFD, bytes int) error {$/;"	f
setReadDeadline	./net/fd_plan9.go	/^func (fd *netFD) setReadDeadline(t time.Time) error {$/;"	f
setReadDeadline	./net/fd_poll_nacl.go	/^func (fd *netFD) setReadDeadline(t time.Time) error {$/;"	f
setReadDeadline	./net/fd_poll_runtime.go	/^func (fd *netFD) setReadDeadline(t time.Time) error {$/;"	f
setReqCanceler	./net/http/transport.go	/^func (t *Transport) setReqCanceler(r *Request, fn func()) {$/;"	f
setRunes	./reflect/value.go	/^func (v Value) setRunes(x []rune) {$/;"	f
setScopePos	./go/types/object.go	/^func (obj *object) setScopePos(pos token.Pos) { obj.scopePos_ = pos }$/;"	f
setShorthand	./cmd/go/generate.go	/^func (g *Generator) setShorthand(words []string) {$/;"	f
setState	./net/http/server.go	/^func (c *conn) setState(nc net.Conn, state ConnState) {$/;"	f
setStrictFakeConnClose	./database/sql/fakedb_test.go	/^func setStrictFakeConnClose(t *testing.T) {$/;"	f
setStringTests	./cmd/compile/internal/big/ratconv_test.go	/^var setStringTests = []StringTest{$/;"	v
setStringTests	./math/big/ratconv_test.go	/^var setStringTests = []StringTest{$/;"	v
setStringTests2	./cmd/compile/internal/big/ratconv_test.go	/^var setStringTests2 = []StringTest{$/;"	v
setStringTests2	./math/big/ratconv_test.go	/^var setStringTests2 = []StringTest{$/;"	v
setStringValue	./internal/syscall/windows/registry/value.go	/^func (k Key) setStringValue(name string, valtype uint32, value string) error {$/;"	f
setTrueCount	./cmd/vet/main.go	/^var setTrueCount int$/;"	v
setType	./mime/type_test.go	/^func setType(ext, typ string) {$/;"	f
setTypeId	./encoding/gob/type.go	/^func setTypeId(typ gobType) {$/;"	f
setUint64	./cmd/compile/internal/big/nat.go	/^func (z nat) setUint64(x uint64) nat {$/;"	f
setUint64	./math/big/nat.go	/^func (z nat) setUint64(x uint64) nat {$/;"	f
setUnderlying	./go/types/decl.go	/^func (n *Named) setUnderlying(typ Type) {$/;"	f
setValue	./internal/syscall/windows/registry/value.go	/^func (k Key) setValue(name string, valtype uint32, data []byte) error {$/;"	f
setValues	./internal/syscall/windows/registry/registry_test.go	/^func setValues(t *testing.T, k registry.Key) {$/;"	f
setVar	./text/template/exec.go	/^func (s *state) setVar(n int, value reflect.Value) {$/;"	f
setWord	./cmd/compile/internal/big/nat.go	/^func (z nat) setWord(x Word) nat {$/;"	f
setWord	./math/big/nat.go	/^func (z nat) setWord(x Word) nat {$/;"	f
setWriteBuffer	./net/fd_plan9.go	/^func setWriteBuffer(fd *netFD, bytes int) error {$/;"	f
setWriteBuffer	./net/sockopt_posix.go	/^func setWriteBuffer(fd *netFD, bytes int) error {$/;"	f
setWriteBuffer	./net/sockopt_stub.go	/^func setWriteBuffer(fd *netFD, bytes int) error {$/;"	f
setWriteDeadline	./net/fd_plan9.go	/^func (fd *netFD) setWriteDeadline(t time.Time) error {$/;"	f
setWriteDeadline	./net/fd_poll_nacl.go	/^func (fd *netFD) setWriteDeadline(t time.Time) error {$/;"	f
setWriteDeadline	./net/fd_poll_runtime.go	/^func (fd *netFD) setWriteDeadline(t time.Time) error {$/;"	f
set_eip	./runtime/signal_darwin_386.go	/^func (c *sigctxt) set_eip(x uint32)     { c.regs().eip = x }$/;"	f
set_eip	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) set_eip(x uint32)     { c.regs().mc_eip = x }$/;"	f
set_eip	./runtime/signal_linux_386.go	/^func (c *sigctxt) set_eip(x uint32)     { c.regs().eip = x }$/;"	f
set_eip	./runtime/signal_nacl_386.go	/^func (c *sigctxt) set_eip(x uint32)     { c.regs().eip = x }$/;"	f
set_eip	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) set_eip(x uint32)     { c.regs().__gregs[_REG_EIP] = x }$/;"	f
set_eip	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) set_eip(x uint32)     { c.regs().sc_eip = x }$/;"	f
set_esp	./runtime/signal_darwin_386.go	/^func (c *sigctxt) set_esp(x uint32)     { c.regs().esp = x }$/;"	f
set_esp	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) set_esp(x uint32)     { c.regs().mc_esp = x }$/;"	f
set_esp	./runtime/signal_linux_386.go	/^func (c *sigctxt) set_esp(x uint32)     { c.regs().esp = x }$/;"	f
set_esp	./runtime/signal_nacl_386.go	/^func (c *sigctxt) set_esp(x uint32)     { c.regs().esp = x }$/;"	f
set_esp	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) set_esp(x uint32)     { c.regs().__gregs[_REG_UESP] = x }$/;"	f
set_esp	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) set_esp(x uint32)     { c.regs().sc_esp = x }$/;"	f
set_link	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) set_link(x uint64) { c.regs().link = x }$/;"	f
set_lr	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) set_lr(x uint32)  { c.regs().lr = x }$/;"	f
set_lr	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) set_lr(x uint64)  { c.regs().lr = x }$/;"	f
set_lr	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) set_lr(x uint32)  { c.regs().__gregs[14] = x }$/;"	f
set_lr	./runtime/signal_linux_arm.go	/^func (c *sigctxt) set_lr(x uint32)  { c.regs().lr = x }$/;"	f
set_lr	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) set_lr(x uint64)  { c.regs().regs[30] = x }$/;"	f
set_lr	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) set_lr(x uint32)  { c.regs().lr = x }$/;"	f
set_lr	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) set_lr(x uint32)  { c.regs().__gregs[_REG_R14] = x }$/;"	f
set_lr	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) set_lr(x uint32)  { c.regs().sc_usr_lr = x }$/;"	f
set_nsec	./runtime/defs1_netbsd_386.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs1_netbsd_amd64.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs1_netbsd_arm.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_linux_386.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_linux_amd64.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_linux_arm.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_linux_arm64.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_linux_ppc64.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_linux_ppc64le.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_openbsd_386.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_openbsd_amd64.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_nsec	./runtime/defs_openbsd_arm.go	/^func (ts *timespec) set_nsec(x int32) {$/;"	f
set_pc	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) set_pc(x uint32)  { c.regs().pc = x }$/;"	f
set_pc	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) set_pc(x uint64)  { c.regs().pc = x }$/;"	f
set_pc	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) set_pc(x uint32)  { c.regs().__gregs[15] = x }$/;"	f
set_pc	./runtime/signal_linux_arm.go	/^func (c *sigctxt) set_pc(x uint32)  { c.regs().pc = x }$/;"	f
set_pc	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) set_pc(x uint64)  { c.regs().pc = x }$/;"	f
set_pc	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) set_pc(x uint64)   { c.regs().nip = x }$/;"	f
set_pc	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) set_pc(x uint32)  { c.regs().pc = x }$/;"	f
set_pc	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) set_pc(x uint32)  { c.regs().__gregs[_REG_R15] = x }$/;"	f
set_pc	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) set_pc(x uint32)  { c.regs().sc_pc = x }$/;"	f
set_r0	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) set_r0(x uint64)   { c.regs().gpr[0] = x }$/;"	f
set_r10	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) set_r10(x uint32) { c.regs().r[10] = x }$/;"	f
set_r10	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) set_r10(x uint32) { c.regs().__gregs[10] = x }$/;"	f
set_r10	./runtime/signal_linux_arm.go	/^func (c *sigctxt) set_r10(x uint32) { c.regs().r10 = x }$/;"	f
set_r10	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) set_r10(x uint32) { c.regs().r10 = x }$/;"	f
set_r10	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) set_r10(x uint32) { c.regs().__gregs[_REG_R10] = x }$/;"	f
set_r10	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) set_r10(x uint32) { c.regs().sc_r10 = x }$/;"	f
set_r28	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) set_r28(x uint64) { c.regs().x[28] = x }$/;"	f
set_r28	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) set_r28(x uint64) { c.regs().regs[28] = x }$/;"	f
set_r30	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) set_r30(x uint64)  { c.regs().gpr[30] = x }$/;"	f
set_rip	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().rip = x }$/;"	f
set_rip	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().mc_rip = x }$/;"	f
set_rip	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().mc_rip = x }$/;"	f
set_rip	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().rip = x }$/;"	f
set_rip	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().rip = x }$/;"	f
set_rip	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().__gregs[_REG_RIP] = x }$/;"	f
set_rip	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().sc_rip = x }$/;"	f
set_rip	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) set_rip(x uint64)     { c.regs().gregs[_REG_RIP] = int64(x) }$/;"	f
set_rsp	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().rsp = x }$/;"	f
set_rsp	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().mc_rsp = x }$/;"	f
set_rsp	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().mc_rsp = x }$/;"	f
set_rsp	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().rsp = x }$/;"	f
set_rsp	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().rsp = x }$/;"	f
set_rsp	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().__gregs[_REG_RSP] = x }$/;"	f
set_rsp	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().sc_rsp = x }$/;"	f
set_rsp	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) set_rsp(x uint64)     { c.regs().gregs[_REG_RSP] = int64(x) }$/;"	f
set_sec	./runtime/defs1_netbsd_386.go	/^func (ts *timespec) set_sec(x int32) {$/;"	f
set_sec	./runtime/defs1_netbsd_amd64.go	/^func (ts *timespec) set_sec(x int32) {$/;"	f
set_sec	./runtime/defs1_netbsd_arm.go	/^func (ts *timespec) set_sec(x int32) {$/;"	f
set_sec	./runtime/defs_dragonfly_amd64.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_freebsd_386.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_freebsd_amd64.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_freebsd_arm.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_linux_386.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_linux_amd64.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_linux_arm.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_linux_arm64.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_linux_ppc64.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_linux_ppc64le.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_openbsd_386.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_openbsd_amd64.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sec	./runtime/defs_openbsd_arm.go	/^func (ts *timespec) set_sec(x int64) {$/;"	f
set_sigaddr	./runtime/signal_darwin_386.go	/^func (c *sigctxt) set_sigaddr(x uint32) { c.info.si_addr = x }$/;"	f
set_sigaddr	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) set_sigaddr(x uint64) { c.info.si_addr = x }$/;"	f
set_sigaddr	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) set_sigaddr(x uint32) { c.info.si_addr = x }$/;"	f
set_sigaddr	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) set_sigaddr(x uint64) {$/;"	f
set_sigaddr	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) set_sigaddr(x uint64) { c.info.si_addr = x }$/;"	f
set_sigaddr	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) set_sigaddr(x uint32) { c.info.si_addr = uintptr(x) }$/;"	f
set_sigaddr	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) set_sigaddr(x uint64) { c.info.si_addr = x }$/;"	f
set_sigaddr	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) set_sigaddr(x uint32) {$/;"	f
set_sigaddr	./runtime/signal_linux_386.go	/^func (c *sigctxt) set_sigaddr(x uint32) {$/;"	f
set_sigaddr	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) set_sigaddr(x uint64) {$/;"	f
set_sigaddr	./runtime/signal_linux_arm.go	/^func (c *sigctxt) set_sigaddr(x uint32) {$/;"	f
set_sigaddr	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) set_sigaddr(x uint64) {$/;"	f
set_sigaddr	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) set_sigaddr(x uint64) {$/;"	f
set_sigaddr	./runtime/signal_nacl_386.go	/^func (c *sigctxt) set_sigaddr(x uint32) {}$/;"	f
set_sigaddr	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) set_sigaddr(x uint64) {}$/;"	f
set_sigaddr	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) set_sigaddr(x uint32) {}$/;"	f
set_sigaddr	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) set_sigaddr(x uint32) {$/;"	f
set_sigaddr	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) set_sigaddr(x uint64) {$/;"	f
set_sigaddr	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) set_sigaddr(x uint32) {$/;"	f
set_sigaddr	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) set_sigaddr(x uint32) {$/;"	f
set_sigaddr	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) set_sigaddr(x uint64) {$/;"	f
set_sigaddr	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) set_sigaddr(x uint32) {$/;"	f
set_sigaddr	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) set_sigaddr(x uint64) {$/;"	f
set_sigcode	./runtime/signal_darwin_386.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) set_sigcode(x uint64) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) set_sigcode(x uint64) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) set_sigcode(x uint64) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_linux_386.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) set_sigcode(x uint64) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_linux_arm.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_nacl_386.go	/^func (c *sigctxt) set_sigcode(x uint32) {}$/;"	f
set_sigcode	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) set_sigcode(x uint64) {}$/;"	f
set_sigcode	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) set_sigcode(x uint32) {}$/;"	f
set_sigcode	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info._code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) set_sigcode(x uint64) { c.info._code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info._code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) set_sigcode(x uint64) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) set_sigcode(x uint32) { c.info.si_code = int32(x) }$/;"	f
set_sigcode	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) set_sigcode(x uint64) { c.info.si_code = int32(x) }$/;"	f
set_sp	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) set_sp(x uint32)  { c.regs().sp = x }$/;"	f
set_sp	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) set_sp(x uint64)  { c.regs().sp = x }$/;"	f
set_sp	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) set_sp(x uint32)  { c.regs().__gregs[13] = x }$/;"	f
set_sp	./runtime/signal_linux_arm.go	/^func (c *sigctxt) set_sp(x uint32)  { c.regs().sp = x }$/;"	f
set_sp	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) set_sp(x uint64)  { c.regs().sp = x }$/;"	f
set_sp	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) set_sp(x uint64)   { c.regs().gpr[1] = x }$/;"	f
set_sp	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) set_sp(x uint32)  { c.regs().sp = x }$/;"	f
set_sp	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) set_sp(x uint32)  { c.regs().__gregs[_REG_R13] = x }$/;"	f
set_sp	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) set_sp(x uint32)  { c.regs().sc_usr_sp = x }$/;"	f
set_usec	./runtime/defs1_netbsd_386.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs1_netbsd_amd64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs1_netbsd_arm.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs1_solaris_amd64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_darwin_386.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_darwin_amd64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_darwin_arm.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_darwin_arm64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_dragonfly_amd64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_freebsd_386.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_freebsd_amd64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_freebsd_arm.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_linux_386.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_linux_amd64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_linux_arm.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_linux_arm64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_linux_ppc64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_linux_ppc64le.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_openbsd_386.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_openbsd_amd64.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
set_usec	./runtime/defs_openbsd_arm.go	/^func (tv *timeval) set_usec(x int32) {$/;"	f
setaddr	./cmd/internal/obj/data.go	/^func setaddr(ctxt *Link, s *LSym, off int64, t *LSym) int64 {$/;"	f
setaddr	./cmd/link/internal/ld/data.go	/^func setaddr(ctxt *Link, s *LSym, off int64, t *LSym) int64 {$/;"	f
setaddrplus	./cmd/internal/obj/data.go	/^func setaddrplus(ctxt *Link, s *LSym, off int64, t *LSym, add int64) int64 {$/;"	f
setaddrplus	./cmd/link/internal/ld/data.go	/^func setaddrplus(ctxt *Link, s *LSym, off int64, t *LSym, add int64) int64 {$/;"	f
setaddrs	./cmd/compile/internal/gc/reg.go	/^func setaddrs(bit Bits) {$/;"	f
setbar	./runtime/asm_386.s	/^setbar:$/;"	l
setbar	./runtime/asm_amd64.s	/^setbar:$/;"	l
setbar	./runtime/asm_amd64p32.s	/^setbar:$/;"	l
setbar	./runtime/asm_arm.s	/^setbar:$/;"	l
setbar	./runtime/asm_arm64.s	/^setbar:$/;"	l
setbar	./runtime/asm_ppc64x.s	/^setbar:$/;"	l
setbit	./cmd/yacc/yacc.go	/^func setbit(set Lkset, bit int) { set[bit>>5] |= (1 << uint(bit&31)) }$/;"	f
setbits	./runtime/hash_test.go	/^func setbits(h *HashSet, b []byte, i int, k int) {$/;"	f
setcallerpc	./runtime/stubs.go	/^func setcallerpc(argp unsafe.Pointer, pc uintptr)$/;"	f
setcpuprofilerate	./runtime/cpuprof.go	/^func setcpuprofilerate(hz int32) {$/;"	f
setcpuprofilerate_m	./runtime/proc1.go	/^func setcpuprofilerate_m(hz int32) {$/;"	f
setenv	./cmd/go/go_test.go	/^func (tg *testgoData) setenv(name, val string) {$/;"	f
setenvEinvalTests	./os/env_unix_test.go	/^var setenvEinvalTests = []struct {$/;"	v
setenv_c	./syscall/env_unix.go	/^func setenv_c(k, v string)$/;"	f
setfmode	./cmd/compile/internal/gc/fmt.go	/^func setfmode(flags *int) int {$/;"	f
setfpmasks	./runtime/os_plan9.go	/^func setfpmasks()$/;"	f
setg	./runtime/stubs.go	/^func setg(gg *g)$/;"	f
setg_gcc	./runtime/cgo/gcc_darwin_arm.c	/^void (*setg_gcc)(void*);$/;"	v
setg_gcc	./runtime/cgo/gcc_darwin_arm64.c	/^void (*setg_gcc)(void*);$/;"	v
setg_gcc	./runtime/cgo/gcc_dragonfly_amd64.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_freebsd_386.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_freebsd_amd64.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_freebsd_arm.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_linux_386.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_linux_amd64.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_linux_arm.c	/^void (*setg_gcc)(void*);$/;"	v
setg_gcc	./runtime/cgo/gcc_linux_arm64.c	/^void (*setg_gcc)(void*);$/;"	v
setg_gcc	./runtime/cgo/gcc_linux_ppc64x.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_netbsd_386.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_netbsd_amd64.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_netbsd_arm.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_openbsd_386.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_openbsd_amd64.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setg_gcc	./runtime/cgo/gcc_solaris_amd64.c	/^static void (*setg_gcc)(void*);$/;"	v	file:
setgid	./syscall/exec_solaris.go	/^func setgid(gid uintptr) (err Errno)$/;"	f
setgroups	./syscall/zsyscall_darwin_386.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_darwin_amd64.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_darwin_arm.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_darwin_arm64.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_dragonfly_amd64.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_freebsd_386.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_freebsd_amd64.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_freebsd_arm.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_linux_386.go	/^func setgroups(n int, list *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_linux_amd64.go	/^func setgroups(n int, list *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_linux_arm.go	/^func setgroups(n int, list *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_linux_arm64.go	/^func setgroups(n int, list *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_linux_ppc64.go	/^func setgroups(n int, list *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_linux_ppc64le.go	/^func setgroups(n int, list *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_netbsd_386.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_netbsd_amd64.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_netbsd_arm.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_openbsd_386.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_openbsd_amd64.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_openbsd_arm.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups	./syscall/zsyscall_solaris_amd64.go	/^func setgroups(ngid int, gid *_Gid_t) (err error) {$/;"	f
setgroups1	./syscall/exec_solaris.go	/^func setgroups1(ngid uintptr, gid uintptr) (err Errno)$/;"	f
setheadtype	./cmd/link/internal/ld/lib.go	/^func setheadtype(s string) {$/;"	f
setinterp	./cmd/link/internal/ld/lib.go	/^func setinterp(s string) {$/;"	f
setip	./runtime/defs_windows_386.go	/^func (c *context) setip(x uintptr) { c.eip = uint32(x) }$/;"	f
setip	./runtime/defs_windows_amd64.go	/^func (c *context) setip(x uintptr) { c.rip = uint64(x) }$/;"	f
setitimer	./runtime/os3_solaris.go	/^func setitimer(which int32, value *itimerval, ovalue *itimerval) \/* int32 *\/ {$/;"	f
setitimer	./runtime/os_darwin.go	/^func setitimer(mode int32, new, old *itimerval)$/;"	f
setitimer	./runtime/os_dragonfly.go	/^func setitimer(mode int32, new, old *itimerval)$/;"	f
setitimer	./runtime/os_freebsd.go	/^func setitimer(mode int32, new, old *itimerval)$/;"	f
setitimer	./runtime/os_linux.go	/^func setitimer(mode int32, new, old *itimerval)$/;"	f
setitimer	./runtime/os_netbsd.go	/^func setitimer(mode int32, new, old *itimerval)$/;"	f
setitimer	./runtime/os_openbsd.go	/^func setitimer(mode int32, new, old *itimerval)$/;"	f
setlasterror	./runtime/os2_windows.go	/^func setlasterror(err uint32)$/;"	f
setlineno	./cmd/compile/internal/gc/subr.go	/^func setlineno(n *Node) int32 {$/;"	f
setlinkmode	./cmd/link/internal/ld/go.go	/^func setlinkmode(arg string) {$/;"	f
setlno	./cmd/compile/internal/gc/inl.go	/^func setlno(n *Node, lno int) {$/;"	f
setlnolist	./cmd/compile/internal/gc/inl.go	/^func setlnolist(ll *NodeList, lno int) {$/;"	f
setoverflow	./runtime/hashmap.go	/^func (h *hmap) setoverflow(t *maptype, b, ovf *bmap) {$/;"	f
setpc	./runtime/defs_plan9_386.go	/^func (c *sigctxt) setpc(x uintptr) { c.u.pc = uint32(x) }$/;"	f
setpc	./runtime/defs_plan9_amd64.go	/^func (c *sigctxt) setpc(x uintptr) { c.u.ip = uint64(x) }$/;"	f
setpersrc	./cmd/link/internal/ld/pe.go	/^func setpersrc(sym *LSym) {$/;"	f
setpgid	./syscall/exec_solaris.go	/^func setpgid(pid uintptr, pgid uintptr) (err Errno)$/;"	f
setprofilebucket	./runtime/mheap.go	/^func setprofilebucket(p unsafe.Pointer, b *bucket) {$/;"	f
setrlimit	./syscall/zsyscall_linux_386.go	/^func setrlimit(resource int, rlim *rlimit32) (err error) {$/;"	f
setrlimit	./syscall/zsyscall_linux_arm.go	/^func setrlimit(resource int, rlim *rlimit32) (err error) {$/;"	f
sets	./cmd/vet/bool.go	/^	var sets [][]ast.Expr$/;"	v
setsSP	./runtime/proc1.go	/^func setsSP(pc uintptr) bool {$/;"	f
setsid	./syscall/exec_solaris.go	/^func setsid() (pid uintptr, err Errno)$/;"	f
setsig	./runtime/os1_darwin.go	/^func setsig(i int32, fn uintptr, restart bool) {$/;"	f
setsig	./runtime/os1_dragonfly.go	/^func setsig(i int32, fn uintptr, restart bool) {$/;"	f
setsig	./runtime/os1_freebsd.go	/^func setsig(i int32, fn uintptr, restart bool) {$/;"	f
setsig	./runtime/os1_linux.go	/^func setsig(i int32, fn uintptr, restart bool) {$/;"	f
setsig	./runtime/os1_netbsd.go	/^func setsig(i int32, fn uintptr, restart bool) {$/;"	f
setsig	./runtime/os1_openbsd.go	/^func setsig(i int32, fn uintptr, restart bool) {$/;"	f
setsig	./runtime/os3_solaris.go	/^func setsig(i int32, fn uintptr, restart bool) {$/;"	f
setsigsegv	./runtime/sigpanic_unix.go	/^func setsigsegv(pc uintptr) {$/;"	f
setsigstack	./runtime/os1_darwin.go	/^func setsigstack(i int32) {$/;"	f
setsigstack	./runtime/os1_dragonfly.go	/^func setsigstack(i int32) {$/;"	f
setsigstack	./runtime/os1_freebsd.go	/^func setsigstack(i int32) {$/;"	f
setsigstack	./runtime/os1_linux.go	/^func setsigstack(i int32) {$/;"	f
setsigstack	./runtime/os1_netbsd.go	/^func setsigstack(i int32) {$/;"	f
setsigstack	./runtime/os1_openbsd.go	/^func setsigstack(i int32) {$/;"	f
setsigstack	./runtime/os3_solaris.go	/^func setsigstack(i int32) {$/;"	f
setsockopt	./syscall/syscall_linux_386.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_darwin_386.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_darwin_amd64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_darwin_arm.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_darwin_arm64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_dragonfly_amd64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_freebsd_386.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_freebsd_amd64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_freebsd_arm.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_linux_amd64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_linux_arm.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_linux_arm64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_linux_ppc64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_linux_ppc64le.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_netbsd_386.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_netbsd_amd64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_netbsd_arm.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_openbsd_386.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_openbsd_amd64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_openbsd_arm.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsockopt	./syscall/zsyscall_solaris_amd64.go	/^func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {$/;"	f
setsp	./runtime/defs_plan9_386.go	/^func (c *sigctxt) setsp(x uintptr) { c.u.sp = uint32(x) }$/;"	f
setsp	./runtime/defs_plan9_amd64.go	/^func (c *sigctxt) setsp(x uintptr) { c.u.sp = uint64(x) }$/;"	f
setsp	./runtime/defs_windows_386.go	/^func (c *context) setsp(x uintptr) { c.esp = uint32(x) }$/;"	f
setsp	./runtime/defs_windows_amd64.go	/^func (c *context) setsp(x uintptr) { c.rsp = uint64(x) }$/;"	f
settls	./runtime/asm_386.s	/^settls:$/;"	l
settls	./runtime/asm_amd64.s	/^settls:$/;"	l
setuid	./syscall/exec_solaris.go	/^func setuid(uid uintptr) (err Errno)$/;"	f
setuint16	./cmd/internal/obj/data.go	/^func setuint16(ctxt *Link, s *LSym, r int64, v uint16) int64 {$/;"	f
setuint32	./cmd/internal/obj/data.go	/^func setuint32(ctxt *Link, s *LSym, r int64, v uint32) int64 {$/;"	f
setuint32	./cmd/link/internal/ld/data.go	/^func setuint32(ctxt *Link, s *LSym, r int64, v uint32) int64 {$/;"	f
setuint64	./cmd/internal/obj/data.go	/^func setuint64(ctxt *Link, s *LSym, r int64, v uint64) int64 {$/;"	f
setuint8	./cmd/internal/obj/data.go	/^func setuint8(ctxt *Link, s *LSym, r int64, v uint8) int64 {$/;"	f
setuint8	./cmd/link/internal/ld/data.go	/^func setuint8(ctxt *Link, s *LSym, r int64, v uint8) int64 {$/;"	f
setuintxx	./cmd/link/internal/ld/data.go	/^func setuintxx(ctxt *Link, s *LSym, off int64, v uint64, wid int64) int64 {$/;"	f
setunion	./cmd/yacc/yacc.go	/^func setunion(a, b []int) int {$/;"	f
setup	./cmd/yacc/yacc.go	/^func setup() {$/;"	f
setup	./compress/bzip2/bzip2.go	/^func (bz2 *reader) setup(needMagic bool) error {$/;"	f
setup	./net/interface_unix_test.go	/^func (ti *testInterface) setup() error {$/;"	f
setupOutput	./unicode/maketables.go	/^func setupOutput() {$/;"	f
setupTestData	./net/main_test.go	/^func setupTestData() {$/;"	f
sfdir	./os/os_test.go	/^var sfdir = sysdir.name$/;"	v
sfloat2	./runtime/softfloat_arm.go	/^func sfloat2(pc uint32, regs *[15]uint32) uint32 {$/;"	f
sfname	./os/os_test.go	/^var sfname = sysdir.files[0]$/;"	v
sg	./runtime/mgc.go	/^	var sg, sgnext *sudog$/;"	v
sgen_wb	./cmd/compile/internal/gc/cgen.go	/^func sgen_wb(n *Node, ns *Node, w int64, wb bool) {$/;"	f
sh	./cmd/link/internal/ld/elf.go	/^		var sh *ElfShdr$/;"	v
sh	./cmd/link/internal/ld/elf.go	/^	var sh *ElfShdr$/;"	v
sh	./cmd/link/internal/ld/pe.go	/^var sh [16]IMAGE_SECTION_HEADER$/;"	v
sh1	./cmd/pprof/internal/profile/profile.go	/^	var sh1 string$/;"	v
sh32	./debug/macho/file.go	/^				var sh32 Section32$/;"	v
sh64	./debug/macho/file.go	/^				var sh64 Section64$/;"	v
sha1Hash	./crypto/tls/key_agreement.go	/^func sha1Hash(slices [][]byte) []byte {$/;"	f
sha1Test	./crypto/sha1/sha1_test.go	/^type sha1Test struct {$/;"	t
sha256Test	./crypto/sha256/sha256_test.go	/^type sha256Test struct {$/;"	t
sha512Test	./crypto/sha512/sha512_test.go	/^type sha512Test struct {$/;"	t
shade	./runtime/mgcmark.go	/^func shade(b uintptr) {$/;"	f
shadowTemp	./cmd/vet/testdata/shadow.go	/^	var shadowTemp interface{}$/;"	v
shallow	./cmd/compile/internal/gc/subr.go	/^func shallow(t *Type) *Type {$/;"	f
sharanges	./cmd/link/internal/ld/dwarf.go	/^	var sharanges *ElfShdr$/;"	v
shave	./encoding/xml/xml_test.go	/^			var shave, swant string$/;"	v
shdr	./cmd/link/internal/ld/elf.go	/^var shdr [NSECT]*ElfShdr$/;"	v
shentsize	./debug/elf/file.go	/^	var shentsize, shnum, shstrndx int$/;"	v
shfStrings	./debug/elf/elf.go	/^var shfStrings = []intName{$/;"	v
shift	./go/types/expr.go	/^func (check *Checker) shift(x, y *operand, op token.Token) {$/;"	f
shiftName	./cmd/internal/rsc.io/arm/armasm/inst.go	/^var shiftName = [...]string{$/;"	v
shiftTest	./cmd/compile/internal/big/nat_test.go	/^type shiftTest struct {$/;"	t
shiftTest	./math/big/nat_test.go	/^type shiftTest struct {$/;"	t
shiftTest	./strconv/decimal_test.go	/^type shiftTest struct {$/;"	t
shiftprop	./cmd/compile/internal/arm/peep.go	/^func shiftprop(r *gc.Flow) bool {$/;"	f
shifts	./strconv/itoa.go	/^var shifts = [len(digits) + 1]uint{$/;"	v
shifttests	./strconv/decimal_test.go	/^var shifttests = []shiftTest{$/;"	v
shl	./cmd/compile/internal/big/nat.go	/^func (z nat) shl(x nat, s uint) nat {$/;"	f
shl	./math/big/nat.go	/^func (z nat) shl(x nat, s uint) nat {$/;"	f
shlVU	./cmd/compile/internal/big/arith_decl.go	/^func shlVU(z, x []Word, s uint) (c Word) {$/;"	f
shlVU	./math/big/arith_decl.go	/^func shlVU(z, x []Word, s uint) (c Word)$/;"	f
shlVU	./math/big/arith_decl_pure.go	/^func shlVU(z, x []Word, s uint) (c Word) {$/;"	f
shlVU_g	./cmd/compile/internal/big/arith.go	/^func shlVU_g(z, x []Word, s uint) (c Word) {$/;"	f
shlVU_g	./math/big/arith.go	/^func shlVU_g(z, x []Word, s uint) (c Word) {$/;"	f
shnStrings	./debug/elf/elf.go	/^var shnStrings = []intName{$/;"	v
shoff	./debug/elf/file.go	/^	var shoff int64$/;"	v
short	./time/zoneinfo_windows.go	/^	var short []rune$/;"	v
shortDayNames	./time/format.go	/^var shortDayNames = []string{$/;"	v
shortMonthNames	./time/format.go	/^var shortMonthNames = []string{$/;"	v
shortVarDecl	./go/parser/parser.go	/^func (p *parser) shortVarDecl(decl *ast.AssignStmt, list []ast.Expr) {$/;"	f
shortVarDecl	./go/printer/testdata/parser.go	/^func (p *parser) shortVarDecl(idents []*ast.Ident) {$/;"	f
shortVarDecl	./go/types/assignments.go	/^func (check *Checker) shortVarDecl(pos token.Pos, lhs, rhs []ast.Expr) {$/;"	f
shorterThan	./cmd/go/pkg.go	/^func (sp *importStack) shorterThan(t []string) bool {$/;"	f
shortprop	./cmd/compile/internal/arm/peep.go	/^func shortprop(r *gc.Flow) bool {$/;"	f
should	./cmd/compile/internal/gc/syntax.go	/^	Nosplit        bool \/\/ func should not execute on separate stack$/;"	f
should	./encoding/xml/marshal_test.go	/^		t.Errorf("enc.EncodeToken: pointer type should be rejected")$/;"	t
should	./go/doc/reader.go	/^	\/\/ A type should be added at most once, so typ.decl$/;"	t
should	./runtime/trace.go	/^\/\/ If skip = 0, this event type should contain a stack, but we don't want$/;"	t
shouldBacktrack	./regexp/backtrack.go	/^func shouldBacktrack(prog *syntax.Prog) bool {$/;"	f
shouldClose	./net/http/transfer.go	/^func shouldClose(major, minor int, header Header, removeCloseHeader bool) bool {$/;"	f
shouldEscape	./net/url/url.go	/^func shouldEscape(c byte, mode encoding) bool {$/;"	f
shouldEscapeTest	./net/url/url_test.go	/^type shouldEscapeTest struct {$/;"	t
shouldEscapeTests	./net/url/url_test.go	/^var shouldEscapeTests = []shouldEscapeTest{$/;"	v
shouldPanic	./reflect/all_test.go	/^func shouldPanic(f func()) {$/;"	f
shouldPanic	./sync/atomic/atomic_test.go	/^func shouldPanic(t *testing.T, name string, f func()) {$/;"	f
shouldRedirectGet	./net/http/client.go	/^func shouldRedirectGet(statusCode int) bool {$/;"	f
shouldRedirectPost	./net/http/client.go	/^func shouldRedirectPost(statusCode int) bool {$/;"	f
shouldReuseConnection	./net/http/server.go	/^func (w *response) shouldReuseConnection() bool {$/;"	f
shouldRoundUp	./cmd/compile/internal/big/decimal.go	/^func shouldRoundUp(x *decimal, n int) bool {$/;"	f
shouldRoundUp	./math/big/decimal.go	/^func shouldRoundUp(x *decimal, n int) bool {$/;"	f
shouldRoundUp	./strconv/decimal.go	/^func shouldRoundUp(a *decimal, nd int) bool {$/;"	f
shouldRunTest	./cmd/dist/test.go	/^func (t *tester) shouldRunTest(name string) bool {$/;"	f
shouldSend	./net/http/cookiejar/jar.go	/^func (e *entry) shouldSend(https bool, host, path string) bool {$/;"	f
shouldSendContentLength	./net/http/transfer.go	/^func (t *transferWriter) shouldSendContentLength() bool {$/;"	f
shouldVisit	./regexp/backtrack.go	/^func (b *bitState) shouldVisit(pc uint32, pos int) bool {$/;"	f
shouldtriggergc	./runtime/mgc.go	/^func shouldtriggergc() bool {$/;"	f
showInternals	./cmd/doc/pkg.go	/^func (pkg *Package) showInternals() bool {$/;"	f
showframe	./runtime/traceback.go	/^func showframe(f *_func, gp *g) bool {$/;"	f
shr	./cmd/compile/internal/big/decimal.go	/^func shr(x *decimal, s uint) {$/;"	f
shr	./cmd/compile/internal/big/nat.go	/^func (z nat) shr(x nat, s uint) nat {$/;"	f
shr	./math/big/decimal.go	/^func shr(x *decimal, s uint) {$/;"	f
shr	./math/big/nat.go	/^func (z nat) shr(x nat, s uint) nat {$/;"	f
shrVU	./cmd/compile/internal/big/arith_decl.go	/^func shrVU(z, x []Word, s uint) (c Word) {$/;"	f
shrVU	./math/big/arith_decl.go	/^func shrVU(z, x []Word, s uint) (c Word)$/;"	f
shrVU	./math/big/arith_decl_pure.go	/^func shrVU(z, x []Word, s uint) (c Word) {$/;"	f
shrVU_g	./cmd/compile/internal/big/arith.go	/^func shrVU_g(z, x []Word, s uint) (c Word) {$/;"	f
shrVU_g	./math/big/arith.go	/^func shrVU_g(z, x []Word, s uint) (c Word) {$/;"	f
shrinkstack	./runtime/stack1.go	/^func shrinkstack(gp *g) {$/;"	f
shsym	./cmd/link/internal/ld/elf.go	/^func shsym(sh *ElfShdr, s *LSym) {$/;"	f
shtStrings	./debug/elf/elf.go	/^var shtStrings = []intName{$/;"	v
shuffleByWeight	./net/dnsclient.go	/^func (addrs byPriorityWeight) shuffleByWeight() {$/;"	f
shutdown	./net/fd_unix.go	/^func (fd *netFD) shutdown(how int) error {$/;"	f
shutdown	./net/fd_windows.go	/^func (fd *netFD) shutdown(how int) error {$/;"	f
shutdown	./syscall/zsyscall_windows.go	/^func shutdown(s Handle, how int32) (err error) {$/;"	f
shutdownCodec	./net/rpc/client_test.go	/^type shutdownCodec struct {$/;"	t
si	./database/sql/convert.go	/^	var si driver.Stmt$/;"	v
si	./reflect/all_test.go	/^	var si struct {$/;"	v
si_finish	./runtime/asm_386.s	/^si_finish:$/;"	l
si_finish	./runtime/asm_amd64.s	/^si_finish:$/;"	l
si_finish	./runtime/asm_amd64p32.s	/^si_finish:$/;"	l
si_high	./runtime/asm_386.s	/^si_high:$/;"	l
si_high	./runtime/asm_amd64.s	/^si_high:$/;"	l
si_high	./runtime/asm_amd64p32.s	/^si_high:$/;"	l
sid	./syscall/security_windows.go	/^	var sid *SID$/;"	v
siftDown	./sort/sort.go	/^func siftDown(data Interface, lo, hi, first int) {$/;"	f
siftdownTimer	./runtime/time.go	/^func siftdownTimer(i int) {$/;"	f
siftupTimer	./runtime/time.go	/^func siftupTimer(i int) {$/;"	f
sig	./crypto/tls/key_agreement.go	/^	var sig []byte$/;"	v
sig	./runtime/os3_plan9.go	/^	var sig int$/;"	v
sig	./runtime/sigqueue.go	/^var sig struct {$/;"	v
sig	./runtime/sigqueue_plan9.go	/^var sig struct {$/;"	v
sigAlgo	./crypto/x509/x509.go	/^	var sigAlgo pkix.AlgorithmIdentifier$/;"	v
sigBlocked	./runtime/signal1_unix.go	/^		var sigBlocked sigmask$/;"	v
sigNoArgsStringResult	./cmd/vet/unused.go	/^var sigNoArgsStringResult = types.NewSignature(nil, nil,$/;"	v
sigTabT	./runtime/signal_darwin.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_dragonfly.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_freebsd.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_linux.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_nacl.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_netbsd.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_openbsd.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_plan9.go	/^type sigTabT struct {$/;"	t
sigTabT	./runtime/signal_solaris.go	/^type sigTabT struct {$/;"	t
sigToType	./debug/dwarf/typeunit.go	/^func (d *Data) sigToType(sig uint64) (Type, error) {$/;"	f
sigaction	./runtime/os3_solaris.go	/^func sigaction(sig int32, act *sigactiont, oact *sigactiont) \/* int32 *\/ {$/;"	f
sigaction	./runtime/os_darwin.go	/^func sigaction(mode uint32, new, old *sigactiont)$/;"	f
sigaction	./runtime/os_dragonfly.go	/^func sigaction(sig int32, new, old *sigactiont)$/;"	f
sigaction	./runtime/os_freebsd.go	/^func sigaction(sig int32, new, old *sigactiont)$/;"	f
sigaction	./runtime/os_netbsd.go	/^func sigaction(sig int32, new, old *sigactiont)$/;"	f
sigaction	./runtime/os_openbsd.go	/^func sigaction(sig int32, new, old *sigactiont)$/;"	f
sigactiont	./runtime/defs1_solaris_amd64.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_darwin_386.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_darwin_amd64.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_darwin_arm.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_darwin_arm64.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_linux_386.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_linux_amd64.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_linux_arm.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_linux_arm64.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_linux_ppc64.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/defs_linux_ppc64le.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/os1_dragonfly.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/os1_freebsd.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/os1_netbsd.go	/^type sigactiont struct {$/;"	t
sigactiont	./runtime/os1_openbsd.go	/^type sigactiont struct {$/;"	t
sigaddr	./runtime/signal_darwin_386.go	/^func (c *sigctxt) sigaddr() uint32 { return c.info.si_addr }$/;"	f
sigaddr	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) sigaddr() uint64 { return c.info.si_addr }$/;"	f
sigaddr	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) sigaddr() uint64 { return uint64(uintptr(unsafe.Pointer(c.info.si_addr))) }$/;"	f
sigaddr	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) sigaddr() uint64 { return uint64(c.info.si_addr) }$/;"	f
sigaddr	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) sigaddr() uint32 { return uint32(c.info.si_addr) }$/;"	f
sigaddr	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) sigaddr() uint64 { return uint64(c.info.si_addr) }$/;"	f
sigaddr	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) sigaddr() uint32 { return uint32(c.info.si_addr) }$/;"	f
sigaddr	./runtime/signal_linux_386.go	/^func (c *sigctxt) sigaddr() uint32   { return c.info.si_addr }$/;"	f
sigaddr	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) sigaddr() uint64 { return c.info.si_addr }$/;"	f
sigaddr	./runtime/signal_linux_arm.go	/^func (c *sigctxt) sigaddr() uint32 { return c.info.si_addr }$/;"	f
sigaddr	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) sigaddr() uint64 { return c.info.si_addr }$/;"	f
sigaddr	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) sigaddr() uint64 { return c.info.si_addr }$/;"	f
sigaddr	./runtime/signal_nacl_386.go	/^func (c *sigctxt) sigaddr() uint32   { return 0 }$/;"	f
sigaddr	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) sigaddr() uint64 { return 0 }$/;"	f
sigaddr	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) sigaddr() uint32 { return 0 }$/;"	f
sigaddr	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) sigaddr() uint32 {$/;"	f
sigaddr	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) sigaddr() uint64 {$/;"	f
sigaddr	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) sigaddr() uint32 { return uint32(c.info._reason) }$/;"	f
sigaddr	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) sigaddr() uint32 {$/;"	f
sigaddr	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) sigaddr() uint64 {$/;"	f
sigaddr	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) sigaddr() uint32 {$/;"	f
sigaddr	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) sigaddr() uint64 { return *(*uint64)(unsafe.Pointer(&c.info.__data[0])) }$/;"	f
sigaltstack	./runtime/os3_solaris.go	/^func sigaltstack(ss *sigaltstackt, oss *sigaltstackt) \/* int32 *\/ {$/;"	f
sigaltstack	./runtime/os_darwin.go	/^func sigaltstack(new, old *stackt)$/;"	f
sigaltstack	./runtime/os_dragonfly.go	/^func sigaltstack(new, old *sigaltstackt)$/;"	f
sigaltstack	./runtime/os_freebsd.go	/^func sigaltstack(new, old *stackt)$/;"	f
sigaltstack	./runtime/os_linux.go	/^func sigaltstack(new, old *sigaltstackt)$/;"	f
sigaltstack	./runtime/os_netbsd.go	/^func sigaltstack(new, old *sigaltstackt)$/;"	f
sigaltstack	./runtime/os_openbsd.go	/^func sigaltstack(new, old *stackt)$/;"	f
sigaltstackt	./runtime/defs1_netbsd_386.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs1_netbsd_amd64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs1_netbsd_arm.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs1_solaris_amd64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_dragonfly_amd64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_freebsd_386.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_freebsd_amd64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_freebsd_arm.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_linux_386.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_linux_amd64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_linux_arm.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_linux_arm64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_linux_ppc64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_linux_ppc64le.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_openbsd_386.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_openbsd_amd64.go	/^type sigaltstackt struct {$/;"	t
sigaltstackt	./runtime/defs_openbsd_arm.go	/^type sigaltstackt struct {$/;"	t
sigcmp	./cmd/compile/internal/gc/reflect.go	/^func sigcmp(a *Sig, b *Sig) int {$/;"	f
sigcode	./runtime/signal_darwin_386.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_darwin_amd64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_dragonfly_amd64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_freebsd_386.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_freebsd_amd64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_linux_386.go	/^func (c *sigctxt) sigcode() uint32   { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_linux_amd64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_linux_arm.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_nacl_386.go	/^func (c *sigctxt) sigcode() uint32   { return ^uint32(0) }$/;"	f
sigcode	./runtime/signal_nacl_amd64p32.go	/^func (c *sigctxt) sigcode() uint64 { return ^uint64(0) }$/;"	f
sigcode	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) sigcode() uint32 { return 0 }$/;"	f
sigcode	./runtime/signal_netbsd_386.go	/^func (c *sigctxt) sigcode() uint32  { return uint32(c.info._code) }$/;"	f
sigcode	./runtime/signal_netbsd_amd64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info._code) }$/;"	f
sigcode	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info._code) }$/;"	f
sigcode	./runtime/signal_openbsd_386.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_openbsd_amd64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) sigcode() uint32 { return uint32(c.info.si_code) }$/;"	f
sigcode	./runtime/signal_solaris_amd64.go	/^func (c *sigctxt) sigcode() uint64 { return uint64(c.info.si_code) }$/;"	f
sigcontext	./runtime/defs_linux_386.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_linux_amd64.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_linux_arm.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_linux_arm64.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_linux_ppc64.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_linux_ppc64le.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_openbsd_386.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_openbsd_amd64.go	/^type sigcontext struct {$/;"	t
sigcontext	./runtime/defs_openbsd_arm.go	/^type sigcontext struct {$/;"	t
sigctxt	./runtime/defs_plan9_386.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/defs_plan9_amd64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_darwin_386.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_darwin_amd64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_darwin_arm.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_darwin_arm64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_dragonfly_amd64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_freebsd_386.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_freebsd_amd64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_freebsd_arm.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_linux_386.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_linux_amd64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_linux_arm.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_linux_arm64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_linux_ppc64x.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_nacl_386.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_nacl_amd64p32.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_nacl_arm.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_netbsd_386.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_netbsd_amd64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_netbsd_arm.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_openbsd_386.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_openbsd_amd64.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_openbsd_arm.go	/^type sigctxt struct {$/;"	t
sigctxt	./runtime/signal_solaris_amd64.go	/^type sigctxt struct {$/;"	t
sigdisable	./runtime/os1_nacl.go	/^func sigdisable(uint32)                                   {}$/;"	f
sigdisable	./runtime/os3_plan9.go	/^func sigdisable(sig uint32) {$/;"	f
sigdisable	./runtime/signal1_unix.go	/^func sigdisable(sig uint32) {$/;"	f
sigdisable	./runtime/signal_windows.go	/^func sigdisable(sig uint32) {$/;"	f
sigenable	./runtime/os1_nacl.go	/^func sigenable(uint32)                                    {}$/;"	f
sigenable	./runtime/os3_plan9.go	/^func sigenable(sig uint32) {$/;"	f
sigenable	./runtime/signal1_unix.go	/^func sigenable(sig uint32) {$/;"	f
sigenable	./runtime/signal_windows.go	/^func sigenable(sig uint32) {$/;"	f
sigfwd	./runtime/os_dragonfly.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer)$/;"	f
sigfwd	./runtime/os_freebsd.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer)$/;"	f
sigfwd	./runtime/os_linux.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer)$/;"	f
sigfwd	./runtime/os_nacl.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer) {$/;"	f
sigfwd	./runtime/os_netbsd.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer) {$/;"	f
sigfwd	./runtime/os_openbsd.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer)$/;"	f
sigfwd	./runtime/os_solaris.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer)$/;"	f
sigfwd	./runtime/signal_darwin.go	/^func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer)$/;"	f
sigfwdgo	./runtime/signal_unix.go	/^func sigfwdgo(sig uint32, info *siginfo, ctx unsafe.Pointer) bool {$/;"	f
sighandler	./runtime/os3_plan9.go	/^func sighandler(_ureg *ureg, note *byte, gp *g) int {$/;"	f
sighandler	./runtime/signal_386.go	/^func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {$/;"	f
sighandler	./runtime/signal_amd64x.go	/^func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {$/;"	f
sighandler	./runtime/signal_arm.go	/^func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {$/;"	f
sighandler	./runtime/signal_arm64.go	/^func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {$/;"	f
sighandler	./runtime/signal_ppc64x.go	/^func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {$/;"	f
sigignore	./runtime/os1_nacl.go	/^func sigignore(uint32)                                    {}$/;"	f
sigignore	./runtime/os3_plan9.go	/^func sigignore(sig uint32) {$/;"	f
sigignore	./runtime/signal1_unix.go	/^func sigignore(sig uint32) {$/;"	f
sigignore	./runtime/signal_windows.go	/^func sigignore(sig uint32) {$/;"	f
siginfo	./runtime/defs1_netbsd_386.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs1_netbsd_amd64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs1_netbsd_arm.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs1_solaris_amd64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_darwin_386.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_darwin_amd64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_darwin_arm.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_darwin_arm64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_dragonfly_amd64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_freebsd_386.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_freebsd_amd64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_freebsd_arm.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_linux_386.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_linux_amd64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_linux_arm.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_linux_arm64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_linux_ppc64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_linux_ppc64le.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_openbsd_386.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_openbsd_amd64.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/defs_openbsd_arm.go	/^type siginfo struct {$/;"	t
siginfo	./runtime/os2_nacl.go	/^type siginfo struct{}$/;"	t
sigmask	./runtime/signal1_unix.go	/^type sigmask [(_NSIG + 31) \/ 32]uint32$/;"	t
sign	./cmd/compile/internal/big/float.go	/^		var sign, bexp, mant uint32$/;"	v
sign	./cmd/compile/internal/big/float.go	/^		var sign, bexp, mant uint64$/;"	v
sign	./cmd/compile/internal/big/ftoa.go	/^	var sign string$/;"	v
sign	./cmd/compile/internal/gc/mparith3.go	/^	var sign string$/;"	v
sign	./debug/pe/file.go	/^		var sign [4]byte$/;"	v
sign	./math/big/float.go	/^		var sign, bexp, mant uint32$/;"	v
sign	./math/big/float.go	/^		var sign, bexp, mant uint64$/;"	v
sign	./math/big/ftoa.go	/^	var sign string$/;"	v
sign	./time/format.go	/^			var sign, hour, min, seconds string$/;"	v
signPKCS1v15Test	./crypto/rsa/pkcs1v15_test.go	/^type signPKCS1v15Test struct {$/;"	t
signPKCS1v15Tests	./crypto/rsa/pkcs1v15_test.go	/^var signPKCS1v15Tests = []signPKCS1v15Test{$/;"	v
signPSSWithSalt	./crypto/rsa/pss.go	/^func signPSSWithSalt(rand io.Reader, priv *PrivateKey, hash crypto.Hash, hashed, salt []byte) (s []byte, err error) {$/;"	f
signal	./compress/flate/deflate_test.go	/^func (b *syncBuffer) signal() {$/;"	f
signal	./os/exec_plan9.go	/^func (p *Process) signal(sig Signal) error {$/;"	f
signal	./os/exec_unix.go	/^func (p *Process) signal(sig Signal) error {$/;"	f
signal	./os/exec_windows.go	/^func (p *Process) signal(sig Signal) error {$/;"	f
signalImpl	./sync/cond.go	/^func (c *Cond) signalImpl(all bool) {$/;"	f
signalTrace	./cmd/go/signal_notunix.go	/^var signalTrace os.Signal = nil$/;"	v
signalTrace	./cmd/go/signal_unix.go	/^var signalTrace os.Signal = syscall.SIGQUIT$/;"	v
signal_disable	./os/signal/signal_plan9.go	/^func signal_disable(uint32)$/;"	f
signal_disable	./os/signal/signal_unix.go	/^func signal_disable(uint32)$/;"	f
signal_disable	./runtime/sigqueue.go	/^func signal_disable(s uint32) {$/;"	f
signal_disable	./runtime/sigqueue_plan9.go	/^func signal_disable(s uint32) {$/;"	f
signal_enable	./os/signal/signal_plan9.go	/^func signal_enable(uint32)$/;"	f
signal_enable	./os/signal/signal_unix.go	/^func signal_enable(uint32)$/;"	f
signal_enable	./runtime/sigqueue.go	/^func signal_enable(s uint32) {$/;"	f
signal_enable	./runtime/sigqueue_plan9.go	/^func signal_enable(s uint32) {$/;"	f
signal_ignore	./os/signal/signal_plan9.go	/^func signal_ignore(uint32)$/;"	f
signal_ignore	./os/signal/signal_unix.go	/^func signal_ignore(uint32)$/;"	f
signal_ignore	./runtime/sigqueue.go	/^func signal_ignore(s uint32) {$/;"	f
signal_ignore	./runtime/sigqueue_plan9.go	/^func signal_ignore(s uint32) {$/;"	f
signal_recv	./os/signal/signal_plan9.go	/^func signal_recv() string$/;"	f
signal_recv	./os/signal/signal_unix.go	/^func signal_recv() uint32$/;"	f
signal_recv	./runtime/sigqueue.go	/^func signal_recv() uint32 {$/;"	f
signal_recv	./runtime/sigqueue_plan9.go	/^func signal_recv() string {$/;"	f
signals	./regexp/testdata/testregex.c	/^	int		signals;$/;"	m	struct:__anon2	file:
signals	./syscall/syscall_nacl.go	/^var signals = [...]string{}$/;"	v
signals	./syscall/zerrors_darwin_386.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_darwin_amd64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_darwin_arm.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_darwin_arm64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_dragonfly_amd64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_freebsd_386.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_freebsd_amd64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_freebsd_arm.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_linux_386.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_linux_amd64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_linux_arm.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_linux_arm64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_linux_ppc64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_linux_ppc64le.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_netbsd_386.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_netbsd_amd64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_netbsd_arm.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_openbsd_386.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_openbsd_amd64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_openbsd_arm.go	/^var signals = [...]string{$/;"	v
signals	./syscall/zerrors_solaris_amd64.go	/^var signals = [...]string{$/;"	v
signals	./syscall/ztypes_windows.go	/^var signals = [...]string{$/;"	v
signalsToIgnore	./cmd/go/signal_notunix.go	/^var signalsToIgnore = []os.Signal{os.Interrupt}$/;"	v
signalsToIgnore	./cmd/go/signal_unix.go	/^var signalsToIgnore = []os.Signal{os.Interrupt, syscall.SIGQUIT}$/;"	v
signalstack	./runtime/os1_darwin.go	/^func signalstack(s *stack) {$/;"	f
signalstack	./runtime/os1_dragonfly.go	/^func signalstack(s *stack) {$/;"	f
signalstack	./runtime/os1_freebsd.go	/^func signalstack(s *stack) {$/;"	f
signalstack	./runtime/os1_linux.go	/^func signalstack(s *stack) {$/;"	f
signalstack	./runtime/os1_netbsd.go	/^func signalstack(s *stack) {$/;"	f
signalstack	./runtime/os1_openbsd.go	/^func signalstack(s *stack) {$/;"	f
signalstack	./runtime/os3_solaris.go	/^func signalstack(s *stack) {$/;"	f
signatlist	./cmd/compile/internal/gc/reflect.go	/^var signatlist *NodeList$/;"	v
signature	./crypto/x509/x509.go	/^	var signature []byte$/;"	v
signature	./debug/dwarf/entry.go	/^			\/\/ 64-bit type signature.$/;"	t
signature	./go/printer/nodes.go	/^func (p *printer) signature(params, result *ast.FieldList) {$/;"	f
signature	./reflect/value.go	/^\/\/ The return value t gives the method type signature (without the receiver).$/;"	t
signatureAlgorithmDetails	./crypto/x509/x509.go	/^var signatureAlgorithmDetails = []struct {$/;"	v
signatureAndHash	./crypto/tls/common.go	/^type signatureAndHash struct {$/;"	t
signatureAndHash	./crypto/tls/handshake_server.go	/^		var signatureAndHash signatureAndHash$/;"	v
signatureString	./cmd/api/goapi.go	/^func (w *Walker) signatureString(sig *types.Signature) string {$/;"	f
signatureType	./crypto/tls/handshake_client.go	/^		var signatureType uint8$/;"	v
signbit	./math/all_test.go	/^var signbit = []bool{$/;"	v
signbitSC	./math/all_test.go	/^var signbitSC = []bool{$/;"	v
signedResult	./encoding/gob/codec_test.go	/^var signedResult = []byte{0x07, 2 * 17}$/;"	v
signingParamsForPublicKey	./crypto/x509/x509.go	/^func signingParamsForPublicKey(pub interface{}, requestedSigAlgo SignatureAlgorithm) (hashFunc crypto.Hash, sigAlgo pkix.AlgorithmIdentifier, err error) {$/;"	f
signum	./os/signal/signal_plan9.go	/^func signum(sig os.Signal) int {$/;"	f
signum	./os/signal/signal_unix.go	/^func signum(sig os.Signal) int {$/;"	f
sigpanic	./runtime/os_nacl.go	/^func sigpanic() {$/;"	f
sigpanic	./runtime/os_plan9.go	/^func sigpanic() {$/;"	f
sigpanic	./runtime/signal_windows.go	/^func sigpanic() {$/;"	f
sigpanic	./runtime/sigpanic_unix.go	/^func sigpanic() {$/;"	f
sigpipe	./os/file_posix.go	/^func sigpipe() \/\/ implemented in package runtime$/;"	f
sigpipe	./runtime/signal1_unix.go	/^func sigpipe() {$/;"	f
sigprocmask	./runtime/os3_solaris.go	/^func sigprocmask(how int32, set *sigset, oset *sigset) \/* int32 *\/ {$/;"	f
sigprocmask	./runtime/os_darwin.go	/^func sigprocmask(how uint32, new, old *uint32)$/;"	f
sigprocmask	./runtime/os_dragonfly.go	/^func sigprocmask(how int32, new, old *sigset)$/;"	f
sigprocmask	./runtime/os_freebsd.go	/^func sigprocmask(how int32, new, old *sigset)$/;"	f
sigprocmask	./runtime/os_netbsd.go	/^func sigprocmask(mode int32, new, old *sigset)$/;"	f
sigprocmask	./runtime/os_openbsd.go	/^func sigprocmask(mode int32, new uint32) uint32$/;"	f
sigprof	./runtime/proc1.go	/^func sigprof(pc, sp, lr uintptr, gp *g, mp *m) {$/;"	f
sigreturn	./runtime/os1_linux.go	/^func sigreturn()$/;"	f
sigreturn	./runtime/signal_darwin.go	/^func sigreturn(ctx unsafe.Pointer, infostyle uint32)$/;"	f
sigsend	./runtime/sigqueue.go	/^func sigsend(s uint32) bool {$/;"	f
sigset	./runtime/defs1_netbsd_386.go	/^type sigset struct {$/;"	t
sigset	./runtime/defs1_netbsd_amd64.go	/^type sigset struct {$/;"	t
sigset	./runtime/defs1_netbsd_arm.go	/^type sigset struct {$/;"	t
sigset	./runtime/defs1_solaris_amd64.go	/^type sigset struct {$/;"	t
sigset	./runtime/defs_dragonfly_amd64.go	/^type sigset struct {$/;"	t
sigset	./runtime/defs_freebsd_386.go	/^type sigset struct {$/;"	t
sigset	./runtime/defs_freebsd_amd64.go	/^type sigset struct {$/;"	t
sigset	./runtime/defs_freebsd_arm.go	/^type sigset struct {$/;"	t
sigset	./runtime/os2_linux.go	/^type sigset [2]uint32$/;"	t
sigset_all	./runtime/os1_darwin.go	/^var sigset_all = ^uint32(0)$/;"	v
sigset_all	./runtime/os1_dragonfly.go	/^var sigset_all = sigset{[4]uint32{^uint32(0), ^uint32(0), ^uint32(0), ^uint32(0)}}$/;"	v
sigset_all	./runtime/os1_freebsd.go	/^var sigset_all = sigset{[4]uint32{^uint32(0), ^uint32(0), ^uint32(0), ^uint32(0)}}$/;"	v
sigset_all	./runtime/os1_linux.go	/^var sigset_all sigset = sigset{^uint32(0), ^uint32(0)}$/;"	v
sigset_all	./runtime/os1_netbsd.go	/^var sigset_all = sigset{[4]uint32{^uint32(0), ^uint32(0), ^uint32(0), ^uint32(0)}}$/;"	v
sigset_all	./runtime/os3_solaris.go	/^var sigset_all = sigset{[4]uint32{^uint32(0), ^uint32(0), ^uint32(0), ^uint32(0)}}$/;"	v
sigtab	./os/signal/signal_plan9.go	/^var sigtab = make(map[os.Signal]int)$/;"	v
sigtable	./runtime/signal_darwin.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_dragonfly.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_freebsd.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_linux.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_nacl.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_netbsd.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_openbsd.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_plan9.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtable	./runtime/signal_solaris.go	/^var sigtable = [...]sigTabT{$/;"	v
sigtabtt	./runtime/runtime2.go	/^type sigtabtt struct {$/;"	t
sigtramp	./runtime/os1_dragonfly.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os1_freebsd.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os1_linux.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os1_nacl.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os1_netbsd.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os1_openbsd.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os3_solaris.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os_darwin.go	/^func sigtramp()$/;"	f
sigtramp	./runtime/os_plan9.go	/^func sigtramp(ureg, msg unsafe.Pointer)$/;"	f
sigtrampgo	./runtime/signal_darwin.go	/^func sigtrampgo(fn uintptr, infostyle, sig uint32, info *siginfo, ctx unsafe.Pointer) {$/;"	f
sigtrampgo	./runtime/signal_linux.go	/^func sigtrampgo(sig uint32, info *siginfo, ctx unsafe.Pointer) {$/;"	f
sigunblock	./regexp/testdata/testregex.c	/^sigunblock(int s)$/;"	f	file:
simpleFold	./cmd/doc/pkg.go	/^func simpleFold(r rune) rune {$/;"	f
simpleFoldTests	./unicode/letter_test.go	/^var simpleFoldTests = []string{$/;"	v
simpleJoin	./path/filepath/path_test.go	/^func simpleJoin(dir, path string) string {$/;"	f
simpleLetterEqualFold	./encoding/json/fold.go	/^func simpleLetterEqualFold(s, t []byte) bool {$/;"	f
simpleMaskLength	./net/ip.go	/^func simpleMaskLength(mask IPMask) int {$/;"	f
simpleReader	./fmt/scan_test.go	/^type simpleReader struct {$/;"	t
simpleStmt	./go/types/stmt.go	/^func (check *Checker) simpleStmt(s ast.Stmt) {$/;"	f
simple_stmt	./cmd/compile/internal/gc/go.y	/^simple_stmt:$/;"	l
simplename	./cmd/compile/internal/gc/sinit.go	/^func simplename(n *Node) bool {$/;"	f
simplifier	./cmd/gofmt/simplify.go	/^type simplifier struct {$/;"	t
simplify	./cmd/gofmt/simplify.go	/^func simplify(f *ast.File) {$/;"	f
simplify1	./regexp/syntax/simplify.go	/^func simplify1(op Op, flags Flags, sub, re *Regexp) *Regexp {$/;"	f
simplifyComplex	./text/template/parse/node.go	/^func (n *NumberNode) simplifyComplex() {$/;"	f
simplifyTests	./regexp/syntax/simplify_test.go	/^var simplifyTests = []struct {$/;"	v
sin	./go/types/resolver_test.go	/^		func sin(x float64) float64 {$/;"	f
sin	./math/all_test.go	/^var sin = []float64{$/;"	v
sin	./math/cmplx/cmath_test.go	/^var sin = []complex128{$/;"	v
sin	./math/sin.go	/^func sin(x float64) float64 {$/;"	f
sinLarge	./math/all_test.go	/^var sinLarge = []float64{$/;"	v
sinPi	./math/lgamma.go	/^func sinPi(x float64) float64 {$/;"	f
sinSC	./math/all_test.go	/^var sinSC = []float64{$/;"	v
sinSC	./math/cmplx/cmath_test.go	/^var sinSC = []complex128{$/;"	v
sincos	./math/sincos.go	/^func sincos(x float64) (sin, cos float64) {$/;"	f
singleJoiningSlash	./net/http/httputil/reverseproxy.go	/^func singleJoiningSlash(a, b string) string {$/;"	f
singleStringReplacer	./strings/replace.go	/^type singleStringReplacer struct {$/;"	t
singleTests	./encoding/gob/encoder_test.go	/^var singleTests = []SingleTest{$/;"	v
singletonValue	./encoding/gob/debug.go	/^func (deb *debugger) singletonValue(indent tab, id typeId) {$/;"	f
singletons	./encoding/gob/codec_test.go	/^var singletons = []interface{}{$/;"	v
sinh	./math/all_test.go	/^var sinh = []float64{$/;"	v
sinh	./math/cmplx/cmath_test.go	/^var sinh = []complex128{$/;"	v
sinhSC	./math/all_test.go	/^var sinhSC = []float64{$/;"	v
sinhSC	./math/cmplx/cmath_test.go	/^var sinhSC = []complex128{$/;"	v
sinhcosh	./math/cmplx/sin.go	/^func sinhcosh(x float64) (sh, ch float64) {$/;"	f
sixteen	./encoding/xml/xml_test.go	/^var sixteen = "16"$/;"	v
siz	./cmd/link/internal/ld/data.go	/^	var siz int32$/;"	v
size	./bytes/bytes.go	/^	var size int$/;"	v
size	./bytes/bytes_test.go	/^	var size = 128$/;"	v
size	./cmd/compile/internal/gc/subr.go	/^		var size int64$/;"	v
size	./cmd/vet/shift.go	/^	var size int64$/;"	v
size	./compress/flate/huffman_bit_writer.go	/^	var size = int64(3) +$/;"	v
size	./compress/flate/huffman_code.go	/^		var size uint8$/;"	v
size	./go/internal/gcimporter/exportdata.go	/^		var size int$/;"	v
size	./index/suffixarray/suffixarray.go	/^	var size int$/;"	v
size	./os/os_test.go	/^func size(name string, t *testing.T) int64 {$/;"	f
size	./regexp/exec.go	/^	var size int$/;"	v
size	./runtime/export_test.go	/^	var size uintptr$/;"	v
size	./runtime/stack1.go	/^	var size uintptr$/;"	v
size	./strings/strings.go	/^	var size int$/;"	v
size0	./net/http/serve_test.go	/^	var size0, size1 int$/;"	v
sizeTests	./net/http/fcgi/fcgi_test.go	/^var sizeTests = []struct {$/;"	v
sizeToClass	./runtime/msize.go	/^func sizeToClass(size int32) int32 {$/;"	f
size_to_class128	./runtime/msize.go	/^var size_to_class128 [(_MaxSmallSize-1024)\/128 + 1]int8$/;"	v
size_to_class8	./runtime/msize.go	/^var size_to_class8 [1024\/8 + 1]int8$/;"	v
sizeclass	./runtime/malloc.go	/^			var sizeclass int8$/;"	v
sizeof	./encoding/binary/binary.go	/^func sizeof(t reflect.Type) int {$/;"	f
sizeof	./go/types/sizes.go	/^func (conf *Config) sizeof(T Type) int64 {$/;"	f
sizeof_Array	./cmd/compile/internal/gc/go.go	/^var sizeof_Array int \/\/ runtime sizeof(Array)$/;"	v
sizeof_C_MStats	./runtime/mstats.go	/^var sizeof_C_MStats = unsafe.Offsetof(memstats.by_size) + 61*unsafe.Sizeof(memstats.by_size[0])$/;"	v
sizeof_String	./cmd/compile/internal/gc/go.go	/^var sizeof_String int \/\/ runtime sizeof(String)$/;"	v
sizes	./go/types/builtins.go	/^		var sizes []int64 \/\/ constant integer arguments, if any$/;"	v
skip	./cmd/internal/goobj/read.go	/^func (r *objReader) skip(n int64) {$/;"	f
skip	./cmd/pack/pack.go	/^func (ar *Archive) skip(entry *Entry) {$/;"	f
skip	./debug/dwarf/buf.go	/^func (b *buf) skip(n int) { b.bytes(n) }$/;"	f
skip	./debug/elf/file.go	/^	var skip [Sym32Size]byte$/;"	v
skip	./debug/elf/file.go	/^	var skip [Sym64Size]byte$/;"	v
skip	./encoding/binary/binary.go	/^func (d *decoder) skip(v reflect.Value) {$/;"	f
skip	./encoding/binary/binary.go	/^func (e *encoder) skip(v reflect.Value) {$/;"	f
skip	./encoding/csv/reader.go	/^func (r *Reader) skip(delim rune) error {$/;"	f
skip	./testing/testing.go	/^func (c *common) skip() {$/;"	f
skip	./time/format.go	/^func skip(value, prefix string) (string, error) {$/;"	f
skipCSSSpace	./html/template/css.go	/^func skipCSSSpace(c []byte) []byte {$/;"	f
skipContents	./cmd/pack/pack.go	/^func (ar *Archive) skipContents(entry *Entry) {$/;"	f
skipLWSPChar	./mime/multipart/multipart.go	/^func skipLWSPChar(b []byte) []byte {$/;"	f
skipNop	./regexp/syntax/prog.go	/^func (p *Prog) skipNop(pc uint32) (*Inst, uint32) {$/;"	f
skipSpace	./fmt/scan.go	/^func (s *ss) skipSpace(stopAtNewline bool) {$/;"	f
skipSpace	./net/mail/message.go	/^func (p *addrParser) skipSpace() {$/;"	f
skipSpace	./net/textproto/reader.go	/^func (r *Reader) skipSpace() int {$/;"	f
skipSpecialPlatforms	./go/internal/gcimporter/gcimporter_test.go	/^func skipSpecialPlatforms(t *testing.T) {$/;"	f
skipStdinCopyError	./os/exec/exec.go	/^var skipStdinCopyError func(error) bool$/;"	v
skipUnread	./archive/tar/reader.go	/^func (tr *Reader) skipUnread() {$/;"	f
skipWhitespace	./go/scanner/scanner.go	/^func (s *Scanner) skipWhitespace() {$/;"	f
skipargs	./runtime/sys_solaris_amd64.s	/^skipargs:$/;"	l
skipcom	./cmd/yacc/yacc.go	/^func skipcom() int {$/;"	f
skipelem	./syscall/fs_nacl.go	/^func skipelem(path string) (elem, rest string) {$/;"	f
skiperrno1	./runtime/sys_solaris_amd64.s	/^skiperrno1:$/;"	l
skiperrno2	./runtime/sys_solaris_amd64.s	/^skiperrno2:	$/;"	l
skipspace	./cmd/yacc/yacc.go	/^func skipspace(line []rune) []rune {$/;"	f
skiptopkgdef	./cmd/compile/internal/gc/lex.go	/^func skiptopkgdef(b *obj.Biobuf) bool {$/;"	f
sl	./cmd/compile/internal/gc/subr.go	/^		var sl *Symlink$/;"	v
sl	./syscall/syscall_unix.go	/^	var sl = struct {$/;"	v
slashToUnderscore	./cmd/cgo/util.go	/^func slashToUnderscore(c rune) rune {$/;"	f
slashslash	./cmd/cover/cover.go	/^var slashslash = []byte("\/\/")$/;"	v
slashtests	./path/filepath/path_test.go	/^var slashtests = []PathTest{$/;"	v
sleb128enc	./cmd/link/internal/ld/dwarf.go	/^func sleb128enc(v int64, dst []byte) int {$/;"	f
sleb128put	./cmd/link/internal/ld/dwarf.go	/^func sleb128put(v int64) {$/;"	f
sleep	./cmd/go/go_test.go	/^func (tg *testgoData) sleep() {$/;"	f
sleep	./runtime/os_plan9.go	/^func sleep(ms int32) int32$/;"	f
slice	./debug/gosym/pclntab.go	/^func (t *LineTable) slice(pc uint64) *LineTable {$/;"	f
slice	./fmt/fmt_test.go	/^var slice = array[:]$/;"	v
slice	./runtime/slice.go	/^type slice struct {$/;"	t
slice3	./go/types/go11.go	/^func slice3(x *ast.SliceExpr) bool {$/;"	f
slice3	./go/types/go12.go	/^func slice3(x *ast.SliceExpr) bool {$/;"	f
sliceAddr	./encoding/json/decode_test.go	/^func sliceAddr(x []int) *[]int                 { return &x }$/;"	f
sliceEncoder	./encoding/json/encode.go	/^type sliceEncoder struct {$/;"	t
sliceError	./runtime/panic.go	/^var sliceError = error(errorString("slice bounds out of range"))$/;"	v
sliceForAppend	./crypto/cipher/gcm.go	/^func sliceForAppend(in []byte, n int) (head, tail []byte) {$/;"	f
sliceHeader	./reflect/value.go	/^type sliceHeader struct {$/;"	t
sliceLit	./runtime/symtab_test.go	/^var sliceLit = []int{lineNumber(), \/\/ 24$/;"	v
sliceMax	./go/types/go11.go	/^func sliceMax(x *ast.SliceExpr) ast.Expr {$/;"	f
sliceMax	./go/types/go12.go	/^func sliceMax(x *ast.SliceExpr) ast.Expr {$/;"	f
sliceOfString	./bytes/bytes_test.go	/^func sliceOfString(s [][]byte) []string {$/;"	f
sliceType	./encoding/gob/doc.go	/^	type sliceType struct {$/;"	t
sliceType	./encoding/gob/type.go	/^type sliceType struct {$/;"	t
sliceType	./reflect/type.go	/^type sliceType struct {$/;"	t
sliceValue	./encoding/gob/debug.go	/^func (deb *debugger) sliceValue(indent tab, wire *wireType) {$/;"	f
slicebytes	./cmd/compile/internal/gc/obj.go	/^func slicebytes(nam *Node, s string, len int) {$/;"	f
slicebytes_gen	./cmd/compile/internal/gc/obj.go	/^var slicebytes_gen int$/;"	v
slicebytetostring	./cmd/compile/internal/gc/builtin/runtime.go	/^func slicebytetostring(*[32]byte, []byte) string$/;"	f
slicebytetostring	./runtime/string.go	/^func slicebytetostring(buf *tmpBuf, b []byte) string {$/;"	f
slicebytetostringtmp	./cmd/compile/internal/gc/builtin/runtime.go	/^func slicebytetostringtmp([]byte) string$/;"	f
slicebytetostringtmp	./runtime/string.go	/^func slicebytetostringtmp(b []byte) string {$/;"	f
slicecopy	./cmd/compile/internal/gc/builtin/runtime.go	/^func slicecopy(to any, fr any, wid uintptr) int$/;"	f
slicecopy	./runtime/slice.go	/^func slicecopy(to, fm slice, width uintptr) int {$/;"	f
slicelit	./cmd/compile/internal/gc/sinit.go	/^func slicelit(ctxt int, n *Node, var_ *Node, init **NodeList) {$/;"	f
slicer	./archive/tar/common.go	/^type slicer []byte$/;"	t
slicerunetostring	./cmd/compile/internal/gc/builtin/runtime.go	/^func slicerunetostring(*[32]byte, []rune) string$/;"	f
slicerunetostring	./runtime/string.go	/^func slicerunetostring(buf *tmpBuf, a []rune) string {$/;"	f
slicestringcopy	./cmd/compile/internal/gc/builtin/runtime.go	/^func slicestringcopy(to any, fr any) int$/;"	f
slicestringcopy	./runtime/slice.go	/^func slicestringcopy(to []byte, fm string) int {$/;"	f
slicetype	./runtime/type.go	/^type slicetype struct {$/;"	t
slicing8Table	./hash/crc32/crc32.go	/^type slicing8Table [8]Table$/;"	t
slist	./cmd/compile/internal/gc/subr.go	/^var slist *Symlink$/;"	v
sloc	./cmd/pprof/internal/profile/legacy_profile.go	/^		var sloc []*Location$/;"	v
sloc	./cmd/pprof/internal/profile/legacy_profile.go	/^	var sloc []*Location$/;"	v
slots	./time/sleep_test.go	/^var slots = []int{5, 3, 6, 6, 6, 1, 1, 2, 7, 9, 4, 8, 0}$/;"	v
slowAbs	./image/png/paeth_test.go	/^func slowAbs(x int) int {$/;"	f
slowDialTCP	./net/dial_test.go	/^func slowDialTCP(net string, laddr, raddr *TCPAddr, deadline time.Time) (*TCPConn, error) {$/;"	f
slowFDCT	./image/jpeg/dct_test.go	/^func slowFDCT(b *block) {$/;"	f
slowFilterPaeth	./image/png/paeth_test.go	/^func slowFilterPaeth(cdat, pdat []byte, bytesPerPixel int) {$/;"	f
slowIDCT	./image/jpeg/dct_test.go	/^func slowIDCT(b *block) {$/;"	f
slowPaeth	./image/png/paeth_test.go	/^func slowPaeth(a, b, c uint8) uint8 {$/;"	f
slowReader	./bufio/scan_test.go	/^type slowReader struct {$/;"	t
slowReader	./mime/multipart/multipart_test.go	/^type slowReader struct {$/;"	t
slowTestConn	./net/http/serve_test.go	/^type slowTestConn struct {$/;"	t
slowdodiv	./runtime/vlrt.go	/^func slowdodiv(n, d uint64) (q, r uint64) {$/;"	f
small	./runtime/asm_386.s	/^small:$/;"	l
small	./runtime/asm_amd64.s	/^small:$/;"	l
small	./runtime/asm_amd64p32.s	/^small:$/;"	l
small	./runtime/proc_test.go	/^func small(stop chan int, x *[8192]byte) int {$/;"	f
smallPowersOfTen	./strconv/extfloat.go	/^var smallPowersOfTen = [...]extFloat{$/;"	v
smallPrimes	./crypto/rand/util.go	/^var smallPrimes = []uint8{$/;"	v
smallPrimesProduct	./crypto/rand/util.go	/^var smallPrimesProduct = new(big.Int).SetUint64(16294579238595022365)$/;"	v
smallReaddirnames	./os/os_test.go	/^func smallReaddirnames(file *File, length int, t *testing.T) []string {$/;"	f
smallindir	./cmd/compile/internal/amd64/peep.go	/^func smallindir(a *obj.Addr, reg *obj.Addr) bool {$/;"	f
smallindir	./cmd/compile/internal/arm/peep.go	/^func smallindir(a *obj.Addr, reg *obj.Addr) bool {$/;"	f
smallindir	./cmd/compile/internal/arm64/peep.go	/^func smallindir(a *obj.Addr, reg *obj.Addr) bool {$/;"	f
smallindir	./cmd/compile/internal/ppc64/peep.go	/^func smallindir(a *obj.Addr, reg *obj.Addr) bool {$/;"	f
smallindir	./cmd/compile/internal/x86/peep.go	/^func smallindir(a *obj.Addr, reg *obj.Addr) bool {$/;"	f
smtpSender	./net/smtp/smtp_test.go	/^type smtpSender struct {$/;"	t
sng	./image/png/reader_test.go	/^func sng(w io.WriteCloser, filename string, png image.Image) {$/;"	f
sniff	./image/format.go	/^func sniff(r reader) format {$/;"	f
sniffSig	./net/http/sniff.go	/^type sniffSig interface {$/;"	t
sniffSignatures	./net/http/sniff.go	/^var sniffSignatures = []sniffSig{$/;"	v
sniffTests	./net/http/sniff_test.go	/^var sniffTests = []struct {$/;"	v
sniffing	./net/http/serve_test.go	/^\/\/ TestHeadResponses verifies that all MIME type sniffing and Content-Length$/;"	t
so	./encoding/asn1/asn1.go	/^		\/\/ always use the correct string type so we permit it.$/;"	t
so	./go/types/expr.go	/^			\/\/ non-integer numeric constants. Correct the type so that the shift$/;"	t
so	./reflect/value.go	/^		\/\/ Overwrite type so that they match.$/;"	t
sockaddr	./net/iprawsock_posix.go	/^func (a *IPAddr) sockaddr(family int) (syscall.Sockaddr, error) {$/;"	f
sockaddr	./net/sock_posix.go	/^type sockaddr interface {$/;"	t
sockaddr	./net/tcpsock_posix.go	/^func (a *TCPAddr) sockaddr(family int) (syscall.Sockaddr, error) {$/;"	f
sockaddr	./net/udpsock_posix.go	/^func (a *UDPAddr) sockaddr(family int) (syscall.Sockaddr, error) {$/;"	f
sockaddr	./net/unixsock_posix.go	/^func (a *UnixAddr) sockaddr(family int) (syscall.Sockaddr, error) {$/;"	f
sockaddr	./syscall/route_bsd.go	/^func (m *InterfaceAddrMessage) sockaddr() ([]Sockaddr, error) {$/;"	f
sockaddr	./syscall/route_bsd.go	/^func (m *InterfaceMessage) sockaddr() ([]Sockaddr, error) {$/;"	f
sockaddr	./syscall/route_bsd.go	/^func (m *RouteMessage) sockaddr() ([]Sockaddr, error) {$/;"	f
sockaddr	./syscall/route_darwin.go	/^func (m *InterfaceMulticastAddrMessage) sockaddr() ([]Sockaddr, error) {$/;"	f
sockaddr	./syscall/route_dragonfly.go	/^func (m *InterfaceAnnounceMessage) sockaddr() ([]Sockaddr, error) { return nil, nil }$/;"	f
sockaddr	./syscall/route_dragonfly.go	/^func (m *InterfaceMulticastAddrMessage) sockaddr() ([]Sockaddr, error) {$/;"	f
sockaddr	./syscall/route_freebsd.go	/^func (m *InterfaceAnnounceMessage) sockaddr() ([]Sockaddr, error) { return nil, nil }$/;"	f
sockaddr	./syscall/route_freebsd.go	/^func (m *InterfaceMulticastAddrMessage) sockaddr() ([]Sockaddr, error) {$/;"	f
sockaddr	./syscall/route_netbsd.go	/^func (m *InterfaceAnnounceMessage) sockaddr() ([]Sockaddr, error) { return nil, nil }$/;"	f
sockaddr	./syscall/route_openbsd.go	/^func (m *InterfaceAnnounceMessage) sockaddr() ([]Sockaddr, error) { return nil, nil }$/;"	f
sockaddr	./syscall/syscall_bsd.go	/^func (sa *SockaddrDatalink) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_bsd.go	/^func (sa *SockaddrInet4) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_bsd.go	/^func (sa *SockaddrInet6) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_bsd.go	/^func (sa *SockaddrUnix) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_linux.go	/^func (sa *SockaddrInet4) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_linux.go	/^func (sa *SockaddrInet6) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_linux.go	/^func (sa *SockaddrLinklayer) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_linux.go	/^func (sa *SockaddrNetlink) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_linux.go	/^func (sa *SockaddrUnix) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_solaris.go	/^func (sa *SockaddrInet4) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_solaris.go	/^func (sa *SockaddrInet6) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_solaris.go	/^func (sa *SockaddrUnix) sockaddr() (unsafe.Pointer, _Socklen, error) {$/;"	f
sockaddr	./syscall/syscall_windows.go	/^func (sa *SockaddrInet4) sockaddr() (unsafe.Pointer, int32, error) {$/;"	f
sockaddr	./syscall/syscall_windows.go	/^func (sa *SockaddrInet6) sockaddr() (unsafe.Pointer, int32, error) {$/;"	f
sockaddr	./syscall/syscall_windows.go	/^func (sa *SockaddrUnix) sockaddr() (unsafe.Pointer, int32, error) {$/;"	f
sockaddrToIP	./net/iprawsock_posix.go	/^func sockaddrToIP(sa syscall.Sockaddr) Addr {$/;"	f
sockaddrToTCP	./net/tcpsock_posix.go	/^func sockaddrToTCP(sa syscall.Sockaddr) Addr {$/;"	f
sockaddrToUDP	./net/udpsock_posix.go	/^func sockaddrToUDP(sa syscall.Sockaddr) Addr {$/;"	f
sockaddrToUnix	./net/unixsock_posix.go	/^func sockaddrToUnix(sa syscall.Sockaddr) Addr {$/;"	f
sockaddrToUnixgram	./net/unixsock_posix.go	/^func sockaddrToUnixgram(sa syscall.Sockaddr) Addr {$/;"	f
sockaddrToUnixpacket	./net/unixsock_posix.go	/^func sockaddrToUnixpacket(sa syscall.Sockaddr) Addr {$/;"	f
sockaddr_un	./runtime/defs_linux_arm.go	/^type sockaddr_un struct {$/;"	t
sockaddrs	./syscall/route_bsd_test.go	/^type sockaddrs []syscall.Sockaddr$/;"	t
socket	./net/sock_posix.go	/^func socket(net string, family, sotype, proto int, ipv6only bool, laddr, raddr sockaddr, deadline time.Time) (fd *netFD, err error) {$/;"	f
socket	./runtime/stubs_android.go	/^func socket(domain int32, typ int32, prot int32) int32$/;"	f
socket	./syscall/syscall_linux_386.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_darwin_386.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_darwin_amd64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_darwin_arm.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_darwin_arm64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_dragonfly_amd64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_freebsd_386.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_freebsd_amd64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_freebsd_arm.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_linux_amd64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_linux_arm.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_linux_arm64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_linux_ppc64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_linux_ppc64le.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_netbsd_386.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_netbsd_amd64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_netbsd_arm.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_openbsd_386.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_openbsd_amd64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_openbsd_arm.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_solaris_amd64.go	/^func socket(domain int, typ int, proto int) (fd int, err error) {$/;"	f
socket	./syscall/zsyscall_windows.go	/^func socket(af int32, typ int32, protocol int32) (handle Handle, err error) {$/;"	f
socketControlMessageHeaderAndData	./syscall/sockcmsg_unix.go	/^func socketControlMessageHeaderAndData(b []byte) (*Cmsghdr, []byte, error) {$/;"	f
socketcall	./syscall/syscall_linux_386.go	/^func socketcall(call int, a0, a1, a2, a3, a4, a5 uintptr) (n int, err Errno)$/;"	f
socketpair	./syscall/syscall_linux_386.go	/^func socketpair(domain int, typ int, flags int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_darwin_386.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_darwin_amd64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_darwin_arm.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_darwin_arm64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_dragonfly_amd64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_freebsd_386.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_freebsd_amd64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_freebsd_arm.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_linux_amd64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_linux_arm.go	/^func socketpair(domain int, typ int, flags int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_linux_arm64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_linux_ppc64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_linux_ppc64le.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_netbsd_386.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_netbsd_amd64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_netbsd_arm.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_openbsd_386.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_openbsd_amd64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_openbsd_arm.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
socketpair	./syscall/zsyscall_solaris_amd64.go	/^func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {$/;"	f
sockso	./net/internal/socktest/switch_unix.go	/^func (sw *Switch) sockso(s int) *Status {$/;"	f
sockso	./net/internal/socktest/switch_windows.go	/^func (sw *Switch) sockso(s syscall.Handle) *Status {$/;"	f
soclose	./math/all_test.go	/^func soclose(a, b, e float64) bool { return tolerance(a, b, e) }$/;"	f
soclose	./math/cmplx/cmath_test.go	/^func soclose(a, b, e float64) bool { return tolerance(a, b, e) }$/;"	f
softErrorf	./go/types/errors.go	/^func (check *Checker) softErrorf(pos token.Pos, format string, args ...interface{}) {$/;"	f
softfloat	./cmd/internal/obj/arm/obj5.go	/^func softfloat(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
someTime	./database/sql/convert_test.go	/^var someTime = time.Unix(123, 0)$/;"	v
sort	./cmd/pprof/internal/report/report.go	/^func (ns nodes) sort(o nodeOrder) error {$/;"	f
sort	./net/dnsclient.go	/^func (addrs byPriorityWeight) sort() {$/;"	f
sort	./net/dnsclient.go	/^func (s byPref) sort() {$/;"	f
sortBy	./go/doc/reader.go	/^func sortBy(less func(i, j int) bool, swap func(i, j int), n int) {$/;"	f
sortByFreq	./compress/flate/huffman_code.go	/^func sortByFreq(a []literalNode) {$/;"	f
sortByLiteral	./compress/flate/huffman_code.go	/^func sortByLiteral(a []literalNode) {$/;"	f
sortByRFC6724	./net/addrselect.go	/^func sortByRFC6724(addrs []IPAddr) {$/;"	f
sortByRFC6724withSrcs	./net/addrselect.go	/^func sortByRFC6724withSrcs(addrs []IPAddr, srcs []IP) {$/;"	f
sortComments	./go/ast/commentmap.go	/^func sortComments(list []*CommentGroup) {$/;"	f
sortFlags	./flag/flag.go	/^func sortFlags(flags map[string]*Flag) []*Flag {$/;"	f
sortKeys	./text/template/exec.go	/^func sortKeys(v []reflect.Value) []reflect.Value {$/;"	f
sortSpecs	./go/ast/import.go	/^func sortSpecs(fset *token.FileSet, f *File, specs []Spec) []Spec {$/;"	f
sortedByFirstByte	./index/suffixarray/qsufsort.go	/^func sortedByFirstByte(data []byte) []int {$/;"	f
sortedEdges	./cmd/pprof/internal/report/report.go	/^func sortedEdges(edges map[*node]*edgeInfo) edgeList {$/;"	f
sortedFuncs	./go/doc/reader.go	/^func sortedFuncs(m methodSet, allMethods bool) []*Func {$/;"	f
sortedKeyValues	./net/http/header.go	/^func (h Header) sortedKeyValues(exclude map[string]bool) (kvs []keyValues, hs *headerSorter) {$/;"	f
sortedKeys	./go/doc/reader.go	/^func sortedKeys(m map[string]int) []string {$/;"	f
sortedMethodNames	./cmd/api/goapi.go	/^func sortedMethodNames(typ *types.Interface) []string {$/;"	f
sortedTypes	./go/doc/reader.go	/^func sortedTypes(m map[string]*namedType, allMethods bool) []*Type {$/;"	f
sortedValues	./go/doc/reader.go	/^func sortedValues(m []*Value, tok token.Token) []*Value {$/;"	f
sortingName	./go/doc/reader.go	/^func sortingName(d *ast.GenDecl) string {$/;"	f
sortinter	./cmd/compile/internal/gc/subr.go	/^func sortinter(t *Type) *Type {$/;"	f
sortkey	./runtime/select.go	/^func (c *hchan) sortkey() uintptr {$/;"	f
sortsym	./cmd/link/internal/ld/macho.go	/^var sortsym []*LSym$/;"	v
sosHeaderY	./image/jpeg/writer.go	/^var sosHeaderY = []byte{$/;"	v
sosHeaderYCbCr	./image/jpeg/writer.go	/^var sosHeaderYCbCr = []byte{$/;"	v
sotype	./net/unixsock_posix.go	/^	var sotype int$/;"	v
sotypeToNet	./net/unixsock_posix.go	/^func sotypeToNet(sotype int) string {$/;"	f
source	./cmd/internal/obj/x86/obj6.go	/^		var source *obj.Addr$/;"	v
source	./go/scanner/scanner_test.go	/^var source = func() []byte {$/;"	v
source	./runtime/debug/stack.go	/^func source(lines [][]byte, n int) []byte {$/;"	f
sourceCoordinates	./cmd/pprof/internal/report/source.go	/^func sourceCoordinates(asm map[int]nodes) (start, end int) {$/;"	f
sourceFiles	./cmd/pprof/internal/report/source.go	/^		var sourceFiles nodes$/;"	v
sourceLine	./cmd/cgo/ast.go	/^func sourceLine(n ast.Node) int {$/;"	f
sources	./cmd/pprof/internal/profile/legacy_profile.go	/^	var sources []string$/;"	v
sources	./go/types/api_test.go	/^	var sources = []string{$/;"	v
sources	./go/types/eval_test.go	/^	var sources = []string{$/;"	v
sp	./archive/tar/reader.go	/^		var sp int$/;"	v
sp	./archive/tar/reader.go	/^	var sp []sparseEntry$/;"	v
sp	./cmd/vet/testdata/atomic.go	/^	var sp struct{ Counter *uint64 }$/;"	v
sp	./encoding/gob/encoder_test.go	/^	var sp Struct$/;"	v
sp	./regexp/testdata/testregex.c	/^	Sfio_t*		sp;$/;"	m	struct:Disc_s	file:
sp	./runtime/defs_plan9_386.go	/^func (c *sigctxt) sp() uintptr { return uintptr(c.u.sp) }$/;"	f
sp	./runtime/defs_plan9_amd64.go	/^func (c *sigctxt) sp() uintptr { return uintptr(c.u.sp) }$/;"	f
sp	./runtime/defs_windows_386.go	/^func (c *context) sp() uintptr { return uintptr(c.esp) }$/;"	f
sp	./runtime/defs_windows_amd64.go	/^func (c *context) sp() uintptr { return uintptr(c.rsp) }$/;"	f
sp	./runtime/heapdump.go	/^	var sp, pc, lr uintptr$/;"	v
sp	./runtime/mgcmark.go	/^	var sp, barrierOffset, nextBarrier uintptr$/;"	v
sp	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) sp() uint32      { return c.regs().sp }$/;"	f
sp	./runtime/signal_darwin_arm64.go	/^func (c *sigctxt) sp() uint64    { return c.regs().sp }$/;"	f
sp	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) sp() uint32      { return c.regs().__gregs[13] }$/;"	f
sp	./runtime/signal_linux_arm.go	/^func (c *sigctxt) sp() uint32        { return c.regs().sp }$/;"	f
sp	./runtime/signal_linux_arm64.go	/^func (c *sigctxt) sp() uint64        { return c.regs().sp }$/;"	f
sp	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) sp() uint64    { return c.regs().gpr[1] }$/;"	f
sp	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) sp() uint32      { return c.regs().sp }$/;"	f
sp	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) sp() uint32       { return c.regs().__gregs[_REG_R13] }$/;"	f
sp	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) sp() uint32      { return c.regs().sc_usr_sp }$/;"	f
space	./encoding/xml/xml.go	/^func (d *Decoder) space() {$/;"	f
space	./fmt/scan.go	/^var space = [][2]uint16{$/;"	v
space	./go/doc/comment.go	/^var space = []byte(" ")$/;"	v
spaceForLength	./encoding/gob/encoder.go	/^var spaceForLength = make([]byte, maxLength)$/;"	v
spaceParensRx	./cmd/api/goapi.go	/^var spaceParensRx = regexp.MustCompile(` \\(\\S+?\\)`)$/;"	v
spaceTag	./encoding/json/tagkey_test.go	/^type spaceTag struct {$/;"	t
spaceTest	./unicode/letter_test.go	/^var spaceTest = []rune{$/;"	v
spaces_re	./cmd/internal/obj/x86/obj6_test.go	/^var spaces_re *regexp.Regexp = regexp.MustCompile("\\\\s+")$/;"	v
spadjop	./cmd/internal/obj/x86/asm6.go	/^func spadjop(ctxt *obj.Link, p *obj.Prog, l int, q int) int {$/;"	f
span5	./cmd/internal/obj/arm/asm5.go	/^func span5(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
span6	./cmd/internal/obj/x86/asm6.go	/^func span6(ctxt *obj.Link, s *obj.LSym) {$/;"	f
span7	./cmd/internal/obj/arm64/asm7.go	/^func span7(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
span9	./cmd/internal/obj/ppc64/asm9.go	/^func span9(ctxt *obj.Link, cursym *obj.LSym) {$/;"	f
spanOf	./runtime/mheap.go	/^func spanOf(p uintptr) *mspan {$/;"	f
spanOfUnchecked	./runtime/mheap.go	/^func spanOfUnchecked(p uintptr) *mspan {$/;"	f
sparse	./runtime/hash_test.go	/^func sparse(t *testing.T, n int, k int) {$/;"	f
sparseEntry	./archive/tar/reader.go	/^type sparseEntry struct {$/;"	t
sparseFileReadTest	./archive/tar/reader_test.go	/^type sparseFileReadTest struct {$/;"	t
sparseFileReadTests	./archive/tar/reader_test.go	/^var sparseFileReadTests = []sparseFileReadTest{$/;"	v
sparseFileReader	./archive/tar/reader.go	/^type sparseFileReader struct {$/;"	t
sparseFormat	./archive/tar/reader.go	/^	var sparseFormat string$/;"	v
sparseMap	./archive/tar/reader.go	/^	var sparseMap bytes.Buffer$/;"	v
sparseReader	./compress/flate/deflate_test.go	/^type sparseReader struct {$/;"	t
sparseTarTest	./archive/tar/reader_test.go	/^var sparseTarTest = &untarTest{$/;"	v
spawng	./runtime/race1.go	/^	var spawng *g$/;"	v
spec	./go/printer/nodes.go	/^func (p *printer) spec(spec ast.Spec, n int, doIndent bool) {$/;"	f
specNames	./go/doc/reader.go	/^func specNames(specs []ast.Spec) []string {$/;"	f
specNode	./go/ast/ast.go	/^func (*ImportSpec) specNode() {}$/;"	f
specNode	./go/ast/ast.go	/^func (*TypeSpec) specNode()   {}$/;"	f
specNode	./go/ast/ast.go	/^func (*ValueSpec) specNode()  {}$/;"	f
special	./regexp/regexp.go	/^func special(b byte) bool {$/;"	f
special	./runtime/mheap.go	/^type special struct {$/;"	t
special	./strconv/atof.go	/^func special(s string) (f float64, ok bool) {$/;"	f
specialBytes	./regexp/regexp.go	/^var specialBytes = []byte(`\\.+*?()|[]{}^$`)$/;"	v
specialDomainNameTests	./net/dnsclient_unix_test.go	/^var specialDomainNameTests = []struct {$/;"	v
specialTagEndMarkers	./html/template/transition.go	/^var specialTagEndMarkers = [...][]byte{$/;"	v
specialfinalizer	./runtime/mheap.go	/^type specialfinalizer struct {$/;"	t
specialprofile	./runtime/mheap.go	/^type specialprofile struct {$/;"	t
species	./flag/example_test.go	/^var species = flag.String("species", "gopher", "the species we are studying")$/;"	v
specification	./go/types/expr.go	/^elements that have no explicit type specification in the source$/;"	t
specification	./go/types/typexpr.go	/^\/\/ If def != nil, e is the type specification for the named type def, declared$/;"	t
spkg	./cmd/compile/internal/gc/closure.go	/^	var spkg *Pkg$/;"	v
spkg	./cmd/compile/internal/gc/dcl.go	/^	var spkg *Pkg$/;"	v
splicebefore	./cmd/compile/internal/gc/plive.go	/^func splicebefore(lv *Liveness, bb *BasicBlock, prev *obj.Prog, curr *obj.Prog) {$/;"	f
split	./bufio/scan_test.go	/^func (c *countdown) split(data []byte, atEOF bool) (advance int, token []byte, err error) {$/;"	f
split	./cmd/fix/typecheck.go	/^func split(s string) []string {$/;"	f
split	./cmd/go/generate.go	/^func (g *Generator) split(line string) []string {$/;"	f
split	./cmd/vet/bool.go	/^func (op boolOp) split(e ast.Expr) (exprs []ast.Expr) {$/;"	f
split	./go/types/eval_test.go	/^func split(s, sep string) (string, string) {$/;"	f
split	./net/url/url.go	/^func split(s string, c string, cutc bool) (string, string) {$/;"	f
split64	./cmd/compile/internal/arm/gsubr.go	/^func split64(n *gc.Node, lo *gc.Node, hi *gc.Node) {$/;"	f
split64	./cmd/compile/internal/x86/gsubr.go	/^func split64(n *gc.Node, lo *gc.Node, hi *gc.Node) {$/;"	f
splitAtBytes	./net/parse.go	/^func splitAtBytes(s string, t string) []string {$/;"	f
splitBlock	./crypto/tls/conn.go	/^func (hc *halfConn) splitBlock(b *block, n int) (*block, *block) {$/;"	f
splitCommand	./cmd/pprof/internal/driver/interactive.go	/^func splitCommand(input string) []string {$/;"	f
splitError	./go/types/check_test.go	/^func splitError(err error) (pos, msg string) {$/;"	f
splitFailureTests	./net/ip_test.go	/^var splitFailureTests = []struct {$/;"	v
splitFunc	./cmd/fix/typecheck.go	/^func splitFunc(s string) (in, out []string) {$/;"	f
splitGopath	./cmd/doc/main.go	/^func splitGopath() []string {$/;"	f
splitHostZone	./net/ipsock.go	/^func splitHostZone(s string) (host, zone string) {$/;"	f
splitJoinTests	./net/ip_test.go	/^var splitJoinTests = []struct {$/;"	v
splitLines	./cmd/go/vendor_test.go	/^func splitLines(s string) []string {$/;"	f
splitList	./os/exec/lp_windows.go	/^func splitList(path string) []string {$/;"	f
splitList	./path/filepath/path_plan9.go	/^func splitList(path string) []string {$/;"	f
splitList	./path/filepath/path_unix.go	/^func splitList(path string) []string {$/;"	f
splitList	./path/filepath/path_windows.go	/^func splitList(path string) []string {$/;"	f
splitPreMasterSecret	./crypto/tls/prf.go	/^func splitPreMasterSecret(secret []byte) (s1, s2 []byte) {$/;"	f
splitQuoted	./cmd/cgo/gcc.go	/^func splitQuoted(s string) (r []string, err error) {$/;"	f
splitTest	./cmd/go/generate_test.go	/^type splitTest struct {$/;"	t
splitTests	./cmd/go/generate_test.go	/^var splitTests = []splitTest{$/;"	v
splitTests	./regexp/all_test.go	/^var splitTests = []struct {$/;"	v
splitUSTARLongName	./archive/tar/writer.go	/^func (tw *Writer) splitUSTARLongName(name string) (prefix, suffix string, err error) {$/;"	f
splitaftertests	./bytes/bytes_test.go	/^var splitaftertests = []SplitTest{$/;"	v
splitaftertests	./strings/strings_test.go	/^var splitaftertests = []SplitTest{$/;"	v
splitclean	./cmd/compile/internal/arm/gsubr.go	/^func splitclean() {$/;"	f
splitclean	./cmd/compile/internal/x86/gsubr.go	/^func splitclean() {$/;"	f
splitfields	./cmd/dist/util.go	/^func splitfields(p string) []string {$/;"	f
splitlines	./cmd/dist/util.go	/^func splitlines(p string) []string {$/;"	f
splitlisttests	./path/filepath/path_test.go	/^var splitlisttests = []SplitListTest{$/;"	v
splittests	./bytes/bytes_test.go	/^var splittests = []SplitTest{$/;"	v
splittests	./path/filepath/path_test.go	/^	var splittests []SplitTest$/;"	v
splittests	./path/path_test.go	/^var splittests = []SplitTest{$/;"	v
splittests	./strings/strings_test.go	/^var splittests = []SplitTest{$/;"	v
sprint_depchain	./cmd/compile/internal/gc/typecheck.go	/^func sprint_depchain(fmt_ *string, stack *NodeList, cur *Node, first *Node) {$/;"	f
sprintf	./go/types/errors.go	/^func (check *Checker) sprintf(format string, args ...interface{}) string {$/;"	f
sptr	./cmd/compile/internal/gc/reflect.go	/^	var sptr *Sym$/;"	v
spuriousENOTAVAIL	./net/tcpsock_posix.go	/^func spuriousENOTAVAIL(err error) bool {$/;"	f
sqChk	./cmd/compile/internal/big/int_test.go	/^	var sqChk, sqrtChk, sqrtsq Int$/;"	v
sqChk	./math/big/int_test.go	/^	var sqChk, sqrtChk, sqrtsq Int$/;"	v
sqDiff	./image/color/color.go	/^func sqDiff(x, y uint32) uint32 {$/;"	f
sqDiff	./image/draw/draw.go	/^func sqDiff(x, y int32) uint32 {$/;"	f
sqrt	./math/all_test.go	/^var sqrt = []float64{$/;"	v
sqrt	./math/cmplx/cmath_test.go	/^var sqrt = []complex128{$/;"	v
sqrt	./math/sqrt.go	/^\/\/ Others have assembly stubs that jump to func sqrt below.$/;"	f
sqrt	./math/sqrt.go	/^func sqrt(x float64) float64 {$/;"	f
sqrt	./runtime/sqrt.go	/^func sqrt(ix uint64) uint64 {$/;"	f
sqrt	./runtime/sqrt_test.go	/^var sqrt = []float64{$/;"	v
sqrtC	./math/sqrt.go	/^func sqrtC(f float64, r *float64) {$/;"	f
sqrtSC	./math/all_test.go	/^var sqrtSC = []float64{$/;"	v
sqrtSC	./math/cmplx/cmath_test.go	/^var sqrtSC = []complex128{$/;"	v
sqrtSC	./runtime/sqrt_test.go	/^var sqrtSC = []float64{$/;"	v
sr	./bytes/bytes.go	/^		var sr, tr rune$/;"	v
sr	./strings/strings.go	/^		var sr, tr rune$/;"	v
sratioLines	./image/internal/imageutil/gen.go	/^var sratioLines = map[string]string{$/;"	v
src	./cmd/compile/internal/arm/cgen.go	/^		var src gc.Node$/;"	v
src	./cmd/compile/internal/arm/cgen.go	/^	var src gc.Node$/;"	v
src	./cmd/compile/internal/arm64/cgen.go	/^	var src gc.Node$/;"	v
src	./cmd/compile/internal/gc/cgen.go	/^	var src Node$/;"	v
src	./cmd/compile/internal/gc/esc.go	/^		var src *Node$/;"	v
src	./cmd/compile/internal/gc/subr.go	/^\/\/ Can we convert a value of type src to a value of type dst?$/;"	t
src	./cmd/compile/internal/gc/subr.go	/^\/\/ Is type src assignment compatible to type dst?$/;"	t
src	./cmd/compile/internal/ppc64/cgen.go	/^	var src gc.Node$/;"	v
src	./cmd/compile/internal/x86/cgen.go	/^	var src gc.Node$/;"	v
src	./cmd/go/run.go	/^	var src string$/;"	v
src	./cmd/pprof/internal/report/source.go	/^	var src nodes$/;"	v
src	./cmd/vet/asmdecl.go	/^	var src, dst, kind asmKind$/;"	v
src	./encoding/binary/binary_test.go	/^var src = []byte{1, 2, 3, 4, 5, 6, 7, 8}$/;"	v
src	./go/parser/performance_test.go	/^var src = readFile("parser.go")$/;"	v
src	./go/scanner/scanner_test.go	/^	var src = `$/;"	v
src	./go/scanner/scanner_test.go	/^	var src []byte$/;"	v
src	./go/scanner/scanner_test.go	/^	var src string$/;"	v
src	./go/types/builtins.go	/^		var src Type$/;"	v
src	./go/types/builtins_test.go	/^	{"copy", `type T [][]int; var src, dst T; _ = copy(dst, src)`, `func(p.T, p.T) int`},$/;"	v
src	./go/types/builtins_test.go	/^	{"copy", `type T string; type U []byte; var src T; var dst U; copy(dst, src)`, `func(p.U, p.T) int`},$/;"	v
src	./go/types/builtins_test.go	/^	{"copy", `var src string; var dst []byte; copy(dst, src)`, `func([]byte, string) int`},$/;"	v
src	./go/types/builtins_test.go	/^	{"copy", `var src, dst []byte; copy(dst, src)`, `func([]byte, []byte) int`},$/;"	v
src	./go/types/stdlib_test.go	/^	var src [1 << 10]byte \/\/ read at most 1KB$/;"	v
src	./image/draw/bench_test.go	/^	var src image.Image$/;"	v
src	./net/nss.go	/^			var src string$/;"	v
src	./reflect/value.go	/^\/\/ convertOp returns the function to convert a value of type src$/;"	t
srcAddrs	./net/addrselect.go	/^func srcAddrs(addrs []IPAddr) []IP {$/;"	f
srcIsRegularFile	./net/http/server.go	/^func srcIsRegularFile(src io.Reader) (isRegular bool, err error) {$/;"	f
srpc	./syscall/srpc_nacl.go	/^type srpc struct {$/;"	t
srpcClient	./syscall/srpc_nacl.go	/^type srpcClient struct {$/;"	t
srpcErrno	./syscall/srpc_nacl.go	/^type srpcErrno uint32$/;"	t
srpcErrstr	./syscall/srpc_nacl.go	/^var srpcErrstr = [...]string{$/;"	v
srpcService	./syscall/srpc_nacl.go	/^type srpcService struct {$/;"	t
srv	./net/http/serve_test.go	/^	var srv Server$/;"	v
srvString	./net/lookup_test.go	/^func srvString(srvs []*SRV) string {$/;"	f
ss	./debug/pe/file.go	/^	var ss []byte$/;"	v
ss	./fmt/scan.go	/^type ss struct {$/;"	t
ss	./go/token/serialize.go	/^	var ss serializedFileSet$/;"	v
ss	./runtime/closure_test.go	/^var ss *int$/;"	v
ss1	./cmd/vet/testdata/unsafeptr.go	/^	var ss1 *StringHeader$/;"	v
ss2	./cmd/vet/testdata/unsafeptr.go	/^	var ss2 *SliceHeader$/;"	v
ssFree	./fmt/scan.go	/^var ssFree = sync.Pool{$/;"	v
ssave	./fmt/scan.go	/^type ssave struct {$/;"	t
sse	./runtime/asm_amd64.s	/^sse:$/;"	l
sse	./runtime/asm_amd64p32.s	/^sse:$/;"	l
sse42	./hash/crc32/crc32_amd64x.go	/^var sse42 = haveSSE42()$/;"	v
ssesuccess	./runtime/asm_amd64.s	/^ssesuccess:$/;"	l
ssesuccess	./runtime/asm_amd64p32.s	/^ssesuccess:$/;"	l
ssglobal	./runtime/mfinal_test.go	/^var ssglobal string$/;"	v
ssl30MAC	./crypto/tls/cipher_suites.go	/^type ssl30MAC struct {$/;"	t
ssl30Pad1	./crypto/tls/cipher_suites.go	/^var ssl30Pad1 = [48]byte{0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36}$/;"	v
ssl30Pad2	./crypto/tls/cipher_suites.go	/^var ssl30Pad2 = [48]byte{0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c}$/;"	v
ssl3ClientFinishedMagic	./crypto/tls/prf.go	/^var ssl3ClientFinishedMagic = [4]byte{0x43, 0x4c, 0x4e, 0x54}$/;"	v
ssl3ServerFinishedMagic	./crypto/tls/prf.go	/^var ssl3ServerFinishedMagic = [4]byte{0x53, 0x52, 0x56, 0x52}$/;"	v
st	./net/internal/socktest/switch.go	/^	var st []Stat$/;"	v
st	./runtime/os1_darwin.go	/^	var st stackt$/;"	v
st	./runtime/os1_dragonfly.go	/^	var st sigaltstackt$/;"	v
st	./runtime/os1_freebsd.go	/^	var st stackt$/;"	v
st	./runtime/os1_linux.go	/^	var st sigaltstackt$/;"	v
st	./runtime/os1_netbsd.go	/^	var st sigaltstackt$/;"	v
st	./runtime/os1_openbsd.go	/^	var st stackt$/;"	v
st	./runtime/os3_solaris.go	/^	var st sigaltstackt$/;"	v
stack	./cmd/pprof/internal/report/report.go	/^		var stack []nodeInfo$/;"	v
stack	./cmd/trace/trace.go	/^func (ctx *traceContext) stack(stk []*trace.Frame) int {$/;"	f
stack	./cmd/yacc/yacc.go	/^	var stack []int$/;"	v
stack	./database/sql/sql.go	/^func stack() string {$/;"	f
stack	./encoding/xml/xml.go	/^type stack struct {$/;"	t
stack	./regexp/testdata/testregex.c	/^	char*		stack;$/;"	m	struct:__anon2	file:
stack	./runtime/debug/stack.go	/^func stack() []byte {$/;"	f
stack	./runtime/race/testdata/regression_test.go	/^type stack []int$/;"	t
stack	./runtime/runtime2.go	/^type stack struct {$/;"	t
stack	./runtime/trace.go	/^func (ts *traceStack) stack() []uintptr {$/;"	f
stackBarrier	./runtime/stubs.go	/^func stackBarrier()$/;"	f
stackCount	./net/http/main_test.go	/^	var stackCount map[string]int$/;"	v
stackEnt	./debug/gosym/symtab.go	/^	type stackEnt struct {$/;"	t
stackFreeQueue	./runtime/stack1.go	/^var stackFreeQueue mspan$/;"	v
stackGrowthRecursive	./runtime/proc_test.go	/^func stackGrowthRecursive(i int) {$/;"	f
stackProfile	./runtime/pprof/pprof.go	/^type stackProfile [][]uintptr$/;"	t
stackaddr	./cmd/compile/internal/amd64/peep.go	/^func stackaddr(a *obj.Addr) bool {$/;"	f
stackaddr	./cmd/compile/internal/arm/peep.go	/^func stackaddr(a *obj.Addr) bool {$/;"	f
stackaddr	./cmd/compile/internal/arm64/peep.go	/^func stackaddr(a *obj.Addr) bool {$/;"	f
stackaddr	./cmd/compile/internal/ppc64/peep.go	/^func stackaddr(a *obj.Addr) bool {$/;"	f
stackaddr	./cmd/compile/internal/x86/peep.go	/^func stackaddr(a *obj.Addr) bool {$/;"	f
stackalloc	./runtime/stack1.go	/^func stackalloc(n uint32) (stack, []stkbar) {$/;"	f
stackcache_clear	./runtime/stack1.go	/^func stackcache_clear(c *mcache) {$/;"	f
stackcacherefill	./runtime/stack1.go	/^func stackcacherefill(c *mcache, order uint8) {$/;"	f
stackcacherelease	./runtime/stack1.go	/^func stackcacherelease(c *mcache, order uint8) {$/;"	f
stackfree	./runtime/stack1.go	/^func stackfree(stk stack, n uintptr) {$/;"	f
stackfreelist	./runtime/mcache.go	/^type stackfreelist struct {$/;"	t
stackhi	./runtime/cgo/libcgo.h	/^	uintptr stackhi;$/;"	m	struct:G
stackinit	./runtime/stack1.go	/^func stackinit() {$/;"	f
stacklo	./runtime/cgo/libcgo.h	/^	uintptr stacklo;$/;"	m	struct:G
stackmap	./runtime/symtab.go	/^type stackmap struct {$/;"	t
stackmapdata	./runtime/symtab.go	/^func stackmapdata(stkmap *stackmap, n int32) bitvector {$/;"	f
stackpool	./runtime/stack1.go	/^var stackpool [_NumStackOrders]mspan$/;"	v
stackpoolalloc	./runtime/stack1.go	/^func stackpoolalloc(order uint8) gclinkptr {$/;"	f
stackpoolfree	./runtime/stack1.go	/^func stackpoolfree(x gclinkptr, order uint8) {$/;"	f
stackpoolmu	./runtime/stack1.go	/^var stackpoolmu mutex$/;"	v
stacks	./net/http/main_test.go	/^	var stacks string$/;"	v
stacksize	./cmd/yacc/yacc.go	/^var stacksize = 200$/;"	v
stacksplit	./cmd/internal/obj/arm/obj5.go	/^func stacksplit(ctxt *obj.Link, p *obj.Prog, framesize int32) *obj.Prog {$/;"	f
stacksplit	./cmd/internal/obj/arm64/obj7.go	/^func stacksplit(ctxt *obj.Link, p *obj.Prog, framesize int32) *obj.Prog {$/;"	f
stacksplit	./cmd/internal/obj/ppc64/obj9.go	/^func stacksplit(ctxt *obj.Link, p *obj.Prog, framesize int32) *obj.Prog {$/;"	f
stacksplit	./cmd/internal/obj/x86/obj6.go	/^func stacksplit(ctxt *obj.Link, p *obj.Prog, framesize int32, textarg int32) *obj.Prog {$/;"	f
stackt	./runtime/defs1_netbsd_386.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs1_netbsd_amd64.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs1_netbsd_arm.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs1_solaris_amd64.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_darwin_386.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_darwin_amd64.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_darwin_arm.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_darwin_arm64.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_dragonfly_amd64.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_freebsd_386.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_freebsd_amd64.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_freebsd_arm.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_openbsd_386.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_openbsd_amd64.go	/^type stackt struct {$/;"	t
stackt	./runtime/defs_openbsd_arm.go	/^type stackt struct {$/;"	t
stagen	./cmd/yacc/yacc.go	/^func stagen() {$/;"	f
standardCriteria	./net/nss.go	/^func (s nssSource) standardCriteria() bool {$/;"	f
standardStatusAction	./net/nss.go	/^func (c nssCriterion) standardStatusAction(last bool) bool {$/;"	f
stands	./go/ast/ast.go	/^	\/\/ The Spec type stands for any of *ImportSpec, *ValueSpec, and *TypeSpec.$/;"	t
star	./path/filepath/match.go	/^		var star bool$/;"	v
star	./path/match.go	/^		var star bool$/;"	v
star	./regexp/syntax/compile.go	/^func (c *compiler) star(f1 frag, nongreedy bool) frag {$/;"	f
start	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) start(operand []lex.Token) {$/;"	f
start	./cmd/internal/obj/util.go	/^var start time.Time$/;"	v
start	./cmd/link/internal/ld/pcln.go	/^	var start int32$/;"	v
start	./cmd/link/internal/ld/util.go	/^var start = time.Now()$/;"	v
start	./cmd/yacc/yacc.go	/^var start int \/\/ start symbol$/;"	v
start	./crypto/rc4/rc4_amd64.s	/^start:$/;"	l
start	./crypto/rc4/rc4_amd64p32.s	/^start:$/;"	l
start	./encoding/xml/marshal.go	/^	var start StartElement$/;"	v
start	./sort/sort.go	/^	var start, r int$/;"	v
start	./syscall/net_nacl.go	/^func (t *timer) start(q *queue, deadline int64) {$/;"	f
startAlarm	./go/doc/testdata/testing.go	/^func startAlarm() {$/;"	f
startAlarm	./testing/testing.go	/^func startAlarm() {$/;"	f
startBrowser	./cmd/cover/html.go	/^func startBrowser(url string) bool {$/;"	f
startBrowser	./cmd/trace/main.go	/^func startBrowser(url string) bool {$/;"	f
startCycle	./runtime/mgc.go	/^func (c *gcControllerState) startCycle() {$/;"	f
startEscape	./text/tabwriter/tabwriter.go	/^func (b *Writer) startEscape(ch byte) {$/;"	f
startFile	./cmd/pack/pack.go	/^func (ar *Archive) startFile(name string, mtime int64, uid, gid int, mode os.FileMode, size int64) {$/;"	f
startGC	./runtime/mgc.go	/^func startGC(mode int, forceTrigger bool) {$/;"	f
startGofmt	./unicode/maketables.go	/^func startGofmt() io.Writer {$/;"	f
startHttpServer	./net/rpc/server_test.go	/^func startHttpServer() {$/;"	f
startNewServer	./net/rpc/server_test.go	/^func startNewServer() {$/;"	f
startParse	./text/template/parse/parse.go	/^func (t *Tree) startParse(funcs []map[string]interface{}, lex *lexer) {$/;"	f
startPlan9	./net/ipsock_plan9.go	/^func startPlan9(net string, addr Addr) (ctl *os.File, dest, proto, name string, err error) {$/;"	f
startProcess	./os/exec_plan9.go	/^func startProcess(name string, argv []string, attr *ProcAttr) (p *Process, err error) {$/;"	f
startProcess	./os/exec_posix.go	/^func startProcess(name string, argv []string, attr *ProcAttr) (p *Process, err error) {$/;"	f
startProcess	./syscall/exec_plan9.go	/^func startProcess(argv0 string, argv []string, attr *ProcAttr) (pid int, err error) {$/;"	f
startProfile	./cmd/compile/internal/gc/util.go	/^func startProfile() {$/;"	f
startProfile	./cmd/link/internal/ld/util.go	/^func startProfile() {$/;"	f
startRacer	./runtime/race/output_test.go	/^func startRacer(x *int, done chan bool) {$/;"	f
startRange	./cmd/internal/obj/obj.go	/^func (h *LineHist) startRange(lineno int, top *LineStack) {$/;"	f
startServer	./log/syslog/syslog_test.go	/^func startServer(n, la string, done chan<- string) (addr string, sock io.Closer, wg *sync.WaitGroup) {$/;"	f
startServer	./net/fd_windows.go	/^func startServer() {$/;"	f
startServer	./net/rpc/server_test.go	/^func startServer() {$/;"	f
startSigHandlers	./cmd/go/signal.go	/^func startSigHandlers() {$/;"	f
startState	./unicode/maketables.go	/^	var startState *caseState    \/\/ the start of a run; nil for not active$/;"	v
startTheWorld	./runtime/proc1.go	/^func startTheWorld() {$/;"	f
startTheWorldWithSema	./runtime/proc1.go	/^func startTheWorldWithSema() {$/;"	f
startTimer	./runtime/time.go	/^func startTimer(t *timer) {$/;"	f
startTimer	./syscall/net_nacl.go	/^func startTimer(*runtimeTimer)$/;"	f
startTimer	./time/sleep.go	/^func startTimer(*runtimeTimer)$/;"	f
start_complit	./cmd/compile/internal/gc/go.y	/^start_complit:$/;"	l
startcmp	./cmd/compile/internal/gc/popt.go	/^type startcmp []*TempVar$/;"	t
startests	./fmt/fmt_test.go	/^var startests = []struct {$/;"	v
startlockedm	./runtime/proc1.go	/^func startlockedm(gp *g) {$/;"	f
startm	./runtime/proc1.go	/^func startm(_p_ *p, spinning bool) {$/;"	f
startpanic	./runtime/panic.go	/^func startpanic() {$/;"	f
startpanic_m	./runtime/panic1.go	/^func startpanic_m() {$/;"	f
startsWithLowerCase	./time/format.go	/^func startsWithLowerCase(str string) bool {$/;"	f
starttime	./runtime/proc1.go	/^var starttime int64$/;"	v
startup	./hash/crc32/crc32_amd64.s	/^startup:$/;"	l
startup	./hash/crc32/crc32_amd64p32.s	/^startup:$/;"	l
startupFds	./syscall/exec_plan9.go	/^var startupFds []int$/;"	v
startupRandomData	./runtime/runtime2.go	/^var startupRandomData []byte$/;"	v
stat	./cmd/compile/internal/gc/swt.go	/^	var stat *NodeList \/\/ statements$/;"	v
stat	./os/file_unix.go	/^	var stat syscall.Stat_t$/;"	v
stat	./runtime/defs1_solaris_amd64.go	/^type stat struct {$/;"	t
stat	./runtime/malloc.go	/^				var stat uint64$/;"	v
stat	./syscall/fd_nacl.go	/^func (*defaultFileImpl) stat(*Stat_t) error                { return ENOSYS }$/;"	f
stat	./syscall/fd_nacl.go	/^func (f *naclFile) stat(st *Stat_t) error {$/;"	f
stat	./syscall/fs_nacl.go	/^func (f *fsysFile) stat(st *Stat_t) error {$/;"	f
stat	./syscall/zsyscall_plan9_386.go	/^func stat(path string, edir []byte) (n int, err error) {$/;"	f
stat	./syscall/zsyscall_plan9_amd64.go	/^func stat(path string, edir []byte) (n int, err error) {$/;"	f
statAtime	./archive/tar/stat_atim.go	/^func statAtime(st *syscall.Stat_t) time.Time {$/;"	f
statAtime	./archive/tar/stat_atimespec.go	/^func statAtime(st *syscall.Stat_t) time.Time {$/;"	f
statCtime	./archive/tar/stat_atim.go	/^func statCtime(st *syscall.Stat_t) time.Time {$/;"	f
statCtime	./archive/tar/stat_atimespec.go	/^func statCtime(st *syscall.Stat_t) time.Time {$/;"	f
statUnix	./archive/tar/stat_unix.go	/^func statUnix(fi os.FileInfo, h *Header) error {$/;"	f
stataddr	./cmd/compile/internal/gc/sinit.go	/^func stataddr(nam *Node, n *Node) bool {$/;"	f
state	./cmd/pprof/internal/svg/svgpan.go	/^var state = 'none', svgRoot, stateTarget, stateOrigin, stateTf;$/;"	v
state	./cmd/yacc/yacc.go	/^func state(c int) int {$/;"	f
state	./crypto/tls/conn.go	/^	var state ConnectionState$/;"	v
state	./html/template/context.go	/^type state uint8$/;"	t
state	./regexp/testdata/testregex.c	/^} state;$/;"	v	typeref:struct:__anon2	file:
state	./sync/waitgroup.go	/^func (wg *WaitGroup) state() *uint64 {$/;"	f
state	./text/template/exec.go	/^type state struct {$/;"	t
state0	./encoding/json/scanner.go	/^func state0(s *scanner, c int) int {$/;"	f
state1	./encoding/json/scanner.go	/^func state1(s *scanner, c int) int {$/;"	f
stateBeginString	./encoding/json/scanner.go	/^func stateBeginString(s *scanner, c int) int {$/;"	f
stateBeginStringOrEmpty	./encoding/json/scanner.go	/^func stateBeginStringOrEmpty(s *scanner, c int) int {$/;"	f
stateBeginValue	./encoding/json/scanner.go	/^func stateBeginValue(s *scanner, c int) int {$/;"	f
stateBeginValueOrEmpty	./encoding/json/scanner.go	/^func stateBeginValueOrEmpty(s *scanner, c int) int {$/;"	f
stateDot	./encoding/json/scanner.go	/^func stateDot(s *scanner, c int) int {$/;"	f
stateDot0	./encoding/json/scanner.go	/^func stateDot0(s *scanner, c int) int {$/;"	f
stateE	./encoding/json/scanner.go	/^func stateE(s *scanner, c int) int {$/;"	f
stateE0	./encoding/json/scanner.go	/^func stateE0(s *scanner, c int) int {$/;"	f
stateESign	./encoding/json/scanner.go	/^func stateESign(s *scanner, c int) int {$/;"	f
stateEndTop	./encoding/json/scanner.go	/^func stateEndTop(s *scanner, c int) int {$/;"	f
stateEndValue	./encoding/json/scanner.go	/^func stateEndValue(s *scanner, c int) int {$/;"	f
stateError	./encoding/json/scanner.go	/^func stateError(s *scanner, c int) int {$/;"	f
stateF	./encoding/json/scanner.go	/^func stateF(s *scanner, c int) int {$/;"	f
stateFa	./encoding/json/scanner.go	/^func stateFa(s *scanner, c int) int {$/;"	f
stateFal	./encoding/json/scanner.go	/^func stateFal(s *scanner, c int) int {$/;"	f
stateFals	./encoding/json/scanner.go	/^func stateFals(s *scanner, c int) int {$/;"	f
stateFn	./text/template/parse/lex.go	/^type stateFn func(*lexer) stateFn$/;"	t
stateInString	./encoding/json/scanner.go	/^func stateInString(s *scanner, c int) int {$/;"	f
stateInStringEsc	./encoding/json/scanner.go	/^func stateInStringEsc(s *scanner, c int) int {$/;"	f
stateInStringEscU	./encoding/json/scanner.go	/^func stateInStringEscU(s *scanner, c int) int {$/;"	f
stateInStringEscU1	./encoding/json/scanner.go	/^func stateInStringEscU1(s *scanner, c int) int {$/;"	f
stateInStringEscU12	./encoding/json/scanner.go	/^func stateInStringEscU12(s *scanner, c int) int {$/;"	f
stateInStringEscU123	./encoding/json/scanner.go	/^func stateInStringEscU123(s *scanner, c int) int {$/;"	f
stateLog	./net/http/serve_test.go	/^	var stateLog = map[int][]ConnState{}$/;"	v
stateN	./encoding/json/scanner.go	/^func stateN(s *scanner, c int) int {$/;"	f
stateName	./net/http/server.go	/^var stateName = map[ConnState]string{$/;"	v
stateNames	./html/template/context.go	/^var stateNames = [...]string{$/;"	v
stateNeg	./encoding/json/scanner.go	/^func stateNeg(s *scanner, c int) int {$/;"	f
stateNu	./encoding/json/scanner.go	/^func stateNu(s *scanner, c int) int {$/;"	f
stateNul	./encoding/json/scanner.go	/^func stateNul(s *scanner, c int) int {$/;"	f
stateRedo	./encoding/json/scanner.go	/^func stateRedo(s *scanner, c int) int {$/;"	f
stateT	./encoding/json/scanner.go	/^func stateT(s *scanner, c int) int {$/;"	f
stateTable	./cmd/yacc/yacc.go	/^var stateTable []Row$/;"	v
stateTr	./encoding/json/scanner.go	/^func stateTr(s *scanner, c int) int {$/;"	f
stateTru	./encoding/json/scanner.go	/^func stateTru(s *scanner, c int) int {$/;"	f
statemem	./cmd/yacc/yacc.go	/^var statemem []Item$/;"	v
statementBoundary	./cmd/cover/cover.go	/^func (f *File) statementBoundary(s ast.Stmt) token.Pos {$/;"	f
staticHostEntry	./net/hosts_test.go	/^type staticHostEntry struct {$/;"	t
staticassign	./cmd/compile/internal/gc/sinit.go	/^func staticassign(l *Node, r *Node, out **NodeList) bool {$/;"	f
staticcopy	./cmd/compile/internal/gc/sinit.go	/^func staticcopy(l *Node, r *Node, out **NodeList) bool {$/;"	f
staticinit	./cmd/compile/internal/gc/sinit.go	/^func staticinit(n *Node, out **NodeList) bool {$/;"	f
staticname	./cmd/compile/internal/gc/sinit.go	/^func staticname(t *Type, ctxt int) *Node {$/;"	f
stats	./cmd/compile/internal/big/nat_test.go	/^	var stats runtime.MemStats$/;"	v
stats	./math/big/nat_test.go	/^	var stats runtime.MemStats$/;"	v
stats	./net/interface_test.go	/^	var stats routeStats$/;"	v
stats	./net/internal/socktest/switch.go	/^type stats map[Cookie]*Stat$/;"	t
stats	./runtime/debug/garbage_test.go	/^	var stats GCStats$/;"	v
statsResults	./math/rand/rand_test.go	/^type statsResults struct {$/;"	t
statuniqgen	./cmd/compile/internal/gc/go.go	/^var statuniqgen int \/\/ name generator for static temps$/;"	v
status	./net/file_plan9.go	/^func (fd *netFD) status(ln int) (string, error) {$/;"	f
status	./os/exec_unix.go	/^	var status syscall.WaitStatus$/;"	v
status	./os/user/lookup_windows.go	/^	var status uint32$/;"	v
status	./runtime/os1_plan9.go	/^	var status []byte$/;"	v
status	./runtime/traceback.go	/^	var status string$/;"	v
status	./syscall/syscall_bsd.go	/^	var status _C_int$/;"	v
status	./syscall/syscall_linux.go	/^	var status _C_int$/;"	v
statusLine	./net/http/server.go	/^func statusLine(req *Request, code int) string {$/;"	f
statusText	./net/http/status.go	/^var statusText = map[int]string{$/;"	v
statusUpdate	./time/example_test.go	/^func statusUpdate() string { return "" }$/;"	f
stbStrings	./debug/elf/elf.go	/^var stbStrings = []intName{$/;"	v
std	./log/log.go	/^var std = New(os.Stderr, "", LstdFlags)$/;"	v
std0x	./time/format.go	/^var std0x = [...]int{stdZeroMonth, stdZeroDay, stdZeroHour12, stdZeroMinute, stdZeroSecond, stdYear}$/;"	v
stdFunction	./runtime/os_windows.go	/^type stdFunction *byte$/;"	t
stdImporter	./cmd/vet/types.go	/^var stdImporter = importer.Default()$/;"	v
stdRef	./encoding/base64/base64_test.go	/^func stdRef(ref string) string {$/;"	f
stdSizes	./go/types/sizes.go	/^var stdSizes = StdSizes{8, 8}$/;"	v
stdUI	./cmd/pprof/internal/plugin/plugin.go	/^type stdUI struct {$/;"	t
stdcall	./runtime/os1_windows.go	/^func stdcall(fn stdFunction) uintptr {$/;"	f
stdcall0	./runtime/os1_windows.go	/^func stdcall0(fn stdFunction) uintptr {$/;"	f
stdcall1	./runtime/os1_windows.go	/^func stdcall1(fn stdFunction, a0 uintptr) uintptr {$/;"	f
stdcall2	./runtime/os1_windows.go	/^func stdcall2(fn stdFunction, a0, a1 uintptr) uintptr {$/;"	f
stdcall3	./runtime/os1_windows.go	/^func stdcall3(fn stdFunction, a0, a1, a2 uintptr) uintptr {$/;"	f
stdcall4	./runtime/os1_windows.go	/^func stdcall4(fn stdFunction, a0, a1, a2, a3 uintptr) uintptr {$/;"	f
stdcall5	./runtime/os1_windows.go	/^func stdcall5(fn stdFunction, a0, a1, a2, a3, a4 uintptr) uintptr {$/;"	f
stdcall6	./runtime/os1_windows.go	/^func stdcall6(fn stdFunction, a0, a1, a2, a3, a4, a5 uintptr) uintptr {$/;"	f
stdcall7	./runtime/os1_windows.go	/^func stdcall7(fn stdFunction, a0, a1, a2, a3, a4, a5, a6 uintptr) uintptr {$/;"	f
stdcallName	./runtime/syscall_windows_test.go	/^func (f cbDLLFunc) stdcallName() string {$/;"	f
stderr	./cmd/yacc/yacc.go	/^var stderr *bufio.Writer$/;"	v
stderr	./os/exec/exec.go	/^func (c *Cmd) stderr() (f *os.File, err error) {$/;"	f
stdin	./crypto/tls/handshake_client_test.go	/^	var stdin blockingSource$/;"	v
stdin	./os/exec/exec.go	/^func (c *Cmd) stdin() (f *os.File, err error) {$/;"	f
stdout	./cmd/pack/pack.go	/^var stdout io.Writer = os.Stdout$/;"	v
stdout	./os/exec/exec.go	/^func (c *Cmd) stdout() (f *os.File, err error) {$/;"	f
stdout	./os/exec/exec_test.go	/^	var stdout, stderr bytes.Buffer$/;"	v
step	./debug/dwarf/line.go	/^func (r *LineReader) step(entry *LineEntry) bool {$/;"	f
step	./debug/gosym/pclntab.go	/^func (t *LineTable) step(p *[]byte, pc *uint64, val *int32, first bool) bool {$/;"	f
step	./regexp/exec.go	/^func (m *machine) step(runq, nextq *queue, pos, nextPos int, c rune, nextCond syntax.EmptyOp) {$/;"	f
step	./regexp/regexp.go	/^func (i *inputBytes) step(pos int) (rune, int) {$/;"	f
step	./regexp/regexp.go	/^func (i *inputReader) step(pos int) (rune, int) {$/;"	f
step	./regexp/regexp.go	/^func (i *inputString) step(pos int) (rune, int) {$/;"	f
step	./runtime/symtab.go	/^func step(p []byte, pc *uintptr, val *int32, first bool) (newp []byte, ok bool) {$/;"	f
stepflt	./runtime/softfloat_arm.go	/^func stepflt(pc *uint32, regs *[15]uint32) uint32 {$/;"	f
sticky	./cmd/compile/internal/big/nat.go	/^func (x nat) sticky(i uint) uint {$/;"	f
sticky	./math/big/nat.go	/^func (x nat) sticky(i uint) uint {$/;"	f
stickyTests	./cmd/compile/internal/big/nat_test.go	/^var stickyTests = []struct {$/;"	v
stickyTests	./math/big/nat_test.go	/^var stickyTests = []struct {$/;"	v
stin	./cmd/yacc/yacc.go	/^func stin(i int) {$/;"	f
stirling	./math/gamma.go	/^func stirling(x float64) float64 {$/;"	f
stk	./cmd/compile/internal/gc/cgen.go	/^		var stk Node$/;"	v
stk	./cmd/go/get.go	/^	var stk importStack$/;"	v
stk	./cmd/go/pkg.go	/^	var stk importStack$/;"	v
stk	./cmd/go/test.go	/^	var stk importStack$/;"	v
stk	./cmd/internal/obj/obj.go	/^	var stk *LineStack$/;"	v
stk	./runtime/mprof.go	/^	var stk [maxStack]uintptr$/;"	v
stk	./runtime/mprof.go	/^func (b *bucket) stk() []uintptr {$/;"	f
stk	./runtime/proc1.go	/^	var stk [maxCPUProfStack]uintptr$/;"	v
stkbar	./runtime/runtime2.go	/^type stkbar struct {$/;"	t
stkbroke	./cmd/link/internal/ld/lib.go	/^func stkbroke(ch *Chain, limit int) {$/;"	f
stkbucket	./runtime/mprof.go	/^func stkbucket(typ bucketType, size uintptr, stk []uintptr, alloc bool) *bucket {$/;"	f
stkcheck	./cmd/link/internal/ld/lib.go	/^func stkcheck(up *Chain, depth int) int {$/;"	f
stkdelta	./cmd/compile/internal/gc/pgen.go	/^var stkdelta = map[*Node]int64{}$/;"	v
stkframe	./runtime/runtime2.go	/^type stkframe struct {$/;"	t
stkof	./cmd/compile/internal/gc/cgen.go	/^func stkof(n *Node) int64 {$/;"	f
stkprint	./cmd/link/internal/ld/lib.go	/^func stkprint(ch *Chain, limit int) {$/;"	f
stkptrsize	./cmd/compile/internal/gc/go.go	/^var stkptrsize int64 \/\/ prefix of stack containing pointers$/;"	v
stmt	./cmd/compile/internal/gc/go.y	/^stmt:$/;"	l
stmt	./database/sql/sql.go	/^	var stmt *Stmt$/;"	v
stmt	./database/sql/sql_test.go	/^	var stmt *Stmt$/;"	v
stmt	./go/printer/nodes.go	/^func (p *printer) stmt(stmt ast.Stmt, nextIsRBrace bool) {$/;"	f
stmt	./go/types/stmt.go	/^func (check *Checker) stmt(ctxt stmtContext, s ast.Stmt) {$/;"	f
stmtBranches	./go/types/labels.go	/^	var stmtBranches func(ast.Stmt)$/;"	v
stmtContext	./go/types/stmt.go	/^type stmtContext uint$/;"	t
stmtList	./go/printer/nodes.go	/^func (p *printer) stmtList(list []ast.Stmt, nindent int, nextIsRBrace bool) {$/;"	f
stmtList	./go/types/stmt.go	/^func (check *Checker) stmtList(ctxt stmtContext, list []ast.Stmt) {$/;"	f
stmtNode	./go/ast/ast.go	/^func (*AssignStmt) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*BadStmt) stmtNode()        {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*BlockStmt) stmtNode()      {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*BranchStmt) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*CaseClause) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*CommClause) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*DeclStmt) stmtNode()       {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*DeferStmt) stmtNode()      {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*EmptyStmt) stmtNode()      {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*ExprStmt) stmtNode()       {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*ForStmt) stmtNode()        {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*GoStmt) stmtNode()         {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*IfStmt) stmtNode()         {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*IncDecStmt) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*LabeledStmt) stmtNode()    {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*RangeStmt) stmtNode()      {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*ReturnStmt) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*SelectStmt) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*SendStmt) stmtNode()       {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*SwitchStmt) stmtNode()     {}$/;"	f
stmtNode	./go/ast/ast.go	/^func (*TypeSwitchStmt) stmtNode() {}$/;"	f
stmt_list	./cmd/compile/internal/gc/go.y	/^stmt_list:$/;"	l
stmtfmt	./cmd/compile/internal/gc/fmt.go	/^func stmtfmt(n *Node) string {$/;"	f
stmtlabel	./cmd/compile/internal/gc/gen.go	/^func stmtlabel(n *Node) *Label {$/;"	f
stmts	./go/printer/printer_test.go	/^var stmts = []string{$/;"	v
stmtwithinit	./cmd/compile/internal/gc/fmt.go	/^func stmtwithinit(op int) bool {$/;"	f
stop	./cmd/go/generate.go	/^var stop = fmt.Errorf("error in generation")$/;"	v
stop	./go/token/position_test.go	/^	var stop sync.WaitGroup$/;"	v
stop	./net/http/httputil/reverseproxy.go	/^func (m *maxLatencyWriter) stop() { m.done <- true }$/;"	f
stop	./runtime/proc_test.go	/^	var stop uint32$/;"	v
stop	./runtime/proc_test.go	/^var stop = make(chan bool, 1)$/;"	v
stop	./runtime/runtime_unix_test.go	/^	var stop uint32$/;"	v
stop	./syscall/net_nacl.go	/^func (t *timer) stop() {$/;"	f
stopAlarm	./go/doc/testdata/testing.go	/^func stopAlarm() {$/;"	f
stopAlarm	./testing/testing.go	/^func stopAlarm() {$/;"	f
stopParse	./text/template/parse/parse.go	/^func (t *Tree) stopParse() {$/;"	f
stopTheWorld	./runtime/proc1.go	/^func stopTheWorld(reason string) {$/;"	f
stopTheWorldWithSema	./runtime/proc1.go	/^func stopTheWorldWithSema() {$/;"	f
stopTimer	./runtime/time.go	/^func stopTimer(t *timer) bool {$/;"	f
stopTimer	./syscall/net_nacl.go	/^func stopTimer(*runtimeTimer) bool$/;"	f
stopTimer	./time/sleep.go	/^func stopTimer(*runtimeTimer) bool$/;"	f
stoplockedm	./runtime/proc1.go	/^func stoplockedm() {$/;"	f
stopm	./runtime/proc1.go	/^func stopm() {$/;"	f
store	./compress/flate/deflate.go	/^func (d *compressor) store() {$/;"	f
store	./runtime/race/output_test.go	/^func store(x *int, v int) {$/;"	f
store64loop	./sync/atomic/asm_arm.s	/^store64loop:$/;"	l
storeCtx	./crypto/x509/root_windows.go	/^	var storeCtx *syscall.CertContext$/;"	v
storeRcvr	./reflect/value.go	/^func storeRcvr(v Value, p unsafe.Pointer) {$/;"	f
storeUint64	./sync/atomic/64bit_arm.go	/^func storeUint64(addr *uint64, val uint64) {$/;"	f
stored	./cmd/compile/internal/gc/reflect.go	/^	\/\/ type stored in interface word$/;"	t
storedSize	./compress/flate/huffman_bit_writer.go	/^	var storedSize int64 = math.MaxInt64$/;"	v
storeloop	./sync/atomic/asm_darwin_arm.s	/^storeloop:$/;"	l
storeloop	./sync/atomic/asm_freebsd_arm.s	/^storeloop:$/;"	l
storeloop	./sync/atomic/asm_nacl_arm.s	/^storeloop:$/;"	l
storeloop	./sync/atomic/asm_netbsd_arm.s	/^storeloop:$/;"	l
storeloop	./sync/atomic/asm_openbsd_arm.s	/^storeloop:$/;"	l
storeloop1	./sync/atomic/asm_linux_arm.s	/^storeloop1:$/;"	l
str	./cmd/compile/internal/gc/fmt.go	/^	var str string$/;"	v
str	./cmd/compile/internal/gc/lex.go	/^	var str string$/;"	v
str	./cmd/internal/obj/util.go	/^	var str string$/;"	v
str	./go/types/builtins_test.go	/^	{"append", `type T []byte; type U string; var s T; var str U; _ = append(s, str...)`, `func(p.T, p.U...) p.T`},$/;"	v
str	./go/types/builtins_test.go	/^	{"append", `type T []byte; var s T; var str string; _ = append(s, str...)`, `func(p.T, string...) p.T`},$/;"	v
str	./reflect/tostring_test.go	/^	var str string$/;"	v
str	./regexp/syntax/parse.go	/^	var str []rune$/;"	v
strTests	./cmd/compile/internal/big/natconv_test.go	/^var strTests = []struct {$/;"	v
strTests	./math/big/natconv_test.go	/^var strTests = []struct {$/;"	v
strbuf	./cmd/compile/internal/gc/go.go	/^var strbuf bytes.Buffer$/;"	v
strcond	./cmd/internal/obj/arm64/list7.go	/^var strcond = [16]string{$/;"	v
strdata	./cmd/link/internal/ld/data.go	/^var strdata []*LSym$/;"	v
streamBeginTypeStdin	./net/http/fcgi/fcgi_test.go	/^var streamBeginTypeStdin = bytes.Join([][]byte{$/;"	v
streamEncoded	./encoding/json/stream_test.go	/^var streamEncoded = `0.1$/;"	v
streamListener	./net/mockserver_test.go	/^type streamListener struct {$/;"	t
streamTest	./encoding/json/stream_test.go	/^var streamTest = []interface{}{$/;"	v
streamTests	./net/http/fcgi/fcgi_test.go	/^var streamTests = []struct {$/;"	v
streamWriter	./net/http/fcgi/fcgi.go	/^type streamWriter struct {$/;"	t
streq	./regexp/testdata/testregex.c	/^#define streq(/;"	d	file:
strequal	./runtime/alg.go	/^func strequal(p, q unsafe.Pointer) bool {$/;"	f
stress	./runtime/lfstack_test.go	/^var stress []*MyNode$/;"	v
strflags	./regexp/syntax/parse.go	/^	var strflags Flags$/;"	v
strhash	./runtime/alg.go	/^func strhash(a unsafe.Pointer, h uintptr) uintptr {$/;"	f
strictShadowing	./cmd/vet/shadow.go	/^var strictShadowing = flag.Bool("shadowstrict", false, "whether to be strict about shadowing; can be noisy")$/;"	v
string	./builtin/builtin.go	/^type string string$/;"	t
string	./cmd/compile/internal/big/natconv.go	/^func (x nat) string(charset string) string {$/;"	f
string	./cmd/compile/internal/gc/lex.go	/^	\/\/ types[TSTRING] is the named type string$/;"	t
string	./cmd/pprof/internal/report/report.go	/^func (ts tags) string() string {$/;"	f
string	./debug/dwarf/buf.go	/^func (b *buf) string() string {$/;"	f
string	./debug/gosym/pclntab.go	/^func (t *LineTable) string(off uint32) string {$/;"	f
string	./encoding/asn1/asn1.go	/^	\/\/ type string. getUniversalType returns the tag for PrintableString$/;"	t
string	./encoding/gob/debug.go	/^func (deb *debugger) string() string {$/;"	f
string	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind string but not type string. TODO: We can handle this unsafely.$/;"	t
string	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind string but not type string. TODO: We can handle this unsafely.$/;"	t
string	./encoding/gob/type.go	/^func (a *arrayType) string() string { return a.safeString(make(map[typeId]bool)) }$/;"	f
string	./encoding/gob/type.go	/^func (g *gobEncoderType) string() string { return g.Name }$/;"	f
string	./encoding/gob/type.go	/^func (m *mapType) string() string { return m.safeString(make(map[typeId]bool)) }$/;"	f
string	./encoding/gob/type.go	/^func (s *sliceType) string() string { return s.safeString(make(map[typeId]bool)) }$/;"	f
string	./encoding/gob/type.go	/^func (s *structType) string() string { return s.safeString(make(map[typeId]bool)) }$/;"	f
string	./encoding/gob/type.go	/^func (t *CommonType) string() string { return t.Name }$/;"	f
string	./encoding/gob/type.go	/^func (t typeId) string() string {$/;"	f
string	./encoding/gob/type.go	/^func (w *wireType) string() string {$/;"	f
string	./encoding/json/encode.go	/^func (e *encodeState) string(s string) (int, error) {$/;"	f
string	./go/types/eval_test.go	/^		\/\/ we have a string, compare type string$/;"	t
string	./go/types/example_test.go	/^	\/\/ type string string:$/;"	t
string	./go/types/expr.go	/^				\/\/ is a non-constant value of type string."$/;"	t
string	./math/big/natconv.go	/^func (x nat) string(charset string) string {$/;"	f
string	./mime/mediatype.go	/^func ParseMediaType(v string) (mediatype string, params map[string]string, err error) {$/;"	t
string	./mime/mediatype_test.go	/^			t.Errorf("ParseMediaType(%q): got non-empty media type string on error", tt.in)$/;"	t
string	./net/http/fs.go	/^	var ctype string$/;"	t
string	./path/filepath/path.go	/^func (b *lazybuf) string() string {$/;"	f
string	./path/path.go	/^func (b *lazybuf) string() string {$/;"	f
string	./syscall/mksyscall_windows.go	/^func (r *Rets) useLongHandleErrorCode(retvar string) string {$/;"	v
string	./syscall/syscall_linux.go	/^\/\/sys	mount(source string, target string, fstype string, flags uintptr, data *byte) (err error)$/;"	t
string	./syscall/syscall_linux.go	/^func Mount(source string, target string, fstype string, flags uintptr, data string) (err error) {$/;"	t
string	./syscall/zsyscall_linux_386.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	t
string	./syscall/zsyscall_linux_amd64.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	t
string	./syscall/zsyscall_linux_arm.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	t
string	./syscall/zsyscall_linux_arm64.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	t
string	./syscall/zsyscall_linux_ppc64.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	t
string	./syscall/zsyscall_linux_ppc64le.go	/^func mount(source string, target string, fstype string, flags uintptr, data *byte) (err error) {$/;"	t
stringBytes	./encoding/json/encode.go	/^func (e *encodeState) stringBytes(s []byte) (int, error) {$/;"	f
stringDataOnStack	./runtime/string.go	/^func stringDataOnStack(s string) bool {$/;"	f
stringEncoder	./encoding/json/encode.go	/^func stringEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
stringError	./regexp/all_test.go	/^type stringError struct {$/;"	t
stringFinder	./strings/search.go	/^type stringFinder struct {$/;"	t
stringFlagString	./cmd/pprof/internal/driver/driver.go	/^func stringFlagString(label, value string) string {$/;"	f
stringHandler	./net/http/serve_test.go	/^type stringHandler string$/;"	t
stringHash	./runtime/alg.go	/^func stringHash(s string, seed uintptr) uintptr {$/;"	f
stringHeader	./reflect/value.go	/^type stringHeader struct {$/;"	t
stringKind	./encoding/json/decode_test.go	/^	type stringKind string$/;"	t
stringList	./cmd/go/main.go	/^func stringList(args ...interface{}) []string {$/;"	f
stringMap	./net/http/request_test.go	/^type stringMap map[string][]string$/;"	t
stringName	./debug/elf/elf.go	/^func stringName(i uint32, names []intName, goSyntax bool) string {$/;"	f
stringName	./debug/macho/macho.go	/^func stringName(i uint32, names []intName, goSyntax bool) string {$/;"	f
stringPairTest	./cmd/go/match_test.go	/^type stringPairTest struct {$/;"	t
stringPointer	./encoding/json/encode_test.go	/^	type stringPointer struct {$/;"	t
stringReader	./fmt/scan.go	/^type stringReader string$/;"	t
stringSliceTestData	./encoding/asn1/asn1_test.go	/^var stringSliceTestData = [][]string{$/;"	v
stringStruct	./runtime/string.go	/^type stringStruct struct {$/;"	t
stringTable	./debug/elf/file.go	/^func (f *File) stringTable(link uint32) ([]byte, error) {$/;"	f
stringTagExpected	./encoding/json/encode_test.go	/^var stringTagExpected = `{$/;"	v
stringTests	./cmd/compile/internal/big/intconv_test.go	/^var stringTests = []struct {$/;"	v
stringTests	./math/big/intconv_test.go	/^var stringTests = []struct {$/;"	v
stringType	./database/sql/driver/types.go	/^type stringType struct{}$/;"	t
stringValue	./flag/flag.go	/^type stringValue string$/;"	t
stringValues	./encoding/json/encode.go	/^type stringValues []reflect.Value$/;"	t
stringWriter	./io/io.go	/^type stringWriter interface {$/;"	t
stringWriter	./net/http/header.go	/^type stringWriter struct {$/;"	t
stringWriter	./net/http/serve_test.go	/^		type stringWriter interface {$/;"	t
stringWriter	./strings/replace.go	/^type stringWriter struct {$/;"	t
stringWriterIface	./strings/replace.go	/^type stringWriterIface interface {$/;"	t
stringer	./cmd/vet/testdata/print.go	/^type stringer float64$/;"	t
stringer	./html/template/content_test.go	/^type stringer struct {$/;"	t
stringer	./runtime/error.go	/^type stringer interface {$/;"	t
stringer	./text/template/exec_test.go	/^func stringer(s fmt.Stringer) string {$/;"	f
stringerarray	./cmd/vet/testdata/print.go	/^type stringerarray [4]float64$/;"	t
stringerarrayv	./cmd/vet/testdata/print.go	/^var stringerarrayv stringerarray$/;"	v
stringerv	./cmd/vet/testdata/print.go	/^var stringerv stringer$/;"	v
stringify	./html/template/content.go	/^func stringify(args ...interface{}) (string, contentType) {$/;"	f
stringiter	./cmd/compile/internal/gc/builtin/runtime.go	/^func stringiter(string, int) int$/;"	f
stringiter	./runtime/string.go	/^func stringiter(s string, k int) int {$/;"	f
stringiter2	./cmd/compile/internal/gc/builtin/runtime.go	/^func stringiter2(string, int) (retk int, retv rune)$/;"	f
stringiter2	./runtime/string.go	/^func stringiter2(s string, k int) (int, rune) {$/;"	f
strings	./cmd/fix/typecheck.go	/^\/\/ Convert between function type strings and lists of types.$/;"	t
strings	./cmd/fix/typecheck.go	/^\/\/ assign maps type strings to lists of expressions that were assigned$/;"	t
strings	./sort/sort_test.go	/^var strings = [...]string{"", "Hello", "foo", "bar", "foo", "f00", "%*&^*&^&", "***"}$/;"	v
stringsCompare	./cmd/compile/internal/gc/util.go	/^func stringsCompare(a, b string) int {$/;"	f
stringsCompare	./cmd/link/internal/ld/util.go	/^func stringsCompare(a, b string) int {$/;"	f
stringsHasPrefix	./net/parse.go	/^func stringsHasPrefix(s, prefix string) bool {$/;"	f
stringsHasSuffix	./net/parse.go	/^func stringsHasSuffix(s, suffix string) bool {$/;"	f
stringsHasSuffixFold	./net/parse.go	/^func stringsHasSuffixFold(s, suffix string) bool {$/;"	f
stringsym	./cmd/compile/internal/gc/obj.go	/^func stringsym(s string) (hdr, data *Sym) {$/;"	f
stringsym_gen	./cmd/compile/internal/gc/obj.go	/^var stringsym_gen int$/;"	v
stringtoarraylit	./cmd/compile/internal/gc/typecheck.go	/^func stringtoarraylit(np **Node) {$/;"	f
stringtoslicebyte	./cmd/compile/internal/gc/builtin/runtime.go	/^func stringtoslicebyte(*[32]byte, string) []byte$/;"	f
stringtoslicebyte	./runtime/string.go	/^func stringtoslicebyte(buf *tmpBuf, s string) []byte {$/;"	f
stringtoslicebytetmp	./cmd/compile/internal/gc/builtin/runtime.go	/^func stringtoslicebytetmp(string) []byte$/;"	f
stringtoslicebytetmp	./runtime/string.go	/^func stringtoslicebytetmp(s string) []byte {$/;"	f
stringtoslicerune	./cmd/compile/internal/gc/builtin/runtime.go	/^func stringtoslicerune(*[32]rune, string) []rune$/;"	f
stringtoslicerune	./runtime/string.go	/^func stringtoslicerune(buf *[tmpStringBufSize]rune, s string) []rune {$/;"	f
stringtouint32	./cmd/link/internal/ld/util.go	/^func stringtouint32(x []uint32, s string) {$/;"	f
strip85	./encoding/ascii85/ascii85_test.go	/^func strip85(s string) string {$/;"	f
stripCR	./go/scanner/scanner.go	/^func stripCR(b []byte) []byte {$/;"	f
stripCommonPrefix	./go/printer/printer.go	/^func stripCommonPrefix(lines []string) {$/;"	f
stripIPv4Header	./net/iprawsock_posix.go	/^func stripIPv4Header(n int, b []byte) int {$/;"	f
stripOutputComment	./go/doc/example.go	/^func stripOutputComment(body *ast.BlockStmt, comments []*ast.CommentGroup) (*ast.BlockStmt, []*ast.CommentGroup) {$/;"	f
stripParens	./go/printer/nodes.go	/^func stripParens(x ast.Expr) ast.Expr {$/;"	f
stripParensAlways	./go/printer/nodes.go	/^func stripParensAlways(x ast.Expr) ast.Expr {$/;"	f
stripTagAndLength	./encoding/asn1/marshal.go	/^func stripTagAndLength(in []byte) []byte {$/;"	f
stripTags	./html/template/html.go	/^func stripTags(html string) string {$/;"	f
stripTrailingWhitespace	./go/ast/ast.go	/^func stripTrailingWhitespace(s string) string {$/;"	f
strnput	./cmd/link/internal/ld/data.go	/^func strnput(s string, n int) {$/;"	f
strput	./cmd/link/internal/ld/pe.go	/^func strput(s string) {$/;"	f
strs	./cmd/compile/internal/gc/const.go	/^				var strs []string$/;"	v
strs	./net/textproto/reader.go	/^	var strs []string$/;"	v
strtbl	./cmd/link/internal/ld/pe.go	/^var strtbl []byte$/;"	v
strtbladd	./cmd/link/internal/ld/pe.go	/^func strtbladd(name string) int {$/;"	f
struct	./cmd/compile/internal/gc/subr.go	/^					Fatal("func struct missing field: %v %v", ta, tb)$/;"	f
struct	./cmd/compile/internal/gc/subr.go	/^ *	method - M func (t T)(), a TFIELD type struct$/;"	t
struct	./cmd/link/internal/ld/dwarf.go	/^\/\/     ptype struct '[]uint8' and qualifiers need to be quoted away$/;"	t
struct	./cmd/link/internal/ld/dwarf_defs.go	/^\/\/     ptype struct '[]uint8' and qualifiers need to be quoted away$/;"	t
struct	./cmd/link/internal/ld/pcln.go	/^	\/\/	function table, alternating PC and offset to func struct [each entry thearch.ptrsize bytes]$/;"	f
struct	./runtime/runtime2.go	/^type _func struct {$/;"	f
structEncoder	./encoding/json/encode.go	/^type structEncoder struct {$/;"	t
structField	./reflect/type.go	/^type structField struct {$/;"	t
structFieldInfo	./encoding/xml/typeinfo.go	/^func structFieldInfo(typ reflect.Type, f *reflect.StructField) (*fieldInfo, error) {$/;"	f
structTagObjectKeyTests	./encoding/json/tagkey_test.go	/^var structTagObjectKeyTests = []struct {$/;"	v
structType	./cmd/cgo/out.go	/^func (p *Package) structType(n *Name) (string, int64) {$/;"	f
structType	./encoding/gob/doc.go	/^	type structType struct {$/;"	t
structType	./encoding/gob/type.go	/^type structType struct {$/;"	t
structType	./go/types/typexpr.go	/^func (check *Checker) structType(styp *Struct, e *ast.StructType, path []*TypeName) {$/;"	f
structType	./reflect/type.go	/^type structType struct {$/;"	t
structValue	./encoding/gob/debug.go	/^func (deb *debugger) structValue(indent tab, id typeId) {$/;"	f
structargs	./cmd/compile/internal/gc/subr.go	/^func structargs(tl **Type, mustname int) *NodeList {$/;"	f
structcount	./cmd/compile/internal/gc/subr.go	/^func structcount(t *Type) int {$/;"	f
structdcl	./cmd/compile/internal/gc/go.y	/^structdcl:$/;"	l
structdcl_list	./cmd/compile/internal/gc/go.y	/^structdcl_list:$/;"	l
structfield	./cmd/compile/internal/gc/dcl.go	/^func structfield(n *Node) *Type {$/;"	f
structfieldsize	./cmd/link/internal/ld/decodesym.go	/^func structfieldsize() int {$/;"	f
structlit	./cmd/compile/internal/gc/sinit.go	/^func structlit(ctxt int, pass int, n *Node, var_ *Node, init **NodeList) {$/;"	f
structnext	./cmd/compile/internal/gc/subr.go	/^func structnext(s *Iter) *Type {$/;"	f
structpkg	./cmd/compile/internal/gc/go.go	/^var structpkg *Pkg \/\/ package that declared struct, during import$/;"	v
structs	./cmd/compile/internal/gc/reflect.go	/^		\/\/ emit type structs for error and func(error) string.$/;"	t
structtype	./cmd/compile/internal/gc/go.y	/^structtype:$/;"	l
structure	./cmd/compile/internal/gc/reflect.go	/^	\/\/ actual type structure$/;"	t
structure	./cmd/compile/internal/gc/reflect.go	/^	\/\/ which follows the rest of this type structure.$/;"	t
structures	./cmd/compile/internal/gc/reflect.go	/^	\/\/ emit the type structures for int, float, etc.$/;"	t
structures	./debug/gosym/pclntab.go	/^	\/\/ alternating program counters and offsets to func structures.$/;"	f
structures	./reflect/all_test.go	/^	\/\/ The compiler will create the type structures for the derived types,$/;"	t
structures	./reflect/type.go	/^	\/\/ For the type structures linked into the binary, the$/;"	t
structures	./reflect/type.go	/^	\/\/ the type structures in read-only memory.$/;"	t
sts	./runtime/runtime-gdb.py	/^sts = ('idle', 'runnable', 'running', 'syscall', 'waiting', 'moribund', 'dead', 'recovery')$/;"	v
sttStrings	./debug/elf/elf.go	/^var sttStrings = []intName{$/;"	v
stub	./cmd/link/internal/ppc64/asm.go	/^	var stub *ld.LSym$/;"	v
stvStrings	./debug/elf/elf.go	/^var stvStrings = []intName{$/;"	v
stwprocs	./runtime/mgc.go	/^	var stwprocs, maxprocs int32$/;"	v
stype	./net/lookup_windows.go	/^	var stype int32$/;"	v
su	./cmd/vet/testdata/atomic.go	/^	var su struct{ Counter uint64 }$/;"	v
sub	./cmd/compile/internal/big/nat.go	/^func (z nat) sub(x, y nat) nat {$/;"	f
sub	./cmd/link/internal/ld/data.go	/^	var sub *LSym$/;"	v
sub	./math/big/nat.go	/^func (z nat) sub(x, y nat) nat {$/;"	f
sub	./runtime/softfloat64_test.go	/^func sub(x, y float64) float64 { return x - y }$/;"	f
subTests	./time/time_test.go	/^var subTests = []struct {$/;"	v
subVV	./cmd/compile/internal/big/arith_decl.go	/^func subVV(z, x, y []Word) (c Word) {$/;"	f
subVV	./math/big/arith_decl.go	/^func subVV(z, x, y []Word) (c Word)$/;"	f
subVV	./math/big/arith_decl_pure.go	/^func subVV(z, x, y []Word) (c Word) {$/;"	f
subVV_g	./cmd/compile/internal/big/arith.go	/^func subVV_g(z, x, y []Word) (c Word) {$/;"	f
subVV_g	./math/big/arith.go	/^func subVV_g(z, x, y []Word) (c Word) {$/;"	f
subVW	./cmd/compile/internal/big/arith_decl.go	/^func subVW(z, x []Word, y Word) (c Word) {$/;"	f
subVW	./math/big/arith_decl.go	/^func subVW(z, x []Word, y Word) (c Word)$/;"	f
subVW	./math/big/arith_decl_pure.go	/^func subVW(z, x []Word, y Word) (c Word) {$/;"	f
subVW_g	./cmd/compile/internal/big/arith.go	/^func subVW_g(z, x []Word, y Word) (c Word) {$/;"	f
subVW_g	./math/big/arith.go	/^func subVW_g(z, x []Word, y Word) (c Word) {$/;"	f
subWW_g	./cmd/compile/internal/big/arith.go	/^func subWW_g(x, y, c Word) (z1, z0 Word) {$/;"	f
subWW_g	./math/big/arith.go	/^func subWW_g(x, y, c Word) (z1, z0 Word) {$/;"	f
subexpCase	./regexp/all_test.go	/^type subexpCase struct {$/;"	t
subexpCases	./regexp/all_test.go	/^var subexpCases = []subexpCase{$/;"	v
subject	./crypto/x509/x509.go	/^	var subject pkix.RDNSequence$/;"	v
subjectBytes	./crypto/x509/x509.go	/^func subjectBytes(cert *Certificate) ([]byte, error) {$/;"	f
subkey	./crypto/des/block.go	/^	var subkey uint64$/;"	v
subkey	./internal/syscall/windows/registry/key.go	/^	var subkey syscall.Handle$/;"	v
subnode	./cmd/compile/internal/gc/cplx.go	/^func subnode(nr *Node, ni *Node, nc *Node) {$/;"	f
subprop	./cmd/compile/internal/amd64/peep.go	/^func subprop(r0 *gc.Flow) bool {$/;"	f
subprop	./cmd/compile/internal/arm/peep.go	/^func subprop(r0 *gc.Flow) bool {$/;"	f
subprop	./cmd/compile/internal/arm64/peep.go	/^func subprop(r0 *gc.Flow) bool {$/;"	f
subprop	./cmd/compile/internal/ppc64/peep.go	/^func subprop(r0 *gc.Flow) bool {$/;"	f
subprop	./cmd/compile/internal/x86/peep.go	/^func subprop(r0 *gc.Flow) bool {$/;"	f
subreg	./cmd/internal/obj/x86/asm6.go	/^func subreg(p *obj.Prog, from int, to int) {$/;"	f
subsampleRatio	./image/jpeg/scan.go	/^	var subsampleRatio image.YCbCrSubsampleRatio$/;"	v
subsampleRatios	./image/internal/imageutil/gen.go	/^var subsampleRatios = []string{$/;"	v
subsetVal	./database/sql/fakedb_test.go	/^			var subsetVal interface{}$/;"	v
subst	./cmd/gofmt/rewrite.go	/^func subst(m map[string]reflect.Value, pattern reflect.Value, pos reflect.Value) reflect.Value {$/;"	f
substAny	./cmd/compile/internal/gc/subr.go	/^func substAny(tp **Type, types *[]*Type) {$/;"	f
substArgTypes	./cmd/compile/internal/gc/subr.go	/^func substArgTypes(n *Node, types ...*Type) {$/;"	f
substitutetype	./cmd/link/internal/ld/dwarf.go	/^func substitutetype(structdie *DWDie, field string, dwtype *DWDie) {$/;"	f
subtract1	./runtime/mbitmap.go	/^func subtract1(p *byte) *byte {$/;"	f
subtractb	./runtime/mbitmap.go	/^func subtractb(p *byte, n uintptr) *byte {$/;"	f
subv	./encoding/json/decode.go	/^		var subv reflect.Value$/;"	v
subw	./crypto/aes/block.go	/^func subw(w uint32) uint32 {$/;"	f
succ	./cmd/compile/internal/gc/plive.go	/^	var succ *BasicBlock$/;"	v
succ	./race.bat	/^:succ$/;"	l
success	./os/exec_plan9.go	/^func (p *ProcessState) success() bool {$/;"	f
success	./os/exec_posix.go	/^func (p *ProcessState) success() bool {$/;"	f
success	./runtime/asm_amd64.s	/^success:$/;"	l
success	./runtime/asm_amd64p32.s	/^success:$/;"	l
successor	./cmd/compile/internal/arm/peep.go	/^func successor(r *gc.Flow) *gc.Flow {$/;"	f
such	./go/parser/parser.go	/^\/\/ (and not a raw type such as [...]T).$/;"	t
such	./go/printer/testdata/parser.go	/^\/\/ (and not a raw type such as [...]T).$/;"	t
sudoaddable	./cmd/compile/internal/amd64/gsubr.go	/^func sudoaddable(as int, n *gc.Node, a *obj.Addr) bool {$/;"	f
sudoaddable	./cmd/compile/internal/arm/gsubr.go	/^func sudoaddable(as int, n *gc.Node, a *obj.Addr) bool {$/;"	f
sudoaddable	./cmd/compile/internal/arm64/gsubr.go	/^func sudoaddable(as int, n *gc.Node, a *obj.Addr) bool {$/;"	f
sudoaddable	./cmd/compile/internal/ppc64/gsubr.go	/^func sudoaddable(as int, n *gc.Node, a *obj.Addr) bool {$/;"	f
sudoaddable	./cmd/compile/internal/x86/gsubr.go	/^func sudoaddable(as int, n *gc.Node, a *obj.Addr) bool {$/;"	f
sudoclean	./cmd/compile/internal/amd64/gsubr.go	/^func sudoclean() {$/;"	f
sudoclean	./cmd/compile/internal/arm/gsubr.go	/^func sudoclean() {$/;"	f
sudoclean	./cmd/compile/internal/arm64/gsubr.go	/^func sudoclean() {$/;"	f
sudoclean	./cmd/compile/internal/ppc64/gsubr.go	/^func sudoclean() {$/;"	f
sudoclean	./cmd/compile/internal/x86/gsubr.go	/^func sudoclean() {$/;"	f
sudog	./runtime/runtime2.go	/^type sudog struct {$/;"	t
suffix	./cmd/compile/internal/gc/dcl.go	/^	var suffix string$/;"	v
suffixSortable	./index/suffixarray/qsufsort.go	/^type suffixSortable struct {$/;"	t
suitableMethods	./net/rpc/server.go	/^func suitableMethods(typ reflect.Type, reportErr bool) map[string]*methodType {$/;"	f
sum	./cmd/pprof/internal/report/report.go	/^func (el edgeList) sum() int64 {$/;"	f
sum	./crypto/md5/md5_test.go	/^var sum = make([]byte, bench.Size())$/;"	v
sum	./go/printer/printer_test.go	/^	"func sum(x, y int) int\\t{ return x + y }",$/;"	f
sum	./image/gif/writer_test.go	/^	var sum, n int64$/;"	v
sum	./image/jpeg/writer_test.go	/^	var sum, n int64$/;"	v
sum	./math/rand/rand_test.go	/^	var sum, squaresum float64$/;"	v
sum	./runtime/vlop_arm_test.go	/^	var sum uint32$/;"	v
sumN	./container/ring/ring_test.go	/^func sumN(n int) int { return (n*n + n) \/ 2 }$/;"	f
sumNN	./cmd/compile/internal/big/nat_test.go	/^var sumNN = []argNN{$/;"	v
sumNN	./math/big/nat_test.go	/^var sumNN = []argNN{$/;"	v
sumNodes	./cmd/pprof/internal/report/report.go	/^func sumNodes(ns nodes) (flat int64, cum int64) {$/;"	f
sumRangesSize	./net/http/fs.go	/^func sumRangesSize(ranges []httpRange) (size int64) {$/;"	f
sumVV	./cmd/compile/internal/big/arith_test.go	/^var sumVV = []argVV{$/;"	v
sumVV	./math/big/arith_test.go	/^var sumVV = []argVV{$/;"	v
sumVW	./cmd/compile/internal/big/arith_test.go	/^var sumVW = []argVW{$/;"	v
sumVW	./math/big/arith_test.go	/^var sumVW = []argVW{$/;"	v
sumWW	./cmd/compile/internal/big/arith_test.go	/^var sumWW = []argWW{$/;"	v
sumWW	./math/big/arith_test.go	/^var sumWW = []argWW{$/;"	v
sumZZ	./cmd/compile/internal/big/int_test.go	/^var sumZZ = []argZZ{$/;"	v
sumZZ	./math/big/int_test.go	/^var sumZZ = []argZZ{$/;"	v
summary	./cmd/yacc/yacc.go	/^func summary() {$/;"	f
summary	./go/ast/commentmap.go	/^func summary(list []*CommentGroup) string {$/;"	f
sumreleased	./runtime/mheap.go	/^	var sumreleased uintptr$/;"	v
supportJunctionLinks	./os/os_windows_test.go	/^var supportJunctionLinks = true$/;"	v
supportSHA2	./crypto/x509/verify_test.go	/^var supportSHA2 = true$/;"	v
supportedBuildmode	./cmd/dist/test.go	/^func (t *tester) supportedBuildmode(mode string) bool {$/;"	f
supportedSignatureAlgorithms	./crypto/tls/common.go	/^var supportedSignatureAlgorithms = []signatureAndHash{$/;"	v
supportsCloseOnExec	./os/sys_darwin.go	/^var supportsCloseOnExec bool$/;"	v
supportsCloseOnExec	./os/sys_freebsd.go	/^var supportsCloseOnExec bool$/;"	v
supportsSymlinks	./os/os_test.go	/^var supportsSymlinks = true$/;"	v
supportsSymlinks	./path/filepath/path_test.go	/^var supportsSymlinks = true$/;"	v
suppressedHeaders	./net/http/transfer.go	/^func suppressedHeaders(status int) []string {$/;"	f
supps	./net/ipsock_posix.go	/^	var supps [2]bool$/;"	v
surrogateMap	./unicode/utf8/utf8_test.go	/^var surrogateMap = []Utf8Map{$/;"	v
surrogateTests	./unicode/utf16/utf16_test.go	/^var surrogateTests = []struct {$/;"	v
suspendedCall	./go/types/stmt.go	/^func (check *Checker) suspendedCall(keyword string, call *ast.CallExpr) {$/;"	f
sv	./cmd/pprof/internal/profile/profile.go	/^		var sv string$/;"	v
sv	./database/sql/convert.go	/^	var sv reflect.Value$/;"	v
sv	./encoding/json/encode.go	/^	var sv stringValues = v.MapKeys()$/;"	v
svgDoc	./cmd/pprof/internal/svg/svgpan.go	/^	var svgDoc = evt.target.ownerDocument;$/;"	v
svnRemoteRepo	./cmd/go/vcs.go	/^func svnRemoteRepo(vcsSvn *vcsCmd, rootDir string) (remoteRepo string, err error) {$/;"	f
sw	./encoding/gob/decode.go	/^		var sw *sliceType$/;"	v
sw	./net/internal/socktest/main_test.go	/^var sw socktest.Switch$/;"	v
swap64loop	./sync/atomic/asm_arm.s	/^swap64loop:$/;"	l
swapRange	./sort/sort.go	/^func swapRange(data Interface, a, b, n int) {$/;"	f
swapUint64	./sync/atomic/64bit_arm.go	/^func swapUint64(addr *uint64, new uint64) (old uint64) {$/;"	f
swapVerticalBar	./regexp/syntax/parse.go	/^func (p *parser) swapVerticalBar() bool {$/;"	f
swaploop	./sync/atomic/asm_386.s	/^swaploop:$/;"	l
swaploop	./sync/atomic/asm_arm.s	/^swaploop:$/;"	l
swaploop1	./sync/atomic/asm_linux_arm.s	/^swaploop1:$/;"	l
sweep	./runtime/mgcsweep.go	/^var sweep sweepdata$/;"	v
sweepdata	./runtime/mgcsweep.go	/^type sweepdata struct {$/;"	t
sweepone	./runtime/mgcsweep.go	/^func sweepone() uintptr {$/;"	f
switch	./cmd/compile/internal/gc/esc.go	/^	\/\/ process type switch as declaration.$/;"	t
switch	./cmd/compile/internal/gc/esc.go	/^	\/\/ type switch variables have no ODCL.$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^							Yyerror("impossible type switch case: %v cannot have dynamic type %v"+" (missing %v method)", Nconv(n.Left.Right, obj.FmtLong), ll.N.Type, missing.Sym)$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^							Yyerror("impossible type switch case: %v cannot have dynamic type %v"+" (wrong type for %v method)\\n\\thave %v%v\\n\\twant %v%v", Nconv(n.Left.Right, obj.FmtLong), ll.N.Type, missing.Sym, have.Sym, Tconv(have.Type, obj.FmtShort), missing.Sym, Tconv(missing.Type, obj.FmtShort))$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^					\/\/ multiple entry type switch or default$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^					\/\/ single entry type switch$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^					yyerrorl(int(c2.node.Lineno), "duplicate case %v in type switch\\n\\tprevious case at %v", c2.node.Left.Type, c1.node.Line())$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^				Yyerror("cannot fallthrough in type switch")$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^				\/\/ type switch$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^			Yyerror("cannot type switch on non-interface value %v", Nconv(n.Left.Right, obj.FmtLong))$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^			\/\/ type switch$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^		Yyerror("type switch must be on an interface")$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^		Yyerror("type switch must have an assignment")$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^		\/\/ type switch$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^	\/\/ type switch$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^	hash    uint32 \/\/ hash of a type switch$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^\/\/ A typeSwitch walks a type switch.$/;"	t
switch	./cmd/compile/internal/gc/swt.go	/^\/\/ where sw is a type switch.$/;"	t
switch	./cmd/compile/internal/gc/typecheck.go	/^		Yyerror("use of .(type) outside type switch")$/;"	t
switch	./cmd/compile/internal/gc/y.go	/^					Yyerror("invalid variable name %s in type switch", yyDollar[1].list.N)$/;"	t
switch	./cmd/compile/internal/gc/y.go	/^					\/\/ type switch - declare variable$/;"	t
switch	./cmd/cover/cover.go	/^		\/\/ Don't annotate an empty type switch - creates a syntax error.$/;"	t
switch	./cmd/fix/typecheck.go	/^			\/\/ Type of variable changes for each case in type switch,$/;"	t
switch	./cmd/vet/deadcode.go	/^		\/\/ NOTE: Unlike switch and type switch below, we don't care$/;"	t
switch	./go/ast/ast.go	/^		Type   Expr      \/\/ asserted type; nil means type switch X.(type)$/;"	t
switch	./go/ast/ast.go	/^	\/\/ A CaseClause represents a case of an expression or type switch statement.$/;"	t
switch	./go/ast/ast.go	/^	\/\/ An TypeSwitchStmt node represents a type switch statement.$/;"	t
switch	./go/parser/parser.go	/^				\/\/ If we don't have a type switch, s2 must be an expression.$/;"	t
switch	./go/parser/parser.go	/^		\/\/ a type switch. Instead be lenient and test this in the type$/;"	t
switch	./go/parser/parser.go	/^		\/\/ type switch: typ == nil$/;"	t
switch	./go/parser/parser.go	/^		\/\/ y.(type), which is only allowed in type switch expressions.$/;"	t
switch	./go/printer/testdata/parser.go	/^			\/\/ the form X.(type) is only allowed in type switch expressions$/;"	t
switch	./go/printer/testdata/parser.go	/^		\/\/ type switch: typ == nil$/;"	t
switch	./go/printer/testdata/parser.go	/^	\/\/ type switch$/;"	t
switch	./go/types/api.go	/^	\/\/	*ast.CaseClause    type-specific *Var for each type switch case clause (incl. default)$/;"	t
switch	./go/types/api.go	/^	\/\/ type switch headers), the corresponding objects are nil.$/;"	t
switch	./go/types/api_test.go	/^				kind = "type switch"$/;"	t
switch	./go/types/api_test.go	/^			"file:", "func:t", "type switch:", "case:x", \/\/ x implicitly declared$/;"	t
switch	./go/types/api_test.go	/^			"file:", "func:t", "type switch:",$/;"	t
switch	./go/types/api_test.go	/^			"file:", "func:t", "type switch:t",$/;"	t
switch	./go/types/expr.go	/^			check.invalidAST(e.Pos(), "use of .(type) outside type switch")$/;"	t
switch	./go/types/stmt.go	/^				check.error(e.Pos(), "duplicate case in type switch")$/;"	t
switch	./go/types/stmt.go	/^				check.invalidAST(s.Pos(), "incorrect form of type switch guard")$/;"	t
switch	./go/types/stmt.go	/^				check.invalidAST(s.Pos(), "incorrect type switch case")$/;"	t
switch	./go/types/stmt.go	/^			check.invalidAST(s.Pos(), "incorrect form of type switch guard")$/;"	t
switch	./go/types/stmt.go	/^		\/\/ A type switch guard must be of the form:$/;"	t
switch	./go/types/stmt.go	/^		check.openScope(s, "type switch")$/;"	t
switch	./runtime/asm_386.s	/^switch:$/;"	l
switch	./runtime/asm_amd64.s	/^switch:$/;"	l
switch	./runtime/asm_amd64p32.s	/^switch:$/;"	l
switch	./runtime/asm_arm.s	/^switch:$/;"	l
switch	./runtime/asm_arm64.s	/^switch:$/;"	l
switch	./runtime/asm_ppc64x.s	/^switch:$/;"	l
switch	./runtime/gc_test.go	/^\/\/ and run the type switch.$/;"	t
switch	./runtime/sys_solaris_amd64.s	/^switch:$/;"	l
switch	./runtime/sys_windows_386.s	/^switch:$/;"	l
switch	./runtime/sys_windows_amd64.s	/^switch:$/;"	l
switch2	./go/scanner/scanner.go	/^func (s *Scanner) switch2(tok0, tok1 token.Token) token.Token {$/;"	f
switch3	./go/scanner/scanner.go	/^func (s *Scanner) switch3(tok0, tok1 token.Token, ch2 rune, tok2 token.Token) token.Token {$/;"	f
switch4	./go/scanner/scanner.go	/^func (s *Scanner) switch4(tok0, tok1 token.Token, ch2 rune, tok2, tok3 token.Token) token.Token {$/;"	f
switchToReader	./encoding/xml/xml.go	/^func (d *Decoder) switchToReader(r io.Reader) {$/;"	f
switchWriter	./net/http/server.go	/^type switchWriter struct {$/;"	t
switch_stmt	./cmd/compile/internal/gc/go.y	/^switch_stmt:$/;"	l
switches	./cmd/fix/typecheck.go	/^\/\/ declarations, function and method returns, and type switches$/;"	t
switches	./go/types/expr.go	/^		\/\/ x.(type) expressions are handled explicitly in type switches$/;"	t
sym	./cmd/compile/internal/gc/dcl.go	/^	\/\/ get parent type sym$/;"	t
sym	./cmd/compile/internal/gc/go.y	/^sym:$/;"	l
sym	./cmd/compile/internal/gc/subr.go	/^	\/\/ func sym(p *T, h uintptr) uintptr$/;"	f
sym	./cmd/compile/internal/gc/subr.go	/^	\/\/ func sym(p, q *T) bool$/;"	f
sym	./cmd/compile/internal/gc/subr.go	/^	var sym *Sym$/;"	v
sym	./cmd/internal/obj/x86/obj6.go	/^		var sym *obj.LSym$/;"	v
sym	./cmd/link/internal/ld/data.go	/^	var sym *LSym$/;"	v
sym	./cmd/link/internal/ld/elf.go	/^	var sym *LSym$/;"	v
sym	./cmd/link/internal/ld/ldelf.go	/^	var sym ElfSym$/;"	v
sym	./cmd/link/internal/ld/ldmacho.go	/^	var sym *LdMachoSym$/;"	v
sym	./cmd/link/internal/ld/ldpe.go	/^	var sym *PeSym$/;"	v
sym	./cmd/link/internal/ld/macho.go	/^	var sym *LSym$/;"	v
sym	./cmd/link/internal/ld/pe.go	/^	var sym *LSym$/;"	v
sym	./debug/elf/file.go	/^	var sym Sym32$/;"	v
sym	./debug/elf/file.go	/^	var sym Sym64$/;"	v
sym	./debug/gosym/symtab.go	/^type sym struct {$/;"	t
sym	./debug/plan9obj/plan9obj.go	/^type sym struct {$/;"	t
symKindStrings	./cmd/internal/goobj/read.go	/^var symKindStrings = []string{$/;"	v
symMerge	./sort/sort.go	/^func symMerge(data Interface, a, m, b int) {$/;"	f
symRE	./cmd/objdump/main.go	/^var symRE *regexp.Regexp$/;"	v
symVer	./cmd/link/internal/ld/sym.go	/^type symVer struct {$/;"	t
sym_keys	./runtime/vdso_linux_amd64.go	/^var sym_keys = []symbol_key{$/;"	v
symalign	./cmd/link/internal/ld/data.go	/^func symalign(s *LSym) int32 {$/;"	f
symbolDoc	./cmd/doc/pkg.go	/^func (pkg *Package) symbolDoc(symbol string) {$/;"	f
symbolReference	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) symbolReference(a *obj.Addr, name string, prefix rune) {$/;"	f
symbol_key	./runtime/vdso_linux_amd64.go	/^type symbol_key struct {$/;"	t
symbolicLinkReparseBuffer	./syscall/ztypes_windows.go	/^type symbolicLinkReparseBuffer struct {$/;"	t
symbolize	./cmd/pprof/pprof.go	/^func symbolize(mode, source string, p *profile.Profile, obj plugin.ObjTool, ui plugin.UI) error {$/;"	f
symbolizeContext	./runtime/race.go	/^type symbolizeContext struct {$/;"	t
symbols	./cmd/internal/objfile/elf.go	/^func (f *elfFile) symbols() ([]Sym, error) {$/;"	f
symbols	./cmd/internal/objfile/goobj.go	/^func (f *goobjFile) symbols() ([]Sym, error) {$/;"	f
symbols	./cmd/internal/objfile/macho.go	/^func (f *machoFile) symbols() ([]Sym, error) {$/;"	f
symbols	./cmd/internal/objfile/pe.go	/^func (f *peFile) symbols() ([]Sym, error) {$/;"	f
symbols	./cmd/internal/objfile/plan9obj.go	/^func (f *plan9File) symbols() ([]Sym, error) {$/;"	f
symbols	./cmd/link/internal/ld/ldelf.go	/^	var symbols []*LSym$/;"	v
symbolsFromBinaries	./cmd/pprof/internal/report/report.go	/^func symbolsFromBinaries(prof *profile.Profile, g graph, rx *regexp.Regexp, address *uint64, obj plugin.ObjTool) []*objSymbol {$/;"	f
symbolsGolden	./debug/elf/symbols_test.go	/^var symbolsGolden = map[string][]Symbol{$/;"	v
symbolz	./cmd/pprof/internal/symbolz/symbolz.go	/^func symbolz(source string, p *profile.Profile) string {$/;"	f
symbuf	./cmd/link/internal/ld/ldpe.go	/^	var symbuf [18]uint8$/;"	v
symbuf	./cmd/link/internal/ld/objfile.go	/^var symbuf []byte$/;"	v
symfmt	./cmd/compile/internal/gc/fmt.go	/^func symfmt(s *Sym, flag int) string {$/;"	f
symkind	./cmd/link/internal/ld/macho.go	/^func symkind(s *LSym) int {$/;"	f
symlink	./archive/tar/tar_test.go	/^type symlink struct{}$/;"	t
symlinkat	./syscall/zsyscall_linux_386.go	/^func symlinkat(oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
symlinkat	./syscall/zsyscall_linux_amd64.go	/^func symlinkat(oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
symlinkat	./syscall/zsyscall_linux_arm.go	/^func symlinkat(oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
symlinkat	./syscall/zsyscall_linux_arm64.go	/^func symlinkat(oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
symlinkat	./syscall/zsyscall_linux_ppc64.go	/^func symlinkat(oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
symlinkat	./syscall/zsyscall_linux_ppc64le.go	/^func symlinkat(oldpath string, newdirfd int, newpath string) (err error) {$/;"	f
symnam	./cmd/yacc/yacc.go	/^func symnam(i int) string {$/;"	f
symname	./cmd/compile/internal/gc/obj.go	/^	var symname string$/;"	v
symregexp	./cmd/objdump/main.go	/^var symregexp = flag.String("s", "", "only dump symbols matching this regexp")$/;"	v
syms	./cmd/compile/internal/gc/lex.go	/^var syms = []struct {$/;"	v
syms	./cmd/internal/objfile/elf.go	/^	var syms []Sym$/;"	v
syms	./cmd/internal/objfile/goobj.go	/^	var syms []Sym$/;"	v
syms	./cmd/internal/objfile/macho.go	/^	var syms []Sym$/;"	v
syms	./cmd/internal/objfile/pe.go	/^	var syms []Sym$/;"	v
syms	./cmd/internal/objfile/plan9obj.go	/^	var syms []Sym$/;"	v
syms	./cmd/pprof/internal/report/report.go	/^	var syms objSymbols$/;"	v
syms	./cmd/pprof/internal/report/source.go	/^	var syms objSymbols$/;"	v
symsz	./debug/macho/file.go	/^			var symsz int$/;"	v
symt	./cmd/link/internal/ld/symtab.go	/^var symt *LSym$/;"	v
symtab	./cmd/link/internal/ld/ldmacho.go	/^	var symtab *LdMachoSymtab$/;"	v
symtab	./cmd/link/internal/ld/symtab.go	/^func symtab() {$/;"	f
symtoc	./cmd/link/internal/ppc64/asm.go	/^func symtoc(s *ld.LSym) int64 {$/;"	f
symtype	./cmd/link/internal/ld/symtab.go	/^	var symtype *LSym$/;"	v
syncBuffer	./compress/flate/deflate_test.go	/^type syncBuffer struct {$/;"	t
syncDecl	./go/parser/parser.go	/^func syncDecl(p *parser) {$/;"	f
syncFlush	./compress/flate/deflate.go	/^func (d *compressor) syncFlush() error {$/;"	f
syncSema	./runtime/sema.go	/^type syncSema struct {$/;"	t
syncSema	./sync/runtime.go	/^type syncSema struct {$/;"	t
syncStmt	./go/parser/parser.go	/^func syncStmt(p *parser) {$/;"	f
sync_atomic_CompareAndSwapPointer	./runtime/atomic_pointer.go	/^func sync_atomic_CompareAndSwapPointer(ptr *unsafe.Pointer, old, new unsafe.Pointer) bool {$/;"	f
sync_atomic_CompareAndSwapUintptr	./runtime/atomic_pointer.go	/^func sync_atomic_CompareAndSwapUintptr(ptr *uintptr, old, new uintptr) bool$/;"	f
sync_atomic_StorePointer	./runtime/atomic_pointer.go	/^func sync_atomic_StorePointer(ptr *unsafe.Pointer, new unsafe.Pointer) {$/;"	f
sync_atomic_StoreUintptr	./runtime/atomic_pointer.go	/^func sync_atomic_StoreUintptr(ptr *uintptr, new uintptr)$/;"	f
sync_atomic_SwapPointer	./runtime/atomic_pointer.go	/^func sync_atomic_SwapPointer(ptr unsafe.Pointer, new unsafe.Pointer) unsafe.Pointer {$/;"	f
sync_atomic_SwapUintptr	./runtime/atomic_pointer.go	/^func sync_atomic_SwapUintptr(ptr *uintptr, new uintptr) uintptr$/;"	f
sync_atomic_runtime_procPin	./runtime/proc1.go	/^func sync_atomic_runtime_procPin() int {$/;"	f
sync_atomic_runtime_procUnpin	./runtime/proc1.go	/^func sync_atomic_runtime_procUnpin() {$/;"	f
sync_runtime_Semacquire	./runtime/sema.go	/^func sync_runtime_Semacquire(addr *uint32) {$/;"	f
sync_runtime_Semrelease	./runtime/sema.go	/^func sync_runtime_Semrelease(addr *uint32) {$/;"	f
sync_runtime_canSpin	./runtime/proc1.go	/^func sync_runtime_canSpin(i int) bool {$/;"	f
sync_runtime_doSpin	./runtime/proc1.go	/^func sync_runtime_doSpin() {$/;"	f
sync_runtime_procPin	./runtime/proc1.go	/^func sync_runtime_procPin() int {$/;"	f
sync_runtime_procUnpin	./runtime/proc1.go	/^func sync_runtime_procUnpin() {$/;"	f
sync_runtime_registerPoolCleanup	./runtime/mgc.go	/^func sync_runtime_registerPoolCleanup(f func()) {$/;"	f
synch	./cmd/compile/internal/gc/reg.go	/^func synch(f *Flow, dif Bits) {$/;"	f
syncsemacquire	./runtime/sema.go	/^func syncsemacquire(s *syncSema) {$/;"	f
syncsemcheck	./runtime/sema.go	/^func syncsemcheck(sz uintptr) {$/;"	f
syncsemrelease	./runtime/sema.go	/^func syncsemrelease(s *syncSema, n uint32) {$/;"	f
syncsend	./runtime/chan.go	/^func syncsend(c *hchan, sg *sudog, elem unsafe.Pointer) {$/;"	f
synopsisFmt	./go/doc/doc_test.go	/^func synopsisFmt(s string) string {$/;"	f
syntax	./cmd/compile/internal/gc/subr.go	/^\/\/ type syntax expression n.Type.$/;"	t
syntax	./regexp/syntax/make_perl_groups.pl	/^package syntax$/;"	p
syntaxError	./encoding/xml/xml.go	/^func (d *Decoder) syntaxError(msg string) error {$/;"	f
syntaxError	./strconv/atoi.go	/^func syntaxError(fn, str string) *NumError {$/;"	f
synthesizechantypes	./cmd/link/internal/ld/dwarf.go	/^func synthesizechantypes(die *DWDie) {$/;"	f
synthesizemaptypes	./cmd/link/internal/ld/dwarf.go	/^func synthesizemaptypes(die *DWDie) {$/;"	f
synthesizeslicetypes	./cmd/link/internal/ld/dwarf.go	/^func synthesizeslicetypes(die *DWDie) {$/;"	f
synthesizestringtypes	./cmd/link/internal/ld/dwarf.go	/^func synthesizestringtypes(die *DWDie) {$/;"	f
sys	./os/exec_plan9.go	/^func (p *ProcessState) sys() interface{} {$/;"	f
sys	./os/exec_posix.go	/^func (p *ProcessState) sys() interface{} {$/;"	f
sys	./runtime/runtime-gdb.py	/^import sys$/;"	i
sys	./syscall/security_windows.go	/^	var sys *uint16$/;"	v
sysAlloc	./runtime/mem_bsd.go	/^func sysAlloc(n uintptr, sysStat *uint64) unsafe.Pointer {$/;"	f
sysAlloc	./runtime/mem_darwin.go	/^func sysAlloc(n uintptr, sysStat *uint64) unsafe.Pointer {$/;"	f
sysAlloc	./runtime/mem_linux.go	/^func sysAlloc(n uintptr, sysStat *uint64) unsafe.Pointer {$/;"	f
sysAlloc	./runtime/mem_plan9.go	/^func sysAlloc(n uintptr, sysStat *uint64) unsafe.Pointer {$/;"	f
sysAlloc	./runtime/mem_windows.go	/^func sysAlloc(n uintptr, sysStat *uint64) unsafe.Pointer {$/;"	f
sysCerts	./crypto/x509/root_darwin_arm_gen.go	/^func sysCerts() (certs []*x509.Certificate, err error) {$/;"	f
sysDir	./os/os_test.go	/^type sysDir struct {$/;"	t
sysFault	./runtime/mem_bsd.go	/^func sysFault(v unsafe.Pointer, n uintptr) {$/;"	f
sysFault	./runtime/mem_darwin.go	/^func sysFault(v unsafe.Pointer, n uintptr) {$/;"	f
sysFault	./runtime/mem_linux.go	/^func sysFault(v unsafe.Pointer, n uintptr) {$/;"	f
sysFault	./runtime/mem_plan9.go	/^func sysFault(v unsafe.Pointer, n uintptr) {$/;"	f
sysFault	./runtime/mem_windows.go	/^func sysFault(v unsafe.Pointer, n uintptr) {$/;"	f
sysFree	./runtime/mem_bsd.go	/^func sysFree(v unsafe.Pointer, n uintptr, sysStat *uint64) {$/;"	f
sysFree	./runtime/mem_darwin.go	/^func sysFree(v unsafe.Pointer, n uintptr, sysStat *uint64) {$/;"	f
sysFree	./runtime/mem_linux.go	/^func sysFree(v unsafe.Pointer, n uintptr, sysStat *uint64) {$/;"	f
sysFree	./runtime/mem_plan9.go	/^func sysFree(v unsafe.Pointer, n uintptr, sysStat *uint64) {$/;"	f
sysFree	./runtime/mem_windows.go	/^func sysFree(v unsafe.Pointer, n uintptr, sysStat *uint64) {$/;"	f
sysInit	./net/fd_plan9.go	/^func sysInit() {$/;"	f
sysInit	./net/fd_unix.go	/^func sysInit() {$/;"	f
sysInit	./net/fd_windows.go	/^func sysInit() {$/;"	f
sysLinger	./syscall/syscall_windows.go	/^type sysLinger struct {$/;"	t
sysMap	./runtime/mem_bsd.go	/^func sysMap(v unsafe.Pointer, n uintptr, reserved bool, sysStat *uint64) {$/;"	f
sysMap	./runtime/mem_darwin.go	/^func sysMap(v unsafe.Pointer, n uintptr, reserved bool, sysStat *uint64) {$/;"	f
sysMap	./runtime/mem_linux.go	/^func sysMap(v unsafe.Pointer, n uintptr, reserved bool, sysStat *uint64) {$/;"	f
sysMap	./runtime/mem_plan9.go	/^func sysMap(v unsafe.Pointer, n uintptr, reserved bool, sysStat *uint64) {$/;"	f
sysMap	./runtime/mem_windows.go	/^func sysMap(v unsafe.Pointer, n uintptr, reserved bool, sysStat *uint64) {$/;"	f
sysReserve	./runtime/mem_bsd.go	/^func sysReserve(v unsafe.Pointer, n uintptr, reserved *bool) unsafe.Pointer {$/;"	f
sysReserve	./runtime/mem_darwin.go	/^func sysReserve(v unsafe.Pointer, n uintptr, reserved *bool) unsafe.Pointer {$/;"	f
sysReserve	./runtime/mem_linux.go	/^func sysReserve(v unsafe.Pointer, n uintptr, reserved *bool) unsafe.Pointer {$/;"	f
sysReserve	./runtime/mem_plan9.go	/^func sysReserve(v unsafe.Pointer, n uintptr, reserved *bool) unsafe.Pointer {$/;"	f
sysReserve	./runtime/mem_windows.go	/^func sysReserve(v unsafe.Pointer, n uintptr, reserved *bool) unsafe.Pointer {$/;"	f
sysReserveHigh	./runtime/malloc.go	/^func sysReserveHigh(n uintptr, reserved *bool) unsafe.Pointer {$/;"	f
sysSocket	./net/sock_cloexec.go	/^func sysSocket(family, sotype, proto int) (int, error) {$/;"	f
sysSocket	./net/sock_windows.go	/^func sysSocket(family, sotype, proto int) (syscall.Handle, error) {$/;"	f
sysSocket	./net/sys_cloexec.go	/^func sysSocket(family, sotype, proto int) (int, error) {$/;"	f
sysStat	./archive/tar/common.go	/^var sysStat func(fi os.FileInfo, h *Header) error$/;"	v
sysUnused	./runtime/mem_bsd.go	/^func sysUnused(v unsafe.Pointer, n uintptr) {$/;"	f
sysUnused	./runtime/mem_darwin.go	/^func sysUnused(v unsafe.Pointer, n uintptr) {$/;"	f
sysUnused	./runtime/mem_linux.go	/^func sysUnused(v unsafe.Pointer, n uintptr) {$/;"	f
sysUnused	./runtime/mem_plan9.go	/^func sysUnused(v unsafe.Pointer, n uintptr) {$/;"	f
sysUnused	./runtime/mem_windows.go	/^func sysUnused(v unsafe.Pointer, n uintptr) {$/;"	f
sysUsage	./os/exec_plan9.go	/^func (p *ProcessState) sysUsage() interface{} {$/;"	f
sysUsage	./os/exec_posix.go	/^func (p *ProcessState) sysUsage() interface{} {$/;"	f
sysUsed	./runtime/mem_bsd.go	/^func sysUsed(v unsafe.Pointer, n uintptr) {$/;"	f
sysUsed	./runtime/mem_darwin.go	/^func sysUsed(v unsafe.Pointer, n uintptr) {$/;"	f
sysUsed	./runtime/mem_linux.go	/^func sysUsed(v unsafe.Pointer, n uintptr) {$/;"	f
sysUsed	./runtime/mem_plan9.go	/^func sysUsed(v unsafe.Pointer, n uintptr) {$/;"	f
sysUsed	./runtime/mem_windows.go	/^func sysUsed(v unsafe.Pointer, n uintptr) {$/;"	f
sys_pthread_create	./runtime/cgo/gcc_openbsd_386.c	/^static int (*sys_pthread_create)(pthread_t *thread, const pthread_attr_t *attr,$/;"	v	file:
sys_pthread_create	./runtime/cgo/gcc_openbsd_amd64.c	/^static int (*sys_pthread_create)(pthread_t *thread, const pthread_attr_t *attr,$/;"	v	file:
sys_umtx_op	./runtime/os_freebsd.go	/^func sys_umtx_op(addr *uint32, mode int32, val uint32, ptr2, ts *timespec) int32$/;"	f
sys_umtx_sleep	./runtime/os_dragonfly.go	/^func sys_umtx_sleep(addr *uint32, val, timeout int32) int32$/;"	f
sys_umtx_wakeup	./runtime/os_dragonfly.go	/^func sys_umtx_wakeup(addr *uint32, val int32) int32$/;"	f
sys_wbptr	./cmd/compile/internal/gc/cgen.go	/^var sys_wbptr *Node$/;"	v
sysargs	./runtime/os_linux_386.go	/^func sysargs(argc int32, argv **byte) {$/;"	f
sysargs	./runtime/os_linux_arm.go	/^func sysargs(argc int32, argv **byte) {$/;"	f
sysargs	./runtime/vdso_linux_amd64.go	/^func sysargs(argc int32, argv **byte) {$/;"	f
sysargs	./runtime/vdso_none.go	/^func sysargs(argc int32, argv **byte) {$/;"	f
syscall	./syscall/mksyscall.pl	/^package syscall$/;"	p
syscall	./syscall/mksysctl_openbsd.pl	/^package syscall;$/;"	p
syscall	./syscall/mksysnum_darwin.pl	/^package syscall$/;"	p
syscall	./syscall/mksysnum_dragonfly.pl	/^package syscall$/;"	p
syscall	./syscall/mksysnum_freebsd.pl	/^package syscall$/;"	p
syscall	./syscall/mksysnum_linux.pl	/^package syscall$/;"	p
syscall	./syscall/mksysnum_netbsd.pl	/^package syscall$/;"	p
syscall	./syscall/mksysnum_openbsd.pl	/^package syscall$/;"	p
syscall	./syscall/syscall.go	/^\/\/ On most systems, that error has type syscall.Errno.$/;"	t
syscallMode	./os/file_plan9.go	/^func syscallMode(i FileMode) (o uint32) {$/;"	f
syscallMode	./os/file_posix.go	/^func syscallMode(i FileMode) (o uint32) {$/;"	f
syscall_Syscall	./runtime/syscall_windows.go	/^func syscall_Syscall(fn, nargs, a1, a2, a3 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_Syscall12	./runtime/syscall_windows.go	/^func syscall_Syscall12(fn, nargs, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_Syscall15	./runtime/syscall_windows.go	/^func syscall_Syscall15(fn, nargs, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_Syscall6	./runtime/syscall_windows.go	/^func syscall_Syscall6(fn, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_Syscall9	./runtime/syscall_windows.go	/^func syscall_Syscall9(fn, nargs, a1, a2, a3, a4, a5, a6, a7, a8, a9 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_chdir	./runtime/syscall_solaris.go	/^func syscall_chdir(path uintptr) (err uintptr) {$/;"	f
syscall_chroot	./runtime/syscall_solaris.go	/^func syscall_chroot(path uintptr) (err uintptr) {$/;"	f
syscall_close	./runtime/syscall_solaris.go	/^func syscall_close(fd int32) int32 {$/;"	f
syscall_execve	./runtime/syscall_solaris.go	/^func syscall_execve(path, argv, envp uintptr) (err uintptr) {$/;"	f
syscall_exit	./runtime/syscall_solaris.go	/^func syscall_exit(code uintptr) {$/;"	f
syscall_fcntl	./runtime/syscall_solaris.go	/^func syscall_fcntl(fd, cmd, arg uintptr) (val, err uintptr) {$/;"	f
syscall_forkx	./runtime/syscall_solaris.go	/^func syscall_forkx(flags uintptr) (pid uintptr, err uintptr) {$/;"	f
syscall_gethostname	./runtime/syscall_solaris.go	/^func syscall_gethostname() (name string, err uintptr) {$/;"	f
syscall_getpid	./runtime/syscall_solaris.go	/^func syscall_getpid() (pid, err uintptr) {$/;"	f
syscall_getprocaddress	./runtime/syscall_windows.go	/^func syscall_getprocaddress(handle uintptr, procname *byte) (outhandle, err uintptr) {$/;"	f
syscall_ioctl	./runtime/syscall_solaris.go	/^func syscall_ioctl(fd, req, arg uintptr) (err uintptr) {$/;"	f
syscall_loadlibrary	./runtime/syscall_windows.go	/^func syscall_loadlibrary(filename *uint16) (handle, err uintptr) {$/;"	f
syscall_pipe	./runtime/syscall_solaris.go	/^func syscall_pipe() (r, w, err uintptr) {$/;"	f
syscall_rawsyscall	./runtime/syscall_solaris.go	/^func syscall_rawsyscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_rawsysvicall6	./runtime/syscall_solaris.go	/^func syscall_rawsysvicall6(fn, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_runtime_AfterFork	./runtime/proc1.go	/^func syscall_runtime_AfterFork() {$/;"	f
syscall_runtime_BeforeFork	./runtime/proc1.go	/^func syscall_runtime_BeforeFork() {$/;"	f
syscall_runtime_envs	./runtime/runtime.go	/^func syscall_runtime_envs() []string { return append([]string{}, envs...) }$/;"	f
syscall_setenv_c	./runtime/env_posix.go	/^func syscall_setenv_c(k string, v string) {$/;"	f
syscall_setgid	./runtime/syscall_solaris.go	/^func syscall_setgid(gid uintptr) (err uintptr) {$/;"	f
syscall_setgroups	./runtime/syscall_solaris.go	/^func syscall_setgroups(ngid, gid uintptr) (err uintptr) {$/;"	f
syscall_setpgid	./runtime/syscall_solaris.go	/^func syscall_setpgid(pid, pgid uintptr) (err uintptr) {$/;"	f
syscall_setsid	./runtime/syscall_solaris.go	/^func syscall_setsid() (pid, err uintptr) {$/;"	f
syscall_setuid	./runtime/syscall_solaris.go	/^func syscall_setuid(uid uintptr) (err uintptr) {$/;"	f
syscall_syscall	./runtime/syscall_solaris.go	/^func syscall_syscall(trap, a1, a2, a3 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_sysvicall6	./runtime/syscall_solaris.go	/^func syscall_sysvicall6(fn, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2, err uintptr) {$/;"	f
syscall_unsetenv_c	./runtime/env_posix.go	/^func syscall_unsetenv_c(k string) {$/;"	f
syscall_wait4	./runtime/syscall_solaris.go	/^func syscall_wait4(pid uintptr, wstatus *uint32, options uintptr, rusage unsafe.Pointer) (wpid int, err uintptr) {$/;"	f
syscall_write	./runtime/syscall_solaris.go	/^func syscall_write(fd, buf, nbyte uintptr) (n, err uintptr) {$/;"	f
syscalldot	./syscall/mksyscall_windows.go	/^func syscalldot() string {$/;"	f
sysconf	./runtime/os3_solaris.go	/^func sysconf(name int32) int64 {$/;"	f
sysctl	./runtime/os_darwin.go	/^func sysctl(mib *uint32, miblen uint32, out *byte, size *uintptr, dst *byte, ndst uintptr) int32$/;"	f
sysctl	./runtime/os_dragonfly.go	/^func sysctl(mib *uint32, miblen uint32, out *byte, size *uintptr, dst *byte, ndst uintptr) int32$/;"	f
sysctl	./runtime/os_freebsd.go	/^func sysctl(mib *uint32, miblen uint32, out *byte, size *uintptr, dst *byte, ndst uintptr) int32$/;"	f
sysctl	./runtime/os_netbsd.go	/^func sysctl(mib *uint32, miblen uint32, out *byte, size *uintptr, dst *byte, ndst uintptr) int32$/;"	f
sysctl	./runtime/os_openbsd.go	/^func sysctl(mib *uint32, miblen uint32, out *byte, size *uintptr, dst *byte, ndst uintptr) int32$/;"	f
sysctl	./syscall/zsyscall_darwin_386.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_darwin_amd64.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_darwin_arm.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_darwin_arm64.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_dragonfly_amd64.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_freebsd_386.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_freebsd_amd64.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_freebsd_arm.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_netbsd_386.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_netbsd_amd64.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_netbsd_arm.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_openbsd_386.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_openbsd_amd64.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctl	./syscall/zsyscall_openbsd_arm.go	/^func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {$/;"	f
sysctlMib	./syscall/zsysctl_openbsd.go	/^var sysctlMib = []mibentry{$/;"	v
sysctlNodes	./syscall/syscall_netbsd.go	/^func sysctlNodes(mib []_C_int) (nodes []Sysctlnode, err error) {$/;"	f
sysctl_ret	./runtime/sys_darwin_arm.s	/^sysctl_ret:$/;"	l
sysdir	./os/os_test.go	/^var sysdir = func() *sysDir {$/;"	v
sysinfo	./cmd/dist/sys_windows.go	/^var sysinfo systeminfo$/;"	v
sysinit	./cmd/dist/sys_default.go	/^func sysinit() {$/;"	f
sysinit	./cmd/dist/sys_windows.go	/^func sysinit() {$/;"	f
syslook	./cmd/compile/internal/gc/subr.go	/^func syslook(name string, copy int) *Node {$/;"	f
sysmon	./runtime/proc1.go	/^func sysmon() {$/;"	f
sysproc	./os/exec/lp_windows_test.go	/^	var sysproc = syscall.MustLoadDLL("kernel32.dll").MustFindProc("GetModuleFileNameW")$/;"	v
sysstat	./runtime/os1_plan9.go	/^var sysstat = []byte("\/dev\/sysstat\\x00")$/;"	v
system	./cmd/compile/doc.go	/^source code. Because this directive can subvert the type system and package$/;"	t
system	./go/types/operand.go	/^\/\/ (not all "untyped" cases can appear due to the type system,$/;"	t
system	./runtime/extern.go	/^interface to the run-time type system.$/;"	t
system	./unsafe/unsafe.go	/^\/\/ Pointer therefore allows a program to defeat the type system and read and write$/;"	t
systemConf	./net/conf.go	/^func systemConf() *conf {$/;"	f
systemRootsPool	./crypto/x509/root.go	/^func systemRootsPool() *CertPool {$/;"	f
systemTime	./os/exec_plan9.go	/^func (p *ProcessState) systemTime() time.Duration {$/;"	f
systemTime	./os/exec_unix.go	/^func (p *ProcessState) systemTime() time.Duration {$/;"	f
systemTime	./os/exec_windows.go	/^func (p *ProcessState) systemTime() time.Duration {$/;"	f
systemVerify	./crypto/x509/root_darwin.go	/^func (c *Certificate) systemVerify(opts *VerifyOptions) (chains [][]*Certificate, err error) {$/;"	f
systemVerify	./crypto/x509/root_plan9.go	/^func (c *Certificate) systemVerify(opts *VerifyOptions) (chains [][]*Certificate, err error) {$/;"	f
systemVerify	./crypto/x509/root_unix.go	/^func (c *Certificate) systemVerify(opts *VerifyOptions) (chains [][]*Certificate, err error) {$/;"	f
systemVerify	./crypto/x509/root_windows.go	/^func (c *Certificate) systemVerify(opts *VerifyOptions) (chains [][]*Certificate, err error) {$/;"	f
systeminfo	./cmd/dist/sys_windows.go	/^type systeminfo struct {$/;"	t
systeminfo	./runtime/defs_windows_386.go	/^type systeminfo struct {$/;"	t
systeminfo	./runtime/defs_windows_amd64.go	/^type systeminfo struct {$/;"	t
systemstack	./runtime/stubs.go	/^func systemstack(fn func())$/;"	f
systemstack_switch	./runtime/stubs.go	/^func systemstack_switch()$/;"	f
systime	./runtime/os1_windows.go	/^func systime(addr uintptr) int64 {$/;"	f
systime	./runtime/sys_darwin_386.s	/^systime:$/;"	l
systime	./runtime/sys_darwin_amd64.s	/^systime:$/;"	l
sysvicall0	./runtime/os_solaris.go	/^func sysvicall0(fn *libcFunc) uintptr {$/;"	f
sysvicall1	./runtime/os_solaris.go	/^func sysvicall1(fn *libcFunc, a1 uintptr) uintptr {$/;"	f
sysvicall2	./runtime/os_solaris.go	/^func sysvicall2(fn *libcFunc, a1, a2 uintptr) uintptr {$/;"	f
sysvicall3	./runtime/os_solaris.go	/^func sysvicall3(fn *libcFunc, a1, a2, a3 uintptr) uintptr {$/;"	f
sysvicall4	./runtime/os_solaris.go	/^func sysvicall4(fn *libcFunc, a1, a2, a3, a4 uintptr) uintptr {$/;"	f
sysvicall5	./runtime/os_solaris.go	/^func sysvicall5(fn *libcFunc, a1, a2, a3, a4, a5 uintptr) uintptr {$/;"	f
sysvicall6	./runtime/os_solaris.go	/^func sysvicall6(fn *libcFunc, a1, a2, a3, a4, a5, a6 uintptr) uintptr {$/;"	f
sysvicall6	./syscall/syscall_solaris.go	/^func sysvicall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)$/;"	f
sz	./cmd/link/internal/ld/ldmacho.go	/^	var sz uint32$/;"	v
t0	./encoding/gob/codec_test.go	/^	var t0 T0$/;"	v
t0	./runtime/chan.go	/^	var t0 int64$/;"	v
t0	./runtime/select.go	/^	var t0 int64$/;"	v
t1	./cmd/compile/internal/arm/cgen64.go	/^	var t1 gc.Node$/;"	v
t1	./cmd/compile/internal/arm/peep.go	/^	var t1 int$/;"	v
t1	./cmd/compile/internal/gc/const.go	/^	var t1 *Type$/;"	v
t1	./cmd/compile/internal/gc/dcl.go	/^	var t1 *Type$/;"	v
t1	./cmd/compile/internal/gc/range.go	/^	var t1 *Type$/;"	v
t1	./cmd/compile/internal/x86/cgen64.go	/^		var t1 gc.Node$/;"	v
t1	./cmd/compile/internal/x86/ggen.go	/^			var t1 gc.Node$/;"	v
t1	./cmd/compile/internal/x86/ggen.go	/^	var t1 gc.Node$/;"	v
t1	./cmd/compile/internal/x86/gsubr.go	/^		var t1 gc.Node$/;"	v
t1	./crypto/md5/gen.go	/^	var t1 = [...]uint32{$/;"	v
t1	./encoding/gob/codec_test.go	/^	var t1 T1$/;"	v
t1	./encoding/gob/encoder_test.go	/^	var t1 Type1$/;"	v
t1	./go/ast/filter_test.go	/^type t1 struct{}$/;"	t
t1	./go/doc/testdata/e.go	/^type t1 struct{}$/;"	t
t1	./reflect/all_test.go	/^	var t1 T1$/;"	v
t1	./runtime/chan.go	/^	var t1 int64$/;"	v
t1e	./go/doc/testdata/e.go	/^type t1e struct {$/;"	t
t2	./cmd/compile/internal/arm/cgen64.go	/^		var t2 gc.Node$/;"	v
t2	./cmd/compile/internal/arm/peep.go	/^	var t2 int$/;"	v
t2	./cmd/compile/internal/gc/range.go	/^	var t2 *Type$/;"	v
t2	./cmd/compile/internal/x86/cgen64.go	/^		var t2 gc.Node$/;"	v
t2	./cmd/compile/internal/x86/ggen.go	/^			var t2 gc.Node$/;"	v
t2	./cmd/compile/internal/x86/ggen.go	/^	var t2 gc.Node$/;"	v
t2	./cmd/compile/internal/x86/gsubr.go	/^		var t2 gc.Node$/;"	v
t2	./crypto/md5/gen.go	/^	var t2 = [...]uint32{$/;"	v
t2	./encoding/gob/codec_test.go	/^	var t2 T2$/;"	v
t2	./encoding/json/decode_test.go	/^	var t2 T2$/;"	v
t2	./go/ast/filter_test.go	/^type t2 struct{}$/;"	t
t2	./go/doc/testdata/e.go	/^type t2 struct{}$/;"	t
t2e	./go/doc/testdata/e.go	/^type t2e struct {$/;"	t
t3	./cmd/compile/internal/x86/ggen.go	/^		var t3 gc.Node$/;"	v
t3	./crypto/md5/gen.go	/^	var t3 = [...]uint32{$/;"	v
t3	./encoding/gob/encoder_test.go	/^	var t3 Type3$/;"	v
t3	./encoding/json/decode_test.go	/^	var t3 Time3339$/;"	v
t4	./cmd/compile/internal/x86/ggen.go	/^		var t4 gc.Node$/;"	v
t4	./crypto/md5/gen.go	/^	var t4 = [...]uint32{$/;"	v
t4	./encoding/gob/encoder_test.go	/^	var t4 Type4 \/\/ note: not a pointer.$/;"	v
t5p	./encoding/gob/encoder_test.go	/^	var t5p Type5$/;"	v
t6	./encoding/gob/encoder_test.go	/^	var t6 Type6$/;"	v
t7p	./encoding/gob/encoder_test.go	/^	var t7p Type7$/;"	v
tAfterName	./html/template/transition.go	/^func tAfterName(c context, s []byte) (context, int) {$/;"	f
tAttr	./html/template/transition.go	/^func tAttr(c context, s []byte) (context, int) {$/;"	f
tAttrName	./html/template/transition.go	/^func tAttrName(c context, s []byte) (context, int) {$/;"	f
tBeforeValue	./html/template/transition.go	/^func tBeforeValue(c context, s []byte) (context, int) {$/;"	f
tBlockCmt	./html/template/transition.go	/^func tBlockCmt(c context, s []byte) (context, int) {$/;"	f
tCSS	./html/template/transition.go	/^func tCSS(c context, s []byte) (context, int) {$/;"	f
tCSSStr	./html/template/transition.go	/^func tCSSStr(c context, s []byte) (context, int) {$/;"	f
tError	./html/template/transition.go	/^func tError(c context, s []byte) (context, int) {$/;"	f
tHTMLCmt	./html/template/transition.go	/^func tHTMLCmt(c context, s []byte) (context, int) {$/;"	f
tJS	./html/template/transition.go	/^func tJS(c context, s []byte) (context, int) {$/;"	f
tJSDelimited	./html/template/transition.go	/^func tJSDelimited(c context, s []byte) (context, int) {$/;"	f
tLineCmt	./html/template/transition.go	/^func tLineCmt(c context, s []byte) (context, int) {$/;"	f
tNow	./net/http/cookiejar/jar_test.go	/^var tNow = time.Date(2013, 1, 1, 12, 0, 0, 0, time.UTC)$/;"	v
tRunner	./go/doc/testdata/testing.go	/^func tRunner(t *T, test *InternalTest) {$/;"	f
tRunner	./testing/testing.go	/^func tRunner(t *T, test *InternalTest) {$/;"	f
tSpecialTagEnd	./html/template/transition.go	/^func tSpecialTagEnd(c context, s []byte) (context, int) {$/;"	f
tSweepTerm	./runtime/mgc.go	/^	var tSweepTerm, tScan, tInstallWB, tMark, tMarkTerm int64$/;"	v
tTag	./html/template/transition.go	/^func tTag(c context, s []byte) (context, int) {$/;"	f
tText	./html/template/transition.go	/^func tText(c context, s []byte) (context, int) {$/;"	f
tURL	./html/template/transition.go	/^func tURL(c context, s []byte) (context, int) {$/;"	f
tVal	./text/template/exec_test.go	/^var tVal = &T{$/;"	v
tWireType	./encoding/gob/type.go	/^var tWireType = mustGetTypeInfo(reflect.TypeOf(wireType{})).id$/;"	v
t_func_int_of_float_double	./debug/dwarf/testdata/typedef.c	/^typedef int t_func_int_of_float_double(float, double);$/;"	t	file:
t_func_ptr_int_of_char_schar_uchar	./debug/dwarf/testdata/typedef.c	/^typedef int *t_func_ptr_int_of_char_schar_uchar(char, signed char, unsigned char);$/;"	t	file:
t_func_void_of_char	./debug/dwarf/testdata/typedef.c	/^typedef void t_func_void_of_char(char);$/;"	t	file:
t_func_void_of_ptr_char_dots	./debug/dwarf/testdata/typedef.c	/^typedef void t_func_void_of_ptr_char_dots(char*, ...);$/;"	t	file:
t_func_void_of_void	./debug/dwarf/testdata/typedef.c	/^typedef void t_func_void_of_void(void);$/;"	t	file:
t_long	./debug/dwarf/testdata/typedef.c	/^typedef long t_long;$/;"	t	file:
t_my_enum	./debug/dwarf/testdata/typedef.c	/^} t_my_enum;$/;"	t	typeref:enum:my_enum	file:
t_my_list	./debug/dwarf/testdata/typedef.c	/^typedef struct list t_my_list;$/;"	t	typeref:struct:list	file:
t_my_struct	./debug/dwarf/testdata/typedef.c	/^} t_my_struct;$/;"	t	typeref:struct:my_struct	file:
t_my_struct1	./debug/dwarf/testdata/typedef.c	/^} t_my_struct1;$/;"	t	typeref:struct:my_struct1	file:
t_my_tree	./debug/dwarf/testdata/typedef.c	/^} t_my_tree;$/;"	t	typeref:struct:tree	file:
t_my_union	./debug/dwarf/testdata/typedef.c	/^} t_my_union;$/;"	t	typeref:union:my_union	file:
t_ptr_const_char	./debug/dwarf/testdata/typedef.c	/^typedef const char *t_ptr_const_char;$/;"	t	file:
t_ptr_func_int_of_double_complex	./debug/dwarf/testdata/typedef.c	/^typedef int (*t_ptr_func_int_of_double_complex)(double complex);$/;"	t	file:
t_ptr_func_int_of_float_complex	./debug/dwarf/testdata/typedef.c	/^typedef int (*t_ptr_func_int_of_float_complex)(float complex);$/;"	t	file:
t_ptr_func_int_of_float_double	./debug/dwarf/testdata/typedef.c	/^typedef int (*t_ptr_func_int_of_float_double)(float, double);$/;"	t	file:
t_ptr_func_int_of_long_double_complex	./debug/dwarf/testdata/typedef.c	/^typedef int (*t_ptr_func_int_of_long_double_complex)(long double complex);$/;"	t	file:
t_ptr_volatile_int	./debug/dwarf/testdata/typedef.c	/^typedef volatile int* t_ptr_volatile_int;$/;"	t	file:
t_ushort	./debug/dwarf/testdata/typedef.c	/^typedef unsigned short t_ushort;$/;"	t	file:
tab	./encoding/gob/debug.go	/^type tab int$/;"	t
tab	./hash/crc64/crc64_test.go	/^var tab = MakeTable(ISO)$/;"	v
tab	./syscall/netlink_linux.go	/^	var tab []byte$/;"	v
table	./cmd/compile/internal/big/natconv.go	/^	var table []divisor \/\/ for b == 10, table overlaps with cacheBase10.table$/;"	v
table	./cmd/link/internal/ld/pcln.go	/^	\/\/ We want to generate func table entries only for the "lowest level" symbols,$/;"	f
table	./database/sql/fakedb_test.go	/^func (db *fakeDB) table(table string) (*table, bool) {$/;"	f
table	./database/sql/fakedb_test.go	/^type table struct {$/;"	t
table	./debug/dwarf/line_test.go	/^	var table []LineEntry$/;"	v
table	./math/big/natconv.go	/^	var table []divisor \/\/ for b == 10, table overlaps with cacheBase10.table$/;"	v
tableA1Key	./crypto/des/des_test.go	/^var tableA1Key = []byte{$/;"	v
tableA1Tests	./crypto/des/des_test.go	/^var tableA1Tests = []CryptTest{$/;"	v
tableA2Plaintext	./crypto/des/des_test.go	/^var tableA2Plaintext = []byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}$/;"	v
tableA2Tests	./crypto/des/des_test.go	/^var tableA2Tests = []CryptTest{$/;"	v
tableA3Plaintext	./crypto/des/des_test.go	/^var tableA3Plaintext = []byte{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}$/;"	v
tableA3Tests	./crypto/des/des_test.go	/^var tableA3Tests = []CryptTest{$/;"	v
tableA4Tests	./crypto/des/des_test.go	/^var tableA4Tests = []CryptTest{$/;"	v
tableAttrs	./encoding/xml/read_test.go	/^var tableAttrs = []struct {$/;"	v
tableOfContents	./cmd/pack/pack.go	/^func (ar *Archive) tableOfContents(entry *Entry) {$/;"	f
tablelist	./unicode/maketables.go	/^var tablelist = flag.String("tables",$/;"	v
tables	./encoding/xml/read_test.go	/^var tables = []struct {$/;"	v
tag	./cmd/pprof/internal/report/report.go	/^type tag struct {$/;"	t
tag	./go/parser/parser.go	/^	var tag *ast.BasicLit$/;"	v
tag	./go/printer/testdata/parser.go	/^	var tag *ast.BasicLit$/;"	v
tag	./go/types/typexpr.go	/^	var tag string$/;"	v
tag	./go/types/typexpr.go	/^func (check *Checker) tag(t *ast.BasicLit) string {$/;"	f
tag	./syscall/srpc_nacl.go	/^		var tag, val1, val2 uint32$/;"	v
tagAndLength	./encoding/asn1/common.go	/^type tagAndLength struct {$/;"	t
tagAndLengthData	./encoding/asn1/asn1_test.go	/^var tagAndLengthData = []tagAndLengthTest{$/;"	v
tagAndLengthTest	./encoding/asn1/asn1_test.go	/^type tagAndLengthTest struct {$/;"	t
tagCmd	./cmd/go/vcs.go	/^type tagCmd struct {$/;"	t
tagDistance	./cmd/pprof/internal/report/report.go	/^func tagDistance(t, u *tag) float64 {$/;"	f
tagFilterRangeRx	./cmd/pprof/internal/driver/driver.go	/^var tagFilterRangeRx = regexp.MustCompile("([[:digit:]]+)([[:alpha:]]+)")$/;"	v
tagGen	./cmd/cgo/gcc.go	/^var tagGen int$/;"	v
tagGetTests	./reflect/all_test.go	/^var tagGetTests = []struct {$/;"	v
tagGroupLabel	./cmd/pprof/internal/report/report.go	/^func tagGroupLabel(g tags) (string, int64) {$/;"	f
tagKey	./cmd/api/goapi.go	/^func tagKey(dir string, context *build.Context, tags []string) string {$/;"	f
tagMap	./cmd/pprof/internal/report/report.go	/^type tagMap map[string]*tag$/;"	t
tagNames	./debug/dwarf/const.go	/^var tagNames = [...]string{$/;"	v
tagOptions	./encoding/json/tags.go	/^type tagOptions string$/;"	t
tagSync	./cmd/go/vcs.go	/^func (v *vcsCmd) tagSync(dir, tag string) error {$/;"	f
tags	./cmd/compile/internal/gc/esc.go	/^var tags [1 << (bitsPerOutputInTag + EscReturnBits)]string$/;"	v
tags	./cmd/dist/test.go	/^func (t *tester) tags() string {$/;"	f
tags	./cmd/go/vcs.go	/^	var tags []string$/;"	v
tags	./cmd/go/vcs.go	/^func (v *vcsCmd) tags(dir string) ([]string, error) {$/;"	f
tags	./cmd/pprof/internal/report/report.go	/^type tags []*tag$/;"	t
tags	./cmd/yacc/yacc.go	/^var typeset [NTYPES]string \/\/ pointers to type tags$/;"	t
tags	./go/internal/gccgoimporter/parser.go	/^	var tags []string$/;"	v
tags	./go/internal/gcimporter/gcimporter.go	/^	var tags []string$/;"	v
tags	./go/types/typexpr.go	/^	var tags []string$/;"	v
tagsPPC64x	./runtime/mkduff.go	/^func tagsPPC64x(w io.Writer) {$/;"	f
tail	./runtime/memclr_386.s	/^tail:$/;"	l
tail	./runtime/memclr_amd64.s	/^tail:$/;"	l
tail	./runtime/memclr_plan9_386.s	/^tail:$/;"	l
tail	./runtime/memmove_386.s	/^tail:$/;"	l
tail	./runtime/memmove_amd64.s	/^tail:$/;"	l
tail	./runtime/memmove_plan9_386.s	/^tail:$/;"	l
tail	./runtime/memmove_plan9_amd64.s	/^tail:$/;"	l
takes	./text/template/exec_test.go	/^\/\/ vfunc takes a *V and a V$/;"	f
takesEmpty	./reflect/all_test.go	/^func takesEmpty(e emptyStruct) {$/;"	f
takesNonEmpty	./reflect/all_test.go	/^func takesNonEmpty(n nonEmptyStruct) int {$/;"	f
tan	./math/all_test.go	/^var tan = []float64{$/;"	v
tan	./math/cmplx/cmath_test.go	/^var tan = []complex128{$/;"	v
tan	./math/tan.go	/^func tan(x float64) float64 {$/;"	f
tanLarge	./math/all_test.go	/^var tanLarge = []float64{$/;"	v
tanSC	./math/cmplx/cmath_test.go	/^var tanSC = []complex128{$/;"	v
tanSeries	./math/cmplx/tan.go	/^func tanSeries(z complex128) float64 {$/;"	f
tanh	./math/all_test.go	/^var tanh = []float64{$/;"	v
tanh	./math/cmplx/cmath_test.go	/^var tanh = []complex128{$/;"	v
tanhP	./math/tanh.go	/^var tanhP = [...]float64{$/;"	v
tanhQ	./math/tanh.go	/^var tanhQ = [...]float64{$/;"	v
tanhSC	./math/all_test.go	/^var tanhSC = []float64{$/;"	v
tanhSC	./math/cmplx/cmath_test.go	/^var tanhSC = []complex128{$/;"	v
targ	./cmd/link/internal/ld/data.go	/^		var targ *LSym$/;"	v
targ	./net/http/serve_test.go	/^				var targ io.WriteCloser = struct {$/;"	v
target	./cmd/asm/internal/asm/asm.go	/^	var target *obj.Addr$/;"	v
target	./cmd/pprof/internal/report/source_html.go	/^  var target;$/;"	v
target	./encoding/xml/xml.go	/^		var target string$/;"	v
target	./net/lookup_plan9.go	/^	var target string$/;"	v
target	./net/lookup_unix.go	/^	var target string$/;"	v
target	./net/lookup_windows.go	/^	var target string$/;"	v
target	./reflect/value.go	/^	var target unsafe.Pointer$/;"	v
targetDir	./cmd/go/pkg.go	/^type targetDir int$/;"	t
tbigp	./reflect/all_test.go	/^type tbigp [2]uintptr$/;"	t
tbigv	./reflect/all_test.go	/^type tbigv [2]uintptr$/;"	t
tbitset	./cmd/yacc/yacc.go	/^var tbitset = 0 \/\/ size of lookahead sets$/;"	v
tbsCertificate	./crypto/x509/x509.go	/^type tbsCertificate struct {$/;"	t
tbsCertificateRequest	./crypto/x509/x509.go	/^type tbsCertificateRequest struct {$/;"	t
tcb_fixup	./runtime/cgo/gcc_openbsd_386.c	/^tcb_fixup(int mainthread)$/;"	f	file:
tcb_fixup	./runtime/cgo/gcc_openbsd_amd64.c	/^tcb_fixup(int mainthread)$/;"	f	file:
tcpConn	./crypto/tls/handshake_client_test.go	/^	var tcpConn net.Conn$/;"	v
tcpConn	./crypto/tls/handshake_server_test.go	/^	var tcpConn net.Conn$/;"	v
tcpKeepAliveListener	./net/http/server.go	/^type tcpKeepAliveListener struct {$/;"	t
tcpListenerNameTests	./net/tcp_test.go	/^var tcpListenerNameTests = []struct {$/;"	v
tcpListenerTests	./net/listen_test.go	/^var tcpListenerTests = []struct {$/;"	v
tcpServerTests	./net/server_test.go	/^var tcpServerTests = []struct {$/;"	v
td0	./crypto/aes/const.go	/^var td0 = [256]uint32{$/;"	v
td1	./crypto/aes/const.go	/^var td1 = [256]uint32{$/;"	v
td2	./crypto/aes/const.go	/^var td2 = [256]uint32{$/;"	v
td3	./crypto/aes/const.go	/^var td3 = [256]uint32{$/;"	v
tdiff	./cmd/fix/main_test.go	/^func tdiff(t *testing.T, a, b string) {$/;"	f
tdst	./cmd/compile/internal/x86/cgen.go	/^	var tdst gc.Node$/;"	v
te0	./crypto/aes/const.go	/^var te0 = [256]uint32{$/;"	v
te1	./crypto/aes/const.go	/^var te1 = [256]uint32{$/;"	v
te2	./crypto/aes/const.go	/^var te2 = [256]uint32{$/;"	v
te3	./crypto/aes/const.go	/^var te3 = [256]uint32{$/;"	v
teardown	./net/dnsclient_unix_test.go	/^func (conf *resolvConfTest) teardown() error {$/;"	f
teardown	./net/interface_unix_test.go	/^func (ti *testInterface) teardown() error {$/;"	f
teardown	./net/mockserver_test.go	/^func (dss *dualStackServer) teardown() error {$/;"	f
teardown	./net/mockserver_test.go	/^func (ls *localPacketServer) teardown() error {$/;"	f
teardown	./net/mockserver_test.go	/^func (ls *localServer) teardown() error {$/;"	f
teardownNetwork	./net/mockserver_test.go	/^func (dss *dualStackServer) teardownNetwork(network string) error {$/;"	f
teeReader	./io/io.go	/^type teeReader struct {$/;"	t
temp	./cmd/compile/internal/gc/gen.go	/^func temp(t *Type) *Node {$/;"	f
temp	./math/asinh.go	/^	var temp float64$/;"	v
temp	./math/atanh.go	/^	var temp float64$/;"	v
temp	./math/erf.go	/^		var temp float64$/;"	v
temp	./math/jn.go	/^			var temp float64$/;"	v
temp	./math/jn.go	/^		var temp float64$/;"	v
temp	./math/sinh.go	/^	var temp float64$/;"	v
temp1	./cmd/yacc/yacc.go	/^var temp1 = make([]int, TEMPSIZE) \/\/ temporary storage, indexed by terms + ntokens or states$/;"	v
tempDelay	./net/http/server.go	/^	var tempDelay time.Duration \/\/ how long to sleep on accept failure$/;"	v
tempDir	./cmd/go/go_test.go	/^func (tg *testgoData) tempDir(path string) {$/;"	f
tempFile	./cmd/go/go_test.go	/^func (tg *testgoData) tempFile(path, contents string) {$/;"	f
tempFile	./crypto/tls/handshake_test.go	/^func tempFile(contents string) string {$/;"	f
tempFiles	./cmd/pprof/internal/tempfile/tempfile.go	/^var tempFiles []string$/;"	v
tempFilesMu	./cmd/pprof/internal/tempfile/tempfile.go	/^var tempFilesMu = sync.Mutex{}$/;"	v
temperature	./go/types/example_test.go	/^	\/\/ .  func temperature.FToC(f float64) temperature.Celsius$/;"	f
temperature	./go/types/example_test.go	/^	\/\/ .  func temperature.main()$/;"	f
temperature	./go/types/example_test.go	/^	\/\/ .  type temperature.Celsius float64$/;"	t
templGoroutine	./cmd/trace/goroutines.go	/^var templGoroutine = template.Must(template.New("").Parse(`$/;"	v
templGoroutines	./cmd/trace/goroutines.go	/^var templGoroutines = template.Must(template.New("").Parse(`$/;"	v
templMain	./cmd/trace/main.go	/^var templMain = []byte(`$/;"	v
templTrace	./cmd/trace/trace.go	/^var templTrace = `$/;"	v
template	./html/template/escape.go	/^func (e *escaper) template(name string) *template.Template {$/;"	f
templateControl	./text/template/parse/parse.go	/^func (t *Tree) templateControl() Node {$/;"	f
templateData	./cmd/cover/html.go	/^type templateData struct {$/;"	t
templateFile	./cmd/cover/html.go	/^type templateFile struct {$/;"	t
templateFile	./text/template/examplefiles_test.go	/^type templateFile struct {$/;"	t
templateFileExecTests	./text/template/multi_test.go	/^var templateFileExecTests = []execTest{$/;"	v
templateTxt	./go/doc/doc_test.go	/^var templateTxt = readTemplate("template.txt")$/;"	v
temporary	./net/net.go	/^type temporary interface {$/;"	t
tenRunes	./bytes/bytes_test.go	/^func tenRunes(r rune) string {$/;"	f
tenRunes	./strings/strings_test.go	/^func tenRunes(ch rune) string {$/;"	f
tens	./go/doc/testdata/benchmark.go	/^	var tens = 0$/;"	v
tens	./testing/benchmark.go	/^	var tens = 0$/;"	v
term	./cmd/asm/internal/asm/parse.go	/^func (p *Parser) term() uint64 {$/;"	f
term	./text/template/parse/parse.go	/^func (t *Tree) term() Node {$/;"	f
terminateCell	./text/tabwriter/tabwriter.go	/^func (b *Writer) terminateCell(htab bool) int {$/;"	f
terminateProcess	./os/exec_windows.go	/^func terminateProcess(pid, exitcode int) error {$/;"	f
test	./cmd/doc/doc_test.go	/^type test struct {$/;"	t
test	./cmd/go/test.go	/^func (b *builder) test(p *Package) (buildAction, runAction, printAction *action, err error) {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentDBExecTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentDBQueryTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentRandomTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentStmtExecTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentStmtQueryTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentTxExecTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentTxQueryTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentTxStmtExecTest) test(t testing.TB) error {$/;"	f
test	./database/sql/sql_test.go	/^func (c *concurrentTxStmtQueryTest) test(t testing.TB) error {$/;"	f
test	./go/doc/doc_test.go	/^func test(t *testing.T, mode Mode) {$/;"	f
test	./hash/crc32/crc32_test.go	/^type test struct {$/;"	t
test	./hash/crc64/crc64_test.go	/^type test struct {$/;"	t
test	./os/os_test.go	/^	type test struct {$/;"	t
test	./runtime/asm_ppc64x.s	/^test:$/;"	l
test	./runtime/crash_test.go	/^func test(name string) {$/;"	f
test	./runtime/softfloat64_test.go	/^func test(t *testing.T, op string, hw, sw func(float64, float64) float64, all []float64) {$/;"	f
test	./unicode/maketables.go	/^var test = flag.Bool("test",$/;"	v
test64	./sync/atomic/atomic_test.go	/^	var test64 uint64 = 1 << 50$/;"	v
test64err	./sync/atomic/atomic_test.go	/^var test64err = func() (err interface{}) {$/;"	v
testAddr2Line	./cmd/addr2line/addr2line_test.go	/^func testAddr2Line(t *testing.T, exepath, addr string) {$/;"	f
testAddrs	./net/interface_test.go	/^func testAddrs(t *testing.T, ifat []Addr) (naf4, naf6 int) {$/;"	f
testAfterQueuing	./time/sleep_test.go	/^func testAfterQueuing(t *testing.T, delta Duration) error {$/;"	f
testAll	./cmd/cover/testdata/test.go	/^func testAll() {$/;"	f
testArray	./encoding/gob/encoder_test.go	/^var testArray [7]int$/;"	v
testAssert	./runtime/gc_test.go	/^func testAssert(x interface{}) error {$/;"	f
testAssertVar	./runtime/gc_test.go	/^func testAssertVar(x interface{}) error {$/;"	f
testAtof	./strconv/atof_test.go	/^func testAtof(t *testing.T, opt bool) {$/;"	f
testAtomic64	./runtime/runtime1.go	/^func testAtomic64() {$/;"	f
testBasic	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func testBasic(t *testing.T, testfn func(*testing.T, func(func([]byte))), opcode ...byte) {$/;"	f
testBasicREX	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func testBasicREX(t *testing.T, testfn func(*testing.T, func(func([]byte))), opcode ...byte) {$/;"	f
testBentleyMcIlroy	./sort/sort_test.go	/^func testBentleyMcIlroy(t *testing.T, sort func(Interface), maxswap func(int) int) {$/;"	f
testBitFun	./cmd/compile/internal/big/int_test.go	/^func testBitFun(t *testing.T, msg string, f bitFun, x, y *Int, exp string) {$/;"	f
testBitFun	./math/big/int_test.go	/^func testBitFun(t *testing.T, msg string, f bitFun, x, y *Int, exp string) {$/;"	f
testBitFunSelf	./cmd/compile/internal/big/int_test.go	/^func testBitFunSelf(t *testing.T, msg string, f bitFun, x, y *Int, exp string) {$/;"	f
testBitFunSelf	./math/big/int_test.go	/^func testBitFunSelf(t *testing.T, msg string, f bitFun, x, y *Int, exp string) {$/;"	f
testBitset	./cmd/compile/internal/big/int_test.go	/^func testBitset(t *testing.T, x *Int) {$/;"	f
testBitset	./math/big/int_test.go	/^func testBitset(t *testing.T, x *Int) {$/;"	f
testBlock	./crypto/rc4/rc4_test.go	/^func testBlock(t *testing.T, xor func(c *Cipher, dst, src []byte)) {$/;"	f
testBlockRun	./cmd/cover/testdata/test.go	/^func testBlockRun() {$/;"	f
testBlocks	./image/jpeg/dct_test.go	/^var testBlocks = [10]block{$/;"	v
testBuiltinSignature	./go/types/builtins_test.go	/^func testBuiltinSignature(t *testing.T, name, src0, want string) {$/;"	f
testBytes	./bytes/buffer_test.go	/^var testBytes []byte \/\/ test data; same as data but as a slice.$/;"	v
testCPUProfile	./runtime/pprof/pprof_test.go	/^func testCPUProfile(t *testing.T, need []string, f func()) {$/;"	f
testCallerBar	./runtime/symtab_test.go	/^func testCallerBar(t *testing.T) {$/;"	f
testCallerFoo	./runtime/symtab_test.go	/^func testCallerFoo(t *testing.T) {$/;"	f
testCancel	./os/signal/signal_test.go	/^func testCancel(t *testing.T, ignore bool) {$/;"	f
testCase	./cmd/fix/main_test.go	/^type testCase struct {$/;"	t
testCase	./image/gif/writer_test.go	/^var testCase = []struct {$/;"	v
testCase	./image/jpeg/writer_test.go	/^var testCase = []struct {$/;"	v
testCase	./index/suffixarray/suffixarray_test.go	/^type testCase struct {$/;"	t
testCase	./net/http/fs_test.go	/^	type testCase struct {$/;"	t
testCase	./strings/replace_test.go	/^	type testCase struct {$/;"	t
testCases	./cmd/fix/main_test.go	/^var testCases []testCase$/;"	v
testCases	./index/suffixarray/suffixarray_test.go	/^var testCases = []testCase{$/;"	v
testCases	./net/dial_test.go	/^	var testCases = []struct {$/;"	v
testCases	./strings/replace_test.go	/^	var testCases []testCase$/;"	v
testChanSendBarrier	./runtime/chanbarrier_test.go	/^func testChanSendBarrier(useSelect bool) {$/;"	f
testChtimes	./os/os_test.go	/^func testChtimes(t *testing.T, name string) {$/;"	f
testClientHello	./crypto/tls/handshake_server_test.go	/^func testClientHello(t *testing.T, serverConfig *Config, m handshakeMessage) {$/;"	f
testClientHelloFailure	./crypto/tls/handshake_server_test.go	/^func testClientHelloFailure(t *testing.T, serverConfig *Config, m handshakeMessage, expectedSubStr string) {$/;"	f
testCloseConn	./net/http/transport_test.go	/^type testCloseConn struct {$/;"	t
testComment	./go/printer/printer_test.go	/^func testComment(t *testing.T, f *ast.File, srclen int, comment *ast.Comment) {$/;"	f
testCompareAndSwapUint64	./sync/atomic/atomic_test.go	/^func testCompareAndSwapUint64(t *testing.T, cas func(*uint64, uint64, uint64) bool) {$/;"	f
testConcurrentReadsAfterGrowth	./runtime/map_test.go	/^func testConcurrentReadsAfterGrowth(t *testing.T, useReflect bool) {$/;"	f
testConfig	./crypto/tls/handshake_server_test.go	/^var testConfig *Config$/;"	v
testConn	./net/http/serve_test.go	/^	var testConn closeWriteTestConn$/;"	v
testConn	./net/http/serve_test.go	/^type testConn struct {$/;"	t
testConnReadNonzeroAndEOF	./crypto/tls/tls_test.go	/^func testConnReadNonzeroAndEOF(t *testing.T, delay time.Duration) error {$/;"	f
testConnSet	./net/http/transport_test.go	/^type testConnSet struct {$/;"	t
testConstandTimeByteEqData	./crypto/subtle/constant_time_test.go	/^var testConstandTimeByteEqData = []TestConstantTimeByteEqStruct{$/;"	v
testConstant	./encoding/binary/varint_test.go	/^func testConstant(t *testing.T, w uint, max int) {$/;"	f
testConstantTimeCompareData	./crypto/subtle/constant_time_test.go	/^var testConstantTimeCompareData = []TestConstantTimeCompareStruct{$/;"	v
testConstruction	./index/suffixarray/suffixarray_test.go	/^func testConstruction(t *testing.T, tc *testCase, x *Index) {$/;"	f
testCrashHandler	./runtime/crash_test.go	/^func testCrashHandler(t *testing.T, cgo bool) {$/;"	f
testCreate	./archive/zip/writer_test.go	/^func testCreate(t *testing.T, w *Writer, wt *WriteTest) {$/;"	f
testCreate	./cmd/pack/pack_test.go	/^func testCreate(t *testing.T, dir string) {$/;"	f
testData	./cmd/nm/nm_test.go	/^var testData uint32$/;"	v
testData	./crypto/x509/pem_decrypt_test.go	/^var testData = []struct {$/;"	v
testDeadlock	./runtime/crash_test.go	/^func testDeadlock(t *testing.T, source string) {$/;"	f
testDeferPtrsGoexit	./runtime/stack_test.go	/^func testDeferPtrsGoexit(c chan int, i int) {$/;"	f
testDeferPtrsPanic	./runtime/stack_test.go	/^func testDeferPtrsPanic(c chan int, i int) {$/;"	f
testDigit	./unicode/digit_test.go	/^var testDigit = []rune{$/;"	v
testDir	./go/internal/gcimporter/gcimporter_test.go	/^func testDir(t *testing.T, dir string, endTime time.Time) (nimports int) {$/;"	f
testDirTest	./cmd/dist/test.go	/^func (t *tester) testDirTest(shard, shards int) error {$/;"	f
testDisasm	./cmd/objdump/objdump_test.go	/^func testDisasm(t *testing.T, flags ...string) {$/;"	f
testDots	./net/lookup_test.go	/^func testDots(t *testing.T, mode string) {$/;"	f
testECDSACertificate	./crypto/tls/handshake_server_test.go	/^var testECDSACertificate = fromHex("3082020030820162020900b8bf2d47a0d2ebf4300906072a8648ce3d04013045310b3009060355040613024155311330110603550408130a536f6d652d53746174653121301f060355040a1318496e7465726e6574205769646769747320507479204c7464301e170d3132313132323135303633325a170d3232313132303135303633325a3045310b3009060355040613024155311330110603550408130a536f6d652d53746174653121301f060355040a1318496e7465726e6574205769646769747320507479204c746430819b301006072a8648ce3d020106052b81040023038186000400c4a1edbe98f90b4873367ec316561122f23d53c33b4d213dcd6b75e6f6b0dc9adf26c1bcb287f072327cb3642f1c90bcea6823107efee325c0483a69e0286dd33700ef0462dd0da09c706283d881d36431aa9e9731bd96b068c09b23de76643f1a5c7fe9120e5858b65f70dd9bd8ead5d7f5d5ccb9b69f30665b669a20e227e5bffe3b300906072a8648ce3d040103818c0030818802420188a24febe245c5487d1bacf5ed989dae4770c05e1bb62fbdf1b64db76140d311a2ceee0b7e927eff769dc33b7ea53fcefa10e259ec472d7cacda4e970e15a06fd00242014dfcbe67139c2d050ebd3fa38c25c13313830d9406bbd4377af6ec7ac9862eddd711697f857c56defb31782be4c7780daecbbe9e4e3624317b6a0f399512078f2a")$/;"	v
testECDSAPrivateKey	./crypto/tls/handshake_server_test.go	/^var testECDSAPrivateKey = &ecdsa.PrivateKey{$/;"	v
testEmptySwitches	./cmd/cover/testdata/test.go	/^func testEmptySwitches() {$/;"	f
testEncodeAll	./image/gif/writer_test.go	/^func testEncodeAll(t *testing.T, go1Dot5Fields bool, useGlobalColorModel bool) {$/;"	f
testEncrypt	./crypto/rc4/rc4_test.go	/^func testEncrypt(t *testing.T, desc string, c *Cipher, src, expect []byte) {$/;"	f
testEncryptOAEPData	./crypto/rsa/rsa_test.go	/^var testEncryptOAEPData = []testEncryptOAEPStruct{$/;"	v
testEncryptOAEPMessage	./crypto/rsa/rsa_test.go	/^type testEncryptOAEPMessage struct {$/;"	t
testEncryptOAEPStruct	./crypto/rsa/rsa_test.go	/^type testEncryptOAEPStruct struct {$/;"	t
testEndToEnd	./cmd/asm/internal/asm/endtoend_test.go	/^func testEndToEnd(t *testing.T, goarch string) {$/;"	f
testEntity	./encoding/xml/xml_test.go	/^var testEntity = map[string]string{"何": "What", "is-it": "is it?"}$/;"	v
testEntry	./go/types/typestring_test.go	/^type testEntry struct {$/;"	t
testEnv	./runtime/crash_test.go	/^func testEnv(cmd *exec.Cmd) *exec.Cmd {$/;"	f
testEqual	./encoding/ascii85/ascii85_test.go	/^func testEqual(t *testing.T, msg string, args ...interface{}) bool {$/;"	f
testEqual	./encoding/base32/base32_test.go	/^func testEqual(t *testing.T, msg string, args ...interface{}) bool {$/;"	f
testEqual	./encoding/base64/base64_test.go	/^func testEqual(t *testing.T, msg string, args ...interface{}) bool {$/;"	f
testErrNotExist	./internal/syscall/windows/registry/registry_test.go	/^func testErrNotExist(t *testing.T, name string, err error) {$/;"	f
testErrNotExist	./os/error_test.go	/^func testErrNotExist(name string) string {$/;"	f
testErrUnexpectedType	./internal/syscall/windows/registry/registry_test.go	/^func testErrUnexpectedType(t *testing.T, test ValueTest, gottype uint32, err error) {$/;"	f
testError	./bufio/scan_test.go	/^var testError = errors.New("testError")$/;"	v
testError	./encoding/gob/codec_test.go	/^func testError(t *testing.T) {$/;"	f
testError	./text/scanner/scanner_test.go	/^func testError(t *testing.T, src, pos, msg string, tok rune) {$/;"	f
testEval	./go/types/eval_test.go	/^func testEval(t *testing.T, fset *token.FileSet, pkg *Package, pos token.Pos, expr string, typ Type, typStr, valStr string) {$/;"	f
testExecute	./text/template/exec_test.go	/^func testExecute(execTests []execTest, template *Template, t *testing.T) {$/;"	f
testExp	./math/all_test.go	/^func testExp(t *testing.T, Exp func(float64) float64, name string) {$/;"	f
testExp2	./math/all_test.go	/^func testExp2(t *testing.T, Exp2 func(float64) float64, name string) {$/;"	f
testExponentialDistribution	./math/rand/rand_test.go	/^func testExponentialDistribution(t *testing.T, nsamples int, rate float64, seed int64) {$/;"	f
testExprs	./go/types/exprstring_test.go	/^var testExprs = []testEntry{$/;"	v
testExtDis	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func testExtDis($/;"	f
testExtDis	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func testExtDis($/;"	f
testFile	./cmd/gofmt/long_test.go	/^func testFile(t *testing.T, b1, b2 *bytes.Buffer, filename string) {$/;"	f
testFile	./compress/lzw/writer_test.go	/^func testFile(t *testing.T, fn string, order Order, litWidth int) {$/;"	f
testFile	./mime/multipart/formdata_test.go	/^func testFile(t *testing.T, fh *FileHeader, efn, econtent string) File {$/;"	f
testFileLevelDict	./compress/zlib/writer_test.go	/^func testFileLevelDict(t *testing.T, fn string, level int, d string) {$/;"	f
testFileLevelDictReset	./compress/zlib/writer_test.go	/^func testFileLevelDictReset(t *testing.T, fn string, level int, dict []byte) {$/;"	f
testFileListener	./net/file_test.go	/^func testFileListener(t *testing.T, net, laddr string) {$/;"	f
testFileMode	./archive/zip/reader_test.go	/^func testFileMode(t *testing.T, zipName string, f *File, want os.FileMode) {$/;"	f
testFilePacketConn	./net/file_test.go	/^func testFilePacketConn(t *testing.T, pcf packetConnFile, listen bool) {$/;"	f
testFilePacketConnDial	./net/file_test.go	/^func testFilePacketConnDial(t *testing.T, net, raddr string) {$/;"	f
testFilePacketConnListen	./net/file_test.go	/^func testFilePacketConnListen(t *testing.T, net, laddr string) {$/;"	f
testFileSet	./cmd/go/test.go	/^var testFileSet = token.NewFileSet()$/;"	v
testFileSystem	./net/http/fs_test.go	/^type testFileSystem struct {$/;"	t
testFiles	./cmd/gofmt/long_test.go	/^func testFiles(t *testing.T, filenames <-chan string, done chan<- int) {$/;"	f
testFindAllIndex	./index/suffixarray/suffixarray_test.go	/^func testFindAllIndex(t *testing.T, tc *testCase, x *Index, rx *regexp.Regexp, n int) {$/;"	f
testFindAllIndex	./regexp/find_test.go	/^func testFindAllIndex(test *FindTest, result [][]int, t *testing.T) {$/;"	f
testFindAllSubmatchIndex	./regexp/find_test.go	/^func testFindAllSubmatchIndex(test *FindTest, result [][]int, t *testing.T) {$/;"	f
testFindIndex	./regexp/find_test.go	/^func testFindIndex(test *FindTest, result []int, t *testing.T) {$/;"	f
testFindSubmatchIndex	./regexp/find_test.go	/^func testFindSubmatchIndex(test *FindTest, result []int, t *testing.T) {$/;"	f
testFlag	./cmd/go/testflag.go	/^func testFlag(args []string, i int) (f *testFlagSpec, value string, extra bool) {$/;"	f
testFlagDefn	./cmd/go/testflag.go	/^var testFlagDefn = []*testFlagSpec{$/;"	v
testFlagSpec	./cmd/go/testflag.go	/^type testFlagSpec struct {$/;"	t
testFlags	./cmd/go/testflag.go	/^func testFlags(args []string) (packageNames, passToTest []string) {$/;"	f
testFloat32	./encoding/gob/encoder_test.go	/^var testFloat32 float32$/;"	v
testFloatRound	./cmd/compile/internal/big/float_test.go	/^func testFloatRound(t *testing.T, x, r int64, prec uint, mode RoundingMode) {$/;"	f
testFloatRound	./math/big/float_test.go	/^func testFloatRound(t *testing.T, x, r int64, prec uint, mode RoundingMode) {$/;"	f
testFor	./cmd/cover/testdata/test.go	/^func testFor() {$/;"	f
testFowler	./regexp/exec_test.go	/^func testFowler(t *testing.T, file string) {$/;"	f
testFunNN	./cmd/compile/internal/big/nat_test.go	/^func testFunNN(t *testing.T, msg string, f funNN, a argNN) {$/;"	f
testFunNN	./math/big/nat_test.go	/^func testFunNN(t *testing.T, msg string, f funNN, a argNN) {$/;"	f
testFunVV	./cmd/compile/internal/big/arith_test.go	/^func testFunVV(t *testing.T, msg string, f funVV, a argVV) {$/;"	f
testFunVV	./math/big/arith_test.go	/^func testFunVV(t *testing.T, msg string, f funVV, a argVV) {$/;"	f
testFunVW	./cmd/compile/internal/big/arith_test.go	/^func testFunVW(t *testing.T, msg string, f funVW, a argVW) {$/;"	f
testFunVW	./math/big/arith_test.go	/^func testFunVW(t *testing.T, msg string, f funVW, a argVW) {$/;"	f
testFunVWW	./cmd/compile/internal/big/arith_test.go	/^func testFunVWW(t *testing.T, msg string, f funVWW, a argVWW) {$/;"	f
testFunVWW	./math/big/arith_test.go	/^func testFunVWW(t *testing.T, msg string, f funVWW, a argVWW) {$/;"	f
testFunWVW	./cmd/compile/internal/big/arith_test.go	/^func testFunWVW(t *testing.T, msg string, f funWVW, a argWVW) {$/;"	f
testFunWVW	./math/big/arith_test.go	/^func testFunWVW(t *testing.T, msg string, f funWVW, a argWVW) {$/;"	f
testFunWW	./cmd/compile/internal/big/arith_test.go	/^func testFunWW(t *testing.T, msg string, f funWW, a argWW) {$/;"	f
testFunWW	./math/big/arith_test.go	/^func testFunWW(t *testing.T, msg string, f funWW, a argWW) {$/;"	f
testFunZZ	./cmd/compile/internal/big/int_test.go	/^func testFunZZ(t *testing.T, msg string, f funZZ, a argZZ) {$/;"	f
testFunZZ	./math/big/int_test.go	/^func testFunZZ(t *testing.T, msg string, f funZZ, a argZZ) {$/;"	f
testFunc	./cmd/go/test.go	/^type testFunc struct {$/;"	t
testFuncs	./cmd/go/test.go	/^type testFuncs struct {$/;"	t
testFuzz	./encoding/gob/codec_test.go	/^func testFuzz(t *testing.T, seed int64, n int, input ...interface{}) {$/;"	f
testGIF	./image/gif/reader_test.go	/^var testGIF = []byte{$/;"	v
testGcd	./cmd/compile/internal/big/int_test.go	/^func testGcd(t *testing.T, d, x, y, a, b *Int) {$/;"	f
testGcd	./math/big/int_test.go	/^func testGcd(t *testing.T, d, x, y, a, b *Int) {$/;"	f
testGetBinaryValue	./internal/syscall/windows/registry/registry_test.go	/^func testGetBinaryValue(t *testing.T, k registry.Key, test ValueTest) {$/;"	f
testGetIntegerValue	./internal/syscall/windows/registry/registry_test.go	/^func testGetIntegerValue(t *testing.T, k registry.Key, test ValueTest) {$/;"	f
testGetStringValue	./internal/syscall/windows/registry/registry_test.go	/^func testGetStringValue(t *testing.T, k registry.Key, test ValueTest) {$/;"	f
testGetStringsValue	./internal/syscall/windows/registry/registry_test.go	/^func testGetStringsValue(t *testing.T, k registry.Key, test ValueTest) {$/;"	f
testGetValue	./internal/syscall/windows/registry/registry_test.go	/^func testGetValue(t *testing.T, k registry.Key, test ValueTest, size int) {$/;"	f
testGetenv	./os/env_test.go	/^func testGetenv(s string) string {$/;"	f
testGolden	./hash/fnv/fnv_test.go	/^func testGolden(t *testing.T, hash hash.Hash, gold []golden) {$/;"	f
testHTTPRPC	./net/rpc/server_test.go	/^func testHTTPRPC(t *testing.T, path string) {$/;"	f
testHandlerBodyClose	./net/http/serve_test.go	/^func testHandlerBodyClose(t *testing.T, i int, tt handlerBodyCloseTest) {$/;"	f
testHandlerBodyConsumer	./net/http/serve_test.go	/^type testHandlerBodyConsumer struct {$/;"	t
testHandlerBodyConsumers	./net/http/serve_test.go	/^var testHandlerBodyConsumers = []testHandlerBodyConsumer{$/;"	v
testHandlerPanic	./net/http/serve_test.go	/^func testHandlerPanic(t *testing.T, withHijack bool, panicValue interface{}) {$/;"	f
testHandshake	./crypto/tls/handshake_server_test.go	/^func testHandshake(clientConfig, serverConfig *Config) (serverState, clientState ConnectionState, err error) {$/;"	f
testHash	./crypto/sha512/sha512_test.go	/^func testHash(t *testing.T, name, in, outHex string, oneShotResult []byte, digestFunc hash.Hash) {$/;"	f
testHeader	./net/http/header_test.go	/^var testHeader = Header{$/;"	v
testHeaderRoundTrip	./archive/zip/zip_test.go	/^func testHeaderRoundTrip(fh *FileHeader, wantUncompressedSize uint32, wantUncompressedSize64 uint64, t *testing.T) {$/;"	f
testHookDialChannel	./net/hook_plan9.go	/^var testHookDialChannel = func() { time.Sleep(time.Millisecond) } \/\/ see golang.org\/issue\/5349$/;"	v
testHookStartProcess	./net/http/cgi/host.go	/^var testHookStartProcess func(*os.Process) \/\/ nil except for some tests$/;"	v
testHookStartTLS	./net/smtp/smtp.go	/^var testHookStartTLS func(*tls.Config) \/\/ nil, except for tests$/;"	v
testINDCCA	./crypto/ecdsa/ecdsa_test.go	/^func testINDCCA(t *testing.T, c elliptic.Curve, tag string) {$/;"	f
testIf	./cmd/cover/testdata/test.go	/^func testIf() {$/;"	f
testIfaceEqual	./runtime/gc_test.go	/^func testIfaceEqual(x interface{}) {$/;"	f
testImportStack	./cmd/go/test.go	/^func testImportStack(top string, p *Package, target string) []string {$/;"	f
testImporter	./go/types/api_test.go	/^type testImporter map[string]*Package$/;"	t
testInNewThread	./runtime/crash_test.go	/^func testInNewThread(name string) {$/;"	f
testInetaddr	./net/ipsock_test.go	/^var testInetaddr = func(ip IPAddr) Addr { return &TCPAddr{IP: ip.IP, Port: 5682, Zone: ip.Zone} }$/;"	v
testInitMime	./mime/type.go	/^var testInitMime, osInitMime func()$/;"	v
testInput	./bufio/bufio_test.go	/^var testInput = []byte("012\\n345\\n678\\n9ab\\ncde\\nfgh\\nijk\\nlmn\\nopq\\nrst\\nuvw\\nxy")$/;"	v
testInputrn	./bufio/bufio_test.go	/^var testInputrn = []byte("012\\r\\n345\\r\\n678\\r\\n9ab\\r\\ncde\\r\\nfgh\\r\\nijk\\r\\nlmn\\r\\nopq\\r\\nrst\\r\\nuvw\\r\\nxy\\r\\n\\n\\r\\n")$/;"	v
testInt	./encoding/gob/encoder_test.go	/^var testInt int$/;"	v
testIntPanics	./crypto/rand/util_test.go	/^func testIntPanics(t *testing.T, b *big.Int) {$/;"	f
testIntegrity	./hash/fnv/fnv_test.go	/^func testIntegrity(t *testing.T, h hash.Hash) {$/;"	f
testInterface	./net/interface_unix_test.go	/^type testInterface struct {$/;"	t
testInterfaceAddrs	./net/interface_test.go	/^func testInterfaceAddrs(t *testing.T, ifi *Interface) (naf4, naf6 int) {$/;"	f
testInterfaceMulticastAddrs	./net/interface_test.go	/^func testInterfaceMulticastAddrs(t *testing.T, ifi *Interface) (nmaf4, nmaf6 int) {$/;"	f
testInvalidHeader	./archive/zip/zip_test.go	/^func testInvalidHeader(h *FileHeader, t *testing.T) {$/;"	f
testKeyBasics	./crypto/rsa/rsa_test.go	/^func testKeyBasics(t *testing.T, priv *PrivateKey) {$/;"	f
testKeyGeneration	./crypto/ecdsa/ecdsa_test.go	/^func testKeyGeneration(t *testing.T, c elliptic.Curve, tag string) {$/;"	f
testKeysFromTest	./crypto/tls/prf_test.go	/^type testKeysFromTest struct {$/;"	t
testKeysFromTests	./crypto/tls/prf_test.go	/^var testKeysFromTests = []testKeysFromTest{$/;"	v
testKillProcess	./os/os_test.go	/^func testKillProcess(t *testing.T, processKiller func(p *Process)) {$/;"	f
testLargeWrite	./os/os_test.go	/^var testLargeWrite = flag.Bool("large_write", false, "run TestLargeWriteToConsole test that floods console with output")$/;"	v
testLetter	./unicode/digit_test.go	/^var testLetter = []rune{$/;"	v
testLevelDict	./compress/zlib/writer_test.go	/^func testLevelDict(t *testing.T, fn string, b0 []byte, level int, d string) {$/;"	f
testLineTable	./debug/dwarf/line_test.go	/^func testLineTable(t *testing.T, want []LineEntry, d *Data) {$/;"	f
testLocalEasy	./cmd/go/go_test.go	/^func testLocalEasy(tg *testgoData, local string) {$/;"	f
testLocalEasySub	./cmd/go/go_test.go	/^func testLocalEasySub(tg *testgoData, local string) {$/;"	f
testLocalHard	./cmd/go/go_test.go	/^func testLocalHard(tg *testgoData, local string) {$/;"	f
testLocalInstall	./cmd/go/go_test.go	/^func testLocalInstall(tg *testgoData, local string) {$/;"	f
testLocalRun	./cmd/go/go_test.go	/^func testLocalRun(tg *testgoData, exepath, local, match string) {$/;"	f
testLookup	./index/suffixarray/suffixarray_test.go	/^func testLookup(t *testing.T, tc *testCase, x *Index, s string, n int) {$/;"	f
testLookups	./index/suffixarray/suffixarray_test.go	/^func testLookups(t *testing.T, tc *testCase, x *Index, n int) {$/;"	f
testMainDeps	./cmd/go/test.go	/^var testMainDeps = map[string]bool{$/;"	v
testMap	./encoding/gob/encoder_test.go	/^var testMap map[string]int$/;"	v
testMapLookups	./runtime/map_test.go	/^func testMapLookups(t *testing.T, m map[string]string) {$/;"	f
testMessage	./crypto/tls/handshake_messages_test.go	/^type testMessage interface {$/;"	t
testMissingFile	./net/http/request_test.go	/^func testMissingFile(t *testing.T, req *Request) {$/;"	f
testModSqrt	./cmd/compile/internal/big/int_test.go	/^func testModSqrt(t *testing.T, elt, mod, sq, sqrt *Int) bool {$/;"	f
testModSqrt	./math/big/int_test.go	/^func testModSqrt(t *testing.T, elt, mod, sq, sqrt *Int) bool {$/;"	f
testMove	./cmd/go/go_test.go	/^func testMove(t *testing.T, vcs, url, base, config string) {$/;"	f
testMoveSVN	./cmd/go/go_test.go	/^\/\/ func testMoveSVN(t *testing.T) {$/;"	f
testMsg	./mime/quotedprintable/writer_test.go	/^var testMsg = []byte("Quoted-Printable (QP) est un format d'encodage de données codées sur 8 bits, qui utilise exclusivement les caractères alphanumériques imprimables du code ASCII (7 bits).\\r\\n" +$/;"	v
testMulticastAddrs	./net/interface_test.go	/^func testMulticastAddrs(t *testing.T, ifmat []Addr) (nmaf4, nmaf6 int) {$/;"	f
testMultipart	./mime/multipart/multipart_test.go	/^func testMultipart(t *testing.T, r io.Reader, onlyNewlines bool) {$/;"	f
testMultipartBody	./mime/multipart/multipart_test.go	/^func testMultipartBody(sep string) string {$/;"	f
testMultipartFile	./net/http/request_test.go	/^func testMultipartFile(t *testing.T, req *Request, key, expectFilename, expectContent string) multipart.File {$/;"	f
testNEWUSERRemap	./syscall/exec_linux_test.go	/^func testNEWUSERRemap(t *testing.T, uid, gid int, setgroups bool) {$/;"	f
testNewServerRPC	./net/rpc/server_test.go	/^func testNewServerRPC(t *testing.T, addr string) {$/;"	f
testNoNewline	./bufio/scan_test.go	/^func testNoNewline(text string, lines []string, t *testing.T) {$/;"	f
testNonceSafety	./crypto/ecdsa/ecdsa_test.go	/^func testNonceSafety(t *testing.T, c elliptic.Curve, tag string) {$/;"	f
testNormalDistribution	./math/rand/rand_test.go	/^func testNormalDistribution(t *testing.T, nsamples int, mean, stddev float64, seed int64) {$/;"	f
testObjdump32	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func testObjdump32(t *testing.T, generate func(func([]byte))) {$/;"	f
testObjdump64	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func testObjdump64(t *testing.T, generate func(func([]byte))) {$/;"	f
testObjdumpARM	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^func testObjdumpARM(t *testing.T, generate func(func([]byte))) {$/;"	f
testObjdumpArch	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^func testObjdumpArch(t *testing.T, generate func(func([]byte)), arch Mode) {$/;"	f
testObjdumpArch	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func testObjdumpArch(t *testing.T, generate func(func([]byte)), arch int) {$/;"	f
testOperandParser	./cmd/asm/internal/asm/operand_test.go	/^func testOperandParser(t *testing.T, parser *Parser, tests []operandTest) {$/;"	f
testOut	./cmd/asm/internal/asm/asm.go	/^var testOut *bytes.Buffer \/\/ Gathers output when testing.$/;"	v
testOutput	./bufio/bufio_test.go	/^var testOutput = []byte("0123456789abcdefghijklmnopqrstuvwxy")$/;"	v
testOverflow	./encoding/binary/varint_test.go	/^func testOverflow(t *testing.T, buf []byte, n0 int, err0 error) {$/;"	f
testPSL	./net/http/cookiejar/jar_test.go	/^type testPSL struct{}$/;"	t
testPanic	./cmd/cover/testdata/test.go	/^func testPanic() {$/;"	f
testParameterGeneration	./crypto/dsa/dsa_test.go	/^func testParameterGeneration(t *testing.T, sizes ParameterSizes, L, N int) {$/;"	f
testParse	./flag/flag_test.go	/^func testParse(f *FlagSet, t *testing.T) {$/;"	f
testParse	./text/template/parse/parse_test.go	/^func testParse(doCopy bool, t *testing.T) {$/;"	f
testParseDump	./regexp/syntax/parse_test.go	/^func testParseDump(t *testing.T, tests []parseTest, flags Flags) {$/;"	f
testPath	./go/internal/gcimporter/gcimporter_test.go	/^func testPath(t *testing.T, path string) *types.Package {$/;"	f
testPlan932	./cmd/internal/rsc.io/x86/x86asm/plan9ext_test.go	/^func testPlan932(t *testing.T, generate func(func([]byte))) {$/;"	f
testPlan964	./cmd/internal/rsc.io/x86/x86asm/plan9ext_test.go	/^func testPlan964(t *testing.T, generate func(func([]byte))) {$/;"	f
testPlan9Arch	./cmd/internal/rsc.io/x86/x86asm/plan9ext_test.go	/^func testPlan9Arch(t *testing.T, arch int, generate func(func([]byte))) {$/;"	f
testPool	./sync/pool_test.go	/^func testPool(t *testing.T, drain bool) {$/;"	f
testPrefix	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func testPrefix(t *testing.T, testfn func(*testing.T, func(func([]byte)))) {$/;"	f
testPrefixREX	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func testPrefixREX(t *testing.T, testfn func(*testing.T, func(func([]byte)))) {$/;"	f
testPrint	./log/log_test.go	/^func testPrint(t *testing.T, flag int, prefix string, pattern string, useFormat bool) {$/;"	f
testRE2	./regexp/exec_test.go	/^func testRE2(t *testing.T, file string) {$/;"	f
testRPC	./net/rpc/server_test.go	/^func testRPC(t *testing.T, addr string) {$/;"	f
testRSACertificate	./crypto/tls/handshake_server_test.go	/^var testRSACertificate = fromHex("30820263308201cca003020102020900a273000c8100cbf3300d06092a864886f70d01010b0500302b31173015060355040a130e476f6f676c652054455354494e473110300e06035504031307476f20526f6f74301e170d3135303130313030303030305a170d3235303130313030303030305a302631173015060355040a130e476f6f676c652054455354494e47310b300906035504031302476f30819f300d06092a864886f70d010101050003818d0030818902818100af8788f6201b95656c14ab4405af3b4514e3b76dfd00634d957ffe6a623586c04af9187cf6aa255e7a64316600baf48e92afc76bd876d4f35f41cb6e5615971b97c13c123921663d2b16d1bcdb1cc0a7dab7caadbadacbd52150ecde8dabd16b814b8902f3c4bec16c89b14484bd21d1047d9d164df98215f6effad60947f2fb0203010001a38193308190300e0603551d0f0101ff0404030205a0301d0603551d250416301406082b0601050507030106082b06010505070302300c0603551d130101ff0402300030190603551d0e0412041012508d896f1bd1dc544d6ecb695e06f4301b0603551d23041430128010bf3db6a966f2b840cfeab40378481a4130190603551d1104123010820e6578616d706c652e676f6c616e67300d06092a864886f70d01010b050003818100927caf91551218965931a64840d52dd5eebb02a0f5c21e7c9bb3307d3cdc76da4f3dc0faae2d33246b037b1b67591121b511bc77b9d9e06ea82d2e35fa645f223e63106bbeff14866d0df01531a814381e3b84872ccb98ed5176b9b14fdddb9b84048640fa51ddbab48debe346de46b94f86c7f9a4c24134acccf6eab0ab3918")$/;"	v
testRSACertificateIssuer	./crypto/tls/handshake_server_test.go	/^var testRSACertificateIssuer = fromHex("3082024d308201b6a003020102020827326bd913b7c43d300d06092a864886f70d01010b0500302b31173015060355040a130e476f6f676c652054455354494e473110300e06035504031307476f20526f6f74301e170d3135303130313030303030305a170d3235303130313030303030305a302b31173015060355040a130e476f6f676c652054455354494e473110300e06035504031307476f20526f6f7430819f300d06092a864886f70d010101050003818d0030818902818100f0429a7b9f66a222c8453800452db355b34c4409fee09af2510a6589bfa35bdb4d453200d1de24338d6d5e5a91cc8301628445d6eb4e675927b9c1ea5c0f676acfb0f708ce4f19827e321c1898bf86df9823d5f0b05df2b6779888eff8abbc7f41c6e7d2667386a579b8cbaad3f6fd597cd7c4b187911a425aed1b555c1965190203010001a37a3078300e0603551d0f0101ff040403020204301d0603551d250416301406082b0601050507030106082b06010505070302300f0603551d130101ff040530030101ff30190603551d0e04120410bf3db6a966f2b840cfeab40378481a41301b0603551d23041430128010bf3db6a966f2b840cfeab40378481a41300d06092a864886f70d01010b050003818100586e68c1219ed4f5782b7cfd53cf1a55750a98781b2023f8694bb831fff6d7d4aad1f0ac782b1ec787f00a8956bdd06b4a1063444fcafe955c07d679163a730802c568886a2cf8a3c2ab41176957131c4b9e077ebd7ffbb91fdad8b08b932e9aeefac04923ffdc0aa145563f7f061995317400203578f350e3e566deb29dec5e")$/;"	v
testRSAPrivateKey	./crypto/tls/handshake_server_test.go	/^var testRSAPrivateKey = &rsa.PrivateKey{$/;"	v
testRandomData	./compress/bzip2/bzip2_test.go	/^func testRandomData(t *testing.T, compressedHex, uncompressedHex string) {$/;"	f
testRange	./cmd/cover/testdata/test.go	/^func testRange() {$/;"	f
testRatBin	./cmd/compile/internal/big/rat_test.go	/^func testRatBin(t *testing.T, i int, name string, f ratBinFun, a ratBinArg) {$/;"	f
testRatBin	./math/big/rat_test.go	/^func testRatBin(t *testing.T, i int, name string, f ratBinFun, a ratBinArg) {$/;"	f
testRawToken	./encoding/xml/xml_test.go	/^func testRawToken(t *testing.T, d *Decoder, raw string, rawTokens []Token) {$/;"	f
testRead	./encoding/binary/binary_test.go	/^func testRead(t *testing.T, order ByteOrder, b []byte, s1 interface{}) {$/;"	f
testReadAtLeast	./io/io_test.go	/^func testReadAtLeast(t *testing.T, rb ReadWriter) {$/;"	f
testReadFile	./archive/zip/writer_test.go	/^func testReadFile(t *testing.T, f *File, wt *WriteTest) {$/;"	f
testReadLine	./bufio/bufio_test.go	/^func testReadLine(t *testing.T, input []byte) {$/;"	f
testReadLineNewlines	./bufio/bufio_test.go	/^func testReadLineNewlines(t *testing.T, input string, expect []readLineResult) {$/;"	f
testReaddir	./os/os_test.go	/^func testReaddir(dir string, contents []string, t *testing.T) {$/;"	f
testReaddirnames	./os/os_test.go	/^func testReaddirnames(dir string, contents []string, t *testing.T) {$/;"	f
testReader	./bufio/bufio_test.go	/^type testReader struct {$/;"	t
testReset	./time/sleep_test.go	/^func testReset(d Duration) error {$/;"	f
testResetOutput	./compress/flate/deflate_test.go	/^func testResetOutput(t *testing.T, newWriter func(w io.Writer) (*Writer, error)) {$/;"	f
testSET	./encoding/asn1/marshal_test.go	/^type testSET []int$/;"	t
testSNICertificate	./crypto/tls/handshake_server_test.go	/^var testSNICertificate = fromHex("308201f23082015da003020102020100300b06092a864886f70d01010530283110300e060355040a130741636d6520436f311430120603550403130b736e69746573742e636f6d301e170d3132303431313137343033355a170d3133303431313137343533355a30283110300e060355040a130741636d6520436f311430120603550403130b736e69746573742e636f6d30819d300b06092a864886f70d01010103818d0030818902818100bb79d6f517b5e5bf4610d0dc69bee62b07435ad0032d8a7a4385b71452e7a5654c2c78b8238cb5b482e5de1f953b7e62a52ca533d6fe125c7a56fcf506bffa587b263fb5cd04d3d0c921964ac7f4549f5abfef427100fe1899077f7e887d7df10439c4a22edb51c97ce3c04c3b326601cfafb11db8719a1ddbdb896baeda2d790203010001a3323030300e0603551d0f0101ff0404030200a0300d0603551d0e0406040401020304300f0603551d2304083006800401020304300b06092a864886f70d0101050381810089c6455f1c1f5ef8eb1ab174ee2439059f5c4259bb1a8d86cdb1d056f56a717da40e95ab90f59e8deaf627c157995094db0802266eb34fc6842dea8a4b68d9c1389103ab84fb9e1f85d9b5d23ff2312c8670fbb540148245a4ebafe264d90c8a4cf4f85b0fac12ac2fc4a3154bad52462868af96c62c6525d652b6e31845bdcc")$/;"	v
testSaveRestore	./index/suffixarray/suffixarray_test.go	/^func testSaveRestore(t *testing.T, tc *testCase, x *Index) int {$/;"	f
testScan	./fmt/scan_test.go	/^func testScan(name string, t *testing.T, scan func(r io.Reader, a ...interface{}) (int, error)) {$/;"	f
testScan	./text/scanner/scanner_test.go	/^func testScan(t *testing.T, mode uint) {$/;"	f
testScanInts	./fmt/scan_test.go	/^func testScanInts(t *testing.T, scan func(*RecursiveInt, *bytes.Buffer) error) {$/;"	f
testScanSelectedMode	./text/scanner/scanner_test.go	/^func testScanSelectedMode(t *testing.T, mode uint, class rune) {$/;"	f
testScanfMulti	./fmt/scan_test.go	/^func testScanfMulti(name string, t *testing.T) {$/;"	f
testSchedLocalQueue	./runtime/proc1.go	/^func testSchedLocalQueue() {$/;"	f
testSchedLocalQueueSteal	./runtime/proc1.go	/^func testSchedLocalQueueSteal() {$/;"	f
testSeeds	./math/rand/rand_test.go	/^var testSeeds = []int64{1, 1754801282, 1698661970, 1550503961}$/;"	v
testSelect1	./cmd/cover/testdata/test.go	/^func testSelect1() {$/;"	f
testSelect2	./cmd/cover/testdata/test.go	/^func testSelect2() {$/;"	f
testSendDeadlock	./net/rpc/server_test.go	/^func testSendDeadlock(client *Client) {$/;"	f
testSequence	./unicode/utf8/utf8_test.go	/^func testSequence(t *testing.T, s string) {$/;"	f
testServeRequest	./net/rpc/server_test.go	/^func testServeRequest(t *testing.T, server *Server) {$/;"	f
testServerNoHeader	./net/http/serve_test.go	/^func testServerNoHeader(t *testing.T, header string) {$/;"	f
testSetGetenv	./syscall/syscall_test.go	/^func testSetGetenv(t *testing.T, key, value string) {$/;"	f
testSetPanicOnFault	./runtime/runtime_test.go	/^func testSetPanicOnFault(t *testing.T, addr uintptr, nfault *int) {$/;"	f
testSignAndVerify	./crypto/dsa/dsa_test.go	/^func testSignAndVerify(t *testing.T, i int, priv *PrivateKey) {$/;"	f
testSignAndVerify	./crypto/ecdsa/ecdsa_test.go	/^func testSignAndVerify(t *testing.T, c elliptic.Curve, tag string) {$/;"	f
testSimple	./cmd/cover/testdata/test.go	/^func testSimple() {$/;"	f
testSlice	./encoding/gob/encoder_test.go	/^var testSlice []string$/;"	v
testSplitPreMasterSecretTest	./crypto/tls/prf_test.go	/^type testSplitPreMasterSecretTest struct {$/;"	t
testSplitPreMasterSecretTests	./crypto/tls/prf_test.go	/^var testSplitPreMasterSecretTests = []testSplitPreMasterSecretTest{$/;"	v
testStat	./internal/syscall/windows/registry/registry_test.go	/^func testStat(t *testing.T, k registry.Key) {$/;"	f
testStrictClose	./database/sql/fakedb_test.go	/^var testStrictClose *testing.T$/;"	v
testString	./encoding/gob/encoder_test.go	/^var testString string$/;"	v
testStringEncoding	./encoding/base32/base32_test.go	/^func testStringEncoding(t *testing.T, expected string, examples []string) {$/;"	f
testStringPairs	./cmd/go/match_test.go	/^func testStringPairs(t *testing.T, name string, tests []stringPairTest, f func(string, string) bool) {$/;"	f
testStrings	./unicode/utf8/utf8_test.go	/^var testStrings = []string{$/;"	v
testSubmatchBytes	./regexp/find_test.go	/^func testSubmatchBytes(test *FindTest, n int, submatches []int, result [][]byte, t *testing.T) {$/;"	f
testSubmatchIndices	./regexp/find_test.go	/^func testSubmatchIndices(test *FindTest, n int, expect, result []int, t *testing.T) {$/;"	f
testSubmatchString	./regexp/find_test.go	/^func testSubmatchString(test *FindTest, n int, submatches []int, result []string, t *testing.T) {$/;"	f
testSwitch	./cmd/cover/testdata/test.go	/^func testSwitch() {$/;"	f
testSync	./compress/flate/deflate_test.go	/^func testSync(t *testing.T, level int, input []byte, name string) {$/;"	f
testSyntaxError	./cmd/go/testflag.go	/^func testSyntaxError(msg string) {$/;"	f
testTCPConnectionCloses	./net/http/serve_test.go	/^func testTCPConnectionCloses(t *testing.T, req string, h Handler) {$/;"	f
testTestDir	./go/types/stdlib_test.go	/^func testTestDir(t *testing.T, path string, ignore ...string) {$/;"	f
testTime	./archive/zip/zip_test.go	/^	var testTime = time.Date(2009, time.November, 10, 23, 45, 58, 0, time.UTC)$/;"	v
testToFromWithLevelAndLimit	./compress/flate/deflate_test.go	/^func testToFromWithLevelAndLimit(t *testing.T, level int, input []byte, name string, limit int) {$/;"	f
testToFromWithLimit	./compress/flate/deflate_test.go	/^func testToFromWithLimit(t *testing.T, input []byte, name string, limit [10]int) {$/;"	f
testType	./reflect/all_test.go	/^func testType(t *testing.T, i int, typ Type, want string) {$/;"	f
testTypeSwitch	./cmd/cover/testdata/test.go	/^func testTypeSwitch() {$/;"	f
testTypeSwitch	./runtime/gc_test.go	/^func testTypeSwitch(x interface{}) error {$/;"	f
testTypedefs	./debug/dwarf/type_test.go	/^func testTypedefs(t *testing.T, d *Data, kind string) {$/;"	f
testUniformity	./net/dnsclient_test.go	/^func testUniformity(t *testing.T, size int, margin float64) {$/;"	f
testUnixAddr	./net/mockserver_test.go	/^func testUnixAddr() string {$/;"	f
testUnixgramWriteConn	./net/unix_test.go	/^func testUnixgramWriteConn(t *testing.T, raddr *UnixAddr) {$/;"	f
testUnixgramWritePacketConn	./net/unix_test.go	/^func testUnixgramWritePacketConn(t *testing.T, raddr *UnixAddr) {$/;"	f
testUvarint	./encoding/binary/varint_test.go	/^func testUvarint(t *testing.T, x uint64) {$/;"	f
testValidHeader	./archive/zip/zip_test.go	/^func testValidHeader(h *FileHeader, t *testing.T) {$/;"	f
testValues	./internal/syscall/windows/registry/registry_test.go	/^func testValues(t *testing.T, k registry.Key) {$/;"	f
testVarint	./encoding/binary/varint_test.go	/^func testVarint(t *testing.T, x int64) {$/;"	f
testVariousDeadlines	./net/timeout_test.go	/^func testVariousDeadlines(t *testing.T, maxProcs int) {$/;"	f
testVerify	./crypto/x509/verify_test.go	/^func testVerify(t *testing.T, useSystemRoots bool) {$/;"	f
testWaitGroup	./sync/waitgroup_test.go	/^func testWaitGroup(t *testing.T, wg1 *WaitGroup, wg2 *WaitGroup) {$/;"	f
testWeighting	./net/dnsclient_test.go	/^func testWeighting(t *testing.T, margin float64) {$/;"	f
testWinSplitListTestIsValid	./path/filepath/path_windows_test.go	/^func testWinSplitListTestIsValid(t *testing.T, ti int, tt SplitListTest,$/;"	f
testWindowsHostname	./os/os_test.go	/^func testWindowsHostname(t *testing.T) {$/;"	f
testWordBitLen	./cmd/compile/internal/big/arith_test.go	/^func testWordBitLen(t *testing.T, fname string, f func(Word) int) {$/;"	f
testWordBitLen	./math/big/arith_test.go	/^func testWordBitLen(t *testing.T, fname string, f func(Word) int) {$/;"	f
testWrite	./encoding/binary/binary_test.go	/^func testWrite(t *testing.T, order ByteOrder, b []byte, s1 interface{}) {$/;"	f
testWriteToConn	./net/udp_test.go	/^func testWriteToConn(t *testing.T, raddr string) {$/;"	f
testWriteToPacketConn	./net/udp_test.go	/^func testWriteToPacketConn(t *testing.T, raddr string) {$/;"	f
testWriter	./mime/quotedprintable/writer_test.go	/^func testWriter(t *testing.T, binary bool) {$/;"	f
testXed32	./cmd/internal/rsc.io/x86/x86asm/xedext_test.go	/^func testXed32(t *testing.T, generate func(func([]byte))) {$/;"	f
testXed64	./cmd/internal/rsc.io/x86/x86asm/xedext_test.go	/^func testXed64(t *testing.T, generate func(func([]byte))) {$/;"	f
testXedArch	./cmd/internal/rsc.io/x86/x86asm/xedext_test.go	/^func testXedArch(t *testing.T, arch int, generate func(func([]byte))) {$/;"	f
testYCbCr	./image/ycbcr_test.go	/^func testYCbCr(t *testing.T, r Rectangle, subsampleRatio YCbCrSubsampleRatio, delta Point) {$/;"	f
testYieldProgress	./runtime/proc_test.go	/^func testYieldProgress(t *testing.T, locked bool) {$/;"	f
testZeros	./compress/bzip2/bzip2_test.go	/^func testZeros(t *testing.T, inHex string, n int) {$/;"	f
testZip64	./archive/zip/zip_test.go	/^func testZip64(t testing.TB, size int64) *rleBuffer {$/;"	f
testZip64DirectoryRecordLength	./archive/zip/zip_test.go	/^func testZip64DirectoryRecordLength(buf *rleBuffer, t *testing.T) {$/;"	f
testZoneAbbr	./time/zoneinfo_windows_test.go	/^func testZoneAbbr(t *testing.T) {$/;"	f
test_z64	./runtime/runtime1.go	/^var test_z64, test_x64 uint64$/;"	v
testableAddress	./net/platform_test.go	/^func testableAddress(network, address string) bool {$/;"	f
testableListenArgs	./net/platform_test.go	/^func testableListenArgs(network, address, client string) bool {$/;"	f
testableNetwork	./net/platform_test.go	/^func testableNetwork(network string) bool {$/;"	f
testcmp	./runtime/softfloat64_test.go	/^func testcmp(t *testing.T, f, g float64) {$/;"	f
testdataCases	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func testdataCases(t *testing.T) func(func([]byte)) {$/;"	f
testdataCases	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func testdataCases(t *testing.T) func(func([]byte)) {$/;"	f
testdclstack	./cmd/compile/internal/gc/dcl.go	/^func testdclstack() {$/;"	f
testdefersizes	./runtime/panic.go	/^func testdefersizes() {$/;"	f
testedAlreadyLeaked	./os/exec/exec_test.go	/^var testedAlreadyLeaked = false$/;"	v
tester	./cmd/dist/test.go	/^type tester struct {$/;"	t
tester	./log/log_test.go	/^type tester struct {$/;"	t
testfile	./go/printer/performance_test.go	/^var testfile *ast.File$/;"	v
testfiles	./compress/bzip2/bzip2_test.go	/^var testfiles = []string{$/;"	v
testfiles	./compress/flate/reader_test.go	/^var testfiles = []string{$/;"	v
testgo	./cmd/go/go_test.go	/^func testgo(t *testing.T) *testgoData {$/;"	f
testgoData	./cmd/go/go_test.go	/^type testgoData struct {$/;"	t
testingAssertE2I2GC	./runtime/iface.go	/^var testingAssertE2I2GC bool$/;"	v
testingAssertE2T2GC	./runtime/iface.go	/^var testingAssertE2T2GC bool$/;"	v
testingData	./sort/sort_test.go	/^type testingData struct {$/;"	t
testingWER	./runtime/signal_windows.go	/^var testingWER bool$/;"	v
testmainTmpl	./cmd/go/test.go	/^var testmainTmpl = template.Must(template.New("main").Parse(`$/;"	v
testpair	./encoding/ascii85/ascii85_test.go	/^type testpair struct {$/;"	t
testpair	./encoding/base32/base32_test.go	/^type testpair struct {$/;"	t
testpair	./encoding/base64/base64_test.go	/^type testpair struct {$/;"	t
testprint	./go/printer/performance_test.go	/^func testprint(out io.Writer, file *ast.File) {$/;"	f
tests	./archive/zip/reader_test.go	/^var tests = []ZipTest{$/;"	v
tests	./cmd/compile/internal/big/ratconv_test.go	/^	var tests []StringTest$/;"	v
tests	./cmd/doc/doc_test.go	/^var tests = []test{$/;"	v
tests	./cmd/go/test.go	/^var tests = []testing.InternalTest{$/;"	v
tests	./cmd/pack/pack_test.go	/^	var tests = []string{$/;"	v
tests	./crypto/tls/handshake_messages_test.go	/^var tests = []interface{}{$/;"	v
tests	./database/sql/convert_test.go	/^	var tests = []struct {$/;"	v
tests	./encoding/binary/varint_test.go	/^var tests = []int64{$/;"	v
tests	./fmt/fmt_test.go	/^	var tests = []struct {$/;"	v
tests	./fmt/scan_test.go	/^	var tests = []struct {$/;"	v
tests	./go/ast/print_test.go	/^var tests = []struct {$/;"	v
tests	./go/doc/synopsis_test.go	/^var tests = []struct {$/;"	v
tests	./go/format/format_test.go	/^var tests = []string{$/;"	v
tests	./go/token/position_test.go	/^var tests = []struct {$/;"	v
tests	./go/types/api_test.go	/^	var tests = []struct {$/;"	v
tests	./go/types/check_test.go	/^var tests = [][]string{$/;"	v
tests	./go/types/eval_test.go	/^	var tests = []string{$/;"	v
tests	./go/types/typestring_test.go	/^	var tests []testEntry$/;"	v
tests	./internal/syscall/windows/registry/registry_test.go	/^	var tests = []struct {$/;"	v
tests	./log/log_test.go	/^var tests = []tester{$/;"	v
tests	./math/big/ratconv_test.go	/^	var tests []StringTest$/;"	v
tests	./mime/type_test.go	/^	\/\/ type tests. On Unix and Plan 9, this also tests the parsing$/;"	t
tests	./os/os_test.go	/^	var tests = []test{$/;"	v
tests	./path/filepath/path_test.go	/^	var tests []EvalSymlinksTest$/;"	v
tests	./path/filepath/path_test.go	/^	var tests []IsAbsTest$/;"	v
tests	./runtime/race/output_test.go	/^var tests = []struct {$/;"	v
tests	./sort/search_test.go	/^var tests = []struct {$/;"	v
tests	./sync/atomic/atomic_test.go	/^	var tests []func(*testing.T, unsafe.Pointer)$/;"	v
tests	./text/tabwriter/tabwriter_test.go	/^var tests = []struct {$/;"	v
tests	./time/zoneinfo_test.go	/^	var tests = []struct {$/;"	v
testu	./runtime/softfloat64_test.go	/^func testu(t *testing.T, op string, hw, sw func(float64) float64, v float64) {$/;"	f
text	./cmd/internal/obj/objfile.go	/^	var text *LSym$/;"	v
text	./cmd/internal/objfile/disasm.go	/^	var text string$/;"	v
text	./cmd/internal/objfile/elf.go	/^func (f *elfFile) text() (textStart uint64, text []byte, err error) {$/;"	f
text	./cmd/internal/objfile/goobj.go	/^func (f *goobjFile) text() (textStart uint64, text []byte, err error) {$/;"	f
text	./cmd/internal/objfile/macho.go	/^func (f *machoFile) text() (textStart uint64, text []byte, err error) {$/;"	f
text	./cmd/internal/objfile/pe.go	/^func (f *peFile) text() (textStart uint64, text []byte, err error) {$/;"	f
text	./cmd/internal/objfile/plan9obj.go	/^func (f *plan9File) text() (textStart uint64, text []byte, err error) {$/;"	f
text	./encoding/xml/xml.go	/^			var text string$/;"	v
text	./encoding/xml/xml.go	/^func (d *Decoder) text(quote int, cdata bool) []byte {$/;"	f
text	./regexp/exec_test.go	/^			var text string$/;"	v
text	./regexp/exec_test.go	/^var text []byte$/;"	v
text	./runtime/hash_test.go	/^func text(t *testing.T, prefix, suffix string) {$/;"	f
textFormat	./text/template/parse/node.go	/^var textFormat = "%s" \/\/ Changed to "%q" in tests for better error messages.$/;"	v
textMarshalerEncoder	./encoding/json/encode.go	/^func textMarshalerEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
textOrAction	./text/template/parse/parse.go	/^func (t *Tree) textOrAction() Node {$/;"	f
textReader	./cmd/internal/objfile/disasm.go	/^type textReader struct {$/;"	t
textSig	./net/http/sniff.go	/^type textSig int$/;"	t
textaddress	./cmd/link/internal/ld/data.go	/^func textaddress() {$/;"	f
textangle	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^	var textangle = []byte("<.text>:")$/;"	v
textangle	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^	var textangle = []byte("<.text>:")$/;"	v
textbuildid	./cmd/link/internal/ld/data.go	/^func textbuildid() {$/;"	f
textprotoReaderPool	./net/http/request.go	/^var textprotoReaderPool sync.Pool$/;"	v
texts	./bufio/bufio_test.go	/^	var texts [31]string$/;"	v
textsect	./cmd/link/internal/ld/pe.go	/^var textsect int$/;"	v
tfork	./runtime/os_openbsd.go	/^func tfork(param *tforkt, psize uintptr, mm *m, gg *g, fn uintptr) int32$/;"	f
tforkt	./runtime/defs_openbsd_386.go	/^type tforkt struct {$/;"	t
tforkt	./runtime/defs_openbsd_amd64.go	/^type tforkt struct {$/;"	t
tforkt	./runtime/defs_openbsd_arm.go	/^type tforkt struct {$/;"	t
thandle	./runtime/os1_windows.go	/^	var thandle uintptr$/;"	v
that	./builtin/builtin.go	/^\/\/ int is a signed integer type that is at least 32 bits in size. It is a$/;"	t
that	./builtin/builtin.go	/^\/\/ uint is an unsigned integer type that is at least 32 bits in size. It is a$/;"	t
that	./builtin/builtin.go	/^\/\/ uintptr is an integer type that is large enough to hold the bit pattern of$/;"	t
that	./cmd/compile/internal/gc/reflect.go	/^	\/\/ dalgsym is only called for a type that needs an algorithm table,$/;"	t
that	./cmd/compile/internal/gc/subr.go	/^ * of the type that completely describes it.$/;"	t
that	./cmd/fix/typecheck.go	/^\/\/ to values of another type that were assigned to that type.$/;"	t
that	./cmd/vet/print.go	/^\/\/ TODO: A type that implements Formatter may do what it wants, and vet$/;"	t
that	./container/heap/heap.go	/^\/\/ Any type that implements heap.Interface may be used as a$/;"	t
that	./container/heap/heap.go	/^\/\/ Package heap provides heap operations for any type that implements$/;"	t
that	./database/sql/driver/types.go	/^\/\/ NotNull is a type that implements ValueConverter by disallowing nil$/;"	t
that	./database/sql/driver/types.go	/^\/\/ Null is a type that implements ValueConverter by allowing nil$/;"	t
that	./debug/dwarf/type.go	/^\/\/ A QualType represents a type that has the C\/C++ "const", "restrict", or "volatile" qualifier.$/;"	t
that	./encoding/gob/codec_test.go	/^\/\/ A type that won't be defined in the gob until we send it in an interface value.$/;"	t
that	./encoding/gob/decode.go	/^\/\/ gobDecodeOpFor returns the op for a type that is known to implement$/;"	t
that	./encoding/gob/doc.go	/^convert between gobs and actual Go values.  For instance, a gob type that is$/;"	t
that	./encoding/gob/encode.go	/^\/\/ gobEncodeOpFor returns the op for a type that is known to implement GobEncoder.$/;"	t
that	./encoding/gob/example_interface_test.go	/^\/\/ distinction from regular types is to register the concrete type that$/;"	t
that	./encoding/gob/type.go	/^	\/\/ A type that is just a cycle of pointers (such as type T *T) cannot$/;"	t
that	./encoding/gob/type.go	/^\/\/ A type that implements GobEncoder and GobDecoder has complete$/;"	t
that	./encoding/json/decode_test.go	/^\/\/ A type that can unmarshal itself.$/;"	t
that	./fmt/fmt_test.go	/^\/\/ Panic is a type that panics in String.$/;"	t
that	./fmt/fmt_test.go	/^\/\/ PanicF is a type that panics in Format.$/;"	t
that	./fmt/scan_test.go	/^\/\/ type that creates something that can read runes given only Read().$/;"	t
that	./go/doc/testdata/blank.go	/^\/\/ Constants with an imported type that needs to be propagated.$/;"	t
that	./go/types/expr.go	/^				\/\/ Unsafe.Pointer is a basic type that includes nil.$/;"	t
that	./log/syslog/syslog.go	/^\/\/ return a type that satisfies this interface and simply calls the C$/;"	t
that	./net/sock_posix.go	/^	\/\/ sockaddr type that implements syscall.Sockaddr$/;"	t
that	./reflect/type.go	/^\/\/ A Kind represents the specific kind of type that a Type represents.$/;"	t
that	./runtime/heapdump.go	/^\/\/ Eface entries.  So it needs to know every type that might$/;"	t
that	./runtime/panic.go	/^	\/\/ a deferred func that stops a panic$/;"	f
the	./encoding/gob/encoder_test.go	/^\/\/ Test that we recognize a bad type the first time.$/;"	t
the	./encoding/gob/type.go	/^	user        reflect.Type \/\/ the type the user handed us$/;"	t
the	./encoding/gob/type.go	/^\/\/ userTypeInfo stores the information associated with a type the user has handed$/;"	t
the	./go/types/decl.go	/^	\/\/ and which has as its underlying type the named type B.$/;"	t
theHuffmanLUT	./image/jpeg/writer.go	/^var theHuffmanLUT [4]huffmanLUT$/;"	v
theHuffmanSpec	./image/jpeg/writer.go	/^var theHuffmanSpec = [nHuffIndex]huffmanSpec{$/;"	v
thechar	./cmd/compile/internal/arm/galign.go	/^var thechar int = '5'$/;"	v
thechar	./cmd/compile/internal/arm64/galign.go	/^var thechar int = '7'$/;"	v
thechar	./cmd/compile/internal/ppc64/galign.go	/^var thechar int = '9'$/;"	v
thechar	./cmd/compile/internal/x86/galign.go	/^var thechar int = '8'$/;"	v
thelinkarch	./cmd/compile/internal/arm/galign.go	/^var thelinkarch *obj.LinkArch = &arm.Linkarm$/;"	v
thelinkarch	./cmd/compile/internal/arm64/galign.go	/^var thelinkarch *obj.LinkArch = &arm64.Linkarm64$/;"	v
thelinkarch	./cmd/compile/internal/ppc64/galign.go	/^var thelinkarch *obj.LinkArch$/;"	v
thelinkarch	./cmd/compile/internal/x86/galign.go	/^var thelinkarch *obj.LinkArch = &x86.Link386$/;"	v
theparser	./cmd/compile/internal/gc/lex.go	/^var theparser yyParser$/;"	v
there	./encoding/gob/decoder.go	/^		\/\/ When decoding an interface, after a type there may be a$/;"	t
thestring	./cmd/compile/internal/arm/galign.go	/^var thestring string = "arm"$/;"	v
thestring	./cmd/compile/internal/arm64/galign.go	/^var thestring string = "arm64"$/;"	v
thestring	./cmd/compile/internal/ppc64/galign.go	/^var thestring string = "ppc64"$/;"	v
thestring	./cmd/compile/internal/x86/galign.go	/^var thestring string = "386"$/;"	v
they	./cmd/link/internal/ld/symtab.go	/^	\/\/ within a type they sort by size, so the .* symbols$/;"	t
thi	./cmd/compile/internal/arm/gsubr.go	/^		var thi gc.Node$/;"	v
thi	./cmd/compile/internal/x86/gsubr.go	/^		var thi gc.Node$/;"	v
this	./cmd/compile/internal/gc/reflect.go	/^	var this *Type$/;"	v
this	./runtime/signal_amd64x.go	/^		\/\/ as I type this comment.$/;"	t
thr_new	./runtime/os_freebsd.go	/^func thr_new(param *thrparam, size int32)$/;"	f
thr_start	./runtime/os1_freebsd.go	/^func thr_start()$/;"	f
thread	./regexp/exec.go	/^type thread struct {$/;"	t
threadLimit	./net/net.go	/^var threadLimit = make(chan struct{}, 500)$/;"	v
thread_args	./runtime/cgo/gcc_openbsd_386.c	/^struct thread_args {$/;"	s	file:
thread_args	./runtime/cgo/gcc_openbsd_amd64.c	/^struct thread_args {$/;"	s	file:
thread_start_wrapper	./runtime/cgo/gcc_openbsd_386.c	/^thread_start_wrapper(void *arg)$/;"	f	file:
thread_start_wrapper	./runtime/cgo/gcc_openbsd_amd64.c	/^thread_start_wrapper(void *arg)$/;"	f	file:
threadcreateProfile	./runtime/pprof/pprof.go	/^var threadcreateProfile = &Profile{$/;"	v
threadentry	./runtime/cgo/gcc_darwin_386.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_darwin_amd64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_darwin_arm.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_darwin_arm64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_dragonfly_amd64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_freebsd_386.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_freebsd_amd64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_freebsd_arm.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_linux_386.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_linux_amd64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_linux_arm.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_linux_arm64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_linux_ppc64x.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_netbsd_386.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_netbsd_amd64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_netbsd_arm.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_openbsd_386.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_openbsd_amd64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_solaris_amd64.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_windows_386.c	/^threadentry(void *v)$/;"	f	file:
threadentry	./runtime/cgo/gcc_windows_amd64.c	/^threadentry(void *v)$/;"	f	file:
throw	./runtime/panic.go	/^func throw(s string) {$/;"	f
throwinit	./cmd/compile/internal/gc/builtin/runtime.go	/^func throwinit()$/;"	f
throwinit	./runtime/panic.go	/^func throwinit() {$/;"	f
throwreturn	./cmd/compile/internal/gc/builtin/runtime.go	/^func throwreturn()$/;"	f
throwreturn	./cmd/compile/internal/gc/go.go	/^var throwreturn *Node$/;"	v
throwreturn	./runtime/panic.go	/^func throwreturn() {$/;"	f
thrparam	./runtime/defs_freebsd_386.go	/^type thrparam struct {$/;"	t
thrparam	./runtime/defs_freebsd_amd64.go	/^type thrparam struct {$/;"	t
thrparam	./runtime/defs_freebsd_arm.go	/^type thrparam struct {$/;"	t
thrsleep	./runtime/os_openbsd.go	/^func thrsleep(ident uintptr, clock_id int32, tsp *timespec, lock uintptr, abort *uint32) int32$/;"	f
thrwakeup	./runtime/os_openbsd.go	/^func thrwakeup(ident uintptr, n int32) int32$/;"	f
thunk	./cmd/compile/internal/gc/go.go	/^var thunk int32$/;"	v
ticketKey	./crypto/tls/common.go	/^type ticketKey struct {$/;"	t
ticketKeyFromBytes	./crypto/tls/common.go	/^func ticketKeyFromBytes(b [32]byte) (key ticketKey) {$/;"	f
ticketKeys	./crypto/tls/common.go	/^func (c *Config) ticketKeys() []ticketKey {$/;"	f
ticks	./runtime/runtime.go	/^var ticks struct {$/;"	v
ticksPerSec	./internal/trace/parser.go	/^	var ticksPerSec, lastSeq, lastTs int64$/;"	v
tickspersecond	./runtime/runtime.go	/^func tickspersecond() int64 {$/;"	f
time	./cmd/trace/trace.go	/^func (ctx *traceContext) time(ev *trace.Event) float64 {$/;"	f
time	./crypto/tls/common.go	/^func (c *Config) time() time.Time {$/;"	f
time	./encoding/asn1/asn1.go	/^		var time time.Time$/;"	v
time	./encoding/asn1/asn1.go	/^	\/\/ Go type time.Time.$/;"	t
time	./time/time.go	/^\/\/ type time.Time, not *time.Time.  A Time value can be used by$/;"	t
timeFormats	./net/http/header.go	/^var timeFormats = []string{$/;"	v
timeLabel	./cmd/pprof/internal/report/report.go	/^func timeLabel(value int64, fromUnit, toUnit string) (v float64, u string, ok bool) {$/;"	f
timeSleep	./runtime/time.go	/^func timeSleep(ns int64) {$/;"	f
timeTest	./encoding/asn1/asn1_test.go	/^type timeTest struct {$/;"	t
timeToMsDosTime	./archive/zip/struct.go	/^func timeToMsDosTime(t time.Time) (fDate uint16, fTime uint16) {$/;"	f
timeValue	./database/sql/convert_test.go	/^func timeValue(ptr interface{}) time.Time {$/;"	f
time_now	./runtime/stubs.go	/^func time_now() (sec int64, nsec int32)$/;"	f
time_runtimeNano	./runtime/time.go	/^func time_runtimeNano() int64 {$/;"	f
timediv	./runtime/runtime1.go	/^func timediv(v int64, div int32, rem *int32) int32 {$/;"	f
timejump	./runtime/time.go	/^func timejump() *g {$/;"	f
timeloop	./runtime/sys_darwin_386.s	/^timeloop:$/;"	l
timeloop	./runtime/sys_darwin_amd64.s	/^timeloop:$/;"	l
timeout	./cmd/dist/test.go	/^func (t *tester) timeout(sec int) string {$/;"	f
timeout	./net/dial_test.go	/^	var timeout = 100*time.Millisecond + closedPortDelay$/;"	v
timeout	./net/net.go	/^type timeout interface {$/;"	t
timeout	./runtime/os1_dragonfly.go	/^	var timeout int32$/;"	v
timeoutError	./crypto/tls/tls.go	/^type timeoutError struct{}$/;"	t
timeoutError	./net/net.go	/^type timeoutError struct{}$/;"	t
timeoutHandler	./net/http/server.go	/^type timeoutHandler struct {$/;"	t
timeoutPacketReceiver	./net/mockserver_test.go	/^func timeoutPacketReceiver(c PacketConn, d, min, max time.Duration, ch chan<- error) {$/;"	f
timeoutReader	./testing/iotest/reader.go	/^type timeoutReader struct {$/;"	t
timeoutReceiver	./net/mockserver_test.go	/^func timeoutReceiver(c Conn, d, min, max time.Duration, ch chan<- error) {$/;"	f
timeoutTransmitter	./net/mockserver_test.go	/^func timeoutTransmitter(c Conn, d, min, max time.Duration, ch chan<- error) {$/;"	f
timeoutWriter	./net/http/server.go	/^type timeoutWriter struct {$/;"	t
timer	./go/doc/testdata/testing.go	/^var timer *time.Timer$/;"	v
timer	./net/http/client.go	/^	var timer *time.Timer$/;"	v
timer	./net/http/transport.go	/^		var timer *time.Timer \/\/ for canceling TLS handshake$/;"	v
timer	./runtime/time.go	/^type timer struct {$/;"	t
timer	./syscall/net_nacl.go	/^type timer struct {$/;"	t
timer	./testing/testing.go	/^var timer *time.Timer$/;"	v
timer	./time/sleep_test.go	/^	var timer *Timer$/;"	v
timerExpired	./syscall/net_nacl.go	/^func timerExpired(i interface{}, seq uintptr) {$/;"	f
timerproc	./runtime/time.go	/^func timerproc() {$/;"	f
timers	./runtime/time.go	/^var timers struct {$/;"	v
times	./time/sleep_test.go	/^	var times []Time$/;"	v
timespec	./runtime/defs1_netbsd_386.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs1_netbsd_amd64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs1_netbsd_arm.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs1_solaris_amd64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_darwin_386.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_darwin_amd64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_darwin_arm.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_darwin_arm64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_dragonfly_amd64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_freebsd_386.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_freebsd_amd64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_freebsd_arm.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_linux_386.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_linux_amd64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_linux_arm.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_linux_arm64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_linux_ppc64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_linux_ppc64le.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_nacl_386.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_nacl_amd64p32.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_nacl_arm.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_openbsd_386.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_openbsd_amd64.go	/^type timespec struct {$/;"	t
timespec	./runtime/defs_openbsd_arm.go	/^type timespec struct {$/;"	t
timespecToTime	./os/stat_darwin.go	/^func timespecToTime(ts syscall.Timespec) time.Time {$/;"	f
timespecToTime	./os/stat_dragonfly.go	/^func timespecToTime(ts syscall.Timespec) time.Time {$/;"	f
timespecToTime	./os/stat_freebsd.go	/^func timespecToTime(ts syscall.Timespec) time.Time {$/;"	f
timespecToTime	./os/stat_linux.go	/^func timespecToTime(ts syscall.Timespec) time.Time {$/;"	f
timespecToTime	./os/stat_nacl.go	/^func timespecToTime(sec, nsec int64) time.Time {$/;"	f
timespecToTime	./os/stat_netbsd.go	/^func timespecToTime(ts syscall.Timespec) time.Time {$/;"	f
timespecToTime	./os/stat_openbsd.go	/^func timespecToTime(ts syscall.Timespec) time.Time {$/;"	f
timespecToTime	./os/stat_solaris.go	/^func timespecToTime(ts syscall.Timespec) time.Time {$/;"	f
timeval	./runtime/defs1_netbsd_386.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs1_netbsd_amd64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs1_netbsd_arm.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs1_solaris_amd64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_darwin_386.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_darwin_amd64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_darwin_arm.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_darwin_arm64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_dragonfly_amd64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_freebsd_386.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_freebsd_amd64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_freebsd_arm.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_linux_386.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_linux_amd64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_linux_arm.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_linux_arm64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_linux_ppc64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_linux_ppc64le.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_openbsd_386.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_openbsd_amd64.go	/^type timeval struct {$/;"	t
timeval	./runtime/defs_openbsd_arm.go	/^type timeval struct {$/;"	t
tinfoLock	./encoding/xml/typeinfo.go	/^var tinfoLock sync.RWMutex$/;"	v
tinfoMap	./encoding/xml/typeinfo.go	/^var tinfoMap = make(map[reflect.Type]*typeInfo)$/;"	v
tinlvar	./cmd/compile/internal/gc/inl.go	/^func tinlvar(t *Type) *Node {$/;"	f
tinter	./reflect/all_test.go	/^type tinter interface {$/;"	t
tinterType	./reflect/all_test.go	/^	var tinterType = TypeOf(new(tinter)).Elem()$/;"	v
tinySink	./runtime/race/testdata/mop_test.go	/^	var tinySink *byte$/;"	v
tk	./encoding/json/stream_test.go	/^			var tk interface{}$/;"	v
tkid	./debug/dwarf/type.go	/^			var tkid Type$/;"	v
tl	./cmd/compile/internal/arm64/ggen.go	/^	var tl gc.Node$/;"	v
tl	./cmd/compile/internal/gc/order.go	/^	var tl Iter$/;"	v
tl	./cmd/compile/internal/ppc64/ggen.go	/^	var tl gc.Node$/;"	v
tlfree	./cmd/compile/internal/gc/align.go	/^var tlfree *TypeList$/;"	v
tlo	./cmd/compile/internal/arm/gsubr.go	/^		var tlo gc.Node$/;"	v
tlo	./cmd/compile/internal/x86/gsubr.go	/^		var tlo gc.Node$/;"	v
tlq	./cmd/compile/internal/gc/align.go	/^var tlq *TypeList$/;"	v
tls	./runtime/cgo/libcgo.h	/^	uintptr *tls;$/;"	m	struct:ThreadStart
tls0	./runtime/runtime.go	/^var tls0 [8]uintptr \/\/ available storage for m0's TLS; not necessarily used; opaque to GC$/;"	v
tls10MAC	./crypto/tls/cipher_suites.go	/^type tls10MAC struct {$/;"	t
tlsHandshakeTimeoutError	./net/http/transport.go	/^type tlsHandshakeTimeoutError struct{}$/;"	t
tlsHost	./net/http/transport.go	/^func (cm *connectMethod) tlsHost() string {$/;"	f
tm	./cmd/compile/internal/arm64/ggen.go	/^		var tm gc.Node$/;"	v
tm	./cmd/compile/internal/gc/subr.go	/^		var tm *Type$/;"	v
tm	./cmd/compile/internal/gc/subr.go	/^	var tm *Type$/;"	v
tm	./cmd/compile/internal/ppc64/ggen.go	/^		var tm gc.Node$/;"	v
tmach_semcreatemsg	./runtime/os1_darwin.go	/^type tmach_semcreatemsg struct {$/;"	t
tmach_semdestroymsg	./runtime/os1_darwin.go	/^type tmach_semdestroymsg struct {$/;"	t
tmp	./cmd/compile/internal/arm/cgen.go	/^		var tmp gc.Node$/;"	v
tmp	./cmd/compile/internal/arm/cgen.go	/^	var tmp gc.Node$/;"	v
tmp	./cmd/compile/internal/arm64/cgen.go	/^	var tmp gc.Node$/;"	v
tmp	./cmd/compile/internal/big/int_test.go	/^	var tmp Int$/;"	v
tmp	./cmd/compile/internal/gc/cgen.go	/^					var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/cgen.go	/^				var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/cgen.go	/^			var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/cgen.go	/^		var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/cplx.go	/^			var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/cplx.go	/^	var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/dcl.go	/^		var tmp string$/;"	v
tmp	./cmd/compile/internal/gc/gen.go	/^		var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/gen.go	/^	var tmp Node$/;"	v
tmp	./cmd/compile/internal/gc/order.go	/^	var tmp *Node$/;"	v
tmp	./cmd/compile/internal/gc/walk.go	/^	var tmp *Node$/;"	v
tmp	./cmd/compile/internal/ppc64/cgen.go	/^	var tmp gc.Node$/;"	v
tmp	./cmd/compile/internal/x86/cgen.go	/^	var tmp gc.Node$/;"	v
tmp	./cmd/link/internal/ld/ldmacho.go	/^		var tmp [4]uint8$/;"	v
tmp	./cmd/pprof/internal/profile/legacy_profile.go	/^		var tmp []byte$/;"	v
tmp	./crypto/elliptic/p224.go	/^	var tmp p224LargeFieldElement$/;"	v
tmp	./crypto/elliptic/p256.go	/^	var tmp [17]uint64$/;"	v
tmp	./crypto/md5/md5.go	/^	var tmp [64]byte$/;"	v
tmp	./crypto/sha1/sha1.go	/^	var tmp [64]byte$/;"	v
tmp	./crypto/sha256/sha256.go	/^	var tmp [64]byte$/;"	v
tmp	./crypto/sha512/sha512.go	/^	var tmp [128]byte$/;"	v
tmp	./math/big/int_test.go	/^	var tmp Int$/;"	v
tmp	./runtime/os1_plan9.go	/^		var tmp [32]byte$/;"	v
tmp	./runtime/os1_plan9.go	/^	var tmp [32]byte$/;"	v
tmp	./runtime/trace.go	/^	var tmp [(2 + traceStackSize) * traceBytesPerNumber]byte$/;"	v
tmp	./runtime/trace/trace_test.go	/^			var tmp [1]byte$/;"	v
tmp	./runtime/trace/trace_test.go	/^		var tmp [1]byte$/;"	v
tmp	./runtime/trace/trace_test.go	/^	var tmp [1]byte$/;"	v
tmp1	./cmd/compile/internal/gc/order.go	/^		var tmp1 *Node$/;"	v
tmp1	./sort/sort_test.go	/^	var tmp1, tmp2 [1025]int$/;"	v
tmp2	./cmd/compile/internal/gc/cgen.go	/^					var tmp2 Node$/;"	v
tmp2	./cmd/compile/internal/gc/order.go	/^		var tmp2 *Node$/;"	v
tmp2	./crypto/elliptic/p256.go	/^	var tmp2 [18]uint32$/;"	v
tmpBuf	./runtime/string.go	/^type tmpBuf [tmpStringBufSize]byte$/;"	t
tmpDir	./cmd/pack/pack_test.go	/^func tmpDir(t *testing.T) string {$/;"	f
tmpPad	./crypto/hmac/hmac.go	/^func (h *hmac) tmpPad(xor byte) {$/;"	f
tmpVar	./syscall/mksyscall_windows.go	/^func (p *Param) tmpVar() string {$/;"	f
tmpbuf	./runtime/heapdump.go	/^var tmpbuf []byte$/;"	v
tmpi	./cmd/compile/internal/gc/cgen.go	/^		var tmpi Node$/;"	v
tmpl	./cmd/go/main.go	/^func tmpl(w io.Writer, text string, data interface{}) {$/;"	f
tmpl	./html/template/template.go	/^		var tmpl *Template$/;"	v
tmpl	./text/template/exec.go	/^	var tmpl *Template$/;"	v
tmpl	./text/template/exec_test.go	/^		var tmpl *Template$/;"	v
tmpl	./text/template/helper.go	/^		var tmpl *Template$/;"	v
tmpl	./text/template/multi_test.go	/^	var tmpl *Template$/;"	v
tnil	./reflect/all_test.go	/^	var tnil Tinter$/;"	v
tnl	./cmd/compile/internal/gc/cplx.go	/^	var tnl Node$/;"	v
tnr	./cmd/compile/internal/gc/cplx.go	/^			var tnr Node$/;"	v
to	./cmd/cgo/out.go	/^\/\/ Map an ast type to a Type.$/;"	t
to	./cmd/compile/internal/arm/peep.go	/^	\/\/ TODO(rsc): Change v->type to v->name and enable.$/;"	t
to	./cmd/compile/internal/gc/align.go	/^		\/\/ make fake type to check later to$/;"	t
to	./cmd/compile/internal/gc/dcl.go	/^		\/\/ can cache result from findtype to avoid$/;"	t
to	./cmd/compile/internal/gc/inl.go	/^		\/\/ append receiver inlvar to LHS.$/;"	v
to	./cmd/compile/internal/gc/plive.go	/^	var to Node$/;"	v
to	./cmd/compile/internal/gc/subr.go	/^ * return type to hang methods off (r).$/;"	t
to	./cmd/fix/typecheck.go	/^		\/\/ propagate the type to all the uses.$/;"	t
to	./cmd/internal/obj/pcln.go	/^\/\/ funcpctab writes to dst a pc-value table mapping the code in func to the values$/;"	f
to	./cmd/link/internal/ld/dwarf.go	/^		\/\/ Construct type to represent an array of BucketSize keys$/;"	t
to	./cmd/link/internal/ld/dwarf.go	/^		\/\/ Construct type to represent an array of BucketSize values$/;"	t
to	./cmd/link/internal/ld/dwarf.go	/^\/\/ field and set its DW_AT_type to dwtype$/;"	t
to	./cmd/link/internal/ld/pcln.go	/^\/\/ funcpctab writes to dst a pc-value table mapping the code in func to the values$/;"	f
to	./cmd/pprof/internal/report/report.go	/^\/\/ objSymbols is a wrapper type to enable sorting of []*objSymbol.$/;"	t
to	./database/sql/driver/driver.go	/^\/\/ any type to a driver Value.$/;"	t
to	./encoding/asn1/asn1.go	/^	\/\/ wire, we change the universal type to match.$/;"	t
to	./encoding/asn1/asn1.go	/^\/\/	set		causes a SET, rather than a SEQUENCE type to be expected$/;"	t
to	./encoding/json/encode.go	/^	\/\/ real func (f) to be ready and then calls it.  This indirect$/;"	f
to	./encoding/json/scanner.go	/^	\/\/ The step is a func to be called to execute the next transition.$/;"	f
to	./encoding/xml/read.go	/^\/\/ receiverType returns the receiver type to use in an expression like "%s.MethodName".$/;"	t
to	./go/types/lookup.go	/^\/\/      but there was no pointer on the path from the actual receiver type to$/;"	t
to	./mime/type.go	/^	\/\/ extensions maps from MIME type to list of lowercase file$/;"	t
to	./net/http/transport.go	/^	\/\/ mutateHeaderFunc is an optional func to modify extra$/;"	f
to	./net/iprawsock_posix.go	/^	\/\/ type to avoid the header trim\/copy$/;"	t
to	./reflect/type.go	/^\/\/ toType converts from a *rtype to a Type that can be returned$/;"	t
to	./runtime/sys_x86.go	/^		\/\/ runtime·findfunc to find the function.  But if we$/;"	f
to	./unicode/letter.go	/^func to(_case int, r rune, caseRange []CaseRange) rune {$/;"	f
to16	./strconv/makeisprint.go	/^func to16(x []uint32) []uint16 {$/;"	f
to32sw	./runtime/softfloat64_test.go	/^func to32sw(f float64) float64 {$/;"	f
to64sw	./runtime/softfloat64_test.go	/^func to64sw(f float64) float64 {$/;"	f
toASCII	./archive/tar/common.go	/^func toASCII(s string) string {$/;"	f
toASCII	./net/http/cookiejar/punycode.go	/^func toASCII(s string) (string, error) {$/;"	f
toBinary	./cmd/compile/internal/big/float_test.go	/^func toBinary(x int64) string {$/;"	f
toBinary	./math/big/float_test.go	/^func toBinary(x int64) string {$/;"	f
toChar	./encoding/hex/hex.go	/^func toChar(b byte) byte {$/;"	f
toEnglishName	./time/zoneinfo_windows.go	/^func toEnglishName(stdname, dstname string) (string, error) {$/;"	f
toErrno	./net/net_windows_test.go	/^func toErrno(err error) (syscall.Errno, bool) {$/;"	f
toFold	./cmd/go/main.go	/^func toFold(s string) string {$/;"	f
toFromBigTests	./crypto/elliptic/p224_test.go	/^var toFromBigTests = []string{$/;"	v
toHTTPError	./net/http/fs.go	/^func toHTTPError(err error) (msg string, httpStatus int) {$/;"	f
toInt	./cmd/cover/profile.go	/^func toInt(s string) int {$/;"	f
toInt	./encoding/gob/decoder.go	/^func toInt(x uint64) int64 {$/;"	f
toInterfaces	./testing/quick/quick.go	/^func toInterfaces(values []reflect.Value) []interface{} {$/;"	f
toJSON	./net/http/cookie_test.go	/^func toJSON(v interface{}) string {$/;"	f
toJson	./net/lookup_windows_test.go	/^func toJson(v interface{}) string {$/;"	f
toLong	./path/filepath/symlink_windows.go	/^func toLong(path string) (string, error) {$/;"	f
toLower	./net/lookup_plan9.go	/^func toLower(in string) string {$/;"	f
toLowerCaseASCII	./crypto/x509/verify.go	/^func toLowerCaseASCII(in string) string {$/;"	f
toMyNode	./runtime/lfstack_test.go	/^func toMyNode(node *LFNode) *MyNode {$/;"	f
toOutputDir	./testing/testing.go	/^func toOutputDir(path string) string {$/;"	f
toRoutingMessage	./syscall/route_darwin.go	/^func (any *anyMessage) toRoutingMessage(b []byte) RoutingMessage {$/;"	f
toRoutingMessage	./syscall/route_dragonfly.go	/^func (any *anyMessage) toRoutingMessage(b []byte) RoutingMessage {$/;"	f
toRoutingMessage	./syscall/route_freebsd.go	/^func (any *anyMessage) toRoutingMessage(b []byte) RoutingMessage {$/;"	f
toRoutingMessage	./syscall/route_netbsd.go	/^func (any *anyMessage) toRoutingMessage(b []byte) RoutingMessage {$/;"	f
toRoutingMessage	./syscall/route_openbsd.go	/^func (any *anyMessage) toRoutingMessage(b []byte) RoutingMessage {$/;"	f
toShort	./path/filepath/symlink_windows.go	/^func toShort(path string) (string, error) {$/;"	f
toString	./cmd/compile/internal/big/natconv_test.go	/^func toString(x nat, charset string) string {$/;"	f
toString	./math/big/natconv_test.go	/^func toString(x nat, charset string) string {$/;"	f
toString	./testing/quick/quick.go	/^func toString(interfaces []interface{}) string {$/;"	f
toType	./reflect/type.go	/^func toType(t *rtype) Type {$/;"	f
toWireFormat	./syscall/netlink_linux.go	/^func (rr *NetlinkRouteRequest) toWireFormat() []byte {$/;"	f
toYCbCr	./image/jpeg/writer.go	/^func toYCbCr(m image.Image, p image.Point, yBlock, cbBlock, crBlock *block) {$/;"	f
to_string	./runtime/runtime-gdb.py	/^	def to_string(self):$/;"	m	class:ChanTypePrinter
to_string	./runtime/runtime-gdb.py	/^	def to_string(self):$/;"	m	class:IfacePrinter
to_string	./runtime/runtime-gdb.py	/^	def to_string(self):$/;"	m	class:MapTypePrinter
to_string	./runtime/runtime-gdb.py	/^	def to_string(self):$/;"	m	class:SliceTypePrinter
to_string	./runtime/runtime-gdb.py	/^	def to_string(self):$/;"	m	class:StringTypePrinter
toc	./cmd/link/internal/ld/data.go	/^		var toc *LSym$/;"	v
toc	./cmd/link/internal/ppc64/asm.go	/^	var toc *ld.LSym$/;"	v
tocplx	./cmd/compile/internal/gc/const.go	/^func tocplx(v Val) Val {$/;"	f
toff	./debug/dwarf/typeunit.go	/^		var toff uint32$/;"	v
toflt	./cmd/compile/internal/gc/const.go	/^func toflt(v Val) Val {$/;"	f
tofunargs	./cmd/compile/internal/gc/dcl.go	/^func tofunargs(l *NodeList) *Type {$/;"	f
toint	./cmd/compile/internal/gc/const.go	/^func toint(v Val) Val {$/;"	f
toint64sw	./runtime/softfloat64_test.go	/^func toint64sw(f float64) float64 {$/;"	f
tointerface	./cmd/compile/internal/gc/dcl.go	/^func tointerface(l *NodeList) *Type {$/;"	f
tok	./cmd/asm/internal/asm/parse.go	/^	var tok lex.ScanToken$/;"	v
tok	./encoding/xml/read.go	/^		var tok Token$/;"	v
tok	./text/scanner/example_test.go	/^	var tok rune$/;"	v
tok1	./encoding/xml/xml_test.go	/^	var tok1 Token = CharData(data)$/;"	v
tok1	./encoding/xml/xml_test.go	/^	var tok1 Token = elt$/;"	v
tokPrec	./go/parser/parser.go	/^func (p *parser) tokPrec() (token.Token, int) {$/;"	f
token	./compress/flate/token.go	/^type token uint32$/;"	t
token	./fmt/scan.go	/^func (s *ss) token(skipSpace bool, f func(rune) bool) []byte {$/;"	f
token	./text/scanner/scanner_test.go	/^type token struct {$/;"	t
tokenEqual	./net/http/lex.go	/^func tokenEqual(t1, t2 string) bool {$/;"	f
tokenError	./encoding/json/stream.go	/^func (dec *Decoder) tokenError(c byte) (Token, error) {$/;"	f
tokenList	./text/scanner/scanner_test.go	/^var tokenList = []token{$/;"	v
tokenPrepareForDecode	./encoding/json/stream.go	/^func (dec *Decoder) tokenPrepareForDecode() error {$/;"	f
tokenStreamCase	./encoding/json/stream_test.go	/^type tokenStreamCase struct {$/;"	t
tokenStreamCases	./encoding/json/stream_test.go	/^var tokenStreamCases []tokenStreamCase = []tokenStreamCase{$/;"	v
tokenString	./text/scanner/scanner.go	/^var tokenString = map[rune]string{$/;"	v
tokenValueAllowed	./encoding/json/stream.go	/^func (dec *Decoder) tokenValueAllowed() bool {$/;"	f
tokenValueEnd	./encoding/json/stream.go	/^func (dec *Decoder) tokenValueEnd() {$/;"	f
tokenclass	./go/scanner/scanner_test.go	/^func tokenclass(tok token.Token) int {$/;"	f
tokenize	./cmd/link/internal/ld/util.go	/^func tokenize(s string) []string {$/;"	f
tokens	./cmd/asm/internal/lex/input.go	/^	var tokens []Token$/;"	v
tokens	./cmd/asm/internal/lex/lex.go	/^	var tokens []Token$/;"	v
tokens	./cmd/yacc/yacc.go	/^			var tokens []string$/;"	v
tokens	./go/scanner/scanner_test.go	/^var tokens = [...]elt{$/;"	v
tokens	./go/token/token.go	/^var tokens = [...]string{$/;"	v
tokflag	./cmd/yacc/yacc.go	/^var tokflag = false$/;"	v
toklev	./cmd/yacc/yacc.go	/^var toklev []int \/\/ vector with the precedence of the terminals$/;"	v
tokname	./cmd/yacc/yacc.go	/^var tokname string \/\/ input token name, slop for runes and 0$/;"	v
tokset	./cmd/yacc/yacc.go	/^var tokset []Symb$/;"	v
tolerance	./math/all_test.go	/^func tolerance(a, b, e float64) bool {$/;"	f
tolerance	./math/cmplx/cmath_test.go	/^func tolerance(a, b, e float64) bool {$/;"	f
too	./cmd/compile/internal/gc/align.go	/^			Yyerror("channel element type too large (>64kB)")$/;"	t
too	./cmd/compile/internal/gc/dcl.go	/^	\/\/ check t->nod->type too$/;"	t
too	./cmd/compile/internal/gc/plive.go	/^			\/\/ If we added it to uevar too, we'd not see any kill$/;"	v
tooLarge	./fmt/print.go	/^func tooLarge(x int) bool {$/;"	f
tooLarge	./net/http/request.go	/^func (l *maxBytesReader) tooLarge() (n int, err error) {$/;"	f
tool	./cmd/go/tool.go	/^func tool(toolName string) string {$/;"	f
toomany	./cmd/compile/internal/gc/range.go	/^	var toomany int$/;"	v
top	./cmd/compile/internal/gc/swt.go	/^	var top int$/;"	v
top	./cmd/yacc/testdata/expr/expr.y	/^top:$/;"	l
topLevelNilPanic	./encoding/gob/encoder_test.go	/^func topLevelNilPanic(t *testing.T) (panicErr string) {$/;"	f
topofstack	./runtime/traceback.go	/^func topofstack(f *_func) bool {$/;"	f
tos	./runtime/os2_plan9.go	/^type tos struct {$/;"	t
tostr	./cmd/compile/internal/gc/const.go	/^func tostr(v Val) Val {$/;"	f
tostruct	./cmd/compile/internal/gc/dcl.go	/^func tostruct(l *NodeList) *Type {$/;"	f
total	./cmd/cover/func.go	/^	var total, covered int64$/;"	v
total	./cmd/cover/html.go	/^	var total, covered int64$/;"	v
total	./cmd/pprof/internal/report/report.go	/^		var total int64$/;"	v
total	./compress/flate/huffman_code.go	/^	var total int64$/;"	v
total	./encoding/ascii85/ascii85_test.go	/^		var total int$/;"	v
total	./encoding/base32/base32_test.go	/^		var total int$/;"	v
total	./encoding/base64/base64_test.go	/^		var total int$/;"	v
total	./runtime/pprof/pprof.go	/^	var total runtime.MemProfileRecord$/;"	v
total	./runtime/pprof/pprof_test.go	/^	var total uintptr$/;"	v
totalBits	./runtime/mbitmap.go	/^	var totalBits uintptr$/;"	v
totalValue	./cmd/pprof/internal/report/report.go	/^	var totalValue int64$/;"	v
totaldefersize	./runtime/panic.go	/^func totaldefersize(siz uintptr) uintptr {$/;"	f
touch	./os/os_test.go	/^func touch(t *testing.T, name string) {$/;"	f
touch	./path/filepath/path_test.go	/^func touch(t *testing.T, name string) {$/;"	f
tounsigned	./cmd/compile/internal/gc/subr.go	/^func tounsigned(t *Type) *Type {$/;"	f
tp	./cmd/compile/internal/gc/typecheck.go	/^		var tp *Type$/;"	v
tp	./runtime/netpoll_kqueue.go	/^	var tp *timespec$/;"	v
tpchs	./net/server_test.go	/^		var tpchs []chan error$/;"	v
tr	./cmd/compile/internal/arm64/ggen.go	/^	var tr gc.Node$/;"	v
tr	./cmd/compile/internal/ppc64/ggen.go	/^	var tr gc.Node$/;"	v
tr	./time/sleep_test.go	/^	var tr Timer$/;"	v
trace	./go/parser/parser.go	/^func trace(p *parser, msg string) *parser {$/;"	f
trace	./go/printer/testdata/parser.go	/^func trace(p *parser, msg string) *parser {$/;"	f
trace	./go/types/errors.go	/^func (check *Checker) trace(pos token.Pos, format string, args ...interface{}) {$/;"	f
trace	./runtime/trace.go	/^var trace struct {$/;"	v
traceAcquireBuffer	./runtime/trace.go	/^func traceAcquireBuffer() (mp *m, pid int32, bufp **traceBuf) {$/;"	f
traceAlloc	./runtime/trace.go	/^type traceAlloc struct {$/;"	t
traceAllocBlock	./runtime/trace.go	/^type traceAllocBlock struct {$/;"	t
traceAppend	./runtime/trace.go	/^func traceAppend(buf []byte, v uint64) []byte {$/;"	f
traceBuf	./runtime/trace.go	/^type traceBuf struct {$/;"	t
traceBufHeader	./runtime/trace.go	/^type traceBufHeader struct {$/;"	t
traceContext	./cmd/trace/trace.go	/^type traceContext struct {$/;"	t
traceEvent	./runtime/trace.go	/^func traceEvent(ev byte, skip int, args ...uint64) {$/;"	f
traceFlush	./runtime/trace.go	/^func traceFlush(buf *traceBuf) *traceBuf {$/;"	f
traceFullDequeue	./runtime/trace.go	/^func traceFullDequeue() *traceBuf {$/;"	f
traceFullQueue	./runtime/trace.go	/^func traceFullQueue(buf *traceBuf) {$/;"	f
traceGCDone	./runtime/trace.go	/^func traceGCDone() {$/;"	f
traceGCScanDone	./runtime/trace.go	/^func traceGCScanDone() {$/;"	f
traceGCScanStart	./runtime/trace.go	/^func traceGCScanStart() {$/;"	f
traceGCStart	./runtime/trace.go	/^func traceGCStart() {$/;"	f
traceGCSweepDone	./runtime/trace.go	/^func traceGCSweepDone() {$/;"	f
traceGCSweepStart	./runtime/trace.go	/^func traceGCSweepStart() {$/;"	f
traceGoCreate	./runtime/trace.go	/^func traceGoCreate(newg *g, pc uintptr) {$/;"	f
traceGoEnd	./runtime/trace.go	/^func traceGoEnd() {$/;"	f
traceGoPark	./runtime/trace.go	/^func traceGoPark(traceEv byte, skip int, gp *g) {$/;"	f
traceGoPreempt	./runtime/trace.go	/^func traceGoPreempt() {$/;"	f
traceGoSched	./runtime/trace.go	/^func traceGoSched() {$/;"	f
traceGoStart	./runtime/trace.go	/^func traceGoStart() {$/;"	f
traceGoSysBlock	./runtime/trace.go	/^func traceGoSysBlock(pp *p) {$/;"	f
traceGoSysCall	./runtime/trace.go	/^func traceGoSysCall() {$/;"	f
traceGoSysExit	./runtime/trace.go	/^func traceGoSysExit(seq uint64, ts int64) {$/;"	f
traceGoUnpark	./runtime/trace.go	/^func traceGoUnpark(gp *g, skip int) {$/;"	f
traceGomaxprocs	./runtime/trace.go	/^func traceGomaxprocs(procs int32) {$/;"	f
traceHeapAlloc	./runtime/trace.go	/^func traceHeapAlloc() {$/;"	f
traceNextGC	./runtime/trace.go	/^func traceNextGC() {$/;"	f
traceParams	./cmd/trace/trace.go	/^type traceParams struct {$/;"	t
traceProcFree	./runtime/trace.go	/^func traceProcFree(pp *p) {$/;"	f
traceProcStart	./runtime/trace.go	/^func traceProcStart() {$/;"	f
traceProcStop	./runtime/trace.go	/^func traceProcStop(pp *p) {$/;"	f
traceReader	./runtime/trace.go	/^func traceReader() *g {$/;"	f
traceReleaseBuffer	./runtime/trace.go	/^func traceReleaseBuffer(pid int32) {$/;"	f
traceStack	./runtime/trace.go	/^type traceStack struct {$/;"	t
traceStackTable	./runtime/trace.go	/^type traceStackTable struct {$/;"	t
tracealloc	./runtime/mprof.go	/^func tracealloc(p unsafe.Pointer, size uintptr, typ *_type) {$/;"	f
traceback	./runtime/traceback.go	/^func traceback(pc, sp, lr uintptr, gp *g) {$/;"	f
traceback1	./runtime/traceback.go	/^func traceback1(pc, sp, lr uintptr, gp *g, flags uint) {$/;"	f
traceback_cache	./runtime/runtime1.go	/^var traceback_cache uint32 = 2 << 1$/;"	v
tracebackbuf	./runtime/env_plan9.go	/^var tracebackbuf [128]byte$/;"	v
tracebackdefers	./runtime/traceback.go	/^func tracebackdefers(gp *g, callback func(*stkframe, unsafe.Pointer) bool, v unsafe.Pointer) {$/;"	f
tracebackinit	./runtime/traceback.go	/^func tracebackinit() {$/;"	f
tracebackothers	./runtime/traceback.go	/^func tracebackothers(me *g) {$/;"	f
tracebacktrap	./runtime/traceback.go	/^func tracebacktrap(pc, sp, lr uintptr, gp *g) {$/;"	f
tracefree	./runtime/mprof.go	/^func tracefree(p unsafe.Pointer, size uintptr) {$/;"	f
tracegc	./runtime/mprof.go	/^func tracegc() {$/;"	f
tracelock	./runtime/mprof.go	/^var tracelock mutex$/;"	v
traceseq	./runtime/trace.go	/^var traceseq uint64 \/\/ global trace sequence number$/;"	v
tracestamp	./runtime/trace.go	/^func tracestamp() (seq uint64, ts int64) {$/;"	f
track	./cmd/compile/internal/gc/esc.go	/^func (e *EscState) track(n *Node) {$/;"	f
trackLastConnListener	./net/http/serve_test.go	/^type trackLastConnListener struct {$/;"	t
trackpkg	./cmd/compile/internal/gc/go.go	/^var trackpkg *Pkg \/\/ fake package for field tracking$/;"	v
tracksym	./cmd/compile/internal/gc/reflect.go	/^func tracksym(t *Type) *Sym {$/;"	f
trailer	./runtime/mbitmap.go	/^		var trailer [40]byte \/\/ 3 varints (max 10 each) + some bytes$/;"	v
trailerKeys	./net/http/httputil/reverseproxy.go	/^		var trailerKeys []string$/;"	v
trailingPort	./net/http/cgi/host.go	/^var trailingPort = regexp.MustCompile(`:([0-9]+)$`)$/;"	v
trailingZeroBits	./cmd/compile/internal/big/nat.go	/^func (x nat) trailingZeroBits() uint {$/;"	f
trailingZeroBits	./cmd/compile/internal/big/nat.go	/^func trailingZeroBits(x Word) uint {$/;"	f
trailingZeroBits	./math/big/nat.go	/^func (x nat) trailingZeroBits() uint {$/;"	f
trailingZeroBits	./math/big/nat.go	/^func trailingZeroBits(x Word) uint {$/;"	f
transceiver	./net/mockserver_test.go	/^func transceiver(c Conn, wb []byte, ch chan<- error) {$/;"	f
transferReader	./net/http/transfer.go	/^type transferReader struct {$/;"	t
transferWriter	./net/http/transfer.go	/^type transferWriter struct {$/;"	t
transformclosure	./cmd/compile/internal/gc/closure.go	/^func transformclosure(xfunc *Node) {$/;"	f
transitionFunc	./html/template/transition.go	/^var transitionFunc = [...]func(context, []byte) (context, int){$/;"	v
translate	./encoding/xml/xml.go	/^func (d *Decoder) translate(n *Name, isElementName bool) {$/;"	f
transponder	./net/mockserver_test.go	/^func transponder(ln Listener, ch chan<- error) {$/;"	f
transport	./net/http/client.go	/^func (c *Client) transport() RoundTripper {$/;"	f
transportRequest	./net/http/transport.go	/^type transportRequest struct {$/;"	t
trap	./runtime/signal_darwin_arm.go	/^func (c *sigctxt) trap() uint32    { return 0 }$/;"	f
trap	./runtime/signal_freebsd_arm.go	/^func (c *sigctxt) trap() uint32    { return 0 }$/;"	f
trap	./runtime/signal_linux_arm.go	/^func (c *sigctxt) trap() uint32      { return c.regs().trap_no }$/;"	f
trap	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) trap() uint64  { return c.regs().trap }$/;"	f
trap	./runtime/signal_nacl_arm.go	/^func (c *sigctxt) trap() uint32    { return ^uint32(0) }$/;"	f
trap	./runtime/signal_netbsd_arm.go	/^func (c *sigctxt) trap() uint32     { return 0 }$/;"	f
trap	./runtime/signal_openbsd_arm.go	/^func (c *sigctxt) trap() uint32    { return 0 }$/;"	f
trchs	./net/server_test.go	/^		var trchs []chan error$/;"	v
tree	./debug/dwarf/testdata/typedef.c	/^typedef struct tree {$/;"	s	file:
tree	./path/filepath/path_test.go	/^var tree = &Node{$/;"	v
tree	./text/template/exec_test.go	/^	var tree = &Tree{$/;"	v
tree	./text/template/parse/node.go	/^func (a *ActionNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (b *BoolNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (b *BranchNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (c *ChainNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (c *CommandNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (d *DotNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (e *elseNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (e *endNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (f *FieldNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (i *IdentifierNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (l *ListNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (n *NilNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (n *NumberNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (p *PipeNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (s *StringNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (t *TemplateNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (t *TextNode) tree() *Tree {$/;"	f
tree	./text/template/parse/node.go	/^func (v *VariableNode) tree() *Tree {$/;"	f
tree	./text/template/parse/parse_test.go	/^		var tree *Tree$/;"	v
treeCanMatchPattern	./cmd/go/main.go	/^func treeCanMatchPattern(pattern string) func(name string) bool {$/;"	f
treeCanMatchPatternTests	./cmd/go/match_test.go	/^var treeCanMatchPatternTests = []stringPairTest{$/;"	v
treecopy	./cmd/compile/internal/gc/subr.go	/^func treecopy(n *Node, lineno int32) *Node {$/;"	f
triState	./cmd/vet/main.go	/^type triState int$/;"	t
triStateFlag	./cmd/vet/main.go	/^func triStateFlag(name string, value triState, usage string) *triState {$/;"	f
trieNode	./strings/replace.go	/^type trieNode struct {$/;"	t
trim	./cmd/compile/internal/big/decimal.go	/^func trim(x *decimal) {$/;"	f
trim	./encoding/json/scanner_test.go	/^func trim(b []byte) []byte {$/;"	f
trim	./encoding/xml/marshal.go	/^func (s *parentStack) trim(parents []string) error {$/;"	f
trim	./go/ast/print_test.go	/^func trim(s string) string {$/;"	f
trim	./math/big/decimal.go	/^func trim(x *decimal) {$/;"	f
trim	./net/textproto/reader.go	/^func trim(s []byte) []byte {$/;"	f
trim	./strconv/decimal.go	/^func trim(a *decimal) {$/;"	f
trim	./syscall/mksyscall_windows.go	/^func trim(s string) string {$/;"	f
trimComments	./cmd/cover/cover.go	/^func trimComments(file *ast.File, fset *token.FileSet) []*ast.CommentGroup {$/;"	f
trimDead	./runtime/gcinfo_test.go	/^func trimDead(mask []byte) []byte {$/;"	f
trimFuncTests	./bytes/bytes_test.go	/^var trimFuncTests = []TrimFuncTest{$/;"	v
trimFuncTests	./strings/strings_test.go	/^var trimFuncTests = []struct {$/;"	v
trimOWS	./net/http/lex.go	/^func trimOWS(x string) string {$/;"	f
trimOutput	./go/doc/testdata/benchmark.go	/^func (b *B) trimOutput() {$/;"	f
trimOutput	./testing/benchmark.go	/^func (b *B) trimOutput() {$/;"	f
trimPath	./cmd/pprof/internal/report/source.go	/^func trimPath(path string) string {$/;"	f
trimRight	./go/printer/printer.go	/^func trimRight(s string) string {$/;"	f
trimSpace	./cmd/internal/goobj/read.go	/^func trimSpace(b []byte) string {$/;"	f
trimSpace	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func trimSpace(s []byte) []byte {$/;"	f
trimSpace	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func trimSpace(s []byte) []byte {$/;"	f
trimSpace	./net/parse.go	/^func trimSpace(x []byte) []byte {$/;"	f
trimSpaceTests	./bytes/bytes_test.go	/^var trimSpaceTests = []StringTest{$/;"	v
trimSpaceTests	./strings/strings_test.go	/^var trimSpaceTests = []StringTest{$/;"	v
trimTests	./bytes/bytes_test.go	/^var trimTests = []TrimTest{$/;"	v
trimTests	./strings/strings_test.go	/^var trimTests = []struct {$/;"	v
trimTrailingWhitespace	./net/http/internal/chunked.go	/^func trimTrailingWhitespace(b []byte) []byte {$/;"	f
trimUnexportedElems	./cmd/doc/pkg.go	/^func trimUnexportedElems(spec *ast.TypeSpec) {$/;"	f
trimUnexportedFields	./cmd/doc/pkg.go	/^func trimUnexportedFields(fields *ast.FieldList, what string) *ast.FieldList {$/;"	f
trimmer	./go/printer/printer.go	/^type trimmer struct {$/;"	t
tripleDESCipher	./crypto/des/cipher.go	/^type tripleDESCipher struct {$/;"	t
tripleDESKey	./crypto/des/example_test.go	/^	var tripleDESKey []byte$/;"	v
trunc	./encoding/xml/xml.go	/^	var trunc int$/;"	v
trunc	./math/all_test.go	/^var trunc = []float64{$/;"	v
trunc	./math/floor.go	/^func trunc(x float64) float64 {$/;"	f
trunc32	./runtime/softfloat64_test.go	/^func trunc32(f float64) float64 {$/;"	f
truncate	./fmt/format.go	/^func (f *fmt) truncate(s string) string {$/;"	f
truncate	./syscall/fs_nacl.go	/^func (fs *fsys) truncate(ip *inode, length int64) error {$/;"	f
truncateRoundTests	./time/time_test.go	/^var truncateRoundTests = []struct {$/;"	v
truncateWriter	./testing/iotest/writer.go	/^type truncateWriter struct {$/;"	t
truncated	./cmd/internal/rsc.io/x86/x86asm/decode.go	/^func truncated(src []byte, mode int) (Inst, error) {$/;"	f
truncatedExplicitTagTest	./encoding/asn1/asn1_test.go	/^type truncatedExplicitTagTest struct {$/;"	t
truncfltlit	./cmd/compile/internal/gc/const.go	/^func truncfltlit(oldv *Mpflt, t *Type) *Mpflt {$/;"	f
truth	./fmt/scan_test.go	/^var truth bool$/;"	v
truth	./text/template/funcs.go	/^func truth(a interface{}) bool {$/;"	f
try	./image/gif/reader_test.go	/^func try(t *testing.T, b []byte, want string) {$/;"	f
tryAcquireSema	./net/dnsclient_unix.go	/^func (conf *resolverConfig) tryAcquireSema() bool {$/;"	f
tryBacktrack	./regexp/backtrack.go	/^func (m *machine) tryBacktrack(b *bitState, i input, pc uint32, pos int) bool {$/;"	f
tryCompile	./regexp/exec_test.go	/^func tryCompile(s string) (re *Regexp, err error) {$/;"	f
tryCondMask	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func tryCondMask(mask, val uint32, try func([]byte)) {$/;"	f
tryDupCloexec	./net/fd_unix.go	/^var tryDupCloexec = int32(1)$/;"	v
tryGet	./runtime/mgcwork.go	/^func (ww *gcWork) tryGet() uintptr {$/;"	f
tryIdentOrType	./go/parser/parser.go	/^func (p *parser) tryIdentOrType() ast.Expr {$/;"	f
tryIdentOrType	./go/printer/testdata/parser.go	/^func (p *parser) tryIdentOrType(ellipsisOk bool) ast.Expr {$/;"	f
tryOneName	./net/dnsclient_unix.go	/^func tryOneName(cfg *dnsConfig, name string, qtype uint16) (string, []dnsRR, error) {$/;"	f
tryResolve	./go/parser/parser.go	/^func (p *parser) tryResolve(x ast.Expr, collectUnresolved bool) {$/;"	f
tryType	./go/parser/parser.go	/^func (p *parser) tryType() ast.Expr {$/;"	f
tryType	./go/printer/testdata/parser.go	/^func (p *parser) tryType() ast.Expr {$/;"	f
tryUpdate	./net/dnsclient_unix.go	/^func (conf *resolverConfig) tryUpdate(name string) {$/;"	f
tryVarType	./go/parser/parser.go	/^func (p *parser) tryVarType(isParam bool) ast.Expr {$/;"	f
tryVarType	./go/printer/testdata/parser.go	/^func (p *parser) tryVarType(isParam bool) ast.Expr {$/;"	f
trygetfull	./runtime/mgcwork.go	/^func trygetfull(entry int) *workbuf {$/;"	f
trythis	./runtime/symtab_test.go	/^func trythis() { \/\/ 37$/;"	f
ts	./cmd/pprof/internal/report/report.go	/^	var ts, nts tags$/;"	v
ts	./net/http/client_test.go	/^	var ts *httptest.Server$/;"	v
ts	./regexp/testdata/testregex.c	/^static char		ts[] = "\\t\\t\\t\\t\\t\\t\\t";$/;"	v	file:
ts	./runtime/netpoll_kqueue.go	/^	var ts timespec$/;"	v
ts	./runtime/os1_freebsd.go	/^		var ts timespec$/;"	v
ts	./runtime/os1_linux.go	/^	var ts timespec$/;"	v
ts	./runtime/os1_nacl.go	/^				var ts timespec$/;"	v
ts	./runtime/os1_nacl.go	/^	var ts timespec$/;"	v
ts	./runtime/os1_netbsd.go	/^		var ts timespec$/;"	v
ts	./runtime/os1_openbsd.go	/^		var ts timespec$/;"	v
ts	./runtime/proc1.go	/^		var ts cgothreadstart$/;"	v
tsanLog	./runtime/race/race_test.go	/^	var tsanLog []string$/;"	v
tscan	./fmt/scan_test.go	/^	var tscan TwoLines$/;"	v
tscanf	./fmt/scan_test.go	/^	var tscanf TwoLines$/;"	v
tscanln	./fmt/scan_test.go	/^	var tscanln TwoLines$/;"	v
tsmallp	./reflect/all_test.go	/^type tsmallp byte$/;"	t
tsmallv	./reflect/all_test.go	/^type tsmallv byte$/;"	t
tsp	./runtime/os1_freebsd.go	/^	var tsp *timespec$/;"	v
tsp	./runtime/os1_netbsd.go	/^	var tsp *timespec$/;"	v
tsp	./runtime/os1_openbsd.go	/^	var tsp *timespec$/;"	v
tsrc	./cmd/compile/internal/x86/cgen.go	/^	var tsrc gc.Node$/;"	v
tstart_plan9	./runtime/os_plan9.go	/^func tstart_plan9(newm *m)$/;"	f
tstart_stdcall	./runtime/os2_windows.go	/^func tstart_stdcall(newm *m) uint32$/;"	f
tstart_sysvicall	./runtime/os3_solaris.go	/^func tstart_sysvicall()$/;"	f
tstates	./cmd/yacc/yacc.go	/^var tstates []int                  \/\/ states generated by terminal gotos$/;"	v
tt	./compress/gzip/gunzip_test.go	/^	var tt gunzipTest$/;"	v
tt	./time/time_test.go	/^	var tt Time$/;"	v
tv	./syscall/bpf_bsd.go	/^	var tv Timeval$/;"	v
tv	./syscall/syscall_linux.go	/^	var tv [2]Timeval$/;"	v
tv	./syscall/syscall_linux_amd64.go	/^	var tv Timeval$/;"	v
tv	./syscall/syscall_solaris.go	/^	var tv [2]Timeval$/;"	v
tw	./runtime/pprof/pprof.go	/^	var tw *tabwriter.Writer$/;"	v
twide	./cmd/compile/internal/gc/walk.go	/^				var twide *Type$/;"	v
two	./reflect/all_test.go	/^type two [2]uintptr$/;"	t
twoArgs	./text/template/exec_test.go	/^func twoArgs(a, b string) string {$/;"	f
twoIntStruct	./encoding/asn1/marshal_test.go	/^type twoIntStruct struct {$/;"	t
twoNonZero	./runtime/hash_test.go	/^func twoNonZero(h *HashSet, n int) {$/;"	f
twoarg	./cmd/compile/internal/gc/typecheck.go	/^func twoarg(n *Node) int {$/;"	f
twordp	./reflect/all_test.go	/^type twordp uintptr$/;"	t
twordv	./reflect/all_test.go	/^type twordv uintptr$/;"	t
tx	./cmd/compile/internal/big/int_test.go	/^		var tx Int$/;"	v
tx	./cmd/compile/internal/big/rat_test.go	/^			var tx Rat$/;"	v
tx	./cmd/compile/internal/big/rat_test.go	/^		var tx Rat$/;"	v
tx	./database/sql/sql.go	/^	var tx *Tx$/;"	v
tx	./encoding/json/decode_test.go	/^type tx struct {$/;"	t
tx	./math/big/int_test.go	/^		var tx Int$/;"	v
tx	./math/big/rat_test.go	/^			var tx Rat$/;"	v
tx	./math/big/rat_test.go	/^		var tx Rat$/;"	v
tx	./time/zoneinfo_plan9.go	/^	var tx []zoneTrans$/;"	v
txt	./net/dnsmsg.go	/^		var txt string$/;"	v
txt	./regexp/exec_test.go	/^	var txt io.Reader$/;"	v
ty	./cmd/link/internal/ld/ldmacho.go	/^	var ty uint32$/;"	v
typ	./cmd/compile/internal/gc/fmt.go	/^		var typ string$/;"	v
typ	./cmd/compile/internal/gc/subr.go	/^func typ(et int) *Type {$/;"	f
typ	./cmd/link/internal/ld/data.go	/^	var typ string$/;"	v
typ	./cmd/link/internal/ld/elf.go	/^	var typ int$/;"	v
typ	./cmd/vet/copylock.go	/^	var typ types.Type$/;"	v
typ	./cmd/vet/types.go	/^	\/\/ assume we have an addressable variable of type typ$/;"	t
typ	./compress/flate/token.go	/^func (t token) typ() uint32 { return uint32(t) & typeMask }$/;"	f
typ	./debug/dwarf/type.go	/^	var typ Type$/;"	v
typ	./debug/gosym/symtab.go	/^		var typ byte$/;"	v
typ	./debug/plan9obj/file.go	/^		var typ byte$/;"	v
typ	./go/doc/reader.go	/^		var typ ast.Expr$/;"	v
typ	./go/doc/reader.go	/^	var typ ast.Expr = newIdent$/;"	v
typ	./go/internal/gccgoimporter/parser.go	/^	var typ types.Type$/;"	v
typ	./go/internal/gcimporter/gcimporter.go	/^	var typ types.Type$/;"	v
typ	./go/parser/parser.go	/^	var typ ast.Expr$/;"	v
typ	./go/printer/testdata/parser.go	/^	var typ ast.Expr$/;"	v
typ	./go/types/api_test.go	/^		var typ Type$/;"	v
typ	./go/types/builtins.go	/^		var typ Type$/;"	v
typ	./go/types/call.go	/^	var typ Type$/;"	v
typ	./go/types/expr.go	/^	var typ Type$/;"	v
typ	./go/types/object.go	/^	var typ Type$/;"	v
typ	./go/types/typexpr.go	/^	var typ Type$/;"	v
typ	./go/types/typexpr.go	/^func (check *Checker) typ(e ast.Expr) Type {$/;"	f
typ	./mime/type.go	/^\/\/ type typ. The returned extensions will each begin with a leading dot, as in$/;"	t
typ	./runtime/mbitmap.go	/^\/\/ The type typ must correspond exactly to [p, p+size).$/;"	t
typ	./runtime/mbitmap.go	/^\/\/ The type typ must have a plain bitmap, not a GC program.$/;"	t
typ	./runtime/mbitmap.go	/^\/\/ holds in [x, x+dataSize) one or more values of type typ.$/;"	t
typ0	./go/internal/gcimporter/gcimporter.go	/^	var typ0 types.Type$/;"	v
typ1	./cmd/compile/internal/gc/closure.go	/^	var typ1 *Node$/;"	v
typ2Itab	./cmd/compile/internal/gc/builtin/runtime.go	/^func typ2Itab(typ *byte, typ2 *byte, cache **byte) (ret *byte)$/;"	f
typ2Itab	./runtime/iface.go	/^func typ2Itab(t *_type, inter *interfacetype, cache **itab) *itab {$/;"	f
typExpr	./go/types/typexpr.go	/^func (check *Checker) typExpr(e ast.Expr, def *Named, path []*TypeName) (T Type) {$/;"	f
typExprInternal	./go/types/typexpr.go	/^func (check *Checker) typExprInternal(e ast.Expr, def *Named, path []*TypeName) Type {$/;"	f
typOrNil	./go/types/typexpr.go	/^func (check *Checker) typOrNil(e ast.Expr) Type {$/;"	f
type	./cmd/compile/internal/gc/align.go	/^		\/\/ width of func type is pointer$/;"	f
type	./cmd/compile/internal/gc/closure.go	/^	\/\/ Force type conversion from *struct to the func type.$/;"	f
type	./encoding/gob/doc.go	/^at the top level will fail. A struct field of chan or func type is treated exactly$/;"	f
type	./reflect/type.go	/^		panic("reflect: In of non-func type")$/;"	f
type	./reflect/type.go	/^		panic("reflect: IsVariadic of non-func type")$/;"	f
type	./reflect/type.go	/^		panic("reflect: NumIn of non-func type")$/;"	f
type	./reflect/type.go	/^		panic("reflect: NumOut of non-func type")$/;"	f
type	./reflect/type.go	/^		panic("reflect: Out of non-func type")$/;"	f
type	./reflect/type.go	/^		panic("reflect: funcLayout of non-func type")$/;"	f
type	./reflect/type.go	/^	\/\/ Make a func type.$/;"	f
type0	./encoding/gob/type.go	/^	var type0, type1 gobType$/;"	v
type2IET	./cmd/compile/internal/gc/subr.go	/^func type2IET(t *Type) string {$/;"	f
typeAlg	./reflect/type.go	/^type typeAlg struct {$/;"	t
typeAlg	./runtime/alg.go	/^type typeAlg struct {$/;"	t
typeAssertion	./go/types/expr.go	/^func (check *Checker) typeAssertion(pos token.Pos, x *operand, xtyp *Interface, T Type) {$/;"	f
typeBitsBulkBarrier	./runtime/mbitmap.go	/^func typeBitsBulkBarrier(typ *_type, p, size uintptr) {$/;"	f
typeByIndex	./encoding/json/encode.go	/^func typeByIndex(t reflect.Type, index []int) reflect.Type {$/;"	f
typeCacheBucket	./runtime/heapdump.go	/^type typeCacheBucket struct {$/;"	t
typeConv	./cmd/cgo/gcc.go	/^type typeConv struct {$/;"	t
typeDecl	./go/types/decl.go	/^func (check *Checker) typeDecl(obj *TypeName, typ ast.Expr, def *Named, path []*TypeName) {$/;"	f
typeDefinition	./encoding/gob/debug.go	/^func (deb *debugger) typeDefinition(indent tab, id typeId) {$/;"	f
typeEncoder	./encoding/json/encode.go	/^func typeEncoder(t reflect.Type) encoderFunc {$/;"	f
typeFields	./encoding/json/encode.go	/^func typeFields(t reflect.Type) []field {$/;"	f
typeFiles	./mime/type_plan9.go	/^var typeFiles = []string{$/;"	v
typeFiles	./mime/type_unix.go	/^var typeFiles = []string{$/;"	v
typeFlatten	./cmd/vet/method.go	/^func typeFlatten(l []*ast.Field) []ast.Expr {$/;"	f
typeId	./encoding/gob/debug.go	/^func (deb *debugger) typeId() typeId {$/;"	f
typeId	./encoding/gob/type.go	/^type typeId int32$/;"	t
typeInfo	./encoding/gob/type.go	/^type typeInfo struct {$/;"	t
typeInfo	./encoding/xml/typeinfo.go	/^type typeInfo struct {$/;"	t
typeInfoMap	./encoding/gob/type.go	/^var typeInfoMap atomic.Value$/;"	v
typeLock	./encoding/gob/type.go	/^var typeLock sync.Mutex \/\/ set while building a type$/;"	v
typeOf	./text/template/exec_test.go	/^func typeOf(arg interface{}) string {$/;"	f
typeOfError	./net/rpc/server.go	/^var typeOfError = reflect.TypeOf((*error)(nil)).Elem()$/;"	v
typeParserTests	./go/internal/gccgoimporter/parser_test.go	/^var typeParserTests = []struct {$/;"	v
typePath	./cmd/vet/copylock.go	/^type typePath []types.Type$/;"	t
typeReader	./debug/dwarf/type.go	/^type typeReader interface {$/;"	t
typeString	./cmd/api/goapi.go	/^func (w *Walker) typeString(typ types.Type) string {$/;"	f
typeString	./encoding/gob/decode.go	/^func (dec *Decoder) typeString(remoteId typeId) string {$/;"	f
typeString	./net/internal/socktest/switch_posix.go	/^func typeString(sotype int) string {$/;"	f
typeString	./net/internal/socktest/switch_stub.go	/^func typeString(sotype int) string { return "<nil>" }$/;"	f
typeStrings	./debug/elf/elf.go	/^var typeStrings = []intName{$/;"	v
typeSummary	./cmd/doc/pkg.go	/^func (pkg *Package) typeSummary() {$/;"	f
typeSwitch	./cmd/compile/internal/gc/swt.go	/^type typeSwitch struct {$/;"	t
typeSym	./cmd/compile/internal/gc/typecheck.go	/^type typeSym struct {$/;"	t
typeT	./encoding/gob/type_test.go	/^type typeT struct {$/;"	t
typeTests	./reflect/all_test.go	/^var typeTests = []pair{$/;"	v
typeUnit	./debug/dwarf/typeunit.go	/^type typeUnit struct {$/;"	t
typeUnitReader	./debug/dwarf/typeunit.go	/^type typeUnitReader struct {$/;"	t
type_	./cmd/link/internal/ld/lib.go	/^				var type_ int$/;"	v
type_	./cmd/link/internal/ld/symtab.go	/^	var type_ int$/;"	v
typecache	./runtime/heapdump.go	/^var typecache [typeCacheBuckets]typeCacheBucket$/;"	v
typecheck	./cmd/compile/internal/gc/typecheck.go	/^func typecheck(np **Node, top int) *Node {$/;"	f
typecheck	./cmd/fix/typecheck.go	/^func typecheck(cfg *TypeConfig, f *ast.File) (typeof map[interface{}]string, assign map[string][]interface{}) {$/;"	f
typecheck	./go/types/stdlib_test.go	/^func typecheck(t *testing.T, path string, filenames []string) {$/;"	f
typecheck1	./cmd/compile/internal/gc/typecheck.go	/^func typecheck1(np **Node, top int) {$/;"	f
typecheck1	./cmd/fix/typecheck.go	/^func typecheck1(cfg *TypeConfig, f interface{}, typeof map[interface{}]string, assign map[string][]interface{}) {$/;"	f
typecheck_tcfree	./cmd/compile/internal/gc/typecheck.go	/^var typecheck_tcfree *NodeList$/;"	v
typecheck_tcstack	./cmd/compile/internal/gc/typecheck.go	/^var typecheck_tcstack *NodeList$/;"	v
typecheckas	./cmd/compile/internal/gc/typecheck.go	/^func typecheckas(n *Node) {$/;"	f
typecheckas2	./cmd/compile/internal/gc/typecheck.go	/^func typecheckas2(n *Node) {$/;"	f
typecheckaste	./cmd/compile/internal/gc/typecheck.go	/^func typecheckaste(op int, call *Node, isddd bool, tstruct *Type, nl *NodeList, desc func() string) {$/;"	f
typecheckclosure	./cmd/compile/internal/gc/closure.go	/^func typecheckclosure(func_ *Node, top int) {$/;"	f
typecheckcomplit	./cmd/compile/internal/gc/typecheck.go	/^func typecheckcomplit(np **Node) {$/;"	f
typecheckdef	./cmd/compile/internal/gc/typecheck.go	/^func typecheckdef(n *Node) *Node {$/;"	f
typecheckdefstack	./cmd/compile/internal/gc/typecheck.go	/^var typecheckdefstack *NodeList$/;"	v
typecheckdeftype	./cmd/compile/internal/gc/typecheck.go	/^func typecheckdeftype(n *Node) {$/;"	f
typecheckfunc	./cmd/compile/internal/gc/typecheck.go	/^func typecheckfunc(n *Node) {$/;"	f
typecheckinl	./cmd/compile/internal/gc/inl.go	/^func typecheckinl(fn *Node) {$/;"	f
typechecklist	./cmd/compile/internal/gc/typecheck.go	/^func typechecklist(l *NodeList, top int) {$/;"	f
typecheckok	./cmd/compile/internal/gc/go.go	/^var typecheckok int$/;"	v
typecheckpartialcall	./cmd/compile/internal/gc/closure.go	/^func typecheckpartialcall(fn *Node, sym *Node) {$/;"	f
typecheckrange	./cmd/compile/internal/gc/range.go	/^func typecheckrange(n *Node) {$/;"	f
typecheckselect	./cmd/compile/internal/gc/select.go	/^func typecheckselect(sel *Node) {$/;"	f
typecheckswitch	./cmd/compile/internal/gc/swt.go	/^func typecheckswitch(n *Node) {$/;"	f
typedcl	./cmd/compile/internal/gc/go.y	/^typedcl:$/;"	l
typedcl0	./cmd/compile/internal/gc/dcl.go	/^func typedcl0(s *Sym) *Node {$/;"	f
typedcl1	./cmd/compile/internal/gc/dcl.go	/^func typedcl1(n *Node, t *Node, local bool) *Node {$/;"	f
typedcl_list	./cmd/compile/internal/gc/go.y	/^typedcl_list:$/;"	l
typedclname	./cmd/compile/internal/gc/go.y	/^typedclname:$/;"	l
typedef	./cmd/cgo/gcc.go	/^var typedef = make(map[string]*Type)$/;"	v
typedefTests	./debug/dwarf/type_test.go	/^var typedefTests = map[string]string{$/;"	v
typedefs	./cmd/compile/internal/amd64/galign.go	/^var typedefs = []gc.Typedef{$/;"	v
typedefs	./cmd/compile/internal/arm/galign.go	/^var typedefs = []gc.Typedef{$/;"	v
typedefs	./cmd/compile/internal/arm64/galign.go	/^var typedefs = []gc.Typedef{$/;"	v
typedefs	./cmd/compile/internal/ppc64/galign.go	/^var typedefs = []gc.Typedef{$/;"	v
typedefs	./cmd/compile/internal/x86/galign.go	/^var typedefs = []gc.Typedef{$/;"	v
typedmemmove	./cmd/compile/internal/gc/builtin/runtime.go	/^func typedmemmove(typ *byte, dst *any, src *any)$/;"	f
typedmemmove	./reflect/value.go	/^func typedmemmove(t *rtype, dst, src unsafe.Pointer)$/;"	f
typedmemmove	./runtime/mbarrier.go	/^func typedmemmove(typ *_type, dst, src unsafe.Pointer) {$/;"	f
typedmemmovepartial	./reflect/value.go	/^func typedmemmovepartial(t *rtype, dst, src unsafe.Pointer, off, size uintptr)$/;"	f
typedslicecopy	./cmd/compile/internal/gc/builtin/runtime.go	/^func typedslicecopy(typ *byte, dst any, src any) int$/;"	f
typedslicecopy	./reflect/value.go	/^func typedslicecopy(elemType *rtype, dst, src sliceHeader) int$/;"	f
typedslicecopy	./runtime/mbarrier.go	/^func typedslicecopy(typ *_type, dst, src slice) int {$/;"	f
typefmt	./cmd/compile/internal/gc/fmt.go	/^func typefmt(t *Type, flag int) string {$/;"	f
typehash	./cmd/compile/internal/gc/subr.go	/^func typehash(t *Type) uint32 {$/;"	f
typeinit	./cmd/compile/internal/gc/align.go	/^func typeinit() {$/;"	f
typekind	./cmd/compile/internal/gc/typecheck.go	/^func typekind(t *Type) string {$/;"	f
typelinkpkg	./cmd/compile/internal/gc/go.go	/^var typelinkpkg *Pkg \/\/ fake package for runtime type info (data)$/;"	v
typelinks	./reflect/type.go	/^func typelinks() [][]*rtype$/;"	f
typelinksym	./cmd/compile/internal/gc/reflect.go	/^func typelinksym(t *Type) *Sym {$/;"	f
typename	./cmd/compile/internal/gc/reflect.go	/^func typename(t *Type) *Node {$/;"	f
typenamesym	./cmd/compile/internal/gc/reflect.go	/^func typenamesym(t *Type) *Sym {$/;"	f
typenod	./cmd/compile/internal/gc/dcl.go	/^func typenod(t *Type) *Node {$/;"	f
typeof	./cmd/fix/typecheck.go	/^func (cfg *TypeConfig) typeof(name string) string {$/;"	f
typeone	./cmd/compile/internal/gc/swt.go	/^func (s *typeSwitch) typeone(t *Node) *Node {$/;"	f
typepkg	./cmd/compile/internal/gc/go.go	/^var typepkg *Pkg \/\/ fake package for runtime type info (headers)$/;"	v
typeptrdata	./cmd/compile/internal/gc/reflect.go	/^func typeptrdata(t *Type) int64 {$/;"	f
types	./encoding/gob/decgen.go	/^var types = []Type{$/;"	v
types	./encoding/gob/encgen.go	/^var types = []Type{$/;"	v
types	./encoding/gob/type.go	/^var types = make(map[reflect.Type]gobType)$/;"	v
typesByString	./reflect/type.go	/^func typesByString(s string) []*rtype {$/;"	f
typesMustMatch	./reflect/value.go	/^func typesMustMatch(what string, t1, t2 Type) {$/;"	f
typeset	./cmd/yacc/yacc.go	/^var typeset [NTYPES]string \/\/ pointers to type tags$/;"	v
typestring	./reflect/all_test.go	/^func typestring(i interface{}) string { return TypeOf(i).String() }$/;"	f
typestring	./runtime/error.go	/^func typestring(x interface{}) string {$/;"	f
typesw	./cmd/compile/internal/gc/go.go	/^var typesw *Node$/;"	v
typesym	./cmd/compile/internal/gc/reflect.go	/^func typesym(t *Type) *Sym {$/;"	f
typesymprefix	./cmd/compile/internal/gc/reflect.go	/^func typesymprefix(prefix string, t *Type) *Sym {$/;"	f
typs	./go/internal/gccgoimporter/parser.go	/^	var typs []*types.Named$/;"	v
typstr	./debug/dwarf/type_test.go	/^			var typstr string$/;"	v
tystate	./cmd/yacc/yacc.go	/^var tystate = make([]int, NSTATES) \/\/ contains type information about the states$/;"	v
u0	./encoding/gob/codec_test.go	/^	var u0 U$/;"	v
u1	./encoding/gob/codec_test.go	/^	var u1 U$/;"	v
u16	./cmd/vet/testdata/shift.go	/^	var u16 uint16$/;"	v
u2	./encoding/binary/binary_test.go	/^	var u2 Unexported$/;"	v
u32	./cmd/vet/testdata/shift.go	/^	var u32 uint32$/;"	v
u32	./regexp/syntax/prog.go	/^func u32(i uint32) string {$/;"	f
u5	./go/doc/testdata/e.go	/^type u5 struct {$/;"	t
u64	./cmd/vet/testdata/shift.go	/^	var u64 uint64$/;"	v
u8	./cmd/vet/testdata/shift.go	/^	var u8 uint8$/;"	v
uadd	./cmd/compile/internal/big/float.go	/^func (z *Float) uadd(x, y *Float) {$/;"	f
uadd	./math/big/float.go	/^func (z *Float) uadd(x, y *Float) {$/;"	f
uc	./runtime/os1_netbsd.go	/^	var uc ucontextt$/;"	v
uc	./syscall/syscall_unix_test.go	/^	var uc *net.UnixConn$/;"	v
ucmp	./cmd/compile/internal/big/float.go	/^func (x *Float) ucmp(y *Float) int {$/;"	f
ucmp	./math/big/float.go	/^func (x *Float) ucmp(y *Float) int {$/;"	f
ucontext	./runtime/defs1_solaris_amd64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_darwin_386.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_darwin_amd64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_darwin_arm.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_darwin_arm64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_dragonfly_amd64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_freebsd_386.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_freebsd_amd64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_freebsd_arm.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_linux_386.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_linux_amd64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_linux_arm.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_linux_arm64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_linux_ppc64.go	/^type ucontext struct {$/;"	t
ucontext	./runtime/defs_linux_ppc64le.go	/^type ucontext struct {$/;"	t
ucontextt	./runtime/defs1_netbsd_386.go	/^type ucontextt struct {$/;"	t
ucontextt	./runtime/defs1_netbsd_amd64.go	/^type ucontextt struct {$/;"	t
ucontextt	./runtime/defs1_netbsd_arm.go	/^type ucontextt struct {$/;"	t
ucred	./syscall/creds_test.go	/^	var ucred syscall.Ucred$/;"	v
udiv_by_0	./runtime/vlop_arm.s	/^udiv_by_0:$/;"	l
udiv_by_0_or_1	./runtime/vlop_arm.s	/^udiv_by_0_or_1:$/;"	l
udiv_by_large_d	./runtime/vlop_arm.s	/^udiv_by_large_d:$/;"	l
udpConnLocalNameTests	./net/udp_test.go	/^var udpConnLocalNameTests = []struct {$/;"	v
udpHeader	./net/udpsock_plan9.go	/^type udpHeader struct {$/;"	t
udpListenerTests	./net/listen_test.go	/^var udpListenerTests = []struct {$/;"	v
udpServerTests	./net/server_test.go	/^var udpServerTests = []struct {$/;"	v
uexpr	./cmd/compile/internal/gc/go.y	/^uexpr:$/;"	l
ufmt	./net/url/url_test.go	/^func ufmt(u *URL) string {$/;"	f
uinptr	./runtime/os2_plan9.go	/^type uinptr _Plink$/;"	t
uint	./builtin/builtin.go	/^type uint uint$/;"	t
uint	./cmd/link/internal/ld/ldmacho.go	/^	cputype    uint$/;"	t
uint	./cmd/link/internal/ld/ldmacho.go	/^	subcputype uint$/;"	t
uint	./debug/dwarf/buf.go	/^func (b *buf) uint() uint64 {$/;"	f
uint	./encoding/gob/debug.go	/^func (deb *debugger) uint() uint {$/;"	f
uint	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind uint but not type uint. TODO: We can handle this unsafely.$/;"	t
uint	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind uint but not type uint. TODO: We can handle this unsafely.$/;"	t
uint	./go/doc/testdata/b.go	/^type uint struct{} \/\/ overrides a predeclared type uint$/;"	t
uint	./go/types/issues_test.go	/^				want = Typ[Uint] \/\/ because of "+ s", s is of type uint$/;"	t
uint16	./archive/zip/reader.go	/^func (b *readBuf) uint16() uint16 {$/;"	f
uint16	./archive/zip/writer.go	/^func (b *writeBuf) uint16(v uint16) {$/;"	f
uint16	./builtin/builtin.go	/^type uint16 uint16$/;"	t
uint16	./cmd/compile/internal/gc/esc.go	/^func escMax(e, etype uint16) uint16 {$/;"	t
uint16	./debug/dwarf/buf.go	/^func (b *buf) uint16() uint16 {$/;"	f
uint16	./encoding/binary/binary.go	/^func (d *decoder) uint16() uint16 {$/;"	f
uint16	./encoding/binary/binary.go	/^func (e *encoder) uint16(x uint16) {$/;"	f
uint16	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind uint16 but not type uint16. TODO: We can handle this unsafely.$/;"	t
uint16	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind uint16 but not type uint16. TODO: We can handle this unsafely.$/;"	t
uint16	./net/dnsclient.go	/^func answer(name, server string, dns *dnsMsg, qtype uint16) (cname string, addrs []dnsRR, err error) {$/;"	t
uint16	./net/dnsclient_unix.go	/^			go func(qtype uint16) {$/;"	t
uint16	./net/dnsclient_unix.go	/^func exchange(server, name string, qtype uint16, timeout time.Duration) (*dnsMsg, error) {$/;"	t
uint16	./net/dnsclient_unix.go	/^func lookup(name string, qtype uint16) (cname string, rrs []dnsRR, err error) {$/;"	t
uint16	./net/dnsclient_unix.go	/^func tryOneName(cfg *dnsConfig, name string, qtype uint16) (string, []dnsRR, error) {$/;"	t
uint16	./net/dnsclient_unix_test.go	/^	qtype   uint16$/;"	t
uint16	./net/dnsclient_unix_test.go	/^	qtype uint16$/;"	t
uint16	./net/dnsmsg.go	/^	Qtype  uint16$/;"	t
uint16	./net/dnsmsg.go	/^	Rrtype   uint16$/;"	t
uint16	./net/lookup_windows.go	/^func validRecs(r *syscall.DNSRecord, dnstype uint16, name string) []*syscall.DNSRecord {$/;"	t
uint16	./runtime/defs1_solaris_amd64.go	/^	sem_type  uint16$/;"	t
uint16	./runtime/defs_dragonfly_amd64.go	/^	_type uint16$/;"	t
uint16	./runtime/defs_freebsd_386.go	/^	_type uint16$/;"	t
uint16	./runtime/defs_freebsd_amd64.go	/^	_type uint16$/;"	t
uint16	./runtime/defs_freebsd_arm.go	/^	_type uint16$/;"	t
uint16	./runtime/vdso_linux_amd64.go	/^	e_type      uint16           \/* Object file type *\/$/;"	t
uint16	./syscall/syscall_linux.go	/^	Hatype   uint16$/;"	t
uint16	./syscall/syscall_windows.go	/^\/\/sys	DnsQuery(name string, qtype uint16, options uint32, extra *byte, qrs **DNSRecord, pr *byte) (status error) = dnsapi.DnsQuery_W$/;"	t
uint16	./syscall/zsyscall_windows.go	/^func DnsQuery(name string, qtype uint16, options uint32, extra *byte, qrs **DNSRecord, pr *byte) (status error) {$/;"	t
uint16	./syscall/zsyscall_windows.go	/^func _DnsQuery(name *uint16, qtype uint16, options uint32, extra *byte, qrs **DNSRecord, pr *byte) (status error) {$/;"	t
uint16	./syscall/ztypes_linux_386.go	/^	Hatype   uint16$/;"	t
uint16	./syscall/ztypes_linux_amd64.go	/^	Hatype   uint16$/;"	t
uint16	./syscall/ztypes_linux_arm.go	/^	Hatype   uint16$/;"	t
uint16	./syscall/ztypes_linux_arm64.go	/^	Hatype   uint16$/;"	t
uint16	./syscall/ztypes_linux_ppc64.go	/^	Hatype   uint16$/;"	t
uint16	./syscall/ztypes_linux_ppc64le.go	/^	Hatype   uint16$/;"	t
uint32	./archive/zip/reader.go	/^func (b *readBuf) uint32() uint32 {$/;"	f
uint32	./archive/zip/writer.go	/^func (b *writeBuf) uint32(v uint32) {$/;"	f
uint32	./builtin/builtin.go	/^type uint32 uint32$/;"	t
uint32	./cmd/link/internal/ld/data.go	/^			\/\/ uchar, and Plan 9 8c incorrectly treats the expression as type uint32$/;"	t
uint32	./cmd/link/internal/ld/elf.go	/^	n_type   uint32$/;"	t
uint32	./cmd/link/internal/ld/ldmacho.go	/^	filetype   uint32$/;"	t
uint32	./debug/dwarf/buf.go	/^func (b *buf) uint32() uint32 {$/;"	f
uint32	./encoding/binary/binary.go	/^func (d *decoder) uint32() uint32 {$/;"	f
uint32	./encoding/binary/binary.go	/^func (e *encoder) uint32(x uint32) {$/;"	f
uint32	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind uint32 but not type uint32. TODO: We can handle this unsafely.$/;"	t
uint32	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind uint32 but not type uint32. TODO: We can handle this unsafely.$/;"	t
uint32	./internal/syscall/windows/registry/export_test.go	/^func (k Key) SetValue(name string, valtype uint32, data []byte) error {$/;"	t
uint32	./internal/syscall/windows/registry/registry_test.go	/^func testErrUnexpectedType(t *testing.T, test ValueTest, gottype uint32, err error) {$/;"	t
uint32	./internal/syscall/windows/registry/syscall.go	/^\/\/sys	regSetValueEx(key syscall.Handle, valueName *uint16, reserved uint32, vtype uint32, buf *byte, bufsize uint32) (regerrno error) = advapi32.RegSetValueExW$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) GetBinaryValue(name string) (val []byte, valtype uint32, err error) {$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) GetIntegerValue(name string) (val uint64, valtype uint32, err error) {$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) GetStringValue(name string) (val string, valtype uint32, err error) {$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) GetStringsValue(name string) (val []string, valtype uint32, err error) {$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) GetValue(name string, buf []byte) (n int, valtype uint32, err error) {$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) getValue(name string, buf []byte) (date []byte, valtype uint32, err error) {$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) setStringValue(name string, valtype uint32, value string) error {$/;"	t
uint32	./internal/syscall/windows/registry/value.go	/^func (k Key) setValue(name string, valtype uint32, data []byte) error {$/;"	t
uint32	./internal/syscall/windows/registry/zsyscall_windows.go	/^func regSetValueEx(key syscall.Handle, valueName *uint16, reserved uint32, vtype uint32, buf *byte, bufsize uint32) (regerrno error) {$/;"	t
uint32	./runtime/cgo/libcgo.h	/^typedef uint32_t uint32;$/;"	t
uint32	./runtime/defs_windows_386.go	/^	dwprocessortype             uint32$/;"	t
uint32	./runtime/defs_windows_amd64.go	/^	dwprocessortype             uint32$/;"	t
uint32	./runtime/os1_windows.go	/^func ctrlhandler1(_type uint32) uint32 {$/;"	t
uint32	./runtime/os2_windows.go	/^func ctrlhandler(_type uint32) uint32$/;"	t
uint32	./runtime/vdso_linux_amd64.go	/^	p_type   uint32 \/* Segment type *\/$/;"	t
uint32	./runtime/vdso_linux_amd64.go	/^	sh_type      uint32 \/* Section type *\/$/;"	t
uint32	./syscall/srpc_nacl.go	/^func (m *msg) uint32() uint32 {$/;"	f
uint32	./syscall/syscall_windows.go	/^\/\/sys	CryptAcquireContext(provhandle *Handle, container *uint16, provider *uint16, provtype uint32, flags uint32) (err error) = advapi32.CryptAcquireContextW$/;"	t
uint32	./syscall/syscall_windows.go	/^\/\/sys	DnsRecordListFree(rl *DNSRecord, freetype uint32) = dnsapi.DnsRecordListFree$/;"	t
uint32	./syscall/zsyscall_windows.go	/^func CryptAcquireContext(provhandle *Handle, container *uint16, provider *uint16, provtype uint32, flags uint32) (err error) {$/;"	t
uint32	./syscall/zsyscall_windows.go	/^func DnsRecordListFree(rl *DNSRecord, freetype uint32) {$/;"	t
uint32	./syscall/ztypes_darwin_386.go	/^	Fssubtype   uint32$/;"	t
uint32	./syscall/ztypes_darwin_386.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_darwin_amd64.go	/^	Fssubtype   uint32$/;"	t
uint32	./syscall/ztypes_darwin_amd64.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_darwin_arm.go	/^	Fssubtype   uint32$/;"	t
uint32	./syscall/ztypes_darwin_arm.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_darwin_arm64.go	/^	Fssubtype   uint32$/;"	t
uint32	./syscall/ztypes_darwin_arm64.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_freebsd_386.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_freebsd_arm.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_linux_386.go	/^	Rttvar         uint32$/;"	v
uint32	./syscall/ztypes_linux_amd64.go	/^	Rttvar         uint32$/;"	v
uint32	./syscall/ztypes_linux_arm.go	/^	Rttvar         uint32$/;"	v
uint32	./syscall/ztypes_linux_arm64.go	/^	Rttvar         uint32$/;"	v
uint32	./syscall/ztypes_linux_ppc64.go	/^	Rttvar         uint32$/;"	v
uint32	./syscall/ztypes_linux_ppc64le.go	/^	Rttvar         uint32$/;"	v
uint32	./syscall/ztypes_openbsd_386.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_openbsd_amd64.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_openbsd_arm.go	/^	Rttvar   uint32$/;"	v
uint32	./syscall/ztypes_solaris_amd64.go	/^	Rttvar   uint32$/;"	v
uint64	./archive/zip/reader.go	/^func (b *readBuf) uint64() uint64 {$/;"	f
uint64	./archive/zip/writer.go	/^func (b *writeBuf) uint64(v uint64) {$/;"	f
uint64	./builtin/builtin.go	/^type uint64 uint64$/;"	t
uint64	./cmd/compile/internal/big/float_test.go	/^func (x *Float) uint64() uint64 {$/;"	f
uint64	./debug/dwarf/buf.go	/^func (b *buf) uint64() uint64 {$/;"	f
uint64	./debug/dwarf/entry.go	/^	\/\/ ClassAddress represents values of type uint64 that are$/;"	t
uint64	./debug/gosym/symtab.go	/^	gotype uint64$/;"	t
uint64	./encoding/binary/binary.go	/^func (d *decoder) uint64() uint64 {$/;"	f
uint64	./encoding/binary/binary.go	/^func (e *encoder) uint64(x uint64) {$/;"	f
uint64	./encoding/gob/debug.go	/^func (deb *debugger) uint64() uint64 {$/;"	f
uint64	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind uint64 but not type uint64. TODO: We can handle this unsafely.$/;"	t
uint64	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind uint64 but not type uint64. TODO: We can handle this unsafely.$/;"	t
uint64	./math/big/float_test.go	/^func (x *Float) uint64() uint64 {$/;"	f
uint64	./runtime/cgo/libcgo.h	/^typedef uint64_t uint64;$/;"	t
uint64	./runtime/defs_plan9_amd64.go	/^	_type uint64$/;"	t
uint64	./runtime/vdso_linux_amd64.go	/^	a_type uint64 \/* Entry type *\/$/;"	t
uint64	./syscall/srpc_nacl.go	/^func (m *msg) uint64() uint64 {$/;"	f
uint64	./syscall/ztypes_dragonfly_amd64.go	/^	Rttvar    uint64$/;"	v
uint64	./syscall/ztypes_freebsd_amd64.go	/^	Rttvar   uint64$/;"	v
uint64	./syscall/ztypes_netbsd_386.go	/^	Rttvar   uint64$/;"	v
uint64	./syscall/ztypes_netbsd_amd64.go	/^	Rttvar   uint64$/;"	v
uint64	./syscall/ztypes_netbsd_arm.go	/^	Rttvar   uint64$/;"	v
uint64Tests	./cmd/compile/internal/big/int_test.go	/^var uint64Tests = []uint64{$/;"	v
uint64Tests	./math/big/int_test.go	/^var uint64Tests = []uint64{$/;"	v
uint64Value	./flag/flag.go	/^type uint64Value uint64$/;"	t
uint64div	./cmd/compile/internal/gc/builtin/runtime.go	/^func uint64div(uint64, uint64) uint64$/;"	f
uint64div	./runtime/vlrt.go	/^func uint64div(n, d uint64) uint64 {$/;"	f
uint64mod	./cmd/compile/internal/gc/builtin/runtime.go	/^func uint64mod(uint64, uint64) uint64$/;"	f
uint64mod	./runtime/vlrt.go	/^func uint64mod(n, d uint64) uint64 {$/;"	f
uint64pow10	./strconv/extfloat.go	/^var uint64pow10 = [...]uint64{$/;"	v
uint64s	./cmd/internal/objfile/macho.go	/^type uint64s []uint64$/;"	t
uint64tofloat64	./cmd/compile/internal/gc/builtin/runtime.go	/^func uint64tofloat64(uint64) float64$/;"	f
uint64tofloat64	./runtime/vlrt.go	/^func uint64tofloat64(y uint64) float64 {$/;"	f
uint8	./builtin/builtin.go	/^type uint8 uint8$/;"	t
uint8	./cmd/compile/internal/gc/go.go	/^	Etype       uint8$/;"	t
uint8	./cmd/compile/internal/gc/syntax.go	/^	Etype       uint8 \/\/ op for OASOP, etype for OTYPE, exclam for export, 6g saved reg$/;"	t
uint8	./cmd/internal/obj/link.go	/^	Cfunc     uint8$/;"	f
uint8	./cmd/internal/obj/link.go	/^	Etype  uint8$/;"	t
uint8	./cmd/link/internal/ld/link.go	/^	Cfunc      uint8$/;"	f
uint8	./debug/dwarf/buf.go	/^func (b *buf) uint8() uint8 {$/;"	f
uint8	./encoding/binary/binary.go	/^func (d *decoder) uint8() uint8 {$/;"	f
uint8	./encoding/binary/binary.go	/^func (e *encoder) uint8(x uint8) {$/;"	f
uint8	./runtime/defs_darwin_386.go	/^	_type       uint8$/;"	t
uint8	./runtime/defs_darwin_amd64.go	/^	_type       uint8$/;"	t
uint8	./runtime/defs_darwin_arm.go	/^	_type       uint8$/;"	t
uint8	./runtime/defs_darwin_arm64.go	/^	_type       uint8$/;"	t
uint8	./syscall/syscall_linux.go	/^	Pkttype  uint8$/;"	t
uint8	./syscall/ztypes_linux_386.go	/^	Pkttype  uint8$/;"	t
uint8	./syscall/ztypes_linux_amd64.go	/^	Pkttype  uint8$/;"	t
uint8	./syscall/ztypes_linux_arm.go	/^	Pkttype  uint8$/;"	t
uint8	./syscall/ztypes_linux_arm64.go	/^	Pkttype  uint8$/;"	t
uint8	./syscall/ztypes_linux_ppc64.go	/^	Pkttype  uint8$/;"	t
uint8	./syscall/ztypes_linux_ppc64le.go	/^	Pkttype  uint8$/;"	t
uint8Type	./reflect/value.go	/^var uint8Type = TypeOf(uint8(0)).(*rtype)$/;"	v
uintEncoder	./encoding/json/encode.go	/^func uintEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
uintFactory	./go/doc/testdata/b.go	/^func uintFactory() uint {}$/;"	f
uintValue	./database/sql/convert_test.go	/^func uintValue(intptr interface{}) uint64 {$/;"	f
uintValue	./flag/flag.go	/^type uintValue uint$/;"	t
uintptr	./builtin/builtin.go	/^type uintptr uintptr$/;"	t
uintptr	./debug/gosym/pclntab.go	/^func (t *LineTable) uintptr(b []byte) uint64 {$/;"	f
uintptr	./encoding/gob/dec_helpers.go	/^		\/\/ It is kind uintptr but not type uintptr. TODO: We can handle this unsafely.$/;"	t
uintptr	./encoding/gob/enc_helpers.go	/^		\/\/ It is kind uintptr but not type uintptr. TODO: We can handle this unsafely.$/;"	t
uintptr	./go/types/conversions.go	/^	\/\/ "any pointer or value of underlying type uintptr can be converted into a unsafe.Pointer"$/;"	t
uintptr	./runtime/cgo/libcgo.h	/^typedef uintptr_t uintptr;$/;"	t
uintptr	./runtime/defs_dragonfly_amd64.go	/^	start_func uintptr$/;"	f
uintptr	./runtime/defs_freebsd_386.go	/^	start_func uintptr$/;"	f
uintptr	./runtime/defs_freebsd_amd64.go	/^	start_func uintptr$/;"	f
uintptr	./runtime/defs_freebsd_arm.go	/^	start_func uintptr$/;"	f
uintptrBytes	./runtime/cpuprof.go	/^func uintptrBytes(p []uintptr) (ret []byte) {$/;"	f
uintptraddr	./cmd/compile/internal/gc/racewalk.go	/^func uintptraddr(n *Node) *Node {$/;"	f
uintreg	./runtime/arch_386.go	/^type uintreg uint32$/;"	t
uintreg	./runtime/arch_amd64.go	/^type uintreg uint64$/;"	t
uintreg	./runtime/arch_amd64p32.go	/^type uintreg uint64$/;"	t
uintreg	./runtime/arch_arm.go	/^type uintreg uint32$/;"	t
uintreg	./runtime/arch_arm64.go	/^type uintreg uint64$/;"	t
uintreg	./runtime/arch_ppc64.go	/^type uintreg uint64$/;"	t
uintreg	./runtime/arch_ppc64le.go	/^type uintreg uint64$/;"	t
uitoa	./net/parse.go	/^func uitoa(val uint) string {$/;"	f
uitoa	./os/str.go	/^func uitoa(val uint) string {$/;"	f
uitoa	./syscall/str.go	/^func uitoa(val uint) string {$/;"	f
uitob64Test	./strconv/itoa_test.go	/^type uitob64Test struct {$/;"	t
uitob64tests	./strconv/itoa_test.go	/^var uitob64tests = []uitob64Test{$/;"	v
ul	./cmd/compile/internal/gc/subr.go	/^	var ul int$/;"	v
uleb128enc	./cmd/link/internal/ld/dwarf.go	/^func uleb128enc(v uint64, dst []byte) int {$/;"	f
uleb128put	./cmd/link/internal/ld/dwarf.go	/^func uleb128put(v int64) {$/;"	f
ullmancalc	./cmd/compile/internal/gc/subr.go	/^func ullmancalc(n *Node) {$/;"	f
umax32	./cmd/compile/internal/big/float.go	/^func umax32(x, y uint32) uint32 {$/;"	f
umax32	./math/big/float.go	/^func umax32(x, y uint32) uint32 {$/;"	f
umul	./cmd/compile/internal/big/float.go	/^func (z *Float) umul(x, y *Float) {$/;"	f
umul	./math/big/float.go	/^func (z *Float) umul(x, y *Float) {$/;"	f
un	./go/parser/parser.go	/^func un(p *parser) {$/;"	f
un	./go/printer/testdata/parser.go	/^func un(p *parser) {$/;"	f
un	./strconv/atoi.go	/^	var un uint64$/;"	v
unQuoteTest	./strconv/quote_test.go	/^type unQuoteTest struct {$/;"	t
unary	./go/types/expr.go	/^func (check *Checker) unary(x *operand, e *ast.UnaryExpr, op token.Token) {$/;"	f
unaryDst	./cmd/internal/obj/arm/obj5.go	/^var unaryDst = map[int]bool{$/;"	v
unaryDst	./cmd/internal/obj/arm64/obj7.go	/^var unaryDst = map[int]bool{$/;"	v
unaryDst	./cmd/internal/obj/x86/obj6.go	/^var unaryDst = map[int]bool{$/;"	v
unaryOpPredicates	./go/types/expr.go	/^var unaryOpPredicates = opPredicates{$/;"	v
unblocksig	./runtime/os1_darwin.go	/^func unblocksig(sig int32) {$/;"	f
unblocksig	./runtime/os1_dragonfly.go	/^func unblocksig(sig int32) {$/;"	f
unblocksig	./runtime/os1_freebsd.go	/^func unblocksig(sig int32) {$/;"	f
unblocksig	./runtime/os1_linux.go	/^func unblocksig(sig int32) {$/;"	f
unblocksig	./runtime/os1_netbsd.go	/^func unblocksig(sig int32) {$/;"	f
unblocksig	./runtime/os1_openbsd.go	/^func unblocksig(sig int32) {$/;"	f
unblocksig	./runtime/os3_solaris.go	/^func unblocksig(sig int32) {$/;"	f
unbytereg	./cmd/internal/obj/x86/asm6.go	/^func unbytereg(a *obj.Addr, t *uint8) {$/;"	f
uncommon	./reflect/type.go	/^func (t *uncommonType) uncommon() *uncommonType {$/;"	f
uncommonType	./reflect/type.go	/^type uncommonType struct {$/;"	t
uncommontype	./runtime/type.go	/^type uncommontype struct {$/;"	t
uncondCases	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func uncondCases(t *testing.T) func(func([]byte)) {$/;"	f
undef	./cmd/asm/internal/lex/input.go	/^func (in *Input) undef() {$/;"	f
undef	./cmd/link/internal/ld/lib.go	/^func undef() {$/;"	f
undefsym	./cmd/link/internal/ld/lib.go	/^func undefsym(s *LSym) {$/;"	f
under	./encoding/gob/decode.go	/^\/\/ decOpFor returns the decoding op for the base type under rt and$/;"	t
under	./encoding/gob/encode.go	/^\/\/ encOpFor returns (a pointer to) the encoding op for the base type under rt and$/;"	t
under	./reflect/type.go	/^\/\/ cacheGet looks for a type under the key k in the lookupCache.$/;"	t
underflow	./math/exp_amd64.s	/^underflow: \/\/ return 0$/;"	l
underlying	./go/types/decl.go	/^func underlying(typ Type) Type {$/;"	f
undo	./encoding/json/scanner.go	/^func (s *scanner) undo(scanCode int) {$/;"	f
unescape	./html/escape.go	/^func unescape(b []byte) []byte {$/;"	f
unescape	./net/url/url.go	/^func unescape(s string, mode encoding) (string, error) {$/;"	f
unescapeEntity	./html/escape.go	/^func unescapeEntity(b []byte, dst, src int, attribute bool) (dst1, src1 int) {$/;"	f
unescapeTest	./html/escape_test.go	/^type unescapeTest struct {$/;"	t
unescapeTests	./html/escape_test.go	/^var unescapeTests = []unescapeTest{$/;"	v
unescapeTests	./net/url/url_test.go	/^var unescapeTests = []EscapeTest{$/;"	v
unexp	./cmd/vet/testdata/structtag.go	/^type unexp struct{}$/;"	t
unexpected	./text/template/parse/parse.go	/^func (t *Tree) unexpected(token item, context string) {$/;"	f
unexpectedMessageError	./crypto/tls/common.go	/^func unexpectedMessageError(wanted, got interface{}) error {$/;"	f
unexported	./cmd/api/testdata/src/pkg/p1/p1.go	/^func (s *S2) unexported(x int8, y int16, z int64) {}$/;"	f
unexported	./cmd/api/testdata/src/pkg/p1/p1.go	/^func unexported(x int8, y int16, z int64) {}$/;"	f
unexportedFields	./encoding/json/decode_test.go	/^type unexportedFields struct {$/;"	t
unexportedMethod	./cmd/doc/testdata/pkg.go	/^func (ExportedType) unexportedMethod(a int) bool {$/;"	f
unexportedMethod	./cmd/doc/testdata/pkg.go	/^func (unexportedType) unexportedMethod() bool {$/;"	f
unexportedType	./cmd/doc/doc_test.go	/^			`type unexportedType int`,       \/\/ Type definition.$/;"	t
unexportedType	./cmd/doc/doc_test.go	/^			`type unexportedType`,               \/\/ No unexported type.$/;"	t
unexportedType	./cmd/doc/testdata/pkg.go	/^type unexportedType int$/;"	t
ungetc	./cmd/compile/internal/gc/lex.go	/^func ungetc(c int) {$/;"	f
ungetc	./encoding/xml/xml.go	/^func (d *Decoder) ungetc(b byte) {$/;"	f
ungetrune	./cmd/yacc/yacc.go	/^func ungetrune(f *bufio.Reader, c rune) {$/;"	f
unhex	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^var unhex = [256]byte{$/;"	v
unhex	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^var unhex = [256]byte{$/;"	v
unhex	./mime/mediatype.go	/^func unhex(c byte) byte {$/;"	f
unhex	./net/url/url.go	/^func unhex(c byte) byte {$/;"	f
unhex	./regexp/syntax/parse.go	/^func unhex(c rune) rune {$/;"	f
unhex	./strconv/quote.go	/^func unhex(b byte) (v rune, ok bool) {$/;"	f
unicodeTable	./regexp/syntax/parse.go	/^func unicodeTable(name string) (*unicode.RangeTable, *unicode.RangeTable) {$/;"	f
unicodeTag	./encoding/json/tagkey_test.go	/^type unicodeTag struct {$/;"	t
unimplemented	./runtime/os1_darwin.go	/^func unimplemented(name string) {$/;"	f
unimportfile	./cmd/compile/internal/gc/lex.go	/^func unimportfile() {$/;"	f
unindent	./go/doc/comment.go	/^func unindent(block []string) {$/;"	f
uninstallAccept4TestHook	./net/main_cloexec_test.go	/^func uninstallAccept4TestHook() {$/;"	f
uninstallTestHooks	./net/internal/socktest/main_unix_test.go	/^func uninstallTestHooks() {$/;"	f
uninstallTestHooks	./net/internal/socktest/main_windows_test.go	/^func uninstallTestHooks() {$/;"	f
uninstallTestHooks	./net/main_plan9_test.go	/^func uninstallTestHooks() {}$/;"	f
uninstallTestHooks	./net/main_unix_test.go	/^func uninstallTestHooks() {$/;"	f
uninstallTestHooks	./net/main_windows_test.go	/^func uninstallTestHooks() {$/;"	f
uninterlace	./image/gif/reader.go	/^func uninterlace(m *image.Paletted) {$/;"	f
uniq	./cmd/dist/util.go	/^func uniq(list []string) []string {$/;"	f
uniqgen	./cmd/compile/internal/gc/dcl.go	/^var uniqgen uint32$/;"	v
unit	./debug/dwarf/entry.go	/^\/\/      to type unit    uint64         ClassReferenceSig$/;"	t
unit	./debug/dwarf/typeunit.go	/^				b.error("type unit abbrev offset overflow")$/;"	t
unit	./debug/dwarf/typeunit.go	/^				b.error("type unit type offset overflow")$/;"	t
unit	./debug/dwarf/typeunit.go	/^			b.error("type unit length overflow")$/;"	t
unit	./debug/dwarf/typeunit.go	/^		return nil, fmt.Errorf("no type unit with signature %v", sig)$/;"	t
unit	./debug/dwarf/typeunit.go	/^\/\/ AddressSize returns the size in bytes of addresses in the current type unit.$/;"	t
unit	./debug/dwarf/typeunit.go	/^\/\/ Next reads the next Entry from the type unit.$/;"	t
unit	./debug/dwarf/typeunit.go	/^\/\/ Seek to a new position in the type unit.$/;"	t
unit	./debug/dwarf/typeunit.go	/^\/\/ clone returns a new reader for the type unit.$/;"	t
unit	./debug/dwarf/typeunit.go	/^\/\/ type unit defines a single primary type and an 8-byte signature.$/;"	t
unit	./debug/dwarf/unit.go	/^type unit struct {$/;"	t
unitLength	./debug/dwarf/buf.go	/^func (b *buf) unitLength() (length Offset, dwarf64 bool) {$/;"	f
unitMap	./time/format.go	/^var unitMap = map[string]int64{$/;"	v
unitend	./cmd/link/internal/ld/dwarf.go	/^	var unitend int64$/;"	v
units	./debug/dwarf/typeunit.go	/^\/\/ Parse the type units stored in a DWARF4 .debug_types section.  Each$/;"	t
unitstart	./cmd/link/internal/ld/dwarf.go	/^	var unitstart int64$/;"	v
unixAbs	./path/filepath/path.go	/^func unixAbs(path string) (string, error) {$/;"	f
unixAndUnixpacketServerTests	./net/server_test.go	/^var unixAndUnixpacketServerTests = []struct {$/;"	v
unixEpochTime	./net/http/fs.go	/^var unixEpochTime = time.Unix(0, 0)$/;"	v
unixIsEAGAIN	./crypto/rand/eagain.go	/^func unixIsEAGAIN(err error) bool {$/;"	f
unixModeToFileMode	./archive/zip/struct.go	/^func unixModeToFileMode(m uint32) os.FileMode {$/;"	f
unixSocket	./net/unixsock_posix.go	/^func unixSocket(net string, laddr, raddr sockaddr, mode string, deadline time.Time) (*netFD, error) {$/;"	f
unixSyslog	./log/syslog/syslog_unix.go	/^func unixSyslog() (conn serverConn, err error) {$/;"	f
unixgramServerTests	./net/server_test.go	/^var unixgramServerTests = []struct {$/;"	v
unixnano	./runtime/os1_windows.go	/^func unixnano() int64 {$/;"	f
unixnanotime	./runtime/stubs.go	/^func unixnanotime() int64 {$/;"	f
unixsegments	./go/scanner/scanner_test.go	/^var unixsegments = []segment{$/;"	v
unixsplittests	./path/filepath/path_test.go	/^var unixsplittests = []SplitTest{$/;"	v
unknownFormat	./debug/dwarf/buf.go	/^type unknownFormat struct{}$/;"	t
unknownType	./fmt/print.go	/^func (p *pp) unknownType(v reflect.Value) {$/;"	f
unless	./go/internal/gcimporter/gcimporter.go	/^	\/\/ add method to type unless type was imported before$/;"	t
unlink	./syscall/fs_nacl.go	/^func unlink(path string, isdir bool) error {$/;"	f
unlinkat	./syscall/zsyscall_linux_386.go	/^func unlinkat(dirfd int, path string, flags int) (err error) {$/;"	f
unlinkat	./syscall/zsyscall_linux_amd64.go	/^func unlinkat(dirfd int, path string, flags int) (err error) {$/;"	f
unlinkat	./syscall/zsyscall_linux_arm.go	/^func unlinkat(dirfd int, path string, flags int) (err error) {$/;"	f
unlinkat	./syscall/zsyscall_linux_arm64.go	/^func unlinkat(dirfd int, path string, flags int) (err error) {$/;"	f
unlinkat	./syscall/zsyscall_linux_ppc64.go	/^func unlinkat(dirfd int, path string, flags int) (err error) {$/;"	f
unlinkat	./syscall/zsyscall_linux_ppc64le.go	/^func unlinkat(dirfd int, path string, flags int) (err error) {$/;"	f
unlinkedprog	./cmd/compile/internal/gc/plive.go	/^func unlinkedprog(as int) *obj.Prog {$/;"	f
unlock	./runtime/lock_futex.go	/^func unlock(l *mutex) {$/;"	f
unlock	./runtime/lock_sema.go	/^func unlock(l *mutex) {$/;"	f
unlockOSThread	./runtime/proc1.go	/^func unlockOSThread() {$/;"	f
unlockProfiles	./runtime/pprof/pprof.go	/^func unlockProfiles() {$/;"	f
unlockextra	./runtime/proc1.go	/^func unlockextra(mp *m) {$/;"	f
unmappedzero	./cmd/compile/internal/x86/gsubr.go	/^var unmappedzero uint32 = 4096$/;"	v
unmarkImplicit	./cmd/internal/rsc.io/x86/x86asm/gnu.go	/^func unmarkImplicit(inst *Inst, prefix Prefix) {$/;"	f
unmarshal	./cmd/pprof/internal/profile/proto.go	/^func unmarshal(data []byte, m message) (err error) {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *certificateMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *certificateRequestMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *certificateStatusMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *certificateVerifyMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *clientHelloMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *clientKeyExchangeMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *finishedMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *newSessionTicketMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *nextProtoMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *serverHelloDoneMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *serverHelloMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/handshake_messages.go	/^func (m *serverKeyExchangeMsg) unmarshal(data []byte) bool {$/;"	f
unmarshal	./crypto/tls/ticket.go	/^func (s *sessionState) unmarshal(data []byte) bool {$/;"	f
unmarshal	./encoding/json/decode.go	/^func (d *decodeState) unmarshal(v interface{}) (err error) {$/;"	f
unmarshal	./encoding/xml/read.go	/^func (p *Decoder) unmarshal(val reflect.Value, start *StartElement) error {$/;"	f
unmarshalAttr	./encoding/xml/read.go	/^func (p *Decoder) unmarshalAttr(val reflect.Value, attr Attr) error {$/;"	f
unmarshalInterface	./encoding/xml/read.go	/^func (p *Decoder) unmarshalInterface(val Unmarshaler, start *StartElement) error {$/;"	f
unmarshalPath	./encoding/xml/read.go	/^func (p *Decoder) unmarshalPath(tinfo *typeInfo, sv reflect.Value, parents []string, start *StartElement) (consumed bool, err error) {$/;"	f
unmarshalSyntaxTests	./encoding/json/decode_test.go	/^var unmarshalSyntaxTests = []string{$/;"	v
unmarshalTest	./encoding/json/decode_test.go	/^type unmarshalTest struct {$/;"	t
unmarshalTestData	./encoding/asn1/asn1_test.go	/^var unmarshalTestData = []struct {$/;"	v
unmarshalTests	./encoding/json/decode_test.go	/^var unmarshalTests = []unmarshalTest{$/;"	v
unmarshalTextInterface	./encoding/xml/read.go	/^func (p *Decoder) unmarshalTextInterface(val encoding.TextUnmarshaler, start *StartElement) error {$/;"	f
unmarshalUDPHeader	./net/udpsock_plan9.go	/^func unmarshalUDPHeader(b []byte) (*udpHeader, []byte) {$/;"	f
unmarshaler	./encoding/json/decode_test.go	/^type unmarshaler struct {$/;"	t
unmarshalerText	./encoding/json/decode_test.go	/^type unmarshalerText struct {$/;"	t
unmatchedLines	./cmd/pprof/internal/profile/filter.go	/^func (loc *Location) unmatchedLines(re *regexp.Regexp) []Line {$/;"	f
unminit	./runtime/os1_darwin.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_dragonfly.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_freebsd.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_linux.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_nacl.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_netbsd.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_openbsd.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_plan9.go	/^func unminit() {$/;"	f
unminit	./runtime/os1_windows.go	/^func unminit() {$/;"	f
unminit	./runtime/os3_solaris.go	/^func unminit() {$/;"	f
unpack	./go/token/position.go	/^func (f *File) unpack(offset int, adjusted bool) (filename string, line, column int) {$/;"	f
unpack	./go/types/call.go	/^func unpack(get getter, n int, allowCommaOk bool) (getter, int, bool) {$/;"	f
unpack	./syscall/srpc_nacl.go	/^func (m *msg) unpack() error {$/;"	f
unpackDomainName	./net/dnsmsg.go	/^func unpackDomainName(msg []byte, off int) (s string, off1 int, ok bool) {$/;"	f
unpackEface	./reflect/value.go	/^func unpackEface(i interface{}) Value {$/;"	f
unpackRR	./net/dnsmsg.go	/^func unpackRR(msg []byte, off int) (rr dnsRR, off1 int, ok bool) {$/;"	f
unpackStruct	./net/dnsmsg.go	/^func unpackStruct(any dnsStruct, msg []byte, off int) (off1 int, ok bool) {$/;"	f
unpackcmd	./cmd/link/internal/ld/ldmacho.go	/^func unpackcmd(p []byte, m *LdMachoObj, c *LdMachoCmd, type_ uint, sz uint) int {$/;"	f
unparen	./cmd/vet/bool.go	/^func unparen(e ast.Expr) ast.Expr {$/;"	f
unparen	./go/parser/parser.go	/^func unparen(x ast.Expr) ast.Expr {$/;"	f
unparen	./go/printer/testdata/parser.go	/^func unparen(x ast.Expr) ast.Expr {$/;"	f
unparen	./go/types/builtins.go	/^func unparen(e ast.Expr) ast.Expr {$/;"	f
unpatch	./cmd/compile/internal/gc/gsubr.go	/^func unpatch(p *obj.Prog) *obj.Prog {$/;"	f
unquote	./cmd/cover/cover.go	/^func unquote(s string) string {$/;"	f
unquote	./encoding/json/decode.go	/^func unquote(s []byte) (t string, ok bool) {$/;"	f
unquoteBytes	./encoding/json/decode.go	/^func unquoteBytes(s []byte) (t []byte, ok bool) {$/;"	f
unquotedValue	./encoding/json/decode.go	/^type unquotedValue struct{}$/;"	t
unquotetests	./strconv/quote_test.go	/^var unquotetests = []unQuoteTest{$/;"	v
unreachable	./go/types/errors.go	/^func unreachable() {$/;"	f
unread	./fmt/scan.go	/^func (r *readRune) unread(buf []byte) {$/;"	f
unreadByteStuffedByte	./image/jpeg/reader.go	/^func (d *decoder) unreadByteStuffedByte() {$/;"	f
unreadDataSizeLocked	./net/http/transfer.go	/^func (b *body) unreadDataSizeLocked() int64 {$/;"	f
unregisterAllDrivers	./database/sql/sql.go	/^func unregisterAllDrivers() {$/;"	f
unresolved	./go/parser/parser.go	/^var unresolved = new(ast.Object)$/;"	v
unresolved	./go/printer/testdata/parser.go	/^var unresolved = new(ast.Object)$/;"	v
unsafe	./cmd/compile/internal/gc/subr.go	/^	\/\/ an unexported field of type unsafe.Pointer.$/;"	t
unsafe	./cmd/compile/internal/gc/walk.go	/^		\/\/ an unexported field of type unsafe.Pointer.$/;"	t
unsafe_New	./reflect/value.go	/^func unsafe_New(*rtype) unsafe.Pointer$/;"	f
unsafe_NewArray	./reflect/value.go	/^func unsafe_NewArray(*rtype, int) unsafe.Pointer$/;"	f
unsafenmagic	./cmd/compile/internal/gc/unsafe.go	/^func unsafenmagic(nn *Node) *Node {$/;"	f
unsafepkg	./cmd/compile/internal/gc/go.go	/^var unsafepkg *Pkg \/\/ package unsafe$/;"	v
unscaledQuant	./image/jpeg/writer.go	/^var unscaledQuant = [nQuantIndex][blockSize]byte{$/;"	v
unscaledQuantInNaturalOrder	./image/jpeg/writer_test.go	/^var unscaledQuantInNaturalOrder = [nQuantIndex][blockSize]byte{$/;"	v
unsetenv	./cmd/go/go_test.go	/^func (tg *testgoData) unsetenv(name string) {$/;"	f
unsetenv_c	./syscall/env_unix.go	/^func unsetenv_c(k string)$/;"	f
unsignedResult	./encoding/gob/codec_test.go	/^var unsignedResult = []byte{0x07, 17}$/;"	v
unspecified	./regexp/testdata/testregex.c	/^	int		unspecified;$/;"	m	struct:__anon2	file:
unsupported	./cmd/internal/rsc.io/arm/armasm/objdump_test.go	/^var unsupported = strings.Fields(`$/;"	v
unsupported	./cmd/internal/rsc.io/x86/x86asm/objdump_test.go	/^var unsupported = strings.Fields(`$/;"	v
unsupported	./regexp/testdata/testregex.c	/^static const char* unsupported[] =$/;"	v	file:
unsupportedTypeEncoder	./encoding/json/encode.go	/^func unsupportedTypeEncoder(e *encodeState, v reflect.Value, quoted bool) {$/;"	f
unsupportedValues	./encoding/gob/encoder_test.go	/^var unsupportedValues = []interface{}{$/;"	v
unsupportedValues	./encoding/json/encode_test.go	/^var unsupportedValues = []interface{}{$/;"	v
untarTest	./archive/tar/reader_test.go	/^type untarTest struct {$/;"	t
untarTests	./archive/tar/reader_test.go	/^var untarTests = []*untarTest{$/;"	v
until	./encoding/gob/type.go	/^	\/\/ dereferencing to the base type until we find an implementation.$/;"	t
unusedFuncs	./cmd/vet/unused.go	/^var unusedFuncs = make(map[string]bool)$/;"	v
unusedFuncsFlag	./cmd/vet/unused.go	/^var unusedFuncsFlag = flag.String("unusedfuncs",$/;"	v
unusedImports	./go/types/resolver.go	/^func (check *Checker) unusedImports() {$/;"	f
unusedStringMethods	./cmd/vet/unused.go	/^var unusedStringMethods = make(map[string]bool)$/;"	v
unusedStringMethodsFlag	./cmd/vet/unused.go	/^var unusedStringMethodsFlag = flag.String("unusedstringmethods",$/;"	v
unwindm	./runtime/cgocall.go	/^func unwindm(restore *bool) {$/;"	f
unzig	./image/jpeg/reader.go	/^var unzig = [blockSize]int{$/;"	v
unzip	./syscall/unzip_nacl.go	/^func unzip(data string) {$/;"	f
up	./cmd/vet/testdata/print.go	/^	var up unsafe.Pointer$/;"	v
up	./container/heap/heap.go	/^func up(h Interface, j int) {$/;"	f
upcomingHeaderNewlines	./net/textproto/reader.go	/^func (r *Reader) upcomingHeaderNewlines() (n int) {$/;"	f
update	./cmd/gofmt/gofmt_test.go	/^var update = flag.Bool("update", false, "update .golden files")$/;"	v
update	./container/heap/example_pq_test.go	/^func (pq *PriorityQueue) update(item *Item, value string, priority int) {$/;"	f
update	./crypto/cipher/gcm.go	/^func (g *gcm) update(y *gcmFieldElement, data []byte) {$/;"	f
update	./crypto/tls/handshake_test.go	/^var update = flag.Bool("update", false, "update golden files on disk")$/;"	v
update	./encoding/gob/encode.go	/^func (state *encoderState) update(instr *encInstr) {$/;"	f
update	./go/doc/doc_test.go	/^var update = flag.Bool("update", false, "update golden (.out) files")$/;"	v
update	./go/printer/printer_test.go	/^var update = flag.Bool("update", false, "update golden files")$/;"	v
update	./hash/adler32/adler32.go	/^func update(d digest, p []byte) digest {$/;"	f
update	./hash/crc32/crc32.go	/^func update(crc uint32, tab *Table, p []byte) uint32 {$/;"	f
update	./hash/crc64/crc64.go	/^func update(crc uint64, tab *Table, p []byte) uint64 {$/;"	f
updateAndDeleteTests	./net/http/cookiejar/jar_test.go	/^var updateAndDeleteTests = [...]jarTest{$/;"	v
updateAutoComplete	./cmd/pprof/internal/driver/interactive.go	/^func updateAutoComplete(p *profile.Profile) {$/;"	f
updateBlocks	./crypto/cipher/gcm.go	/^func (g *gcm) updateBlocks(y *gcmFieldElement, blocks []byte) {$/;"	f
updateCRC	./compress/bzip2/bzip2.go	/^func updateCRC(val uint32, b []byte) uint32 {$/;"	f
updateCastagnoli	./hash/crc32/crc32_amd64x.go	/^func updateCastagnoli(crc uint32, p []byte) uint32 {$/;"	f
updateCastagnoli	./hash/crc32/crc32_generic.go	/^func updateCastagnoli(crc uint32, p []byte) uint32 {$/;"	f
updateEnv	./os/exec/lp_windows_test.go	/^func updateEnv(env []string, name, value string) []string {$/;"	f
updateExprType	./go/types/expr.go	/^func (check *Checker) updateExprType(x ast.Expr, typ Type, final bool) {$/;"	f
updateExprVal	./go/types/expr.go	/^func (check *Checker) updateExprVal(x ast.Expr, val constant.Value) {$/;"	f
updateFile	./debug/dwarf/line.go	/^func (r *LineReader) updateFile() {$/;"	f
updateGroups	./index/suffixarray/qsufsort.go	/^func (x *suffixSortable) updateGroups(offset int) {$/;"	f
updateKeys	./expvar/expvar.go	/^func (v *Map) updateKeys() {$/;"	f
updateResolvConfTests	./net/dnsclient_unix_test.go	/^var updateResolvConfTests = []struct {$/;"	v
updateSlicingBy8	./hash/crc32/crc32.go	/^func updateSlicingBy8(crc uint32, tab *slicing8Table, p []byte) uint32 {$/;"	f
updateWidth	./text/tabwriter/tabwriter.go	/^func (b *Writer) updateWidth() {$/;"	f
updatememstats	./runtime/mstats.go	/^func updatememstats(stats *gcstats) {$/;"	f
updatesigmask	./runtime/os1_darwin.go	/^func updatesigmask(m sigmask) {$/;"	f
updatesigmask	./runtime/os1_dragonfly.go	/^func updatesigmask(m sigmask) {$/;"	f
updatesigmask	./runtime/os1_freebsd.go	/^func updatesigmask(m [(_NSIG + 31) \/ 32]uint32) {$/;"	f
updatesigmask	./runtime/os1_linux.go	/^func updatesigmask(m sigmask) {$/;"	f
updatesigmask	./runtime/os1_netbsd.go	/^func updatesigmask(m sigmask) {$/;"	f
updatesigmask	./runtime/os1_openbsd.go	/^func updatesigmask(m sigmask) {$/;"	f
updatesigmask	./runtime/os3_solaris.go	/^func updatesigmask(m sigmask) {$/;"	f
upper	./cmd/cgo/gcc.go	/^func upper(s string) string {$/;"	f
upperCaseAndUnderscore	./net/http/cgi/host.go	/^func upperCaseAndUnderscore(r rune) rune {$/;"	f
upperLowerAdjacent	./unicode/maketables.go	/^func (c *caseState) upperLowerAdjacent(d *caseState) bool {$/;"	f
upperTest	./unicode/letter_test.go	/^var upperTest = []rune{$/;"	v
upperTests	./bytes/bytes_test.go	/^var upperTests = []StringTest{$/;"	v
upperTests	./strings/strings_test.go	/^var upperTests = []StringTest{$/;"	v
uquo	./cmd/compile/internal/big/float.go	/^func (z *Float) uquo(x, y *Float) {$/;"	f
uquo	./math/big/float.go	/^func (z *Float) uquo(x, y *Float) {$/;"	f
ur	./cmd/compile/internal/gc/subr.go	/^	var ur int$/;"	v
urandom_dev	./runtime/os1_darwin.go	/^var urandom_dev = []byte("\/dev\/urandom\\x00")$/;"	v
urandom_dev	./runtime/os1_dragonfly.go	/^var urandom_dev = []byte("\/dev\/urandom\\x00")$/;"	v
urandom_dev	./runtime/os1_freebsd.go	/^var urandom_dev = []byte("\/dev\/urandom\\x00")$/;"	v
urandom_dev	./runtime/os1_linux.go	/^var urandom_dev = []byte("\/dev\/urandom\\x00")$/;"	v
urandom_dev	./runtime/os1_netbsd.go	/^var urandom_dev = []byte("\/dev\/urandom\\x00")$/;"	v
urandom_dev	./runtime/os1_openbsd.go	/^var urandom_dev = []byte("\/dev\/urandom\\x00")$/;"	v
urandom_dev	./runtime/os3_solaris.go	/^var urandom_dev = []byte("\/dev\/urandom\\x00")$/;"	v
ureg	./runtime/defs_plan9_386.go	/^type ureg struct {$/;"	t
ureg	./runtime/defs_plan9_amd64.go	/^type ureg struct {$/;"	t
url	./unicode/maketables.go	/^var url = flag.String("url",$/;"	v
urlEscaper	./html/template/url.go	/^func urlEscaper(args ...interface{}) string {$/;"	f
urlFilter	./html/template/url.go	/^func urlFilter(args ...interface{}) string {$/;"	f
urlNormalizer	./html/template/url.go	/^func urlNormalizer(args ...interface{}) string {$/;"	f
urlPart	./html/template/context.go	/^type urlPart uint8$/;"	t
urlPartNames	./html/template/context.go	/^var urlPartNames = [...]string{$/;"	v
urlProcessor	./html/template/url.go	/^func urlProcessor(norm bool, args ...interface{}) string {$/;"	f
urlRef	./encoding/base64/base64_test.go	/^func urlRef(ref string) string {$/;"	f
urls	./sync/example_test.go	/^	var urls = []string{$/;"	v
urltests	./net/url/url_test.go	/^var urltests = []URLTest{$/;"	v
usPacific	./time/zoneinfo_windows.go	/^var usPacific = syscall.Timezoneinformation{$/;"	v
usage	./cmd/addr2line/main.go	/^func usage() {$/;"	f
usage	./cmd/cgo/main.go	/^func usage() {$/;"	f
usage	./cmd/compile/internal/gc/lex.go	/^func usage() {$/;"	f
usage	./cmd/cover/cover.go	/^func usage() {$/;"	f
usage	./cmd/doc/main.go	/^func usage() {$/;"	f
usage	./cmd/fix/main.go	/^func usage() {$/;"	f
usage	./cmd/go/main.go	/^func usage() {$/;"	f
usage	./cmd/gofmt/gofmt.go	/^func usage() {$/;"	f
usage	./cmd/link/internal/ld/lib.go	/^func usage() {$/;"	f
usage	./cmd/nm/nm.go	/^func usage() {$/;"	f
usage	./cmd/objdump/main.go	/^func usage() {$/;"	f
usage	./cmd/pack/pack.go	/^func usage() {$/;"	f
usage	./cmd/pprof/internal/driver/driver.go	/^func (f *flags) usage(ui plugin.UI) {$/;"	f
usage	./cmd/yacc/yacc.go	/^func usage() {$/;"	f
usage	./crypto/x509/x509.go	/^				var usage int$/;"	v
usage	./flag/flag.go	/^func (f *FlagSet) usage() {$/;"	f
usage	./go/types/stmt.go	/^func (check *Checker) usage(scope *Scope) {$/;"	f
usage	./race.bash	/^function usage {$/;"	f
usage	./syscall/mksyscall_windows.go	/^func usage() {$/;"	f
usageBits	./crypto/x509/x509.go	/^				var usageBits asn1.BitString$/;"	v
usageMsg	./cmd/pprof/internal/driver/driver.go	/^var usageMsg = "Output file parameters (for file-based output formats):\\n" +$/;"	v
usageMsgHdr	./cmd/pprof/internal/driver/driver.go	/^var usageMsgHdr = "usage: pprof [options] [binary] <profile source> ...\\n" +$/;"	v
usageMsgVars	./cmd/pprof/internal/driver/driver.go	/^var usageMsgVars = "Environment Variables:\\n" +$/;"	v
usageTemplate	./cmd/go/main.go	/^var usageTemplate = `Go is a tool for managing Go source code.$/;"	v
use	./go/types/call.go	/^func (check *Checker) use(arg ...ast.Expr) {$/;"	f
use	./runtime/syscall_windows_test.go	/^func use(buf []byte) {$/;"	f
use	./syscall/syscall.go	/^func use(p unsafe.Pointer)$/;"	f
useAeshash	./runtime/alg.go	/^var useAeshash bool$/;"	v
useAsm	./crypto/aes/cipher_asm.go	/^var useAsm = hasAsm()$/;"	v
useCheckmark	./runtime/mgcmark.go	/^var useCheckmark = false$/;"	v
useGetter	./go/types/call.go	/^func (check *Checker) useGetter(get getter, n int) {$/;"	f
useLongHandleErrorCode	./syscall/mksyscall_windows.go	/^func (r *Rets) useLongHandleErrorCode(retvar string) string {$/;"	f
useProxy	./net/http/transport.go	/^func useProxy(addr string) bool {$/;"	f
useQprint	./mime/quotedprintable/reader_test.go	/^var useQprint = flag.Bool("qprint", false, "Compare against the 'qprint' program.")$/;"	v
useStack	./reflect/all_test.go	/^func useStack(n int) {$/;"	f
useStack	./runtime/stack_test.go	/^func useStack(n int) {$/;"	f
useStackAndCall	./runtime/stack_test.go	/^func useStackAndCall(n int, f func()) {$/;"	f
useSyscallwd	./os/getwd.go	/^var useSyscallwd = func(error) bool { return true }$/;"	v
useSyscallwdDarwin	./os/getwd_darwin.go	/^func useSyscallwdDarwin(err error) bool {$/;"	f
useVar	./text/template/parse/parse.go	/^func (t *Tree) useVar(pos Pos, name string) Node {$/;"	f
use_exp	./math/expm1_386.s	/^use_exp:$/;"	l
use_fyl2x	./math/log1p_386.s	/^use_fyl2x:$/;"	l
use_writebarrier	./cmd/compile/internal/gc/go.go	/^var use_writebarrier int$/;"	v
used	./cmd/cgo/doc.go	/^expose C types in its exported API: a C type used in one Go package$/;"	t
used	./cmd/cgo/doc.go	/^is different from the same C type used in another.$/;"	t
used	./cmd/compile/internal/big/bits_test.go	/^\/\/ This file implements the Bits type used for testing Float operations$/;"	t
used	./cmd/compile/internal/gc/gen.go	/^	byteptr := Ptrto(Types[TUINT8]) \/\/ type used in runtime prototypes for runtime type (*byte)$/;"	t
used	./go/types/stmt.go	/^			var used bool$/;"	v
used	./image/gif/reader.go	/^\/\/ decoder is the type used to decode a GIF file.$/;"	t
used	./internal/trace/parser.go	/^\/\/ rawEvent is a helper type used during parsing.$/;"	t
used	./math/big/bits_test.go	/^\/\/ This file implements the Bits type used for testing Float operations$/;"	t
used	./net/http/transport.go	/^	earlyCloseFn func() error      \/\/ optional alt Close func used if io.EOF not seen$/;"	f
used	./runtime/syscall_windows_test.go	/^var used byte$/;"	v
usedreg	./cmd/compile/internal/gc/reg.go	/^	var usedreg uint64$/;"	v
usefield	./cmd/compile/internal/gc/walk.go	/^func usefield(n *Node) {$/;"	f
useful	./encoding/encoding.go	/^\/\/ interface once can make a type useful in multiple encodings.$/;"	t
user	./net/url/url_test.go	/^	var user, pass interface{}$/;"	v
userTime	./os/exec_plan9.go	/^func (p *ProcessState) userTime() time.Duration {$/;"	f
userTime	./os/exec_unix.go	/^func (p *ProcessState) userTime() time.Duration {$/;"	f
userTime	./os/exec_windows.go	/^func (p *ProcessState) userTime() time.Duration {$/;"	f
userType	./encoding/gob/type.go	/^func userType(rt reflect.Type) *userTypeInfo {$/;"	f
userTypeInfo	./encoding/gob/type.go	/^type userTypeInfo struct {$/;"	t
userinfoTests	./net/url/url_test.go	/^\/\/var userinfoTests = []UserinfoTest{$/;"	v
username	./database/sql/example_test.go	/^	var username string$/;"	v
usesCgo	./cmd/go/pkg.go	/^func (p *Package) usesCgo() bool {$/;"	f
usesImport	./cmd/fix/fix.go	/^func usesImport(f *ast.File, path string) (used bool) {$/;"	f
usesSwig	./cmd/go/pkg.go	/^func (p *Package) usesSwig() bool {$/;"	f
usigset	./runtime/defs_linux_amd64.go	/^type usigset struct {$/;"	t
usigset	./runtime/defs_linux_arm64.go	/^type usigset struct {$/;"	t
using	./sort/example_keys_test.go	/^\/\/ ExampleSortKeys demonstrates a technique for sorting a struct type using programmable sort criteria.$/;"	t
using	./sort/example_multi_test.go	/^\/\/ ExampleMultiKeys demonstrates a technique for sorting a struct type using different$/;"	t
usleep	./runtime/os1_nacl.go	/^func usleep(us uint32) {$/;"	f
usleep	./runtime/os1_plan9.go	/^func usleep(µs uint32) {$/;"	f
usleep	./runtime/os1_windows.go	/^func usleep(us uint32) {$/;"	f
usleep	./runtime/os3_solaris.go	/^func usleep(µs uint32) {$/;"	f
usleep	./runtime/stubs2.go	/^func usleep(usec uint32)$/;"	f
usleep1	./runtime/os1_windows.go	/^func usleep1(usec uint32)$/;"	f
usleep1	./runtime/os3_solaris.go	/^func usleep1(uint32)$/;"	f
usplit	./runtime/sys_arm.go	/^func usplit(x uint32) (q, r uint32)$/;"	f
ustruct	./encoding/json/decode_test.go	/^type ustruct struct {$/;"	t
ustructText	./encoding/json/decode_test.go	/^type ustructText struct {$/;"	t
usually	./net/net.go	/^\/\/ OpError is the error type usually returned by functions in the net$/;"	t
usub	./cmd/compile/internal/big/float.go	/^func (z *Float) usub(x, y *Float) {$/;"	f
usub	./math/big/float.go	/^func (z *Float) usub(x, y *Float) {$/;"	f
utcLoc	./time/zoneinfo.go	/^var utcLoc = Location{name: "UTC"}$/;"	v
utcTestData	./encoding/asn1/asn1_test.go	/^var utcTestData = []timeTest{$/;"	v
utctests	./time/time_test.go	/^var utctests = []TimeTest{$/;"	v
utf8map	./unicode/utf8/utf8_test.go	/^var utf8map = []Utf8Map{$/;"	v
utimensat	./syscall/zsyscall_linux_386.go	/^func utimensat(dirfd int, path string, times *[2]Timespec) (err error) {$/;"	f
utimensat	./syscall/zsyscall_linux_amd64.go	/^func utimensat(dirfd int, path string, times *[2]Timespec) (err error) {$/;"	f
utimensat	./syscall/zsyscall_linux_arm.go	/^func utimensat(dirfd int, path string, times *[2]Timespec) (err error) {$/;"	f
utimensat	./syscall/zsyscall_linux_arm64.go	/^func utimensat(dirfd int, path string, times *[2]Timespec) (err error) {$/;"	f
utimensat	./syscall/zsyscall_linux_ppc64.go	/^func utimensat(dirfd int, path string, times *[2]Timespec) (err error) {$/;"	f
utimensat	./syscall/zsyscall_linux_ppc64le.go	/^func utimensat(dirfd int, path string, times *[2]Timespec) (err error) {$/;"	f
utimes	./os/file_posix.go	/^	var utimes [2]syscall.Timespec$/;"	v
utimes	./syscall/zsyscall_darwin_386.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_darwin_amd64.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_darwin_arm.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_darwin_arm64.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_dragonfly_amd64.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_freebsd_386.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_freebsd_amd64.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_freebsd_arm.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_linux_386.go	/^func utimes(path string, times *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_linux_amd64.go	/^func utimes(path string, times *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_linux_arm.go	/^func utimes(path string, times *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_linux_arm64.go	/^func utimes(path string, times *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_linux_ppc64.go	/^func utimes(path string, times *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_linux_ppc64le.go	/^func utimes(path string, times *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_netbsd_386.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_netbsd_amd64.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_netbsd_arm.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_openbsd_386.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_openbsd_amd64.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
utimes	./syscall/zsyscall_openbsd_arm.go	/^func utimes(path string, timeval *[2]Timeval) (err error) {$/;"	f
uv	./cmd/pprof/internal/driver/interactive.go	/^	var uv uint64$/;"	v
v1	./cmd/compile/internal/gc/popt.go	/^	var v1 *TempVar$/;"	v
v1	./cmd/compile/internal/gc/range.go	/^	var v1 *Node$/;"	v
v1	./cmd/compile/internal/gc/reg.go	/^	var v1 *Var$/;"	v
v1	./cmd/pprof/internal/profile/legacy_profile.go	/^	var v1, v2 int64$/;"	v
v1	./go/types/eval_test.go	/^		var v1 \/* v1 => , int *\/ = 42$/;"	v
v2	./cmd/compile/internal/gc/range.go	/^	var v2 *Node$/;"	v
v4InV6Prefix	./net/ip.go	/^var v4InV6Prefix = []byte{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff}$/;"	v
v_used	./go/types/assignments.go	/^	var v_used bool$/;"	v
vaddr	./cmd/internal/obj/x86/asm6.go	/^func vaddr(ctxt *obj.Link, p *obj.Prog, a *obj.Addr, r *obj.Reloc) int64 {$/;"	f
val	./cmd/compile/internal/gc/sinit.go	/^	var val *Node$/;"	v
val	./cmd/compile/internal/gc/unsafe.go	/^	var val Val$/;"	v
val	./cmd/link/internal/ld/pcln.go	/^	var val int32$/;"	v
val	./cmd/link/internal/ld/pe.go	/^	var val uint32$/;"	v
val	./database/sql/fakedb_test.go	/^		var val interface{}$/;"	v
val	./debug/dwarf/entry.go	/^		var val interface{}$/;"	v
val	./debug/dwarf/testdata/typedef.c	/^	short val;$/;"	m	struct:list	file:
val	./debug/dwarf/testdata/typedef.c	/^	unsigned long long val;$/;"	m	struct:tree	file:
val	./encoding/json/stream_test.go	/^		var val interface{}$/;"	v
val	./expvar/expvar_test.go	/^func (v *Float) val() float64 {$/;"	f
val	./go/constant/value.go	/^	var val *big.Int$/;"	v
val	./go/constant/value_test.go	/^func val(lit string) Value {$/;"	f
val	./go/internal/gcimporter/gcimporter.go	/^	var val exact.Value$/;"	v
val	./go/types/builtins.go	/^		var val constant.Value$/;"	v
val	./go/types/expr.go	/^	var val constant.Value$/;"	v
val	./math/rand/regress_test.go	/^				var val string$/;"	v
val	./reflect/all_test.go	/^			var val Value$/;"	v
val	./sync/atomic/atomic_test.go	/^		var val uint32$/;"	v
val	./sync/atomic/atomic_test.go	/^		var val uint64$/;"	v
valIndex	./go/types/initorder.go	/^func valIndex(a []*objNode) int {$/;"	f
valid	./crypto/x509/verify.go	/^	var valid string$/;"	v
valid	./encoding/gob/encode.go	/^func valid(v reflect.Value) bool {$/;"	f
validCookieDomain	./net/http/cookie.go	/^func validCookieDomain(v string) bool {$/;"	f
validCookiePathByte	./net/http/cookie.go	/^func validCookiePathByte(b byte) bool {$/;"	f
validCookieValueByte	./net/http/cookie.go	/^func validCookieValueByte(b byte) bool {$/;"	f
validEncodedPath	./net/url/url.go	/^func validEncodedPath(s string) bool {$/;"	f
validFiles	./go/parser/parser_test.go	/^var validFiles = []string{$/;"	v
validHeaderFieldByte	./net/textproto/reader.go	/^func validHeaderFieldByte(b byte) bool {$/;"	f
validID	./regexp/example_test.go	/^	var validID = regexp.MustCompile(`^[a-z]+\\[[0-9]+\\]$`)$/;"	v
validNPN	./net/http/server.go	/^func validNPN(proto string) bool {$/;"	f
validOptionalPort	./net/url/url.go	/^func validOptionalPort(port string) bool {$/;"	f
validRecs	./net/lookup_windows.go	/^func validRecs(r *syscall.DNSRecord, dnstype uint16, name string) []*syscall.DNSRecord {$/;"	f
validSymType	./cmd/internal/objfile/plan9obj.go	/^var validSymType = map[rune]bool{$/;"	v
validTests	./unicode/utf8/utf8_test.go	/^var validTests = []ValidTest{$/;"	v
validUserType	./encoding/gob/type.go	/^func validUserType(rt reflect.Type) (ut *userTypeInfo, err error) {$/;"	f
validate	./cmd/compile/internal/big/float.go	/^func (x *Float) validate() {$/;"	f
validate	./math/big/float.go	/^func (x *Float) validate() {$/;"	f
validateBinaryOperands	./cmd/compile/internal/big/float.go	/^func validateBinaryOperands(x, y *Float) {$/;"	f
validateBinaryOperands	./math/big/float.go	/^func validateBinaryOperands(x, y *Float) {$/;"	f
validateImmediate	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) validateImmediate(pseudo string, addr *obj.Addr) {$/;"	f
validateRegex	./cmd/pprof/internal/driver/interactive.go	/^func validateRegex(v string) error {$/;"	f
validateStructTag	./cmd/vet/structtag.go	/^func validateStructTag(tag string) error {$/;"	f
validateSymbol	./cmd/asm/internal/asm/asm.go	/^func (p *Parser) validateSymbol(pseudo string, addr *obj.Addr, offsetOk bool) {$/;"	f
validateTestMultipartContents	./net/http/request_test.go	/^func validateTestMultipartContents(t *testing.T, req *Request, allMem bool) {$/;"	f
validateType	./text/template/exec.go	/^func (s *state) validateType(value reflect.Value, typ reflect.Type) reflect.Value {$/;"	f
validatedImportPath	./go/types/resolver.go	/^func validatedImportPath(path string) (string, error) {$/;"	f
validity	./crypto/x509/x509.go	/^type validity struct {$/;"	t
validrunetests	./unicode/utf8/utf8_test.go	/^var validrunetests = []ValidRuneTest{$/;"	v
valids	./go/parser/short_test.go	/^var valids = []string{$/;"	v
valsize	./cmd/link/internal/ld/dwarf.go	/^	var valsize int$/;"	v
valtype	./cmd/link/internal/ld/dwarf.go	/^	var valtype *DWDie$/;"	v
value	./cmd/compile/internal/gc/cgen.go	/^		\/\/ go\/defer. generate go func value.$/;"	f
value	./cmd/compile/internal/gc/cgen.go	/^  *	proc=3	normal call to C pointer (not Go func value)$/;"	f
value	./cmd/compile/internal/gc/sinit.go	/^		var value *Node$/;"	v
value	./cmd/compile/internal/gc/sinit.go	/^	var value *Node$/;"	v
value	./cmd/compile/internal/gc/syntax.go	/^	OCFUNC      \/\/ reference to c function pointer (not go func value)$/;"	f
value	./cmd/link/internal/ld/dwarf.go	/^	var value int64$/;"	v
value	./cmd/pprof/internal/driver/interactive.go	/^	var value string$/;"	v
value	./compress/flate/huffman_bit_writer.go	/^	var value int32 = 2$/;"	v
value	./encoding/binary/binary.go	/^func (d *decoder) value(v reflect.Value) {$/;"	f
value	./encoding/binary/binary.go	/^func (e *encoder) value(v reflect.Value) {$/;"	f
value	./encoding/gob/debug.go	/^func (deb *debugger) value(indent tab, id typeId) {$/;"	f
value	./encoding/json/decode.go	/^func (d *decodeState) value(v reflect.Value) {$/;"	f
value	./encoding/xml/typeinfo.go	/^func (finfo *fieldInfo) value(v reflect.Value) reflect.Value {$/;"	f
value	./image/color/color.go	/^	\/\/ we use the func value directly, because funcs$/;"	f
value	./mime/mediatype.go	/^\/\/ ParseMediaType parses a media type value and any optional$/;"	t
value	./reflect/makefunc.go	/^	\/\/ Indirect Go func value (dummy) to obtain$/;"	f
value	./reflect/makefunc.go	/^	\/\/ actual code address. (A Go func value is a pointer$/;"	f
value	./reflect/makefunc.go	/^\/\/ func value - a value holding an actual func. The output is$/;"	f
value	./reflect/makefunc.go	/^\/\/ of a method value to an actual method func value, which is$/;"	f
value	./reflect/value.go	/^		\/\/ Non-nil func value points at data block.$/;"	f
value	./runtime/crash_test.go	/^	want := "go of nil func value"$/;"	f
value	./runtime/proc.go	/^\/\/ It assumes that f is a func value. Otherwise the behavior is undefined.$/;"	f
value	./runtime/proc1.go	/^		throw("go of nil func value")$/;"	f
value	./syscall/syscall_bsd.go	/^	var value ICMPv6Filter$/;"	v
value	./syscall/syscall_bsd.go	/^	var value IPMreq$/;"	v
value	./syscall/syscall_bsd.go	/^	var value IPv6MTUInfo$/;"	v
value	./syscall/syscall_bsd.go	/^	var value IPv6Mreq$/;"	v
value	./syscall/syscall_freebsd.go	/^	var value IPMreqn$/;"	v
value	./syscall/syscall_linux.go	/^	var value ICMPv6Filter$/;"	v
value	./syscall/syscall_linux.go	/^	var value IPMreq$/;"	v
value	./syscall/syscall_linux.go	/^	var value IPMreqn$/;"	v
value	./syscall/syscall_linux.go	/^	var value IPv6MTUInfo$/;"	v
value	./syscall/syscall_linux.go	/^	var value IPv6Mreq$/;"	v
value	./syscall/syscall_linux.go	/^	var value Ucred$/;"	v
value	./text/template/exec_test.go	/^	var value = struct{ Str string }{hello}$/;"	v
valueConverterTest	./database/sql/convert_test.go	/^type valueConverterTest struct {$/;"	t
valueConverterTest	./database/sql/driver/types_test.go	/^type valueConverterTest struct {$/;"	t
valueConverterTests	./database/sql/convert_test.go	/^var valueConverterTests = []valueConverterTest{$/;"	v
valueConverterTests	./database/sql/driver/types_test.go	/^var valueConverterTests = []valueConverterTest{$/;"	v
valueEncoder	./encoding/json/encode.go	/^func valueEncoder(v reflect.Value) encoderFunc {$/;"	f
valueExtractor	./cmd/pprof/internal/driver/driver.go	/^func valueExtractor(ix int) sampleValueFunc {$/;"	f
valueInterface	./encoding/json/decode.go	/^func (d *decodeState) valueInterface() interface{} {$/;"	f
valueInterface	./reflect/value.go	/^func valueInterface(v Value, safe bool) interface{} {$/;"	f
valueOrDefault	./net/http/httputil/dump.go	/^func valueOrDefault(value, def string) string {$/;"	f
valueOrDefault	./net/http/request.go	/^func valueOrDefault(value, def string) string {$/;"	f
valueOrDot	./cmd/pprof/internal/report/report.go	/^func valueOrDot(value int64, rpt *Report) string {$/;"	f
valueQuoted	./encoding/json/decode.go	/^func (d *decodeState) valueQuoted() interface{} {$/;"	f
valueSpec	./go/printer/nodes.go	/^func (p *printer) valueSpec(s *ast.ValueSpec, keepType bool) {$/;"	f
valueString	./text/template/exec_test.go	/^func valueString(v string) string {$/;"	f
valueSummary	./cmd/doc/pkg.go	/^func (pkg *Package) valueSummary(values []*doc.Value) {$/;"	f
valueTests	./reflect/all_test.go	/^var valueTests = []pair{$/;"	v
valueToString	./reflect/tostring_test.go	/^func valueToString(val Value) string {$/;"	f
valueToStringTests	./reflect/all_test.go	/^var valueToStringTests = []pair{$/;"	v
valueTypeDecoder	./cmd/pprof/internal/profile/encode.go	/^var valueTypeDecoder = []decoder{$/;"	v
valuecmp	./cmd/link/internal/ld/ldelf.go	/^func valuecmp(a *LSym, b *LSym) int {$/;"	f
values	./cmd/compile/internal/gc/fmt.go	/^\/\/	%E int		etype values (aka 'Kind')$/;"	t
values	./cmd/yacc/yacc.go	/^\/\/ assigned token type values$/;"	t
values	./encoding/gob/encoder_test.go	/^	var values = []interface{}{$/;"	v
values	./fmt/fmt_test.go	/^	var values = []float64{1, 0, -1, math.Inf(1), math.Inf(-1), math.NaN()}$/;"	v
values	./go/constant/value_test.go	/^	var values = []Value{$/;"	v
values	./go/parser/parser.go	/^	var values []ast.Expr$/;"	v
values	./go/printer/testdata/parser.go	/^	var values []ast.Expr$/;"	v
values	./runtime/map_test.go	/^	var values [100]string$/;"	v
varDecl	./go/types/decl.go	/^func (check *Checker) varDecl(obj *Var, lhs []*Var, typ, init ast.Expr) {$/;"	f
varValue	./text/template/exec.go	/^func (s *state) varValue(name string) reflect.Value {$/;"	f
var_	./cmd/compile/internal/gc/select.go	/^	var var_ *Node$/;"	v
vararg	./cmd/compile/internal/gc/inl.go	/^	var vararg *Node      \/\/ the slice argument to a variadic call$/;"	v
varargs	./cmd/compile/internal/gc/inl.go	/^	var varargs *NodeList \/\/ the list of LHS names to put in vararg.$/;"	v
varargtype	./cmd/compile/internal/gc/inl.go	/^	var varargtype *Type$/;"	v
vardcl	./cmd/compile/internal/gc/go.y	/^vardcl:$/;"	l
vardcl_list	./cmd/compile/internal/gc/go.y	/^vardcl_list:$/;"	l
varexpr	./cmd/compile/internal/gc/walk.go	/^func varexpr(n *Node) bool {$/;"	f
vargen	./cmd/compile/internal/gc/dcl.go	/^var vargen int$/;"	v
varhash	./cmd/link/internal/ld/dwarf.go	/^	var varhash [HASHSIZE]*DWDie$/;"	v
variable	./text/template/exec.go	/^type variable struct {$/;"	t
variadic	./go/internal/gcimporter/gcimporter.go	/^		var variadic bool$/;"	v
variant	./cmd/compile/internal/ppc64/prog.go	/^	var variant int$/;"	v
variant2as	./cmd/compile/internal/ppc64/prog.go	/^func variant2as(as int, flags int) int {$/;"	f
varianttable	./cmd/compile/internal/ppc64/prog.go	/^var varianttable = [ppc64.ALAST][4]int{$/;"	v
varint	./cmd/internal/gcprog/gcprog.go	/^func (w *Writer) varint(x int64) {$/;"	f
varint	./debug/dwarf/buf.go	/^func (b *buf) varint() (c uint64, bits uint) {$/;"	f
varintbuf	./cmd/internal/obj/objfile.go	/^var varintbuf [10]uint8$/;"	v
variter	./cmd/compile/internal/gc/dcl.go	/^func variter(vl *NodeList, t *Node, el *NodeList) *NodeList {$/;"	f
varkillwalk	./cmd/compile/internal/gc/popt.go	/^func varkillwalk(v *TempVar, f0 *Flow, gen uint32) {$/;"	f
vars	./cmd/vet/testdata/nilfunc.go	/^		\/\/ no error; these func vars or fields may be nil$/;"	f
vars	./go/types/api_test.go	/^	var vars []string$/;"	v
vars	./go/types/stmt.go	/^			var vars []*Var$/;"	v
vauto	./cmd/compile/internal/gc/sinit.go	/^	\/\/	3. var vauto *[...]t = new([...]t)$/;"	v
vauto	./cmd/compile/internal/gc/sinit.go	/^	\/\/	var vauto *[...]t = new([...]t)$/;"	v
vbar	./text/tabwriter/tabwriter.go	/^var vbar = []byte{'|'}$/;"	v
vc	./math/cmplx/cmath_test.go	/^var vc = []complex128{$/;"	v
vc26	./math/cmplx/cmath_test.go	/^var vc26 = []complex128{$/;"	v
vcAbsSC	./math/cmplx/cmath_test.go	/^var vcAbsSC = []complex128{$/;"	v
vcAcosSC	./math/cmplx/cmath_test.go	/^var vcAcosSC = []complex128{$/;"	v
vcAcoshSC	./math/cmplx/cmath_test.go	/^var vcAcoshSC = []complex128{$/;"	v
vcAsinSC	./math/cmplx/cmath_test.go	/^var vcAsinSC = []complex128{$/;"	v
vcAsinhSC	./math/cmplx/cmath_test.go	/^var vcAsinhSC = []complex128{$/;"	v
vcAtanSC	./math/cmplx/cmath_test.go	/^var vcAtanSC = []complex128{$/;"	v
vcAtanhSC	./math/cmplx/cmath_test.go	/^var vcAtanhSC = []complex128{$/;"	v
vcConjSC	./math/cmplx/cmath_test.go	/^var vcConjSC = []complex128{$/;"	v
vcCosSC	./math/cmplx/cmath_test.go	/^var vcCosSC = []complex128{$/;"	v
vcCoshSC	./math/cmplx/cmath_test.go	/^var vcCoshSC = []complex128{$/;"	v
vcExpSC	./math/cmplx/cmath_test.go	/^var vcExpSC = []complex128{$/;"	v
vcIsNaNSC	./math/cmplx/cmath_test.go	/^var vcIsNaNSC = []complex128{$/;"	v
vcLog10SC	./math/cmplx/cmath_test.go	/^var vcLog10SC = []complex128{$/;"	v
vcLogSC	./math/cmplx/cmath_test.go	/^var vcLogSC = []complex128{$/;"	v
vcPolarSC	./math/cmplx/cmath_test.go	/^var vcPolarSC = []complex128{$/;"	v
vcPowSC	./math/cmplx/cmath_test.go	/^var vcPowSC = [][2]complex128{$/;"	v
vcSinSC	./math/cmplx/cmath_test.go	/^var vcSinSC = []complex128{$/;"	v
vcSinhSC	./math/cmplx/cmath_test.go	/^var vcSinhSC = []complex128{$/;"	v
vcSqrtSC	./math/cmplx/cmath_test.go	/^var vcSqrtSC = []complex128{$/;"	v
vcTanSC	./math/cmplx/cmath_test.go	/^var vcTanSC = []complex128{$/;"	v
vcTanhSC	./math/cmplx/cmath_test.go	/^var vcTanhSC = []complex128{$/;"	v
vcsByCmd	./cmd/go/vcs.go	/^func vcsByCmd(cmd string) *vcsCmd {$/;"	f
vcsBzr	./cmd/go/vcs.go	/^var vcsBzr = &vcsCmd{$/;"	v
vcsCmd	./cmd/go/vcs.go	/^type vcsCmd struct {$/;"	t
vcsForDir	./cmd/go/vcs.go	/^func vcsForDir(p *Package) (vcs *vcsCmd, root string, err error) {$/;"	f
vcsGit	./cmd/go/vcs.go	/^var vcsGit = &vcsCmd{$/;"	v
vcsHg	./cmd/go/vcs.go	/^var vcsHg = &vcsCmd{$/;"	v
vcsList	./cmd/go/vcs.go	/^var vcsList = []*vcsCmd{$/;"	v
vcsPath	./cmd/go/vcs.go	/^type vcsPath struct {$/;"	t
vcsPaths	./cmd/go/vcs.go	/^var vcsPaths = []*vcsPath{$/;"	v
vcsPathsAfterDynamic	./cmd/go/vcs.go	/^var vcsPathsAfterDynamic = []*vcsPath{$/;"	v
vcsSvn	./cmd/go/vcs.go	/^var vcsSvn = &vcsCmd{$/;"	v
vdso_find_version	./runtime/vdso_linux_amd64.go	/^func vdso_find_version(info *vdso_info, ver *version_key) int32 {$/;"	f
vdso_info	./runtime/vdso_linux_amd64.go	/^type vdso_info struct {$/;"	t
vdso_init_from_sysinfo_ehdr	./runtime/vdso_linux_amd64.go	/^func vdso_init_from_sysinfo_ehdr(info *vdso_info, hdr *elf64Ehdr) {$/;"	f
vdso_parse_symbols	./runtime/vdso_linux_amd64.go	/^func vdso_parse_symbols(info *vdso_info, version int32) {$/;"	f
vendorSearch	./cmd/go/pkg.go	/^	var vendorSearch []string$/;"	v
vendored	./cmd/go/pkg.go	/^func (p *Package) vendored(imports []string) []string {$/;"	f
vendoredImportPath	./cmd/go/pkg.go	/^func vendoredImportPath(parent *Package, path string) (found string, searched []string) {$/;"	f
verify	./cmd/cover/testdata/main.go	/^func verify() {$/;"	f
verify	./container/heap/heap_test.go	/^func (h myHeap) verify(t *testing.T, i int) {$/;"	f
verify	./container/ring/ring_test.go	/^func verify(t *testing.T, r *Ring, N int, sum int) {$/;"	f
verify	./go/types/hilbert_test.go	/^func (g *gen) verify(n int) {$/;"	f
verify	./regexp/testdata/testregex.c	/^	int		verify;$/;"	m	struct:__anon2	file:
verify	./text/tabwriter/tabwriter_test.go	/^func verify(t *testing.T, testname string, w *Writer, b *buffer, src, expected string) {$/;"	f
verifyChecksum	./archive/tar/reader.go	/^func (tr *Reader) verifyChecksum(header []byte) bool {$/;"	f
verifyChecksum	./image/png/reader.go	/^func (d *decoder) verifyChecksum() error {$/;"	f
verifyGCBits	./reflect/all_test.go	/^func verifyGCBits(t *testing.T, typ Type, bits []byte) {$/;"	f
verifyGCBitsSlice	./reflect/all_test.go	/^func verifyGCBitsSlice(t *testing.T, typ Type, cap int, bits []byte) {$/;"	f
verifyGCInfo	./runtime/gcinfo_test.go	/^func verifyGCInfo(t *testing.T, name string, p interface{}, mask0 []byte) {$/;"	f
verifyInf	./fmt/scan_test.go	/^func verifyInf(str string, t *testing.T) {$/;"	f
verifyInt	./encoding/gob/codec_test.go	/^func verifyInt(i int64, t *testing.T) {$/;"	f
verifyNaN	./fmt/scan_test.go	/^func verifyNaN(str string, t *testing.T) {$/;"	f
verifyPSS	./crypto/rsa/pss.go	/^func verifyPSS(pub *PublicKey, hash crypto.Hash, hashed []byte, sig []byte, saltLen int) error {$/;"	f
verifyPanic	./cmd/cover/testdata/main.go	/^func verifyPanic() {$/;"	f
verifyPositions	./go/token/position_test.go	/^func verifyPositions(t *testing.T, fset *FileSet, f *File, lines []int) {$/;"	f
verifyRange	./unicode/maketables.go	/^func verifyRange(name string, inCategory Op, table *unicode.RangeTable) {$/;"	f
verifyTest	./crypto/x509/verify_test.go	/^type verifyTest struct {$/;"	t
verifyTests	./crypto/x509/verify_test.go	/^var verifyTests = []verifyTest{$/;"	v
verifyTime	./crypto/x509/root_windows.go	/^	var verifyTime *syscall.Filetime$/;"	v
verneed	./debug/elf/file.go	/^type verneed struct {$/;"	t
version	./debug/dwarf/buf.go	/^func (u unknownFormat) version() int {$/;"	f
version	./debug/dwarf/unit.go	/^func (u *unit) version() int {$/;"	f
version	./net/http/request_test.go	/^			type version struct {$/;"	t
version	./unicode/maketables.go	/^func version() string {$/;"	f
versionStrings	./debug/elf/elf.go	/^var versionStrings = []intName{$/;"	v
version_key	./runtime/vdso_linux_amd64.go	/^type version_key struct {$/;"	t
veryclose	./math/all_test.go	/^func veryclose(a, b float64) bool  { return tolerance(a, b, 4e-16) }$/;"	f
veryclose	./math/cmplx/cmath_test.go	/^func veryclose(a, b float64) bool  { return tolerance(a, b, 4e-16) }$/;"	f
vet	./cmd/vet/main.go	/^func vet(name string) bool {$/;"	f
vf	./math/all_test.go	/^var vf = []float64{$/;"	v
vf	./runtime/sqrt_test.go	/^var vf = []float64{$/;"	v
vfacosSC	./math/all_test.go	/^var vfacosSC = []float64{$/;"	v
vfacoshSC	./math/all_test.go	/^var vfacoshSC = []float64{$/;"	v
vfasinSC	./math/all_test.go	/^var vfasinSC = []float64{$/;"	v
vfasinhSC	./math/all_test.go	/^var vfasinhSC = []float64{$/;"	v
vfatan2SC	./math/all_test.go	/^var vfatan2SC = [][2]float64{$/;"	v
vfatanSC	./math/all_test.go	/^var vfatanSC = []float64{$/;"	v
vfatanhSC	./math/all_test.go	/^var vfatanhSC = []float64{$/;"	v
vfcbrtSC	./math/all_test.go	/^var vfcbrtSC = []float64{$/;"	v
vfceilSC	./math/all_test.go	/^var vfceilSC = []float64{$/;"	v
vfcopysignSC	./math/all_test.go	/^var vfcopysignSC = []float64{$/;"	v
vfcosSC	./math/all_test.go	/^var vfcosSC = []float64{$/;"	v
vfcoshSC	./math/all_test.go	/^var vfcoshSC = []float64{$/;"	v
vferfSC	./math/all_test.go	/^var vferfSC = []float64{$/;"	v
vferfcSC	./math/all_test.go	/^var vferfcSC = []float64{$/;"	v
vfexpSC	./math/all_test.go	/^var vfexpSC = []float64{$/;"	v
vfexpm1SC	./math/all_test.go	/^var vfexpm1SC = []float64{$/;"	v
vffabsSC	./math/all_test.go	/^var vffabsSC = []float64{$/;"	v
vffdim2SC	./math/all_test.go	/^var vffdim2SC = [][2]float64{$/;"	v
vffdimSC	./math/all_test.go	/^var vffdimSC = [][2]float64{$/;"	v
vffmodSC	./math/all_test.go	/^var vffmodSC = [][2]float64{$/;"	v
vffrexpBC	./math/all_test.go	/^var vffrexpBC = []float64{$/;"	v
vffrexpSC	./math/all_test.go	/^var vffrexpSC = []float64{$/;"	v
vfgammaSC	./math/all_test.go	/^var vfgammaSC = []float64{$/;"	v
vfhypotSC	./math/all_test.go	/^var vfhypotSC = [][2]float64{$/;"	v
vfilogbSC	./math/all_test.go	/^var vfilogbSC = []float64{$/;"	v
vfj0SC	./math/all_test.go	/^var vfj0SC = []float64{$/;"	v
vflag	./cmd/yacc/yacc.go	/^var vflag string  \/\/ -v [y.output]	- y.output file$/;"	v
vfldexpBC	./math/all_test.go	/^var vfldexpBC = []fi{$/;"	v
vfldexpSC	./math/all_test.go	/^var vfldexpSC = []fi{$/;"	v
vflgammaSC	./math/all_test.go	/^var vflgammaSC = []float64{$/;"	v
vflog1pSC	./math/all_test.go	/^var vflog1pSC = []float64{$/;"	v
vflogSC	./math/all_test.go	/^var vflogSC = []float64{$/;"	v
vflogbSC	./math/all_test.go	/^var vflogbSC = []float64{$/;"	v
vfmodfSC	./math/all_test.go	/^var vfmodfSC = []float64{$/;"	v
vfnextafter32SC	./math/all_test.go	/^var vfnextafter32SC = [][2]float32{$/;"	v
vfnextafter64SC	./math/all_test.go	/^var vfnextafter64SC = [][2]float64{$/;"	v
vfpCases	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func vfpCases(t *testing.T) func(func([]byte)) {$/;"	f
vfpow10SC	./math/all_test.go	/^var vfpow10SC = []int{$/;"	v
vfpowSC	./math/all_test.go	/^var vfpowSC = [][2]float64{$/;"	v
vfsignbitSC	./math/all_test.go	/^var vfsignbitSC = []float64{$/;"	v
vfsinSC	./math/all_test.go	/^var vfsinSC = []float64{$/;"	v
vfsinhSC	./math/all_test.go	/^var vfsinhSC = []float64{$/;"	v
vfsqrtSC	./math/all_test.go	/^var vfsqrtSC = []float64{$/;"	v
vfsqrtSC	./runtime/sqrt_test.go	/^var vfsqrtSC = []float64{$/;"	v
vftanhSC	./math/all_test.go	/^var vftanhSC = []float64{$/;"	v
vfunc	./text/template/exec_test.go	/^func vfunc(V, *V) string {$/;"	f
vfy0SC	./math/all_test.go	/^var vfy0SC = []float64{$/;"	v
vgradAlpha	./image/draw/draw_test.go	/^func vgradAlpha(alpha int) image.Image {$/;"	f
vgradCr	./image/draw/draw_test.go	/^func vgradCr() image.Image {$/;"	f
vgradGray	./image/draw/draw_test.go	/^func vgradGray() image.Image {$/;"	f
vgradGreen	./image/draw/draw_test.go	/^func vgradGreen(alpha int) image.Image {$/;"	f
vgradGreenNRGBA	./image/draw/draw_test.go	/^func vgradGreenNRGBA(alpha int) image.Image {$/;"	f
vgradMagenta	./image/draw/draw_test.go	/^func vgradMagenta() image.Image {$/;"	f
vi	./debug/dwarf/testdata/typedef.c	/^	volatile int vi;$/;"	m	struct:my_struct	file:
vi	./debug/dwarf/testdata/typedef.c	/^	volatile int vi;$/;"	m	union:my_union	file:
via	./net/http/client.go	/^	var via []*Request$/;"	v
viewer	./cmd/trace/trace.go	/^				var viewer = new tr.TraceViewer('\/jsontrace{{PARAMS}}');$/;"	v
visible	./cmd/cover/html.go	/^		var visible = document.getElementById('file0');$/;"	v
visit	./cmd/compile/internal/gc/esc.go	/^func (v *bottomUpVisitor) visit(n *Node) uint32 {$/;"	f
visit	./cmd/vet/main.go	/^func visit(path string, f os.FileInfo, err error) error {$/;"	f
visit	./reflect/deepequal.go	/^type visit struct {$/;"	t
visitBottomUp	./cmd/compile/internal/gc/esc.go	/^func visitBottomUp(list *NodeList, analyze func(list *NodeList, recursive bool)) {$/;"	f
visitComponents	./cmd/compile/internal/gc/gen.go	/^func visitComponents(t *Type, startOffset int64, f func(elem *Type, elemOffset int64) bool) bool {$/;"	f
visitFile	./cmd/fix/main.go	/^func visitFile(path string, f os.FileInfo, err error) error {$/;"	f
visitFile	./cmd/gofmt/gofmt.go	/^func visitFile(path string, f os.FileInfo, err error) error {$/;"	f
visitcode	./cmd/compile/internal/gc/esc.go	/^func (v *bottomUpVisitor) visitcode(n *Node, min uint32) uint32 {$/;"	f
visitcodelist	./cmd/compile/internal/gc/esc.go	/^func (v *bottomUpVisitor) visitcodelist(l *NodeList, min uint32) uint32 {$/;"	f
visitor	./go/printer/printer_test.go	/^type visitor chan *ast.Ident$/;"	t
vizTmpDir	./cmd/pprof/internal/commands/commands.go	/^var vizTmpDir string$/;"	v
vlen	./cmd/link/internal/ld/data.go	/^	var vlen int64$/;"	v
vmatch1	./cmd/compile/internal/gc/walk.go	/^func vmatch1(l *Node, r *Node) bool {$/;"	f
vmatch2	./cmd/compile/internal/gc/walk.go	/^func vmatch2(l *Node, r *Node) bool {$/;"	f
vmkcall	./cmd/compile/internal/gc/walk.go	/^func vmkcall(fn *Node, t *Type, init **NodeList, va []*Node) *Node {$/;"	f
void	./cmd/cgo/doc.go	/^The C type void* is represented by Go's unsafe.Pointer.$/;"	t
volToUpper	./syscall/exec_windows.go	/^func volToUpper(ch int) int {$/;"	f
volumeName	./os/stat_windows.go	/^func volumeName(path string) (v string) {$/;"	f
volumeNameLen	./path/filepath/path_plan9.go	/^func volumeNameLen(path string) int {$/;"	f
volumeNameLen	./path/filepath/path_unix.go	/^func volumeNameLen(path string) int {$/;"	f
volumeNameLen	./path/filepath/path_windows.go	/^func volumeNameLen(path string) int {$/;"	f
volumenametests	./path/filepath/path_test.go	/^var volumenametests = []VolumeNameTest{$/;"	v
vreg	./cmd/compile/internal/gc/reg.go	/^	var vreg uint64$/;"	v
vreg	./runtime/defs_linux_ppc64.go	/^type vreg struct {$/;"	t
vreg	./runtime/defs_linux_ppc64le.go	/^type vreg struct {$/;"	t
vregoff	./cmd/internal/obj/ppc64/asm9.go	/^func vregoff(ctxt *obj.Link, a *obj.Addr) int64 {$/;"	f
vstat	./cmd/compile/internal/gc/sinit.go	/^	\/\/	var vstat [...]t$/;"	v
vstat	./cmd/compile/internal/gc/sinit.go	/^	var vstat *Node$/;"	v
vtests	./net/http/serve_test.go	/^var vtests = []struct {$/;"	v
vv	./cmd/compile/internal/gc/dcl.go	/^	var vv *NodeList$/;"	v
vv	./cmd/vet/testdata/unsafeptr.go	/^	var vv V$/;"	v
w0	./bufio/bufio_test.go	/^	var w0 writeCountingDiscard$/;"	v
w1	./bufio/bufio_test.go	/^	var w1 writeCountingDiscard$/;"	v
w_buf	./crypto/sha1/sha1block_arm.s	/^#define w_buf	buf-(8+4*80)(SP)	\/\/80 words temporary buffer w uint32[80]$/;"	d
wait	./os/exec_plan9.go	/^func (p *Process) wait() (ps *ProcessState, err error) {$/;"	f
wait	./os/exec_unix.go	/^func (p *Process) wait() (ps *ProcessState, err error) {$/;"	f
wait	./os/exec_windows.go	/^func (p *Process) wait() (ps *ProcessState, err error) {$/;"	f
wait	./runtime/mgc.go	/^func (s *bgMarkSignal) wait() {$/;"	f
wait	./runtime/netpoll_solaris.go	/^	var wait *timespec$/;"	v
wait	./runtime/netpoll_windows.go	/^	var wait, qty, key, flags, n, i uint32$/;"	v
wait	./syscall/srpc_nacl.go	/^func (c *srpcClient) wait(r *srpc) {$/;"	f
wait4	./syscall/syscall_solaris.go	/^func wait4(pid uintptr, wstatus *WaitStatus, options uintptr, rusage *Rusage) (wpid uintptr, err uintptr)$/;"	f
wait4	./syscall/zsyscall_darwin_386.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_darwin_amd64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_darwin_arm.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_darwin_arm64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_dragonfly_amd64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_freebsd_386.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_freebsd_amd64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_freebsd_arm.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_linux_386.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_linux_amd64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_linux_arm.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_linux_arm64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_linux_ppc64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_linux_ppc64le.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_netbsd_386.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_netbsd_amd64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_netbsd_arm.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_openbsd_386.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_openbsd_amd64.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
wait4	./syscall/zsyscall_openbsd_arm.go	/^func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {$/;"	f
waitErr	./syscall/exec_plan9.go	/^type waitErr struct {$/;"	t
waitForBodyRead	./net/http/transport.go	/^		var waitForBodyRead chan bool \/\/ channel is nil when there's no body$/;"	v
waitGroupHandler	./net/http/httptest/server.go	/^type waitGroupHandler struct {$/;"	t
waitRead	./syscall/net_nacl.go	/^func (q *queue) waitRead(n int, deadline int64) (int, error) {$/;"	f
waitSig	./os/signal/signal_plan9_test.go	/^func waitSig(t *testing.T, c <-chan os.Signal, sig os.Signal) {$/;"	f
waitSig	./os/signal/signal_test.go	/^func waitSig(t *testing.T, c <-chan os.Signal, sig os.Signal) {$/;"	f
waitWrite	./syscall/net_nacl.go	/^func (q *queue) waitWrite(n int, deadline int64) (int, error) {$/;"	f
waitfor	./runtime/traceback.go	/^	var waitfor int64$/;"	v
waitmsg	./os/exec_plan9.go	/^	var waitmsg syscall.Waitmsg$/;"	v
waitq	./runtime/chan.go	/^type waitq struct {$/;"	t
waits	./encoding/json/encode.go	/^	\/\/ indirect func before we build it. This type waits on the$/;"	t
wake	./runtime/sema.go	/^		var wake *sudog$/;"	v
wakefing	./runtime/mfinal.go	/^func wakefing() *g {$/;"	f
wakep	./runtime/proc1.go	/^func wakep() {$/;"	f
walk	./cmd/cgo/ast.go	/^func (f *File) walk(x interface{}, context string, visit func(*File, interface{}, string)) {$/;"	f
walk	./cmd/compile/internal/gc/swt.go	/^func (s *exprSwitch) walk(sw *Node) {$/;"	f
walk	./cmd/compile/internal/gc/swt.go	/^func (s *typeSwitch) walk(sw *Node) {$/;"	f
walk	./cmd/compile/internal/gc/walk.go	/^func walk(fn *Node) {$/;"	f
walk	./cmd/fix/fix.go	/^func walk(x interface{}, visit func(interface{})) {$/;"	f
walk	./cmd/go/pkg.go	/^	var walk func(*Package)$/;"	v
walk	./path/filepath/path.go	/^func walk(path string, info os.FileInfo, walkFn WalkFunc) error {$/;"	f
walk	./regexp/onepass.go	/^func walk(prog *syntax.Prog, funcs ...func(ip, next uint32)) {$/;"	f
walk	./text/template/exec.go	/^func (s *state) walk(dot reflect.Value, node parse.Node) {$/;"	f
walk1	./regexp/onepass.go	/^	var walk1 func(uint32)$/;"	v
walkBeforeAfter	./cmd/fix/fix.go	/^func walkBeforeAfter(x interface{}, before, after func(interface{})) {$/;"	f
walkBinary	./go/printer/nodes.go	/^func walkBinary(e *ast.BinaryExpr) (has4, has5 bool, maxProblem int) {$/;"	f
walkCases	./cmd/compile/internal/gc/swt.go	/^func (s *exprSwitch) walkCases(cc []*caseClause) *Node {$/;"	f
walkCases	./cmd/compile/internal/gc/swt.go	/^func (s *typeSwitch) walkCases(cc []*caseClause) *Node {$/;"	f
walkDeclList	./go/ast/walk.go	/^func walkDeclList(v Visitor, list []Decl) {$/;"	f
walkDir	./cmd/fix/main.go	/^func walkDir(path string) {$/;"	f
walkDir	./cmd/gofmt/gofmt.go	/^func walkDir(path string) {$/;"	f
walkDir	./cmd/vet/main.go	/^func walkDir(root string) {$/;"	f
walkDirs	./go/types/stdlib_test.go	/^func walkDirs(t *testing.T, dir string) {$/;"	f
walkExprList	./go/ast/walk.go	/^func walkExprList(v Visitor, list []Expr) {$/;"	f
walkFile	./cmd/vet/main.go	/^func (f *File) walkFile(name string, file *ast.File) {$/;"	f
walkIdentList	./go/ast/walk.go	/^func walkIdentList(v Visitor, list []*Ident) {$/;"	f
walkIfOrWith	./text/template/exec.go	/^func (s *state) walkIfOrWith(typ parse.NodeType, dot reflect.Value, pipe *parse.PipeNode, list, elseList *parse.ListNode) {$/;"	f
walkKey	./internal/syscall/windows/registry/registry_test.go	/^func walkKey(t *testing.T, k registry.Key, kname string) {$/;"	f
walkRange	./text/template/exec.go	/^func (s *state) walkRange(dot reflect.Value, r *parse.RangeNode) {$/;"	f
walkStmtList	./go/ast/walk.go	/^func walkStmtList(v Visitor, list []Stmt) {$/;"	f
walkSymlinks	./path/filepath/symlink.go	/^func walkSymlinks(path string) (string, error) {$/;"	f
walkTemplate	./text/template/exec.go	/^func (s *state) walkTemplate(dot reflect.Value, t *parse.TemplateNode) {$/;"	f
walkTree	./path/filepath/path_test.go	/^func walkTree(n *Node, path string, f func(path string, n *Node)) {$/;"	f
walkappend	./cmd/compile/internal/gc/walk.go	/^func walkappend(n *Node, init **NodeList, dst *Node) *Node {$/;"	f
walkclosure	./cmd/compile/internal/gc/closure.go	/^func walkclosure(func_ *Node, init **NodeList) *Node {$/;"	f
walkcompare	./cmd/compile/internal/gc/walk.go	/^func walkcompare(np **Node, init **NodeList) {$/;"	f
walkdiv	./cmd/compile/internal/gc/walk.go	/^func walkdiv(np **Node, init **NodeList) {$/;"	f
walkexpr	./cmd/compile/internal/gc/walk.go	/^func walkexpr(np **Node, init **NodeList) {$/;"	f
walkexprlist	./cmd/compile/internal/gc/walk.go	/^func walkexprlist(l *NodeList, init **NodeList) {$/;"	f
walkexprlistcheap	./cmd/compile/internal/gc/walk.go	/^func walkexprlistcheap(l *NodeList, init **NodeList) {$/;"	f
walkexprlistsafe	./cmd/compile/internal/gc/walk.go	/^func walkexprlistsafe(l *NodeList, init **NodeList) {$/;"	f
walkmul	./cmd/compile/internal/gc/walk.go	/^func walkmul(np **Node, init **NodeList) {$/;"	f
walkpartialcall	./cmd/compile/internal/gc/closure.go	/^func walkpartialcall(n *Node, init **NodeList) *Node {$/;"	f
walkprint	./cmd/compile/internal/gc/walk.go	/^func walkprint(nn *Node, init **NodeList) *Node {$/;"	f
walkprintfunc	./cmd/compile/internal/gc/walk.go	/^func walkprintfunc(np **Node, init **NodeList) {$/;"	f
walkprintfunc_prgen	./cmd/compile/internal/gc/walk.go	/^var walkprintfunc_prgen int$/;"	v
walkrange	./cmd/compile/internal/gc/range.go	/^func walkrange(n *Node) {$/;"	f
walkrotate	./cmd/compile/internal/gc/walk.go	/^func walkrotate(np **Node) {$/;"	f
walkselect	./cmd/compile/internal/gc/select.go	/^func walkselect(sel *Node) {$/;"	f
walkstmt	./cmd/compile/internal/gc/walk.go	/^func walkstmt(np **Node) {$/;"	f
walkstmtlist	./cmd/compile/internal/gc/walk.go	/^func walkstmtlist(l *NodeList) {$/;"	f
walkswitch	./cmd/compile/internal/gc/swt.go	/^func walkswitch(sw *Node) {$/;"	f
walksymtab	./debug/gosym/symtab.go	/^func walksymtab(data []byte, fn func(sym) error) error {$/;"	f
walksymtab	./debug/plan9obj/file.go	/^func walksymtab(data []byte, ptrsz int, fn func(sym) error) error {$/;"	f
walktypedef	./cmd/link/internal/ld/dwarf.go	/^func walktypedef(die *DWDie) *DWDie {$/;"	f
walkvardef	./cmd/compile/internal/gc/reg.go	/^func walkvardef(n *Node, f *Flow, active int) {$/;"	f
want	./crypto/x509/root_darwin_test.go	/^	var want int$/;"	v
want	./go/types/issues_test.go	/^		var want Type$/;"	v
want	./image/png/reader_test.go	/^		var want color.Color$/;"	v
want	./net/textproto/reader_test.go	/^		var want int$/;"	v
want	./os/signal/signal.go	/^func (h *handler) want(sig int) bool {$/;"	f
want	./syscall/syscall_windows_test.go	/^	var want byte = 2 \/\/ it is unlikely to have this character in the filename$/;"	v
want	./time/format_test.go	/^		var want string$/;"	v
want500Test	./net/http/cgi/matryoshka_test.go	/^func want500Test(t *testing.T, path string) {$/;"	f
wantArchive	./cmd/go/go_test.go	/^func (tg *testgoData) wantArchive(path string) {$/;"	f
wantBody	./net/http/transport_test.go	/^func wantBody(res *Response, err error, want string) error {$/;"	f
wantErr	./net/http/requestwrite_test.go	/^		var wantErr error$/;"	v
wantExecutable	./cmd/go/go_test.go	/^func (tg *testgoData) wantExecutable(path, msg string) {$/;"	f
wantNotStale	./cmd/go/go_test.go	/^func (tg *testgoData) wantNotStale(pkg, msg string) {$/;"	f
wantPanicString	./text/tabwriter/tabwriter_test.go	/^func wantPanicString(t *testing.T, want string) {$/;"	f
wantRange	./net/http/fs_test.go	/^type wantRange struct {$/;"	t
wantStale	./cmd/go/go_test.go	/^func (tg *testgoData) wantStale(pkg, msg string) {$/;"	f
wantedAndErrReader	./io/io_test.go	/^type wantedAndErrReader struct{}$/;"	t
wantsClose	./net/http/request.go	/^func (r *Request) wantsClose() bool {$/;"	f
wantsHttp10KeepAlive	./net/http/request.go	/^func (r *Request) wantsHttp10KeepAlive() bool {$/;"	f
warn	./cmd/fix/fix.go	/^func warn(pos token.Pos, msg string, args ...interface{}) {$/;"	f
warnNoMatches	./cmd/pprof/internal/driver/driver.go	/^func warnNoMatches(match bool, rx, option string, ui plugin.UI) {$/;"	f
warnf	./cmd/vet/main.go	/^func warnf(format string, args ...interface{}) {$/;"	f
warnings	./regexp/testdata/testregex.c	/^	int		warnings;$/;"	m	struct:__anon2	file:
was	./go/types/expr.go	/^			\/\/ The rhs type was updated when checking the shift.$/;"	t
was	./go/types/lookup.go	/^	prev := make(map[*Named]int) \/\/ index at which type was previously seen$/;"	t
was	./go/types/lookup.go	/^\/\/	- If indirect is set, a method with a pointer receiver type was found$/;"	t
was	./internal/syscall/windows/registry/value.go	/^	\/\/ ErrUnexpectedType is returned by Get*Value when the value's type was unexpected.$/;"	t
was	./reflect/type.go	/^	\/\/ If the type was predeclared (string, error) or unnamed (*T, struct{}, []int),$/;"	t
was	./runtime/mgcmark.go	/^		\/\/ cgocallback_gofunc was originally called. We can't$/;"	f
wasCanceled	./net/http/client.go	/^	var wasCanceled = alwaysFalse$/;"	v
wb	./net/packetconn_test.go	/^		var wb []byte$/;"	v
wbuf	./cmd/pack/pack.go	/^	var wbuf bytes.Buffer$/;"	v
wbufptr	./runtime/mgcwork.go	/^type wbufptr uintptr$/;"	t
wbufptrOf	./runtime/mgcwork.go	/^func wbufptrOf(w *workbuf) wbufptr {$/;"	f
wbytes	./syscall/srpc_nacl.go	/^func (m *msg) wbytes(p []byte) {$/;"	f
wclose	./io/pipe.go	/^func (p *pipe) wclose(err error) {$/;"	f
wdat	./io/pipe_test.go	/^	var wdat = make([]byte, 128)$/;"	v
we	./cmd/cgo/gcc.go	/^	\/\/ for each entry in names and then dereference the type we$/;"	t
we	./cmd/vet/testdata/print.go	/^\/\/ A data type we can print with "%d".$/;"	t
we	./cmd/vet/testdata/print.go	/^\/\/ A data type we can print with "%s".$/;"	t
we	./cmd/vet/testdata/print.go	/^\/\/ A data type we cannot print correctly with "%d".$/;"	t
we	./encoding/gob/decode.go	/^\/\/ emptyStruct is the type we compile into when ignoring a struct value.$/;"	t
we	./encoding/gob/doc.go	/^	ff 81	\/\/ The negative of the id for the type we're defining, -65.$/;"	t
we	./encoding/gob/type.go	/^var nextId typeId       \/\/ incremented for each new type we build$/;"	t
we	./math/rand/exp.go	/^var we = [256]float32{$/;"	v
weakKeyTests	./crypto/des/des_test.go	/^var weakKeyTests = []CryptTest{$/;"	v
weaktypepkg	./cmd/compile/internal/gc/go.go	/^var weaktypepkg *Pkg \/\/ weak references to runtime type info$/;"	v
weaktypesym	./cmd/compile/internal/gc/reflect.go	/^func weaktypesym(t *Type) *Sym {$/;"	f
webroot	./net/http/triv.go	/^var webroot = flag.String("root", os.Getenv("HOME"), "web root directory")$/;"	v
weight	./cmd/pprof/internal/report/report.go	/^					var weight int64$/;"	v
wg	./bytes/reader_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./cmd/dist/util.go	/^	var wg sync.WaitGroup$/;"	v
wg	./database/sql/sql_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./encoding/json/encode.go	/^	var wg sync.WaitGroup$/;"	v
wg	./encoding/xml/marshal_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./expvar/expvar_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./log/syslog/syslog_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./net/dial_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./net/dnsclient_unix_test.go	/^			var wg sync.WaitGroup$/;"	v
wg	./net/http/serve_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./net/http/transport_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./net/internal/socktest/main_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./net/rpc/server_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./net/tcp_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./net/timeout_test.go	/^		var wg sync.WaitGroup$/;"	v
wg	./net/timeout_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./os/os_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/chan_test.go	/^		var wg sync.WaitGroup$/;"	v
wg	./runtime/chan_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/chanbarrier_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/map_test.go	/^			var wg sync.WaitGroup$/;"	v
wg	./runtime/netpoll.go	/^	var wg *g$/;"	v
wg	./runtime/proc_test.go	/^		var wg sync.WaitGroup$/;"	v
wg	./runtime/race/testdata/mop_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/race/testdata/waitgroup_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/runtime_unix_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/stack_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/trace/trace_stack_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./runtime/trace/trace_test.go	/^		var wg sync.WaitGroup$/;"	v
wg	./runtime/trace/trace_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./strings/reader_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./sync/example_test.go	/^	var wg sync.WaitGroup$/;"	v
wg	./sync/waitgroup_test.go	/^			var wg WaitGroup$/;"	v
wg	./sync/waitgroup_test.go	/^		var wg PaddedWaitGroup$/;"	v
wg	./sync/waitgroup_test.go	/^		var wg WaitGroup$/;"	v
wg	./sync/waitgroup_test.go	/^	var wg WaitGroup$/;"	v
wg	./testing/benchmark.go	/^	var wg sync.WaitGroup$/;"	v
wg	./time/sleep_test.go	/^		var wg sync.WaitGroup$/;"	v
wg1	./internal/singleflight/singleflight_test.go	/^	var wg1, wg2 sync.WaitGroup$/;"	v
when	./cmd/cgo/gcc.go	/^\/\/ dtype when used as the type of a C function argument.$/;"	t
when	./cmd/cgo/gcc.go	/^\/\/ dtype when used as the type of a variable or a struct field.$/;"	t
when	./cmd/compile/internal/gc/export.go	/^		\/\/ for operations that need a type when rendered, put the type on the export list.$/;"	t
when	./cmd/compile/internal/gc/typecheck.go	/^			\/\/ It is invalid to automatically dereference a named pointer type when selecting a method.$/;"	t
when	./cmd/go/pkg.go	/^		\/\/ problem we could define a real error type when the decision can be$/;"	t
when	./encoding/gob/decode.go	/^\/\/ getIgnoreEnginePtr returns the engine for the specified type when the value is to be discarded.$/;"	t
when	./reflect/type.go	/^	\/\/ this type when allocated in memory.$/;"	t
when	./reflect/type.go	/^	\/\/ this type when used as a field in a struct.$/;"	t
when	./text/template/doc.go	/^automatically indirects to the base type when required.$/;"	t
when	./time/sleep.go	/^func when(d Duration) int64 {$/;"	f
where	./go/types/call.go	/^			\/\/ TODO(gri) should provide actual type where the conflict happens$/;"	t
where	./go/types/lookup.go	/^\/\/ type where the entry was found, either:$/;"	t
which	./regexp/testdata/testregex.c	/^	char*		which;$/;"	m	struct:__anon2	file:
whiteSpace	./go/printer/printer.go	/^type whiteSpace byte$/;"	t
whoamiCmd	./syscall/exec_linux_test.go	/^func whoamiCmd(t *testing.T, uid, gid int, setgroups bool) *exec.Cmd {$/;"	f
why	./cmd/compile/internal/gc/range.go	/^	var why string$/;"	v
why	./cmd/compile/internal/gc/subr.go	/^	var why string$/;"	v
why	./cmd/compile/internal/gc/typecheck.go	/^				var why string$/;"	v
why	./cmd/compile/internal/gc/typecheck.go	/^		var why string$/;"	v
why	./cmd/compile/internal/gc/typecheck.go	/^	var why string$/;"	v
widPresent	./fmt/scan.go	/^		var widPresent bool$/;"	v
widstruct	./cmd/compile/internal/gc/align.go	/^func widstruct(errtype *Type, t *Type, o int64, flag int) int64 {$/;"	f
width	./bytes/bytes.go	/^		var width int$/;"	v
width	./cmd/compile/internal/gc/align.go	/^	\/\/ type width only includes back to first field's offset$/;"	t
width	./regexp/regexp.go	/^			var width int$/;"	v
width	./regexp/regexp.go	/^		var width int$/;"	v
wildcard	./net/platform_test.go	/^	var wildcard bool$/;"	v
will	./cmd/cgo/out.go	/^\/\/ Usual nonsense: if x and y are not equal, the type will be invalid$/;"	t
will	./cmd/compile/internal/gc/dcl.go	/^		\/\/ functype will print errors about duplicate function arguments.$/;"	t
will	./cmd/compile/internal/gc/typecheck.go	/^	\/\/ Find the base type: methtype will fail if t$/;"	t
will	./cmd/internal/gcprog/gcprog.go	/^	\/\/ size of the plain pointer bits for the type will fit in$/;"	t
will	./mime/multipart/formdata.go	/^\/\/ If stored on disk, the File's underlying concrete type will be an *os.File.$/;"	t
will	./runtime/netpoll.go	/^		\/\/ Timer func will check the seq against current descriptor seq,$/;"	f
win32finddata1	./syscall/ztypes_windows.go	/^type win32finddata1 struct {$/;"	t
winbasetests	./path/filepath/path_test.go	/^var winbasetests = []PathTest{$/;"	v
winc	./cmd/compile/internal/big/rat_test.go	/^	var winc, einc = uint64(1), 1 \/\/ soak test (~1.5s on x86-64)$/;"	v
winc	./cmd/compile/internal/big/rat_test.go	/^	var winc, einc = uint64(1), 1 \/\/ soak test (~75s on x86-64)$/;"	v
winc	./math/big/rat_test.go	/^	var winc, einc = uint64(1), 1 \/\/ soak test (~1.5s on x86-64)$/;"	v
winc	./math/big/rat_test.go	/^	var winc, einc = uint64(1), 1 \/\/ soak test (~75s on x86-64)$/;"	v
wincallbackcontext	./runtime/runtime2.go	/^type wincallbackcontext struct {$/;"	t
wincleantests	./path/filepath/path_test.go	/^var wincleantests = []PathTest{$/;"	v
windirtests	./path/filepath/path_test.go	/^var windirtests = []PathTest{$/;"	v
window	./compress/flate/deflate.go	/^		var window []byte$/;"	v
windowed	./runtime/hash_test.go	/^func windowed(t *testing.T, k Key) {$/;"	f
windowsBadWords	./cmd/go/test.go	/^var windowsBadWords = []string{$/;"	v
winisabstests	./path/filepath/path_test.go	/^var winisabstests = []IsAbsTest{$/;"	v
winjointests	./path/filepath/path_test.go	/^var winjointests = []JoinTest{$/;"	v
winreltests	./path/filepath/path_test.go	/^var winreltests = []RelTests{$/;"	v
wins	./net/http/serve_test.go	/^			name: "explicit content-type wins",$/;"	t
winsegments	./go/scanner/scanner_test.go	/^var winsegments = []segment{$/;"	v
winsplitlisttests	./path/filepath/path_test.go	/^var winsplitlisttests = []SplitListTest{$/;"	v
winsplittests	./path/filepath/path_test.go	/^var winsplittests = []SplitTest{$/;"	v
wipe	./database/sql/fakedb_test.go	/^func (db *fakeDB) wipe() {$/;"	f
wireStruct	./encoding/gob/decode.go	/^	var wireStruct *structType$/;"	v
wireType	./encoding/gob/doc.go	/^	\/\/ all its components), so we just need to send a *value* of type wireType$/;"	t
wireType	./encoding/gob/doc.go	/^	type wireType struct {$/;"	t
wireType	./encoding/gob/type.go	/^type wireType struct {$/;"	t
wireTypeUserInfo	./encoding/gob/type.go	/^var wireTypeUserInfo *userTypeInfo \/\/ userTypeInfo of (*wireType)$/;"	v
with	./bytes/reader_test.go	/^	var with, withOut nErr$/;"	v
with	./cmd/cgo/gcc.go	/^\/\/ FuncArg returns a Go type with the same memory layout as$/;"	t
with	./cmd/compile/internal/gc/dcl.go	/^	\/\/ if we copied another type with *t = *u$/;"	t
with	./cmd/compile/internal/gc/popt.go	/^			\/\/ We don't want to merge a non-addressed var with an addressed one and$/;"	v
with	./cmd/compile/internal/gc/popt.go	/^	merge   *TempVar \/\/ merge var with this one$/;"	v
with	./cmd/compile/internal/gc/walk.go	/^				\/\/ Select a Go type with (at least) twice the width.$/;"	t
with	./cmd/doc/doc_test.go	/^		"type with unexported fields and -u",$/;"	t
with	./cmd/doc/doc_test.go	/^		"unexported type with -u",$/;"	t
with	./cmd/doc/doc_test.go	/^	\/\/ Unexported type with -u.$/;"	t
with	./crypto/x509/pkix/pkix.go	/^\/\/ oidInAttributeTypeAndValue returns whether a type with the given OID exists$/;"	t
with	./debug/dwarf/typeunit.go	/^\/\/ The typeUnit format is a single type with a signature.  It holds$/;"	t
with	./encoding/gob/decode.go	/^		\/\/ Find the field of the local type with the same name.$/;"	t
with	./encoding/gob/example_encdec_test.go	/^\/\/ to send and receive the type with the gob package. These interfaces are$/;"	t
with	./fmt/fmt_test.go	/^\/\/ P is a type with a String method with pointer receiver for testing %p.$/;"	t
with	./go/doc/reader.go	/^\/\/ lookupType returns the base type with the given name.$/;"	t
with	./go/doc/reader.go	/^\/\/ type with the given name but no associated declaration$/;"	t
with	./net/rpc/server_test.go	/^\/\/ Check that registration handles lots of bad methods and a type with no suitable methods.$/;"	t
with	./reflect/type.go	/^	Func  Value \/\/ func with receiver as first argument$/;"	f
with	./reflect/type.go	/^\/\/ ArrayOf returns the array type with the given count and element type.$/;"	t
with	./reflect/type.go	/^\/\/ ChanOf returns the channel type with the given direction and element type.$/;"	t
with	./reflect/type.go	/^\/\/ FuncOf returns the function type with the given argument and result types.$/;"	t
with	./reflect/type.go	/^\/\/ MapOf returns the map type with the given key and element types.$/;"	t
with	./reflect/type.go	/^\/\/ PtrTo returns the pointer type with element t.$/;"	t
with	./reflect/type.go	/^\/\/ SliceOf returns the slice type with element type t.$/;"	t
with	./reflect/type.go	/^\/\/ to describe an unnamed type with no methods.$/;"	t
with	./runtime/mbitmap.go	/^	\/\/ However, because of the possibility of a repeated type with$/;"	t
with	./runtime/symtab.go	/^	\/\/ linear search to find func with pc >= entry.$/;"	f
with	./text/template/doc.go	/^		keys are of basic type with a defined order ("comparable"), the$/;"	t
withControl	./text/template/parse/parse.go	/^func (t *Tree) withControl() Node {$/;"	f
withLock	./database/sql/sql.go	/^func withLock(lk sync.Locker, fn func()) {$/;"	f
within	./debug/dwarf/typeunit.go	/^	toff  Offset \/\/ Offset to signature type within data.$/;"	t
withinTolerance	./image/decode_test.go	/^func withinTolerance(c0, c1 color.Color, tolerance int) bool {$/;"	f
without	./cmd/compile/doc.go	/^must be a func without a body (meaning that it has an implementation not written$/;"	f
without	./cmd/compile/internal/gc/dcl.go	/^			Yyerror("const declaration cannot have type without expression")$/;"	t
without	./cmd/compile/internal/gc/gsubr.go	/^			Fatal("closurevar without needctxt")$/;"	v
without	./cmd/compile/internal/gc/typecheck.go	/^			Fatal("var without type, init: %v", n.Sym)$/;"	v
without	./strconv/doc.go	/^\/\/ converted to that narrower type without data loss:$/;"	t
wl	./sync/rwmutex_test.go	/^	var wl RWMutex$/;"	v
wmsg	./syscall/exec_plan9.go	/^	var wmsg *waitErr$/;"	v
wn	./math/rand/normal.go	/^var wn = [128]float32{$/;"	v
word	./cmd/compile/internal/gc/plive.go	/^	var word uint32$/;"	v
word	./cmd/compile/internal/gc/reg.go	/^			\/\/ needs a consistent type word and data word.$/;"	t
word	./net/mail/message.go	/^		var word string$/;"	v
wordCount	./bufio/scan_test.go	/^		var wordCount int$/;"	v
wordRune	./regexp/syntax/prog.go	/^func wordRune(r rune) bool {$/;"	f
wordScanTests	./bufio/scan_test.go	/^var wordScanTests = []string{$/;"	v
wordloop	./crypto/rc4/rc4_amd64.s	/^wordloop:$/;"	l
wordloop	./crypto/rc4/rc4_amd64p32.s	/^wordloop:$/;"	l
words	./cmd/go/generate.go	/^	var words []string$/;"	v
words	./net/mail/message.go	/^	var words []string$/;"	v
work	./runtime/mgc.go	/^var work struct {$/;"	v
workbuf	./runtime/mgcwork.go	/^type workbuf struct {$/;"	t
workbufhdr	./runtime/mgcwork.go	/^type workbufhdr struct {$/;"	t
workthegc	./runtime/gc_test.go	/^func workthegc() []byte {$/;"	f
worldsema	./runtime/proc1.go	/^var worldsema uint32 = 1$/;"	v
would	./reflect/type.go	/^\/\/ If the resulting type would be larger than the available address space,$/;"	t
wr	./cmd/compile/internal/gc/const.go	/^	var wr int$/;"	v
wr	./net/http/response_test.go	/^		var wr io.Writer = &buf$/;"	v
wract	./cmd/yacc/yacc.go	/^func wract(i int) {$/;"	f
wrapHandler	./net/http/httptest/server.go	/^func (s *Server) wrapHandler() {$/;"	f
wrapper	./cmd/vet/testdata/asm.go	/^func wrapper(x int)$/;"	f
wrappertests	./sort/search_test.go	/^var wrappertests = []struct {$/;"	v
wrdata	./cmd/internal/obj/objfile.go	/^func wrdata(b *Biobuf, v []byte) {$/;"	f
wrint	./cmd/internal/obj/objfile.go	/^func wrint(b *Biobuf, sval int64) {$/;"	f
write	./cmd/yacc/yacc.go	/^func write(f *bufio.Writer, b []byte, n int) int {$/;"	f
write	./compress/flate/deflate.go	/^func (d *compressor) write(b []byte) (n int, err error) {$/;"	f
write	./compress/lzw/writer.go	/^	var write func(*encoder, uint32) error$/;"	v
write	./go/doc/comment.go	/^func (l *lineWrapper) write(text string) {$/;"	f
write	./image/gif/writer.go	/^func (e *encoder) write(p []byte) {$/;"	f
write	./image/jpeg/writer.go	/^func (e *encoder) write(p []byte) {$/;"	f
write	./io/pipe.go	/^func (p *pipe) write(b []byte) (n int, err error) {$/;"	f
write	./log/syslog/syslog.go	/^func (w *Writer) write(p Priority, msg string) (int, error) {$/;"	f
write	./mime/quotedprintable/writer.go	/^func (w *Writer) write(p []byte) error {$/;"	f
write	./net/http/request.go	/^func (req *Request) write(w io.Writer, usingProxy bool, extraHeaders Header) error {$/;"	f
write	./net/http/server.go	/^func (w *response) write(lenData int, dataB []byte, dataS string) (n int, err error) {$/;"	f
write	./os/file_plan9.go	/^func (f *File) write(b []byte) (n int, err error) {$/;"	f
write	./os/file_unix.go	/^func (f *File) write(b []byte) (n int, err error) {$/;"	f
write	./os/file_windows.go	/^func (f *File) write(b []byte) (n int, err error) {$/;"	f
write	./runtime/os1_plan9.go	/^func write(fd uintptr, buf unsafe.Pointer, n int32) int64 {$/;"	f
write	./runtime/os1_windows.go	/^func write(fd uintptr, buf unsafe.Pointer, n int32) int32 {$/;"	f
write	./runtime/os3_solaris.go	/^func write(fd uintptr, buf unsafe.Pointer, nbyte int32) int32 {$/;"	f
write	./runtime/os_nacl.go	/^func write(fd uintptr, p unsafe.Pointer, n int32) int32$/;"	f
write	./runtime/stubs2.go	/^func write(fd uintptr, p unsafe.Pointer, n int32) int32$/;"	f
write	./runtime/sys_nacl_amd64p32.s	/^write:$/;"	l
write	./syscall/fd_nacl.go	/^func (*defaultFileImpl) write([]byte) (int, error)         { return 0, ENOSYS }$/;"	f
write	./syscall/fd_nacl.go	/^func (f *naclFile) write(b []byte) (int, error) {$/;"	f
write	./syscall/fd_nacl.go	/^func (f *pipeFile) write(b []byte) (int, error) {$/;"	f
write	./syscall/fs_nacl.go	/^func (f *fsysFile) write(b []byte) (int, error) {$/;"	f
write	./syscall/net_nacl.go	/^func (f *netFile) write(b []byte) (int, error) {$/;"	f
write	./syscall/net_nacl.go	/^func (q *byteq) write(b []byte, deadline int64) (n int, err error) {$/;"	f
write	./syscall/net_nacl.go	/^func (q *msgq) write(m interface{}, deadline int64) error {$/;"	f
write	./syscall/zsyscall_darwin_386.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_darwin_amd64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_darwin_arm.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_darwin_arm64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_dragonfly_amd64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_freebsd_386.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_freebsd_amd64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_freebsd_arm.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_linux_386.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_linux_amd64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_linux_arm.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_linux_arm64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_linux_ppc64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_linux_ppc64le.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_netbsd_386.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_netbsd_amd64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_netbsd_arm.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_openbsd_386.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_openbsd_amd64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_openbsd_arm.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./syscall/zsyscall_solaris_amd64.go	/^func write(fd int, p []byte) (n int, err error) {$/;"	f
write	./text/tabwriter/tabwriter_test.go	/^func write(t *testing.T, testname string, w *Writer, src string) {$/;"	f
write0	./text/tabwriter/tabwriter.go	/^func (b *Writer) write0(buf []byte) {$/;"	f
write1	./syscall/exec_solaris.go	/^func write1(fd uintptr, buf uintptr, nbyte uintptr) (n uintptr, err Errno)$/;"	f
writeAndRetry	./log/syslog/syslog.go	/^func (w *Writer) writeAndRetry(p Priority, s string) (int, error) {$/;"	f
writeAndUpdate	./net/dnsclient_unix_test.go	/^func (conf *resolvConfTest) writeAndUpdate(lines []string) error {$/;"	f
writeBarrierEnabled	./cmd/compile/internal/gc/builtin/runtime.go	/^var writeBarrierEnabled bool$/;"	v
writeBarrierEnabled	./runtime/mgc.go	/^var writeBarrierEnabled bool \/\/ compiler emits references to this in write barriers$/;"	v
writeBeginRequest	./net/http/fcgi/fcgi.go	/^func (c *conn) writeBeginRequest(reqId uint16, role uint16, flags uint8) error {$/;"	f
writeBits	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBits(b, nb int32) {$/;"	f
writeBlock	./compress/flate/deflate.go	/^func (d *compressor) writeBlock(tokens []token, index int, eof bool) error {$/;"	f
writeBlock	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBlock(tokens []token, eof bool, input []byte) {$/;"	f
writeBlock	./image/jpeg/writer.go	/^func (e *encoder) writeBlock(b *block, q quantIndex, prevDC int32) int32 {$/;"	f
writeBlock	./runtime/pprof/pprof.go	/^func writeBlock(w io.Writer, debug int) error {$/;"	f
writeBuf	./archive/zip/writer.go	/^type writeBuf []byte$/;"	t
writeBuf	./bufio/bufio.go	/^func (b *Reader) writeBuf(w io.Writer) (int64, error) {$/;"	f
writeByte	./cmd/compile/internal/gc/reflect.go	/^func (p *GCProg) writeByte(x byte) {$/;"	f
writeByte	./cmd/link/internal/ld/data.go	/^func (p *GCProg) writeByte(x byte) {$/;"	f
writeByte	./go/printer/printer.go	/^func (p *printer) writeByte(ch byte, n int) {$/;"	f
writeByte	./image/gif/writer.go	/^func (e *encoder) writeByte(b byte) {$/;"	f
writeByte	./image/jpeg/writer.go	/^func (e *encoder) writeByte(b byte) {$/;"	f
writeBytes	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeBytes(bytes []byte) {$/;"	f
writeBytes	./compress/gzip/gzip.go	/^func (z *Writer) writeBytes(b []byte) error {$/;"	f
writeChunk	./image/png/writer.go	/^func (e *encoder) writeChunk(b []byte, name string) {$/;"	f
writeCode	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeCode(code *huffmanEncoder, literal uint32) {$/;"	f
writeComment	./go/printer/printer.go	/^func (p *printer) writeComment(comment *ast.Comment) {$/;"	f
writeCommentPrefix	./go/printer/printer.go	/^func (p *printer) writeCommentPrefix(pos, next token.Position, prev, comment *ast.Comment, tok token.Token) {$/;"	f
writeCommentSuffix	./go/printer/printer.go	/^func (p *printer) writeCommentSuffix(needsLinebreak bool) (wroteNewline, droppedFF bool) {$/;"	f
writeConsole	./os/file_windows.go	/^func (f *File) writeConsole(b []byte) (n int, err error) {$/;"	f
writeCountingConn	./net/http/client_test.go	/^type writeCountingConn struct {$/;"	t
writeCountingDiscard	./bufio/bufio_test.go	/^type writeCountingDiscard int$/;"	t
writeCrasher	./net/rpc/server_test.go	/^type writeCrasher struct {$/;"	t
writeDHT	./image/jpeg/writer.go	/^func (e *encoder) writeDHT(nComponent int) {$/;"	f
writeDNSQuery	./net/dnsclient_unix.go	/^func (c *TCPConn) writeDNSQuery(msg *dnsMsg) error {$/;"	f
writeDNSQuery	./net/dnsclient_unix.go	/^func (c *UDPConn) writeDNSQuery(msg *dnsMsg) error {$/;"	f
writeDQT	./image/jpeg/writer.go	/^func (e *encoder) writeDQT() {$/;"	f
writeDeadline	./syscall/net_nacl.go	/^func (f *netFile) writeDeadline() int64 {$/;"	f
writeDefs	./cmd/cgo/out.go	/^func (p *Package) writeDefs() {$/;"	f
writeDefsFunc	./cmd/cgo/out.go	/^func (p *Package) writeDefsFunc(fgo2 io.Writer, n *Name) {$/;"	f
writeDynamicHeader	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeDynamicHeader(numLiterals int, numOffsets int, numCodegens int, isEof bool) {$/;"	f
writeELF32	./cmd/internal/rsc.io/arm/armasm/objdumpext_test.go	/^func writeELF32(f *os.File, size int) error {$/;"	f
writeELF32	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func writeELF32(f *os.File, size int) error {$/;"	f
writeELF64	./cmd/internal/rsc.io/x86/x86asm/objdumpext_test.go	/^func writeELF64(f *os.File, size int) error {$/;"	f
writeEnd	./encoding/xml/marshal.go	/^func (p *printer) writeEnd(name Name) error {$/;"	f
writeEndRequest	./net/http/fcgi/fcgi.go	/^func (c *conn) writeEndRequest(reqId uint16, appStatus int, protocolStatus uint8) error {$/;"	f
writeErr	./io/pipe_test.go	/^	var writeErr error$/;"	v
writeErr	./runtime/print1_write.go	/^func writeErr(b []byte) {$/;"	f
writeErr	./runtime/print1_write_android.go	/^func writeErr(b []byte) {$/;"	f
writeExportHeader	./cmd/cgo/out.go	/^func (p *Package) writeExportHeader(fgcch io.Writer) {$/;"	f
writeExports	./cmd/cgo/out.go	/^func (p *Package) writeExports(fgo2, fm, fgcc, fgcch io.Writer) {$/;"	f
writeFieldList	./go/types/exprstring.go	/^func writeFieldList(buf *bytes.Buffer, fields *ast.FieldList, sep string, iface bool) {$/;"	f
writeFile	./os/os_test.go	/^func writeFile(t *testing.T, fname string, flag int, text string) string {$/;"	f
writeFixedHeader	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeFixedHeader(isEof bool) {$/;"	f
writeFlusher	./net/http/httputil/reverseproxy.go	/^type writeFlusher interface {$/;"	t
writeFuncName	./go/types/object.go	/^func writeFuncName(buf *bytes.Buffer, f *Func, qf Qualifier) {$/;"	f
writeGccgoExports	./cmd/cgo/out.go	/^func (p *Package) writeGccgoExports(fgo2, fm, fgcc, fgcch io.Writer) {$/;"	f
writeGccgoOutputFunc	./cmd/cgo/out.go	/^func (p *Package) writeGccgoOutputFunc(fgcc *os.File, n *Name) {$/;"	f
writeGoroutine	./runtime/pprof/pprof.go	/^func writeGoroutine(w io.Writer, debug int) error {$/;"	f
writeGoroutineStacks	./runtime/pprof/pprof.go	/^func writeGoroutineStacks(w io.Writer) error {$/;"	f
writeHeader	./archive/tar/writer.go	/^func (tw *Writer) writeHeader(hdr *Header, allowPax bool) error {$/;"	f
writeHeader	./archive/zip/writer.go	/^func writeHeader(w io.Writer, h *FileHeader) error {$/;"	f
writeHeader	./compress/zlib/writer.go	/^func (z *Writer) writeHeader() (err error) {$/;"	f
writeHeader	./encoding/pem/pem.go	/^func writeHeader(out io.Writer, k, v string) error {$/;"	f
writeHeader	./image/gif/writer.go	/^func (e *encoder) writeHeader() {$/;"	f
writeHeader	./net/http/server.go	/^func (cw *chunkWriter) writeHeader(p []byte) {$/;"	f
writeHeap	./runtime/pprof/pprof.go	/^func writeHeap(w io.Writer, debug int) error {$/;"	f
writeIDATs	./image/png/writer.go	/^func (e *encoder) writeIDATs() {$/;"	f
writeIDMappings	./syscall/exec_linux.go	/^func writeIDMappings(path string, idMap []SysProcIDMap) error {$/;"	f
writeIEND	./image/png/writer.go	/^func (e *encoder) writeIEND() { e.writeChunk(nil, "IEND") }$/;"	f
writeIHDR	./image/png/writer.go	/^func (e *encoder) writeIHDR() {$/;"	f
writeImage	./image/png/writer.go	/^func writeImage(w io.Writer, m image.Image, cb int, level int) error {$/;"	f
writeImageBlock	./image/gif/writer.go	/^func (e *encoder) writeImageBlock(pm *image.Paletted, delay int, disposal byte) {$/;"	f
writeIndent	./encoding/xml/marshal.go	/^func (p *printer) writeIndent(depthDelta int) {$/;"	f
writeInst	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^func writeInst(generate func(func([]byte))) (file string, f *os.File, size int, err error) {$/;"	f
writeInst	./cmd/internal/rsc.io/x86/x86asm/ext_test.go	/^func writeInst(generate func(func([]byte))) (file string, f *os.File, size int, err error) {$/;"	f
writeInt	./index/suffixarray/suffixarray.go	/^func writeInt(w io.Writer, buf []byte, x int) error {$/;"	f
writeLSB	./compress/lzw/writer.go	/^func (e *encoder) writeLSB(c uint32) error {$/;"	f
writeLines	./text/tabwriter/tabwriter.go	/^func (b *Writer) writeLines(pos0 int, line0, line1 int) (pos int) {$/;"	f
writeLock	./net/fd_plan9.go	/^func (fd *netFD) writeLock() error {$/;"	f
writeLock	./net/fd_unix.go	/^func (fd *netFD) writeLock() error {$/;"	f
writeLock	./net/fd_windows.go	/^func (fd *netFD) writeLock() error {$/;"	f
writeLogdHeader	./runtime/print1_write_android.go	/^func writeLogdHeader() int {$/;"	f
writeLogger	./testing/iotest/logger.go	/^type writeLogger struct {$/;"	t
writeLoop	./net/http/transport.go	/^func (pc *persistConn) writeLoop() {$/;"	f
writeMSB	./compress/lzw/writer.go	/^func (e *encoder) writeMSB(c uint32) error {$/;"	f
writeMarkerHeader	./image/jpeg/writer.go	/^func (e *encoder) writeMarkerHeader(marker uint8, markerlen int) {$/;"	f
writeMessage	./encoding/gob/encoder.go	/^func (enc *Encoder) writeMessage(w io.Writer, b *encBuffer) {$/;"	f
writeMsg	./net/fd_unix.go	/^func (fd *netFD) writeMsg(p []byte, oob []byte, sa syscall.Sockaddr) (n int, oobn int, err error) {$/;"	f
writeMsg	./net/fd_windows.go	/^func (fd *netFD) writeMsg(p []byte, oob []byte, sa syscall.Sockaddr) (n int, oobn int, err error) {$/;"	f
writeMultiple	./cmd/compile/internal/big/intconv.go	/^func writeMultiple(s fmt.State, text string, count int) {$/;"	f
writeMultiple	./math/big/intconv.go	/^func writeMultiple(s fmt.State, text string, count int) {$/;"	f
writeN	./text/tabwriter/tabwriter.go	/^func (b *Writer) writeN(src []byte, n int) {$/;"	f
writeObject	./go/types/object.go	/^func writeObject(buf *bytes.Buffer, obj Object, qf Qualifier) {$/;"	f
writeOnlyConn	./net/http/fcgi/fcgi_test.go	/^type writeOnlyConn struct {$/;"	t
writeOutput	./cmd/cgo/out.go	/^func (p *Package) writeOutput(f *File, srcfile string) {$/;"	f
writeOutputFunc	./cmd/cgo/out.go	/^func (p *Package) writeOutputFunc(fgcc *os.File, n *Name) {$/;"	f
writePAXHeader	./archive/tar/writer.go	/^func (tw *Writer) writePAXHeader(hdr *Header, paxHeaders map[string]string) error {$/;"	f
writePLTEAndTRNS	./image/png/writer.go	/^func (e *encoder) writePLTEAndTRNS(p color.Palette) {$/;"	f
writePackage	./go/types/object.go	/^func writePackage(buf *bytes.Buffer, pkg *Package, qf Qualifier) {$/;"	f
writePadding	./fmt/format.go	/^func (f *fmt) writePadding(n int, padding []byte) {$/;"	f
writePadding	./text/tabwriter/tabwriter.go	/^func (b *Writer) writePadding(textw, cellw int, useTabs bool) {$/;"	f
writePairs	./net/http/fcgi/fcgi.go	/^func (c *conn) writePairs(recType recType, reqId uint16, pairs map[string]string) error {$/;"	f
writeParams	./cmd/api/goapi.go	/^func (w *Walker) writeParams(buf *bytes.Buffer, t *types.Tuple, variadic bool) {$/;"	f
writeProcFile	./os/exec_plan9.go	/^func (p *Process) writeProcFile(file string, data string) error {$/;"	f
writeRecord	./crypto/tls/conn.go	/^func (c *Conn) writeRecord(typ recordType, data []byte) (n int, err error) {$/;"	f
writeRecord	./net/http/fcgi/fcgi.go	/^func (c *conn) writeRecord(recType recType, reqId uint16, b []byte) error {$/;"	f
writeRegexp	./regexp/syntax/regexp.go	/^func writeRegexp(b *bytes.Buffer, re *Regexp) {$/;"	f
writeRequest	./net/http/transport.go	/^type writeRequest struct {$/;"	t
writeRuntimeProfile	./runtime/pprof/pprof.go	/^func writeRuntimeProfile(w io.Writer, debug int, name string, fetch func([]runtime.StackRecord) (int, bool)) error {$/;"	f
writeSOF0	./image/jpeg/writer.go	/^func (e *encoder) writeSOF0(size image.Point, nComponent int) {$/;"	f
writeSOS	./image/jpeg/writer.go	/^func (e *encoder) writeSOS(m image.Image) {$/;"	f
writeSetCookiesTests	./net/http/cookie_test.go	/^var writeSetCookiesTests = []struct {$/;"	v
writeSetgroups	./syscall/exec_linux.go	/^func writeSetgroups(pid int, enable bool) error {$/;"	f
writeSigExpr	./go/types/exprstring.go	/^func writeSigExpr(buf *bytes.Buffer, sig *ast.FuncType) {$/;"	f
writeSignature	./cmd/api/goapi.go	/^func (w *Walker) writeSignature(buf *bytes.Buffer, sig *types.Signature) {$/;"	f
writeSignature	./go/types/typestring.go	/^func writeSignature(buf *bytes.Buffer, sig *Signature, qf Qualifier, visited []Type) {$/;"	f
writeSlice	./index/suffixarray/suffixarray.go	/^func writeSlice(w io.Writer, buf []byte, data []int) (n int, err error) {$/;"	f
writeStart	./encoding/xml/marshal.go	/^func (p *printer) writeStart(start *StartElement) error {$/;"	f
writeState	./net/fd_mutex_test.go	/^	var writeState [2]uint64$/;"	v
writeStoredBlock	./compress/flate/deflate.go	/^func (d *compressor) writeStoredBlock(buf []byte) error {$/;"	f
writeStoredHeader	./compress/flate/huffman_bit_writer.go	/^func (w *huffmanBitWriter) writeStoredHeader(length int, isEof bool) {$/;"	f
writeString	./compress/gzip/gzip.go	/^func (z *Writer) writeString(s string) (err error) {$/;"	f
writeString	./go/printer/printer.go	/^func (p *printer) writeString(pos token.Position, s string, isLit bool) {$/;"	f
writeString	./log/syslog/syslog.go	/^func (n *netConn) writeString(p Priority, hostname, tag, msg, nl string) error {$/;"	f
writeStringer	./net/http/header.go	/^type writeStringer interface {$/;"	t
writeTestmain	./cmd/go/test.go	/^func writeTestmain(out string, t *testFuncs) error {$/;"	f
writeTests	./archive/zip/writer_test.go	/^var writeTests = []WriteTest{$/;"	v
writeTests	./encoding/csv/writer_test.go	/^var writeTests = []struct {$/;"	v
writeThreadCreate	./runtime/pprof/pprof.go	/^func writeThreadCreate(w io.Writer, debug int) error {$/;"	f
writeTimeoutTests	./net/timeout_test.go	/^var writeTimeoutTests = []struct {$/;"	v
writeTo	./encoding/asn1/marshal.go	/^func (f *forkableWriter) writeTo(out io.Writer) (n int, err error) {$/;"	f
writeTo	./net/fd_unix.go	/^func (fd *netFD) writeTo(p []byte, sa syscall.Sockaddr) (n int, err error) {$/;"	f
writeTo	./net/fd_windows.go	/^func (fd *netFD) writeTo(buf []byte, sa syscall.Sockaddr) (int, error) {$/;"	f
writeToChecker	./io/io_test.go	/^type writeToChecker struct {$/;"	t
writeToTimeoutTests	./net/timeout_test.go	/^var writeToTimeoutTests = []struct {$/;"	v
writeTuple	./go/types/typestring.go	/^func writeTuple(buf *bytes.Buffer, tup *Tuple, variadic bool, qf Qualifier, visited []Type) {$/;"	f
writeType	./cmd/api/goapi.go	/^func (w *Walker) writeType(buf *bytes.Buffer, typ types.Type) {$/;"	f
writeType	./go/types/typestring.go	/^func writeType(buf *bytes.Buffer, typ Type, qf Qualifier, visited []Type) {$/;"	f
writeUidGidMappings	./syscall/exec_linux.go	/^func writeUidGidMappings(pid int, sys *SysProcAttr) error {$/;"	f
writeUint16	./image/gif/writer.go	/^func writeUint16(b []uint8, u uint16) {$/;"	f
writeUint32	./image/png/writer.go	/^func writeUint32(b []uint8, u uint32) {$/;"	f
writeUnlock	./net/fd_plan9.go	/^func (fd *netFD) writeUnlock() {$/;"	f
writeUnlock	./net/fd_unix.go	/^func (fd *netFD) writeUnlock() {$/;"	f
writeUnlock	./net/fd_windows.go	/^func (fd *netFD) writeUnlock() {$/;"	f
writeWhitespace	./go/printer/printer.go	/^func (p *printer) writeWhitespace(n int) {$/;"	f
writeabbrev	./cmd/link/internal/ld/dwarf.go	/^func writeabbrev() {$/;"	f
writearanges	./cmd/link/internal/ld/dwarf.go	/^func writearanges() int64 {$/;"	f
writearchive	./cmd/compile/internal/gc/go.go	/^var writearchive int$/;"	v
writebarrierfat	./runtime/wbfat_gen.go	/^			fmt.Printf("func writebarrierfat%0*b(dst *[%d]uintptr, _ uintptr, src [%d]uintptr) {\\n", int(i), j, i, i)$/;"	f
writebarrierfat0001	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat0001(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat0001	./runtime/wbfat.go	/^func writebarrierfat0001(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat001	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat001(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat001	./runtime/wbfat.go	/^func writebarrierfat001(dst *[3]uintptr, _ uintptr, src [3]uintptr) {$/;"	f
writebarrierfat0010	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat0010(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat0010	./runtime/wbfat.go	/^func writebarrierfat0010(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat0011	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat0011(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat0011	./runtime/wbfat.go	/^func writebarrierfat0011(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat01	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat01(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat01	./runtime/wbfat.go	/^func writebarrierfat01(dst *[2]uintptr, _ uintptr, src [2]uintptr) {$/;"	f
writebarrierfat010	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat010(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat010	./runtime/wbfat.go	/^func writebarrierfat010(dst *[3]uintptr, _ uintptr, src [3]uintptr) {$/;"	f
writebarrierfat0100	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat0100(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat0100	./runtime/wbfat.go	/^func writebarrierfat0100(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat0101	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat0101(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat0101	./runtime/wbfat.go	/^func writebarrierfat0101(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat011	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat011(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat011	./runtime/wbfat.go	/^func writebarrierfat011(dst *[3]uintptr, _ uintptr, src [3]uintptr) {$/;"	f
writebarrierfat0110	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat0110(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat0110	./runtime/wbfat.go	/^func writebarrierfat0110(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat0111	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat0111(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat0111	./runtime/wbfat.go	/^func writebarrierfat0111(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat10	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat10(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat10	./runtime/wbfat.go	/^func writebarrierfat10(dst *[2]uintptr, _ uintptr, src [2]uintptr) {$/;"	f
writebarrierfat100	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat100(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat100	./runtime/wbfat.go	/^func writebarrierfat100(dst *[3]uintptr, _ uintptr, src [3]uintptr) {$/;"	f
writebarrierfat1000	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1000(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1000	./runtime/wbfat.go	/^func writebarrierfat1000(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat1001	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1001(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1001	./runtime/wbfat.go	/^func writebarrierfat1001(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat101	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat101(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat101	./runtime/wbfat.go	/^func writebarrierfat101(dst *[3]uintptr, _ uintptr, src [3]uintptr) {$/;"	f
writebarrierfat1010	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1010(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1010	./runtime/wbfat.go	/^func writebarrierfat1010(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat1011	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1011(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1011	./runtime/wbfat.go	/^func writebarrierfat1011(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat11	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat11(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat11	./runtime/wbfat.go	/^func writebarrierfat11(dst *[2]uintptr, _ uintptr, src [2]uintptr) {$/;"	f
writebarrierfat110	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat110(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat110	./runtime/wbfat.go	/^func writebarrierfat110(dst *[3]uintptr, _ uintptr, src [3]uintptr) {$/;"	f
writebarrierfat1100	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1100(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1100	./runtime/wbfat.go	/^func writebarrierfat1100(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat1101	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1101(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1101	./runtime/wbfat.go	/^func writebarrierfat1101(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat111	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat111(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat111	./runtime/wbfat.go	/^func writebarrierfat111(dst *[3]uintptr, _ uintptr, src [3]uintptr) {$/;"	f
writebarrierfat1110	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1110(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1110	./runtime/wbfat.go	/^func writebarrierfat1110(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfat1111	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierfat1111(dst *any, _ uintptr, src any)$/;"	f
writebarrierfat1111	./runtime/wbfat.go	/^func writebarrierfat1111(dst *[4]uintptr, _ uintptr, src [4]uintptr) {$/;"	f
writebarrierfn	./cmd/compile/internal/gc/walk.go	/^func writebarrierfn(name string, l *Type, r *Type) *Node {$/;"	f
writebarrieriface	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrieriface(dst *any, src any)$/;"	f
writebarrieriface	./runtime/mbarrier.go	/^func writebarrieriface(dst *[2]uintptr, src [2]uintptr) {$/;"	f
writebarrierptr	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierptr(dst *any, src any)$/;"	f
writebarrierptr	./runtime/mbarrier.go	/^func writebarrierptr(dst *uintptr, src uintptr) {$/;"	f
writebarrierptr_nostore	./runtime/mbarrier.go	/^func writebarrierptr_nostore(dst *uintptr, src uintptr) {$/;"	f
writebarrierptr_nostore1	./runtime/mbarrier.go	/^func writebarrierptr_nostore1(dst *uintptr, src uintptr) {$/;"	f
writebarrierslice	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierslice(dst *any, src any)$/;"	f
writebarrierslice	./runtime/mbarrier.go	/^func writebarrierslice(dst *[3]uintptr, src [3]uintptr) {$/;"	f
writebarrierstring	./cmd/compile/internal/gc/builtin/runtime.go	/^func writebarrierstring(dst *any, src any)$/;"	f
writebarrierstring	./runtime/mbarrier.go	/^func writebarrierstring(dst *[2]uintptr, src [2]uintptr) {$/;"	f
writecode	./cmd/yacc/yacc.go	/^func writecode(code []rune) {$/;"	f
writedwarfreloc	./cmd/link/internal/ld/dwarf.go	/^func writedwarfreloc(s *LSym) int64 {$/;"	f
writeenv	./syscall/env_plan9.go	/^func writeenv(key, value string) error {$/;"	f
writefile	./cmd/dist/util.go	/^func writefile(b, file string, flag int) {$/;"	f
writeframes	./cmd/link/internal/ld/dwarf.go	/^func writeframes() {$/;"	f
writegdbscript	./cmd/link/internal/ld/dwarf.go	/^func writegdbscript() int64 {$/;"	f
writeheapdump_m	./runtime/heapdump.go	/^func writeheapdump_m(fd uintptr) {$/;"	f
writeinfo	./cmd/link/internal/ld/dwarf.go	/^func writeinfo() {$/;"	f
writelen	./syscall/syscall_solaris.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_darwin_386.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_darwin_amd64.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_darwin_arm.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_darwin_arm64.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_dragonfly_amd64.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_freebsd_386.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_freebsd_amd64.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_freebsd_arm.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_linux_386.go	/^func writelen(fd int, p *byte, np int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_linux_amd64.go	/^func writelen(fd int, p *byte, np int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_linux_arm.go	/^func writelen(fd int, p *byte, np int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_linux_arm64.go	/^func writelen(fd int, p *byte, np int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_linux_ppc64.go	/^func writelen(fd int, p *byte, np int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_linux_ppc64le.go	/^func writelen(fd int, p *byte, np int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_netbsd_386.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_netbsd_amd64.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_netbsd_arm.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_openbsd_386.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_openbsd_amd64.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelen	./syscall/zsyscall_openbsd_arm.go	/^func writelen(fd int, buf *byte, nbuf int) (n int, err error) {$/;"	f
writelines	./cmd/link/internal/ld/dwarf.go	/^func writelines() {$/;"	f
writelock	./runtime/os1_nacl.go	/^var writelock uint32 \/\/ test-and-set spin lock for write$/;"	v
writem	./cmd/yacc/yacc.go	/^func writem(pp Pitem) string {$/;"	f
writepub	./cmd/link/internal/ld/dwarf.go	/^func writepub(ispub func(*DWDie) bool) int64 {$/;"	f
writer	./compress/lzw/writer.go	/^type writer interface {$/;"	t
writer	./encoding/gob/encoder.go	/^func (enc *Encoder) writer() io.Writer {$/;"	f
writer	./html/escape.go	/^type writer interface {$/;"	t
writer	./image/gif/writer.go	/^type writer interface {$/;"	t
writer	./image/jpeg/writer.go	/^type writer interface {$/;"	t
writer	./io/pipe_test.go	/^func writer(w WriteCloser, buf []byte, c chan pipeReturn) {$/;"	f
writer	./sync/rwmutex_test.go	/^func writer(rwm *RWMutex, num_iterations int, activity *int32, cdone chan bool) {$/;"	f
writerDescriptor	./os/exec/exec.go	/^func (c *Cmd) writerDescriptor(w io.Writer) (f *os.File, err error) {$/;"	f
writerFunc	./net/http/requestwrite_test.go	/^type writerFunc func([]byte) (int, error)$/;"	t
writerOnly	./net/http/server.go	/^type writerOnly struct {$/;"	t
writerOnly	./net/net.go	/^type writerOnly struct {$/;"	t
writerTest	./archive/tar/writer_test.go	/^type writerTest struct {$/;"	t
writerTestEntry	./archive/tar/writer_test.go	/^type writerTestEntry struct {$/;"	t
writerTests	./archive/tar/writer_test.go	/^var writerTests = []*writerTest{$/;"	v
writesym	./cmd/internal/obj/objfile.go	/^func writesym(ctxt *Link, b *Biobuf, s *LSym) {$/;"	f
written	./os/file_windows.go	/^			var written uint32$/;"	v
written	./runtime/os1_windows.go	/^	var written uint32$/;"	v
writtenOut	./syscall/syscall_dragonfly_amd64.go	/^	var writtenOut uint64 = 0$/;"	v
writtenOut	./syscall/syscall_freebsd_386.go	/^	var writtenOut uint64 = 0$/;"	v
writtenOut	./syscall/syscall_freebsd_amd64.go	/^	var writtenOut uint64 = 0$/;"	v
writtenOut	./syscall/syscall_freebsd_arm.go	/^	var writtenOut uint64 = 0$/;"	v
wrong	./encoding/gob/type.go	/^		panic("bootstrap type wrong id: " + got.name() + " " + got.string() + " not " + want.string())$/;"	t
wrongStringTest	./encoding/json/decode_test.go	/^type wrongStringTest struct {$/;"	t
wrongStringTests	./encoding/json/decode_test.go	/^var wrongStringTests = []wrongStringTest{$/;"	v
wroteRequest	./net/http/transport.go	/^func (pc *persistConn) wroteRequest() bool {$/;"	f
wrpath	./cmd/internal/obj/objfile.go	/^func wrpath(ctxt *Link, b *Biobuf, p string) {$/;"	f
wrpathsym	./cmd/internal/obj/objfile.go	/^func wrpathsym(ctxt *Link, b *Biobuf, s *LSym) {$/;"	f
wrstate	./cmd/yacc/yacc.go	/^func wrstate(i int) {$/;"	f
wrstring	./cmd/internal/obj/objfile.go	/^func wrstring(b *Biobuf, s string) {$/;"	f
wrsym	./cmd/internal/obj/objfile.go	/^func wrsym(b *Biobuf, s *LSym) {$/;"	f
ws	./text/scanner/scanner_test.go	/^	var ws uint64$/;"	v
wsets	./cmd/yacc/yacc.go	/^var wsets []Wset$/;"	v
wstat	./syscall/zsyscall_plan9_386.go	/^func wstat(path string, edir []byte) (err error) {$/;"	f
wstat	./syscall/zsyscall_plan9_amd64.go	/^func wstat(path string, edir []byte) (err error) {$/;"	f
wstatus	./syscall/exec_unix.go	/^	var wstatus WaitStatus$/;"	v
wstring	./syscall/srpc_nacl.go	/^func (m *msg) wstring(s string) {$/;"	f
wuint32	./syscall/srpc_nacl.go	/^func (m *msg) wuint32(x uint32) {$/;"	f
wuint64	./syscall/srpc_nacl.go	/^func (m *msg) wuint64(x uint64) {$/;"	f
x	./debug/dwarf/testdata/typedef.c	/^	char x : 1;$/;"	m	struct:my_struct	file:
x0	./go/types/call.go	/^		var x0 operand$/;"	v
x1	./cmd/compile/internal/gc/cgen.go	/^	var x1, x2, x3 *Node \/\/ unevaluated index arguments$/;"	v
x1	./crypto/elliptic/p224.go	/^	var x1, y1, z1, x2, y2, z2 p224FieldElement$/;"	v
x1	./crypto/elliptic/p224.go	/^	var x1, y1, z1, x2, y2, z2, x3, y3, z3 p224FieldElement$/;"	v
x1	./crypto/elliptic/p256.go	/^	var x1, y1, z1 [p256Limbs]uint32$/;"	v
x1	./runtime/race/testdata/atomic_test.go	/^	var x1, x2 int8$/;"	v
x1	./runtime/runtime1.go	/^	var x1 x1t$/;"	v
x1t	./runtime/runtime1.go	/^	type x1t struct {$/;"	t
x2	./cmd/compile/internal/big/float_test.go	/^			var x2 Float$/;"	v
x2	./math/big/float_test.go	/^			var x2 Float$/;"	v
x3	./crypto/elliptic/p224.go	/^	var x3 p224FieldElement$/;"	v
x86Need	./cmd/objdump/objdump_test.go	/^var x86Need = []string{$/;"	v
x86OperandTests	./cmd/asm/internal/asm/operand_test.go	/^var x86OperandTests = []operandTest{$/;"	v
xVal	./fmt/scan_test.go	/^var xVal Xs$/;"	v
x_cgo_free	./runtime/cgo/callbacks.go	/^var x_cgo_free byte$/;"	v
x_cgo_free	./runtime/cgo/gcc_util.c	/^x_cgo_free(void *p)$/;"	f
x_cgo_init	./runtime/cgo/callbacks.go	/^var x_cgo_init byte$/;"	v
x_cgo_init	./runtime/cgo/gcc_darwin_386.c	/^x_cgo_init(G *g)$/;"	f
x_cgo_init	./runtime/cgo/gcc_darwin_amd64.c	/^x_cgo_init(G *g)$/;"	f
x_cgo_init	./runtime/cgo/gcc_darwin_arm.c	/^x_cgo_init(G *g, void (*setg)(void*), void **tlsg, void **tlsbase)$/;"	f
x_cgo_init	./runtime/cgo/gcc_darwin_arm64.c	/^x_cgo_init(G *g, void (*setg)(void*), void **tlsg, void **tlsbase)$/;"	f
x_cgo_init	./runtime/cgo/gcc_dragonfly_amd64.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_freebsd_386.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_freebsd_amd64.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_freebsd_arm.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_linux_386.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_linux_amd64.c	/^x_cgo_init(G* g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_linux_arm.c	/^x_cgo_init(G *g, void (*setg)(void*), void **tlsg, void **tlsbase)$/;"	f
x_cgo_init	./runtime/cgo/gcc_linux_arm64.c	/^x_cgo_init(G *g, void (*setg)(void*), void **tlsg, void **tlsbase)$/;"	f
x_cgo_init	./runtime/cgo/gcc_linux_ppc64x.c	/^x_cgo_init(G *g, void (*setg)(void*), void **tlsbase)$/;"	f
x_cgo_init	./runtime/cgo/gcc_netbsd_386.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_netbsd_amd64.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_netbsd_arm.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_openbsd_386.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_openbsd_amd64.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_solaris_amd64.c	/^x_cgo_init(G *g, void (*setg)(void*))$/;"	f
x_cgo_init	./runtime/cgo/gcc_windows_386.c	/^x_cgo_init(G *g)$/;"	f
x_cgo_init	./runtime/cgo/gcc_windows_amd64.c	/^x_cgo_init(G *g)$/;"	f
x_cgo_inittls	./runtime/cgo/gcc_android_arm.c	/^void (*x_cgo_inittls)(void **tlsg, void **tlsbase) = inittls;$/;"	v
x_cgo_inittls	./runtime/cgo/gcc_linux_arm.c	/^void (*x_cgo_inittls)(void **tlsg, void **tlsbase);$/;"	v
x_cgo_inittls	./runtime/cgo/gcc_linux_arm64.c	/^void (*x_cgo_inittls)(void **tlsg, void **tlsbase);$/;"	v
x_cgo_inittls	./runtime/cgo/gcc_linux_ppc64x.c	/^void (*x_cgo_inittls)(void **tlsg, void **tlsbase);$/;"	v
x_cgo_malloc	./runtime/cgo/callbacks.go	/^var x_cgo_malloc byte$/;"	v
x_cgo_malloc	./runtime/cgo/gcc_util.c	/^x_cgo_malloc(void *p)$/;"	f
x_cgo_notify_runtime_init_done	./runtime/cgo/callbacks.go	/^var x_cgo_notify_runtime_init_done byte$/;"	v
x_cgo_notify_runtime_init_done	./runtime/cgo/gcc_libinit.c	/^x_cgo_notify_runtime_init_done(void* dummy) {$/;"	f
x_cgo_notify_runtime_init_done	./runtime/cgo/gcc_libinit_linux_ppc64x.c	/^x_cgo_notify_runtime_init_done(void* dummy) {$/;"	f
x_cgo_notify_runtime_init_done	./runtime/cgo/gcc_libinit_openbsd.c	/^x_cgo_notify_runtime_init_done(void* dummy) {$/;"	f
x_cgo_notify_runtime_init_done	./runtime/cgo/gcc_libinit_windows.c	/^x_cgo_notify_runtime_init_done(void* dummy) {$/;"	f
x_cgo_panicmem	./runtime/cgo/gcc_signal_darwin_armx.c	/^uintptr_t x_cgo_panicmem;$/;"	v
x_cgo_panicmem	./runtime/cgo/gcc_signal_darwin_lldb.c	/^uintptr_t x_cgo_panicmem;$/;"	v
x_cgo_panicmem	./runtime/cgo/signal_darwin_armx.go	/^var x_cgo_panicmem uintptr$/;"	v
x_cgo_setenv	./runtime/cgo/gcc_setenv.c	/^x_cgo_setenv(char **arg)$/;"	f
x_cgo_setenv	./runtime/cgo/setenv.go	/^var x_cgo_setenv byte$/;"	v
x_cgo_sys_thread_create	./runtime/cgo/callbacks.go	/^var x_cgo_sys_thread_create byte$/;"	v
x_cgo_sys_thread_create	./runtime/cgo/gcc_libinit.c	/^x_cgo_sys_thread_create(void* (*func)(void*), void* arg) {$/;"	f
x_cgo_sys_thread_create	./runtime/cgo/gcc_libinit_linux_ppc64x.c	/^x_cgo_sys_thread_create(void* (*func)(void*), void* arg) {$/;"	f
x_cgo_sys_thread_create	./runtime/cgo/gcc_libinit_openbsd.c	/^x_cgo_sys_thread_create(void* (*func)(void*), void* arg) {$/;"	f
x_cgo_sys_thread_create	./runtime/cgo/gcc_libinit_windows.c	/^x_cgo_sys_thread_create(void* (*func)(void*), void* arg) {$/;"	f
x_cgo_thread_start	./runtime/cgo/callbacks.go	/^var x_cgo_thread_start byte$/;"	v
x_cgo_thread_start	./runtime/cgo/gcc_util.c	/^x_cgo_thread_start(ThreadStart *arg)$/;"	f
x_cgo_unsetenv	./runtime/cgo/gcc_setenv.c	/^x_cgo_unsetenv(char *arg)$/;"	f
x_cgo_unsetenv	./runtime/cgo/setenv.go	/^var x_cgo_unsetenv byte$/;"	v
xadd	./runtime/atomic_386.go	/^func xadd(ptr *uint32, delta int32) uint32$/;"	f
xadd	./runtime/atomic_amd64x.go	/^func xadd(ptr *uint32, delta int32) uint32$/;"	f
xadd	./runtime/atomic_arm.go	/^func xadd(val *uint32, delta int32) uint32 {$/;"	f
xadd	./runtime/atomic_arm64.go	/^func xadd(ptr *uint32, delta int32) uint32$/;"	f
xadd	./runtime/atomic_ppc64x.go	/^func xadd(ptr *uint32, delta int32) uint32$/;"	f
xadd64	./runtime/atomic_386.go	/^func xadd64(ptr *uint64, delta int64) uint64 {$/;"	f
xadd64	./runtime/atomic_amd64x.go	/^func xadd64(ptr *uint64, delta int64) uint64$/;"	f
xadd64	./runtime/atomic_arm.go	/^func xadd64(addr *uint64, delta int64) uint64 {$/;"	f
xadd64	./runtime/atomic_arm64.go	/^func xadd64(ptr *uint64, delta int64) uint64$/;"	f
xadd64	./runtime/atomic_ppc64x.go	/^func xadd64(ptr *uint64, delta int64) uint64$/;"	f
xaddint64	./runtime/stubs.go	/^func xaddint64(ptr *int64, delta int64) int64 {$/;"	f
xadduintptr	./runtime/atomic_386.go	/^func xadduintptr(ptr *uintptr, delta uintptr) uintptr$/;"	f
xadduintptr	./runtime/atomic_amd64x.go	/^func xadduintptr(ptr *uintptr, delta uintptr) uintptr$/;"	f
xadduintptr	./runtime/atomic_arm.go	/^func xadduintptr(ptr *uintptr, delta uintptr) uintptr$/;"	f
xadduintptr	./runtime/atomic_arm64.go	/^func xadduintptr(ptr *uintptr, delta uintptr) uintptr$/;"	f
xadduintptr	./runtime/atomic_ppc64x.go	/^func xadduintptr(ptr *uintptr, delta uintptr) uintptr$/;"	f
xatan	./math/atan.go	/^func xatan(x float64) float64 {$/;"	f
xatexit	./cmd/dist/util.go	/^func xatexit(f func()) {$/;"	f
xbuf	./crypto/md5/gen.go	/^	var xbuf [16]uint32$/;"	v
xbuf	./crypto/md5/md5block.go	/^	var xbuf [16]uint32$/;"	v
xchg	./runtime/atomic_386.go	/^func xchg(ptr *uint32, new uint32) uint32$/;"	f
xchg	./runtime/atomic_amd64x.go	/^func xchg(ptr *uint32, new uint32) uint32$/;"	f
xchg	./runtime/atomic_arm.go	/^func xchg(addr *uint32, v uint32) uint32 {$/;"	f
xchg	./runtime/atomic_arm64.go	/^func xchg(ptr *uint32, new uint32) uint32$/;"	f
xchg	./runtime/atomic_ppc64x.go	/^func xchg(ptr *uint32, new uint32) uint32$/;"	f
xchg64	./runtime/atomic_386.go	/^func xchg64(ptr *uint64, new uint64) uint64 {$/;"	f
xchg64	./runtime/atomic_amd64x.go	/^func xchg64(ptr *uint64, new uint64) uint64$/;"	f
xchg64	./runtime/atomic_arm.go	/^func xchg64(addr *uint64, v uint64) uint64 {$/;"	f
xchg64	./runtime/atomic_arm64.go	/^func xchg64(ptr *uint64, new uint64) uint64$/;"	f
xchg64	./runtime/atomic_ppc64x.go	/^func xchg64(ptr *uint64, new uint64) uint64$/;"	f
xchgp	./runtime/atomic_pointer.go	/^func xchgp(ptr unsafe.Pointer, new unsafe.Pointer) unsafe.Pointer {$/;"	f
xchgp1	./runtime/atomic_386.go	/^func xchgp1(ptr unsafe.Pointer, new unsafe.Pointer) unsafe.Pointer$/;"	f
xchgp1	./runtime/atomic_amd64x.go	/^func xchgp1(ptr unsafe.Pointer, new unsafe.Pointer) unsafe.Pointer$/;"	f
xchgp1	./runtime/atomic_arm.go	/^func xchgp1(addr unsafe.Pointer, v unsafe.Pointer) unsafe.Pointer {$/;"	f
xchgp1	./runtime/atomic_arm64.go	/^func xchgp1(ptr unsafe.Pointer, new unsafe.Pointer) unsafe.Pointer$/;"	f
xchgp1	./runtime/atomic_ppc64x.go	/^func xchgp1(ptr unsafe.Pointer, new unsafe.Pointer) unsafe.Pointer$/;"	f
xchguintptr	./runtime/atomic_386.go	/^func xchguintptr(ptr *uintptr, new uintptr) uintptr$/;"	f
xchguintptr	./runtime/atomic_amd64x.go	/^func xchguintptr(ptr *uintptr, new uintptr) uintptr$/;"	f
xchguintptr	./runtime/atomic_arm.go	/^func xchguintptr(addr *uintptr, v uintptr) uintptr {$/;"	f
xchguintptr	./runtime/atomic_arm64.go	/^func xchguintptr(ptr *uintptr, new uintptr) uintptr$/;"	f
xchguintptr	./runtime/atomic_ppc64x.go	/^func xchguintptr(ptr *uintptr, new uintptr) uintptr$/;"	f
xcmp	./cmd/internal/obj/arm/asm5.go	/^var xcmp [C_GOK + 1][C_GOK + 1]uint8$/;"	v
xcmp	./cmd/internal/obj/arm64/asm7.go	/^var xcmp [C_NCLASS][C_NCLASS]uint8$/;"	v
xcmp	./cmd/internal/obj/ppc64/asm9.go	/^var xcmp [C_NCLASS][C_NCLASS]uint8$/;"	v
xdcl	./cmd/compile/internal/gc/go.y	/^xdcl:$/;"	l
xdcl_list	./cmd/compile/internal/gc/go.y	/^xdcl_list:$/;"	l
xdefine	./cmd/link/internal/ld/lib.go	/^func xdefine(p string, t int, v int64) {$/;"	f
xed	./cmd/internal/rsc.io/x86/x86asm/xedext_test.go	/^func xed(ext *ExtDis) error {$/;"	f
xedEnd	./cmd/internal/rsc.io/x86/x86asm/xedext_test.go	/^	var xedEnd = []byte("# end of text section")$/;"	v
xedEnd1	./cmd/internal/rsc.io/x86/x86asm/xedext_test.go	/^	var xedEnd1 = []byte("# Errors")$/;"	v
xedManualTests	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^var xedManualTests = `$/;"	v
xedUnsupported	./cmd/internal/rsc.io/x86/x86asm/xed_test.go	/^var xedUnsupported = strings.Fields(`$/;"	v
xer	./runtime/signal_linux_ppc64x.go	/^func (c *sigctxt) xer() uint64   { return c.regs().xer }$/;"	f
xerr	./os/os_test.go	/^	var xerr error \/\/ error to return for x$/;"	v
xexit	./cmd/dist/util.go	/^func xexit(n int) {$/;"	f
xflagparse	./cmd/dist/main.go	/^func xflagparse(maxargs int) {$/;"	f
xfndcl	./cmd/compile/internal/gc/go.y	/^xfndcl:$/;"	l
xfol	./cmd/internal/obj/arm/obj5.go	/^func xfol(ctxt *obj.Link, p *obj.Prog, last **obj.Prog) {$/;"	f
xfol	./cmd/internal/obj/arm64/obj7.go	/^func xfol(ctxt *obj.Link, p *obj.Prog, last **obj.Prog) {$/;"	f
xfol	./cmd/internal/obj/ppc64/obj9.go	/^func xfol(ctxt *obj.Link, p *obj.Prog, last **obj.Prog) {$/;"	f
xfol	./cmd/internal/obj/x86/obj6.go	/^func xfol(ctxt *obj.Link, p *obj.Prog, last **obj.Prog) {$/;"	f
xgen	./cmd/compile/internal/arm64/gsubr.go	/^func xgen(n *gc.Node, a *gc.Node, o int) bool {$/;"	f
xgen	./cmd/compile/internal/ppc64/gsubr.go	/^func xgen(n *gc.Node, a *gc.Node, o int) bool {$/;"	f
xgetgoarm	./cmd/dist/util.go	/^func xgetgoarm() string {$/;"	f
xgetwd	./cmd/dist/util.go	/^func xgetwd() string {$/;"	f
xint	./encoding/json/decode_test.go	/^	var xint Xint$/;"	v
xm	./cmd/compile/internal/big/float.go	/^		var xm, ym Word$/;"	v
xm	./math/big/float.go	/^		var xm, ym Word$/;"	v
xmain	./cmd/dist/main.go	/^func xmain() {$/;"	f
xmalloc	./cmd/compile/internal/gc/plive.go	/^func xmalloc(size uint32) interface{} {$/;"	f
xmkdir	./cmd/dist/util.go	/^func xmkdir(p string) {$/;"	f
xmkdirall	./cmd/dist/util.go	/^func xmkdirall(p string) {$/;"	f
xml	./encoding/xml/marshal.go	/^\/\/     - the value of the XMLName field of type xml.Name$/;"	t
xml	./encoding/xml/read.go	/^\/\/   * If the struct has a field named XMLName of type xml.Name,$/;"	t
xmlInput	./encoding/xml/xml_test.go	/^var xmlInput = []string{$/;"	v
xmmreg	./runtime/defs_linux_386.go	/^type xmmreg struct {$/;"	t
xmmreg	./runtime/defs_linux_amd64.go	/^type xmmreg struct {$/;"	t
xmmreg1	./runtime/defs_linux_amd64.go	/^type xmmreg1 struct {$/;"	t
xoffset	./cmd/compile/internal/gc/pgen.go	/^	var xoffset int64$/;"	v
xoffset	./cmd/compile/internal/gc/plive.go	/^	var xoffset int64$/;"	v
xor	./cmd/compile/internal/big/nat.go	/^func (z nat) xor(x, y nat) nat {$/;"	f
xor	./math/big/nat.go	/^func (z nat) xor(x, y nat) nat {$/;"	f
xorBytes	./crypto/cipher/xor.go	/^func xorBytes(dst, a, b []byte) int {$/;"	f
xorKeyStream	./crypto/rc4/rc4_asm.go	/^func xorKeyStream(dst, src *byte, n int, state *[256]uint32, i, j *uint8)$/;"	f
xorKeyStreamGeneric	./crypto/rc4/rc4.go	/^func (c *Cipher) xorKeyStreamGeneric(dst, src []byte) {$/;"	f
xorWords	./crypto/cipher/xor.go	/^func xorWords(dst, a, b []byte) {$/;"	f
xprintf	./cmd/dist/util.go	/^func xprintf(format string, args ...interface{}) {$/;"	f
xrange	./runtime/runtime-gdb.py	/^	xrange = range$/;"	v
xreaddir	./cmd/dist/util.go	/^func xreaddir(dir string) []string {$/;"	f
xreaddirfiles	./cmd/dist/util.go	/^func xreaddirfiles(dir string) []string {$/;"	f
xrealwd	./cmd/dist/util.go	/^func xrealwd(path string) string {$/;"	f
xremove	./cmd/dist/util.go	/^func xremove(p string) {$/;"	f
xremoveall	./cmd/dist/util.go	/^func xremoveall(p string) {$/;"	f
xsamefile	./cmd/dist/util.go	/^func xsamefile(f1, f2 string) bool {$/;"	f
xsglobal	./runtime/mfinal_test.go	/^var xsglobal []byte$/;"	v
xtoi	./net/parse.go	/^func xtoi(s string, i0 int) (n int, i int, ok bool) {$/;"	f
xtoi2	./net/parse.go	/^func xtoi2(s string, e byte) (byte, bool) {$/;"	f
xtop	./cmd/compile/internal/gc/go.go	/^var xtop *NodeList$/;"	v
xtramodes	./cmd/compile/internal/arm/peep.go	/^func xtramodes(g *gc.Graph, r *gc.Flow, a *obj.Addr) bool {$/;"	f
xtree	./runtime/stack_test.go	/^	var xtree *xtreeNode$/;"	v
xtreeNode	./runtime/stack_test.go	/^type xtreeNode struct {$/;"	t
xworkdir	./cmd/dist/util.go	/^func xworkdir() string {$/;"	f
xx	./crypto/elliptic/p224.go	/^	var xx, yy, zz p224FieldElement$/;"	v
xx	./crypto/elliptic/p256.go	/^	var xx, yy [p256Limbs]uint32$/;"	v
y	./debug/dwarf/testdata/typedef.c	/^	int y : 4;$/;"	m	struct:my_struct	file:
y0	./math/all_test.go	/^var y0 = []float64{$/;"	v
y0SC	./math/all_test.go	/^var y0SC = []float64{$/;"	v
y1	./math/all_test.go	/^var y1 = []float64{$/;"	v
y1	./runtime/runtime1.go	/^	var y1 y1t$/;"	v
y1SC	./math/all_test.go	/^var y1SC = []float64{$/;"	v
y1t	./runtime/runtime1.go	/^	type y1t struct {$/;"	t
y2	./math/all_test.go	/^var y2 = []float64{$/;"	v
y2SC	./math/all_test.go	/^var y2SC = []float64{$/;"	v
yCbCrModel	./image/color/ycbcr.go	/^func yCbCrModel(c Color) Color {$/;"	f
yM3	./math/all_test.go	/^var yM3 = []float64{$/;"	v
yM3SC	./math/all_test.go	/^var yM3SC = []float64{$/;"	v
yWords	./cmd/compile/internal/big/int.go	/^	var yWords nat$/;"	v
yWords	./math/big/int.go	/^	var yWords nat$/;"	v
yaccpar	./cmd/yacc/yacc.go	/^var yaccpar string \/\/ will be processed version of yaccpartext: s\/$$\/prefix\/g$/;"	v
yaccpartext	./cmd/yacc/yacc.go	/^var yaccpartext = `$/;"	v
yaddl	./cmd/internal/obj/x86/asm6.go	/^var yaddl = []ytab{$/;"	v
yaes	./cmd/internal/obj/x86/asm6.go	/^var yaes = []ytab{$/;"	v
yaes2	./cmd/internal/obj/x86/asm6.go	/^var yaes2 = []ytab{$/;"	v
ybswap	./cmd/internal/obj/x86/asm6.go	/^var ybswap = []ytab{$/;"	v
ybtl	./cmd/internal/obj/x86/asm6.go	/^var ybtl = []ytab{$/;"	v
ybyte	./cmd/internal/obj/x86/asm6.go	/^var ybyte = []ytab{$/;"	v
ycall	./cmd/internal/obj/x86/asm6.go	/^var ycall = []ytab{$/;"	v
ycmpb	./cmd/internal/obj/x86/asm6.go	/^var ycmpb = []ytab{$/;"	v
ycmpl	./cmd/internal/obj/x86/asm6.go	/^var ycmpl = []ytab{$/;"	v
ycompp	./cmd/internal/obj/x86/asm6.go	/^var ycompp = []ytab{$/;"	v
ycover	./cmd/internal/obj/x86/asm6.go	/^var ycover [Ymax * Ymax]uint8$/;"	v
ycrc32l	./cmd/internal/obj/x86/asm6.go	/^var ycrc32l = []ytab{$/;"	v
ydivb	./cmd/internal/obj/x86/asm6.go	/^var ydivb = []ytab{$/;"	v
ydivl	./cmd/internal/obj/x86/asm6.go	/^var ydivl = []ytab{$/;"	v
yduff	./cmd/internal/obj/x86/asm6.go	/^var yduff = []ytab{$/;"	v
yearDayLocations	./time/time_test.go	/^var yearDayLocations = []*Location{$/;"	v
yearDayTests	./time/time_test.go	/^var yearDayTests = []YearDayTest{$/;"	v
yesNo	./fmt/fmt_test.go	/^	var yesNo = []bool{true, false}$/;"	v
yet	./go/types/assignments.go	/^	\/\/ If the lhs doesn't have a type yet, use the type of x.$/;"	t
yextrw	./cmd/internal/obj/x86/asm6.go	/^var yextrw = []ytab{$/;"	v
yfadd	./cmd/internal/obj/x86/asm6.go	/^var yfadd = []ytab{$/;"	v
yfaddp	./cmd/internal/obj/x86/asm6.go	/^var yfaddp = []ytab{$/;"	v
yfcmv	./cmd/internal/obj/x86/asm6.go	/^var yfcmv = []ytab{$/;"	v
yfmvd	./cmd/internal/obj/x86/asm6.go	/^var yfmvd = []ytab{$/;"	v
yfmvdp	./cmd/internal/obj/x86/asm6.go	/^var yfmvdp = []ytab{$/;"	v
yfmvf	./cmd/internal/obj/x86/asm6.go	/^var yfmvf = []ytab{$/;"	v
yfmvp	./cmd/internal/obj/x86/asm6.go	/^var yfmvp = []ytab{$/;"	v
yfmvx	./cmd/internal/obj/x86/asm6.go	/^var yfmvx = []ytab{$/;"	v
yfuncdata	./cmd/internal/obj/x86/asm6.go	/^var yfuncdata = []ytab{$/;"	v
yfxch	./cmd/internal/obj/x86/asm6.go	/^var yfxch = []ytab{$/;"	v
yieldloop	./runtime/asm_arm.s	/^yieldloop:$/;"	l
yimul	./cmd/internal/obj/x86/asm6.go	/^var yimul = []ytab{$/;"	v
yimul3	./cmd/internal/obj/x86/asm6.go	/^var yimul3 = []ytab{$/;"	v
yin	./cmd/internal/obj/x86/asm6.go	/^var yin = []ytab{$/;"	v
yincb	./cmd/internal/obj/x86/asm6.go	/^var yincb = []ytab{$/;"	v
yincl	./cmd/internal/obj/x86/asm6.go	/^var yincl = []ytab{$/;"	v
yincq	./cmd/internal/obj/x86/asm6.go	/^var yincq = []ytab{$/;"	v
yincw	./cmd/internal/obj/x86/asm6.go	/^var yincw = []ytab{$/;"	v
yinsr	./cmd/internal/obj/x86/asm6.go	/^var yinsr = []ytab{$/;"	v
yinsrw	./cmd/internal/obj/x86/asm6.go	/^var yinsrw = []ytab{$/;"	v
yint	./cmd/internal/obj/x86/asm6.go	/^var yint = []ytab{$/;"	v
yjcond	./cmd/internal/obj/x86/asm6.go	/^var yjcond = []ytab{$/;"	v
yjmp	./cmd/internal/obj/x86/asm6.go	/^var yjmp = []ytab{$/;"	v
ylo	./runtime/vlrt.go	/^	var ylo, yhi uint32$/;"	v
yloop	./cmd/internal/obj/x86/asm6.go	/^var yloop = []ytab{$/;"	v
ym_rl	./cmd/internal/obj/x86/asm6.go	/^var ym_rl = []ytab{$/;"	v
ymb_rl	./cmd/internal/obj/x86/asm6.go	/^var ymb_rl = []ytab{$/;"	v
ymbs	./cmd/internal/obj/x86/asm6.go	/^var ymbs = []ytab{$/;"	v
ymfp	./cmd/internal/obj/x86/asm6.go	/^var ymfp = []ytab{$/;"	v
yml_mb	./cmd/internal/obj/x86/asm6.go	/^var yml_mb = []ytab{$/;"	v
yml_rl	./cmd/internal/obj/x86/asm6.go	/^var yml_rl = []ytab{$/;"	v
ymm	./cmd/internal/obj/x86/asm6.go	/^var ymm = []ytab{$/;"	v
ymovb	./cmd/internal/obj/x86/asm6.go	/^var ymovb = []ytab{$/;"	v
ymovl	./cmd/internal/obj/x86/asm6.go	/^var ymovl = []ytab{$/;"	v
ymovq	./cmd/internal/obj/x86/asm6.go	/^var ymovq = []ytab{$/;"	v
ymovtab	./cmd/internal/obj/x86/asm6.go	/^var ymovtab = []Movtab{$/;"	v
ymovw	./cmd/internal/obj/x86/asm6.go	/^var ymovw = []ytab{$/;"	v
ymr	./cmd/internal/obj/x86/asm6.go	/^var ymr = []ytab{$/;"	v
ymr_ml	./cmd/internal/obj/x86/asm6.go	/^var ymr_ml = []ytab{$/;"	v
ymrxr	./cmd/internal/obj/x86/asm6.go	/^var ymrxr = []ytab{$/;"	v
ymshuf	./cmd/internal/obj/x86/asm6.go	/^var ymshuf = []ytab{$/;"	v
ymshufb	./cmd/internal/obj/x86/asm6.go	/^var ymshufb = []ytab{$/;"	v
ymskb	./cmd/internal/obj/x86/asm6.go	/^var ymskb = []ytab{$/;"	v
ynone	./cmd/internal/obj/x86/asm6.go	/^var ynone = []ytab{$/;"	v
ynop	./cmd/internal/obj/x86/asm6.go	/^var ynop = []ytab{$/;"	v
yourTurn	./syscall/srpc_nacl.go	/^var yourTurn srpc$/;"	v
ypcdata	./cmd/internal/obj/x86/asm6.go	/^var ypcdata = []ytab{$/;"	v
ypopl	./cmd/internal/obj/x86/asm6.go	/^var ypopl = []ytab{$/;"	v
yprefetch	./cmd/internal/obj/x86/asm6.go	/^var yprefetch = []ytab{$/;"	v
yps	./cmd/internal/obj/x86/asm6.go	/^var yps = []ytab{$/;"	v
ypsdq	./cmd/internal/obj/x86/asm6.go	/^var ypsdq = []ytab{$/;"	v
ypushl	./cmd/internal/obj/x86/asm6.go	/^var ypushl = []ytab{$/;"	v
yrb_mb	./cmd/internal/obj/x86/asm6.go	/^var yrb_mb = []ytab{$/;"	v
yret	./cmd/internal/obj/x86/asm6.go	/^var yret = []ytab{$/;"	v
yrl_m	./cmd/internal/obj/x86/asm6.go	/^var yrl_m = []ytab{$/;"	v
yrl_ml	./cmd/internal/obj/x86/asm6.go	/^var yrl_ml = []ytab{$/;"	v
ysahf	./cmd/internal/obj/x86/asm6.go	/^var ysahf = []ytab{$/;"	v
yscond	./cmd/internal/obj/x86/asm6.go	/^var yscond = []ytab{$/;"	v
yshb	./cmd/internal/obj/x86/asm6.go	/^var yshb = []ytab{$/;"	v
yshl	./cmd/internal/obj/x86/asm6.go	/^var yshl = []ytab{$/;"	v
ystcw	./cmd/internal/obj/x86/asm6.go	/^var ystcw = []ytab{$/;"	v
ystsw	./cmd/internal/obj/x86/asm6.go	/^var ystsw = []ytab{$/;"	v
ysvrs	./cmd/internal/obj/x86/asm6.go	/^var ysvrs = []ytab{$/;"	v
ytab	./cmd/internal/obj/x86/asm6.go	/^type ytab struct {$/;"	t
ytestb	./cmd/internal/obj/x86/asm6.go	/^var ytestb = []ytab{$/;"	v
ytestl	./cmd/internal/obj/x86/asm6.go	/^var ytestl = []ytab{$/;"	v
ytext	./cmd/internal/obj/x86/asm6.go	/^var ytext = []ytab{$/;"	v
yxchg	./cmd/internal/obj/x86/asm6.go	/^var yxchg = []ytab{$/;"	v
yxcmp	./cmd/internal/obj/x86/asm6.go	/^var yxcmp = []ytab{$/;"	v
yxcmpi	./cmd/internal/obj/x86/asm6.go	/^var yxcmpi = []ytab{$/;"	v
yxcvfl	./cmd/internal/obj/x86/asm6.go	/^var yxcvfl = []ytab{$/;"	v
yxcvfq	./cmd/internal/obj/x86/asm6.go	/^var yxcvfq = []ytab{$/;"	v
yxcvlf	./cmd/internal/obj/x86/asm6.go	/^var yxcvlf = []ytab{$/;"	v
yxcvm1	./cmd/internal/obj/x86/asm6.go	/^var yxcvm1 = []ytab{$/;"	v
yxcvm2	./cmd/internal/obj/x86/asm6.go	/^var yxcvm2 = []ytab{$/;"	v
yxcvqf	./cmd/internal/obj/x86/asm6.go	/^var yxcvqf = []ytab{$/;"	v
yxm	./cmd/internal/obj/x86/asm6.go	/^var yxm = []ytab{$/;"	v
yxmov	./cmd/internal/obj/x86/asm6.go	/^var yxmov = []ytab{$/;"	v
yxmq	./cmd/internal/obj/x86/asm6.go	/^var yxmq = []ytab{$/;"	v
yxorb	./cmd/internal/obj/x86/asm6.go	/^var yxorb = []ytab{$/;"	v
yxorl	./cmd/internal/obj/x86/asm6.go	/^var yxorl = []ytab{$/;"	v
yxr	./cmd/internal/obj/x86/asm6.go	/^var yxr = []ytab{$/;"	v
yxr_ml	./cmd/internal/obj/x86/asm6.go	/^var yxr_ml = []ytab{$/;"	v
yxrrl	./cmd/internal/obj/x86/asm6.go	/^var yxrrl = []ytab{$/;"	v
yxshuf	./cmd/internal/obj/x86/asm6.go	/^var yxshuf = []ytab{$/;"	v
yy	./cmd/compile/internal/gc/lex.go	/^type yy struct{}$/;"	t
yyAct	./cmd/compile/internal/gc/y.go	/^var yyAct = [...]int{$/;"	v
yyChk	./cmd/compile/internal/gc/y.go	/^var yyChk = [...]int{$/;"	v
yyDef	./cmd/compile/internal/gc/y.go	/^var yyDef = [...]int{$/;"	v
yyDollar	./cmd/compile/internal/gc/y.go	/^	var yyDollar []yySymType$/;"	v
yyErrorMessage	./cmd/compile/internal/gc/y.go	/^func yyErrorMessage(state, lookAhead int) string {$/;"	f
yyErrorMessages	./cmd/compile/internal/gc/y.go	/^var yyErrorMessages = [...]struct {$/;"	v
yyExca	./cmd/compile/internal/gc/y.go	/^var yyExca = [...]int{$/;"	v
yyLexer	./cmd/compile/internal/gc/y.go	/^type yyLexer interface {$/;"	t
yyLexer	./cmd/yacc/doc.go	/^	type yyLexer interface {$/;"	t
yyNewParser	./cmd/compile/internal/gc/y.go	/^func yyNewParser() yyParser {$/;"	f
yyPact	./cmd/compile/internal/gc/y.go	/^var yyPact = [...]int{$/;"	v
yyParse	./cmd/compile/internal/gc/y.go	/^func yyParse(yylex yyLexer) int {$/;"	f
yyParser	./cmd/compile/internal/gc/y.go	/^type yyParser interface {$/;"	t
yyParser	./cmd/yacc/doc.go	/^	type yyParser interface {$/;"	t
yyParserImpl	./cmd/compile/internal/gc/y.go	/^type yyParserImpl struct {$/;"	t
yyPgo	./cmd/compile/internal/gc/y.go	/^var yyPgo = [...]int{$/;"	v
yyR1	./cmd/compile/internal/gc/y.go	/^var yyR1 = [...]int{$/;"	v
yyR2	./cmd/compile/internal/gc/y.go	/^var yyR2 = [...]int{$/;"	v
yyStatenames	./cmd/compile/internal/gc/y.go	/^var yyStatenames = [...]string{}$/;"	v
yyStates	./cmd/compile/internal/gc/y.go	/^var yyStates []string$/;"	v
yyStatname	./cmd/compile/internal/gc/y.go	/^func yyStatname(s int) string {$/;"	f
yySymType	./cmd/compile/internal/gc/y.go	/^type yySymType struct {$/;"	t
yyTok1	./cmd/compile/internal/gc/y.go	/^var yyTok1 = [...]int{$/;"	v
yyTok2	./cmd/compile/internal/gc/y.go	/^var yyTok2 = [...]int{$/;"	v
yyTok3	./cmd/compile/internal/gc/y.go	/^var yyTok3 = [...]int{$/;"	v
yyTokenNames	./cmd/compile/internal/gc/y.go	/^var yyTokenNames []string$/;"	v
yyTokname	./cmd/compile/internal/gc/y.go	/^func yyTokname(c int) string {$/;"	f
yyToknames	./cmd/compile/internal/gc/y.go	/^var yyToknames = [...]string{$/;"	v
yyVAL	./cmd/compile/internal/gc/y.go	/^	var yyVAL yySymType$/;"	v
yy_isalnum	./cmd/compile/internal/gc/lex.go	/^func yy_isalnum(c int) bool {$/;"	f
yy_isalpha	./cmd/compile/internal/gc/lex.go	/^func yy_isalpha(c int) bool {$/;"	f
yy_isalpha	./cmd/link/internal/ld/sym.go	/^func yy_isalpha(c int) bool {$/;"	f
yy_isdigit	./cmd/compile/internal/gc/lex.go	/^func yy_isdigit(c int) bool {$/;"	f
yy_isspace	./cmd/compile/internal/gc/lex.go	/^func yy_isspace(c int) bool {$/;"	f
yyerror_lastsyntax	./cmd/compile/internal/gc/subr.go	/^var yyerror_lastsyntax int$/;"	v
yyerrorl	./cmd/compile/internal/gc/subr.go	/^func yyerrorl(line int, format string, args ...interface{}) {$/;"	f
yylast	./cmd/compile/internal/gc/lex.go	/^var yylast int$/;"	v
yylex	./cmd/compile/internal/gc/lex.go	/^func yylex(yylval *yySymType) int32 {$/;"	f
yylex1	./cmd/compile/internal/gc/y.go	/^func yylex1(lex yyLexer, lval *yySymType) (char, token int) {$/;"	f
yylval	./cmd/compile/internal/gc/y.go	/^	var yylval yySymType$/;"	v
yyn	./cmd/compile/internal/gc/y.go	/^	var yyn int$/;"	v
yyparse	./cmd/compile/internal/gc/lex.go	/^func yyparse() {$/;"	f
yypgo	./cmd/yacc/yacc.go	/^var yypgo [][]int$/;"	v
yyprev	./cmd/compile/internal/gc/lex.go	/^var yyprev int$/;"	v
yytfix	./cmd/compile/internal/gc/lex.go	/^var yytfix = []struct {$/;"	v
z	./debug/dwarf/testdata/typedef.c	/^	int z[0];$/;"	m	struct:my_struct	file:
z1	./crypto/elliptic/p224.go	/^	var z1, x2, y2, z2 p224FieldElement$/;"	v
z1z1	./crypto/elliptic/p224.go	/^	var z1z1, z2z2, u1, u2, s1, s2, h, i, j, r, v p224FieldElement$/;"	v
z1z1	./crypto/elliptic/p256.go	/^	var z1z1, z1z1z1, s2, u2, h, i, j, r, rr, v, tmp [p256Limbs]uint32$/;"	v
z1z1	./crypto/elliptic/p256.go	/^	var z1z1, z1z1z1, z2z2, z2z2z2, s1, s2, u1, u2, h, i, j, r, rr, v, tmp [p256Limbs]uint32$/;"	v
z2	./cmd/compile/internal/big/int_test.go	/^	var z2 Int$/;"	v
z2	./math/big/int_test.go	/^	var z2 Int$/;"	v
zForAffine	./crypto/elliptic/elliptic.go	/^func zForAffine(x, y *big.Int) *big.Int {$/;"	f
zInv	./crypto/elliptic/p256.go	/^	var zInv, zInvSq [p256Limbs]uint32$/;"	v
zero	./cmd/compile/internal/amd64/gsubr.go	/^		var zero gc.Node$/;"	v
zero	./cmd/compile/internal/arm/cgen.go	/^	var zero gc.Node$/;"	v
zero	./cmd/compile/internal/big/int_test.go	/^	var zero Int$/;"	v
zero	./cmd/compile/internal/big/rat_test.go	/^	var zero Rat$/;"	v
zero	./cmd/compile/internal/gc/cgen.go	/^	var zero Node$/;"	v
zero	./cmd/compile/internal/gc/gen.go	/^			var zero Node$/;"	v
zero	./cmd/compile/internal/gc/gen.go	/^		var zero Mpflt$/;"	v
zero	./cmd/compile/internal/x86/cgen.go	/^	var zero gc.Node$/;"	v
zero	./cmd/link/internal/ld/elf.go	/^	var zero = make([]byte, 4)$/;"	v
zero	./go/types/token_test.go	/^	var zero token.Token$/;"	v
zero	./io/pipe.go	/^var zero [0]byte$/;"	v
zero	./math/big/int_test.go	/^	var zero Int$/;"	v
zero	./math/big/rat_test.go	/^	var zero Rat$/;"	v
zero	./math/cmplx/cmath_test.go	/^	var zero = complex(0, 0)$/;"	v
zero	./runtime/netpoll_solaris.go	/^	var zero timespec$/;"	v
zero	./runtime/race/testdata/mop_test.go	/^	var zero int = 0$/;"	v
zero	./text/template/exec.go	/^var zero reflect.Value$/;"	v
zero386	./runtime/mkduff.go	/^func zero386(w io.Writer) {$/;"	f
zeroAMD64	./runtime/mkduff.go	/^func zeroAMD64(w io.Writer) {$/;"	f
zeroARM	./runtime/mkduff.go	/^func zeroARM(w io.Writer) {$/;"	f
zeroARM64	./runtime/mkduff.go	/^func zeroARM64(w io.Writer) {$/;"	f
zeroArgs	./text/template/exec_test.go	/^func zeroArgs() string {$/;"	f
zeroArray	./debug/dwarf/type.go	/^func zeroArray(t *Type) {$/;"	f
zeroBlock	./archive/tar/common.go	/^var zeroBlock = make([]byte, blockSize)$/;"	v
zeroErrReader	./io/io_test.go	/^type zeroErrReader struct {$/;"	t
zeroFile	./syscall/fs_nacl.go	/^type zeroFile struct{}$/;"	t
zeroFill	./fmt/fmt_test.go	/^func zeroFill(prefix string, width int, suffix string) string {$/;"	f
zeroPPC64x	./runtime/mkduff.go	/^func zeroPPC64x(w io.Writer) {$/;"	f
zeroProcAttr	./syscall/exec_plan9.go	/^var zeroProcAttr ProcAttr$/;"	v
zeroProcAttr	./syscall/exec_unix.go	/^var zeroProcAttr ProcAttr$/;"	v
zeroProcAttr	./syscall/exec_windows.go	/^var zeroProcAttr ProcAttr$/;"	v
zeroReader	./bufio/bufio_test.go	/^type zeroReader struct{}$/;"	t
zeroReader	./crypto/ecdsa/ecdsa.go	/^var zeroReader = &zr{}$/;"	v
zeroSource	./crypto/tls/handshake_server_test.go	/^type zeroSource struct{}$/;"	t
zeroSysProcAttr	./syscall/exec_plan9.go	/^var zeroSysProcAttr SysProcAttr$/;"	v
zeroSysProcAttr	./syscall/exec_unix.go	/^var zeroSysProcAttr SysProcAttr$/;"	v
zeroSysProcAttr	./syscall/exec_windows.go	/^var zeroSysProcAttr SysProcAttr$/;"	v
zerobase	./runtime/malloc.go	/^var zerobase uintptr$/;"	v
zerobuf	./runtime/hashmap.go	/^var zerobuf struct {$/;"	v
zerobuf	./syscall/fd_nacl.go	/^var zerobuf [0]byte$/;"	v
zeroes	./cmd/compile/internal/big/intconv.go	/^	var zeroes int \/\/ zero characters (actually cs[0]) as left-most digits ("%.8d")$/;"	v
zeroes	./cmd/link/internal/amd64/asm.go	/^var zeroes string$/;"	v
zeroes	./compress/flate/deflate.go	/^var zeroes [32]int$/;"	v
zeroes	./math/big/intconv.go	/^	var zeroes int \/\/ zero characters (actually cs[0]) as left-most digits ("%.8d")$/;"	v
zerohandler	./os/signal/signal.go	/^		var zerohandler handler$/;"	v
zerondr	./runtime/os1_darwin.go	/^var zerondr machndr$/;"	v
zerorange	./cmd/compile/internal/amd64/ggen.go	/^func zerorange(p *obj.Prog, frame int64, lo int64, hi int64, ax *uint32) *obj.Prog {$/;"	f
zerorange	./cmd/compile/internal/arm/ggen.go	/^func zerorange(p *obj.Prog, frame int64, lo int64, hi int64, r0 *uint32) *obj.Prog {$/;"	f
zerorange	./cmd/compile/internal/arm64/ggen.go	/^func zerorange(p *obj.Prog, frame int64, lo int64, hi int64) *obj.Prog {$/;"	f
zerorange	./cmd/compile/internal/ppc64/ggen.go	/^func zerorange(p *obj.Prog, frame int64, lo int64, hi int64) *obj.Prog {$/;"	f
zerorange	./cmd/compile/internal/x86/ggen.go	/^func zerorange(p *obj.Prog, frame int64, lo int64, hi int64, ax *uint32) *obj.Prog {$/;"	f
zeros	./cmd/internal/rsc.io/arm/armasm/ext_test.go	/^var zeros = []byte{0, 0, 0, 0}$/;"	v
zeros	./crypto/tls/handshake_server_test.go	/^	var zeros [32]byte$/;"	v
zerosize	./cmd/compile/internal/gc/go.go	/^var zerosize int64$/;"	v
zerotiny	./runtime/hashmap.go	/^var zerotiny [1024]byte$/;"	v
zget2	./syscall/unzip_nacl.go	/^func zget2(b string) int {$/;"	f
zget4	./syscall/unzip_nacl.go	/^func zget4(b string) int {$/;"	f
zigzag	./image/jpeg/writer_test.go	/^var zigzag = [blockSize]int{$/;"	v
zinv	./crypto/elliptic/p224.go	/^	var zinv, zinvsq, outx, outy p224FieldElement$/;"	v
zipToTime	./syscall/unzip_nacl.go	/^func zipToTime(date, time int) int64 {$/;"	f
zlibTest	./compress/zlib/reader_test.go	/^type zlibTest struct {$/;"	t
zlibTests	./compress/zlib/reader_test.go	/^var zlibTests = []zlibTest{$/;"	v
zlibw	./compress/zlib/writer_test.go	/^	var zlibw *Writer$/;"	v
zone	./net/hosts.go	/^	var zone string$/;"	v
zone	./net/ipsock.go	/^	var zone string$/;"	v
zone	./time/genzabbrs.go	/^type zone struct {$/;"	t
zone	./time/zoneinfo.go	/^type zone struct {$/;"	t
zoneDirs	./time/zoneinfo_unix.go	/^var zoneDirs = []string{$/;"	v
zoneFile	./time/zoneinfo_ios.go	/^var zoneFile string$/;"	v
zoneToInt	./net/ipsock.go	/^func zoneToInt(zone string) int {$/;"	f
zoneToString	./net/ipsock.go	/^func zoneToString(zone int) string {$/;"	f
zoneTrans	./time/zoneinfo.go	/^type zoneTrans struct {$/;"	t
zoneinfo	./time/zoneinfo.go	/^var zoneinfo, _ = syscall.Getenv("ZONEINFO")$/;"	v
zones	./time/genzabbrs.go	/^type zones []*zone$/;"	t
zones	./time/zoneinfo_plan9.go	/^	var zones [2]zone$/;"	v
zr	./crypto/ecdsa/ecdsa.go	/^type zr struct {$/;"	t
zz	./cmd/compile/internal/big/nat.go	/^	var zz, one, rr, RR nat$/;"	v
zz	./cmd/compile/internal/big/nat.go	/^	var zz, r nat$/;"	v
zz	./debug/dwarf/testdata/typedef.c	/^	int zz [1];$/;"	m	struct:my_struct1	file:
zz	./debug/dwarf/testdata/typedef.c	/^	int zz[0];$/;"	m	struct:my_struct	file:
zz	./math/big/nat.go	/^	var zz, one, rr, RR nat$/;"	v
zz	./math/big/nat.go	/^	var zz, r nat$/;"	v
zzacent	./cmd/yacc/yacc.go	/^var zzacent = 0$/;"	v
zzclose	./cmd/yacc/yacc.go	/^var zzclose = 0$/;"	v
zzexcp	./cmd/yacc/yacc.go	/^var zzexcp = 0$/;"	v
zzgobest	./cmd/yacc/yacc.go	/^var zzgobest = 0$/;"	v
zzgoent	./cmd/yacc/yacc.go	/^var zzgoent = 0$/;"	v
zznewstate	./cmd/yacc/yacc.go	/^var zznewstate = 0$/;"	v
zzrrconf	./cmd/yacc/yacc.go	/^var zzrrconf = 0$/;"	v
zzsrconf	./cmd/yacc/yacc.go	/^var zzsrconf = 0$/;"	v
zzstate	./cmd/yacc/yacc.go	/^var zzstate = 0$/;"	v
